Generate java controllers and models based on the following swagger yaml:

openapi: 3.1.0
servers:
  - description: RCS Biz Center API for Staging
    url: https://api-qa.rcsbizcenter.com/api/1.1
  - description: RCS Biz Center API for Production
    url: https://api.rcsbizcenter.com/api/1.1
security:
  - jwtAuth: []
info:
  version: 1.1.12-oas3.1
  title: RCS Biz Center API 규격
  description: >
    # **RCS Biz Center API Version 1.1.12** 


    본 문서는 기업과 대행사에 제공되는 RCS Biz Center Open API의 규격을 기술합니다.


    Open API의 사용을 위해서는 사전에 RCS Biz Center에 기업/대행사 등록이 필요합니다.


    추가적인 보안을 위해 API를 연동하는 Client의 IP 를 RCS Biz Center에 사전 등록하여야 합니다.  RCS Biz
    Center 홈페이지 \"내 계정관리\"에서 등록하실 수 있습니다.


    Open API를 연동하고자 하는 경우 사전 개발 단계에서는 검수(STG) 환경에 별도 가입 및 승인 후 이용할 수 있습니다.  

    검수(STG) 환경에서 개발이 완료된 이후 상용(PRD) 연동을 하는 것을 권고합니다.      


    1. 검수(STG) - https://api-qa.rcsbizcenter.com/api/1.1

    2. 상용(PRD) - https://api.rcsbizcenter.com/api/1.1  


    RCS Biz Center Open API는 이통 3사가 정의한 정책에 의거하여 정보를 제공합니다. 따라서 일부 정보 제공상의 제약이
    있을 수 있습니다.  


    **Open API 문의처 : tech@rcsbizcenter.com**


    `참고문서`  
      + **[버튼 Action 목록 Link (2023.12.14)](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**
      + **[RCS A2P(단방향) 포맷 리스트 (24.02.07 공유버전)](https://file-qa.rcsbizcenter.com/240319170900114/TS-240319170900114-segSiw_1.xlsx)**   
      + **[RCS 양방향 포맷 리스트 (22.10.28 공유 버전)](https://file-qa.rcsbizcenter.com/221027084901492/TS-221027084901492-mIfP_1.xlsx)**  


    `수정 이력`  

    **1.1.12 주요 변경사항**  


    + RBC 기본 아이콘 및 브랜드 로고 신규 API 추가 [신규로고 API](#/logo)
      - 브랜드 로고는 승인 후 사용 가능
      - GET /logo/common : RBC 제공 기본 아이콘 조회
      - GET /brand/{brandId}/logo : 브랜드 로고 조회
      - POST /brand/{brandId}/logo : 브랜드 로고 등록
      - GET /brand/{brandId}/logo/{fileId} : 브랜드 로고 단건 조회
      - PUT /brand/{brandId}/logo/{fileId} : 브랜드 로고 수정
      - DELETE /brand/{brandId}/logo/{fileId} : 브랜드 로고 단건 삭제
      - PUT /brand/{brandId}/logo/{fileId}/cancel : 브랜드 로고 승인요청 취소
    + 템플릿 또는 메시지 발송 시, 변수 mTitleMedia, itemMedia 에 사용할 이미지는 브랜드 로고(logo) 등록 후 발급된 fileId를 지정해야 합니다.  

    + 브랜드 로고 추가에 따른 Webhook Noti 추가
      - notiType logo 추가 [스키마](#/NotiLogo)
      
        
    **1.1.11 주요 변경사항**  


    + 고객반응 메시지/대화방메뉴 통계 제공 필드 추가
      - GET /statQuery/message/{brandId} 응답 결과 내 messagebaseId 필드 추가 > 관련 스키마 [MessageStatData](#/MessageStatData)
      - GET /statQuery/messageButton/{brandId} 응답 결과 내 reactionType, cardNum, buttonNum 필드 추가 > 관련 스키마 [MessageButtonStatData](#/MessageButtonStatData)
      - GET /statQuery/persistentMenu/{brandId} 응답 결과 내 자동응답메시지인 경우, messagebaseId, reactionType, cardNum, buttonNum 필드 추가 > 관련 스키마 [PersistentMenuStatData.menuList.subList](#/MenuStatData)
      - 동영상 스트리밍 actionType 구분 iframeplayB 추가
      
      
    **1.1.10 주요 변경사항**  


    + 계정, 권한 구분 용어 변경
      - 기업관리자 : 마스터
      - 기업담당자 : 매니저
      - 브랜드 관리자 : 대표운영자
      - 브랜드 부관리자 : 운영자
      - 브랜드 대행사 : 운영자
    + 브랜드 생성 권한 확대 : 마스터, 매니저 계정

    + 브랜드 수정 권한 확대 : 브랜드 대표운영자(마스터), 브랜드 운영자(마스터, 매니저, 대행사)

    + 브랜드 영업정보, 브랜드 컬러 등 추가 설정 사항  

    + 대화방 안심마크 표시 여부 설정

    + 양방향 대화방 전환, 양방향 대행사 설정 없는 botId 대화방 등록

    + 양방향 대행사 설정 없는 대화방메뉴 등록/수정

    + 텍스트 템플릿 타이틀 선택형의 아이콘 이미지 변경  
      - 아이콘 이미지 변경으로 formattedString 상의 fileId 변경  
    + 자동응답메시지 간 연결(버튼, 칩리스트)

    + 자동응답메시지, 대화방메뉴 브랜드 소식 연결

    + 대행사 대상 레이아웃 기능

    + 신규 템플릿 상품 지원(규격 변경 사항 없음)

    + 신규 또는 기능 추가/변경된 API
      - POST /corp/brand
      - PUT /corp/brand/{brandId}
      - PUT /corp/{personId}/brand/{brandId}
      - GET /corp/{personId}/brand/{brandId}
      - DELETE /corp/{personId}/brand/{brandId}
      - DELETE /corp/{personId}/brand/{brandId}/privilege  
      - POST /brand/{brandId}/chatbot 
      - GET /brand/{brandId}/chatbot
      - PUT /brand/{brandId}/chatbot/{chatbotId}
      - GET /brand/{brandId}/chatbot/{chatbotId}
      - GET /brand/{brandId}/bidirectional/chatbot 
      - POST /brand/{brandId}/bidirectional/chatbot 
      - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId} 
      - GET /brand/{brandId}/bidirectional/chatbot/{chatbotId}
      - DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}  
      - POST /brand/{brandId}/autoreplymsg        
      - PUT /brand/{brandId}/autoreplymsg/{autoReplyMsgId}        
      - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu
      - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu
      - (신규) PUT /corp/brand/{brandId}/cancel
      - (신규) PUT /corp/{personId}/brand/{brandId}/cancel
      - (신규) PUT /agency/{agencyId}/brand/{brandId}
      - (신규) GET /messagebase/messagebaseform/{messagebaseformId}/logo
      - (신규) GET /baselayout/component        
      - (신규) GET /baselayout/sample        
      - (신규) GET /baselayout/sample/{sampleLayoutId}        
      - (신규) GET /baselayout/product/rule        
      - (신규) GET /brand/{brandId}/layout        
      - (신규) POST /brand/{brandId}/layout    
      - (신규) GET /brand/{brandId}/layout/{layoutId}        
      - (신규) PUT /brand/{brandId}/layout/{layoutId}        
      - (신규) DELETE /brand/{brandId}/layout/{layoutId}  


    **1.1.9 추가 변경사항(2023.03.16 변경 사항)**

    + 대화방 승인 취소 API 추가
      - PUT /brand/{brandId}/chatbot/{chatbotId}/cancel
    + 대화방명 변경 시 운영자 검수 승인 필요
      - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId} 발신번호 양방향 대화방 전환 시 대화방명 수정된 경우
      - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId} 대화방ID  양방향 대화방의 대화방명
      - PUT /brand/{brandId}/chatbot/{chatbotId} 발신번호 대화방명 수정 시
      - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId} 양방향 대화방 대화방명 수정 시
    + 브랜드 채널 노출/검색 허용에 따른 대화방(chatbot) API display value 허용값 변경
      - '11' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시
      - '10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시
      - '01' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시
      - '00' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 비전시


    **1.1.9 추가 변경사항**

    + 메시지 보안성 강화 agencyKey API 추가
      - GET /agency/{agencyId}/agencyKey
      - RBC 홈페이지에서 agencyKey 재발급시 Webhook noti 전송(notiType agencyKey)
    + 양방향 대화방 ID 정책변경에 따라 service 구분이 'CHAT'인 대화방ID(chatbotId)의 포맷 규칙이 변경
      - POST /brand/{brandId}/bidirectional/chatbot
      - GET /usableQuery/chatbotId/{chatbotId}
    + 브랜드 등록 시 브랜드 홈 기본 탭 선택 항목 추가
      - POST /corp/brand
      - properties 추가: initTab, initFeedItem 
      - 추가 항목은 별도 지정하지 않더라도 기본값으로 처리됨

    **1.1.8 추가 변경사항(2022.12.08 상용 배포)**

    + 대화방ID 등록 가능여부 조회 API 추가
      - GET /usableQuery/chatbotId/{chatbotId}
      - 대화방ID 등록 전 등록 가능여부 조회
      

    **1.1.8 변경사항**

    + 이미지 템플릿 추가에 따른 신규 템플릿 등록 API 추가
      - 이미지 템플릿 및 모든 템플릿 등록 시 사용 가능 ( api/1.1 지원, api/1.0 미지원 )
      - 이미지 템플릿용 파일 등록 POST /brand/{brandId}/v2/messagebase/file
      - 이미지 템플릿용 파일 상세 조회 GET /brand/{brandId}/v2/messagebase/file/{fileId}
      - 템플릿 등록(v2) POST /brand/{brandId}/v2/messagebase
      - 템플릿 수정(v2) POST /brand/{brandId}/v2/messagebase/{messagebaseId}
    + 타이틀 자유형(구 테마 강조형A) Description 우측 타이틀 허용
      - 타이틀 자유형의 타이틀 영역 중 우측 타이틀 영역에 Cell 템플릿과 마찬가지로 본문과 버튼에 설정한 변수부 중 1개를 설정할 수 있도록 변경

    **1.1.7 변경사항**

    + 타이틀 자유형(구 테마 강조형A) 템플릿 messagebaseform 조회 지원
      - 타이틀 자유형(구 테마 강조형A) Description, Cell
    + 타이틀 자유형(구 테마 강조형A) 템플릿 messagebase 조회/등록/수정/삭제 지원
      - 타이틀 자유형(구 테마 강조형A) 등록 JSON 예시 추가(POST /brand/{brandId}/messagebase)
      - 타이틀 자유형(구 테마 강조형A) 조회 시 버튼 정보 표시 방식 변경(신규 openrichcard 규격)
    + 대행사용 API 추가
      - RBC 등록된 사업자 확인 GET /agency/{agencyId}/corp/{corpRegNum}
      - RBC 에 등록된 발신번호 확인 GET /agency/{agencyId}/corp/{corpRegNum}/chatbot/{chatbotId}
    + 고객반응통계 조회 API 수정
      - 대화방 메뉴 자동응답메시지 설정 정책 변경에 따른 Data Object 구조 변경
      - 대상 API GET /statQuery/persistentMenu/{brandId}
    + 양방향 대화방 메뉴 설정 정책 변경 반영
      - 하위 메뉴 자동응답메시지 설정 허용
      - 액션 버튼 설정 dialerAction 만 가능(지정 불가 액션 버튼 - urlAction, mapAction, calendarAction, clipboardAction, composeAction, localBrowserAction)

    **1.1.6 변경사항**

    + 고객반응통계 조회 API 추가
      - 캠페인 발송/읽음확인 통계 GET /statQuery/message/{brandId}
      - 캠페인 메시지 버튼 클릭 통계 GET /statQuery/messageButton/{brandId}
      - 대화방 메뉴 클릭 통계 GET /statQuery/persistentMenu/{brandId}
    + 신규 공통템플릿 정보 추가
      - 규격 상의 변경점은 없으며 추가된 공통템플릿 정보 데이터 제공되도록 변경함
      - GET /messagebase/common
      - GET /messagebase/common/{messagebaseId}

    **1.1.5 변경사항**

    + [주의] 신규 추가된 API는 /api/1.1 만 지원됨

    + Brand 정보 내 브랜드 소식 URL 정보 추가 
      - botFeedUrl (브랜드 소식 등록 시 자동 추가)
    + 양방향 대화방 API 추가
      - POST, GET /brand/{brandId}/bidirectional/chatbot
      - PUT, DELETE, GET /brand/{brandId}/bidirectional/chatbot/{chatbotId}
      - POST, PUT, DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu
      - POST, GET /brand/{brandId}/autoreplymsg
      - PUT, DELETE, GET /brand/{brandId}/autoreplymsg/{autoReplyMsgId}
      - POST /brand/{brandId}/autoreplymsg/file
      - GET /brand/{brandId}/autoreplymsg/file/{fileId}
    + 양방향 대화방 중계사 연동 Webhook 추가
      - POST /{webhookUrl}/bidirectional
      - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu/pause
    + 대행사 Noti webhook NotiType 추가
      - 자동응답메시지(notiType: autoreplymsg)


    **1.1.4 추가 변경사항**

    + 템플릿 승인 후 수정 허용
      - 기승인 템플릿의 내용 수정 허용(수정 시 재승인 필요)
      - 수정 허용에 따른 approvalResult 제공 값 변경
    + 템플릿 승인요청 취소 API 추가
      - PUT /brand/{brandId}/messagebase/{messagebaseId}/cancel
      - approvalResult가 승인대기, 승인대기(수정) 인 경우만 취소 가능
    + 템플릿 승인상태 구분 추가 : 검수시작, 검수시작(수정), 승인대기(수정), 반려(수정), 검수완료(수정) 

    + 대화방 승인상태 구분 추가 : 검수시작 

    + 브랜드 승인상태 구분 추가 : 검수시작, 검수시작(수정) 

    + 스타일(Cell) 템플릿 formattedString 구성 시 textStyle 허용값 중 italic 제외(예,
    bold|italic 설정 시 bold 로 처리됨)


    **1.1.3 추가 변경사항**

    + 브랜드 상세조회 제공 항목 추가(2021/02/25)
      - fileName - 업로드 된 파일의 이름
      - approvalReason - 검수 시 반려 사유
    + 브랜드 상세조회/수정/삭제 API 추가
      - PUT /corp/brand/{brand}
      - GET /corp/{personId}/brand/{brandId}
      - PUT /corp/{personId}/brand/{brandId}
      - DELETE /corp/{personId}/brand/{brandId}
      - POST /corp/{personId}/brand/{brandId}/privilege
      - PUT /corp/{personId}/brand/{brandId}/privilege
      - GET /corp/{personId}/brand/{brandId}/privilege
      - DELETE /corp/{personId}/brand/{brandId}/privilege/{id}
    + 기업/대행사/규격서 버전별 API 분류(TAG) 

    + 템플릿 API 등 설명 내용 보완

    + **2020년 12월 3일 기준 브랜드 등록 항목 menus 중 app 은 이통사 정책에 의거 한시적으로 등록이 불가하며 app 등록
    시 error 리턴됩니다.**

    + 브랜드 상태 구분 추가 : 승인대기(수정), 반려(수정), 검수완료(수정)


    **1.1.2 변경사항**

    + 브랜드 등록 API 추가
      - 기업관리자 계정으로만 등록 가능
      - 브랜드 등록 시 입력되는 카테고리1, 2 정보 조회 API 추가 
      - GET /corp/brand/categories
      - POST /corp/brand

    **1.1.1 변경사항**

    + GuideInfo 내 리치카드용 세부 정보 추가
      - GET /messagebase/common/{messagebaseId} 조회 상세 정보 중 guideInfo.detailInfo 추가
      - 리치카드를 이용하여 발송된 RCS 메시지가 단말에서 표시될 경우 잘림 없이 표시 가능한 조건 정보 제공을 위하여 추가

    **1.1.0 변경사항**

    + API 1.0, 1.1 버전 병행 지원 - 이후 일부 개선 사항은 API 1.0에 제공이 불가 할 수 있으므로 1.1 버전 사용 권장

    + ContractInfo.regDate, ContractInfo.modDate Key Name 변경 \

    -> ContractInfo.registerDate, ContractInfo.updateDate

    + 각 API별 Response Body의 result key의 type을 array로 통일하였으며 변경된 API는 다음과 같음
      - GET /agency/{agencyId}/brand/{brandId}
      - GET /messagebase/common
      - GET /messagebase/common/{messagebaseId}
      - GET /messagebase/messagebaseform/{messagebaseformId}
      - POST /brand/{brandId}/messagebase
      - GET /brand/{brandId}/messagebase
      - GET /brand/{brandId}/messagebase/{messagebaseId}
      - PUT /brand/{brandId}/messagebase/{messagebaseId}
      - DELETE /brand/{brandId}/messagebase/{messagebaseId}
      - POST /brand/{brandId}/chatbot
      - GET /brand/{brandId}/chatbot
      - GET /brand/{brandId}/chatbot/{chatbotId}
      - PUT /brand/{brandId}/chatbot/{chatbotId}
      - DELETE /brand/{brandId}/chatbot/{chatbotId}

    **2020.07.07 수정사항**

    + BrandInfo 내 제공 정보 추가
      - brandKey : API를 이용하여 브랜드Key 확인 가능
      - chatbotDate : 브랜드 하위 대화방 데이터 최종 변경 일시 정보
      - messagebaseDate : 브랜드 하위 템플릿 최종 변경 일시 정보
    + Get List API Pagination 기능 추가
      - Query 파라미터를 이용하여 전체를 페이징하여 조회하도록 제공
      - offset : 조회 기준 ROW (default = 0)
      - limit : offset 으로부터 조회되는 건수 제한(default = 100, max = 1000)
      - Response body 내 pagination, links 제공
    + messagebaseform 조회시 bizCondition 정보가 코드로 표시되는 문제 수정


    **2020.05.19 수정사항**

    + 대행사-브랜드 계약 정보인 ContractInfo 내에 key 추가
      - GET /agency/{agencyId}/contract 
      - GET /agency/{agencyId}/corp/{corpRegNum}/brand
      - 추가 Key : brandDate, chatbotDate, messagebaseDate
      - 브랜드, 해당 브랜드 하위 대화방/템플릿 데이터의 최종 변경 일시 정보를 제공하여
      상세 조회 이전에 변경사항 여부를 판단할 수 있도록 개선
      
    **2020.03.12 수정사항**

    + date-time 예시 추가


    **2020.02.19 수정사항**

    + ParamInfo 내 isMandatory 추가


    **2020.02.11 수정사항**

    + GET /brand/{brandId}/chatbot Chatbots 를 chatbots로 수정


    **2020.02.07 수정사항**

    + Widget, WidgetPolicy 설명 추가

    + API 문의처 정보 추가

    + POST /brand/{brandId}/chatbot 시 rcsReply 필수 입력 추가(2/13 상용 적용)


    **2020.01.06 수정사항**

    + API 서버 구분 추가


    **2019.12.17 수정사항**

    + X-RCS-Brandkey의 format 변경 (uuid -> random key)


    **2019.11.25 수정사항**

    + 템플릿, 발신번호(대화방) UPDATE, DELETE Method 처리가능 상태 설명 추가

    + 전체 200 OK 응답 형식 수정

    + chatbot UPDATE시 profileImage 삭제

    + chatbot UPDATE시 통신서비스이용증명원 업로드 추가


    **2019.11.19 수정사항**

    + messagebaseform의 bizService 오타 수정

    + BrandInfo.mediaUrl 추가

    + ChabotDetail.mediaUrl 추가


    **2019.11.05 수정사항**

    + RegChatbotInfo.smsMo 삭제

    + ChatbotDetail 수정
      - smsMo 삭제, rcsReply 추가
      - rcsReply default 1(RCS Postback 수신)

    **2019.10.29 수정사항**

    + {webhookUrl} NotiTemplate.brandId 추가

    + chatbot Attributes 설명 수정


    **2019.10.23 수정사항**

    + {webhookUrl} 설명 내용 수정
      - Brand Key 제공 내용 삭제
      - nType을 notiType으로 명칭 변경
    + webhook notification에 대한 대행사 return code 추가

    + messagebase, messagebaseform 의 formattedString type
      string에서 object로 변경
    + messagebaseform의 bizCondition type을 string 에서 array로 변경

    + messagebaseform 상세 조회시 양식 유형 이미지 링크 제공
      - MessagebaseFormInfo.mediaUrl 추가
      
    **2019.10.02 RCS Biz Center API 1.0.1 배포**
tags:
  - name: token
    description: >
      인증용 토큰 발급/갱신 API 목록입니다.  

      마스터, 매니저, 대행사의 계정 ID와 API KEY로 인증 발급됩니다. 발급된 token은 모든 API의 header에 삽입되어야
      합니다.
  - name: corporation
    description: >
      기업에서 사용 가능한 API 목록입니다.  

      마스터(구 기업관리자) 또는 매니저(구 기업담당자) ID로 이용 가능하며 Path Parameter에 personId가 존재하는
      API는 token 내 ID와 personId가 동일해야 합니다.
  - name: agency
    description: >
      대행사에서 사용 가능한 API 목록입니다.  

      대행사 ID로 이용 가능하며 Path paramter에 agencyId가 존재하는 API는 token 내 ID와 agencyId가
      동일해야 합니다.
  - name: messagebase
    description: |
      메시지 (공통포맷, 템플릿) 관리용 API 목록입니다.
  - name: chatbot
    description: |
      대화방(발신번호) 관리용 API 목록입니다.
  - name: autoreplymsg
    description: |
      자동응답메시지 관리용 API 목록입니다.
  - name: bidirectional
    description: |
      대화방메뉴, 양방향 대화방 관리용 API 목록입니다.
  - name: stat
    description: |
      고객반응 통계 조회용 API 목록입니다.
  - name: usable
    description: |
      사용 편의를 위해 제공되는 API 목록입니다.
  - name: layout
    description: |
      대행사에 제공되는 레이아웃 관리용 API 목록입니다.
  - name: logo
    description: |
      상징성을 갖는 300*300px 크기의 이미지를 관리하는 API 목록 입니다.
      로고 이미지는 레이아웃 또는 신규 공통 포맷을 이용한 메시지 발송 시, 템플릿 등록 시 사용 가능합니다.
  - name: SINCE v1.1.12
    description: |
      RBC openAPI v1.1.12에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.10
    description: |
      RBC openAPI v1.1.10에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.9
    description: |
      RBC openAPI v1.1.9에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.8
    description: |
      RBC openAPI v1.1.8에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.7
    description: |
      RBC openAPI v1.1.7에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.6
    description: |
      RBC openAPI v1.1.6에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.5
    description: |
      RBC openAPI v1.1.5에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.4
    description: |
      RBC openAPI v1.1.4에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.3
    description: |
      RBC openAPI v1.1.3에 신규 추가된 API 목록입니다.
  - name: SINCE v1.1.2
    description: |
      RBC openAPI v1.1.2에 신규 추가된 API 목록입니다.
  - name: SINCE v1.0
    description: |
      RBC openAPI v1.0부터 제공되는 API 목록입니다.
paths:
  /token:
    post:
      tags:
        - SINCE v1.0
        - token
      summary: |
        Access 토큰을 발급 요청합니다.
      description: >
        Access 토큰을 발급 요청합니다.  

        RCS Biz Center 웹에서 가입 시 등록한 ID(마스터 또는 매니저, 대행사)와 계정 가입 시 자동 생성되는 API
        Key(RCS Biz Center 내 계정관리에서 확인)를 이용하여 토큰 발급을 요청합니다.  

        response로 전달되는 expiresIn 시간이 초과하면 토큰을 새로 발급 받아야 합니다.          

          + **API 사용 Client의 IP는 RCS Biz Center에서 등록하여야 합니다.  
            Client IP 등록은 내 계정관리에서 ID별 최대 10개까지 등록할 수 있습니다.**          
          + **계정 권한 : 마스터, 매니저, 대행사**
      requestBody:
        description: |
          required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: RCS Biz Center에 계정 가입시 등록한 ID 입니다.
                  maximum: 20
                  example: myMemberId
                clientSecret:
                  type: string
                  description: RCS Biz Center 내 계정관리에서 확인 가능합니다.
                  maximum: 18
                  example: SK.atIs4g04r6PJepf
              required:
                - clientId
                - clientSecret
      responses:
        '200':
          $ref: '#/components/responses/SuccessForToken'
        default:
          $ref: '#/components/responses/Fail'
  /corp/{personId}/brand:
    get:
      tags:
        - SINCE v1.0
        - corporation
      summary: |
        마스터 또는 매니저 계정으로 운영 권한이 있는 브랜드 목록을 조회합니다.
      description: |
        마스터 또는 매니저 계정으로 운영 권한이 있는 브랜드 목록을 조회합니다.  

          + **계정 권한 : 마스터, 매니저**
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 또는 운영자의 계정(마스터, 매니저) ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /corp/{personId}/brand/{brandId}:
    get:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드 상세 정보를 조회합니다.
      description: |
        관리 중인 브랜드의 상세 정보를 조회합니다.  

          + **계정 권한 : 마스터, 매니저**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        현재 운영 중인 브랜드 정보를 수정 합니다. 브랜드명, 프로필 이미지가 수정되면 다시 승인을 받아야 합니다.
      description: >
        현재 운영 중인 브랜드 정보를 수정 합니다.   

        브랜드 대표운영자 또는 운영자 권한이 있어야 수정이 가능합니다.  

        **브랜드명** 또는 **프로필 이미지**가 수정되면 다시 승인을 받아야 합니다.  

        이외 정보 수정은 별도의 승인 과정 없이 업데이트 됩니다.  

        수정된 데이터가 이통 3사로 전송되는 과정에서 전송이 지연되거나 장애로 인해 이통 3사 모두 전송이 완료되지 못한 경우,  
        브랜드 정보 조회 데이터와 단말에서 표시되는 브랜드 홈 정보가 상이할 수 있습니다.  

          + **계정 권한 : 마스터, 매니저**  
          + **브랜드 권한 : 대표운영자, 운영자**  
          + **수정 가능 상태 : 승인, 반려(수정승인)**  
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                regBrand:
                  $ref: '#/components/schemas/RegBrandInfo'
                brandProfile:
                  description: >
                    브랜드 프로필 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식
                    : png (최대1MB)**
                  type: string
                  format: binary
                brandBackground:
                  description: >
                    브랜드 백그라운드 이미지를 업로드합니다.  

                    등록되어 있는 브랜드 백그라운드 이미지를 제거하기 위해서는 파일 없이 brandBackground form
                    key만 전송하면 됩니다.\

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식
                    : jpg, png (최대1MB)**
                  type: string
                  format: binary
                mainMdn:
                  description: 대표발신번호 개념 제거되어 더 이상 유효하지 않습니다.
                  type: string
                  maximum: 40
                  example: '15225739'
                  deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드를 삭제합니다.
      description: >
        브랜드를 삭제합니다.  

        브랜드 삭제를 위해서는 토큰 발급계정과 personId가 동일해야 하며 brandId에 대한 브랜드 대표운영자 권한이 있어야
        합니다.  

        승인을 받지 않은 '반려', '저장' 상태의 브랜드는 즉시 삭제 가능합니다.  

        **승인된 브랜드의 경우 등록된 발신번호, 템플릿을 먼저 삭제한 후 브랜드를 삭제해야 처리됩니다.**  

          + **계정 권한 : 마스터**  
          + **브랜드 권한 : 대표운영자**  
          + **삭제 가능 상태 : 승인, 반려, 저장**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 삭제한 브랜드 ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/{personId}/brand/{brandId}/cancel:
    put:
      tags:
        - SINCE v1.1.10
        - corporation
      summary: |
        승인대기 중인 브랜드의 승인요청을 취소합니다.  
      description: |
        승인대기 중인 브랜드의 승인요청을 취소합니다.  
        브랜드 대표운영자 또는 운영자 권한이 있어야 승인요청 취소가 가능합니다.  
        검수가 시작된 브랜드는 승인취소가 불가 합니다.  

          + **계정 권한 : 마스터, 매니저**  
          + **브랜드 권한 : 대표운영자, 운영자**  
          + **가능 상태 : 승인대기**  
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 승인취소 된 브랜드 ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/{personId}/brand/{brandId}/privilege:
    post:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드 대표운영자가 브랜드 내 운영자(기업의 마스터/매니저, 대행사) 권한을 부여 합니다.
      description: |
        브랜드 대표운영자가 브랜드 내 운영자(기업의 마스터/매니저, 대행사) 권한을 부여 합니다.  

          + **계정 권한 : 마스터**
          + **브랜드 권한 : 브랜드 대표운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자의 계정 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        description: >
          + privilegeType이 SubManager 인 경우, 소속된 기업 내 다른 마스터, 매니저 계정을 운영자로 지정할 수
          있습니다.  

          + privilegeType이 Agency 인 경우, 별도의 RCS 발송 계약을 맺은 대행사를 운영자로 지정합니다.  
        content:
          application/json:
            schema:
              properties:
                regPrivileges:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegPrivilegeInfo'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrivilegeInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드 대표운영자 권한을 위임합니다.
      description: |
        브랜드 대표운영자 권한을 지정된 마스터에게 위임합니다.  
        브랜드 대표운영자 변경 시 위임전 대표운영자는 운영자로 변경됩니다.  

          + **계정 권한 : 마스터**  
          + **브랜드 권한 : 브랜드 대표운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        description: |
          - privilegeType이 Manager 만 허용되며 지정한 마스터 ID를 대표운영자로 설정합니다. 
        content:
          application/json:
            schema:
              properties:
                regPrivilege:
                  $ref: '#/components/schemas/RegPrivilegeInfo'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrivilegeInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    get:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드에 등록된 운영 권한 정보를 조회합니다.
      description: >
        브랜드에 등록된 운영 권한 정보를 조회합니다. 브랜드에 등록된 브랜드 대표운영자, 운영자, 권한 지정 대행사 정보를
        제공합니다.  

          + **계정 권한: 마스터, 매니저**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 또는 운영자 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrivilegeInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/{personId}/brand/{brandId}/privilege/{id}:
    delete:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        브랜드 운영자 권한 중 지정한 대상을 삭제합니다.
      description: |
        브랜드 운영자(마스터, 매니저), 운영자(대행사) 권한 중 지정한 대상을 삭제합니다.  
        대행사가 양방향 대행사인 경우, 권한 삭제 시 대행사가 연결된 양방향 대화방의 연결을 해지합니다.  
        브랜드 대표운영자는 삭제할 수 없으며 브랜드 대표운영자를 변경하고자 할 경우 PUT 메서드를 사용하여야 합니다.

          + **계정 권한 : 마스터**
          + **브랜드 권한: 브랜드 대표운영자**
      parameters:
        - in: path
          name: personId
          description: 브랜드 대표운영자 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: id
          description: 브랜드 운영자(마스터, 매니저) 또는 운영자(대행사) ID 입니다.
          schema:
            type: string
            maximum: 13
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrivilegeInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/brand/categories:
    get:
      tags:
        - SINCE v1.1.2
        - corporation
      summary: |
        브랜드 등록 시 사용 가능한 카테고리 목록을 조회합니다. 
      description: >
        RCS Biz Center에서 브랜드를 등록할 때 필수 요구되는 카테고리(categoryId, categoryName), 하위
        카테고리(subCategoryId, subCategoryName)에 해당하는 카테고리 목록을 조회합니다.  

        조회된 카테고리, 하위 카테고리 를 이용하여 브랜드 등록 시 지정합니다.  

          + **계정 권한 : 마스터, 매니저**
          + **브랜드 권한 : 브랜드 대표운영자**
          
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/brand:
    post:
      tags:
        - SINCE v1.1.2
        - corporation
      summary: |
        마스터, 매니저 계정을 이용하여 신규 브랜드 등록 승인을 요청합니다.
      description: >
        마스터, 매니저 계정을 이용하여 신규 브랜드 등록 승인을 요청합니다.(매니저 계정도 브랜드 등록이 가능하도록 권한이
        변경되었습니다.)  

        또한 필수 항목이었던 발신번호는 옵션으로 변경되었습니다.   따라서 발신번호를 함께 등록하는 경우에만 발신번호에 대한 '통신서비스
        가입증명원'을 함께 등록하면 됩니다.    

        브랜드를 등록한 계정은 브랜드의 대표운영자로 설정되며, 매니저 권한으로 등록한 브랜드는 마스터 권한 승급을 받아야 승인을 받을 수
        있습니다.    

          + **계정 권한 : 마스터, 매니저**  
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - regBrand
                - brandProfile
              properties:
                regBrand:
                  $ref: '#/components/schemas/RegBrandInfo'
                brandProfile:
                  description: >
                    브랜드 프로필 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 / 파일형식 :
                    png (최대1MB)**
                  type: object
                  format: binary
                brandBackground:
                  description: >
                    브랜드 백그라운드 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 / 파일형식 :
                    jpg, png (최대1MB)**
                  type: object
                  format: binary
                mainMdn:
                  description: 대표발신번호 개념 제거되어 더 이상 유효하지 않습니다.
                  type: string
                  maximum: 40
                  example: '15225739'
                  deprecated: true
                chatbots:
                  description: |
                    등록할 대화방(발신번호) 정보를 최대 1000개까지 등록합니다.  
                    Object 구성은 [RegChatbotInfo](#/RegChatbotInfo)를 참고하시기 바랍니다.
                  type: object
                  properties:
                    chatbots:
                      type: array
                      items:
                        $ref: '#/components/schemas/RegChatbotInfo'
                      maxItems: 1000
                      minItems: 1
                subNumCertificate:
                  description: |
                    통신서비스이용증명원을 업로드합니다.  
                    대화방(발신번호) 등록을 위해 chatbots 지정한 경우 필수로 함께 업로드해야 합니다.  
                    **허용되는 파일형식 : jpg, png, pdf, tiff, zip (최대20MB)**  
                  type: object
                  format: binary
      responses:
        '200':
          description: |
            정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 등록된 브랜드ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/brand/{brandId}:
    put:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        RBC 웹에서 임시저장으로 등록한 브랜드 또는 신규 브랜드 등록 검수 시 반려된 경우 브랜드 수정 후 승인요청 시 사용합니다.
      description: |
        RBC 웹에서 임시저장으로 등록한 브랜드 또는 신규 브랜드 등록 검수 시 반려된 경우 브랜드 수정 후 승인요청 시 사용합니다.  
        브랜드 등록 POST API를 통해 **승인** 요청하였으나 검수 시 **반려**되어 재승인 요청 또는  
        **RBC 홈페이지**에서 **임시저장**한 브랜드 정보를 수정하여 승인 요청하는 경우 사용합니다.  

          + **계정 권한 : 마스터, 매니저**
          + **브랜드 권한 : 브랜드 대표운영자(브랜드를 등록한 마스터 또는 매니저)**  
          + **수정 대상 브랜드 상태 : 반려, 저장**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - regBrand
                - brandProfile
              properties:
                regBrand:
                  $ref: '#/components/schemas/RegBrandInfo'
                brandProfile:
                  description: >
                    브랜드 프로필 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 / 파일형식 :
                    png (최대1MB)**
                  type: object
                  format: binary
                brandBackground:
                  description: >
                    브랜드 백그라운드 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 / 파일형식 :
                    jpg, png (최대1MB)**
                  type: object
                  format: binary
                mainMdn:
                  description: 대표발신번호 개념 제거되어 더 이상 유효하지 않습니다.
                  type: string
                  maximum: 40
                  example: '15225739'
                  deprecated: true
                chatbots:
                  description: |
                    등록할 대화방(발신번호) 정보를 최대 1000개까지 등록합니다.  
                    Object 구성은 [RegChatbotInfo](#/RegChatbotInfo)를 참고하시기 바랍니다.
                  type: object
                  properties:
                    chatbots:
                      type: array
                      items:
                        $ref: '#/components/schemas/RegChatbotInfo'
                      maxItems: 1000
                      minItems: 1
                subNumCertificate:
                  description: |
                    통신서비스이용증명원을 업로드합니다.  
                    대화방(발신번호) 등록을 위해 chatbots 지정한 경우 필수로 함께 업로드해야 합니다.  
                    **허용되는 파일형식 : jpg, png, pdf, tiff, zip (최대20MB)**  
                  type: object
                  format: binary
      responses:
        '200':
          description: |
            정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 등록된 브랜드ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.3
        - corporation
      summary: |
        마스터 계정을 이용하여 승인 이력이 없는 신규 개설 브랜드 삭제를 요청합니다.
      description: >
        마스터 계정을 이용하여 승인 이력이 없는 해당 계정이 신규 개설한 브랜드 삭제를 요청합니다. 정상적으로 승인요청된 브랜드는
        **승인대기** 상태가 되므로 삭제가 불가합니다.\

        **- 사용 권한 계정 : 마스터**\

        **- 삭제 가능 상태 : 저장, 반려**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: 정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 삭제한 브랜드 ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /corp/brand/{brandId}/cancel:
    put:
      tags:
        - SINCE v1.1.10
        - corporation
      summary: |
        신규 개설한 승인대기 중인 브랜드의 승인요청을 취소합니다.  
      description: |
        신규 개설한 승인대기 중인 브랜드의 승인요청을 취소합니다.  

        검수가 시작된 브랜드는 승인취소가 불가 합니다.  

          + **계정 권한 : 마스터, 매니저**  
          + **가능 상태 : 승인대기**  
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        brandId:
                          type: string
                          maximum: 13
                          description: 승인취소 된 브랜드 ID 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /messagebase/common:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        이통사가 기본 제공하는 공통템플릿을 조회합니다.
      description: |
        이통사가 기본 제공하는 공통템플릿을 조회합니다.  
        공통템플릿은 SMS, LMS, MMS와 양방향 대화방용 CHAT 상품으로 구성되어 있습니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**
      parameters:
        - in: query
          name: productCode
          description: 리치카드 메시지 유형 구분값 입니다.
          schema:
            type: string
            enum:
              - sms
              - lms
              - mms
              - chat
        - in: query
          name: cardType
          description: MMS에서 제공되는 메시지 카드 형태 구분값 입니다.
          schema:
            type: string
            enum:
              - standalone
              - standalone media top
              - standalone horizontal
              - carousel medium
              - carousel small
              - Highlighted Image n Title
              - Highlighted Image
              - Thumbnail
              - SNS
              - format
        - in: query
          name: bizService
          schema:
            type: string
            enum:
              - 승인
              - 입금
              - 출금
              - 출고
              - 주문
              - 배송
              - 예약
              - 회원가입
              - 인증
          description: |
            현재 공통템플릿은 유형별 제공되는 항목이 없으므로 본 파라미터는 사용되지 않습니다.
          deprecated: true
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            공통템플릿 목록을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Messagebase'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /messagebase/common/{messagebaseId}:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        이통사가 기본 제공하는 공통템플릿 별 상세 내용을 조회합니다.
      description: |
        이통사가 기본 제공하는 공통템플릿 별 상세 내용을 조회합니다.  
        상품별 SMS, LMS, MMS, CHAT용 세부 정보를 조회할 수 있습니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
      parameters:
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            공통템플릿 상세 내용을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessagebaseInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /messagebase/messagebaseform:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        템플릿 양식 목록을 조회합니다.
      description: |
        템플릿 양식 목록을 조회합니다.  
        템플릿 작성이 필요한 경우 조회된 템플릿 양식 ID를 이용하여 템플릿 양식 세부정보를 조회합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**
      parameters:
        - in: query
          name: cardType
          schema:
            type: string
            enum:
              - Cell
              - Description
              - Highlighted Image n Title
              - Highlighted Image
              - Thumbnail
              - SNS
              - descriptionNew
              - cellNew
        - in: query
          name: bizCondition
          schema:
            type: string
            example: all
        - in: query
          name: bizCategory
          schema:
            type: string
            example: 금융
        - in: query
          name: bizService
          schema:
            type: string
            example: 입금
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0)'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000)'
      responses:
        '200':
          description: |
            템플릿 양식 목록을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessagebaseForm'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /messagebase/messagebaseform/{messagebaseformId}:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        템플릿 유형의 상세 내용을 조회합니다.
      description: |
        템플릿 유형의 상세 내용을 조회합니다.  
        formattedString을 이용하여 원하는 브랜드용 템플릿을 작성할 수 있습니다.  
        + **계정 권한 : 마스터, 매니저, 대행사**
      parameters:
        - in: path
          name: messagebaseformId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            템플릿 유형 상세 내용을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessagebaseFormInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                example:
                  code: '20000000'
                  desc: null
                  result:
                    - messagebaseformId: ITTBNV
                      formName: 썸네일형 (세로)
                      cardType: Thumbnail
                      bizCondition:
                        - all
                      bizCategory: null
                      bizService: null
                      registerDate: '2022-09-06T10:42:53.000+09'
                      updateDate: '2022-09-13T13:04:24.000+09'
                      mediaUrl: []
                      productCode: itmpl
                      spec: openrichcard
                      guideInfo:
                        maxLineCount: 0
                        maxDisplayText: 16
                        maxDescriptionSize: 150
                        imageWidth: '900'
                        imageHeight: '560'
                        detailInfo: null
                      policyInfo:
                        cardCount: 1
                        maxTitleSize: 30
                        maxButtonCount: 2
                        maxDescriptionSize: 500
                        maxMediaSize: 1048576
                        buttonsAllowed: false
                        adHeaderAllowed: true
                        adBodyAllowed: true
                      params:
                        - param: description
                          isMandatory: false
                          type: string
                          contentType: description
                          strSize: 150
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                        - param: media
                          isMandatory: true
                          type: file
                          contentType: maapfile
                          strSize: -1
                          fileSize: 1048576
                          strRegx: ''
                          verification: []
                          imageWidth: 900
                          imageHeight: 560
                          couplingId: ''
                          inputText: null
                        - param: mediaUrl
                          isMandatory: false
                          type: string
                          contentType: url
                          strSize: -1
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                        - param: subDesc1
                          isMandatory: true
                          type: string
                          contentType: description
                          strSize: 33
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: sub1
                          inputText: null
                        - param: subDesc2
                          isMandatory: true
                          type: string
                          contentType: description
                          strSize: 33
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: sub2
                          inputText: null
                        - param: subDesc3
                          isMandatory: false
                          type: string
                          contentType: description
                          strSize: 33
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: sub3
                          inputText: null
                        - param: subMedia1
                          isMandatory: true
                          type: file
                          contentType: maapfile
                          strSize: -1
                          fileSize: 1048576
                          strRegx: ''
                          verification: []
                          imageWidth: 300
                          imageHeight: 300
                          couplingId: sub1
                          inputText: null
                        - param: subMedia2
                          isMandatory: true
                          type: file
                          contentType: maapfile
                          strSize: -1
                          fileSize: 1048576
                          strRegx: ''
                          verification: []
                          imageWidth: 300
                          imageHeight: 300
                          couplingId: sub2
                          inputText: null
                        - param: subMedia3
                          isMandatory: false
                          type: file
                          contentType: maapfile
                          strSize: -1
                          fileSize: 1048576
                          strRegx: ''
                          verification: []
                          imageWidth: 300
                          imageHeight: 300
                          couplingId: sub3
                          inputText: null
                        - param: subMediaUrl1
                          isMandatory: false
                          type: string
                          contentType: url
                          strSize: -1
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                        - param: subMediaUrl2
                          isMandatory: false
                          type: string
                          contentType: url
                          strSize: -1
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                        - param: subMediaUrl3
                          isMandatory: false
                          type: string
                          contentType: url
                          strSize: -1
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                        - param: title
                          isMandatory: false
                          type: string
                          contentType: title
                          strSize: 30
                          fileSize: 0
                          strRegx: ''
                          verification: []
                          imageWidth: 0
                          imageHeight: 0
                          couplingId: ''
                          inputText: null
                      formattedString:
                        RCSMessage:
                          trafficType: advertisement
                          openrichcardMessage:
                            card: open_rich_card
                            version: 1.0.0
                            zoomAllowed: true
                            scaleAllowed: true
                            layout:
                              widget: LinearLayout
                              width: match
                              height: content
                              orientation: vertical
                              background: '#F2F2F2'
                              children:
                                - widget: LinearLayout
                                  width: match
                                  height: content
                                  orientation: horizontal
                                  children:
                                    - widget: ImageView
                                      width: match
                                      height: content
                                      scaleType: fitXY
                                      mediaUrl: '{{media}}'
                                      click:
                                        action:
                                          urlAction:
                                            openUrl:
                                              url: '{{mediaUrl}}'
                                          displayText: 메인이미지
                                          postback:
                                            data: set_by_chatbot_open_url
                                - widget: LinearLayout
                                  width: match
                                  height: content
                                  orientation: vertical
                                  padding: 20dp
                                  children:
                                    - widget: LinearLayout
                                      width: match
                                      height: content
                                      orientation: vertical
                                      children:
                                        - widget: TextView
                                          width: match
                                          height: content
                                          textStyle: bold
                                          text: '{{title}}'
                                          textColor: '#232323'
                                          textSize: 17dp
                                          marginBottom: 10dp
                                          visibility: '{{titleVsblty}}'
                                        - widget: TextView
                                          width: match
                                          height: content
                                          textStyle: normal
                                          text: '{{description}}'
                                          textColor: '#232323'
                                          textSize: 16dp
                                          weight: '1'
                                          marginBottom: 16dp
                                          visibility: '{{descVsblty}}'
                                    - widget: LinearLayout
                                      width: match
                                      height: content
                                      orientation: vertical
                                      children:
                                        - widget: LinearLayout
                                          width: match
                                          height: content
                                          orientation: horizontal
                                          children:
                                            - widget: LinearLayout
                                              width: 68dp
                                              height: 68dp
                                              orientation: horizontal
                                              corner_radius: 4dp
                                              children:
                                                - widget: ImageView
                                                  width: match
                                                  height: match
                                                  scaleType: fitXY
                                                  mediaUrl: '{{subMedia1}}'
                                                  click:
                                                    action:
                                                      urlAction:
                                                        openUrl:
                                                          url: '{{subMediaUrl1}}'
                                                      displayText: 서브이미지1
                                                      postback:
                                                        data: set_by_chatbot_open_url
                                            - widget: TextView
                                              width: match
                                              height: content
                                              textStyle: normal
                                              marginLeft: 12dp
                                              gravity: center_vertical
                                              text: '{{subDesc1}}'
                                              textColor: '#232323'
                                              textSize: 16dp
                                              weight: '1'
                                        - widget: LinearLayout
                                          width: match
                                          height: content
                                          orientation: horizontal
                                          marginTop: 10dp
                                          children:
                                            - widget: LinearLayout
                                              width: 68dp
                                              height: 68dp
                                              orientation: horizontal
                                              corner_radius: 4dp
                                              children:
                                                - widget: ImageView
                                                  width: match
                                                  height: match
                                                  scaleType: fitXY
                                                  mediaUrl: '{{subMedia2}}'
                                                  click:
                                                    action:
                                                      urlAction:
                                                        openUrl:
                                                          url: '{{subMediaUrl2}}'
                                                      displayText: 서브이미지2
                                                      postback:
                                                        data: set_by_chatbot_open_url
                                            - widget: TextView
                                              width: match
                                              height: content
                                              textStyle: normal
                                              marginLeft: 12dp
                                              gravity: center_vertical
                                              text: '{{subDesc2}}'
                                              textColor: '#232323'
                                              textSize: 16dp
                                              weight: '1'
                                        - widget: LinearLayout
                                          width: match
                                          height: content
                                          orientation: horizontal
                                          marginTop: 10dp
                                          visibility: '{{subVsblty3}}'
                                          children:
                                            - widget: LinearLayout
                                              width: 68dp
                                              height: 68dp
                                              orientation: horizontal
                                              corner_radius: 4dp
                                              children:
                                                - widget: ImageView
                                                  width: match
                                                  height: match
                                                  scaleType: fitXY
                                                  mediaUrl: '{{subMedia3}}'
                                                  click:
                                                    action:
                                                      urlAction:
                                                        openUrl:
                                                          url: '{{subMediaUrl3}}'
                                                      displayText: 서브이미지3
                                                      postback:
                                                        data: set_by_chatbot_open_url
                                            - widget: TextView
                                              width: match
                                              height: content
                                              textStyle: normal
                                              marginLeft: 12dp
                                              gravity: center_vertical
                                              text: '{{subDesc3}}'
                                              textColor: '#232323'
                                              textSize: 16dp
                                              weight: '1'
                                    - widget: LinearLayout
                                      width: match
                                      height: content
                                      orientation: vertical
                                      children:
                                        - widget: Button
                                          width: match
                                          height: 42dp
                                          background: '#E4E4E4'
                                          textColor: '#0094ff'
                                          textSize: 16dp
                                          text: '{{btnName1}}'
                                          textStyle: normal
                                          textAlignment: center
                                          marginTop: 16dp
                                          click:
                                            action:
                                              urlAction:
                                                openUrl:
                                                  url: ''
                                              displayText: dummy
                                          corner_radius: 8dp
                                          visibility: '{{btnVsblty1}}'
                                        - widget: Button
                                          width: match
                                          height: 42dp
                                          background: '#E4E4E4'
                                          textColor: '#0094ff'
                                          textSize: 16dp
                                          text: '{{btnName2}}'
                                          textStyle: normal
                                          textAlignment: center
                                          click:
                                            action:
                                              urlAction:
                                                openUrl:
                                                  url: ''
                                              displayText: dummy
                                          corner_radius: 8dp
                                          visibility: '{{btnVsblty2}}'
                                          marginTop: 8dp
                  status: 200
        default:
          $ref: '#/components/responses/Fail'
  /messagebase/messagebaseform/{messagebaseformId}/logo:
    get:
      tags:
        - SINCE v1.1.10
        - corporation
        - agency
        - messagebase
      summary: |
        RBC에서 템플릿용으로 제공되는 기본 로고 이미지 정보를 조회합니다.
      description: |
        RBC에서 템플릿용으로 제공되는 기본 로고 이미지 정보를 조회합니다.  
        조회된 이미지 파일 ID를 템플릿 등록 시 사용할 수 있습니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**
      parameters:
        - in: path
          name: messagebaseformId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            템플릿 유형 별 제공되는 기본 로고 이미지 리스트를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessagebaseformLogo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/messagebase:
    post:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        브랜드 내에서 사용할 구형 텍스트 템플릿을 등록합니다.
        추가된 신규 템플릿 유형은 POST /brand/{brandId}/v2/messagebase 을 이용해야 합니다.
      description: >
        브랜드 내에서 사용할 텍스트 템플릿을 등록합니다.  

        등록된 템플릿은 RCS Biz Center 운영자의 승인 후 사용 가능합니다.  

        템플릿 등록 시 사용되는 messagebaseformId의 formattedString을 이용하여 템플릿의
        formattedString을 등록해야 합니다.

        추가된 신규 템플릿 유형은 POST /brand/{brandId}/v2/messagebase 을 이용해야 합니다. 


        **[템플릿 등록을 위한 formattedString 처리 방법]**  

          1. messagebaseform 리스트 조회  

          2. 템플릿 생성 시 사용하고자 하는 messagebaseformId 상세 조회를 통해 formattedString 확인(messagebaseform의 formattedString은 수시 업데이트 될 수 있음)  
          
          3. Messagebaseform formattedString 의 각 widget Object 의 widgetPolicy.allowedAttributes 에 지정된 key의 value만 수정할 수 있음(이외 수정 시 오류)  
          
          4. Cell의 경우, ROOT.regMessagebases[0].formattedString.RCSMessage.openrichcardMessage.layout.children[1].children 내 object 단위 제거 할 수 있음  
            단, 1개 이상의 Object(LinearLayout)는 존재해야 함  
          
          5. Cell의 경우, ROOT.regMessagebases[0].formattedString.RCSMessage.openrichcardMessage.layout.children[1].children[n].children 내 Object(TextView) 2개 중 1개는 삭제 가능함   
          
          6. 타이틀 자유형(구 테마 강조형A) 제목 좌측 영역은 고정문자열 8자까지 허용(변수 사용 불가)  
          
          7. 타이틀 자유형(구 테마 강조형A) 제목 우측 영역에 해당하는 ROOT.formattedString.RCSMessage.openrichcardMessage.layout.children[0].children[0].children[1] 삭제 가능  
          
          8. 타이틀 자유형(구 테마 강조형A) 제목 우측 영역에 해당하는 ROOT.formattedString.RCSMessage.openrichcardMessage.layout.children[0].children[0].children[1].text 값(value)은 템플릿 내 정의된 변수만 입력 가능(예시 참조)  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형)**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                regMessagebases:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegMessagebaseInfo'
                  maxItems: 1000
                  minItems: 1
              example:
                regMessagebases:
                  - brandId: BR.1E9K8eF5NY
                    custTmpltId: test2022072604
                    messagebaseformId: TATA001C
                    tmpltName: test2022072604
                    agencyId: ''
                    formattedString:
                      RCSMessage:
                        trafficType: advertisement
                        openrichcardMessage:
                          card: open_rich_card
                          version: 1.0.0
                          zoomAllowed: true
                          scaleAllowed: true
                          layout:
                            widget: LinearLayout
                            width: match
                            height: content
                            orientation: vertical
                            children:
                              - widget: LinearLayout
                                width: match
                                height: content
                                orientation: vertical
                                padding: 20dp
                                children:
                                  - widget: LinearLayout
                                    width: match
                                    height: content
                                    orientation: horizontal
                                    visibility: visible
                                    children:
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - text
                                        widget: TextView
                                        width: match
                                        height: content
                                        textStyle: bold
                                        textAlignment: textStart
                                        text: 카드승인알림
                                        textColor: '#232323'
                                        textSize: 19dp
                                        weight: '1'
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - text
                                        widget: TextView
                                        width: match
                                        height: content
                                        textStyle: bold
                                        textAlignment: textEnd
                                        text: '{{금액}}'
                                        textColor: '#0094ff'
                                        textSize: 19dp
                                        weight: '1'
                                        visibility: visible
                                  - widgetPolicy:
                                      allowedAttributes: []
                                    width: match
                                    height: 3dp
                                    widget: View
                                    background: '#232323'
                                    visibility: visible
                                    marginTop: 10dp
                                    marginBottom: 12dp
                                  - width: match
                                    height: content
                                    widget: LinearLayout
                                    orientation: vertical
                                    children:
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 거래일자
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{거래일자}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 결제구분
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{결제구분}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 결제카드
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{결제카드}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 카드소지자
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{카드소지자}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 승인번호
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{승인번호}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 승인상태
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{승인상태}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: gone
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: 결제금액
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{금액}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textEnd
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - visibility
                                        width: match
                                        height: 1dp
                                        widget: View
                                        background: '#232323'
                                        visibility: visible
                                        marginTop: 12dp
                                        marginBottom: 12dp
                                      - width: match
                                        height: content
                                        widget: LinearLayout
                                        visibility: visible
                                        orientation: horizontal
                                        children:
                                          - widgetPolicy:
                                              allowedAttributes:
                                                - text
                                                - textAlignment
                                                - textColor
                                                - textSize
                                                - textStyle
                                            text: '{{가맹점주소}}'
                                            width: match
                                            height: content
                                            weight: 1
                                            widget: TextView
                                            textSize: 16dp
                                            textColor: '#232323'
                                            textAlignment: textStart
                          suggestions:
                            - action:
                                dialerAction:
                                  dialPhoneNumber:
                                    phoneNumber: '{{B1}}'
                                displayText: 고객센터
                                postback:
                                  data: set_by_chatbot_dial_phone_number
                  - brandId: BR.1E9K8eF5NY
                    custTmpltId: test2022072601
                    messagebaseformId: TATA001D
                    tmpltName: test2022072601
                    agencyId: ''
                    formattedString:
                      RCSMessage:
                        trafficType: advertisement
                        openrichcardMessage:
                          card: open_rich_card
                          version: 1.0.0
                          zoomAllowed: true
                          scaleAllowed: true
                          layout:
                            widget: LinearLayout
                            width: match
                            height: content
                            orientation: vertical
                            children:
                              - widget: LinearLayout
                                width: match
                                height: content
                                orientation: vertical
                                padding: 20dp
                                children:
                                  - widget: LinearLayout
                                    width: match
                                    height: content
                                    orientation: horizontal
                                    visibility: visible
                                    children:
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - text
                                        widget: TextView
                                        width: match
                                        height: content
                                        textStyle: bold
                                        textAlignment: textStart
                                        text: 고정부 제목
                                        textColor: '#232323'
                                        textSize: 19dp
                                        weight: '1'
                                      - widgetPolicy:
                                          allowedAttributes:
                                            - text
                                        widget: TextView
                                        width: match
                                        height: content
                                        textStyle: bold
                                        textAlignment: textEnd
                                        text: ''
                                        textColor: '#0094ff'
                                        textSize: 19dp
                                        weight: '1'
                                        visibility: visible
                                  - widgetPolicy:
                                      allowedAttributes: []
                                    width: match
                                    height: 3dp
                                    widget: View
                                    background: '#232323'
                                    visibility: visible
                                    marginTop: 10dp
                                    marginBottom: 12dp
                                  - widgetPolicy:
                                      allowedAttributes:
                                        - text
                                    widget: TextView
                                    width: match
                                    height: content
                                    text: 타이틀 자유형 서술 템플릿을 등록 예시입니다. {{1}}
                                    textColor: '#232323'
                                    textSize: 16dp
                          suggestions:
                            - action:
                                dialerAction:
                                  dialPhoneNumber:
                                    phoneNumber: '{{2}}'
                                displayText: 고객센터
                                postback:
                                  data: set_by_chatbot_dial_phone_number
      responses:
        '200':
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 등록된 템플릿ID(= messagebaseId) 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        브랜드에 등록된 템플릿을 조회합니다.
      description: |
        브랜드에 등록된 템플릿을 조회합니다.   템플릿 별 승인 상태를 확인할 수 있습니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드에 등록된 템플릿 ID 목록이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Messagebase'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/messagebase/{messagebaseId}:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.
      description: |
        브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            해당 템플릿의 상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessagebaseInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                example:
                  code: '20000000'
                  desc: null
                  result:
                    - groupId: null
                      messagebaseId: UBR.1E9K8eF5NY-test2022072601
                      tmpltName: test2022072601
                      messagebaseformId: TATA001D
                      brandId: BR.1E9K8eF5NY
                      status: ready
                      approvalResult: 승인대기
                      approvalReason: null
                      registerDate: '2022-07-26T13:23:11.000+09'
                      approvalDate: null
                      updateDate: '2022-07-26T13:23:11.000+09'
                      registerId: smoonchoml
                      updateId: null
                      productCode: tmplt
                      spec: openrichcard
                      cardType: description
                      agencyId: null
                      inputText: 타이틀 자유형 서술 템플릿을 등록합니다. {{1}}
                      attribute:
                        - IT 정보
                        - 타이틀 자유형
                        - 타이틀 자유형
                      guideInfo:
                        maxLineCount: 0
                        maxDisplayText: 16
                        maxDescriptionSize: 90
                        imageWidth: '0'
                        imageHeight: '0'
                        detailInfo: null
                      policyInfo:
                        cardCount: 1
                        maxTitleSize: 0
                        maxButtonCount: 2
                        maxDescriptionSize: 90
                        maxMediaSize: 0
                        buttonsAllowed: false
                        adHeaderAllowed: false
                        adBodyAllowed: true
                      params:
                        - param: '2'
                          isMandatory: true
                          type: String
                          contentType: etc
                          strSize: -1
                          fileSize: null
                          strRegx: null
                          verification: []
                          imageWidth: null
                          imageHeight: null
                          couplingId: null
                        - param: description
                          isMandatory: true
                          type: String
                          contentType: description
                          strSize: -1
                          fileSize: null
                          strRegx: ^(타이틀 자유형 서술 템플릿을 등록합니다\. ).+$
                          verification:
                            - 타이틀 자유형 서술 템플릿을 등록합니다. |¶|
                          imageWidth: null
                          imageHeight: null
                          couplingId: null
                          relationId: null
                      formattedString:
                        RCSMessage:
                          trafficType: advertisement
                          openrichcardMessage:
                            card: open_rich_card
                            version: 1.0.0
                            zoomAllowed: true
                            scaleAllowed: true
                            layout:
                              widget: LinearLayout
                              width: match
                              height: content
                              orientation: vertical
                              children:
                                - widget: LinearLayout
                                  width: match
                                  height: content
                                  orientation: vertical
                                  padding: 20dp
                                  children:
                                    - widget: LinearLayout
                                      width: match
                                      height: content
                                      orientation: horizontal
                                      visibility: visible
                                      children:
                                        - widget: TextView
                                          width: match
                                          height: content
                                          textStyle: bold
                                          textAlignment: textStart
                                          text: 고정부 제목
                                          textColor: '#232323'
                                          textSize: 19dp
                                          weight: '1'
                                        - widget: TextView
                                          width: match
                                          height: content
                                          textStyle: bold
                                          textAlignment: textEnd
                                          text: ''
                                          textColor: '#0094ff'
                                          textSize: 19dp
                                          weight: '1'
                                          visibility: gone
                                    - width: match
                                      height: 3dp
                                      widget: View
                                      background: '#232323'
                                      visibility: visible
                                      marginTop: 10dp
                                      marginBottom: 12dp
                                    - widget: TextView
                                      width: match
                                      height: content
                                      text: '{{description}}'
                                      textColor: '#232323'
                                      textSize: 16dp
                                    - widget: LinearLayout
                                      width: match
                                      height: content
                                      orientation: vertical
                                      children:
                                        - widget: Button
                                          width: match
                                          height: 42dp
                                          background: '#EAEAEA'
                                          textColor: '#0094ff'
                                          textSize: 16dp
                                          text: 가장많이쓸까?
                                          textStyle: normal
                                          textAlignment: center
                                          click:
                                            action:
                                              dialerAction:
                                                dialPhoneNumber:
                                                  phoneNumber: '{{2}}'
                                              displayText: 가장많이쓸까?
                                              postback:
                                                data: set_by_chatbot_dial_phone_number
                                          corner_radius: 8dp
                                          visibility: visible
                                          marginTop: 12dp
                                        - widget: Button
                                          width: match
                                          height: 42dp
                                          background: '#EAEAEA'
                                          textColor: '#0094ff'
                                          textSize: 16dp
                                          text: Show location
                                          textStyle: normal
                                          textAlignment: center
                                          click:
                                            action:
                                              mapAction:
                                                showLocation:
                                                  location:
                                                    latitude: 37.4220041
                                                    longitude: -122.0862515
                                                    label: Googleplex
                                                  fallbackUrl: >-
                                                    https://www.google.com/maps/@37.4219162,-122.078063,15z
                                              displayText: Show location
                                              postback:
                                                data: set_by_chatbot_show_location
                                          corner_radius: 8dp
                                          visibility: visible
                                          marginTop: 8dp
                  status: 200
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        지정 템플릿을 업데이트 합니다.
      description: |
        지정 템플릿을 업데이트 합니다.  
        템플릿의 업데이트는 승인상태에 따라 처리 여부가 결정됩니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형)**
          + **수정 가능 상태 : 저장, 반려, 반려(수정), 승인**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegMessagebaseInfo'
      responses:
        '200':
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 템플릿ID(= messagebaseId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - messagebase
      summary: |
        브랜드 내 지정된 템플릿을 삭제합니다.
      description: |
        브랜드 내 지정된 템플릿을 삭제합니다.  
        템플릿의 삭제는 상태에 따라 처리 여부가 결정됩니다.  
        한번 삭제된 템플릿은 복원이 불가능하며 동일한 ID로 생성할 수 없습니다.

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**
          + **삭제 가능 상태 : 저장, 반려, 반려(수정), 승인**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            템플릿이 성공적으로 삭제되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 템플릿ID(= messagebaseId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/messagebase/{messagebaseId}/cancel:
    put:
      tags:
        - SINCE v1.1.4
        - corporation
        - agency
        - messagebase
      summary: |
        지정된 템플릿의 승인요청을 취소합니다.
      description: |
        지정된 템플릿의 승인요청을 취소합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**

        각 상태별 취소 요청 동작은 다음과 같습니다.  

          + **승인대기 : 저장 상태로 변경**          
          + **승인대기(수정) : 직전 승인 상태 및 데이터로 롤백**
          + **반려(수정) : 직전 승인 상태 및 데이터로 롤백**
          + **이외의 경우 에러 리턴**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            템플릿 승인요청이 정상적으로 취소된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 템플릿ID(= messagebaseId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/v2/messagebase:
    post:
      tags:
        - SINCE v1.1.8
        - corporation
        - agency
        - messagebase
      summary: |
        브랜드 내에서 사용할 템플릿을 등록합니다.   Openrichcard 규격의 모든 템플릿 등록이 가능합니다.
      description: >
        브랜드 내에서 사용할 템플릿을 등록합니다.  

        모든 템플릿 등록이 가능하며,   템플릿 등록 시 사용되는 messagebaseformId의 params의 각 항목 중 템플릿에
        표시될 내용을 입력하여 원하는 템플릿을 등록할 수 있습니다.

        등록된 템플릿은 RCS Biz Center 운영자의 승인이 필요합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.           
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegTemplateInfo'
      responses:
        '200':
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 등록된 템플릿ID(= messagebaseId) 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/v2/messagebase/{messagebaseId}:
    put:
      tags:
        - SINCE v1.1.8
        - corporation
        - agency
        - messagebase
      summary: |
        이미 등록된 템플릿의 내용을 수정합니다.
      description: |
        이미 등록된 템플릿의 내용을 수정합니다. messagebase의 ID를 유지하면서 내용을 변경하고자 하는 경우 사용이 가능합니다.
        수정 등록된 템플릿은 RCS Biz Center 운영자의 승인이 필요합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: messagebaseId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModTemplateInfo'
      responses:
        '200':
          description: |
            템플릿이 정상적으로 수정된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        messagebaseId:
                          type: string
                          description: 등록된 템플릿ID(= messagebaseId) 입니다.
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/v2/messagebase/file:
    post:
      tags:
        - SINCE v1.1.8
        - corporation
        - agency
        - messagebase
      summary: |
        이미지 템플릿에서 사용할 이미지 파일을 등록합니다.
      description: |
        이미지 템플릿에서 사용할 이미지 파일을 등록합니다.  
        파일을 먼저 등록해야 이미지 템플릿 등록 시 file Id를 템플릿 내 지정할 수 있습니다.

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  
          + **지원 범위: 이미지 템플릿, LMS 템플릿**  
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: object
                  format: binary
                  description: |
                    이미지 템플릿에 사용할 이미지 파일입니다.
      responses:
        '200':
          description: |
            성공적으로 등록되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/TemplateFileInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/v2/messagebase/file/{fileId}:
    get:
      tags:
        - SINCE v1.1.8
        - corporation
        - agency
        - messagebase
      summary: |
        이미지 템플릿 용으로 등록한 이미지 파일 정보를 조회 합니다.
      description: |
        이미지 템플릿 용으로 등록한 이미지 파일 정보를 조회 합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  
          + **지원 범위: 이미지 템플릿, LMS 템플릿**  
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: fileId
          schema:
            type: string
          required: true
          description: |
            파일ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            조회 결과가 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/TemplateFileInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/chatbot:
    post:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
      summary: |
        지정된 브랜드에 대화방(발신번호)을 등록합니다.
      description: |
        지정된 브랜드에 대화방(발신번호)을 등록합니다.  
        대화방 등록 시 RBC 운영자 검수 승인 후 사용이 가능합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        description: |
          대화방(발신번호) 등록시 통신서비스이용증명원을 함께 업로드해야 합니다.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subNumCertificate:
                  description: >
                    통신서비스 가입증명원 입니다.  

                    입력한 발신번호와 통신서비스 가입증명원의 전화번호가 일치해야 발신번호 등록이 가능하며 최근 1개월 이내
                    발급된 서류로 제출해야 합니다.  

                    **파일형식 : jpg, png, pdf, tiff, zip (최대20MB)**
                  type: object
                  format: binary
                chatbots:
                  description: |
                    등록할 대화방(발신번호) 정보를 최대 1000개까지 등록합니다.  
                    Object 구성은 [RegChatbotInfo](#/RegChatbotInfo)를 참고하시기 바랍니다.
                  type: object
                  properties:
                    chatbots:
                      type: array
                      items:
                        $ref: '#/components/schemas/RegChatbotInfo'
                      maxItems: 1000
                      minItems: 1
      responses:
        '200':
          description: |
            대화방 등록 상태가 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chatbot'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
      summary: |
        브랜드 내에 등록된 대화방 목록을 조회합니다.
      description: |
        브랜드 내에 등록된 대화방(발신번호) 목록을 조회합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드에 등록된 대화방 목록이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chatbot'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/chatbot/{chatbotId}:
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
      summary: |
        지정된 대화방(발신번호)의 상세 정보를 조회합니다.
      description: |
        지정된 대화방(발신번호)의 상세 정보를 조회합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      responses:
        '200':
          description: |
            해당 대화방의 상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatbotDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
      summary: |
        지정된 대화방(발신번호)의 정보를 업데이트합니다.
      description: |
        지정된 대화방(발신번호)의 정보를 업데이트합니다.  
        저장, 반려, 승인 상태의 대화방(발신번호)만 수정이 가능하며, 대화방명이 변경되면 RBC 운영자의 검수를 받아야 합니다.    

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
          + **수정 가능 상태 : 저장, 반려, 승인**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subNumCertificate:
                  description: >
                    통신서비스 가입증명원 입니다.  

                    입력한 발신번호와 통신서비스 가입증명원의 전화번호가 일치해야 발신번호 등록이 가능하며 최근 1개월 이내
                    발급된 서류로 제출해야 합니다.  

                    **파일형식 : jpg, png, pdf, tiff, zip (최대20MB)**
                  type: object
                  format: binary
                chatbot:
                  $ref: '#/components/schemas/RegChatbotInfo'
      responses:
        '200':
          description: |
            상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatbotDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
      summary: |
        대화방(발신번호)을 삭제합니다.
      description: |
        대화방(발신번호)을 삭제합니다.
        양방향 대화방의 회신번호로 등록된 발신번호 삭제 시, 대상 양방향 대화방도 함께 삭제 처리 됩니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
          + **삭제 가능 상태 : 저장, 반려, 승인**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방ID(=chatbotId)
                        releatedChatbots:
                          description: 삭제된 chatbotId를 회신번호로 사용하는 함께 삭제된 양방향대화방 리스트
                          type: array
                          items:
                            properties:
                              chatbotId:
                                description: 대화방ID(=chatbotId)
                                type: string
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/chatbot/{chatbotId}/cancel:
    put:
      tags:
        - SINCE v1.1.9
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        지정된 대화방(발신번호, 양방향ID)의 승인요청을 취소합니다.
      description: |
        지정된 대화방(발신번호, 양방향ID)의 승인요청을 취소합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  

        각 상태별 취소 요청 동작은 다음과 같습니다.
                
          + **승인대기 : 저장 상태로 변경**          
          + **승인대기(수정) : 직전 승인 상태 및 데이터로 롤백**        
          + **반려(수정) : 직전 승인 상태 및 데이터로 롤백**  
          + **이외의 경우 에러 리턴**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            대화방 승인요청이 정상적으로 취소된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방ID(=chatbotId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/bidirectional/chatbot:
    post:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방(양방향)을 등록합니다.
      description: |
        양방향ID를 이용한 대화방을 등록하거나 대화방에 다음과 같은 사항을 연결을 하고자 하는 경우 사용합니다.  
          
          + 양방향ID 대화방 등록  
          + 발신번호 또는 양방향ID 대화방에 대화방 메뉴 등록  
          + 발신번호 또는 양방향ID 대화방에 양방향 서비스 대행사 연결(자동응답메시지, 챗봇 사용)  

        대화방명 등록/변경 시 RBC 운영자 검수 승인 후 등록됩니다.    

          + 발신번호를 이용한 양방향 대화방 전환 등록 시 대화방명이 변경된 경우  
          + 사용자 입력 양방향ID를 이용한 신규 양방향 대화방 등록 시  

          - **계정 권한 : 마스터, 매니저, 대행사**  
          - **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chatbot:
                  $ref: '#/components/schemas/RegBiChatbot'
      responses:
        '200':
          description: |
            등록 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BiChatbot'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    get:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        브랜드에 등록된 대화방(양방향) 목록을 조회합니다.
      description: |
        브랜드에 등록된 양방향ID 또는 대화방메뉴, 양방향 대행사가 연결된 대화방 목록을 조회합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드에 등록된 대화방(양방향) 목록이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BiChatbot'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}:
    get:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방(양방향)의 상세 정보를 조회합니다.
      description: |
        대화방(양방향)의 상세 정보를 조회합니다.  
        양방향ID 또는 대화방메뉴, 양방향 대행사가 연결된 대화방의 상세 정보를 조회합니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            대화방(양방향)의 상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BiChatbotDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방(양방향) 정보를 수정 합니다.
      description: |
        대화방(양방향) 정보를 수정 합니다.  
        양방향ID를 이용한 대화방을 수정하거나 대화방에 다음과 같은 사항을 연결을 하고자 하는 경우 사용합니다.  
          
          + 양방향ID 대화방 수정  
          + 발신번호 또는 양방향ID 대화방에 대화방 메뉴 등록  
          + 발신번호 또는 양방향ID 대화방에 양방향 서비스 대행사 연결/해제(자동응답메시지, 챗봇 사용)  

        대화방명 등록/변경 시 RBC 운영자 검수 승인 후 등록됩니다.  

          + 발신번호를 이용한 양방향 대화방 전환 등록 시 대화방명이 변경된 경우  
          + 사용자 입력 양방향ID를 이용한 신규 양방향 대화방 등록 시   

          - **계정 권한 : 마스터, 매니저, 대행사**  
          - **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chatbot:
                  $ref: '#/components/schemas/ModBiChatbot'
      responses:
        '200':
          description: |
            상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BiChatbot'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방(양방향)을 삭제합니다.
      description: |
        양방향ID 대화방 삭제 또는 양방향 대행사가 연결된 발신번호 대화방에서 양방향 대행사 정보를 제거합니다.  

          + 양방향ID 대화방 삭제  
          + 발신번호 대화방에 연결된 양방향 대행사 정보 제거(양방향 서비스 속성 제거)   
          + 양방향 대행사 정보가 없는 발신번호 대화방 삭제(DELETE /brand/{brandId}/chatbot/{chatbotId} 동일) 

          - **계정 권한 : 마스터, 매니저, 대행사**  
          - **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방Id(=chatbotId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu:
    post:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방에 대화방메뉴를 등록합니다.
      description: >
        대화방에 대화방메뉴를 등록합니다.

        대화방 메뉴 개편으로 상위 메뉴, 하위 메뉴 구분 없이 최대 5개까지 메뉴를 지정할 수 있습니다.    


        ※  대표번호 문자서비스가 설정된 대화방에는 대화방메뉴를 등록할 수 없습니다. 즉, rcsReply 값이 1인 대화방에만
        대화방메뉴를 설정할 수 있습니다.

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                persistentMenu:
                  $ref: '#/components/schemas/RegPersistentMenu'
      responses:
        '200':
          description: |
            성공적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방Id(=chatbotId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방의 대화방메뉴를 수정합니다.
      description: >
        대화방의 대화방메뉴를 수정합니다.

        대화방 메뉴 개편으로 상위 메뉴, 하위 메뉴 구분 없이 최대 5개까지 메뉴를 지정할 수 있습니다.    


        ※  대표번호 문자서비스가 설정된 대화방에는 대화방메뉴를 등록할 수 없습니다. 즉, rcsReply 값이 1인 대화방에만
        대화방메뉴를 설정할 수 있습니다.

          + **계정 권한 : 마스터, 매니저, 대행사**  
          + **브랜드 권한 : 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                persistentMenu:
                  $ref: '#/components/schemas/RegPersistentMenu'
      responses:
        '200':
          description: |
            성공적으로 수정된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방Id(=chatbotId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - bidirectional
      summary: |
        대화방의 대화방메뉴를 삭제합니다.
      description: |
        대화방의 대화방메뉴를 삭제합니다.   
        삭제 요청한 대화방의 대화방메뉴만 삭제되며 대화방은 삭제되지 않습니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            성공적으로 삭제된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방Id(=chatbotId)
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/autoreplymsg:
    post:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        브랜드에 자동응답메시지를 등록합니다.
      description: >
        브랜드에 자동응답메시지를 등록합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  

        자동응답메시지에 등록 가능한 액션이 추가 되었습니다.  

          + 전화걸기
          + 웹사이트(내부브라우져)
          + 웹사이트(외부브라우져)
          + 대화방연결(메시지작성)
          + 캘린더(일정)
          + 지도(좌표)
          + 지도(키워드)
          + 지도(현재위치)
          + <신규>자동응답메시지연결
          + <신규>챗봇연결

        제공되는 productcode = chat 해당 messagebaseId를 지정하여 사용하며 다음과 같이 처리 됩니다.  
            
          + 기본 말풍선(SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  
          + 세로형_Meduim(SCwThM00), 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리
          + 슬라이드형_Medium, 슬라이드형_Small은 슬라이드형_Medium으로 처리  
            - 슬라이드형 Medium ID: CCwMhM0200 ~ CCwMhM0600  
            
        **따라서 지정된 messagebaseId에만 존재하는 필드가 전환되는 messagebaseId에 존재하지 않는 경우
        무시됩니다.**   

        예를 들어, 텍스트 카드로 등록 시 title을 입력하더라도 기본 말풍선은 title을 지원하지 않으므로 title이 적용되지
        않습니다.
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        description: |
          자동응답메시지 등록 정보를 전송합니다.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegAutoReplyMsgInfo'
      responses:
        '200':
          description: |
            자동응답메시지 등록 결과가 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        autoReplyMsgId:
                          type: string
                          maximum: 40
                          description: 자동응답메시지 ID
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    get:
      tags:
        - SINCE v1.0
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        브랜드 내에 등록된 자동응답메시지 목록을 조회합니다.
      description: |
        브랜드 내에 등록된 자동응답메시지 목록을 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드에 등록된 자동응답 목록이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoReplyMsg'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/autoreplymsg/{autoReplyMsgId}:
    get:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        자동응답메시지의 상세 정보를 조회합니다.
      description: |
        자동응답메시지의 상세 정보를 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: autoReplyMsgId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoReplyMsgInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        자동응답메시지의 정보를 업데이트합니다.
      description: >
        자동응답메시지의 정보를 업데이트합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 

        자동응답메시지에 등록 가능한 액션이 추가 되었습니다.  

          + 전화걸기
          + 웹사이트(내부브라우져)
          + 웹사이트(외부브라우져)
          + 대화방연결(메시지작성)
          + 캘린더(일정)
          + 지도(좌표)
          + 지도(키워드)
          + 지도(현재위치)
          + <신규>자동응답메시지연결
          + <신규>챗봇연결
          
        제공되는 productcode = chat 해당 messagebaseId를 지정하여 사용하며 다음과 같이 처리 됩니다.  
            
          + 기본 말풍선(SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  
          + 세로형_Meduim(SCwThM00), 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리
          + 슬라이드형_Medium, 슬라이드형_Small은 슬라이드형_Medium으로 처리  
            - 슬라이드형 Medium ID: CCwMhM0200 ~ CCwMhM0600  
            
        **따라서 지정된 messagebaseId에만 존재하는 필드가 전환되는 messagebaseId에 존재하지 않는 경우
        무시됩니다.**   

        예를 들어, 텍스트 카드로 등록 시 title을 입력하더라도 기본 말풍선은 title을 지원하지 않으므로 title이 적용되지
        않습니다.
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: autoReplyMsgId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegAutoReplyMsgInfo'
      responses:
        '200':
          description: |
            상세 내역이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoReplyMsgInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        자동응답메시지를 삭제합니다.
      description: |
        자동응답메시지를 삭제합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: autoReplyMsgId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        autoReplyMsgId:
                          type: string
                          maximum: 40
                          description: 자동응답메시지 ID
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/autoreplymsg/file:
    post:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        자동응답메시지에서 사용할 이미지 파일을 등록합니다.
      description: |
        자동응답메시지에서 사용할 이미지 파일을 등록합니다.
        파일을 먼저 등록해야 자동응답메시지를 등록할 때 fileId를 메시지 내 지정할 수 있습니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: object
                  format: binary
                  description: |
                    자동응답메시지에 사용할 이미지 파일입니다.
      responses:
        '200':
          description: |
            성공적으로 등록되었을 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoReplyMsgFileInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/autoreplymsg/file/{fileId}:
    get:
      tags:
        - SINCE v1.1.5
        - corporation
        - agency
        - chatbot
        - autoreplymsg
        - bidirectional
      summary: |
        자동응답메시지에서 사용할 이미지 파일 상세 정보를 조회합니다.
      description: |
        자동응답메시지에서 사용할 이미지 파일 상세 정보를 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: fileId
          schema:
            type: string
          required: true
          description: |
            파일ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            등록된 파일 정보를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoReplyMsgFileInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/contract:
    get:
      tags:
        - SINCE v1.0
        - agency
      summary: |
        대행사가 계약된 브랜드 리스트를 제공합니다.
      description: |
        대행사가 계약된 브랜드 리스트를 제공합니다.  
        브랜드별 기업의 사업자등록번호를 함께 전달 하여 대행사에 등록된 기업 정보와 맵핑할 수 있습니다.  

          + **계정 권한: 대행사**  
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/corp/{corpRegNum}/brand:
    get:
      tags:
        - SINCE v1.0
        - agency
      summary: |
        대행사가 계약된 브랜드를 기업 단위로 조회합니다.
      description: |
        대행사가 계약된 브랜드를 기업 단위로 조회합니다.  
        기업 단위 조회 시 사업자등록번호를 이용합니다.  

          + **계정 권한: 대행사**  
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
        - in: path
          name: corpRegNum
          schema:
            type: string
            maximum: 10
          required: true
          description: 대상 기업의 사업자등록번호(10자리) 입니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            계약된 브랜드 목록이 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/brand/{brandId}:
    get:
      tags:
        - SINCE v1.0
        - agency
      summary: |
        계약된 브랜드 정보를 개별 조회 합니다.
      description: |
        계약된 브랜드 정보를 개별 조회 합니다.  
        승인된 브랜드만 조회가 가능합니다.  
          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
      responses:
        '200':
          description: |
            조회된 브랜드 정보를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.10
        - agency
      summary: |
        대행사가 운영 중인 브랜드 정보를 수정 합니다. 브랜드명, 프로필 이미지가 수정되면 다시 승인을 받아야 합니다.
      description: >
        대행사 계정으로 현재 운영 중인 브랜드 정보를 수정 합니다.   

        브랜드 권한(Contract)이 있어야 수정이 가능하며 Header에 브랜드 Key를 삽입하여야 합니다.  

        **브랜드명** 또는 **프로필 이미지**가 수정되면 다시 승인을 받아야 합니다. 상태가 **승인대기**로 변경 됩니다.  

        이외 정보 수정은 별도의 승인 과정 없이 업데이트 됩니다.  

        수정된 데이터가 이통 3사로 전송되는 과정에서 전송이 지연되거나 장애로 인해 이통 3사 모두 전송이 완료되지 못한 경우,  
        브랜드 정보 조회 데이터와 단말에서 표시되는 브랜드 홈 정보가 상이할 수 있습니다.  

          + **계정 권한 : 대행사**  
          + **브랜드 권한 : 운영자**  
          + **수정 가능 상태 : 승인, 반려(수정승인)**  
          + **수정 승인 요청 시 상태 : 승인대기(수정승인)**
      parameters:
        - in: path
          name: agencyId
          description: 브랜드의 운영 권한이 있는 대행사 ID 입니다.
          schema:
            type: string
            maximum: 20
          required: true
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                regBrand:
                  $ref: '#/components/schemas/RegBrandInfo'
                brandProfile:
                  description: >
                    브랜드 프로필 이미지를 업로드합니다.  

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식
                    : png (최대1MB)**
                  type: string
                  format: binary
                brandBackground:
                  description: >
                    브랜드 백그라운드 이미지를 업로드합니다.  

                    등록되어 있는 브랜드 백그라운드 이미지를 제거하기 위해서는 파일 없이 brandBackground form
                    key만 전송하면 됩니다.\

                    **최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식
                    : jpg, png (최대1MB)**
                  type: string
                  format: binary
      responses:
        '200':
          description: |
            정상적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/agencyKey:
    get:
      tags:
        - SINCE v1.1.9
        - agency
      summary: |
        RBC에서 발급된 최종 대행사 키를 조회합니다.
      description: |
        RBC 에서 발급된 최종 대행사 키를 조회합니다.  

          + **계정 권한: 대행사**  

        대행사 키의 재발급, 삭제는 RBC 홈페이지에서만 가능합니다.  
        대행사 키 재발급 시,  

          + 이전 대행사 키는 재발급 후 24시간 동안 유효하며, 24시간 경과 후 자동 삭제됩니다.  

          + 대행사키의 유출이 우려되어 즉시 삭제를 원할 경우, RBC 웹사이트를 통해 직전 대행사키를 수동 삭제할 수 있습니다.  
            이 경우 신규 대행사키로만 메시지 전송이 성공되며, 직전 대행사키로 메시지 전송 시 실패됩니다.  
            ( 경로 : RBC대행사 계정 로그인 > 내 계정관리 > Agency Key )
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
      responses:
        '200':
          description: |
            현재 대행사 키 정보를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgencyKeyInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /{webhookUrl}:
    post:
      tags:
        - SINCE v1.0
        - agency
      summary: |
        대행사에서 등록한 수신서버 URL을 통해 RBC에서 발생하는 데이터의 등록/수정/삭제 이벤트 정보를 전달합니다.
      description: |
        대행사에서 등록한 수신서버 URL을 통해 RBC에서 발생하는 데이터의 등록/수정/삭제 이벤트 정보를 전달합니다.  
        등록/수정/삭제 알림 대상은 다음과 같습니다.  
          + 브랜드 계약(권한) 등록  
          + 브랜드 수정/반려  
          + 대화방 승인/수정/반려/삭제  
          + 템플릿 승인/수정/반려/삭제  
          + 자동응답메시지 등록/수정/삭제  
          + 신규 포멧/템플릿 상품 등록  
          + 대행사 키 재발급
          + 레아아웃 등록/수정/삭제
          + 로고 승인/수정/반려/삭제
      parameters:
        - in: path
          name: webhookUrl
          schema:
            type: string
          required: true
          description: |
            대행사에서 등록한 Webhook URL 정보
      requestBody:
        description: |
          notiType에 설정된 다음의 대상 정보를 구분하여 Object를 제공합니다.

            - contract: 브랜드 계약              
            - chatbot: 대화방              
            - messagebaseform: 템플릿 양식              
            - template: 템플릿              
            - format: 포멧(이통 제공 공통템플릿)              
            - brand: 브랜드              
            - autoreplymsg: 자동응답메시지              
            - agencykey: 대행사 키
            - formatbr: 브랜드에 등록된 레이아웃으로 만든 포멧  
            - logo: 브랜드 로고
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NotiContract'
                - $ref: '#/components/schemas/NotiChatbot'
                - $ref: '#/components/schemas/NotiMessagebaseForm'
                - $ref: '#/components/schemas/NotiTemplate'
                - $ref: '#/components/schemas/NotiFormat'
                - $ref: '#/components/schemas/NotiBrand'
                - $ref: '#/components/schemas/NotiAutoReplyMsg'
                - $ref: '#/components/schemas/NotiAgencyKey'
                - $ref: '#/components/schemas/NotiFormatBr'
                - $ref: '#/components/schemas/NotiLogo'
              discriminator:
                propertyName: notiType
              example:
                notiType: contract
                method: created
                reason: null
                corpId: CO.lR4JLOeOn3
                corpRegNum: '1148196221'
                brandId: BR.7EU1Ea9Bxb
      responses:
        '200':
          description: |
            성공적으로 알림을 수신하였을 경우 응답합니다.
        '400':
          description: |
            대행사 측 청약이 우선 처리되지 않은 상태에서 'contract'가 전달된 경우 필히 응답되어야 합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookErrorInfo'
  /{webhookUrl}/bidirectional:
    post:
      tags:
        - SINCE v1.1.5
        - agency
        - bidirectional
      summary: |
        양방향 서비스 제공 중계사에서 구현해야 하는 Webhook URI 입니다.
      description: >
        양방향 서비스 제공 중계사에서 구현해야 하는 Webhook URI 입니다.

        RBC 대행사 정보의 수신서버 URL하위에 bidirctional 경로를 구현 제공해야 합니다.  

        양방향 서비스 제공 중계사는 RBC에 등록되는 대행사의 양방향 메시지 중계사 지정, 양방향 대화방 등록, 대화방 메뉴 사용 시
        청약 여부와 같이 양방향 서비스 제공을 위해 필수 정보 연동이 필요합니다.  
      parameters:
        - in: path
          name: webhookUrl
          schema:
            type: string
          required: true
          description: |
            양방향 중계사에서 등록한 수신서버(Webhook) URL 정보 입니다.
      requestBody:
        description: >
          notiType에 설정된 다음의 대상 정보를 구분하여 Object를 제공합니다.  

          persistentmenu는 registration의 의미를 포함하고 있습니다.  

          예를 들어, A중계사로 지정되어 있던 대화방메뉴를 갖는 양방향 대화방의 중계사를 B중계사로 변경한 경우, B중계사는
          registration 수신 없이 persistentmenu를 수신하게 됩니다.  
            
          - 'appointment': 일반 대행사가 양방향 서비스 중계사로 지정 알림
            + 중계사는 대행사 지정에 대한 판단 후 성공(200) 또는 실패(404) 응답을 리턴하여야 함
            
            **[예시]**  
            {
              "notiType": "appointment",
              "value": {
                "agencyCorpRegNum": "1148196221"
              }
            }
            
          - 'registration': 양방향 대화방 등록 알림 (agencyId는 RBC에 등록된 대행사 ID 이며, noti를
          받은 중계사를 지정한 대행사의 ID 또는 중계사의 ID) 
            + 양방향 대화방 생성 후 단순 통지, 중계사는 수신시 성공(200) 응답을 리턴하여야 함 

            **[예시]**  
            {
              "notiType": "registration",
              "value": {
                "agencyId": "noagency",
                "brandId": "BR.Q63creSjku",
                "brandKey": "BK.SD8X63r9uJaApN9",
                "chatbotId": "bd_chatbot_v1",
                "corpRegNum": "1148196221"
              }
            }

          - 'subscription': 대화방메뉴 자동응답메시지 사용 청약 확인을 RBC가 중계사로 요청함  
            + 중계사는 corpRegNum으로 대화방메뉴 자동응답메시지 사용 청약 여부를 확인 후 성공(200) 또는 실패(404) 응답을 리턴하여야 함
            
            **[예시]**  
            {
              "notiType": "subscription",
              "value": {
                "agencyId": "noagency",
                "brandId": "BR.Q63creSjku",
                "brandKey": "BK.SD8X63r9uJaApN9",
                "chatbotId": "bd_chatbot_v1",
                "corpRegNum": "1148196221"
              }
            }

          - 'persistentmenu': 대화방메뉴 등록 알림 (agencyId는 RBC에 등록된 대행사 ID 이며, noti를
          받은 중계사를 지정한 대행사의 ID 또는 중계사의 ID)
            + 양방향 대화방 대화방메뉴 등록 후 단순 통지, 중계사는 수신시 성공(200) 응답을 리턴하여야 함

            **[예시]**  
            {
              "notiType": "persistentmenu",
              "value": {
                "agencyId": "noagency",
                "brandId": "BR.Q63creSjku",
                "brandKey": "BK.SD8X63r9uJaApN9",
                "chatbotId": "bd_chatbot_v1",
                "corpRegNum": "1148196221"
              }
            }
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotiBidirectional'
            example:
              notiType: registration
              value:
                agencyId: noagency
                brandId: BR.Q63creSjku
                brandKey: BK.SD8X63r9uJaApN9
                chatbotId: bd_chatbot_v1
                corpRegNum: '1148196221'
      responses:
        '200':
          description: |
            전송된 정보가 정상 처리된 경우 응답합니다.
        '404':
          description: |
            appointment, subscription 수신 시 판단 결과 실패에 해당하는 경우 리턴 합니다.
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu/pause:
    put:
      tags:
        - SINCE v1.1.5
        - agency
      summary: |
        중계사만 사용이 가능하며, 양방향 대화방의 대화방메뉴 사용을 중지 또는 재개합니다.
      description: |
        양방향 대화방에 대화방메뉴 사용을 중지 또는 재개합니다.  
        양방향 대화방에 등록된 중계사만 사용이 가능합니다.  
        과금 미납 발생 등 특이사항이 발생한 경우 사용하며 대화방메뉴 중지에 대한 정보가 사용자에게 RBC 홈페이지에서 표시됩니다.  
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: chatbotId
          description: |
            브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PausePersistentMenu'
      responses:
        '200':
          description: |
            성공적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        chatbotId:
                          type: string
                          description: 대화방ID
                        isPause:
                          type: boolean
                          description: 중지여부
                        pausedDate:
                          type: string
                          format: date-time
                          description: isPause true 인 경우, 중지일시
                        resumeDate:
                          type: string
                          format: date-time
                          description: isPause false인 경우, 재개일시
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /statQuery/message/{brandId}:
    get:
      tags:
        - SINCE v1.1.6
        - corporation
        - agency
        - stat
      summary: |
        고객반응 통계 - 캠페인 메시지 발송/읽음확인 통계를 조회합니다.
      description: |
        고객반응 통계 - 캠페인 메시지 발송/읽음확인 통계를 조회합니다.

          - 동일 Group ID에 발송일 기준 3일간 (D+3) 집계됩니다. 단, 이통사별 발송 성공건수 100건 이상인 경우에 한해 집계됩니다.  
          - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: startDate
          schema:
            type: string
          description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: endDate
          schema:
            type: string
          description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: groupId
          schema:
            type: string
          description: 발송 캠페인 구분 ID 입니다.
          required: true
        - in: query
          name: chatbotId
          schema:
            type: string
          description: 대화방ID 입니다.
      responses:
        '200':
          description: |
            성공적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessageStatData'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /statQuery/messageButton/{brandId}:
    get:
      tags:
        - SINCE v1.1.6
        - corporation
        - agency
        - stat
      summary: |
        고객반응 통계 - 캠페인 메시지 버튼 클릭 통계를 조회합니다.
      description: |
        고객반응 통계 - 캠페인 메시지 버튼 클릭 통계를 조회합니다.

          - 동일 Group ID에 발송일 기준 4일간(D+3) 집계됩니다. 단, 이통사별 발송 성공건수 100건 이상인 경우에 한해 집계됩니다.  
          - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: startDate
          schema:
            type: string
          description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: endDate
          schema:
            type: string
          description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: groupId
          schema:
            type: string
          description: 발송 캠페인 구분 ID 입니다.
          required: true
        - in: query
          name: chatbotId
          schema:
            type: string
          description: 대화방ID 입니다.
      responses:
        '200':
          description: |
            성공적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessageButtonStatData'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /statQuery/persistentMenu/{brandId}:
    get:
      tags:
        - SINCE v1.1.6
        - corporation
        - agency
        - stat
      summary: |
        고객반응 통계 - 대화방 메뉴 클릭 통계를 조회합니다.
      description: |
        고객반응 통계 - 대화방 메뉴 클릭 통계를 조회합니다.

          - 대화방별 1건 이상 사용자선택이 일어난 경우에 대해 집계됩니다.  
          - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: startDate
          schema:
            type: string
          description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: endDate
          schema:
            type: string
          description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: chatbotId
          schema:
            type: string
          description: 대화방ID 입니다.
          required: true
      responses:
        '200':
          description: |
            성공적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersistentMenuStatData'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /statQuery/brandprofile/{brandId}:
    get:
      tags:
        - SINCE v1.1.10
        - corporation
        - agency
        - stat
      summary: |
        (준비중) 브랜드프로필 노출 통계를 조회합니다.
      description: |
        (준비중)   
        브랜드프로필 노출 통계를 조회합니다.

          - 브랜드 프로필 이미지가 단말에 표시되면 일자별로 집계됩니다. 
          - 단말에서 브랜드 프로필은 대화방별로 노출되므로 통계 데이터는 브랜드에 등록된 대화방별 건수로 제공됩니다.
          - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자** 
      parameters:
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: query
          name: startDate
          schema:
            type: string
          description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
          required: true
        - in: query
          name: endDate
          schema:
            type: string
          description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
          required: true
      responses:
        '200':
          description: |
            성공적으로 처리된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandProfileStatData'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/corp/{corpRegNum}:
    get:
      tags:
        - SINCE v1.1.7
        - agency
      summary: |
        사업자등록번호로 RBC 가입 여부와 브랜드 대행사 지정 상태를 확인할 수 있습니다.
      description: |
        사업자등록번호로 RBC 가입 여부와 브랜드 대행사 지정 상태를 확인할 수 있습니다.  

          + **계정 권한: 대행사**  
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
        - in: path
          name: corpRegNum
          schema:
            type: string
            maximum: 10
          required: true
          description: 조회 대상 사업자등록번호(10자리) 입니다.
      responses:
        '200':
          description: |
            가입 여부, 대행사 지정 상태를 응답합니다.  
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        corpRegNum:
                          type: string
                          description: 조회 요청한 사업자등록번호
                          example: 1148196221
                        conditionValue:
                          type: integer
                          description: >
                            등록 여부 및 브랜드, 대행사 지정 현황 상태값 0: RBC 미등록 사업자등록번호<br> 1:
                            RBC 등록 사업자등록번호이나 브랜드 등록 없음<br> 2: 1건 이상의 브랜드 등록있으나
                            대행사 지정 건 없음<br> 3: 1건 이상 브랜드 등록 및 1개 이상 대행사 지정 존재
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                          example: 0
                        conditionDescription:
                          type: string
                          description: |
                            conditionValue 에 대한 설명
                          enum:
                            - RBC 미등록 사업자등록번호
                            - RBC 등록 사업자등록번호이나 브랜드 등록 없음
                            - 1건 이상의 브랜드 등록있으나 대행사 지정 건 없음
                            - 1건 이상 브랜드 등록 및 1개 이상 대행사 지정 존재
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /agency/{agencyId}/corp/{corpRegNum}/chatbot/{chatbotId}:
    get:
      tags:
        - SINCE v1.1.7
        - agency
      summary: |
        발신번호가 RBC에 대상 사업자의 발신번호로 등록되어 있는지 확인할 수 있습니다.
      description: |
        발신번호가 RBC에 대상 사업자의 발신번호로 등록되어 있는지 확인할 수 있습니다.

          + **계정 권한: 대행사**  
      parameters:
        - in: path
          name: agencyId
          schema:
            type: string
            maximum: 20
          required: true
          description: RCS Biz Center에 등록된 대행사 ID 입니다.
        - in: path
          name: corpRegNum
          schema:
            type: string
            maximum: 10
          required: true
          description: 조회 대상 사업자등록번호(10자리) 입니다.
        - in: path
          name: chatbotId
          schema:
            type: string
            maximum: 15
          required: true
          description: 확인하고자 하는 발신번호 입니다.
      responses:
        '200':
          description: |
            등록 여부 확인 결과를 제공합니다.  
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        corpRegNum:
                          type: string
                          description: 조회 요청한 사업자등록번호
                          example: 1148196221
                        chatbotId:
                          type: string
                          description: 조회 요청한 발신번호
                          example: 15225739
                        conditionValue:
                          type: integer
                          description: >
                            발신번호 등록 여부 상태값 0: RBC 미등록 발신번호<br> 1: 해당 사업자로 등록된
                            발신번호<br> 2: 해당 사업자로 등록된 발신번호가 아님
                          enum:
                            - 0
                            - 1
                            - 2
                          example: 0
                        conditionDescription:
                          type: string
                          description: |
                            conditionValue 에 대한 설명
                          enum:
                            - RBC 미등록 발신번호
                            - 해당 사업자로 등록된 발신번호
                            - 해당 사업자로 등록된 발신번호가 아님
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /usableQuery/chatbotId/{chatbotId}:
    get:
      tags:
        - SINCE v1.1.8
        - corporation
        - agency
        - usable
      summary: |
        대화방ID 등록 가능 여부를 조회 합니다.
      description: >
        대화방ID 등록 가능 여부를 조회 합니다. 등록 가능한 경우 200 OK 응답으로 리턴되며, 대화방ID 형식 부적합, 이미 등록된
        대화방ID 등  등록이 불가능한 경우 400 Error 리턴됩니다.

          + 발신번호 조회 시에는 숫자만 입력해야 합니다.  
            - 발신번호 조회 시 숫자 이외 '-'을 삽입할 경우 양방향 대화방ID로 인식될 수 있으므로 주의해 주세요.  
          + 양방향 대화방ID 조회 시에는 영문, 숫자, '-', '_' 사용이 가능합니다.  
            - 양방향 대화방ID 영문 대문자는 소문자로 변환됩니다.  

          + **계정 권한: 대행사**  
      parameters:
        - in: path
          name: chatbotId
          schema:
            type: string
            maximum: 15
          required: true
          description: 확인하고자 하는 대화방ID 입니다.
      responses:
        '200':
          description: |
            대화방ID 등록이 가능할 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
                      example: bot-chat2212
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                    example: registration available
        default:
          $ref: '#/components/responses/Fail'
  /baselayout/component:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        레이아웃 등록/수정 시 사용 가능한 컴포넌트 목록을 조회 합니다.
      description: |
        레이아웃 등록/수정 시 사용 가능한 컴포넌트 목록을 조회 합니다.  
        컴포넌트 별 상세 내역이 제공되므로 별도의 컴포넌트별 상세 조회 API는 제공하지 않습니다.  

          + **계정 권한: 대행사**
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            컴포넌트 리스트를 제공합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComponentInfo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /baselayout/sample:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 목록 입니다.
      description: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 목록 입니다.  

          + **계정 권한: 대행사**
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            샘플 레이아웃 목록을 제공합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleLayout'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
  /baselayout/sample/{sampleLayoutId}:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 상세 정보를 조회합니다.
      description: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 상세 정보를 조회합니다.  

          + **계정 권한: 대행사**
      parameters:
        - in: path
          name: sampleLayoutId
          schema:
            type: string
          description: 샘플레이아웃 ID 입니다.
          required: true
      responses:
        '200':
          description: |
            샘플 레이아웃 상세 조회 결과를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleLayoutDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /baselayout/product/rule:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        메시지 상품별 레이아웃 구성 규칙을 조회합니다.
      description: |
        메시지 상품별 레이아웃 구성 규칙을 조회합니다.  
        본 규칙에 부합해야만 레이아웃 등록/수정이 가능합니다.  

          + **계정 권한: 대행사**
      responses:
        '200':
          description: |
            상품별 레이아웃 구성 규칙 정보를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/LayoutRule'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/layout:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.
      description: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.  

          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드 내 등록된 레이아웃 목록을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandLayout'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
    post:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        브랜드 내에서 사용할 수 있는 레이아웃을 등록 합니다.  
      description: |
        브랜드 내에서 사용할 수 있는 레이아웃을 등록 합니다.  

          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegBrandLayout'
      responses:
        '200':
          description: |
            레이아웃이 정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        layoutId:
                          type: string
                          description: |-
                            등록된 레이아웃 ID(= messagebaseId) 입니다.
                            레이아웃 ID는 RCS 발송에 사용하는 messagebaseId 로 사용됩니다.
                          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/layout/{layoutId}:
    get:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.
      description: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.  

          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: layoutId
          schema:
            type: string
          description: 레이아웃ID 입니다.
          required: true
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      responses:
        '200':
          description: |
            브랜드 내 등록된 레이아웃 상세 정보를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandLayoutDetail'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        브랜드 내 레이아웃을 수정 합니다.  
      description: |
        브랜드 내 레이아웃을 수정 합니다.  

          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: layoutId
          schema:
            type: string
          description: 레이아웃ID 입니다.
          required: true
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegBrandLayout'
      responses:
        '200':
          description: |
            레이아웃이 정상적으로 수정된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        layoutId:
                          type: string
                          description: |
                            수정된 레이아웃 ID(= messagebaseId) 입니다.  
                            레이아웃 ID는 RCS 발송에 사용하는 messagebaseId 로 사용됩니다.
                          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
                        body:
                          type: object
                          description: |
                            중계사 발송 API /message 의 body에 사용되는 발송 전문 필드 정보입니다.  
                            규격서에 나열된 항목 이외에도 지정한 컴포넌트별 입력 가능한 항목을 추출하여 구성 제공합니다.
                          example:
                            mTitle: ''
                            description: ''
                            mTitleMedia: ''
                            mediaUrl1: ''
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    delete:
      tags:
        - SINCE v1.1.10
        - agency
        - layout
      summary: |
        브랜드 별 등록된 레이아웃을 삭제합니다.
      description: |
        브랜드 별 등록된 레이아웃을 삭제합니다.  

          + **계정 권한: 대행사**  
          + **브랜드 권한: 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: path
          name: layoutId
          schema:
            type: string
          description: 레이아웃ID 입니다.
          required: true
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      responses:
        '200':
          description: |
            브랜드 내 레이아웃 정상 삭제 시 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        layoutId:
                          type: string
                          description: |
                            삭제된 레이아웃 ID(= messagebaseId) 입니다.  
                            레이아웃 ID는 RCS 발송에 사용하는 messagebaseId 로 사용됩니다.
                          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/logo:
    get:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        브랜드 별 등록된 로고 목록을 조회합니다.
      description: |
        브랜드 별 등록된 로고 목록을 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: query
          name: offset
          schema:
            type: integer
          description: '시작 offset 번호(default: 0) 입니다.'
        - in: query
          name: limit
          schema:
            type: integer
          description: '조회 최대 건수(default: 100, maximum: 1000) 입니다.'
      responses:
        '200':
          description: |
            브랜드 내 등록된 로고 목록을 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandLogo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        default:
          $ref: '#/components/responses/Fail'
    post:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        브랜드 내에서 사용할 수 있는 로고를 등록 합니다.  
      description: |
        브랜드 내에서 사용할 수 있는 로고를 등록 합니다.  

        등록한 로고는 영구적으로 사용 가능합니다.

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegBrandLogo'
      responses:
        '200':
          description: |
            정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        fileId:
                          type: string
                          description: 등록된 로고 ID 입니다.
                          example: BLG-BR.275F8GY6nR-uylr
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /brand/{brandId}/logo/{fileId}:
    get:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        브랜드에 등록된 로고를 단건 상세 조회합니다.
      description: |
        브랜드에 등록된 로고를 단건 상세 조회합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: fileId
          schema:
            type: string
          description: 로고 이미지 파일 ID 입니다.
          required: true
      responses:
        '200':
          description: |
            조회 요청한 로고 상세 정보입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandLogo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
    put:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        브랜드에 등록된 로고를 수정 승인요청 합니다.
      description: |
        브랜드에 등록된 로고를 수정 승인요청 합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **수정 가능 상태 : 저장, 반려, 반려(수정), 승인**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: fileId
          schema:
            type: string
          description: 로고 ID 입니다.
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegBrandLogo'
      responses:
        '200':
          description: |
            정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        fileId:
                          type: string
                          description: 수정된 로고 ID 입니다.
                          example: BLG-BR.275F8GY6nR-uylr
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'

    # 브랜드 로고 삭제
    delete:
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      summary: >
        브랜드에 등록된 승인 이전 상태의 로고를 삭제 합니다.
      description: >
        브랜드에 등록된 승인 이전 상태의 로고를 삭제 합니다.  

          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**
          + **삭제 가능 상태 : 저장, 반려**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: >
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>   
            대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>    
            따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        - in: path
          name: fileId
          schema:
            type: string
          description: 로고 ID 입니다.
          required: true
    
      responses:
        '200':
          description: >
            성공적으로 삭제된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        fileId:
                          type: string
                          description: 삭제된 로고 ID 입니다.  
                          example: BLG-BR.275F8GY6nR-uylr
                        
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
          
        'default':
          $ref: '#/components/responses/Fail'   

  /brand/{brandId}/logo/{fileId}/cancel:
    put:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        로고의 승인요청을 취소합니다.
      description: |
        로고의 승인요청을 취소합니다.  
          + **계정 권한: 마스터, 매니저, 대행사**  
          + **브랜드 권한: 브랜드 대표운영자, 운영자**  
          

          
        각 상태별 취소 요청 동작은 다음과 같습니다.  
          + **승인대기 : 저장 상태로 변경**          
          + **승인대기(수정) : 직전 승인 상태 및 데이터로 롤백**
          + **반려(수정) : 직전 승인 상태 및 데이터로 롤백**
          + **이외의 경우 에러 리턴**
      parameters:
        - in: path
          name: brandId
          schema:
            type: string
          required: true
          description: |
            브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        - in: header
          name: X-RCS-Brandkey
          schema:
            type: string
            maximum: 18
          description: >
            RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한
            여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시
            Header에 설정되어야 합니다.
        - in: path
          name: fileId
          schema:
            type: string
          description: 로고 이미지 파일 ID 입니다.
          required: true
      responses:
        '200':
          description: |
            정상적으로 등록된 경우 응답됩니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      properties:
                        fileId:
                          type: string
                          description: 등록된 로고 ID 입니다.
                          example: BLG-BR.275F8GY6nR-uylr
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
  /logo/common:
    get:
      tags:
        - SINCE v1.1.12
        - corporation
        - agency
        - logo
      summary: |
        RBC에서 제공되는 기본 아이콘 이미지 정보를 조회합니다.
      description: |
        RBC에서 제공되는 기본 아이콘 이미지 정보를 조회합니다.  
        조회된 파일 ID를 메시지 발송 시 또는 템플릿 등록 시 사용할 수 있습니다.  

          + **계정 권한 : 마스터, 매니저, 대행사**
      responses:
        '200':
          description: |
            기본 아이콘 이미지 리스트를 응답합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommonLogo'
                  code:
                    type: string
                    default: 20000000
                  status:
                    type: integer
                    default: 200
                  desc:
                    type: string
        default:
          $ref: '#/components/responses/Fail'
components:
  responses:
    Fail:
      description: 처리 실패 응답입니다.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/401ErrorInfo'
              - $ref: '#/components/schemas/403ErrorInfo'
              - $ref: '#/components/schemas/400ErrorInfo'
              - $ref: '#/components/schemas/204ErrorInfo'
    SuccessForToken:
      description: Token 발급
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenInfo'
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        인증방식은 JWT인증을 사용합니다. 토큰의 갱신은 없으며 토큰 만료 시 항상 재발급 받아야 합니다.
  schemas:
    204ErrorInfo:
      description: >
        request 처리 결과는 성공적이나 제공할 데이터가 없는 경우 응답됩니다.<br>
        --------------------------------------------------------------------<br>
        60004  No Content  
          : 요청을 성공적으로 처리했으나 데이터가 없음\
        --------------------------------------------------------------------<br>
      type: object
      properties:
        status:
          type: integer
          example: 204
        error:
          type: object
          properties:
            code:
              type: string
              example: 60004
            message:
              type: string
              example: No Content
    401ErrorInfo:
      type: object
      description: |
        인증에 필요한 정보가 누락되거나 값이 잘못된 경우 응답됩니다.
        - 61001  "Missing Authorization header Authorization" 
        - 61002  "Missing Token  Authorization"
        - 61003  "Invalid token  "
        - 61004  "Token has expired"
        - 61005  "Invalid client id"
        - 61006  "Invalid secret key"
        - 61007 "not allowed IP. unregistered %s"
      properties:
        status:
          type: integer
          example: 401
        error:
          type: object
          properties:
            code:
              type: string
              example: 61001
            message:
              type: string
              example: Missing Authorization header
    403ErrorInfo:
      type: object
      description: |
        대상에 대한 접근 권한이 없는 경우 응답됩니다.<br>
        - 63001 "No Brand Permission"
        - 63002 "No Permission"
      properties:
        status:
          type: integer
          example: 403
        error:
          type: object
          properties:
            code:
              type: string
              example: 63001
            message:
              type: string
              example: No Brand Permission
    400ErrorInfo:
      type: object
      description: >
        잘못된 Request에 대하여 응답됩니다. 요구되는 헤더가 누락되거나 Request에 필요한 데이터 누락/오류 등에 해당하는 경우
        응답됩니다.

        - 64001 "Missing X-RCS-BrandKey header"

        - 64002  "Invalid Brand Key"  

        - 64101  "Invalid brandId on path parameter"  

        - 64102  "Invalid agencyId on path parameter"  

        - 64103  "Invalid corpRegNum on path parameter"  

        - 64104  "Invalid personId on path parameter"  

        - 64105  "Invalid chatbotId on path parameter"  

        - 64106  "Invalid messagebaseId on path parameter"  

        - 64107  "Invalid messagebaseformId on path parameter"  

        - 64108 "Invalid autoReplyMsgId on path parameter"

        - 64109 "Invalid fileId on path parameter"

        - 64201  "Invalid query parameter ({name of paramter})"  

        - 64202  "Invalid query parameter value ({name of paramter}:{value})"  

        - 64203  "query paramter required ({name of paramter})"  

        - 64301  "Missing Body data"  

        - 64302  "Invalid JSON format"  

        - 64303  "Invalid type of Attribute ({name  of attribute})"  

        - 64304  "Over specified size ({name of attribute})"  

        - 64305  "Missing Certification document"  

        - 64306  "Exceed MDN registration quantity"  

        - 64307  "Missing MDN"  

        - 64308  "Invalid MDN format"  

        - 64309  "Missing chatbot name"  

        - 64310  "Invalid display format"  

        - 64311  "Invalid rcsReply format"  

        - 64312  "Missing messagebaseformId"  

        - 64313  "Invalid messagebaseformId"  

        - 64314  "Missing Template name" 

        - 64315  "Missing brandId"  

        - 64316  "Invalid brandId"  

        - 64317  "Invalid agencyId"  

        - 64318  "Invalid formattedString format"  

        - 64319  "Duplicate MDN"   

        - 64320  "Duplicate messagebaseId"   

        - 64321  "Invalid approval status"  

        - 64322  "File no exist"  

        - 64323  "No changes"  

        - 64324  "Invalid custTmpltId format"  

        - 64325  "Invalid chatbot service type"  

        - 64326  "Invalid chatbot webhook format"  

        - 64327  "Not allowed delete"  

        - 64328  "Not allowed modification"  

        - 64329  "Missing profile image"  

        - 64330  "brand creation permission denied"  

        - 64331  "brand Image File Capacity Overflow"   
          : 이미지 파일 최대 용량 초과(1MB 이하)
          
        - 64332  "brand profile file is only png"   
          : 브랜드 프로파일 이미지 PNG만 허용
          
        - 64333  "Not Allowed Brand Image File Extension" 

        - 64334  "Not Matched Brand Image File Property"  

        - 64335  "Brand Image File Image Size Error"  
          : 이미지 가로/세로 크기 초과
          
        - 64336  "Brand Creation Property Required"  

        - 64337  "Brand Creation Property Value Error"  

        - 64338  "Brand Creation Property Value Error With Reason"  

        - 64339  "Brand Creation Property Size Limit"  

        - 64340  "Brand Creation Default MDN Required"  

        - 64341  "Brand Creation MDN Duplicated"  

        - 64342  "Brand Creation RegBrand Error"  

        - 64343  "Brand Creation Chatbots Array Error"  

        - 64344  "can not regist deleted mdn in this brand"

        - 64345  "invalid brand status"

        - 64346  "user not found: %s"

        - 64347  "%s is not registered"

        - 64348  "%s is already registered"

        - 64349  "%s has not qualified"

        - 64350 "Templateform not found."

        - 64351  "%s exists. need to delete all %s before deleting the brand"

        - 64352  "can not delete yourself"

        - 64353  "%s is temporarily unavailable."

        - 64354 "Attached File Capacity Overflow"

        - 64355 "Not allowed file extension"

        - 64356 "can not deleted chatbot. This mdn is being used by twoway
        chatbot."

        - 64357 "Invalid body format [%s]"

        - 64358 "Invalid buttons format [%s]"

        - 64359 "Invalid chipList format [%s]"

        - 64360 "chatbot is not twoway"

        - 64361 "chatbotId does not match subNum"

        - 64362 "subNum dose not found."

        - 64363 "botAgencyId dose not found."

        - 64364 "Invalid inputField format"

        - 64365 "chatbot was deleted"

        - 64366 "chabotId is duplicated"

        - 64367 "Used by Twoway Chatbot [%s]"

        - 64368 "Missing service"

        - 64369 "Missing chatbotId"

        - 64370 "Missing subNum"

        - 64371 "Missing botAgencyId"

        - 64372 "Missing subTitle"

        - 64373 "Invalid chatbotId format"

        - 64374 "Invalid subTitle format"

        - 64375 "AutoReplyMsgId not found"

        - 64376 "Missing Menu Title"

        - 64377 "Invalid_menu_format [%s]"

        - 64378 "Failed to confirm subscription status"

        - 64379 "Persistent menu was deleted"

        - 64380 "This Agency is not support chat service"

        - 64381 "Invalid subNum format"

        - 64382 "The contracted information could not be found"

        - 64383 "chatbotId dose not found."

        - 64384 "Duplicated PostbackId [%s]"

        - 64385 "This Menu dose not regist"

        - 64386 "This Menu status dose not pause"

        - 64387 "This Menu being used"

        - 64388 "This chatbot dose not using the persistentMenu"

        - 64389 "Invalid isPause format"

        - 64390 "This agency dose not support relay"

        - 64391 "This agency has not permission"

        - 64392 "botAgencyId does not match userId"

        - 64393 "Unable to delete agency privilege (agencyId is registered in
        the twoway chatbot)"

        - 64394 "brand profile / background image must be 1:1 ratio"

        - 64395 "file is up to %sMb"

        - 64396 "check file extension (%s)"

        - 64397 "invalid body %s"

        - 64397 "required %s"

        - 64398 "must be entered in pairs, following:%s / required:%s"

        - 64399 "there is no value for image size (param:%s, fileId:%s)"

        - 64400 "required %sx%s,  image resolution is %sx%s (param:%s,
        fileId:%s)"

        - 64541 "The associated autoReplyMsg is invalid"
          : 연결된 자동응답메시지가 유효하지 않습니다.

        - 64543 "chatbotId is not a bidirectional chatbot"
          : 양방향 대화방이 아닙니다. 

        - 64545 "Invalid layoutId"
          : 레이아웃 정보가 없습니다.

        - 64546 "Invalid product code"  
          : 상품코드가 없습니다.

        - 64549 "The bodyComposition is required."
          : 레이아웃의 바디 영역은 필수 입력요소 입니다.      

        - 64550 "Only one component is available for headerComposition."
          : 헤더 영역에는 하나의 컴포넌트만 사용 가능합니다.      

        - 64552 "%s component is not available for %s."
          : X 컴포넌트는 Y 에 올 수 없습니다.      

        - 64600 "Invalid componetId"
          : "해당 컴포넌트는 레이아웃 전용이 아닙니다. / 컴포넌트 아이디가 없습니다."      

        - 64601 "Only one component is available for footerComposition."

        - 64603 "Invalid sampleLayoutId"
          : 샘플 레이아웃 ID가 아닙니다.

        - 64604 "Different components that belong to the same groupComponentId
        cannot be used together."
          : 같은 그룹 컴포넌트는 하나만 쓸 수 있습니다.   
          
        - 64606 "only one size (300x300px) can be uploaded."
          : 300x300px 사이즈의 파일만 업로드 가능합니다.  
          
        - 64607 "The maximum number of logos allowed: %s"
          : 로고는 최대 %s개까지 등록 가능합니다.
      properties:
        status:
          type: integer
          example: 400
        error:
          type: object
          properties:
            code:
              type: string
              example: 64001
            message:
              type: string
              example: Missing X-RCS-BrandKey header
    WebhookErrorInfo:
      type: object
      description: >
        기업고객이 대행사에 청약전 상태로 RCS Biz Center에서  브랜드-대행사 계약 설정을 먼저 실행하여 webhook
        Notification 전달된 경우 대행사가 RCS Biz Center에 응답합니다.<br>
      properties:
        status:
          type: string
          example: 400
        error:
          type: object
          properties:
            code:
              type: string
              example: 69999
            message:
              type: string
              example: No Subscription
    TokenInfo:
      description: |
        access Token, expire 시간을 포함한 JSON Object 입니다.
      type: object
      properties:
        accessToken:
          type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6Ik5vQWJlMjAxOSIsImlhdCI6MTUxNjIzOTAyMn0.60wyqqCDOsWfl6qhjaMwyU_9fJUQqCZIhVy8nL71_qs
        expiresIn:
          type: string
          example: '1568694883'
        userId:
          type: string
          maximum: 20
          example: userId
        allowedIp:
          type: array
          items:
            type: string
            example: 10.10.1.11
      required:
        - accessToken
        - expiresIn
    ContractInfo:
      type: object
      description: |
        브랜드와 대행사의 계약관계 정보입니다.
      required:
        - corpId
        - brandId
        - agencyId
      properties:
        corpId:
          type: string
          description: RCS Biz Center에 등록된 기업 ID 입니다.
          maximum: 13
        corpRegNum:
          type: string
          description: RCS Biz Center에 등록된 기업의 사업자등록번호 입니다.
          maximum: 10
        brandId:
          type: string
          description: 브랜드 ID 입니다.
          maximum: 13
        brandName:
          type: string
          description: 브랜드 명 입니다.
          maximum: 20
        agencyId:
          type: string
          description: 대행사 ID 입니다.
          maximum: 20
        contracts:
          type: array
          description: 계약 유형 입니다.
          items:
            type: string
            enum:
              - a2p
              - chat
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 계약정보 등록일시 입니다.
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 계약정보 수정일시 입니다.
        brandDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: >
            계약된 대상 브랜드의 최종 변경 일시 정보 입니다.
        chatbotDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: >
            브랜드 내 등록된 대화방 중 가장 최근에 변경된 대화방의 일시  정보 입니다.
        messagebaseDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: >
            브랜드 내 등록된 템플릿 중 가장 최근에 변경된 템플릿의 일시  정보 입니다.
        logoDate:
          type: string
          format: date-time
          example: '2024-04-12T06:22:55.418+09'
          description: >
            브랜드 내 등록된 브랜드 로고 중 가장 최근에 변경된 로고의 일시 정보 입니다.
    MenuItemInfo:
      type: object
      description: >
        브랜드 홈에 표시 가능한 버튼 정보 객체입니다. AppLink와 WebLink가 모두 설정된 경우 단말에 app 이 설치되어
        있으면 app을 실행하고 설치되지 않은 경우 weblink로 연결됩니다.
      properties:
        buttonType:
          type: string
          maximum: 20
          description: 버튼 유형
          enum:
            - call
            - web
            - app
            - store
            - order
            - buy
            - tickets
            - moreinfo
        applink:
          $ref: '#/components/schemas/AppLinkItemInfo'
        weblink:
          type: string
          maximum: 128
          description: >
            buttonType call 을 제외한 모든 버튼은 Web URL을 입력해야 합니다. URL은 http:// 또는
            https:// 로 시작하여야 합니다.
      required:
        - buttonType
    AppLinkItemInfo:
      type: object
      description: |
        APP Link의 패키지 Name, Action, URL 정보 객체입니다.
      properties:
        packageName:
          type: string
          maximum: 40
          description: App 실행을 위한 package name
          example: com.android.mobile.cs
        action:
          type: string
          maximum: 40
          description: App 실행을 위한 Action
          example: android.intent.action.VIEW
        uri:
          type: string
          maximum: 40
          description: App 실행을 위한 URI
          example: abc://gizmos/foo/bar
      required:
        - packageName
        - action
        - uri
    Category:
      type: object
      description: 브랜드 카테고리 정보 객체입니다.
      properties:
        categoryId:
          description: 브랜드 카테고리 ID 입니다.
          type: string
          maximum: 64
          example: FIN
        categoryName:
          description: 브랜드 카테고리 명 입니다.
          maximum: 64
          type: string
          example: 금융
        subCategories:
          description: 하위 카테고리 목록 입니다.
          type: array
          items:
            type: object
            properties:
              subCategoryId:
                type: string
                description: 브랜드 하위 카테고리 ID 입니다.
                maximum: 64
                example: FIN001
              subCategoryName:
                type: string
                description: 브랜드 하위 카테고리 명 입니다.
                maximum: 64
                example: 은행
        updateDate:
          type: string
          format: date-time
          example: '2020-11-10T06:22:55.418+09'
          description: 수정일시 - 카테고리 수정 일시 입니다.
    RegBrandInfo:
      description: |
        브랜드 등록 정보 객체입니다.  
        Object 세부구성은 [RegBrandInfo](#/RegBrandInfo)를 참고하시기 바랍니다.  
      type: object
      properties:
        regBrand:
          type: object
          required:
            - name
            - description
            - tel
            - categoryId
            - subCategoryId
          properties:
            name:
              type: string
              maximum: 20
              description: 브랜드 홈에 표시되는 브랜드 이름 입니다니다.
              example: FAN
            description:
              type: string
              maximum: 150
              description: 브랜드 홈에 표시되는 브랜드 설명 입니다.
            tel:
              type: string
              maximum: 12
              description: |
                브랜드 홈에 노출될 전화번호(대표발신번호와 별개) 입니다.
            menus:
              description: >
                브랜드 홈에는 최대 4개까지 표시됩니다.  

                chat은 기본 등록 되므로 지정할 수 있는 최대 menu는 3개이며, 등록 시 call을 포함하지 않고 2개 이하
                지정할 경우 call을 기본 추가합니다.  

                  + **2020년 12월 3일 기준 브랜드 menus 중 app 은 이통사 정책에 의거 한시적으로 등록이 불가하며 app 등록 시 error 리턴됩니다.**
              type: array
              items:
                $ref: '#/components/schemas/MenuItemInfo'
              maximum: 3
            categoryId:
              type: string
              maximum: 64
              description: 브랜드 카테고리 ID 입니다.
            subCategoryId:
              type: string
              maximum: 64
              description: 브랜드 하위 카테고리 ID 입니다.
            categoryOpt:
              type: string
              maximum: 20
              description: 검색용 키워드 임의 등록 할 수 있습니다.
            zipCode:
              type: string
              maximum: 5
              description: 브랜드 홈에 표시될 우편번호(5자리) 입니다.
            roadAddress:
              type: string
              maximum: 200
              description: 브랜드 홈에 표시되는 도로명주소 입니다.
            detailAddress:
              type: string
              maximum: 200
              description: 브랜드 홈에 표시되는 상세주소 입니다.
            email:
              type: string
              maximum: 30
              format: email
              description: 브랜드 홈에 표시되는 이메일주소 입니다.
            webSiteUrl:
              type: string
              maximum: 128
              description: 브랜드 홈에 표시되는 홈페이지 주소 입니다.
            initTab:
              type: string
              maximum: 5
              description: |
                단말에 표시되는 브랜드 홈의 기본 탭을 지정하는 항목입니다.  
                미지정 시 기본값은 FEED 입니다.  
                + FEED: 소식탭을 기본 탭으로 지정합니다.   + INFO: 정보탭을 기본 탭으로 지정합니다.  
              enum:
                - FEED
                - INFO
              default: FEED
            initFeedItem:
              type: string
              maximum: 6
              description: >
                하위 호환성을 위해 필드는 유지되지만, 동일한 용도의 initFeedItems 사용을 권고합니다.   

                + TEL: 소식탭에 전화걸기(= 퀵버튼 call) 버튼이 표시됩니다.   + HOME: 소식탭에 Web 연결(=
                퀵버튼 web) 버튼이 표시됩니다.   + SEARCH: 소식탭에 포털검색(= portalsearch) 버튼이
                표시되며, 소식탭 전용 퀵버튼입니다.  
              enum:
                - TEL
                - HOME
                - SEARCH
              deprecated: true
            initFeedItems:
              description: >
                initTab FEED인 경우, 소식탭에 표시할 메뉴를 지정합니다.  

                menus에서 설정한 항목 중 소식탭에 표시할 항목을 지정합니다. 즉, menus에 지정되지 않은 항목을 설정하면
                error 처리 됩니다.  

                menus는 최대 3개까지 지정할 수 있으며, menus에 설정한 3개항목과 소식탭에만 표시가능한
                portalsearch를 추가로 등록할 경우 최대 4개가 등록됩니다.  
              type: array
              items:
                type: string
                enum:
                  - call
                  - web
                  - store
                  - order
                  - buy
                  - tickets
                  - moreinfo
                  - portalsearch
              example:
                - call
                - web
                - moreinfo
                - portalsearch
            templateColor:
              description: |
                브랜드 내 등록되는 템플릿의 버튼 컬러 값을 지정합니다.   컬러값은 Hex code 형식만 유효합니다.
              type: string
              maximum: 10
              example: null
            bizInfoYn:
              description: |
                브랜드 소식탭에 운영정보 사용 여부를 설정합니다.  
              type: string
              enum:
                - 'Y'
                - 'N'
              default: 'N'
            bizInfoTitle:
              description: |
                bizInfoYn = 'Y'인 경우, 운영정보 제목을 지정합니다.  
              type: string
              maximum: 20
              example: 영업시간 안내
            bizInfoContent:
              description: |
                bizInfoYn = 'Y'인 경우, 운영정보 내용을 지정합니다.
              type: string
              maximum: 200
              example: '월~금 : 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.'
    BrandInfo:
      description: |
        브랜드 기본 정보 객체입니다.
      type: object
      required:
        - brandId
        - name
      properties:
        brandId:
          type: string
          maximum: 13
          description: 브랜드ID - 브랜드 등록 시 자동 생성됩니다.
          example: BR.abcdefghij
        name:
          type: string
          maximum: 20
          description: 브랜드 이름 - 브랜드 등록 시 지정합니다.
          example: FAN
        brandKey:
          type: string
          maximum: 18
          description: 브랜드 Key - 브랜드 등록 시 자동 생성됩니다.
          example: BK.Vlkjz2c53kMx0kZ
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 등록일시 - 브랜드 등록 일시입니다.
        approvalDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 승인일시 - 브랜드가 검수에서 승인된 일시입니다.
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 수정일시 - 브랜드의 정보가 수정된 일시입니다.
        status:
          type: string
          description: |
            브랜드의 상태 입니다.  

              + 저장 : RCS Biz Center 홈페이지에서 브랜드 정보를 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  
              + 승인대기 : 브랜드 등록 직후 검수 이전 상태입니다.  
              + 검수시작 : 브랜드 검수가 시작된 상태입니다.  
              + 승인 : 검수가 완료되어 이통3사에 브랜드 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.  
              + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 브랜드는 수정 후 다시 승인요청 할 수 있습니다.  
              + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를 발송할 수 없습니다.  
              + 승인대기(수정) : 승인된 브랜드 변경 시 검수 대상으로 판단되어 검수 요청된 상태입니다.  
              + 검수시작(수정) : 승인된 브랜드 변경으로 승인요청된 브랜드 검수가 시작된 상태입니다.  
              + 반려(수정) : 승인된 브랜드 변경 검수 처리 결과 반려된 상태입니다.  
              + 검수완료(수정) : 승인된 브랜드 변경 검수 승인은 되었으나 이통3사 정보 등록이 완료되지 않은 상태입니다.  
                현재 상태에서는 이통사에 따라 단말 브랜드 홈 정보가 다를 수 있습니다.  
                브랜드 조회 API 호출 시 수정 이전 브랜드 정보가 제공됩니다.  
          enum:
            - 승인대기
            - 검수시작
            - 승인
            - 반려
            - 검수완료
            - 저장
            - 승인대기(수정)
            - 검수시작(수정)
            - 반려(수정)
            - 검수완료(수정)
        mediaUrl:
          $ref: '#/components/schemas/MediaUrl'
        chatbotDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: |
            브랜드 내 등록된 대화방 중 가장 최근에 변경된 대화방의 일시 정보 입니다.
        messagebaseDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: |
            브랜드 내 등록된 템플릿 중 가장 최근에 변경된 템플릿의 일시 정보 입니다.
    BrandDetail:
      description: 브랜드 상세 정보 객체입니다.
      type: object
      allOf:
        - $ref: '#/components/schemas/BrandInfo'
      properties:
        description:
          type: string
          maximum: 150
          description: 브랜드 설명에 등록된 내용입니다.
        tel:
          type: string
          maximum: 12
          description: |
            브랜드홈에 노출될 전화번호(대표발신번호와 별개) 입니다.
        menus:
          description: >-
            브랜드 홈에는 최대 4개까지 표시됩니다. chat은 기본 등록 되므로 지정할 수 있는 최대 menu는 3개이며, 등록 시
            call을 포함하지 않고 2개 이하 지정할 경우 call을 기본 추가합니다.
          type: array
          items:
            $ref: '#/components/schemas/MenuItemInfo'
          maximum: 3
        categoryId:
          type: string
          maximum: 64
          description: 브랜드 카테고리 ID 입니다.
          example: FIN
        categoryName:
          description: 브랜드 카테고리 명 입니다.
          maximum: 64
          type: string
          example: 금융
        subCategoryId:
          type: string
          maximum: 64
          description: 브랜드 하위 카테고리 ID 입니다.
          example: FIN001
        subCategoryName:
          type: string
          description: 브랜드 하위 카테고리 명 입니다.
          maximum: 64
          example: 은행
        categoryOpt:
          type: string
          maximum: 20
          description: 검색용 키워드 임의 등록 할 수 있습니다.
        zipCode:
          type: string
          maximum: 5
          description: 브랜드 홈에 표시될 우편번호(5자리) 입니다.
        roadAddress:
          type: string
          maximum: 200
          description: 브랜드 홈에 표시되는 도로명주소 입니다.
        detailAddress:
          type: string
          maximum: 200
          description: 브랜드 홈에 표시되는 상세주소 입니다.
        email:
          type: string
          maximum: 30
          format: email
          description: 브랜드 홈에 표시되는 이메일주소 입니다.
        webSiteUrl:
          type: string
          maximum: 128
          description: 브랜드 홈에 표시되는 홈페이지 주소 입니다.
        approvalReason:
          type: string
          description: 검수 시 반려 사유가 제공됩니다.
        brandFeedUrl:
          type: string
          description: >
            브랜드 소식 URL 입니다. 브랜드 소식을 최초 등록하거나 브랜드 홈 기본 탭을 소식탭(FEED)로 설정하면 자동
            생성됩니다.
        initTab:
          type: string
          maximum: 5
          description: |
            단말에 표시되는 브랜드 홈의 기본 탭을 지정하는 항목입니다. 미지정 시 기본값은 FEED 입니다.
            + FEED: 소식탭을 기본 탭으로 지정합니다.
            + INFO: 정보탭을 기본 탭으로 지정합니다.
            브랜드 최초 승인 시에만 선택이 가능하며 승인 이후에는 수정이 불가합니다.
          enum:
            - FEED
            - INFO
          default: FEED
        initFeedItem:
          type: string
          maximum: 6
          description: >
            하위 호환성을 위해 필드는 유지되지만, 동일한 용도의 initFeedItems 사용을 권고합니다.   

            + TEL: 소식탭에 전화걸기(=퀵버튼 call) 버튼이 표시됩니다.   + HOME: 소식탭에 Web 연결(=퀵버튼
            web) 버튼이 표시됩니다.   + SEARCH: 소식탭에 포털검색 버튼이 표시되며, 소식탭 전용 퀵버튼입니다.  
          enum:
            - TEL
            - HOME
            - SEARCH
          deprecated: true
        initFeedItems:
          description: >
            initTab FEED인 경우, 소식탭에 표시할 메뉴를 지정합니다.  

            menus에서 설정한 항목 중 소식탭에 표시할 항목을 지정합니다. 즉, menus에 지정되지 않은 항목을 설정하면
            error 처리 됩니다.  

            menus는 최대 3개까지 지정할 수 있으며, menus에 설정한 3개항목과 소식탭에만 표시가능한 portalsearch를
            추가로 등록할 경우 최대 4개가 등록됩니다.  
          type: array
          items:
            type: string
            enum:
              - call
              - web
              - store
              - order
              - buy
              - tickets
              - moreinfo
              - portalsearch
          example:
            - call
            - web
            - moreinfo
            - portalsearch
        templateColor:
          description: |
            브랜드 내 등록되는 템플릿의 버튼 컬러 값을 지정합니다.   컬러값은 Hex code 형식만 유효합니다.
          type: string
          maximum: 10
          example: null
        bizInfoYn:
          description: |
            브랜드 소식탭에 운영정보 사용 여부를 설정합니다.  
          type: string
          enum:
            - 'Y'
            - 'N'
          default: 'N'
        bizInfoTitle:
          description: |
            bizInfoYn = 'Y'인 경우, 운영정보 제목을 지정합니다.  
          type: string
          maximum: 20
          example: 영업시간 안내
        bizInfoContent:
          description: |
            bizInfoYn = 'Y'인 경우, 운영정보 내용을 지정합니다.
          type: string
          maximum: 200
          example: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
    RegChatbotInfo:
      description: |
        대화방(발신번호) 등록 정보 객체입니다.  
        Object 구성은 [RegChatbotInfo](#/RegChatbotInfo)를 참고하시기 바랍니다.
      type: object
      properties:
        mdn:
          type: string
          maximum: 40
          description: |
            등록할 발신번호입니다.  국가번호는 제외하고 등록하며, 현재 정책적으로 휴대전화번호는 등록이 불가합니다.
        subNum:
          type: string
          maximum: 40
          description: |
            회신번호 입니다. 발신번호(mdn)와 회신번호가 동일해야 합니다.  발신번호와 동일하게 설정됩니다.
        subTitle:
          type: string
          maximum: 20
          description: 대화방명입니다.
        rcsReply:
          type: string
          enum:
            - '0'
            - '1'
          description: SMS MO 수신 0, RCS Postback 수신 1
          default: '1'
        display:
          type: string
          enum:
            - '11'
            - '10'
            - '01'
            - '00'
          default: '01'
          description: |
            대화방 전시 설정값 입니다. 설정하지 않을 경우 기본 '01'로 설정됩니다.  

              + '11' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시  
              + '10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시  
              + '01' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시  
              + '00' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 비전시  
        inputField:
          type: integer
          description: |
            단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  

              + 0 : 비활성화  
              + 1 : 활성화
          enum:
            - 0
            - 1
          default: 1
        subDescr:
          type: string
          description: |
            대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  
          maximum: 50
        saftyStatusYn:
          description: |
            안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  

              + Y : 안심마크 표시
              + N : 안심마크 미표시
          type: string
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
      required:
        - mdn
        - subTitle
        - rcsReply
    ModBiChatbot:
      description: |
        양방향 대화방 정보 객체입니다.
      type: object
      properties:
        subNum:
          type: string
          maximum: 40
          description: |
            회신번호 입니다.  
            A2P는 chatbotId와 동일하며, 생략 가능합니다.  
            service가 chat인 경우 사전에 승인된 대화방(발신번호) 중 하나를 반드시 지정해야 합니다.
        subTitle:
          type: string
          maximum: 20
          description: 대화방명입니다.
        display:
          type: string
          enum:
            - '11'
            - '10'
            - '01'
            - '00'
          default: '01'
          description: >
            단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  

            브랜드홈 전시로 설정되면 대화방은 RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지
            수신이 불가능합니다.  

              + '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  
              + '10' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 비전시  
              + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  
              + '00' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시
        inputField:
          type: integer
          description: |
            단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  

              + 0 : 비활성화  
              + 1 : 활성화
          enum:
            - 0
            - 1
          default: 1
        botAgencyId:
          type: string
          description: >
            양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.    

            예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  

            대화방(발신번호)를 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  

            이미 양방향 대화방으로 전환된 발신번호의 경우,   botAgencyId를 빈값으로 설정하면 일반 발신번호로
            전환됩니다.(DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}과
            동일)

              + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중 양방향 서비스가 가능한 대행사ID 지정  
              + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)
          maximum: 20
        subDescr:
          type: string
          description: |
            대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  
          maximum: 50
        saftyStatusYn:
          description: |
            안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  

              + Y : 안심마크 표시
              + N : 안심마크 미표시
          type: string
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
    RegBiChatbot:
      description: |
        대화방(양방향) 정보 객체입니다.
      type: object
      properties:
        chatbotId:
          type: string
          maximum: 15
          description: |
            대화방(양방향)으로 등록/전환하고자 하는 chatbotId를 지정합니다.  

              + 발신번호(service = 'A2P')인 경우, 사전에 승인된 발신번호의 chatbotId를 입력합니다.
              + 양방향ID(service = 'CHAT')를 새로 등록하는 경우, 원하는 문자열을 입력합니다.  

            **양방향ID(service 구분값: 'CHAT')의 포맷 규칙은 다음과 같습니다.**  

              + chatbotId는 생략할 수 있으며 RBC에서 랜덤으로 chatbotId 생성하여 리턴합니다.  
              + 등록 시 사용 가능한 문자는 alphanumeric, '-', '_' 만 허용 됩니다.  
              + 알파벳은 대문자 입력시 소문자로 변환되어 처리됩니다.  
              + 'bot-' prefix 가 기본 삽입됩니다.  
              + 'bot-' prefix 삽입된 된 문자열 사용이 가능하며, 이때는 'bot-' prefix를 RBC에서 추가하지 않습니다.  
              + 'bot-' prefix 포함 시 최대 15자리 입력이 가능하므로 'bot-'외 사용 가능한 문자열의 길이는 11자리 입니다.
              + API 호출 시 입력한 chatbotId에 bot- prefix 삽입, 소문자 변환 등 변경이 발생할 수 있으므로 반드시 API 응답으로 리턴되는 chatbotId를 취득 사용해야 합니다.
        subNum:
          type: string
          maximum: 40
          description: |
            회신번호 입니다.  
            A2P는 chatbotId와 동일하며, 생략 가능합니다.  
            service가 chat인 경우 사전에 승인된 대화방(발신번호) 중 하나를 반드시 지정해야 합니다.
        subTitle:
          type: string
          maximum: 20
          description: 대화방명입니다.
        display:
          type: string
          enum:
            - '11'
            - '10'
            - '01'
            - '00'
          default: '01'
          description: >
            단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  

            브랜드홈 전시로 설정되면 대화방은 RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지
            수신이 불가능합니다.  

              + '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  
              + '10' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 비전시  
              + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  
              + '00' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시
        service:
          type: string
          enum:
            - a2p
            - chat
          default: a2p
          description: |
            대화방 유형입니다.  

              + a2p : 발신번호를 이용한 대화방
              + chat : 양방향ID를 이용한 대화방
        inputField:
          type: integer
          description: |
            단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  

              + 0 : 비활성화  
              + 1 : 활성화
          enum:
            - 0
            - 1
          default: 1
        botAgencyId:
          type: string
          description: |
            양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.    
            예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  
            대화방(발신번호)를 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  

              + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중 양방향 서비스가 가능한 대행사ID 지정  
              + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)
          maximum: 20
        subDescr:
          type: string
          description: |
            대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  
          maximum: 50
        saftyStatusYn:
          description: |
            안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  

              + Y : 안심마크 표시
              + N : 안심마크 미표시
          type: string
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
      required:
        - chatbotId
        - service
        - subTitle
        - subNum
        - inputField
    Chatbot:
      required:
        - chatbotId
        - brandId
      description: |
        대화방(발신번호) 기본 정보입니다.
      type: object
      properties:
        groupId:
          type: string
          description: |
            대화방이 대량등록된 경우 그룹ID 입니다.
          maximum: 10
        chatbotId:
          type: string
          description: |
            대화방(발신번호)ID, A2P의 경우 발신번호(mdn)과 동일합니다.
          maximum: 15
        brandId:
          type: string
          description: 브랜드ID
          maximum: 13
        subNum:
          type: string
          maximum: 40
          description: |
            회신번호 A2P의 경우 발신번호, 즉 chatbotId와 동일합니다.
        isMainNum:
          type: boolean
          description: |
            대표번호 개념은 더 이상 유효하지 않습니다.  
            브랜드에 등록된 대화방 중 유효한 첫번째 대화방이 표시됩니다.
        subTitle:
          type: string
          maximum: 20
          description: 대화방명입니다.
        service:
          type: string
          enum:
            - a2p
            - chat
          default: a2p
          description: |
            대화방 유형입니다.  

              + a2p : 발신번호를 이용한 대화방
              + chat : 양방향ID를 이용한 대화방
        display:
          type: string
          description: >
            단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  

            브랜드홈 전시로 설정되면 대화방은 RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지
            수신이 불가능합니다.  

              + '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  
              + '10' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 비전시  
              + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  
              + '00' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시  
          enum:
            - '11'
            - '10'
            - '01'
            - '00'
        inputField:
          type: integer
          description: |
            단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  

              + 0 : 비활성화  
              + 1 : 활성화
          enum:
            - 0
            - 1
          default: 1
        subDescr:
          type: string
          description: |
            대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  
          maximum: 50
        botAgencyId:
          type: string
          description: |
            양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.    
            예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  
            대화방(발신번호)를 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  

              + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중 양방향 서비스가 가능한 대행사ID 지정  
              + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)
          maximum: 20
        saftyStatusYn:
          type: string
          description: |
            안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  

              + Y : 안심마크 표시
              + N : 안심마크 미표시
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
        psMenuUse:
          type: boolean
          description: |
            대화방메뉴 사용 여부입니다.  

              + true : 사용  
              + false : 미사용
          default: false
        approvalResult:
          type: string
          description: |
            대화방의 승인 상태입니다.  

              + 저장 : RCS Biz Center 홈페이지에서 대화방 정보를 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  
              + 승인대기 : 대화방 등록 직후 검수 이전 상태입니다.  
              + 검수시작 : 대화방 검수가 시작된 상태입니다.  
              + 승인 : 검수가 완료되어 이통3사에 대화방 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.  
              + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 대화방은 수정 후 다시 승인요청 할 수 있습니다.  
              + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를 발송할 수 없습니다.  
              + 검수완료(수정) : 승인된 대화방의 이름을 변경하였으나 이통3사 정보 등록이 완료되지 않은 상태입니다.  
                현재 상태에서는 이통사에 따라 단말 표시 대화방 이름이 다를 수 있습니다.
              
          enum:
            - 승인대기
            - 검수시작
            - 승인
            - 반려
            - 검수완료
            - 검수완료(수정)
            - 저장
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 등록일시
        approvalDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 승인일시
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 수정일시
        registerId:
          type: string
          maximum: 20
          description: 대화방 등록 계정 ID
        updateId:
          type: string
          maximum: 20
          description: 대화방 수정 계정 ID
    ChatbotDetail:
      description: |
        대화방(발신번호) 상세 정보 객체입니다.
      type: object
      allOf:
        - $ref: '#/components/schemas/Chatbot'
      properties:
        mediaUrl:
          $ref: '#/components/schemas/MediaUrl'
        rcsReply:
          type: string
          enum:
            - '0'
            - '1'
          description: |
            service가 'chat' 이거나 양방향 대화방으로 설정하고자 한다면 반드시 '1'로 설정해야 합니다.  

              + 0 : SMS MO 수신  
              + 1 : RCS Postback 수신 
          default: '1'
        approvalReason:
          type: string
          description: 승인 사유
        status:
          type: string
          description: |
            대화방 상태를 나타내는 필드입니다.  
            현재는 단일 값인 "published" 만 존재하며, 대행사나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.
          enum:
            - published
        searchWeight:
          type: string
          default: 512
          maximum: 10
          description: |
            검색 우선 순위로 사용자 단말에서 검색 시 검색 결과가 여러 개라면 이 값이 높은 순서로 보여집니다.
            대행사나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.
          deprecated: true
        webhook:
          type: string
          maximum: 128
          description: 양방향 대화방 서비스 중계사 webhook URL 정보이며 botAgencyId 지정 시 자동으로 등록됩니다.
        botTcPage:
          type: string
          maximum: 128
          description: |
            이용약관페이지 URL 입니다.  
            대행사나 기업에서 API를 통해 등록/수정은 제공하지 않습니다.
          deprecated: true
        persistentMenu:
          type: array
          items:
            $ref: '#/components/schemas/PersistentMenu'
    BiChatbot:
      type: object
      description: |
        대화방 기본 정보입니다.
      properties:
        chatbotId:
          type: string
          description: |
            발신번호 또는 양방향ID로 등록된 대화방의 고유 식별값입니다.  
          maximum: 15
        brandId:
          type: string
          description: |
            대화방이 속한 브랜드ID 입니다.
          maximum: 13
        subNum:
          type: string
          maximum: 40
          description: |
            양방향 대화방에 지정된 회신번호 입니다. A2P의 경우 chatbotId와 동일합니다.
        subTitle:
          type: string
          maximum: 20
          description: 대화방명입니다.
        service:
          type: string
          enum:
            - a2p
            - chat
          default: a2p
          description: |
            대화방 유형입니다.  

              + a2p : 발신번호를 이용한 대화방
              + chat : 양방향ID를 이용한 대화방
        display:
          type: string
          description: >
            단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  

            브랜드홈 전시로 설정되면 대화방은 RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지
            수신이 불가능합니다.  

              + '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  
              + '10' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 비전시  
              + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  
              + '00' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시  
          enum:
            - '11'
            - '10'
            - '01'
            - '00'
        inputField:
          type: integer
          description: |
            단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  

              + 0 : 비활성화  
              + 1 : 활성화
          enum:
            - 0
            - 1
          default: 1
        botAgencyId:
          type: string
          description: |
            양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.    
            예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  
            대화방(발신번호)를 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  

              + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중 양방향 서비스가 가능한 대행사ID 지정  
              + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)
          maximum: 20
        subDescr:
          type: string
          description: |
            대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  
          maximum: 50
        saftyStatusYn:
          description: |
            안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  

              + Y : 안심마크 표시
              + N : 안심마크 미표시
          type: string
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
        psMenuUse:
          type: boolean
          description: |
            대화방메뉴 사용 여부입니다.
          default: false
        approvalResult:
          type: string
          description: |
            대화방의 승인 상태입니다.  

              + 저장 : RCS Biz Center 홈페이지에서 대화방 정보를 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  
              + 승인대기 : 대화방 등록 직후 검수 이전 상태입니다.  
              + 검수시작 : 대화방 검수가 시작된 상태입니다.  
              + 승인 : 검수가 완료되어 이통3사에 대화방 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.  
              + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 대화방은 수정 후 다시 승인요청 할 수 있습니다.  
              + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를 발송할 수 없습니다.  
              + 검수완료(수정) : 승인된 대화방의 이름을 변경하였으나 이통3사 정보 등록이 완료되지 않은 상태입니다.  
                현재 상태에서는 이통사에 따라 단말 표시 대화방 이름이 다를 수 있습니다.  
              
          enum:
            - 승인대기
            - 검수시작
            - 승인
            - 반려
            - 검수완료
            - 검수완료(수정)
            - 저장
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 등록일시
        approvalDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 승인일시
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 대화방 수정일시
        registerId:
          type: string
          maximum: 20
          description: 대화방 등록 계정 ID
        updateId:
          type: string
          maximum: 20
          description: 대화방 수정 계정 ID
        groupId:
          type: string
          description: |
            대화방이 대량등록된 경우 그룹ID 입니다.
        isMainNum:
          type: boolean
          description: |
            대표번호 개념은 더 이상 유효하지 않습니다.  
            브랜드에 등록된 대화방 중 유효한 첫번째 대화방이 표시됩니다.
      required:
        - chatbotId
        - brandId
        - subNum
    BiChatbotDetail:
      description: |
        양방향 대화방 상세 정보 객체입니다.
      type: object
      allOf:
        - $ref: '#/components/schemas/BiChatbot'
        - properties:
            mediaUrl:
              $ref: '#/components/schemas/MediaUrl'
            rcsReply:
              type: string
              enum:
                - '0'
                - '1'
              description: >
                SMS MO 수신 '0', RCS Postback 수신 '1'입니다. service가 'chat' 이거나 양방향
                대화방으로 설정하고자 한다면 반드시 '1'로 설정해야 합니다.
              default: '1'
            approvalReason:
              type: string
              description: 승인 사유
            status:
              type: string
              description: >
                대화방 상태를 나타내는 필드입니다.  

                현재는 단일 값인 "published" 만 존재하며, 대행사나 기업에서 API를 통한 등록/수정은 제공하지
                않습니다.
              enum:
                - published
            searchWeight:
              type: string
              default: 512
              maximum: 10
              description: >
                검색 우선 순위로 사용자 단말에서 검색 시 검색 결과가 여러 개라면 이 값이 높은 순서로 보여집니다. 대행사나
                기업에서 API를 통한 등록/수정은 제공하지 않습니다.
              deprecated: true
            webhook:
              type: string
              maximum: 128
              description: |
                양방향 대화방 서비스 중계사 webhook URL 정보이며 botAgencyId 지정시 자동으로 등록됩니다.
            botTcPage:
              type: string
              maximum: 128
              description: |
                이용약관페이지 URL 입니다.  
                대행사나 기업에서 API를 통해 등록/수정은 제공하지 않습니다.
              deprecated: true
            persistentMenu:
              type: array
              items:
                $ref: '#/components/schemas/PersistentMenu'
    GuideInfo:
      type: object
      description: >
        템플릿 작성에 필요한 가이드 정보를 제공하기 위하여 양식 정의 시 포함되는 정보입니다. 리치카드의 경우
        messagebaseInfo에서 제공됩니다.
      properties:
        maxLineCount:
          type: integer
          description: |
            max 라인수 
        maxDisplayText:
          type: integer
          description: |
            버튼명 글자수 
        maxDescriptionSize:
          type: integer
          description: |
            카드별 max 본문 글자수  
        imageWidth:
          type: integer
          description: |
            이미지 권고 가로 사이즈 단위는 Pixel
        imageHeight:
          type: integer
          description: |
            이미지 권고 세로 사이즈 단위는 Pixel
        detailInfo:
          $ref: '#/components/schemas/DetailInfo'
    PolicyInfo:
      description: >
        리치카드, 오픈리치카드에 포함된 content(title, description, media, button) 에 대한 검증 정책
        저장을 위한 객체입니다.
      type: object
      properties:
        buttonsAllowed:
          type: boolean
          description: >
            MaaP FE /message의 buttons 사용 유무 true : buttons 필드 사용 false : buttons
            에 값이 들어오면 실패 처리
        adHeaderAllowed:
          type: boolean
          description: >
            header에 광고 인입 허가 여부 true : 광고인입 허용(MaaP FE /message의 header 체크안함)
            false : 광고인입 불허(MaaP FE /message이 header가 1(광고)
                    이면 실패 처리)
        adBodyAllowed:
          type: boolean
          description: |
            광고 문구 허용 여부 true : 본문 광고 문구를 체크하지 않음 false : 본문이 "(광고)"로 시작하면 실패 처리
        cardCount:
          type: integer
          description: 카드 개수
        maxTitleSize:
          type: integer
          default: 30
          description: 개별 타이틀 글자 최대 수. 사용하지 않음.
        maxButtonCount:
          type: integer
          description: 버튼 최대 개수
        maxDescriptionSize:
          type: integer
          description: >
            RichCard인 경우(Carousel포함) Description들의 글자수 총합.<br> OpenRichCard인 경우
            변수부 글자수 총합.<br> <=0 인 경우 사용하지 않음.<br>
        maxMediaSize:
          type: integer
          description: Byte단위 미디어 크기 총합의 최대 크기, <=0 인 경우 사용하지 않음.
    ParamInfo:
      description: >
        템플릿의 개별 파라미터를 검수하기 위한 대상 파라미터 정보 객체입니다. <br> 크기 관련 필드는 <=0 인 경우 체크하지
        않습니다.
      type: object
      required:
        - param
        - pType
      properties:
        param:
          type: string
          maximum: 20
          description: 검수 파라미터명. (영문, 한글, 숫자, '_' 만 사용)
        isMandatory:
          type: boolean
          default: false
          description: >
            필수여부. true인 경우 중계사에서 메시지 전송 요청 시 해당 필드가 없는 경우 MaaP FE에서 실패처리한다.
            false인 경우는 해당 필드가 없는 경우도 메시지 전송이 되도록 MaaP FE에서 적절하게 처리한다.
        type:
          type: string
          enum:
            - string
            - file
            - button
            - layout
          description: >
            기술검사타입을 지정합니다.<br> - string: 문자열 검사 대상<br> - file: 파일 검사 대상<br> -
            button: formattedString 내 button 제어 대상<br> - layout: formattedString
            내 button외 제어 대상<br>
        contentType:
          type: string
          enum:
            - title
            - description
            - maapfile
            - cell
            - displayText
            - url
            - etc
            - buttonName
            - visibility
          description: |
            컨텐츠 유형, PolicyInfo 정책을 검사하는데 사용됩니다.
        strSize:
          type: integer
          description: 글자 최대 크기, type이 string인 경우
        fileSize:
          type: integer
          description: 파일 최대 크기, type이 file인 경우.
        strRegx:
          type: string
          description: |
            java regular expression, null 인경우 사용하지 않음. 예)  

              1) 숫자만 : '^[0-9]\*$'  
              2) 영문자만 : '[a-zA-Z]\*$'  
              3) 한글만 : '^[가-힣]\*$'  
              4) 영어 & 숫자만 : '^[a-zA-Z0-9]\*$'  
              5) E-Mail : '^[a-zA-Z0-9]+@[a-zA-Z0-9]+$'  
              6) 휴대폰 : '^01(?:0|1|[6-9])-(?:\d{3}|\d{4})-\d{4}$'  
              7) 일반전화 : '^\d{2,3}-\d{3,4}-\d{4}$'  
              8) 주민등록번호 : '\d{6}\-[1-4]\d{6}'  
              9) IP 주소 : '([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})'  
          maximum: 65535
        verification:
          type: array
          items:
            type: string
          description: |
            문장 패턴 정의 (SKT향) "안녕하세요", "님 ", "원입니다."
        imageWidth:
          type: integer
          description: 이미지 해상도 가로 크기 (지정된 크기의 이미지를 등록해야 정상 발송 가능)
          example: 936
        imageHeight:
          type: integer
          description: 이미지 해상도 세로 크기 (지정된 크기의 이미지를 등록해야 정상 발송 가능)
          example: 1248
        couplingId:
          type: string
          maximum: 20
          description: >
            파라미터 간 함께 처리되어야 하는 경우 동일한 값을 부여<br> 즉, 같은 값의 couplingId가 지정되는 경우 지정된
            파라미터는 모두 조건을 만족해야 정상 발송 처리됨
          example: optSet1
        inputText:
          description: >
            템플릿 등록시 사용자 입력한 원본 문장(고정부 & 변수부)을 제공합니다. 단, cell방식의 타이틀 선택형은 제공되지
            않습니다.
          type: string
          maximum: 65535
        relationId:
          type: string
          description: >
            param과 관계가 있는 param을 의미합니다. 주로 현재 param이 입력되지 않을 경우 메시지 상에 노출여부와 연관된 visibility에 지정된 param을 표시합니다. <br>
            메시지 발송시 이통MaaP FE에서 핸들링하는 것으로 템플릿 등록이나 메시지 발송 param과는 무관하며, 참조 용도로 제공됩니다.
          example: descVsblty

    RegMessagebaseInfo:
      description: >
        템플릿 등록 정보 객체입니다.  템플릿 등록시 지정된 messagebaseform의 widgetPolicy 의 속성만 수정/삭제가
        가능합니다. formattedString에 템플릿이 정의되며 지정된 형식에 맞게 등록되어야 합니다. formattedString
        내 suggestions에 추가 가능한 버튼 Action은 다음 링크에서 확인 가능합니다.


        **[버튼 Action 목록
        Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**
      type: object
      required:
        - messagebaseformId
        - tmpltName
        - brandId
        - custTmpltId
      properties:
        messagebaseformId:
          description: 텡플릿 양식 ID
          type: string
          maximum: 10
        custTmpltId:
          description: 사용자 지정 템플릿ID로 영문/숫자 25자 이내만 가능
          type: string
          maximum: 25
        tmpltName:
          description: 템플릿명
          type: string
          maximum: 40
        brandId:
          description: 브랜드ID
          type: string
          maximum: 13
        agencyId:
          description: 대행사ID
          type: string
          maximum: 20
        formattedString:
          $ref: '#/components/schemas/RegRCSMessage'
    widgetPolicy:
      description: >
        오픈리치카드를 구성하는 Property 중  템플릿 정의시 변경 가능한 속성 정보 객체입니다.   클라이언트가 변경할 수 있는
        속성 리스트를 widget별 표시합니다.  클라이언트에서 템플릿 정의 시 사용하는 openrichcard용
        messagebaseform 에 정의되며 템플릿 정의시 widgetPolicy에 표시된 속성만 클라이언트에서 수정/삭제가
        가능합니다.
      type: object
      required:
        - allowedAttributes
      properties:
        allowedAttributes:
          type: array
          items:
            type: string
          example:
            - text
            - textAlignment
    Messagebase:
      description: Messagebase 기본 정보입니다.
      type: object
      properties:
        groupId:
          type: string
          description: 템플릿이 대량등록된 경우 그룹ID 입니다.
        messagebaseId:
          description: 템플릿 ID
          type: string
          maximum: 40
        tmpltName:
          description: 템플릿 등록시 입력된 템플릿 명칭입니다.
          type: string
          maximum: 40
        messagebaseformId:
          description: 템플릿의 원형인 템플릿 양식 ID 입니다.
          type: string
          maximum: 40
        brandId:
          description: |
            템플릿이 등록되어 있는 브랜드 ID 입니다.<br> 공통으로 사용하는 템플릿인 경우 'common'으로 표시됩니다.
          type: string
          enum:
            - common
        status:
          type: string
          description: |
            템플릿의 상태를 표시합니다.<br> ready : 사용 <br> pause : 사용중지
          enum:
            - ready
            - pause
        approvalResult:
          type: string
          description: >
            템플릿의 승인 상태입니다.


            - 저장 : RCS Biz Center 홈페이지에서 템플릿 정보를 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장
            상태의 템플릿은 승인요청을 해야 승인대기 상태로 변경됩니다.


            - 승인대기 : 템플릿 등록 직후 검수 이전 상태입니다.


            - 검수시작 : 템플릿 검수가 시작된 상태입니다.


            - 승인 : 검수가 완료되어 이통3사에 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.


            - 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 템플릿은 수정 후 다시 승인요청 할 수 있습니다.


            - 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를
            발송할 수 없습니다.


            - 승인대기(수정) : 승인된 템플릿 변경 승인요청 직후 검수 이전 상태입니다.
              
              
            - 검수시작(수정) : 승인된 템플릿 변경으로 승인요청된 템플릿 검수가 시작된 상태입니다.


            - 반려(수정) : 승인된 템플릿 변경 검수 처리 결과 반려된 상태입니다.


            - 검수완료(수정) : 승인된 브랜드 변경 검수 승인은 되었으나 이통3사 정보 등록이 완료되지 않은 상태입니다.
              현재 상태에서는 이통사에 따라 단말 브랜드 홈 정보가 다를 수 있습니다.
          enum:
            - 승인대기
            - 검수시작
            - 승인
            - 반려
            - 검수완료
            - 저장
            - 승인대기(수정)
            - 검수시작(수정)
            - 반려(수정)
            - 검수완료(수정)
        approvalReason:
          type: string
          description: 승인 사유
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 템플릿 등록일시
        approvalDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 템플릿 승인일시
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 템플릿 수정일시
        registerId:
          type: string
          maximum: 20
          description: 템플릿 등록 계정 ID
        updateId:
          type: string
          maximum: 20
          description: 템플릿 수정 계정 ID
    MessagebaseInfo:
      description: |
        Messagebase 객체입니다.
      type: object
      required:
        - messagebaseId
        - messagebaseformId
        - brandId
        - productCode
        - type
      allOf:
        - $ref: '#/components/schemas/Messagebase'
      properties:
        productCode:
          type: string
          description: 메시지 상품 종류 구분값입니다.
          enum:
            - sms
            - lms
            - mms
            - tmplt
        spec:
          type: string
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
          enum:
            - richcard
            - openrichcard
        cardType:
          type: string
          maximum: 64
          description: >
            카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [공통템플릿]<br> - standalone<br> -
            standalone horizontal<br> - standalone media top - carousel<br> -
            carousel medium<br> - carousel small<br> - Highlighted Image n
            Title<br> - Highlighted Image<br> - Thumbnail<br> - SNS<br>
            [템플릿]<br> - Description<br> - Cell<br> - Free<br>
        agencyId:
          description: 템플릿을 대행사가 등록한 경우, 등록한 대행사ID 입니다.
          type: string
          maximum: 20
        inputText:
          description: 정보성 텍스트 템플릿 서술(Description)인 경우, 템플릿 등록시 입력한 원본 문장을 제공합니다.
          type: string
          maximum: 300
        attribute:
          type: array
          items:
            type: string
          maximum: 256
          description: >
            통계용 속성 정보 제공 목적의 필드이며, messagebaseform의  [bizCondition, bizCategory,
            bizService] 로 구성된 배열입니다.
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
        params:
          type: array
          items:
            $ref: '#/components/schemas/ParamInfo'
        files:
          type: array
          items:
            $ref: '#/components/schemas/TemplateFileInfo'
        formattedString:
          $ref: '#/components/schemas/RCSMessage'
    MessagebaseForm:
      description: MessagebaseForm 기본 정보입니다.
      type: object
      required:
        - messagebaseformId
        - formName
      properties:
        messagebaseformId:
          description: 템플릿 양식 ID 입니다.
          type: string
          maximum: 40
        formName:
          description: 템플릿 양식명 입니다.
          type: string
          maximum: 40
        cardType:
          type: string
          maximum: 64
          description: >
            카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [openrichcard]<br> - Description<br>
            - Cell<br> - Free<br>
        bizCondition:
          type: array
          items:
            type: string
          description: |
            양식을 사용할 수 있는 대상 업태의 목록입니다.
        bizCategory:
          type: string
          maximum: 20
          description: >
            Description, Cell의 유형그룹 입니다.<br> 예)<br> -  일반<br> -  금융<br> - 
            유통/커머스<br> -  교통<br> -  엔터테인먼트<br> -  IT서비스<br> -  공공<br> -  타이틀
            자유형<br>
        bizService:
          type: string
          maximum: 20
          description: >
            Description, Cell의 세부 유형 입니다.<br> 예)<br> -  승인<br> -  입금<br> - 
            출금<br> -  출고<br> -  주문<br> -  배송<br> -  예약<br> -  회원가입<br> -  인증<br>
            -  타이틀 자유형<br>
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 템플릿 양식 등록일시 입니다.
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 템플릿 양식 수정일시 입니다.
    MessagebaseFormInfo:
      description: |
        템플릿 생성을 위한 양식 정보 객체입니다.
      type: object
      allOf:
        - $ref: '#/components/schemas/MessagebaseForm'
      properties:
        mediaUrl:
          $ref: '#/components/schemas/MediaUrl'
        productCode:
          type: string
          description: 메시지 상품종류 구분값입니다.
          enum:
            - sms
            - lms
            - mms
            - tmplt
        spec:
          type: string
          description: |
            양식의 레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
          enum:
            - richcard
            - openrichcard
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
        params:
          type: array
          items:
            $ref: '#/components/schemas/ParamInfo'
        formattedString:
          $ref: '#/components/schemas/RCSMessage'
    NotiBrand:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
        brandId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'modified': 수정 <br>
          type: string
          enum:
            - rejected
            - modified
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiContract:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
        corpId:
          type: string
        corpRegNum:
          type: string
        brandId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiChatbot:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
        brandId:
          type: string
        chatbotId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiMessagebaseForm:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
        messagebaseformId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiTemplate:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
        brandId:
          type: string
        messagebaseformId:
          type: string
        messagebaseId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiFormat:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
          default: format
        messagebaseformId:
          type: string
        messagebaseId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiAgencyKey:
      type: object
      description: 대행사 키가 재발급된 경우에 한하여 전달됩니다. 삭제 시에는 전송되지 않습니다.
      required:
        - notiType
        - agencyKey
      properties:
        notiType:
          description: webhook 알림 타입 구분값 입니다.
          type: string
          default: agencykey
        agencyKey:
          description: |
            재발급으로 새로 생성된 agencyKey 입니다.
          type: string
        method:
          description: >
            대상의 CRUD 정보를 제공합니다.<br> 'created': 재발급으로 새로운 agencyKey가 생성된 경우
            표시됩니다. <br>
          type: string
          enum:
            - created
        date:
          description: |
            재발급 일시입니다..
          type: string
          example: '2023-01-12T06:22:55.418+09'
        userName:
          description: |
            대행사 키를 재발급한 대행사 담당자의 이름입니다.
          type: string
    NotiBidirectional:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
          enum:
            - appointment
            - registration
            - subscription
            - persistentmenu
          description: |
            + appointment: 일반 대행사가 양방향 서비스 중계사 지정 알림
            + registration: 양방향 대화방 등록 알림
            + subscription: 대화방메뉴 사용 청약 확인 요청
            + persistentmenu: 대화방메뉴 등록 알림
        value:
          type: object
          properties:
            agencyCorpRegNum:
              type: string
              maximum: 10
              description: 대행사 사업자등록번호
            agencyId:
              type: string
              maximum: 20
              description: 대행사 ID
            brandId:
              type: string
              maximum: 13
              description: 브랜드 ID
            brandKey:
              type: string
              maximum: 18
              description: 브랜드 Key
            chatbotId:
              type: string
              maximum: 15
              description: 대화방 ID
            corpRegNum:
              type: string
              maximum: 10
              description: 기업 사업자등록번호
    NotiAutoReplyMsg:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
          default: autoreplymsg
        brandId:
          type: string
        autoReplyMsgId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'created': 신규등록 <br> 'modified': 수정 <br>
            'deleted': 삭제 <br>
          type: string
          enum:
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiFormatBr:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
          default: formatbr
        brandId:
          type: string
        messagebaseId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br>
            'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    NotiLogo:
      type: object
      required:
        - notiType
      properties:
        notiType:
          type: string
          default: logo
        brandId:
          type: string
        fileId:
          type: string
        method:
          description: >
            대상별 처리 정보를 제공합니다.<br> 'created': 승인 또는 신규등록 <br> 'rejected': 반려 <br>
            'modified': 수정 <br> 'deleted': 삭제 <br>
          type: string
          enum:
            - rejected
            - created
            - modified
            - deleted
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
    MediaUrl:
      type: array
      description: |
        이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
      items:
        type: object
        properties:
          fileId:
            type: string
          url:
            type: string
          typeName:
            description: >
              이미지의 사용 유형을 구분합니다.\

              icon - 템플릿 양식 아이콘 이미지<br> profile - 브랜드 프로필 이미지<br> background -
              브랜드 백그라운드 이미지<br>
            type: string
            enum:
              - icon
              - profile
              - background
          fileName:
            description: 등록한 파일의 이름입니다.
            type: string
            maximum: 256
    Pagination:
      type: object
      description: 전체 건수와 페이징 조건을 제공합니다.
      properties:
        total:
          type: integer
          description: 전체 건수 입니다.
        offset:
          type: integer
          description: 조회 기준 위치(기준 ROW) 입니다.
          default: 0
          minimum: 0
        limit:
          type: integer
          description: 페이지 당 조회 건수 입니다.
          default: 100
          minimum: 1
          maximum: 1000
    Links:
      type: object
      description: >
        이전/다음 페이지 링크를 제공합니다. offset을 0이 아닌 limit보다 작은 양수값으로 설정한 경우 prev 는 null로
        응답됩니다.
      properties:
        prev:
          type: string
          description: 이전 페이지 URL 입니다.
        next:
          type: string
          description: 다음 페이지 URL 입니다.
    DetailInfo:
      type: object
      description: >
        리치카드 메시지 상품별 1라인당 글자수, 타이틀 라인수 및 버튼 수에 따라 메시지가 잘려 보이지 않는 최대 라인수 정보를
        제공합니다. 메시지가 수신된 단말에 따라 상이할 수 있으나 리치카드 RCS메시지 발송 시 권장사항으로 참고하시기 바랍니다.
        LMS와 MMS 12종 총 13종에 대해 개별 제공됩니다.
      properties:
        productCardType:
          type: string
          description: 상품 카드 종류
          example: Standalone Media Top Tall
        releaseDate:
          type: string
          description: 정보 제공 일자(내용 수정시 일시 변경)
          example: '2020-07-31T00:00:00.000+09'
        summary:
          type: string
          description: 요약 정보
          example: >-
            모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한 가이드
            정보입니다.
        charactersPerLine:
          type: object
          description: 각 항목 별 권장 라인당 글자수
          properties:
            title:
              type: integer
              description: 타이틀 라인당 글자수
              example: 16
            description:
              type: integer
              description: 디스크립션 라인당 글자수
              example: 18
            buttonName:
              type: integer
              description: 버튼명 라인당 글자수
              example: 17
        combinations:
          type: array
          description: 디스크립션 권장 라인수 조합
          items:
            properties:
              condition:
                type: object
                description: 디스크립션 라인수에 영향을 미치는 조건
                properties:
                  mediaPhase:
                    type: string
                    description: 미디어 위상(위치, 크기)
                    example: Tall
                  numberOfLinesOnTitle:
                    type: integer
                    description: 타이틀 라인수
                    example: 2
                  numberOfButtons:
                    type: integer
                    description: 버튼수
                    example: 1
              numberOfLinesOnDescription:
                type: integer
                description: 조건에 따른 권장 디스크립션 라인수
                example: 5
    RegPrivilegeInfo:
      type: object
      description: |
        브랜드의 권한 정보 객체입니다.
      required:
        - privilegeType
        - id
      properties:
        privilegeType:
          type: string
          description: |
            권한은 다음과 같이 구분됩니다.  

              - Manager : 대표운영자  
              - SubManager : 운영자(기업의 마스터 또는 매니저)
              - Agency : 운영자(대행사)
          enum:
            - Agency
            - SubManager
            - Manager
        id:
          description: |
            마스터, 매니저 또는 대행사의 ID입니다.
          type: string
          maximum: 20
    PrivilegeInfo:
      type: object
      description: |
        브랜드의 권한 정보 객체입니다.
      required:
        - privilegeType
        - id
        - status
      properties:
        privilegeType:
          type: string
          description: |
            권한은 다음과 같이 구분됩니다. 
            - Manager : 브랜드 관리자(=마스터)
            - SubManager : 브랜드 부관리자(=마스터, 매니저)
            - Agency : 브랜드 대행사
          enum:
            - Agency
            - SubManager
            - Manager
        id:
          description: |
            마스터, 매니저 또는 대행사의 ID입니다.
          type: string
          maximum: 20
        status:
          description: >
            권한 처리 상태를 표시합니다. 

            - Waiting : RCS Biz Center 웹에서 제공되는 기능인 '브랜드 운영권한 신청'을 이용하여 신청 후 대기
            브랜드 관리자의 승인을 대기 중인 상태입니다.
              Waiting 상태의 대상은 POST를 이용하여 등록하면 승인이 되고 Ok 상태로 변경됩니다.

            - Processing : 권한 정보를 이통3사에 동기화 중인 경우 processing 상태로 표시됩니다.
              Processing 상태가 짧은 시간 동안 발생할 수 있으며 지속될 경우 RCS Biz Center에 문의하시기 바랍니다. 

            - Ok : 권한 상태가 정상적인 경우 표시됩니다.
          type: string
          enum:
            - Ok
            - Processing
            - Waiting
    RCSMessage:
      description: |
        GSMA 및 TTA RCS 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.
      type: object
      properties:
        RCSMessage:
          type: object
          properties:
            trafficType:
              type: string
              enum:
                - advertisment
          oneOf:
            - $ref: '#/components/schemas/RichcardMessage'
            - $ref: '#/components/schemas/OpenrichcardMessage'
    RegRCSMessage:
      description: |
        TTA RCS 오픈리치카드 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.
      type: object
      properties:
        RCSMessage:
          type: object
          properties:
            trafficType:
              type: string
              enum:
                - advertisment
          allOf:
            - $ref: '#/components/schemas/OpenrichcardMessage'
    RegAutoReplyMsgInfo:
      required:
        - autoReplyMsgName
        - messagebaseId
        - body
      description: |
        자동응답메시지 등록 정보입니다.
      type: object
      properties:
        autoReplyMsgName:
          type: string
          maximum: 100
          description: 자동응답메시지 명을 지정합니다.
        messagebaseId:
          type: string
          maximum: 40
          description: >
            메시지 상품코드 chat에 속하는 messagebase ID를 지정합니다.  

            제공되는 productcode = chat 해당 messagebaseId를 지정하여 사용 가능하나 다음과 같이 처리
            됩니다.  

              + 기본 말풍선(SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  
              + 세로형_Meduim(SCwThM00), 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리
              + 슬라이드형_Medium, 슬라이드형_Small은 슬라이드형_Medium으로 처리  
                - 슬라이드형 Medium ID: CCwMhM0200 ~ CCwMhM0600  
                
            지정된 ID에만 존재하는 필드가 전환되는 ID에 존재하지 않는 경우 무시됩니다.  

            예를 들어, 텍스트 카드로 등록시 title을 입력하더라도 기본 말풍선은 title을 지원하지 않으므로 title이
            적용되지 않습니다.
        copyAllowed:
          type: boolean
          default: true
          description: |
            단말에서 메시지 복사 가능 여부를 지정합니다.  

              + true : 복사 가능
              + false : 복사 불가
        body:
          type: object
          description: |
            이통 발송규격 중 /message API의 body object와 동일한 방식으로 값을 지정합니다.  
          example:
            title1: 제목
            description1: 본문 텍스트
            media1: file1.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: file2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: image1.jpg
        buttons:
          description: >
            자동응답메시지에 버튼을 등록합니다.

            지원하는 action 유형은 다음과 같습니다.  

              + urlAction : 기본 브라우저에서 웹페이지 링크  
              + localBrowserAction : 채팅+ 내부 브라우저에서 웹페이지 표시
              + mapAction : 지도 상의 특정 위치 표시 또는 현재 위치 공유 
              + calendarAction : 캘린더에 일정 공유  
              + clipboardAction : 클립보드로 복사  
              + composeAction : 지정 대화방에 메시지 작성  
              + dialerAction : 전화걸기  
              + reply : 다른 자동응답메시지 연결, 챗봇응답

            다른 자동응답메시지 연결 시에는 reply JSON object 내에 autoReplyMsgId 필드에 자동응답메시지ID를
            지정하며, postback.data는 자동할당 됩니다.  
          type: array
          items:
            type: object
            properties:
              suggestions:
                type: array
                items:
                  $ref: '#/components/schemas/AutoReplyMsgActions'
          example:
            - suggestions:
                - action:
                    urlAction:
                      openUrl:
                        url: https://www.google.com
                    displayText: Open website or deep link
                    postback:
                      data: set_by_chatbot_open_url
                - action:
                    urlAction:
                      openUrl:
                        url: https://www.google2.com
                    displayText: Open website or deep link
                    postback:
                      data: set_by_chatbot_open_url_2
            - {}
            - suggestions:
                - reply:
                    autoReplyMsgId: ARMLKmnxenL40cm
                    postback:
                      data: ''
                    displayText: 다른 자동응답 메세지 연결
                - reply:
                    postback:
                      data: ''
                    displayText: 챗봇 연결
        chipList:
          description: >
            자동응답메시지에 칩리스트를 지정합니다. 지원하는 action 유형은 다음과 같습니다.  

              + urlAction : 기본 브라우저에서 웹페이지 링크  
              + localBrowserAction : 채팅+ 내부 브라우저에서 웹페이지 표시
              + mapAction : 지도 상의 특정 위치 표시 또는 현재 위치 공유 
              + calendarAction : 캘린더에 일정 공유  
              + clipboardAction : 클립보드로 복사  
              + composeAction : 지정 대화방에 메시지 작성  
              + dialerAction : 전화걸기  
              + reply : 다른 자동응답메시지 연결, 챗봇응답

            다른 자동응답메시지 연결 시에는 reply JSON object 내에 autoReplyMsgId 필드에 자동응답메시지ID를
            지정하며, postback.data는 자동할당 됩니다.  
          type: array
          items:
            $ref: '#/components/schemas/AutoReplyMsgActions'
          example:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.naver.com
                displayText: Open website
                postback:
                  data: postbackId:111
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: postbackId:222
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ''
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ''
                displayText: 챗봇 연결
    AutoReplyMsg:
      description: |
        자동응메시지 기본 정보입니다.
      type: object
      properties:
        brandId:
          type: string
          maximum: 13
        autoReplyMsgId:
          type: string
          maximum: 40
        autoReplyMsgName:
          type: string
          maximum: 100
        messagebaseId:
          type: string
          maximum: 40
        approvalResult:
          type: string
          description: |
            자동응답메시지 등록 상태입니다. 자동응답메시지는 운영자 검수 없이 자동 등록됩니다.  
              
              - 등록완료 : 이통3사에 자동응답메시지가 정상 등록된 상태입니다.                
              - 저장 : RBC 웹에서 저장만 했을 경우 상태이며 별도 등록요청을 해야 합니다.   
              - 처리중 : 이통 3사 등록 중 에러로 인해 최종 완료가 되지 않은 상태로 수정이나 삭제가 불가능한 상태입니다.
              
          enum:
            - 등록완료
            - 저장
            - 처리중
        registerDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 등록일시
        updateDate:
          type: string
          format: date-time
          example: '2020-03-12T06:22:55.418+09'
          description: 수정일시
        registerId:
          type: string
          maximum: 20
          description: 등록 계정 ID
        updateId:
          type: string
          maximum: 20
          description: 수정 계정 ID
      required:
        - brandId
        - autoReplyMsgId
        - autoReplyMsgName
        - messagebaseId
    AutoReplyMsgInfo:
      description: |
        자동응메시지 상세 정보입니다.
      type: object
      allOf:
        - $ref: '#/components/schemas/AutoReplyMsg'
      properties:
        copyAllowed:
          type: boolean
          default: true
        body:
          type: object
          example:
            title1: 제목
            description1: 본문 텍스트
            media1: maapfile://sample.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: maapfile://sample_2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: maapfile://sample_3.jpg
        buttons:
          type: array
          items:
            type: object
            properties:
              suggestions:
                type: array
                items:
                  $ref: '#/components/schemas/AutoReplyMsgActions'
          example:
            - suggestions:
                - action:
                    urlAction:
                      openUrl:
                        url: https://www.google.com
                    displayText: Open website or deep link
                    postback:
                      data: set_by_chatbot_open_url
                - action:
                    urlAction:
                      openUrl:
                        url: https://www.google2.com
                    displayText: Open website or deep link
                    postback:
                      data: set_by_chatbot_open_url_2
            - {}
            - suggestions:
                - reply:
                    autoReplyMsgId: ARMLKmnxenL40cm
                    postback:
                      data: ''
                    displayText: 다른 자동응답 메세지 연결
                - reply:
                    postback:
                      data: ''
                    displayText: 챗봇 연결
        chipList:
          type: array
          items:
            $ref: '#/components/schemas/AutoReplyMsgActions'
          example:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.naver.com
                displayText: Open website
                postback:
                  data: postbackId:111
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: postbackId:222
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ''
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ''
                displayText: 챗봇 연결
      required:
        - body
    AutoReplyMsgFileInfo:
      description: 자동응답메시지용 파일 등록 정보입니다.
      type: object
      properties:
        fileId:
          type: string
          description: 등록된 파일의 ID 입니다.
          maximum: 64
        url:
          type: string
          description: 등록된 파일의 URL 정보 입니다.
          maximum: 128
        fileName:
          description: 등록한 파일의 이름입니다.
          type: string
          maximum: 256
    RegPersistentMenu_L0:
      description: 대화방메뉴 최상위 메뉴 버튼 정보입니다.
      type: object
      properties:
        type:
          type: string
          description: |
            대화방 메뉴를 구성하는 메뉴버튼의 유형입니다.
            - menu : 하위메뉴를 갖는 메뉴 버튼
            - reply : 응답 메뉴 버튼(챗봇응답 or 자동메시지)
            - action : RCS 액션 지정 버튼 
          enum:
            - menu
            - reply
            - action
        title:
          type: string
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
        ordNo:
          type: number
          description: |
            메뉴버튼 순서 값입니다.
        autoReplyMsgId:
          type: string
          description: >
            type이 'reply' 인 경우, 자동응답메시지ID 지정 시 자동응답메시지가 할당됩니다. 자동응답메시지ID를 지정하지
            않은 경우에는 챗봇응답으로 할당됩니다.
        actionType:
          type: string
          description: >
            type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다. 2022년 7월 28일 대화방 메뉴 정책
            변경으로 dialerAction만 지정할 수 있습니다.
          enum:
            - dialerAction
        action:
          type: object
          oneOf:
            - $ref: '#/components/schemas/dialerAction'
        subMenu:
          type: array
          items:
            $ref: '#/components/schemas/RegPersistentMenu_L1'
      required:
        - type
        - title
        - ordNo
    PersistentMenu:
      description: 대화방메뉴 정보입니다.
      type: object
      properties:
        postbackId:
          type: string
          description: 메뉴에 자동 부여되는 고유ID이며, RBC 자동할당하므로 별도 입력이 불가합니다.
          maximum: 40
        upPostbackId:
          type: string
          description: 현재 메뉴가 속한 상위 메뉴 버튼의 Postback ID, RBC 자동할당하므로 별도 입력이 불가합니다.
          maximum: 40
        type:
          type: string
          description: |
            대화방 메뉴를 구성하는 메뉴버튼의 유형입니다.  
            RBC 개편 이후 하위메뉴(type menu)는 허용하지 않습니다.  

              + menu : 하위메뉴를 갖는 메뉴 버튼 (deprecated)  
              + reply : 응답 메뉴 버튼(챗봇응답 or 자동메시지)  
              + feed : 브랜드 소식 연결 버튼
              + action : RCS 액션 지정 버튼 
          enum:
            - reply
            - feed
            - action
        title:
          type: string
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
        ordNo:
          type: number
          description: |
            메뉴버튼 순서 값입니다.
        autoReplyMsgId:
          type: string
          description: >
            type이 'reply' 인 경우, 자동응답메시지ID 지정 시 자동응답메시지가 할당됩니다. 자동응답메시지ID를 지정하지
            않은 경우에는 챗봇응답으로 할당됩니다.
        actionType:
          type: string
          description: >
            type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다. 2022년 7월 28일 대화방 메뉴 정책
            변경으로 dialerAction만 지정할 수 있습니다.
          enum:
            - dialerAction
        action:
          type: object
          oneOf:
            - $ref: '#/components/schemas/dialerAction'
      required:
        - type
        - title
        - ordNo
    RegPersistentMenu_L1:
      description: 대화방메뉴 버튼 정보입니다.
      type: object
      properties:
        type:
          type: string
          description: |
            대화방 메뉴를 구성하는 메뉴 버튼의 유형입니다.

              - reply : 응답 메뉴 버튼(챗봇응답 or 자동메시지)
              - feed : 브랜드 소식 연결 버튼
              - action : RCS 액션 지정 버튼 
          enum:
            - reply
            - feed
            - action
        title:
          type: string
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
        ordNo:
          type: number
          description: |
            메뉴버튼 순서 값입니다.
        autoReplyMsgId:
          type: string
          description: >
            type이 'reply' 인 경우, 자동응답메시지 ID 지정 시 자동응답메시지가 할당됩니다.   자동응답메시지 ID를
            지정하지 않은 경우에는 챗봇응답으로 할당됩니다.
        feedId:
          type: string
          description: |
            type이 'feed' 인 경우, 브랜드 소식 ID 지정 시 해당 소식이 연결됩니다.  
        actionType:
          type: string
          description: |
            type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다.  

              - dialerAction : 전화연결  
              - urlAction : 웹사이트 연결
          enum:
            - dialerAction
            - urlAction
        action:
          type: object
          oneOf:
            - $ref: '#/components/schemas/urlAction'
            - $ref: '#/components/schemas/dialerAction'
      required:
        - type
        - title
        - ordNo
    RegPersistentMenu:
      type: object
      properties:
        menu:
          type: array
          items:
            $ref: '#/components/schemas/RegPersistentMenu_L1'
    PausePersistentMenu:
      type: object
      properties:
        isPause:
          type: boolean
          description: 대화방메뉴 중지 여부
          default: true
    PersistentMenuStatData:
      type: object
      description: 대화방메뉴 통계 Data
      properties:
        statDate:
          type: string
          description: 통계일자
          maximum: 8
          example: 20220505
        corpId:
          type: string
          description: RCS Biz Center에 등록된 기업ID
          maximum: 13
          example: CO.06XDA87k2q
        corpRegNum:
          type: string
          description: 기업사업자 등록 번호
          maximum: 10
          example: 1234567890
        brandId:
          type: string
          description: 브랜드 ID
          maximum: 13
          example: BR.seCbCPN6U1
        chatbotId:
          type: string
          description: 대화방 ID
          maximum: 15
        menuList:
          type: array
          description: 대화방메뉴 별 상세 Data
          items:
            $ref: '#/components/schemas/MenuStatData'
    MenuStatData:
      type: object
      description: 대화방메뉴 별 상세 Data Object
      properties:
        postbackId:
          type: string
          description: 메뉴에 할당된 postbackId
          maximum: 40
        menuType:
          type: string
          description: |
            메뉴 할당된 액션 구분
            - action: RCS 액션 버튼(urlAction, mapAction, ...) 메뉴
            - reply: 기본응답 메뉴
            - autoreply: 자동응답 메뉴
            - menu: 하위 메뉴를 갖는 상위 메뉴
          enum:
            - action
            - reply
            - autoreply
            - menu
          maximum: 40
        actionType:
          type: string
          description: >
            menuType이 action인 경우 할당된 RCS 액션 유형  

            이미지 영역에 동영상 스트리밍을 설정한 경우 iframeplayB로 별도 구분(현재 자동응답메시지는 iframepalyB
            설정 미지원)
          enum:
            - urlAction
            - dialerAction
            - mapAction
            - calendarAction
            - composeAction
            - clipboardAction
            - iframeplayB
        title:
          type: string
          description: >
            버튼명, 이미지는 image_1, image_2, ..., image_# 형식으로 제공되며, 동영상 스트리밍의 경우는
            iframeplayB_1, iframeplayB_2, ..., iframeplayB_# 형식으로 제공
          maximum: 40
        clickCount:
          type: integer
          description: |
            menuType이 action, reply, autoreply 인 경우 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
        subList:
          type: array
          description: 하위 메뉴 또는 자동응답메시지 상의 버튼 상세 Data
          items:
            $ref: '#/components/schemas/SubStatData'
      required:
        - postbackId
        - title
        - menuType
    SubStatData:
      type: object
      description: 하위 메뉴 또는 자동응답메시지 버튼 별 상세 Data Object
      properties:
        postbackId:
          type: string
          description: 하위 메뉴 또는 버튼에 할당된 postbackId
          maximum: 40
        menuType:
          type: string
          description: |
            하위 메뉴에 할당된 액션 구분
            - action: RCS 액션 버튼(urlAction, mapAction, ...) 메뉴
            - reply: 기본응답 메뉴
            - autoreply: 자동응답 메뉴
          enum:
            - action
            - reply
            - autoreply
          maximum: 40
        messagebaseId:
          type: string
          description: menuType이 autoreply인 경우, 자동응답메시지의 messagebaseId(식별 불가시 NA)
          example: CCwMhM0200
          maximum: 40
          default: NA
        reactionType:
          type: string
          description: 고객이 클릭 반응한 대상(messagebaseId 식별 불가시 NA)
          enum:
            - NA
            - button
            - chipList
            - image
          maximum: 20
          default: NA
        cardNum:
          type: integer
          description: |
            menuType이 autoreply인 경우, 이미지 또는 버튼이 있는 card 의 위치(식별 불가시 0)  

              - ex1) Standalone 인 경우 1
              - ex2) Card 4장 Carousel 1,2,3,4 중 버튼이 위치한 카드 번호
              - ex3) 칩리스트인 경우 1
          default: 0
        buttonNum:
          type: integer
          description: >
            menuType이 autoreply인 경우, 이미지, 칩리스트 또는 버튼의  메시지 내 위치를 나타내는 번호(식별 불가시
            0)  

            좌에서 우, 위에서 아래로 1부터 번호 부여하며 Carousel은 각 카드별로 1부터 부여
          default: 0
        actionType:
          type: string
          description: |
            menuType이 action인 경우 할당된 RCS 액션 유형
          enum:
            - urlAction
            - dialerAction
            - mapAction
            - calendarAction
            - composeAction
            - clipboardAction
        title:
          type: string
          description: 메뉴명
          maximum: 40
        clickCount:
          type: integer
          description: |
            menuType이 action, reply 인 경우 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
        subActionList:
          type: array
          description: menuType이 autoReply인 경우 자동응답메시지 상의 상세 버튼 Data
          items:
            $ref: '#/components/schemas/SubActionData'
      required:
        - postbackId
        - title
        - clickCount
    SubActionData:
      type: object
      description: 자동응답메시지 버튼 별 상세 Data Object
      properties:
        postbackId:
          type: string
          description: 하위 메뉴 또는 버튼에 할당된 postbackId
          maximum: 40
        actionType:
          type: string
          description: |
            자동응답메시지에 할당된 RCS 액션 유형
          enum:
            - urlAction
            - dialerAction
            - mapAction
            - calendarAction
            - composeAction
            - clipboardAction
        title:
          type: string
          description: 버튼명
          maximum: 40
        clickCount:
          type: integer
          description: |
            자동응답메시지 내 버튼, 칩리스트 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
      required:
        - postbackId
        - actionType
        - title
        - clickCount
    MessageStatData:
      type: object
      description: 메시지 발송 읽음 확인 통계 Data
      properties:
        statDate:
          type: string
          description: 통계일자
          maximum: 8
          example: 20220505
        corpId:
          type: string
          description: RCS Biz Center에 등록된 기업ID
          maximum: 13
          example: CO.06XDA87k2q
        corpRegNum:
          type: string
          description: 기업사업자 등록 번호
          maximum: 10
          example: 1234567890
        brandId:
          type: string
          description: 브랜드 ID
          maximum: 13
          example: BR.seCbCPN6U1
        chatbotId:
          type: string
          description: 대화방 ID
          maximum: 15
          example: 15225739
        groupId:
          type: string
          description: 발송 캠페인 구분 ID
          maximum: 20
          example: groupdId_0001
        messagebaseId:
          type: string
          description: 발송 메시지의 messagebaseId(식별 불가시 NA)
          example: CMwMhM0200
          maximum: 40
          default: NA
        deliveredCount:
          type: integer
          description: 발송 건수
        displayedCount:
          type: integer
          description: 읽음확인 건수
    MessageButtonStatData:
      type: object
      description: 메시지 버튼 클릭 카운트
      properties:
        statDate:
          type: string
          description: 통계일자
          maximum: 8
          example: 20220505
        corpId:
          type: string
          description: RCS Biz Center에 등록된 기업ID
          maximum: 13
          example: CO.06XDA87k2q
        corpRegNum:
          type: string
          description: 기업사업자 등록 번호
          maximum: 10
          example: 1234567890
        brandId:
          type: string
          description: 브랜드 ID
          maximum: 13
          example: BR.seCbCPN6U1
        chatbotId:
          type: string
          description: 대화방 ID
          maximum: 15
          example: 15225739
        groupId:
          type: string
          description: 발송 캠페인 구분 ID
          maximum: 20
          example: groupdId_0001
        messagebaseId:
          type: string
          description: 발송 메시지의 messagebaseId(식별 불가시 NA)
          example: CMwMhM0200
          maximum: 40
          default: NA
        reactionType:
          type: string
          description: 고객이 클릭 반응한 대상(messagebaseId 식별 불가시 NA)
          enum:
            - NA
            - button
            - chipList
            - image
          maximum: 20
          default: NA
        cardNum:
          type: integer
          description: |
            클릭한 이미지 또는 버튼이 있는 card 의 위치(식별 불가시 0)  

              - ex1) Standalone 인 경우 1
              - ex2) Card 4장 Carousel 1,2,3,4 중 버튼이 위치한 카드 번호
              - ex3) 칩리스트인 경우 1  
          default: 0
        buttonList:
          type: array
          description: 발송 캠페인 메시지에 포함된 RCS 액션 버튼 통계 Data
          items:
            $ref: '#/components/schemas/ButtonStatData'
    ButtonStatData:
      type: object
      description: RCS 액션 버튼 통계 Object
      properties:
        buttonNum:
          type: integer
          description: |
            이미지, 칩리스트 또는 버튼 reactionType별 메시지 내 위치를 나타내는 번호(식별 불가시 0)  

            좌에서 우, 위에서 아래로 1부터 번호 부여하며 Carousel은 각 카드별로 1부터 부여 
          default: 0
        actionType:
          type: string
          description: |
            메시지 버튼에 할당된 RCS 액션 유형
            이미지 영역에 동영상 스트리밍을 설정한 경우 iframeplayB로 별도 구분
          enum:
            - urlAction
            - dialerAction
            - mapAction
            - calendarAction
            - composeAction
            - clipboardAction
            - iframeplayB
        title:
          type: string
          description: >
            버튼명, 이미지는 image_1, image_2, ..., image_# 형식으로 제공되며, 동영상 스트리밍의 경우는
            iframeplayB_1, iframeplayB_2, ..., iframeplayB_# 형식으로 제공 
          maximum: 40
        clickCount:
          type: integer
          description: |
            버튼 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
    TextDecoration:
      description: |
        StringObject에서 사용되는 text 서식입니다. 
        서식을 지원하는 템플릿 상품인 경우 설정이 적용되며, 서식을 지원하지 않는 템플릿 상품에 설정하면 무시됩니다.
      type: object
      properties:
        textSize:
          description: |
            글자 크기 지정시 사용합니다. 
            숫자 뒤에 단위 dp를 반드시 붙여서 입력하여야 합니다.
          type: string
          maximum: 6
          example: 16dp
        textAlignment:
          description: |
            문장 정렬 지정시 사용합니다. 지원하는 정렬의 종류는 다음과 같습니다.
            - textStart: 왼쪽 정렬
            - center: 중앙 정렬
            - textEnd: 오른쪽 정렬
          type: string
          enum:
            - textStart
            - center
            - textEnd
        textStyle:
          description: 문장의 글자를 굵게 표현할 때 사용합니다.
          type: string
          enum:
            - bold
        textColor:
          description: 문장의 글자 색상을 지정한 색상 값으로 설정합니다. - 색상코드 Hex 표현식
          type: string
          minimum: 7
          maximum: 7
          example: '#232323'
    LineDecoration:
      description: |
        LineObject에서 사용되는 서식입니다. 
        서식을 지원하는 템플릿 상품인 경우 설정이 적용되며, 서식을 지원하지 않는 템플릿 상품에 설정하면 무시됩니다.
      type: object
      properties:
        height:
          description: |
            Line의 굵기 지정시 사용합니다. 
            숫자 뒤에 단위 dp를 반드시 붙여서 입력하여야 합니다.
          type: string
          maximum: 6
          example: 0.3dp
        background:
          description: Line 색상을 지정한 색상 값으로 설정합니다. - 색상코드 Hex 표현식
          type: string
          minimum: 7
          maximum: 7
          example: '#232323'
    StringObject:
      description: >
        messagebaseform JSON의 ROOT.params[n-1].type이 string 인 경우, 템플릿에 등록할 Text
        입력에 사용되는 Object 입니다.

        type 하위 속성인 contentType의 값에 따라 입력 가능 형식에 차이가 있습니다.
      type: object
      properties:
        param:
          type: string
          description: >-
            messagebaseform JSON의 ROOT.params[n-1].param 과 동일한 값으로 템플릿 구성 Text의
            표시 위치에 해당
          maximum: 20
          example: description
        value:
          type: string
          description: >
            영역에 지정할 Text 형식에 맞게 입력해야 합니다.

            - messagebaseform의 ROOT.params[n-1].contentType이 title, description,
            cell 인 경우: 고정부와 변수부로 이루어진 문장

            - messagebaseform의 ROOT.params[n-1].contentType이 url인 경우:
            http(s)://로 시작하는 URL 입력
          example: title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다.
          maximum: 20
        decoration:
          $ref: '#/components/schemas/TextDecoration'
      required:
        - param
        - value
    FileObject:
      description: >
        messagebaseform JSON의 ROOT.params[n-1].type이 file 인 경우, 템플릿에 등록할 File
        입력에 사용되는 Object 입니다.(현재는 이미지만 지원)
      type: object
      properties:
        param:
          type: string
          description: >-
            messagebaseform JSON의 ROOT.params[n-1].param 과 동일한 값으로 템플릿 구성
            File(이미지)의 표시 위치에 해당합니다.
          maximum: 20
          example: media
        value:
          type: string
          description: 템플릿에 지정할 File(이미지) - maapfile://{fileId} 형식으로 입력합니다.
          maximum: 20
          example: maapfile://LT-BR.FW8SB30996-A46w
      required:
        - param
        - value
    LineObject:
      type: object
      description: >
        Line을 표현할 수 있는 템플릿 상품인 경우 설정 시 적용되며 지원하지 않는 상품은 무시됩니다.(현재 스타일 템플릿만 Line을
        사용할 수 있습니다.) lineIndex만 사용되며 향후 속성이 추가될 수 있습니다.
      properties:
        lineIndex:
          description: >
            템플릿에 Line을 행별로 표시합니다. 

            현재는 스타일(Cell) 템플릿에서 Text 행 아래 삽입되며 총 9개까지 지원합니다.  

            lineIndex 값은 템플릿 내의 지정 위치 값을 의미 합니다. 예를 들어 lineIndex 2는 두번째 Text 행
            아래 입니다.
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
          example: 2
        decoration:
          $ref: '#/components/schemas/LineDecoration'
      required:
        - lineIndex
    RegTemplateInfo:
      description: |
        템플릿 등록 시 사용되는 Object 입니다.
      type: object
      required:
        - brandId
        - messagebaseformId
        - custTmpltId
        - tmpltName
        - body
      properties:
        brandId:
          description: 브랜드ID
          type: string
          maximum: 13
          example: BR.FW8SB30996
        messagebaseformId:
          description: 텡플릿 양식 ID
          type: string
          maximum: 10
          example: ITHITV
        custTmpltId:
          description: 사용자 지정 템플릿ID로 영문/숫자 25자 이내만 가능
          type: string
          maximum: 25
          example: imageTemplate001
        tmpltName:
          description: 템플릿명
          type: string
          maximum: 40
          example: RBC 승인안내
        agencyId:
          description: 대행사ID
          type: string
          maximum: 20
          example: rcsbizsub
        body:
          description: >
            messagebaseform JSON의 ROOT.params[n-1] object의 type 이 file, string 인
            경우, 각 속성에 맞는 데이터 Object를 사용하여 템플릿을 구성합니다.

            messageabseform JSON의 ROOT.params[n-1].isMandatory 가 true 이면 템플릿 등록을
            위해 필수로 등록해야 하는 요소이므로 반드시 데이터를 설정해야 템플릿 등록이 가능합니다.  

            변수 mTitleMedia, itemMedia 에 사용할 이미지는 브랜드 로고(logo) 등록 후 발급된 fileId를 지정해야 합니다.
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/StringObject'
              - $ref: '#/components/schemas/FileObject'
              - $ref: '#/components/schemas/LineObject'
        buttons:
          description: >
            템플릿에 버튼을 설정하는 경우 지정합니다.  

            이통사 발송규격에서 제공되는 buttons와 동일한 사용 방식으로 템플릿에 표시되는 버튼을 지정할수 있습니다.

            이미지 템플릿 슬라이드형의 경우 buttons 배열 내 object가 각 카드에 해당하며, object 하위
            suggestions 배열 내에 messagebaseform의 policyInfo.maxButtonCount 지정 숫자만큼
            버튼을 등록할 수 있습니다.

            지정 가능한 RCS 버튼 액션은 아래 링크의 파일을 확인해 주세요.


            **[버튼 Action 목록
            Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**


            actiond의 displayText, postback을 제외한 action 하위 항목에 다음과 같이 변수부를 지정할 수
            있습니다.

            - urlAction: openUrl 하위 url 설정 값 중 URL 하위 경로만 변수 지정 가능 (예,
            https://www.rcsbizcenter.com/{{변수}})

            - mapAction(좌표, 쿼리 방식): location 하위 속성의 값

            - calendarAction: createCalendarEvent 하위 속성의 값

            - clipboardAction: copyToClipboard 하위 속성의 값

            - composeAction: composeTextMessage 하위 속성 값

            - dialerAction: dialPhoneNumber 하위 속성의 값
          type: array
          items:
            type: object
            properties:
              suggestions:
                type: array
                items:
                  $ref: '#/components/schemas/action'
            example:
              - suggestions:
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.rcsbizcenter.com
                      displayText: 카드1버튼1
                      postback:
                        data: set_by_chatbot_open_url
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.rcsbizcenter.com
                      displayText: 카드1버튼2
              - {}
              - suggestions:
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.google.com
                      displayText: 카드3버튼1
                      postback:
                        data: set_by_chatbot_open_url
    ModTemplateInfo:
      description: |
        템플릿 수정 시 사용되는 Object 입니다.
      type: object
      required:
        - brandId
        - tmpltName
        - body
      properties:
        brandId:
          description: 브랜드ID
          type: string
          maximum: 13
          example: BR.FW8SB30996
        messagebaseformId:
          description: 텡플릿 양식 ID
          type: string
          maximum: 10
          example: ITHITS
        tmpltName:
          description: 템플릿명
          type: string
          maximum: 40
          example: RBC 승인안내(v2)
        agencyId:
          description: 대행사ID
          type: string
          maximum: 20
          example: rcsbizsub
        body:
          description: >
            messagebaseform JSON의 ROOT.params[n-1] object의 type 이 file, string 인
            경우, 각 속성에 맞는 데이터 Object를 사용하여 템플릿을 구성합니다.

            messageabseform JSON의 ROOT.params[n-1].isMandatory 가 true 이면 템플릿 등록을
            위해 필수로 등록해야 하는 요소이므로 반드시 데이터를 설정해야 템플릿 등록이 가능합니다.
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/StringObject'
              - $ref: '#/components/schemas/FileObject'
              - $ref: '#/components/schemas/LineObject'
        buttons:
          description: >
            템플릿에 버튼을 설정하는 경우 지정합니다.  

            이통사 발송규격에서 제공되는 buttons와 동일한 사용 방식으로 템플릿에 표시되는 버튼을 지정할수 있습니다.

            이미지 템플릿 슬라이드형의 경우 buttons 배열 내 object가 각 카드에 해당하며, object 하위
            suggestions 배열 내에 messagebaseform의 policyInfo.maxButtonCount 지정 숫자만큼
            버튼을 등록할 수 있습니다.

            지정 가능한 RCS 버튼 액션은 아래 링크의 파일을 확인해 주세요.


            **[버튼 Action 목록
            Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**


            actiond의 displayText, postback을 제외한 action 하위 항목에 다음과 같이 변수부를 지정할 수
            있습니다.

            - urlAction: openUrl 하위 url 설정 값 중 URL 하위 경로만 변수 지정 가능 (예,
            https://www.rcsbizcenter.com/{{변수}})

            - mapAction(좌표, 쿼리 방식): location 하위 속성의 값

            - calendarAction: createCalendarEvent 하위 속성의 값

            - clipboardAction: copyToClipboard 하위 속성의 값

            - composeAction: composeTextMessage 하위 속성 값

            - dialerAction: dialPhoneNumber 하위 속성의 값
          type: array
          items:
            type: object
            properties:
              suggestions:
                type: array
                items:
                  $ref: '#/components/schemas/action'
            example:
              - suggestions:
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.rcsbizcenter.com
                      displayText: 카드1버튼1
                      postback:
                        data: set_by_chatbot_open_url
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.rcsbizcenter.com
                      displayText: 카드1버튼2
              - {}
              - suggestions:
                  - action:
                      urlAction:
                        openUrl:
                          url: https://www.google.com
                      displayText: 카드3버튼1
                      postback:
                        data: set_by_chatbot_open_url
    TemplateFileInfo:
      description: 이미지 템플릿용 파일 등록 정보입니다.
      type: object
      required:
        - fileId
      properties:
        fileId:
          type: string
          description: 등록된 파일의 ID 입니다.
          maximum: 64
        url:
          type: string
          description: 등록된 파일의 URL 정보 입니다.
          maximum: 128
        fileName:
          description: 등록한 파일의 이름입니다.
          type: string
          maximum: 256
        imageWidth:
          description: 이미지 가로 크기 입니다.
          type: integer
        imageHeight:
          description: 이미지 세로 크기 입니다.
          type: integer
    AgencyKeyInfo:
      description: 대행사 키 정보입니다.
      type: object
      properties:
        agencyKey:
          type: string
          description: 대행사 키 입니다.
          maximum: 18
          example: AK.123abcABC456Def
        registerDate:
          type: string
          format: date-time
          example: '2022-12-25T06:22:55.418+09'
          description: 대행사키 등록일시 입니다.
        userName:
          type: string
          description: 대행사키 발급을 실행한 대상자 이름입니다.
        isSync:
          type: boolean
          description: 대행사키 이통사 동기화 완료 여부
          example: true
    CustomReply:
      description: 자동응답메시지 reply 지정 필드 추가
      type: object
      properties:
        reply:
          type: object
          properties:
            autoReplyMsgId:
              type: string
              maximum: 40
              description: 자동응답메시지ID 입니다.
            displayText:
              type: string
              minLength: 1
              maxLength: 25
              description: 버튼명(표시문자열)으로 표시되는 항목입니다.
            postback:
              description: Definition of data to be posted back from UE to chatbot.
              type: object
              properties:
                data:
                  type: string
                  maxLength: 2048
              required:
                - data
          required:
            - autoReplyMsgId
      required:
        - reply
    AutoReplyMsgActions:
      oneOf:
        - $ref: '#/components/schemas/action'
        - $ref: '#/components/schemas/CustomReply'
    TableOption:
      type: object
      description: |
        Table / StyleTable등 테이블 컴포넌트의 옵션 정보 객체 입니다.  
      properties:
        leftAlign:
          type: string
          description: |
            좌측 컬럼(열) 전체의 글자 정렬 위치를 설정합니다.  

              + left : 좌측 정렬  
              + right : 우측 정렬  
              + center : 중앙 정렬
          enum:
            - left
            - right
            - center
          default: left
        rightAlign:
          type: string
          description: |
            우측 컬럼(열) 전체의 글자 정렬 위치를 설정합니다.  

              + left : 좌측 정렬  
              + right : 우측 정렬  
              + center : 중앙 정렬
          enum:
            - left
            - right
            - center
          default: right
        leftTextStyle:
          type: string
          description: |
            좌측 컬럼(열)에 입력되는 글자 스타일을 지정합니다.  

              + normal : 기본 스타일
              + bold : bold 스타일 적용
          enum:
            - normal
            - bold
          default: normal
        rightTextStyle:
          type: string
          description: |
            우측 컬럼(열)에 입력되는 글자 스타일을 지정합니다.  

              + normal : 기본 스타일
              + bold : bold 스타일 적용
          enum:
            - normal
            - bold
          default: normal
        maxCount:
          type: integer
          description: |
            테이블의 행 개수를 지정합니다. 정의된 숫자 이외에는 지정할 수 없습니다.  

              + 5 : 5행
              + 10 : 10행
          enum:
            - 5
            - 10
          default: 5
    ButtonOption:
      type: object
      description: |
        VButton / HButton 등 버튼 컴포넌트의 옵션 정보 객체 입니다.  
      properties:
        color:
          type: string
          description: >
            버튼의 색상 설정 옵션입니다.  

            버튼의 색상은 브랜드 정보에서 지정한 templateColor 컬러 Hex 값과 동일해야 합니다.  

            빈값 지정 시 기본 버튼 컬러로 적용되며, 지정된 컬러 Hex 값이 templateColor의 값과 다르면
            templateColor로 강제 설정됩니다.  
          example: '#FFFFFF'
    ComponentInfo:
      description: 컴포넌트 정보 객체입니다.
      type: object
      properties:
        componentId:
          type: string
          description: 컴포넌트 ID 입니다.
          maximum: 40
        componentName:
          type: string
          description: 컴포넌트 이름 입니다.
          maximum: 40
        iconImgFileUrl:
          type: string
          description: 컴포넌트 모양을 아이콘으로 표현한 이미지 파일 주소입니다.
          maximum: 1000
        status:
          type: string
          description: |
            컴포넌트의 사용 가능 여부, 범위를 표시합니다.  

              + public: 레이아웃 등록/수정 시 사용 가능한 컴포넌트 입니다.  
              + private: RBC에서 특정 케이스별 추가하는 컴포넌트로 레이아웃 등록/수정 시 별도 사용할 수 없습니다.  
              + tpl: 템플릿에서 사용되는 컴포넌트로 레이아웃 등록/수정 시 사용할 수 없습니다.  
              + disable: 사용할 수 없는 컴포넌트 입니다. 제공 중이던 컴포넌트가 사용 중지된 경우 설정됩니다.
        headerYn:
          type: string
          description: |
            레이아웃의 Header 영역 내 사용 가능 여부입니다.  

              + Y: 가능
              + N: 불가능
          enum:
            - 'Y'
            - 'N'
        bodyYn:
          type: string
          description: |
            레이아웃의 Body 영역 내 사용 가능 여부입니다.  

              + Y: 가능
              + N: 불가능
          enum:
            - 'Y'
            - 'N'
        footerYn:
          type: string
          description: |
            레이아웃의 footer 영역 내 사용 가능 여부입니다.  

              + Y: 가능
              + N: 불가능
          enum:
            - 'Y'
            - 'N'
        options:
          type: object
          description: |
            레이아웃 사용 시 컴포넌트에 적용될 수 있는 옵션입니다.   옵션 지정이 가능한 경우 표기됩니다.
          oneOf:
            - $ref: '#/components/schemas/TableOption'
            - $ref: '#/components/schemas/ButtonOption'
        groupComponentId:
          type: string
          description: |
            컴포넌트 그룹 ID 입니다.  
            동일한 컴포넌트 그룹ID를 갖는 컴포넌트는 레이아웃의 body 영역에서 함께 사용될 수 없습니다.
    LayoutComponent:
      description: 레이아웃 내 사용되는 컴포넌트 객체입니다.
      type: object
      properties:
        index:
          type: integer
          description: |
            레이아웃 내 컴포넌트의 순번을 표시합니다.  
            등록 시에는 index를 지정하지 않으며, 배열 내 순서를 기준으로 처리됩니다.  
        componentId:
          type: string
          description: |
            지정할 컴포넌트 ID 입니다.
          maximum: 40
        options:
          type: object
          description: |
            레이아웃 사용 시 컴포넌트에 적용될 수 있는 옵션입니다.   옵션 지정이 가능한 경우 표기됩니다.
          oneOf:
            - $ref: '#/components/schemas/TableOption'
            - $ref: '#/components/schemas/ButtonOption'
      required:
        - componentId
    SampleLayout:
      type: object
      description: |
        샘플레이아웃 기본 정보 입니다.
      properties:
        sampleLayoutId:
          type: string
          description: 샘플 레이아웃 ID 입니다.
          maximum: 40
        sampleLayoutName:
          type: string
          description: 샘플 레이아웃 이름 입니다.
          maximum: 40
        productCode:
          type: string
          description: 샘플 레이아웃의 메시지 상품 코드 입니다.
          maximum: 20
          enum:
            - sms
            - lms
            - mms
        status:
          type: string
          description: |
            샘플 레이아웃의 상태를 표시합니다.  

              + ready : 사용  
              + pause : 사용중지
          enum:
            - ready
            - pause
        registerId:
          type: string
          description: 등록자 ID 입니다.
          maximum: 20
        registerDate:
          type: string
          format: date-time
          description: 등록일시 입니다.
          example: '2023-10-25T06:22:55.418+09'
        updateDate:
          type: string
          format: date-time
          description: 수정일시 입니다.
          example: '2023-10-25T06:22:55.418+09'
        approvalResult:
          type: string
          description: |
            레이아웃 등록 상태입니다. 레이아웃은 운영자 검수 없이 자동 등록됩니다.  
              
              - 등록완료 : 이통3사에 정상 등록된 상태입니다.                
              - 저장 : RBC 웹에서 저장만 했을 경우 상태이며 별도 등록요청을 해야 합니다.  
              - 처리중 : 이통 3사 등록 중 에러로 인해 최종 완료가 되지 않은 상태로 수정이나 삭제가 불가능한 상태입니다.
              
          enum:
            - 등록완료
            - 저장
            - 처리중
    SampleLayoutDetail:
      type: object
      description: 샘플 레이아웃 상세 정보 입니다.
      allOf:
        - $ref: '#/components/schemas/SampleLayout'
      properties:
        spec:
          type: string
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
            샘플 레이아웃은 오픈리치카드로 구성되어 있습니다.
          enum:
            - openrichcard
          default: openrichcard
        cardType:
          type: string
          maximum: 64
          description: |
            카드 종류를 구분합니다.  
            레이아웃에 표시되는 카드 타입은 다음 두 가지로 제한됩니다.
              + format : 이통사 제공 공통포맷의 카드 타입입니다.  
              + formatBr : 사용자가 등록한 레이아웃의 카드 타입입니다.
          enum:
            - format
            - formatBr
        buttonColor:
          type: string
          description: >
            버튼에 지정된 컬러 값을 표시합니다.   지정된 경우 컬러 Hex 값(예,'#FFFFFF')이 표시되며, 미지정 시 빈값
            입니다.  
        headerComposition:
          type: array
          description: |
            카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 headerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.
          items:
            $ref: '#/components/schemas/LayoutComponent'
        bodyComposition:
          type: array
          description: >
            카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  

            컴포넌트 중 bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  

            예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며, 최대 개수 범위 내에서 각 영역별 배분할 수
            있습니다.     
              
              + Header 1개 지정 시 body 최대 5개  
              + body만 지정 시 최대 6개
          items:
            $ref: '#/components/schemas/LayoutComponent'
        footerComposition:
          type: array
          description: |
            카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 footerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  
            현재는 footer에 사용자가 직접 지정하는 컴포넌트는 없습니다.
          items:
            $ref: '#/components/schemas/LayoutComponent'
        formattedString:
          description: |
            샘플 레이아웃을 구성한 openrichcard 메시지 구조 정보 입니다.  
            레이아웃 등록/수정 시에는 컴포넌트를 활용하므로 formattedString 은 참조 데이터로 제공됩니다.  
          allOf:
            - $ref: '#/components/schemas/OpenrichcardMessage'
    LayoutRule:
      type: object
      properties:
        productCode:
          type: string
          description: 레이아웃 사용이 가능한 메시지 상품 코드 입니다.
          maximum: 20
          enum:
            - sms
            - lms
            - mms
          example: lms
        componentCount:
          type: integer
          description: 레이아웃 정의 시 지정 가능한 최대 컴포넌트 개수 입니다.
          example: 6
        componentMinCount:
          type: integer
          description: 레이아웃 정의 시 필요한 최소 컴포넌트 개수 입니다.
          example: 1
        buttonCount:
          type: integer
          description: 레이아웃 정의 시 지정 가능한 버튼 컴포넌트 개수 입니다.
          example: 3
        componentLimit:
          type: object
          description: |
            현재 제공되는 컴포넌트 그룹ID 별 레이아웃 내 설정 가능한 컴포넌트 그룹의 지정 가능 개수를 표시합니다.
          properties:
            ImageGroup:
              type: integer
              example: 1
            TitleGroup:
              type: integer
              example: 1
            BannerGroup:
              type: integer
              example: 1
            DescriptionGroup:
              type: integer
              example: 2
            ItemGroup:
              type: integer
              example: 1
            ThumbDescGroup:
              type: integer
              example: 1
            TableGroup:
              type: integer
              example: 2
            ThumbnailGroup:
              type: integer
              example: 1
            NoticeGroup:
              type: integer
              example: 1
            ButtonGroup:
              type: integer
              example: 2
    BrandLayout:
      type: object
      description: |
        레이아웃 기본 정보 입니다.
      properties:
        sampleLayoutId:
          type: string
          description: 레이아웃 ID 입니다.
          maximum: 40
        sampleLayoutName:
          type: string
          description: 레이아웃 이름 입니다.
          maximum: 40
        productCode:
          type: string
          description: 레이아웃의 메시지 상품 코드 입니다.
          maximum: 20
          enum:
            - sms
            - lms
            - mms
        status:
          type: string
          description: |
            레이아웃의 상태를 표시합니다.  

              + ready : 사용  
              + pause : 사용중지
          enum:
            - ready
            - pause
        registerId:
          type: string
          description: 등록자 ID 입니다.
          maximum: 20
        registerDate:
          type: string
          format: date-time
          description: 등록일시 입니다.
          example: '2023-10-25T06:22:55.418+09'
        updateDate:
          type: string
          format: date-time
          description: 수정일시 입니다.
          example: '2023-10-25T06:22:55.418+09'
        approvalResult:
          type: string
          description: |
            레이아웃 등록 상태입니다. 레이아웃은 운영자 검수 없이 자동 등록됩니다.  
              
              - 승인 : 이통3사에 정상 등록된 상태입니다.                
              - 저장 : RBC 웹에서 저장만 했을 경우 상태이며 별도 등록요청을 해야 합니다.  
              - 검수완료 : 이통 3사 등록 중 에러로 인해 최종 완료가 되지 않은 상태로 수정이나 삭제가 불가능한 상태입니다.
              
          enum:
            - 등록완료
            - 저장
            - 처리중
    BrandLayoutDetail:
      type: object
      description: 레이아웃 상세 정보 입니다.
      allOf:
        - $ref: '#/components/schemas/BrandLayout'
      properties:
        spec:
          type: string
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
            레이아웃은 오픈리치카드로 구성되어 있습니다.
          enum:
            - openrichcard
          default: openrichcard
        cardType:
          type: string
          maximum: 64
          description: |
            카드 종류를 구분합니다.  
            레이아웃에 표시되는 카드 타입은 다음 두 가지로 제한됩니다.
              + format : 이통사 제공 공통포맷의 카드 타입입니다.  
              + formatBr : 사용자가 등록한 레이아웃의 카드 타입입니다.
          enum:
            - format
            - formatBr
        buttonColor:
          type: string
          description: >
            버튼에 지정된 컬러 값을 표시합니다.   지정된 경우 컬러 Hex 값(예,'#FFFFFF')이 표시되며, 미지정 시 빈값
            입니다.  
        headerComposition:
          type: array
          description: |
            카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 headerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.
          items:
            $ref: '#/components/schemas/LayoutComponent'
        bodyComposition:
          type: array
          description: >
            카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  

            컴포넌트 중 bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  

            예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며, 최대 개수 범위 내에서 각 영역별 배분할 수
            있습니다.     
              
              + Header 1개 지정 시 body 최대 5개  
              + body만 지정 시 최대 6개
          items:
            $ref: '#/components/schemas/LayoutComponent'
        footerComposition:
          type: array
          description: |
            카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 footerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  
            현재는 footer에 사용자가 직접 지정하는 컴포넌트는 없습니다.
          items:
            $ref: '#/components/schemas/LayoutComponent'
        formattedString:
          description: |
            레이아웃을 구성한 openrichcard 메시지 구조 정보 입니다.  
            레이아웃 등록/수정 시에는 컴포넌트를 활용하므로 formattedString 은 참조 데이터로 제공됩니다.
          allOf:
            - $ref: '#/components/schemas/OpenrichcardMessage'
        params:
          type: array
          items:
            $ref: '#/components/schemas/ParamInfo'
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
    RegBrandLayout:
      type: object
      description: |
        레이아웃 등록 객체 정보 입니다.
      properties:
        layoutName:
          type: string
          description: |
            레이아웃 이름을 지정합니다.
          maximum: 40
        productCode:
          type: string
          description: 레이아웃의 메시지 상품 코드 입니다.
          maximum: 20
          enum:
            - sms
            - lms
            - mms
        sampleLayoutId:
          type: string
          description: |-
            샘플 레이아웃 ID 입니다.
            샘플 레이아웃을 이용하여 부분적으로 컴포넌트 변경하여 등록하는 경우 설정합니다.
          maximum: 40
        headerComposition:
          type: array
          description: |
            카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 headerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  
            컴포넌트를 지정하지 않을 경우 빈 배열로 등록 합니다.  
          items:
            $ref: '#/components/schemas/LayoutComponent'
        bodyComposition:
          type: array
          description: >
            카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  

            컴포넌트 중 bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  

            예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며, 최대 개수 범위 내에서 각 영역별 배분할 수
            있습니다.     
              
              + Header 1개 지정 시 body 최대 5개  
              + body만 지정 시 최대 6개
          items:
            $ref: '#/components/schemas/LayoutComponent'
        footerComposition:
          type: array
          description: |
            카드 내의 최하단 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  
            컴포넌트 중 footerYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  
            컴포넌트를 지정하지 않을 경우 빈 배열로 등록 합니다.  
            현재는 footer에 사용자가 직접 지정하는 컴포넌트는 없습니다.
          items:
            $ref: '#/components/schemas/LayoutComponent'
      required:
        - layoutName
        - productCode
        - headerComposition
        - bodyComposition
        - footerComposition
    MessagebaseformLogo:
      type: object
      description: |
        이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
      properties:
        fileId:
          type: string
          description: 로고 이미지 파일 ID 입니다.
        fileUrl:
          type: string
          description: 로고 이미지 파일 URL 입니다.
        fileName:
          description: 로고 이미지 파일 이름 입니다.
          type: string
          maximum: 256
    BrandProfileStatData:
      type: object
      description: |
        일자별, 대화방별 브랜드 프로필 노출 통계 Data
      properties:
        statDate:
          type: string
          description: 통계일자
          maximum: 8
          example: 20231201
        chatbotId:
          type: string
          description: 대화방 ID
          maximum: 15
        displayedCount:
          type: integer
          description: 대화방별 브랜드 프로필 노출 건수
          example: 1048576
    RegBrandLogo:
      type: object
      description: |
        브랜드 로고 등록시 사용됩니다.
      properties:
        name:
          type: string
          maximum: 30
          description: 로고명 입니다.
          example: RBC브랜드로고
        description:
          type: string
          maximum: 100
          description: 100자 이내의 로고 설명 입니다.
          example: 등록하는 로고에 대한 설명을 100자 이내로 작성 가능
        file:
          type: object
          format: binary
          description: |
            업로드 로고 이미지 파일을 지칭합니다.  
                    
            **파일형식 : gif, png, jpeg, jpg, bmp (최대 1MB)**
      required:
        - name
        - file
    BrandLogo:
      type: object
      description: |
        브랜드 로고 정보 입니다.
      properties:
        fileId:
          type: string
          maximum: 64
          description: 로고 이미지 파일 ID 입니다.
          example: BLG-BR.5nOGE1R3y6-8PMn
        fileUrl:
          type: string
          maximum: 1000
          description: 로고 이미지 파일 URL 입니다.
          example: >-
            https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
        name:
          type: string
          description: 로고명 입니다.
          maximum: 30
          example: OO용 로고
        fileName:
          description: 원본 파일명 입니다.
          type: string
          maximum: 256
          example: 300x300.gif
        description:
          type: string
          maximum: 100
          description: 로고 설명입니다.
          example: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
        approvalResult:
          type: string
          description: >
            로고 승인 상태입니다.  

            - 저장 : RCS Biz Center 홈페이지에서 승인요청 하지 않고 저장 또는 승인요청 취소된 상태입니다. 저장 상태의
            로고는 승인요청을 해야 승인대기 상태로 변경됩니다.

            - 승인대기 : 로고 등록 직후 검수 이전 상태입니다.

            - 검수시작 : 로고 검수가 시작된 상태입니다.

            - 승인 : 검수가 완료되어 이통3사에 정보 등록까지 최종 완료되어 RCS 메시지 발송시 사용 가능한 상태입니다.

            - 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 로고는 수정 후 다시 승인요청 할 수 있습니다.

            - 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를
            발송시 사용할 수 없습니다.

            - 승인대기(수정) : 승인된 로고를 수정하여 다시 승인요청한  상태입니다.
              
            - 검수시작(수정) : 승인된 로고를 수정하여 다시 승인요청된 로고의 검수가 시작된 상태입니다.

            - 반려(수정) : 승인된 로고를 수정하여 다시 승인요청 후 검수 처리 결과 반려된 상태입니다.

            - 검수완료(수정) : 승인된 로고를 수정하여 다시 승인요청 후  검수 승인은 되었으나 이통3사 정보 갱신이 완료되지 않은
            상태입니다.
              현재 상태에서는 이통사에 따라 로고가 다르게 표시될 수 있습니다.
          enum:
            - 승인대기
            - 검수시작
            - 승인
            - 반려
            - 검수완료
            - 저장
            - 승인대기(수정)
            - 검수시작(수정)
            - 반려(수정)
            - 검수완료(수정)
          example: 승인
        approvalReason:
          type: string
          description: 승인 사유
          example: 승인완료
        registerDate:
          type: string
          format: date-time
          example: '2024-03-12T06:22:55.418+09'
          description: 로고 등록일시
        approvalDate:
          type: string
          format: date-time
          example: '2024-03-12T06:22:55.418+09'
          description: 로고 승인일시
        updateDate:
          type: string
          format: date-time
          example: '2024-03-12T06:22:55.418+09'
          description: 로고 수정일시
        registerId:
          type: string
          maximum: 20
          description: 로고 등록 계정 ID
          example: userId
        updateId:
          type: string
          maximum: 20
          description: 로고 수정 계정 ID
          example: userId
    CommonLogo:
      type: object
      description: |
        RBC에서 제공되는 기본 로고 정보를 제공합니다.
      properties:
        fileId:
          type: string
          description: 기본 로고 이미지 파일 ID 입니다.
          maximum: 64
        fileUrl:
          type: string
          description: 기본 로고 이미지 파일 URL 입니다.
        fileName:
          description: 기본 로고명 입니다.
          type: string
          maximum: 30
    suggestion:
      description: Common base definition for suggested replies and suggested actions.
      type: object
      properties:
        displayText:
          type: string
          minLength: 1
          maxLength: 25
        postback:
          description: Definition of data to be posted back from UE to chatbot.
          type: object
          properties:
            data:
              type: string
              maxLength: 2048
          required:
            - data
      required:
        - displayText
        - postback
    reply:
      description: Definition of a suggested reply.
      type: object
      properties:
        reply:
          allOf:
            - $ref: '#/components/schemas/suggestion'
      required:
        - reply
    action:
      description: Common base definition of a suggested action.
      type: object
      properties:
        action:
          type: object
          allOf:
            - $ref: '#/components/schemas/suggestion'
            - oneOf:
                - $ref: '#/components/schemas/urlAction'
                - $ref: '#/components/schemas/dialerAction'
                - $ref: '#/components/schemas/mapAction'
                - $ref: '#/components/schemas/calendarAction'
                - $ref: '#/components/schemas/composeAction'
                - $ref: '#/components/schemas/clipboardAction'
                - $ref: '#/components/schemas/localBrowserAction'
      required:
        - action
    urlAction:
      description: Suggested actions to interact a website or deep app link.
      properties:
        urlAction:
          type: object
          oneOf:
            - properties:
                openUrl:
                  type: object
                  properties:
                    url:
                      type: string
                      format: uri
                  required:
                    - url
              required:
                - openUrl
      required:
        - urlAction
    dialerAction:
      description: Suggested actions for interacting with a phone number.
      properties:
        dialerAction:
          type: object
          oneOf:
            - properties:
                dialPhoneNumber:
                  type: object
                  properties:
                    phoneNumber:
                      type: string
                    fallbackUrl:
                      type: string
                      format: uri
                  required:
                    - phoneNumber
              required:
                - dialPhoneNumber
      required:
        - dialerAction
    mapAction:
      description: Suggested actions for interacting with a location on a map.
      properties:
        mapAction:
          type: object
          oneOf:
            - properties:
                showLocation:
                  description: Shows a given location on a map.
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        latitude:
                          type: number
                        longitude:
                          type: number
                        label:
                          type: string
                          minLength: 1
                          maxLength: 100
                      required:
                        - latitude
                        - longitude
                    fallbackUrl:
                      type: string
                      format: uri
                  required:
                    - location
              required:
                - showLocation
            - properties:
                requestLocationPush:
                  description: >-
                    One-time request to send a geo location push from UE to
                    chatbot
                  type: object
                  properties:
                    currentLocation:
                      description: >-
                        set true to send current location without location
                        selection
                      type: boolean
              required:
                - requestLocationPush
      required:
        - mapAction
    calendarAction:
      description: Suggested actions for interacting with a calendar event.
      properties:
        calendarAction:
          type: object
          oneOf:
            - properties:
                createCalendarEvent:
                  type: object
                  properties:
                    startTime:
                      type: string
                      format: date-time
                      example: '2021-05-24T10:35:00.000Z'
                    endTime:
                      type: string
                      format: date-time
                      example: '2021-05-24T19:35:04.147Z'
                    title:
                      type: string
                      minLength: 1
                      maxLength: 100
                    description:
                      type: string
                      minLength: 1
                      maxLength: 500
                    fallbackUrl:
                      type: string
                      format: uri
                  required:
                    - startTime
                    - endTime
                    - title
              required:
                - createCalendarEvent
      required:
        - calendarAction
    composeAction:
      description: Suggested actions for composing draft messages.
      properties:
        composeAction:
          type: object
          oneOf:
            - properties:
                composeTextMessage:
                  description: Compose a draft text message.
                  type: object
                  properties:
                    phoneNumber:
                      type: string
                    text:
                      type: string
                      maxLength: 100
                  required:
                    - phoneNumber
                    - text
              required:
                - composeTextMessage
            - properties:
                composeRecordingMessage:
                  description: Compose a draft message with a media recording.
                  type: object
                  properties:
                    phoneNumber:
                      type: string
                    type:
                      type: string
                      enum:
                        - AUDIO
                        - VIDEO
              required:
                - composeRecordingMessage
      required:
        - composeAction
    deviceAction:
      description: (현재 미제공)Suggested actions for interacting with the user's device.
      properties:
        deviceAction:
          type: object
          oneOf:
            - properties:
                requestDeviceSpecifics:
                  description: Request specifics about the user's device.
                  type: object
              required:
                - requestDeviceSpecifics
      required:
        - deviceAction
    settingsAction:
      description: (현재 미제공)Suggested actions for interacting with app settings
      properties:
        settingsAction:
          type: object
          oneOf:
            - properties:
                disableAnonymization:
                  description: Ask the user to disable the anonymization setting.
                  type: object
              required:
                - disableAnonymization
            - properties:
                enableDisplayedNotifications:
                  description: Ask the user to enable sending displayed notifications.
                  type: object
              required:
                - enableDisplayedNotifications
      required:
        - settingsAction
    clipboardAction:
      description: Text to be copied to clipboard.
      properties:
        clipboardAction:
          type: object
          oneOf:
            - properties:
                copyToClipboard:
                  type: object
                  properties:
                    text:
                      type: string
                  required:
                    - text
              required:
                - copyToClipboard
      required:
        - clipboardAction
    localBrowserAction:
      description: >-
        (템플릿 버튼 등록 불가)Suggested actions using Internal Web browser to interact a
        website or deep app link.
      properties:
        localBrowserAction:
          type: object
          oneOf:
            - properties:
                openUrl:
                  type: object
                  properties:
                    url:
                      type: string
                      format: uri
                    isHalfView:
                      description: >-
                        set true to show Internal Web browser in vertical half
                        size of screen
                      type: boolean
                      default: false
                    postParameter:
                      description: parameters to be sent as POST method when open url
                      type: object
                  required:
                    - url
              required:
                - openUrl
      required:
        - localBrowserAction
    shareAction:
      description: (현재 미제공)Text to be shared to other applications
      properties:
        shareAction:
          type: object
          oneOf:
            - properties:
                shareText:
                  type: object
                  properties:
                    text:
                      type: string
                  required:
                    - text
              required:
                - shareText
      required:
        - shareAction
    view:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - View
            width:
              $ref: '#/components/schemas/width_height'
            height:
              $ref: '#/components/schemas/width_height'
            widgetPolicy:
              $ref: '#/components/schemas/widgetPolicy'
          required:
            - widget
            - width
            - height
    linear_layout:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - LinearLayout
            orientation:
              type: string
              enum:
                - vertical
                - horizontal
            gravity:
              $ref: '#/components/schemas/gravity'
            children:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/view'
                  - $ref: '#/components/schemas/linear_layout_L1'
                  - $ref: '#/components/schemas/text_view'
                  - $ref: '#/components/schemas/image_view'
            width:
              $ref: '#/components/schemas/width_height'
            height:
              $ref: '#/components/schemas/width_height'
          required:
            - widget
            - width
            - height
            - orientation
    linear_layout_L1:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - LinearLayout
            orientation:
              type: string
              enum:
                - vertical
                - horizontal
            gravity:
              $ref: '#/components/schemas/gravity'
            children:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/view'
                  - $ref: '#/components/schemas/linear_layout_L2'
                  - $ref: '#/components/schemas/text_view'
                  - $ref: '#/components/schemas/image_view'
            width:
              $ref: '#/components/schemas/width_height'
            height:
              $ref: '#/components/schemas/width_height'
          required:
            - widget
            - width
            - height
            - orientation
    linear_layout_L2:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - LinearLayout
            orientation:
              type: string
              enum:
                - vertical
                - horizontal
            gravity:
              $ref: '#/components/schemas/gravity'
            children:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/view'
                  - $ref: '#/components/schemas/text_view'
                  - $ref: '#/components/schemas/image_view'
            width:
              $ref: '#/components/schemas/width_height'
            height:
              $ref: '#/components/schemas/width_height'
          required:
            - widget
            - width
            - height
            - orientation
    text_view:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - TextView
            text:
              type: string
              minLength: 0
              maxLength: 2000
            textAlignment:
              type: string
              pattern: >-
                ((\|)?(center|gravity|inherit|textEnd|textStart|viewEnd|viewStart))+
            textStyle:
              type: string
              pattern: ((\|)?(bold|normal))*
            textColor:
              $ref: '#/components/schemas/color'
            textSize:
              $ref: '#/components/schemas/dimen'
            width:
              $ref: '#/components/schemas/width_height'
            height:
              $ref: '#/components/schemas/width_height'
            widgetPolicy:
              $ref: '#/components/schemas/widgetPolicy'
          required:
            - widget
            - width
            - height
    image_view:
      allOf:
        - $ref: '#/components/schemas/Views'
        - properties:
            widget:
              type: string
              enum:
                - ImageView
            mediaUrl:
              type: string
              format: uri
            mediaContentType:
              type: string
            mediaFileSize:
              description: Media file size in bytes
              type: integer
              minimum: 0
            scaleType:
              type: string
              enum:
                - center
                - centerCrop
                - centerInside
                - fitCenter
                - fitEnd
                - fitStart
                - fitXY
                - matrix
            width:
              $ref: '#/components/schemas/dimen'
            height:
              $ref: '#/components/schemas/dimen'
            widgetPolicy:
              $ref: '#/components/schemas/widgetPolicy'
          required:
            - widget
            - width
            - height
            - mediaUrl
            - mediaContentType
            - mediaFileSize
    Views:
      type: object
      properties:
        weight:
          type: number
        visibility:
          $ref: '#/components/schemas/visibility'
        background:
          $ref: '#/components/schemas/color'
        corner_radius:
          $ref: '#/components/schemas/dimen'
        padding:
          $ref: '#/components/schemas/offset'
        paddingTop:
          $ref: '#/components/schemas/offset'
        paddingLeft:
          $ref: '#/components/schemas/offset'
        paddingRight:
          $ref: '#/components/schemas/offset'
        paddingBottom:
          $ref: '#/components/schemas/offset'
        margin:
          $ref: '#/components/schemas/offset'
        marginTop:
          $ref: '#/components/schemas/offset'
        marginBottom:
          $ref: '#/components/schemas/offset'
        marginLeft:
          $ref: '#/components/schemas/offset'
        marginRight:
          $ref: '#/components/schemas/offset'
        click:
          oneOf:
            - $ref: '#/components/schemas/reply'
            - $ref: '#/components/schemas/action'
    width_height:
      type: string
      pattern: match|content|[0-9]+dp
    visibility:
      type: string
      enum:
        - visible
        - invisible
        - gone
    color:
      type: string
      pattern: bot_color|#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})
    dimen:
      type: string
      pattern: '[0-9]+dp'
    offset:
      type: string
      pattern: '-?[0-9]+dp'
    gravity:
      type: string
      pattern: >-
        ((\|)?(bottom|center|center_horizontal|center_vertical|clip_horizontal|clip_vertical|end|fill|fill_horizontal|fill_vertical|left|right|start|top))+
    OpenrichcardMessage:
      description: TTA TTAK.KO-06.0410/R4 부록D 오픈리치카드 스키마 참조
      type: object
      properties:
        openrichcardMessage:
          type: object
          properties:
            card:
              type: string
              enum:
                - open_rich_card
            copyAllowed:
              description: set true to allow text copy of card text
              type: boolean
            zoomAllowed:
              description: 메시지 확대/축소 가능 여부
              type: boolean
            scaleAllowed:
              description: 이미지 비율 맞춤 활성화 여부
              type: boolean
            layout:
              oneOf:
                - $ref: '#/components/schemas/view'
                - $ref: '#/components/schemas/linear_layout'
                - $ref: '#/components/schemas/text_view'
                - $ref: '#/components/schemas/image_view'
            suggestions:
              description: >-
                Suggested replies and/or suggested actions for a chatbot
                message, send from chatbot platform to client.
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/action'
              minItems: 1
              maxItems: 11
          required:
            - card
            - layout
    cardMedia:
      type: object
      properties:
        mediaUrl:
          type: string
          format: uri
        mediaContentType:
          type: string
        mediaFileSize:
          description: Media file size in bytes
          type: integer
          minimum: 0
        thumbnailUrl:
          type: string
          format: uri
        thumbnailContentType:
          type: string
        thumbnailFileSize:
          description: Thumbnail file size in bytes
          type: integer
          minimum: 0
        height:
          type: string
          enum:
            - SHORT_HEIGHT
            - MEDIUM_HEIGHT
            - TALL_HEIGHT
        contentDescription:
          description: >-
            Accessiblity text for use with screen readers. Will not be shown on
            screen.
          type: string
          minLength: 1
          maxLength: 200
      required:
        - mediaUrl
        - mediaContentType
        - mediaFileSize
        - height
    cardTitle:
      type: string
      minLength: 1
      maxLength: 200
    cardDescription:
      type: string
      minLength: 1
      maxLength: 2000
    fontStyle:
      type: array
      items:
        type: string
        enum:
          - italics
          - bold
          - underline
      minItems: 1
      maxItems: 3
    cardStyle:
      description: A reference to a CSS for the rendering of the Rich Card(s).
      type: string
      format: uri
    generalPurposeCardMessage:
      description: This defines a general-purpose, standalone Rich Card message.
      type: object
      properties:
        generalPurposeCard:
          type: object
          properties:
            layout:
              type: object
              oneOf:
                - properties:
                    cardOrientation:
                      type: string
                      enum:
                        - VERTICAL
                    titleFontStyle:
                      $ref: '#/components/schemas/fontStyle'
                    descriptionFontStyle:
                      $ref: '#/components/schemas/fontStyle'
                    style:
                      $ref: '#/components/schemas/cardStyle'
                  required:
                    - cardOrientation
                - properties:
                    cardOrientation:
                      type: string
                      enum:
                        - HORIZONTAL
                    imageAlignment:
                      type: string
                      enum:
                        - LEFT
                        - RIGHT
                    titleFontStyle:
                      $ref: '#/components/schemas/fontStyle'
                    descriptionFontStyle:
                      $ref: '#/components/schemas/fontStyle'
                    style:
                      $ref: '#/components/schemas/cardStyle'
                  required:
                    - cardOrientation
                    - imageAlignment
            content:
              type: object
              properties:
                media:
                  $ref: '#/components/schemas/cardMedia'
                title:
                  $ref: '#/components/schemas/cardTitle'
                description:
                  $ref: '#/components/schemas/cardDescription'
              anyOf:
                - required:
                    - media
                - required:
                    - title
                - required:
                    - description
            zoomAllowed:
              description: 메시지 확대/축소 가능 여부
              type: boolean
          required:
            - layout
            - content
      required:
        - generalPurposeCard
    generalPurposeCardCarouselMessage:
      description: >-
        This defines a message containing a carousel of general-purpose Rich
        Cards.
      type: object
      properties:
        generalPurposeCardCarousel:
          type: object
          properties:
            layout:
              type: object
              properties:
                cardWidth:
                  type: string
                  enum:
                    - SMALL_WIDTH
                    - MEDIUM_WIDTH
                  default: SMALL_WIDTH
                titleFontStyle:
                  $ref: '#/components/schemas/fontStyle'
                descriptionFontStyle:
                  $ref: '#/components/schemas/fontStyle'
                style:
                  $ref: '#/components/schemas/cardStyle'
              required:
                - cardWidth
            content:
              type: array
              items:
                type: object
                properties:
                  media:
                    $ref: '#/components/schemas/cardMedia'
                  title:
                    $ref: '#/components/schemas/cardTitle'
                  description:
                    $ref: '#/components/schemas/cardDescription'
                anyOf:
                  - required:
                      - media
                  - required:
                      - title
                  - required:
                      - description
              minItems: 2
              maxItems: 12
            zoomAllowed:
              description: 메시지 확대/축소 가능 여부
              type: boolean
          required:
            - layout
            - content
      required:
        - generalPurposeCardCarousel
    RichcardMessage:
      description: GSMA RCC.07-v11.0 참조
      type: object
      properties:
        richcardMessage:
          type: object
          properties:
            message:
              description: A chatbot message, sent from chatbot platform to client.
              type: object
              oneOf:
                - $ref: '#/components/schemas/generalPurposeCardMessage'
                - $ref: '#/components/schemas/generalPurposeCardCarouselMessage'