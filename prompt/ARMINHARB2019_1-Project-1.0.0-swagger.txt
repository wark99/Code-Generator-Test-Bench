Generate java controllers and models based on the following swagger yaml:

openapi: 3.1.0
info:
  title: Inventory Management System
  version: 1.0.0
paths:
  /customers:
    post:
      summary: New_Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Created
    get:
      summary: Get_Customers
      responses:
        '200':
          description: OK
  /customers/{customerId}:
    get:
      summary: customerID
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Customer not found
    put:
      summary: Update_Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
        '404':
          description: Customer not found
    delete:
      summary: Delete_Customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content

  /orders:
    post:
      summary: New_Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
    get:
      summary: Get_Orders
      responses:
        '200':
          description: OK
  /orders/{orderId}:
    get:
      summary: OrderID
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Order not found
    put:
      summary: Update_Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
        '404':
          description: Order not found
    delete:
      summary: Delete_Order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content

  /inventory:
    post:
      summary: New_Inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        '201':
          description: Created
    get:
      summary: Get_Inventory
      responses:
        '200':
          description: OK
  /inventory/{inventoryId}:
    get:
      summary: InventoryID
      parameters:
        - in: path
          name: inventoryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Inventory entry not found
    put:
      summary: Update_Inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        '200':
          description: OK
        '404':
          description: Inventory entry not found
    delete:
      summary: Delete_Inventory
      parameters:
        - in: path
          name: inventoryId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content

  /items:
    post:
      summary: New_Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Created
    get:
      summary: Get_Item
      responses:
        '200':
          description: OK
  /items/{itemId}:
    get:
      summary: ItemID
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Item not found
    put:
      summary: Update_Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: OK
        '404':
          description: Item not found
    delete:
      summary: Delete_Item
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - phone

    Order:
      type: object
      properties:
        orderId:
          type: integer
        customerId:
          type: integer
        orderDate:
          type: string
          format: date
        amount:
          type: number
      required:
        - orderId
        - customerId
        - orderDate
        - amount

    Inventory:
      type: object
      properties:
        inventoryId:
          type: integer
        quantity:
          type: integer
      required:
        - inventoryId
        - quantity

    Item:
      type: object
      properties:
        itemId:
          type: integer
        name:
          type: string
        price:
          type: number
        orderId:
          type: integer
        inventoryId:
          type: integer
      required:
        - itemId
        - name
        - price
        - orderId
        - InvenoryId