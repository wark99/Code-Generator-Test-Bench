openapi: 3.1.0

info:
  title: kita-app - kinddatenEAI Schnittstellenspezifikation
  description: |-
    Schnittstellenspezifikation für die Übertragung von Kinddaten aus dem kf+ über eine kinddatenEAI an die kita-app.

  contact:
    email: itm.km23@muenchen.de
  version: 0.0.2

paths:
  /kitaApp/v1/einrichtungen/{kibigWebId}/mitGruppenUndKindern:
    get:
      tags:
        - kinder
      summary: Liefert Kinddaten
      description: Liefert Kinddaten einer Einrichtung anhand der kibigWebId in Gruppen gruppiert.
      operationId: getGroupsWithKidsByKibigwebid
      parameters:
        - name: kibigWebId
          in: path
          description: kibigWebId der Einrichtung für die Kinddaten abgerufen werden
          required: true
          schema:
            type: string
            description: KibigwebId 162(für München) - 001 (für Städtisch) - \d (Art/Form der Einrichtung) - \d{3} (Nummer der Einrichtung)
            example: 1620018207
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: not Found
        4XX:
          description: Sonstiger Client Fehler (4xx)
        5XX:
          description: Server Fehler (5xx)

components:
  schemas:
    Institute:
      type: object
      required:
        - instituteId
      properties:
        instituteId:
          type: string
          maxLength: 25
          description: kibigWebId der Einrichtung [KITA_ID_EXTERN]
          example: 1620028207
        intituteName:
          type: string
          maxLength: 128
          description: Name der Einrichtung [KITA_KITANAME]
          example:  Lerchenkinderhaus e. V.
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          
    Group:
      type: object
      required:
        - groupId
      properties:
        groupId:
          type: string
          maxLength: 25
          description: kitafinder+ ID der Gruppe [VER_GRUPPE_ID]
          example: 9624
        name:
          type: string
          maxLength: 255
          description: Zugehörigkeit zur Kitagruppe zum Exportdatum [VER_GRUPPE]
          example: Die Mäuse
        children:
          type: array
          items:
            $ref: '#/components/schemas/Child'
    Child:
      type: object
      required:
        - childId
        - firstName
        - lastName
        - gender
      properties:
        childId:
          type: string
          maxLength: 25
          description: >-
            Dieses Feld wird bei Bewerbungen vom erfassenden System, also vom Kita-Planer 2 selbst, vergeben und zur eindeutigen Identifizierung der Bewerbung/des Vertrags genutzt.
            Es handelt sich NICHT um eine ID des physischen Kindes. Die KIND_ID_EXTERN ist eindeutig für das Tripel: Kind, Bewerbungsprozess, Kita. Pro Kita und Bewerbungsprozess (z.B. andere Altersgruppe) gibt es also für das gleiche physische Kind eine unterschiedliche externe ID. [KITA_ID_EXTERN]
          examples: 
            - K0000001
        firstName:
          type: string
          maxLength: 128
          description: Vorname des Kindes [KIND_VORNAME]
          example: Tina
        lastName:
          type: string
          maxLength: 128
          description: Nachname des Kindes [KIND_NACHNAME]
          example: Stark
        birthday:
          type: string
          format: date
          description: Geburtstag des Kindes [KIND_GEBURTSDATUM]
          example: 2009-10-07
        careStart:
          type: string
          format: date
          description: Datum des Vertragsbeginns bzw. der aktuellen Vertragsänderung [VER_VERTRAG_AB]
          example: 2012-08-01
        careEnd:
          type: string
          format: date
          description: Datum zu dem der Vertrag gekündigt ist (wenn explizit gekündigt wurde) [VER_KUENDIGUNG_ZUM]
          example: 2012-08-01
        address:
          description: Adresse des Kindes. Wird aus der Adresse der SB1 | SB2 bzw. der abweichenden (ABW) Adresse berechnet. Berechnung abhängig von [WOHNHAFT_BEI]
          type: object
          properties:
            street:
              type: string
              maxLength: 255
              description: Strasse des Kindes [SB1_STRASSE | SB2_STRASSE | ABW_STRASSE]
              example: Thaddäus-Robl-Str.
            streetNo:
              type: string
              maxLength: 10
              description: Hausnummer des Kindes [SB1_HAUSNUMMER | SB2_HAUSNUMMER | ABW_HAUSNUMMER]
              example: 21a
            city:
              type: string
              maxLength: 255
              description: Wohnort des Kindes [SB1_ORT | SB2_ORT | ABW_ORT]
              example: München
            zipCode:
              type: string
              maxLength: 255
              description: Postleitzahl des Wohnortes des Kindes [SB1_POSTLEITZAHL | SB2_POSTLEITZAHL | ABW_POSTLEITZAHL]
              example: 80935
        parents:
          description: Array mit Sorgeberechtigten für das Kind. Liste wird aus SB1, SB2 und ABW berechnet.
          type: array
          items:
            type: object
            required:
              - parentType
              - firstName
              - lastName
            properties:
              parentType:
                type: string
                enum: [sb1, sb2, abw]
                description: sb1 (Sorgeberechtigter1), sb2 (Sorgeberechtigter2), abw (Abweichender Sorgeberechtigter)
                example: sb1
              firstName:
                type: string
                maxLength: 255
                description: Vorname des Sorgeberechtigten [SB1_VORNAME | SB2_VORNAME | ABW_VORNAME]
                example: Astrid
              lastName:
                type: string
                maxLength: 255
                description: Nachname des Sorgeberechtigten [SB1_NACHNAME | SB2_NACHNAME | ABW_NACHNAME]
                example: Lustig
                
  securitySchemes:
    oAuthSample:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://sso.muenchen.de/auth/realms/muenchen.de/protocol/openid-connect/token