openapi: 3.1.0
info:
  title: API Reference - Developer tools
  termsOfService: https://www.infomaniak.com/en/legal/general-terms-and-conditions
  contact:
    name: Infomaniak Support
    url: https://developer.infomaniak.com/
    email: support@infomaniak.com
  license:
    name: MIT License
    url: https://developer.infomaniak.com/license
  version: 1.0.0
servers:
  - url: https://api.infomaniak.com
paths:
  /1/kmeet/rooms:
    post:
      tags:
        - Plan a conference
      summary: Plan a conference
      description: >-
        This endpoint allows you to plan a conference with predefined settings.
        It will add an event on your Infomaniak Calendar with the meeting url.
         If you just want to create a room you don't need any API calls, you can build a conference URL by adding an unique identifier to your kMeet instance url (eg: kmeet.infomaniak.com/${MY_VERY_SECRET_CONFERENCE_ID})
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlannedConference'
      responses:
        '200':
          description: Default Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PlannedConferenceReturn'
        '422':
          description: Unprocessable Entity
      deprecated: false
      security:
        - bearerAuth: []
  /1/kmeet/rooms/{room_id}/settings:
    get:
      tags:
        - Room settings
      summary: Get room settings
      description: |
        This endpoint allows you to fetch room settings.
      parameters:
        - description: Unique identifier of the room settings
          required: true
          schema:
            type: string
          name: room_id
          in: path
      responses:
        '200':
          description: Default response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PlannedConferenceReturn'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
      deprecated: false
      security:
        - bearerAuth: []
  /teams/{team_id}/top/reactions:
    get:
      tags:
        - insights
      summary: Get a list of the top reactions for a team.
      description: >
        Get a list of the top reactions across all public and private channels
        (the user is a member of) for a given team.

        ##### Permissions

        Must have `view_team` permission for the team.
      operationId: GetTopReactionsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: reactions posted on the current day.
            - `7_day`: reactions posted in the last 7 days.
            - `28_day`: reactions posted in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Top reactions retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopReactionList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/me/top/reactions:
    get:
      tags:
        - insights
      summary: Get a list of the top reactions for a user.
      description: >
        Get a list of the top reactions across all public and private channels
        (the user is a member of) for a given user.

        If no `team_id` is provided, this will also include reactions posted by
        the given user in direct and group messages.

        ##### Permissions

        Must be logged in as the user.
      operationId: GetTopReactionsForUser
      parameters:
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: reactions posted on the current day.
            - `7_day`: reactions posted in the last 7 days.
            - `28_day`: reactions posted in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
        - name: team_id
          in: query
          description: >
            Team ID will scope the response to a given team and exclude direct
            and group messages.

            ##### Permissions

            Must have `view_team` permission for the team.
          schema:
            type: string
      responses:
        '200':
          description: Top reactions retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopReactionList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/top/channels:
    get:
      tags:
        - insights
      summary: Get a list of the top channels for a team.
      description: >
        Get a list of the top public and private channels (the user is a member
        of) for a given team.

        ##### Permissions

        Must have `view_team` permission for the team.
      operationId: GetTopChannelsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: channels with posts on the current day.
            - `7_day`: channels with posts in the last 7 days.
            - `28_day`: channels with posts in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Top channels retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopChannelList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/me/top/channels:
    get:
      tags:
        - insights
      summary: Get a list of the top channels for a user.
      description: >
        Get a list of the top public and private channels (the user is a member
        of) for a given user.

        ##### Permissions

        Must be logged in as the user.
      operationId: GetTopChannelsForUser
      parameters:
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: channels with posts on the current day.
            - `7_day`: channels with posts in the last 7 days.
            - `28_day`: channels with posts in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
        - name: team_id
          in: query
          description: |
            Team ID will scope the response to a given team.
            ##### Permissions
            Must have `view_team` permission for the team.
          schema:
            type: string
      responses:
        '200':
          description: Top channels retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopChannelList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/top/team_members:
    get:
      tags:
        - insights
      summary: Get a list of new team members.
      description: >
        Get a list of all of the new team members that have joined the given
        team during the given time period.

        ##### Permissions

        Must have `view_team` permission for the team.
      operationId: GetNewTeamMembers
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: team members who joined during the current day.
            - `7_day`: team members who joined in the last 7 days.
            - `28_day`: team members who joined in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: New team members retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTeamMembersList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/top/threads:
    get:
      tags:
        - insights
      summary: Get a list of the top threads for a team.
      description: >
        Get a list of the top threads from public and private channels (the user
        is a member of) for a given team.

        ##### Permissions

        Must have `view_team` permission for the team.
      operationId: GetTopThreadsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: threads with activity on the current day.
            - `7_day`: threads with activity in the last 7 days.
            - `28_day`: threads with activity in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Top threads retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopThreadList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/me/top/threads:
    get:
      tags:
        - insights
      summary: Get a list of the top threads for a user.
      description: >
        Get a list of the top threads from public and private channels (the user
        is a member of and participating in the thread) for a given user.

        ##### Permissions

        Must be logged in as the user.
      operationId: GetTopThreadsForUser
      parameters:
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: threads with activity on the current day.
            - `7_day`: threads with activity in the last 7 days.
            - `28_day`: threads with activity in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
        - name: team_id
          in: query
          description: |
            Team ID will scope the response to a given team.
            ##### Permissions
            Must have `view_team` permission for the team.
          schema:
            type: string
      responses:
        '200':
          description: Top threads retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopThreadList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/me/top/dms:
    get:
      tags:
        - insights
      summary: Get a list of the top dms for a user.
      description: |
        Get a list of the top dms for a given user.
        ##### Permissions
        Must be logged in as the user.
      operationId: GetTopDMsForUser
      parameters:
        - name: time_range
          in: query
          description: |
            Time range can be "today", "7_day", or "28_day".
            - `today`: threads with activity on the current day.
            - `7_day`: threads with activity in the last 7 days.
            - `28_day`: threads with activity in the last 28 days.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of items per page, up to a maximum of 200.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Top dms retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopDMList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users:
    get:
      tags:
        - users
      summary: Get users
      description: >
        Get a page of a list of users. Based on query string parameters, select
        users from a team, channel, or select users not in a specific channel.


        Some basic sorting is available using the `sort` query parameter.
        Sorting is currently only supported when selecting users on a team.

        ##### Permissions

        Requires an active session and (if specified) membership to the channel
        or team being selected from.
      operationId: GetUsers
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: >-
            The number of users per page. There is a maximum limit of 200 users
            per page.
          schema:
            type: integer
            default: 60
        - name: in_team
          in: query
          description: The ID of the team to get users for.
          schema:
            type: string
        - name: not_in_team
          in: query
          description: >-
            The ID of the team to exclude users for. Must not be used with
            "in_team" query parameter.
          schema:
            type: string
        - name: in_channel
          in: query
          description: The ID of the channel to get users for.
          schema:
            type: string
        - name: not_in_channel
          in: query
          description: >-
            The ID of the channel to exclude users for. Must be used with
            "in_channel" query parameter.
          schema:
            type: string
        - name: in_group
          in: query
          description: >-
            The ID of the group to get users for. Must have `manage_system`
            permission.
          schema:
            type: string
        - name: group_constrained
          in: query
          description: >-
            When used with `not_in_channel` or `not_in_team`, returns only the
            users that are allowed to join the channel or team based on its
            group constrains.
          schema:
            type: boolean
        - name: without_team
          in: query
          description: >-
            Whether or not to list users that are not on any team. This option
            takes precendence over `in_team`, `in_channel`, and
            `not_in_channel`.
          schema:
            type: boolean
        - name: active
          in: query
          description: >-
            Whether or not to list only users that are active. This option
            cannot be used along with the `inactive` option.
          schema:
            type: boolean
        - name: inactive
          in: query
          description: >-
            Whether or not to list only users that are deactivated. This option
            cannot be used along with the `active` option.
          schema:
            type: boolean
        - name: role
          in: query
          description: Returns users that have this role.
          schema:
            type: string
        - name: sort
          in: query
          description: >
            Sort is only available in conjunction with certain options below.
            The paging parameter is also always available.


            ##### `in_team`

            Can be "", "last_activity_at" or "create_at".

            When left blank, sorting is done by username.

            ##### `in_channel`

            Can be "", "status".

            When left blank, sorting is done by username. `status` will sort by
            User's current status (Online, Away, DND, Offline), then by
            Username.
          schema:
            type: string
        - name: roles
          in: query
          description: >+
            Comma separated string used to filter users based on any of the
            specified system roles


            Example: `?roles=system_admin,system_user` will return users that
            are either system admins or system users

          schema:
            type: string
        - name: channel_roles
          in: query
          description: >+
            Comma separated string used to filter users based on any of the
            specified channel roles, can only be used in conjunction with
            `in_channel`


            Example:
            `?in_channel=4eb6axxw7fg3je5iyasnfudc5y&channel_roles=channel_user`
            will return users that are only channel users and not admins or
            guests

          schema:
            type: string
        - name: team_roles
          in: query
          description: >+
            Comma separated string used to filter users based on any of the
            specified team roles, can only be used in conjunction with `in_team`


            Example: `?in_team=4eb6axxw7fg3je5iyasnfudc5y&team_roles=team_user`
            will return users that are only team users and not admins or guests

          schema:
            type: string
      responses:
        '200':
          description: User page retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/ids:
    post:
      tags:
        - users
      summary: Get users by ids
      description: |
        Get a list of users based on a provided list of user ids.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUsersByIds
      parameters:
        - name: since
          in: query
          description: >+
            Only return users that have been modified since the given Unix
            timestamp (in milliseconds).

          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user ids
        required: true
      responses:
        '200':
          description: User list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/group_channels:
    post:
      tags:
        - users
      summary: Get users by group channels ids
      description: |+
        Get an object containing a key per group channel id in the
        query and its value as a list of users members of that group
        channel.

        The user must be a member of the group ids in the query, or
        they will be omitted from the response.
        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetUsersByGroupChannelIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of group channel ids
        required: true
      responses:
        '200':
          description: User list retrieval successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  <CHANNEL_ID>:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/usernames:
    post:
      tags:
        - users
      summary: Get users by usernames
      description: |
        Get a list of users based on a provided list of usernames.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUsersByUsernames
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of usernames
        required: true
      responses:
        '200':
          description: User list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/search:
    post:
      tags:
        - users
      summary: Search users
      description: >
        Get a list of users based on search criteria provided in the request
        body. Searches are typically done against username, full name, nickname
        and email unless otherwise configured by the server.

        ##### Permissions

        Requires an active session and `read_channel` and/or `view_team`
        permissions for any channels or teams specified in the request body.
      operationId: SearchUsers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: >-
                    The term to match against username, full name, nickname and
                    email
                  type: string
                team_id:
                  description: If provided, only search users on this team
                  type: string
                not_in_team_id:
                  description: If provided, only search users not on this team
                  type: string
                in_channel_id:
                  description: If provided, only search users in this channel
                  type: string
                not_in_channel_id:
                  description: >-
                    If provided, only search users not in this channel. Must
                    specifiy `team_id` when using this option
                  type: string
                in_group_id:
                  description: >-
                    If provided, only search users in this group. Must have
                    `manage_system` permission.
                  type: string
                group_constrained:
                  description: >-
                    When used with `not_in_channel_id` or `not_in_team_id`,
                    returns only the users that are allowed to join the channel
                    or team based on its group constrains.
                  type: boolean
                allow_inactive:
                  description: When `true`, include deactivated users in the results
                  type: boolean
                without_team:
                  type: boolean
                  description: >-
                    Set this to `true` if you would like to search for users
                    that are not on a team. This option takes precendence over
                    `team_id`, `in_channel_id`, and `not_in_channel_id`.
                limit:
                  description: |
                    The maximum number of users to return in the results

                    __Defaults to `100` if not provided.__
                  type: integer
                  default: 100
        description: Search criteria
        required: true
      responses:
        '200':
          description: User list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/autocomplete:
    get:
      tags:
        - users
      summary: Autocomplete users
      description: >
        Get a list of users for the purpose of autocompleting based on the
        provided search term. Specify a combination of `team_id` and
        `channel_id` to filter results further.

        ##### Permissions

        Requires an active session and `view_team` and `read_channel` on any
        teams or channels used to filter the results further.
      operationId: AutocompleteUsers
      parameters:
        - name: team_id
          in: query
          description: Team ID
          schema:
            type: string
        - name: channel_id
          in: query
          description: Channel ID
          schema:
            type: string
        - name: name
          in: query
          description: Username, nickname first name or last name
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: |
            The maximum number of users to return in each subresult

            __Defaults to `100` if not provided.__
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: User autocomplete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAutocomplete'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}:
    get:
      tags:
        - users
      summary: Get a user
      description: |
        Get a user a object. Sensitive information will be sanitized out.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUser
      parameters:
        - name: user_id
          in: path
          description: >-
            User GUID. This can also be "me" which will point to the current
            user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/patch:
    put:
      tags:
        - users
      summary: Patch a user
      description: >
        Partially update a user by providing only the fields you want to update.
        Omitted fields will not be updated. The fields that can be updated are
        defined in the request body, all other provided fields will be ignored.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: PatchUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                nickname:
                  type: string
                locale:
                  type: string
                position:
                  type: string
                props:
                  type: object
                notify_props:
                  $ref: '#/components/schemas/UserNotifyProps'
        description: User object that is to be updated
        required: true
      responses:
        '200':
          description: User patch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/roles:
    put:
      tags:
        - users
      summary: Update a user's roles
      description: >
        Update a user's system-level roles. Valid user roles are "system_user",
        "system_admin" or both of them. Overwrites any previously assigned
        system-level roles.

        ##### Permissions

        Must have the `manage_roles` permission.
      operationId: UpdateUserRoles
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: string
        description: Space-delimited system roles to assign to the user
        required: true
      responses:
        '200':
          description: User roles update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/image:
    get:
      tags:
        - users
      summary: Get user's profile image
      description: |
        Get a user's profile image based on user_id string parameter.
        ##### Permissions
        Must be logged in.
      operationId: GetProfileImage
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: _
          in: query
          description: >-
            Not used by the server. Clients can pass in the last picture update
            time of the user to potentially take advantage of caching
          required: false
          schema:
            type: number
      responses:
        '200':
          description: User's profile image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /users/{user_id}/image/default:
    get:
      tags:
        - users
      summary: Return user's default (generated) profile image
      description: >
        Returns the default (generated) user profile image based on user_id
        string parameter.

        ##### Permissions

        Must be logged in.
      operationId: GetDefaultProfileImage
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default profile image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /users/username/{username}:
    get:
      tags:
        - users
      summary: Get a user by username
      description: >
        Get a user object by providing a username. Sensitive information will be
        sanitized out.

        ##### Permissions

        Requires an active session but no other permissions.
      operationId: GetUserByUsername
      parameters:
        - name: username
          in: path
          description: Username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/email/{email}:
    get:
      tags:
        - users
      summary: Get a user by email
      description: >
        Get a user object by providing a user email. Sensitive information will
        be sanitized out.

        ##### Permissions

        Requires an active session and for the current session to be able to
        view another user's email based on the server's privacy settings.
      operationId: GetUserByEmail
      parameters:
        - name: email
          in: path
          description: User Email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/channel_members:
    get:
      tags:
        - users
      summary: Get all channel members for a user
      description: |
        Get all channel members for a user.

        ##### Permissions
        Logged in as the user, or have `edit_other_users` permission.
      operationId: GetChannelMembersWithTeamDataForUser
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page specifies which part of the results to return, by PageSize.
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          description: PageSize specifies the size of the returned chunk of results.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: User's uploads retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelMemberWithTeamData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads:
    get:
      tags:
        - threads
      summary: Get all threads that user is following
      description: |
        Get all threads that user is following


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: GetUserThreads
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: Since filters the threads based on their LastUpdateAt timestamp.
          required: false
          schema:
            type: integer
        - name: deleted
          in: query
          description: >-
            Deleted will specify that even deleted threads should be returned
            (For mobile sync).
          required: false
          schema:
            type: boolean
            default: false
        - name: extended
          in: query
          description: Extended will enrich the response with participant details.
          required: false
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Page specifies which part of the results to return, by PageSize.
          required: false
          schema:
            type: integer
            default: 0
        - name: pageSize
          in: query
          description: PageSize specifies the size of the returned chunk of results.
          required: false
          schema:
            default: 30
            type: integer
        - name: totalsOnly
          in: query
          description: Setting this to true will only return the total counts.
          required: false
          schema:
            type: boolean
            default: false
        - name: threadsOnly
          in: query
          description: Setting this to true will only return threads.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: User's thread retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThreads'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads/read:
    put:
      tags:
        - threads
      summary: Mark all threads that user is following as read
      description: |
        Mark all threads that user is following as read


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateThreadsReadForUser
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's thread update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/read/{timestamp}:
    put:
      tags:
        - threads
      summary: Mark a thread that user is following read state to the timestamp
      description: |
        Mark a thread that user is following as read


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateThreadReadForUser
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: thread_id
          in: path
          description: The ID of the thread to update
          required: true
          schema:
            type: string
        - name: timestamp
          in: path
          description: The timestamp to which the thread's "last read" state will be reset.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's thread update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/set_unread/{post_id}:
    put:
      tags:
        - threads
      summary: Mark a thread that user is following as unread based on a post id
      description: >
        Mark a thread that user is following as unread


        ##### Permissions

        Must have `read_channel` permission for the channel the thread is in or
        if the channel is public, have the `read_public_channels` permission for
        the team.


        Must have `edit_other_users` permission if the user is not the one
        marking the thread for himself.
      operationId: SetThreadUnreadByPostId
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: thread_id
          in: path
          description: The ID of the thread to update
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          description: The ID of a post belonging to the thread to mark as unread.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's thread update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/following:
    put:
      tags:
        - threads
      summary: Start following a thread
      description: |
        Start following a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: StartFollowingThread
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: thread_id
          in: path
          description: The ID of the thread to follow
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's thread update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - threads
      summary: Stop following a thread
      description: |
        Stop following a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: StopFollowingThread
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: thread_id
          in: path
          description: The ID of the thread to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's thread update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/threads/{thread_id}:
    get:
      tags:
        - threads
      summary: Get a thread followed by the user
      description: |
        Get a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: GetUserThread
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: The ID of the team in which the thread is.
          required: true
          schema:
            type: string
        - name: thread_id
          in: path
          description: The ID of the thread to follow
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/status:
    get:
      tags:
        - status
      summary: Get user status
      description: |
        Get user status by id from the server.
        ##### Permissions
        Must be authenticated.
      operationId: GetUserStatus
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User status retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - status
      summary: Update user status
      description: >
        Manually set a user's status. When setting a user's status, the status
        will remain that value until set "online" again, which will return the
        status to being automatically updated based on user activity.

        ##### Permissions

        Must have `edit_other_users` permission for the team.
      operationId: UpdateUserStatus
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - user_id
              properties:
                user_id:
                  type: string
                  description: User ID
                status:
                  type: string
                  description: User status, can be `online`, `away`, `offline` and `dnd`
                dnd_end_time:
                  type: integer
                  description: Time in epoch seconds at which a dnd status would be unset.
        description: Status object that is to be updated
        required: true
      responses:
        '200':
          description: User status update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/status/ids:
    post:
      tags:
        - status
      summary: Get user statuses by id
      description: |
        Get a list of user statuses by id from the server.
        ##### Permissions
        Must be authenticated.
      operationId: GetUsersStatusesByIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user ids to fetch
        required: true
      responses:
        '200':
          description: User statuses retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/{user_id}/status/custom:
    put:
      tags:
        - status
      summary: Update user custom status
      description: >
        Updates a user's custom status by setting the value in the user's props
        and updates the user. Also save the given custom status to the recent
        custom statuses in the user's props

        ##### Permissions

        Must be logged in as the user whose custom status is being updated.
      operationId: UpdateUserCustomStatus
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - emoji
                - text
              properties:
                emoji:
                  type: string
                  description: Any emoji
                text:
                  type: string
                  description: Any custom status text
                duration:
                  type: string
                  description: >-
                    Duration of custom status, can be `thirty_minutes`,
                    `one_hour`, `four_hours`, `today`, `this_week` or
                    `date_and_time`
                expires_at:
                  type: string
                  description: >-
                    The time at which custom status should be expired. It should
                    be in ISO format.
        description: Custom status object that is to be updated
        required: true
      responses:
        '200':
          description: User custom status update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - status
      summary: Unsets user custom status
      description: >
        Unsets a user's custom status by updating the user's props and updates
        the user

        ##### Permissions

        Must be logged in as the user whose custom status is being removed.
      operationId: UnsetUserCustomStatus
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User custom status delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/{user_id}/status/custom/recent/delete:
    post:
      tags:
        - status
      summary: Delete user's recent custom status
      description: >
        Deletes a user's recent custom status by removing the specific status
        from the recentCustomStatuses in the user's props and updates the user.

        ##### Permissions

        Must be logged in as the user whose recent custom status is being
        deleted.
      operationId: PostUserRecentCustomStatusDelete
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - emoji
                - text
                - duration
                - expires_at
              properties:
                emoji:
                  type: string
                  description: Any emoji
                text:
                  type: string
                  description: Any custom status text
                duration:
                  type: string
                  description: >-
                    Duration of custom status, can be `thirty_minutes`,
                    `one_hour`, `four_hours`, `today`, `this_week` or
                    `date_and_time`
                expires_at:
                  type: string
                  description: >-
                    The time at which custom status should be expired. It should
                    be in ISO format.
        description: >-
          Custom Status object that is to be removed from the recent custom
          statuses.
        required: true
      responses:
        '200':
          description: User recent custom status delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /teams:
    get:
      tags:
        - teams
      summary: Get teams
      description: >
        For regular users only returns open teams. Users with the
        "manage_system" permission will return teams regardless of type. The
        result is based on query string parameters - page and per_page.

        ##### Permissions

        Must be authenticated.
      operationId: GetAllTeams
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of teams per page.
          schema:
            type: integer
            default: 60
        - name: include_total_count
          description: >-
            Appends a total count of returned teams inside the response object -
            ex: `{ "teams": [], "total_count" : 0 }`.      
          in: query
          schema:
            type: boolean
            default: false
        - name: exclude_policy_constrained
          in: query
          schema:
            type: boolean
            default: false
          description: >
            If set to true, teams which are part of a data retention policy will
            be excluded. The `sysconsole_read_compliance` permission is required
            to use this parameter.
      responses:
        '200':
          description: Team list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /teams/{team_id}:
    get:
      tags:
        - teams
      summary: Get a team
      description: |
        Get a team on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/name/{name}:
    get:
      tags:
        - teams
      summary: Get a team by name
      description: >
        Get a team based on provided name string

        ##### Permissions

        Must be authenticated, team type is open and have the `view_team`
        permission.
      operationId: GetTeamByName
      parameters:
        - name: name
          in: path
          description: Team Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams:
    get:
      tags:
        - teams
      summary: Get a user's teams
      description: >
        Get a list of teams that a user is on.

        ##### Permissions

        Must be authenticated as the user or have the `manage_system`
        permission.
      operationId: GetTeamsForUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/members:
    get:
      tags:
        - teams
      summary: Get team members
      description: >
        Get a page team members list based on query string parameters - team id,
        page and per page.

        ##### Permissions

        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamMembers
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of users per page.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/members:
    get:
      tags:
        - teams
      summary: Get team members for a user
      description: >
        Get a list of team members for a user. Useful for getting the ids of
        teams the user is on and the roles they have in those teams.

        ##### Permissions

        Must be logged in as the user or have the `edit_other_users` permission.
      operationId: GetTeamMembersForUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/members/{user_id}:
    get:
      tags:
        - teams
      summary: Get a team member
      description: |
        Get a team member on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamMember
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team member retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/members/ids:
    post:
      tags:
        - teams
      summary: Get team members by ids
      description: |
        Get a list of team members based on a provided array of user ids.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetTeamMembersByIds
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user ids
        required: true
      responses:
        '200':
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/stats:
    get:
      tags:
        - teams
      summary: Get a team stats
      description: |
        Get a team stats on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamStats
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team stats retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamStats'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/members/{user_id}/roles:
    put:
      tags:
        - teams
      summary: Update a team member roles
      description: >
        Update a team member roles. Valid team roles are "team_user",
        "team_admin" or both of them. Overwrites any previously assigned team
        roles.

        ##### Permissions

        Must be authenticated and have the `manage_team_roles` permission.
      operationId: UpdateTeamMemberRoles
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: string
        description: Space-delimited team roles to assign to the user
        required: true
      responses:
        '200':
          description: Team member roles update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/unread:
    get:
      tags:
        - teams
      summary: Get team unreads for a user
      description: >
        Get the count for unread messages and mentions in the teams the user is
        a member of.

        ##### Permissions

        Must be logged in.
      operationId: GetTeamsUnreadForUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: exclude_team
          in: query
          description: Optional team id to be excluded from the results
          required: true
          schema:
            type: string
        - name: include_collapsed_threads
          in: query
          description: >-
            Boolean to determine whether the collapsed threads should be
            included or not
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Team unreads retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamUnread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/teams/{team_id}/unread:
    get:
      tags:
        - teams
      summary: Get unreads for a team
      description: >
        Get the unread mention and message counts for a team for the specified
        user.

        ##### Permissions

        Must be the user or have `edit_other_users` permission and have
        `view_team` permission for the team.
      operationId: GetTeamUnread
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team unread count retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamUnread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/invite-guests/email:
    post:
      tags:
        - teams
      summary: Invite guests to the team by email
      description: >
        Invite guests to existing team channels usign the user's email.


        The number of emails that can be sent is rate limited to 20 per hour
        with a burst of 20 emails. If the rate limit exceeds, the error message
        contains details on when to retry and when the timer will be reset.


        ##### Permissions

        Must have `invite_guest` permission for the team.
      operationId: InviteGuestsToTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - emails
                - channels
              properties:
                emails:
                  type: array
                  items:
                    type: string
                  description: List of emails
                channels:
                  type: array
                  items:
                    type: string
                  description: List of channel ids
                message:
                  type: string
                  description: Message to include in the invite
        description: Guests invite information
        required: true
      responses:
        '200':
          description: Guests invite successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/TooLarge'
  /channels:
    get:
      tags:
        - channels
      summary: Get a list of all channels
      description: |
        ##### Permissions
        `manage_system`
      operationId: GetAllChannels
      parameters:
        - name: not_associated_to_group
          in: query
          description: >-
            A group id to exclude channels that are associated with that group
            via GroupChannel records. This can also be left blank with
            `not_associated_to_group=`.
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of channels per page.
          schema:
            type: integer
            default: 0
        - name: exclude_default_channels
          in: query
          description: >-
            Whether to exclude default channels (ex Town Square, Off-Topic) from
            the results.
          schema:
            type: boolean
            default: false
        - name: include_deleted
          in: query
          description: >-
            Include channels that have been archived. This correlates to the
            `DeleteAt` flag being set in the database.
          schema:
            type: boolean
            default: false
        - name: include_total_count
          in: query
          description: >-
            Appends a total count of returned channels inside the response
            object - ex: `{ "channels": [], "total_count" : 0 }`.      
          schema:
            type: boolean
            default: false
        - name: exclude_policy_constrained
          in: query
          schema:
            type: boolean
            default: false
          description: >
            If set to true, channels which are part of a data retention policy
            will be excluded. The `sysconsole_read_compliance` permission is
            required to use this parameter.
      responses:
        '200':
          description: Channel list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListWithTeamData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - channels
      summary: Create a channel
      description: >
        Create a new channel.

        ##### Permissions

        If creating a public channel, `create_public_channel` permission is
        required. If creating a private channel, `create_private_channel`
        permission is required.
      operationId: CreateChannel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - display_name
                - type
                - team_id
              properties:
                team_id:
                  type: string
                  description: The team ID of the team to create the channel on
                name:
                  type: string
                  description: >-
                    The unique handle for the channel, will be present in the
                    channel URL
                display_name:
                  type: string
                  description: The non-unique UI name for the channel
                purpose:
                  type: string
                  description: A short description of the purpose of the channel
                header:
                  type: string
                  description: >-
                    Markdown-formatted text to display in the header of the
                    channel
                type:
                  type: string
                  description: '''O'' for a public channel, ''P'' for a private channel'
        description: Channel object to be created
        required: true
      responses:
        '201':
          description: Channel creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/direct:
    post:
      tags:
        - channels
      summary: Create a direct message channel
      description: >
        Create a new direct message channel between two users.

        ##### Permissions

        Must be one of the two users and have `create_direct_channel`
        permission. Having the `manage_system` permission voids the previous
        requirements.
      operationId: CreateDirectChannel
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              minItems: 2
              maxItems: 2
        description: The two user ids to be in the direct message
        required: true
      responses:
        '201':
          description: Direct channel creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/group:
    post:
      tags:
        - channels
      summary: Create a group message channel
      description: >
        Create a new group message channel to group of users. If the logged in
        user's id is not included in the list, it will be appended to the end.

        ##### Permissions

        Must have `create_group_channel` permission.
      operationId: CreateGroupChannel
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: User ids to be in the group message channel
        required: true
      responses:
        '201':
          description: Group channel creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/search:
    post:
      tags:
        - channels
      summary: Search all private and open type channels
      description: >
        Returns all private and open type channels where 'term' matches on the
        name, display name, or purpose of

        the channel.


        Configured 'default' channels (ex Town Square and Off-Topic) can be
        excluded from the results

        with the `exclude_default_channels` boolean parameter.


        Channels that are associated (via GroupChannel records) to a given group
        can be excluded from the results

        with the `not_associated_to_group` parameter and a group id string.
      operationId: SearchAllChannels
      parameters:
        - name: system_console
          in: query
          description: >
            Is the request from system_console. If this is set to true, it
            filters channels by the logged in user.
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  type: string
                  description: >-
                    The string to search in the channel name, display name, and
                    purpose.
                not_associated_to_group:
                  type: string
                  description: >-
                    A group id to exclude channels that are associated to that
                    group via GroupChannel records.
                exclude_default_channels:
                  type: boolean
                  description: >-
                    Exclude default channels from the results by setting this
                    parameter to true.
                team_ids:
                  type: array
                  items:
                    type: string
                  description: |+
                    Filters results to channels belonging to the given team ids

                group_constrained:
                  type: boolean
                  description: >+
                    Filters results to only return channels constrained to a
                    group

                exclude_group_constrained:
                  type: boolean
                  description: |+
                    Filters results to exclude channels constrained to a group

                public:
                  type: boolean
                  description: >+
                    Filters results to only return Public / Open channels, can
                    be used in conjunction with `private` to return both
                    `public` and `private` channels

                private:
                  type: boolean
                  description: >+
                    Filters results to only return Private channels, can be used
                    in conjunction with `public` to return both `private` and
                    `public` channels

                deleted:
                  type: boolean
                  description: |+
                    Filters results to only return deleted / archived channels

                page:
                  type: string
                  description: >-
                    The page number to return, if paginated. If this parameter
                    is not present with the `per_page` parameter then the
                    results will be returned un-paged.
                per_page:
                  type: string
                  description: >-
                    The number of entries to return per page, if paginated. If
                    this parameter is not present with the `page` parameter then
                    the results will be returned un-paged.
                exclude_policy_constrained:
                  type: boolean
                  default: false
                  description: >+
                    If set to true, only channels which do not have a granular
                    retention policy assigned to them will be returned. The
                    `sysconsole_read_compliance_data_retention` permission is
                    required to use this parameter.

                include_search_by_id:
                  type: boolean
                  default: false
                  description: >+
                    If set to true, returns channels where given search 'term'
                    matches channel ID.

        description: The search terms and logic to use in the search.
        required: true
      responses:
        '200':
          description: >-
            Paginated channel response. (Note that the non-paginated
            response—returned if the request body does not contain both `page`
            and `per_page` fields—is a simple array of channels.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    description: The channels that matched the query.
                    items:
                      $ref: '#/components/schemas/Channel'
                  total_count:
                    type: number
                    description: >-
                      The total number of results, regardless of page and
                      per_page requested.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /channels/group/search:
    post:
      tags:
        - channels
      summary: Search Group Channels
      description: >+
        Get a list of group channels for a user which members' usernames match
        the search term.

      operationId: SearchGroupChannels
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: >-
                    The search term to match against the members' usernames of
                    the group channels
                  type: string
        description: Search criteria
        required: true
      responses:
        '200':
          description: Channels search successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /teams/{team_id}/channels/ids:
    post:
      tags:
        - channels
      summary: Get a list of channels by ids
      description: |
        Get a list of public channels on a team by id.
        ##### Permissions
        `view_team` for the team the channels are on.
      operationId: GetPublicChannelsByIdsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of channel ids
        required: true
      responses:
        '200':
          description: Channel list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}:
    get:
      tags:
        - channels
      summary: Get a channel
      description: |
        Get channel from the provided channel id string.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - channels
      summary: Update a channel
      description: >
        Update a channel. The fields that can be updated are listed as
        parameters. Omitted fields will be treated as blanks.

        ##### Permissions

        If updating a public channel, `manage_public_channel_members` permission
        is required. If updating a private channel,
        `manage_private_channel_members` permission is required.
      operationId: UpdateChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: The channel's id, not updatable
                name:
                  type: string
                  description: >-
                    The unique handle for the channel, will be present in the
                    channel URL
                display_name:
                  type: string
                  description: The non-unique UI name for the channel
                purpose:
                  type: string
                  description: A short description of the purpose of the channel
                header:
                  type: string
                  description: >-
                    Markdown-formatted text to display in the header of the
                    channel
        description: Channel object to be updated
        required: true
      responses:
        '200':
          description: Channel update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - channels
      summary: Delete a channel
      description: >
        Archives a channel. This will set the `deleteAt` to the current
        timestamp in the database. Soft deleted channels may not be accessible
        in the user interface. They can be viewed and unarchived in the **System
        Console > User Management > Channels** based on your license. Direct and
        group message channels cannot be deleted.


        ##### Permissions

        `delete_public_channel` permission if the channel is public,

        `delete_private_channel` permission if the channel is private,

        or have `manage_system` permission.
      operationId: DeleteChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/patch:
    put:
      tags:
        - channels
      summary: Patch a channel
      description: >
        Partially update a channel by providing only the fields you want to
        update. Omitted fields will not be updated. The fields that can be
        updated are defined in the request body, all other provided fields will
        be ignored.

        ##### Permissions

        If updating a public channel, `manage_public_channel_members` permission
        is required. If updating a private channel,
        `manage_private_channel_members` permission is required.
      operationId: PatchChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    The unique handle for the channel, will be present in the
                    channel URL
                display_name:
                  type: string
                  description: The non-unique UI name for the channel
                purpose:
                  type: string
                  description: A short description of the purpose of the channel
                header:
                  type: string
                  description: >-
                    Markdown-formatted text to display in the header of the
                    channel
        description: Channel object to be updated
        required: true
      responses:
        '200':
          description: Channel patch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/privacy:
    put:
      tags:
        - channels
      summary: Update channel's privacy
      description: >
        Updates channel's privacy allowing changing a channel from Public to
        Private and back.


        ##### Permissions

        `convert_public_channel_to_private` permission for the channel if
        updating privacy to 'P'. `convert_private_channel_to_public` permission
        for the channel if updating privacy to 'O'.
      operationId: UpdateChannelPrivacy
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - privacy
              properties:
                privacy:
                  type: string
                  description: >-
                    Channel privacy setting: 'O' for a public channel, 'P' for a
                    private channel
        required: true
      responses:
        '200':
          description: Channel conversion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/restore:
    post:
      tags:
        - channels
      summary: Restore a channel
      description: |
        Restore channel from the provided channel id string.

        ##### Permissions
        `manage_team` permission for the team of the channel.
      operationId: RestoreChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel restore successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/move:
    post:
      tags:
        - channels
      summary: Move a channel
      description: |
        Move a channel to another team.


        ##### Permissions

        Must have `manage_system` permission.
      operationId: MoveChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - team_id
              properties:
                team_id:
                  type: string
                force:
                  description: >-
                    Remove members those are not member of target team before
                    moving the channel.
                  type: boolean
        required: true
      responses:
        '200':
          description: Channel move successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/stats:
    get:
      tags:
        - channels
      summary: Get channel statistics
      description: |
        Get statistics for a channel.
        ##### Permissions
        Must have the `read_channel` permission.
      operationId: GetChannelStats
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel statistics retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStats'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/pinned:
    get:
      tags:
        - channels
      summary: Get a channel's pinned posts
      description: Get a list of pinned posts for channel.
      operationId: GetPinnedPosts
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of channel pinned posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/channels:
    get:
      tags:
        - channels
      summary: Get public channels
      description: >
        Get a page of public channels on a team based on query string parameters
        - page and per_page.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetPublicChannelsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of public channels per page.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Channels retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/private:
    get:
      tags:
        - channels
      summary: Get private channels
      description: |
        Get a page of private channels on a team based on query string
        parameters - team_id, page and per_page.


        ##### Permissions
        Must have `manage_system` permission.
      operationId: GetPrivateChannelsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of private channels per page.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Channels retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/deleted:
    get:
      tags:
        - channels
      summary: Get deleted channels
      description: >+
        Get a page of deleted channels on a team based on query string
        parameters - team_id, page and per_page.

      operationId: GetDeletedChannelsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of public channels per page.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Channels retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/autocomplete:
    get:
      tags:
        - channels
      summary: Autocomplete channels
      description: >
        Autocomplete public channels on a team based on the search term provided
        in the request URL.


        ##### Permissions

        Must have the `list_team_channels` permission.
      operationId: AutocompleteChannelsForTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Name or display name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channels autocomplete successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/search_autocomplete:
    get:
      tags:
        - channels
      summary: Autocomplete channels for search
      description: >
        Autocomplete your channels on a team based on the search term provided
        in the request URL.


        ##### Permissions

        Must have the `list_team_channels` permission.
      operationId: AutocompleteChannelsForTeamForSearch
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Name or display name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channels autocomplete successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/search:
    post:
      tags:
        - channels
      summary: Search channels
      description: >
        Search public channels on a team based on the search term provided in
        the request body.

        ##### Permissions

        Must have the `list_team_channels` permission.


        A user without the `list_team_channels` permission will be able to use
        this endpoint, with the search results limited to the channels that the
        user is a member of.
      operationId: SearchChannels
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: >-
                    The search term to match against the name or display name of
                    channels
                  type: string
        description: Search criteria
        required: true
      responses:
        '201':
          description: Channels search successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/search_archived:
    post:
      tags:
        - channels
      summary: Search archived channels
      description: >
        Search archived channels on a team based on the search term provided in
        the request body.


        ##### Permissions

        Must have the `list_team_channels` permission.


        A user without the `list_team_channels` permission will be able to use
        this endpoint, with the search results limited to the channels that the
        user is a member of.
      operationId: SearchArchivedChannels
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: >-
                    The search term to match against the name or display name of
                    archived channels
                  type: string
        description: Search criteria
        required: true
      responses:
        '201':
          description: Channels search successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/{team_id}/channels/name/{channel_name}:
    get:
      tags:
        - channels
      summary: Get a channel by name
      description: |
        Gets channel from the provided team id and channel name strings.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelByName
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: channel_name
          in: path
          description: Channel Name
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: >-
            Defines if deleted channels should be returned or not (Mattermost
            Server 5.26.0+)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Channel retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /teams/name/{team_name}/channels/name/{channel_name}:
    get:
      tags:
        - channels
      summary: Get a channel by name and team name
      description: |
        Gets a channel from the provided team name and channel name strings.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelByNameForTeamName
      parameters:
        - name: team_name
          in: path
          description: Team Name
          required: true
          schema:
            type: string
        - name: channel_name
          in: path
          description: Channel Name
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: >-
            Defines if deleted channels should be returned or not (Mattermost
            Server 5.26.0+)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Channel retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/members:
    get:
      tags:
        - channels
      summary: Get channel members
      description: |
        Get a page of members for a channel.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelMembers
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: >-
            The number of members per page. There is a maximum limit of 200
            members.
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Channel members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - channels
      summary: Add user to channel
      description: Add a user to a channel by creating a channel member object.
      operationId: AddChannelMember
      parameters:
        - name: channel_id
          in: path
          description: The channel ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
                  description: The ID of user to add into the channel
                post_root_id:
                  type: string
                  description: >-
                    The ID of root post where link to add channel member
                    originates
        required: true
      responses:
        '201':
          description: Channel member creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/members/ids:
    post:
      tags:
        - channels
      summary: Get channel members by ids
      description: |
        Get a list of channel members based on the provided user ids.
        ##### Permissions
        Must have the `read_channel` permission.
      operationId: GetChannelMembersByIds
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user ids
        required: true
      responses:
        '200':
          description: Channel member list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/members/{user_id}:
    get:
      tags:
        - channels
      summary: Get channel member
      description: |
        Get a channel member.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelMember
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel member retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - channels
      summary: Remove user from channel
      description: |
        Delete a channel member, effectively removing them from a channel.

        Channel members can only be deleted from public or private channels.
        ##### Permissions
        `manage_public_channel_members` permission if the channel is public.
        `manage_private_channel_members` permission if the channel is private.
      operationId: RemoveUserFromChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel member deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/members/{user_id}/roles:
    put:
      tags:
        - channels
      summary: Update channel roles
      description: |
        Update a user's roles for a channel.
        ##### Permissions
        Must have `manage_channel_roles` permission for the channel.
      operationId: UpdateChannelRoles
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: string
        description: Space-delimited channel roles to assign to the user
        required: true
      responses:
        '200':
          description: Channel roles update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/members/{user_id}/schemeRoles:
    put:
      tags:
        - channels
      summary: Update the scheme-derived roles of a channel member.
      description: >
        Update a channel member's scheme_admin/scheme_user properties. Typically
        this should either be `scheme_admin=false, scheme_user=true` for
        ordinary channel member, or `scheme_admin=true, scheme_user=true` for a
        channel admin.

        ##### Permissions

        Must be authenticated and have the `manage_channel_roles` permission.
      operationId: UpdateChannelMemberSchemeRoles
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scheme_admin
                - scheme_user
              properties:
                scheme_admin:
                  type: boolean
                scheme_user:
                  type: boolean
        description: Scheme properties.
        required: true
      responses:
        '200':
          description: Channel member's scheme-derived roles updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/members/{user_id}/notify_props:
    put:
      tags:
        - channels
      summary: Update channel notifications
      description: >
        Update a user's notification properties for a channel. Only the provided
        fields are updated.

        ##### Permissions

        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateChannelNotifyProps
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelNotifyProps'
        required: true
      responses:
        '200':
          description: Channel notification properties update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/members/{user_id}/view:
    post:
      tags:
        - channels
      summary: View channel
      description: >
        Perform all the actions involved in viewing a channel. This includes
        marking channels as read, clearing push notifications, and updating the
        active channel.

        ##### Permissions

        Must be logged in as user or have `edit_other_users` permission.


        __Response only includes `last_viewed_at_times` in Mattermost server 4.3
        and newer.__
      operationId: ViewChannel
      parameters:
        - in: path
          name: user_id
          description: User ID to perform the view action for
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: >-
                    The channel ID that is being viewed. Use a blank string to
                    indicate that all channels have lost focus.
                prev_channel_id:
                  type: string
                  description: >-
                    The channel ID of the previous channel, used when switching
                    channels. Providing this ID will cause push notifications to
                    clear on the channel being switched to.
        description: Paremeters affecting how and which channels to view
        required: true
      responses:
        '200':
          description: Channel view successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Value should be "OK" if successful
                  last_viewed_at_times:
                    type: object
                    description: >-
                      A JSON object mapping channel IDs to the channel view
                      times
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/teams/{team_id}/channels/members:
    get:
      tags:
        - channels
      summary: Get channel memberships and roles for a user
      description: >
        Get all channel memberships and associated membership roles (i.e.
        `channel_user`, `channel_admin`) for a user on a specific team.

        ##### Permissions

        Logged in as the user and `view_team` permission for the team. Having
        `manage_system` permission voids the previous requirements.
      operationId: GetChannelMembersForUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/teams/{team_id}/channels:
    get:
      tags:
        - channels
      summary: Get channels for user
      description: >
        Get all the channels on a team for a user.

        ##### Permissions

        Logged in as the user, or have `edit_other_users` permission, and
        `view_team` permission for the team.
      operationId: GetChannelsForTeamForUser
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: Defines if deleted channels should be returned or not
          schema:
            type: boolean
            default: false
        - name: last_delete_at
          in: query
          description: >-
            Filters the deleted channels by this time in epoch format. Does not
            have any effect if include_deleted is set to false.
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Channels retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/channels:
    get:
      tags:
        - channels
      summary: Get all channels
      description: |
        Get all channels that a user is a member of.

        ##### Permissions

        Logged in as the user, or have `edit_other_users` permission.
      operationId: GetChannelsForUser
      parameters:
        - name: user_id
          in: path
          description: >-
            The ID of the user. This can also be "me" which will point to the
            current user.
          required: true
          schema:
            type: string
        - name: last_delete_at
          in: query
          description: >-
            Filters the deleted channels by this time in epoch format. Does not
            have any effect if include_deleted is set to false.
          schema:
            type: integer
            default: 0
        - name: include_deleted
          in: query
          description: Defines if deleted channels should be returned or not
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Channels retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/channels/{channel_id}/unread:
    get:
      tags:
        - channels
      summary: Get unread messages
      description: >
        Get the total unread messages and mentions for a channel for a user.

        ##### Permissions

        Must be logged in as user and have the `read_channel` permission, or
        have `edit_other_usrs` permission.
      operationId: GetChannelUnread
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel unreads retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUnread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /channels/{channel_id}/scheme:
    put:
      tags:
        - channels
      summary: Set a channel's scheme
      description: >+
        Set a channel's scheme, more specifically sets the scheme_id value of a
        channel record.


        ##### Permissions

        Must have `manage_system` permission.

      operationId: UpdateChannelScheme
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scheme_id
              properties:
                scheme_id:
                  type: string
                  description: The ID of the scheme.
        description: Scheme GUID
        required: true
      responses:
        '200':
          description: Update channel scheme successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /channels/{channel_id}/moderations:
    get:
      tags:
        - channels
      summary: Get information about channel's moderation.
      description: |+
        ##### Permissions
        Must have `manage_system` permission.

      operationId: GetChannelModerations
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retreived successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelModeration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/moderations/patch:
    put:
      tags:
        - channels
      summary: Update a channel's moderation settings.
      description: |+
        ##### Permissions
        Must have `manage_system` permission.

      operationId: PatchChannelModerations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelModerationPatch'
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Patched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelModeration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/teams/{team_id}/channels/categories:
    get:
      tags:
        - channels
      summary: Get user's sidebar categories
      description: >
        Get a list of sidebar categories that will appear in the user's sidebar
        on the given team, including a list of channel IDs in each category.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoriesForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderedSidebarCategories'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - channels
      summary: Create user's sidebar category
      description: |
        Create a custom sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: CreateSidebarCategoryForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarCategory'
        required: true
      responses:
        '200':
          description: Category creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - channels
      summary: Update user's sidebar categories
      description: >
        Update any number of sidebar categories for the user on the given team.
        This can be used to reorder the channels in these categories.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoriesForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SidebarCategory'
        required: true
      responses:
        '200':
          description: Category update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/channels/categories/order:
    get:
      tags:
        - channels
      summary: Get user's sidebar category order
      description: >
        Returns the order of the sidebar categories for a user on the given team
        as an array of IDs.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoryOrderForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - channels
      summary: Update user's sidebar category order
      description: >
        Updates the order of the sidebar categories for a user on the given
        team. The provided array must include the IDs of all categories on the
        team.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoryOrderForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: Order update successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/teams/{team_id}/channels/categories/{category_id}:
    get:
      tags:
        - channels
      summary: Get sidebar category
      description: |
        Returns a single sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoryForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: category_id
          in: path
          description: Category GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - channels
      summary: Update sidebar category
      description: |
        Updates a single sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoryForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: category_id
          in: path
          description: Category GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarCategory'
        required: true
      responses:
        '200':
          description: Category update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - channels
      summary: Delete sidebar category
      description: >
        Deletes a single sidebar category for the user on the given team. Only
        custom categories can be deleted.

        ##### Permissions

        Must be authenticated and have the `list_team_channels` permission.
      operationId: RemoveSidebarCategoryForTeamForUser
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: category_id
          in: path
          description: Category GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /posts:
    post:
      tags:
        - posts
      summary: Create a post
      description: >
        Create a new post in a channel. To create the post as a comment on
        another post, provide `root_id`.

        ##### Permissions

        Must have `create_post` permission for the channel the post is being
        created in.
      operationId: CreatePost
      parameters:
        - name: set_online
          in: query
          description: Whether to set the user status as online or not.
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - channel_id
                - message
              properties:
                channel_id:
                  type: string
                  description: The channel ID to post in
                message:
                  type: string
                  description: The message contents, can be formatted with Markdown
                root_id:
                  type: string
                  description: The post ID to comment on
                file_ids:
                  type: array
                  description: >-
                    A list of file IDs to associate with the post. Note that
                    posts are limited to 5 files maximum. Please use additional
                    posts for more files.
                  items:
                    type: string
                props:
                  description: A general JSON property bag to attach to the post
                  type: object
        description: Post object to create
        required: true
      responses:
        '201':
          description: Post creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/ephemeral:
    post:
      tags:
        - posts
      summary: Create a ephemeral post
      description: >
        Create a new ephemeral post in a channel.

        ##### Permissions

        Must have `create_post_ephemeral` permission (currently only given to
        system admin)
      operationId: CreatePostEphemeral
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - post
              properties:
                user_id:
                  type: string
                  description: The target user id for the ephemeral post
                post:
                  type: object
                  required:
                    - channel_id
                    - message
                  description: Post object to create
                  properties:
                    channel_id:
                      type: string
                      description: The channel ID to post in
                    message:
                      type: string
                      description: The message contents, can be formatted with Markdown
        description: Ephemeral Post object to send
        required: true
      responses:
        '201':
          description: Post creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}:
    get:
      tags:
        - posts
      summary: Get a post
      description: >
        Get a single post.

        ##### Permissions

        Must have `read_channel` permission for the channel the post is in or if
        the channel is public, have the `read_public_channels` permission for
        the team.
      operationId: GetPost
      parameters:
        - name: post_id
          in: path
          description: ID of the post to get
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: >-
            Defines if result should include deleted posts, must have
            'manage_system' (admin) permission.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Post retrieval successful
          headers:
            Has-Inaccessible-Posts:
              schema:
                type: boolean
              description: >-
                This header is included with the value "true" if the post is
                past the cloud's plan limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - posts
      summary: Delete a post
      description: >
        Soft deletes a post, by marking the post as deleted in the database.
        Soft deleted posts will not be returned in post queries.

        ##### Permissions

        Must be logged in as the user or have `delete_others_posts` permission.
      operationId: DeletePost
      parameters:
        - name: post_id
          in: path
          description: ID of the post to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      tags:
        - posts
      summary: Update a post
      description: >
        Update a post. Only the fields listed below are updatable, omitted
        fields will be treated as blank.

        ##### Permissions

        Must have `edit_post` permission for the channel the post is in.
      operationId: UpdatePost
      parameters:
        - name: post_id
          in: path
          description: ID of the post to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  description: ID of the post to update
                  type: string
                is_pinned:
                  description: Set to `true` to pin the post to the channel it is in
                  type: boolean
                message:
                  description: The message text of the post
                  type: string
                has_reactions:
                  description: Set to `true` if the post has reactions to it
                  type: boolean
                props:
                  description: A general JSON property bag to attach to the post
                  type: string
        description: Post object that is to be updated
        required: true
      responses:
        '200':
          description: Post update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/posts/{post_id}/set_unread:
    post:
      tags:
        - posts
      summary: Mark as unread from a post.
      description: >+
        Mark a channel as being unread from a given post.

        ##### Permissions

        Must have `read_channel` permission for the channel the post is in or if
        the channel is public, have the `read_public_channels` permission for
        the team.

        Must have `edit_other_users` permission if the user is not the one
        marking the post for himself.

      operationId: SetPostUnread
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post marked as unread successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUnreadAt'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /posts/{post_id}/patch:
    put:
      tags:
        - posts
      summary: Patch a post
      description: >
        Partially update a post by providing only the fields you want to update.
        Omitted fields will not be updated. The fields that can be updated are
        defined in the request body, all other provided fields will be ignored.

        ##### Permissions

        Must have the `edit_post` permission.
      operationId: PatchPost
      parameters:
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_pinned:
                  description: Set to `true` to pin the post to the channel it is in
                  type: boolean
                message:
                  description: The message text of the post
                  type: string
                file_ids:
                  description: The list of files attached to this post
                  type: array
                  items:
                    type: string
                has_reactions:
                  description: Set to `true` if the post has reactions to it
                  type: boolean
                props:
                  description: A general JSON property bag to attach to the post
                  type: string
        description: Post object that is to be updated
        required: true
      responses:
        '200':
          description: Post patch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/thread:
    get:
      tags:
        - posts
      summary: Get a thread
      description: >
        Get a post and the rest of the posts in the same thread.

        ##### Permissions

        Must have `read_channel` permission for the channel the post is in or if
        the channel is public, have the `read_public_channels` permission for
        the team.
      operationId: GetPostThread
      parameters:
        - name: post_id
          in: path
          description: ID of a post in the thread
          required: true
          schema:
            type: string
        - name: perPage
          in: query
          description: The number of posts per page
          schema:
            type: integer
            default: 0
        - name: fromPost
          in: query
          description: The post_id to return the next page of posts from
          schema:
            type: string
            default: ''
        - name: fromCreateAt
          in: query
          description: The create_at timestamp to return the next page of posts from
          schema:
            type: integer
            default: 0
        - name: direction
          in: query
          description: The direction to return the posts. Either up or down.
          schema:
            type: string
            default: ''
        - name: skipFetchThreads
          in: query
          description: Whether to skip fetching threads or not
          schema:
            type: boolean
            default: false
        - name: collapsedThreads
          in: query
          description: Whether the client uses CRT or not
          schema:
            type: boolean
            default: false
        - name: collapsedThreadsExtended
          in: query
          description: >-
            Whether to return the associated users as part of the response or
            not
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Post list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/posts/flagged:
    get:
      tags:
        - posts
      summary: Get a list of flagged posts
      description: >
        Get a page of flagged posts of a user provided user id string. Selects
        from a channel, team, or all flagged posts by a user. Will only return
        posts from channels in which the user is member.

        ##### Permissions

        Must be user or have `manage_system` permission.
      operationId: GetFlaggedPostsForUser
      parameters:
        - name: user_id
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: team_id
          in: query
          description: Team ID
          schema:
            type: string
        - name: channel_id
          in: query
          description: Channel ID
          schema:
            type: string
        - name: page
          in: query
          description: The page to select
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of posts per page
          schema:
            type: integer
            default: 60
      responses:
        '200':
          description: Post list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/files/info:
    get:
      tags:
        - posts
      summary: Get file info for post
      description: >
        Gets a list of file information objects for the files attached to a
        post.

        ##### Permissions

        Must have `read_channel` permission for the channel the post is in.
      operationId: GetFileInfosForPost
      parameters:
        - name: post_id
          in: path
          description: ID of the post
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: >-
            Defines if result should include deleted posts, must have
            'manage_system' (admin) permission.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: File info retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /channels/{channel_id}/posts:
    get:
      tags:
        - posts
      summary: Get posts for a channel
      description: >
        Get a page of posts in a channel. Use the query parameters to modify the
        behaviour of this endpoint. The parameter `since` must not be used with
        any of `before`, `after`, `page`, and `per_page` parameters.

        If `since` is used, it will always return all posts modified since that
        time, ordered by their create time limited till 1000. A caveat with this
        parameter is that there is no guarantee that the returned posts will be
        consecutive. It is left to the clients to maintain state and fill any
        missing holes in the post order.

        ##### Permissions

        Must have `read_channel` permission for the channel.
      operationId: GetPostsForChannel
      parameters:
        - name: channel_id
          in: path
          description: The channel ID to get the posts for
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of posts per page
          schema:
            type: integer
            default: 60
        - name: since
          in: query
          description: >-
            Provide a non-zero value in Unix time milliseconds to select posts
            modified after that time
          schema:
            type: integer
        - name: before
          in: query
          description: A post id to select the posts that came before this one
          schema:
            type: string
        - name: after
          in: query
          description: A post id to select the posts that came after this one
          schema:
            type: string
        - name: include_deleted
          in: query
          description: >-
            Whether to include deleted posts or not. Must have system admin
            permissions.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Post list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/channels/{channel_id}/posts/unread:
    get:
      tags:
        - posts
      summary: Get posts around oldest unread
      description: >
        Get the oldest unread post in the channel for the given user as well as
        the posts around it. The returned list is sorted in descending order
        (most recent post first).

        ##### Permissions

        Must be logged in as the user or have `edit_other_users` permission, and
        must have `read_channel` permission for the channel.
      operationId: GetPostsAroundLastUnread
      parameters:
        - name: user_id
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: channel_id
          in: path
          description: The channel ID to get the posts for
          required: true
          schema:
            type: string
        - name: limit_before
          in: query
          description: >-
            Number of posts before the oldest unread posts. Maximum is 200 posts
            if limit is set greater than that.
          schema:
            type: integer
            default: 60
            maximum: 200
            minimum: 0
        - name: limit_after
          in: query
          description: >-
            Number of posts after and including the oldest unread post. Maximum
            is 200 posts if limit is set greater than that.
          schema:
            type: integer
            default: 60
            maximum: 200
            minimum: 1
        - name: skipFetchThreads
          in: query
          description: Whether to skip fetching threads or not
          schema:
            type: boolean
            default: false
        - name: collapsedThreads
          in: query
          description: Whether the client uses CRT or not
          schema:
            type: boolean
            default: false
        - name: collapsedThreadsExtended
          in: query
          description: >-
            Whether to return the associated users as part of the response or
            not
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Post list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/posts/search:
    post:
      tags:
        - posts
      summary: Search for team posts
      description: |
        Search posts in the team and from the provided terms string.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: SearchPosts
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - terms
                - is_or_search
              properties:
                terms:
                  type: string
                  description: >-
                    The search terms as inputed by the user. To search for posts
                    from a user include `from:someusername`, using a user's
                    username. To search in a specific channel include
                    `in:somechannel`, using the channel name (not the display
                    name).
                is_or_search:
                  type: boolean
                  description: >-
                    Set to true if an Or search should be performed vs an And
                    search.
                time_zone_offset:
                  type: integer
                  default: 0
                  description: Offset from UTC of user timezone for date searches.
                include_deleted_channels:
                  type: boolean
                  description: >-
                    Set to true if deleted channels should be included in the
                    search. (archived channels)
                page:
                  type: integer
                  default: 0
                  description: The page to select. (Only works with Elasticsearch)
                per_page:
                  type: integer
                  default: 60
                  description: >-
                    The number of posts per page. (Only works with
                    Elasticsearch)
        description: The search terms and logic to use in the search.
        required: true
      responses:
        '200':
          description: Post list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostListWithSearchMatches'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/pin:
    post:
      tags:
        - posts
      summary: Pin a post to the channel
      description: >
        Pin a post to a channel it is in based from the provided post id string.

        ##### Permissions

        Must be authenticated and have the `read_channel` permission to the
        channel the post is in.
      operationId: PinPost
      parameters:
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pinned post successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/unpin:
    post:
      tags:
        - posts
      summary: Unpin a post to the channel
      description: >
        Unpin a post to a channel it is in based from the provided post id
        string.

        ##### Permissions

        Must be authenticated and have the `read_channel` permission to the
        channel the post is in.
      operationId: UnpinPost
      parameters:
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unpinned post successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/actions/{action_id}:
    post:
      tags:
        - posts
      summary: Perform a post action
      description: >
        Perform a post action, which allows users to interact with integrations
        through posts.

        ##### Permissions

        Must be authenticated and have the `read_channel` permission to the
        channel the post is in.
      operationId: DoPostAction
      parameters:
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
        - name: action_id
          in: path
          description: Action GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post action successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/ids:
    post:
      tags:
        - posts
      summary: Get posts by a list of ids
      description: >
        Fetch a list of posts based on the provided postIDs

        ##### Permissions

        Must have `read_channel` permission for the channel the post is in or if
        the channel is public, have the `read_public_channels` permission for
        the team.
      operationId: getPostsByIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of post ids
        required: true
      responses:
        '200':
          description: Post list retrieval successful
          headers:
            Has-Inaccessible-Posts:
              schema:
                type: boolean
              description: >-
                Indicates whether the posts have been truncated as per the
                cloud's plan limit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/posts/{post_id}/reminder:
    post:
      tags:
        - posts
      summary: Set a post reminder
      description: |+
        Set a reminder for the user for the post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.

      operationId: SetPostReminder
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          description: Post GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - target_time
              properties:
                target_time:
                  type: integer
                  description: Target time for the reminder
        description: Target time for the reminder
        required: true
      responses:
        '200':
          description: Reminder set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/preferences:
    get:
      tags:
        - preferences
      summary: Get the user's preferences
      description: >
        Get a list of the user's preferences.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: GetPreferences
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User preferences retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      tags:
        - preferences
      summary: Save the user's preferences
      description: >
        Save a list of the user's preferences.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: UpdatePreferences
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        description: List of preference objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Preference'
      responses:
        '200':
          description: User preferences saved successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{user_id}/preferences/delete:
    post:
      tags:
        - preferences
      summary: Delete user's preferences
      description: >
        Delete a list of the user's preferences.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: DeletePreferences
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        description: List of preference objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Preference'
      responses:
        '200':
          description: User preferences saved successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/preferences/{category}:
    get:
      tags:
        - preferences
      summary: List a user's preferences by category
      description: >
        Lists the current user's stored preferences in the given category.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: GetPreferencesByCategory
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: category
          in: path
          description: The category of a group of preferences
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            A list of all of the current user's preferences in the given
            category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/preferences/{category}/name/{preference_name}:
    get:
      tags:
        - preferences
      summary: Get a specific user preference
      description: >
        Gets a single preference for the current user with the given category
        and name.

        ##### Permissions

        Must be logged in as the user being updated or have the
        `edit_other_users` permission.
      operationId: GetPreferencesByCategoryByName
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: category
          in: path
          description: The category of a group of preferences
          required: true
          schema:
            type: string
        - name: preference_name
          in: path
          description: The name of the preference
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >
            A single preference for the current user in the current categorylist
            of all of the current user's preferences in the given category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /files:
    post:
      tags:
        - files
      summary: Upload a file
      description: >
        Uploads a file that can later be attached to a post.


        This request can either be a multipart/form-data request with a
        channel_id, files and optional

        client_ids defined in the FormData, or it can be a request with the
        channel_id and filename

        defined as query parameters with the contents of a single file in the
        body of the request.


        ##### Permissions

        Must have `upload_file` permission.
      operationId: UploadFile
      parameters:
        - name: channel_id
          in: query
          description: The ID of the channel that this file will be uploaded to
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: The name of the file to be uploaded
          required: false
          schema:
            type: string
      responses:
        '201':
          description: >-
            Corresponding lists of the provided client_ids and the metadata that
            has been stored in the database for each one
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_infos:
                    description: >-
                      A list of file metadata that has been stored in the
                      database
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'
                  client_ids:
                    description: A list of the client_ids that were provided in the request
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/TooLarge'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /files/{file_id}:
    get:
      tags:
        - files
      summary: Get a file
      description: |
        Gets a file that has been uploaded previously.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFile
      parameters:
        - name: file_id
          in: path
          description: The ID of the file to get
          required: true
          schema:
            type: string
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Do not have appropriate permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          headers:
            First-Inaccessible-File-Time:
              schema:
                type: integer
              description: >-
                This header is included with the value "1" if the file is past
                the cloud's plan limit.
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /files/{file_id}/thumbnail:
    get:
      tags:
        - files
      summary: Get a file's thumbnail
      description: |
        Gets a file's thumbnail.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFileThumbnail
      parameters:
        - name: file_id
          in: path
          description: The ID of the file to get
          required: true
          schema:
            type: string
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Do not have appropriate permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          headers:
            First-Inaccessible-File-Time:
              schema:
                type: integer
              description: >-
                This header is included with the value "1" if the file is past
                the cloud's plan limit.
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /files/{file_id}/preview:
    get:
      tags:
        - files
      summary: Get a file's preview
      description: |
        Gets a file's preview.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFilePreview
      parameters:
        - name: file_id
          in: path
          description: The ID of the file to get
          required: true
          schema:
            type: string
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Do not have appropriate permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          headers:
            First-Inaccessible-File-Time:
              schema:
                type: integer
              description: >-
                This header is included with the value "1" if the file is past
                the cloud's plan limit.
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /files/{file_id}/info:
    get:
      tags:
        - files
      summary: Get metadata for a file
      description: |
        Gets a file's info.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFileInfo
      parameters:
        - name: file_id
          in: path
          description: The ID of the file info to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The stored metadata for the given file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Do not have appropriate permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          headers:
            First-Inaccessible-File-Time:
              schema:
                type: integer
              description: >-
                This header is included with the value "1" if the file is past
                the cloud's plan limit.
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /teams/{team_id}/files/search:
    post:
      tags:
        - teams
        - files
        - search
      summary: Search files in a team
      description: >
        Search for files in a team based on file name, extention and file
        content (if file content extraction is enabled and supported for the
        files).

        ##### Permissions

        Must be authenticated and have the `view_team` permission.
      operationId: SearchFiles
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - terms
                - is_or_search
              properties:
                terms:
                  type: string
                  description: >-
                    The search terms as inputed by the user. To search for files
                    from a user include `from:someusername`, using a user's
                    username. To search in a specific channel include
                    `in:somechannel`, using the channel name (not the display
                    name). To search for specific extensions included
                    `ext:extension`.
                is_or_search:
                  type: boolean
                  description: >-
                    Set to true if an Or search should be performed vs an And
                    search.
                time_zone_offset:
                  type: integer
                  default: 0
                  description: Offset from UTC of user timezone for date searches.
                include_deleted_channels:
                  type: boolean
                  description: >-
                    Set to true if deleted channels should be included in the
                    search. (archived channels)
                page:
                  type: integer
                  default: 0
                  description: The page to select. (Only works with Elasticsearch)
                per_page:
                  type: integer
                  default: 60
                  description: >-
                    The number of posts per page. (Only works with
                    Elasticsearch)
        description: The search terms and logic to use in the search.
        required: true
      responses:
        '200':
          description: Files list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfoList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /config/client:
    get:
      tags:
        - system
      summary: Get client configuration
      description: |
        Get a subset of the server configuration needed by the client.
        ##### Permissions
        No permission required.
      operationId: GetClientConfig
      parameters:
        - name: format
          in: query
          required: true
          description: Must be `old`, other formats not implemented yet
          schema:
            type: string
      responses:
        '200':
          description: Configuration retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji:
    post:
      tags:
        - emoji
      summary: Create a custom emoji
      description: |
        Create a custom emoji for the team.
        ##### Permissions
        Must be authenticated.
      operationId: CreateEmoji
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  description: A file to be uploaded
                  type: string
                  format: binary
                emoji:
                  description: >-
                    A JSON object containing a `name` field with the name of the
                    emoji and a `creator_id` field with the id of the
                    authenticated user.
                  type: string
              required:
                - image
                - emoji
      responses:
        '201':
          description: Emoji creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/TooLarge'
        '501':
          $ref: '#/components/responses/NotImplemented'
    get:
      tags:
        - emoji
      summary: Get a list of custom emoji
      description: |
        Get a page of metadata for custom emoji on the system.##### Permissions
        Must be authenticated.
      operationId: GetEmojiList
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of emojis per page.
          schema:
            type: integer
            default: 60
        - name: sort
          in: query
          description: Either blank for no sorting or "name" to sort by emoji names.
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Emoji list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji/{emoji_id}:
    get:
      tags:
        - emoji
      summary: Get a custom emoji
      description: |
        Get some metadata for a custom emoji.
        ##### Permissions
        Must be authenticated.
      operationId: GetEmoji
      parameters:
        - name: emoji_id
          in: path
          description: Emoji GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Emoji retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
    delete:
      tags:
        - emoji
      summary: Delete a custom emoji
      description: >
        Delete a custom emoji.

        ##### Permissions

        Must have the `manage_team` or `manage_system` permissions or be the
        user who created the emoji.
      operationId: DeleteEmoji
      parameters:
        - name: emoji_id
          in: path
          description: Emoji GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Emoji delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji/name/{emoji_name}:
    get:
      tags:
        - emoji
      summary: Get a custom emoji by name
      description: |+
        Get some metadata for a custom emoji using its name.
        ##### Permissions
        Must be authenticated.

      operationId: GetEmojiByName
      parameters:
        - name: emoji_name
          in: path
          description: Emoji name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Emoji retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji/{emoji_id}/image:
    get:
      tags:
        - emoji
      summary: Get custom emoji image
      description: |
        Get the image for a custom emoji.
        ##### Permissions
        Must be authenticated.
      operationId: GetEmojiImage
      parameters:
        - name: emoji_id
          in: path
          description: Emoji GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Emoji image retrieval successful
          content:
            image/png:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji/search:
    post:
      tags:
        - emoji
      summary: Search custom emoji
      description: >+
        Search for custom emoji by name based on search criteria provided in the
        request body. A maximum of 200 results are returned.

        ##### Permissions

        Must be authenticated.

      operationId: SearchEmoji
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: The term to match against the emoji name.
                  type: string
                prefix_only:
                  description: Set to only search for names starting with the search term.
                  type: string
        description: Search criteria
        required: true
      responses:
        '200':
          description: Emoji list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /emoji/autocomplete:
    get:
      tags:
        - emoji
      summary: Autocomplete custom emoji
      description: >+
        Get a list of custom emoji with names starting with or matching the
        provided name. Returns a maximum of 100 results.

        ##### Permissions

        Must be authenticated.

      operationId: AutocompleteEmoji
      parameters:
        - name: name
          in: query
          description: The emoji name to search.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Emoji list retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /hooks/incoming:
    post:
      tags:
        - webhooks
      summary: Create an incoming webhook
      description: >
        Create an incoming webhook for a channel.

        ##### Permissions

        `manage_webhooks` for the team the webhook is in.


        `manage_others_incoming_webhooks` for the team the webhook is in if the
        user is different than the requester.
      operationId: CreateIncomingWebhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: >-
                    The ID of a public channel or private group that receives
                    the webhook payloads.
                user_id:
                  type: string
                  description: >-
                    The ID of the owner of the webhook if different than the
                    requester. Required for [local
                    mode](https://docs.mattermost.com/administration/mmctl-cli-tool.html#local-mode).
                display_name:
                  type: string
                  description: The display name for this incoming webhook
                description:
                  type: string
                  description: The description for this incoming webhook
                username:
                  type: string
                  description: The username this incoming webhook will post as.
                icon_url:
                  type: string
                  description: >-
                    The profile picture this incoming webhook will use when
                    posting.
        description: Incoming webhook to be created
        required: true
      responses:
        '201':
          description: Incoming webhook creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      tags:
        - webhooks
      summary: List incoming webhooks
      description: >
        Get a page of a list of incoming webhooks. Optionally filter for a
        specific team using query parameters.

        ##### Permissions

        `manage_webhooks` for the system or `manage_webhooks` for the specific
        team.
      operationId: GetIncomingWebhooks
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of hooks per page.
          schema:
            type: integer
            default: 60
        - name: team_id
          in: query
          description: The ID of the team to get hooks for.
          schema:
            type: string
      responses:
        '200':
          description: Incoming webhooks retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /hooks/incoming/{hook_id}:
    get:
      tags:
        - webhooks
      summary: Get an incoming webhook
      description: >
        Get an incoming webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: GetIncomingWebhook
      parameters:
        - name: hook_id
          in: path
          description: Incoming Webhook GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - webhooks
      summary: Delete an incoming webhook
      description: >
        Delete an incoming webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: DeleteIncomingWebhook
      parameters:
        - name: hook_id
          in: path
          description: Incoming webhook GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - webhooks
      summary: Update an incoming webhook
      description: >
        Update an incoming webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: UpdateIncomingWebhook
      parameters:
        - name: hook_id
          in: path
          description: Incoming Webhook GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - channel_id
                - display_name
                - description
              properties:
                id:
                  type: string
                  description: Incoming webhook GUID
                channel_id:
                  type: string
                  description: >-
                    The ID of a public channel or private group that receives
                    the webhook payloads.
                display_name:
                  type: string
                  description: The display name for this incoming webhook
                description:
                  type: string
                  description: The description for this incoming webhook
                username:
                  type: string
                  description: The username this incoming webhook will post as.
                icon_url:
                  type: string
                  description: >-
                    The profile picture this incoming webhook will use when
                    posting.
        description: Incoming webhook to be updated
        required: true
      responses:
        '200':
          description: Webhook update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /hooks/outgoing:
    post:
      tags:
        - webhooks
      summary: Create an outgoing webhook
      description: >
        Create an outgoing webhook for a team.

        ##### Permissions

        `manage_webhooks` for the team the webhook is in.


        `manage_others_outgoing_webhooks` for the team the webhook is in if the
        user is different than the requester.
      operationId: CreateOutgoingWebhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - team_id
                - display_name
                - trigger_words
                - callback_urls
              properties:
                team_id:
                  description: The ID of the team that the webhook watchs
                  type: string
                channel_id:
                  description: The ID of a public channel that the webhook watchs
                  type: string
                creator_id:
                  description: >-
                    The ID of the owner of the webhook if different than the
                    requester. Required in [local
                    mode](https://docs.mattermost.com/administration/mmctl-cli-tool.html#local-mode).
                  type: string
                description:
                  description: The description for this outgoing webhook
                  type: string
                display_name:
                  description: The display name for this outgoing webhook
                  type: string
                trigger_words:
                  description: List of words for the webhook to trigger on
                  type: array
                  items:
                    type: string
                trigger_when:
                  description: >-
                    When to trigger the webhook, `0` when a trigger word is
                    present at all and `1` if the message starts with a trigger
                    word
                  type: integer
                callback_urls:
                  description: >-
                    The URLs to POST the payloads to when the webhook is
                    triggered
                  type: array
                  items:
                    type: string
                content_type:
                  description: >-
                    The format to POST the data in, either `application/json` or
                    `application/x-www-form-urlencoded`
                  default: application/x-www-form-urlencoded
                  type: string
        description: Outgoing webhook to be created
        required: true
      responses:
        '201':
          description: Outgoing webhook creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - webhooks
      summary: List outgoing webhooks
      description: >
        Get a page of a list of outgoing webhooks. Optionally filter for a
        specific team or channel using query parameters.

        ##### Permissions

        `manage_webhooks` for the system or `manage_webhooks` for the specific
        team/channel.
      operationId: GetOutgoingWebhooks
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of hooks per page.
          schema:
            type: integer
            default: 60
        - name: team_id
          in: query
          description: The ID of the team to get hooks for.
          schema:
            type: string
        - name: channel_id
          in: query
          description: The ID of the channel to get hooks for.
          schema:
            type: string
      responses:
        '200':
          description: Outgoing webhooks retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutgoingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /hooks/outgoing/{hook_id}:
    get:
      tags:
        - webhooks
      summary: Get an outgoing webhook
      description: >
        Get an outgoing webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: GetOutgoingWebhook
      parameters:
        - name: hook_id
          in: path
          description: Outgoing webhook GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Outgoing webhook retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - webhooks
      summary: Delete an outgoing webhook
      description: >
        Delete an outgoing webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: DeleteOutgoingWebhook
      parameters:
        - name: hook_id
          in: path
          description: Outgoing webhook GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - webhooks
      summary: Update an outgoing webhook
      description: >
        Update an outgoing webhook given the hook id.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: UpdateOutgoingWebhook
      parameters:
        - name: hook_id
          in: path
          description: outgoing Webhook GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - channel_id
                - display_name
                - description
              properties:
                id:
                  type: string
                  description: Outgoing webhook GUID
                channel_id:
                  type: string
                  description: >-
                    The ID of a public channel or private group that receives
                    the webhook payloads.
                display_name:
                  type: string
                  description: The display name for this incoming webhook
                description:
                  type: string
                  description: The description for this incoming webhook
        description: Outgoing webhook to be updated
        required: true
      responses:
        '200':
          description: Webhook update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /hooks/outgoing/{hook_id}/regen_token:
    post:
      tags:
        - webhooks
      summary: Regenerate the token for the outgoing webhook.
      description: >
        Regenerate the token for the outgoing webhook.

        ##### Permissions

        `manage_webhooks` for system or `manage_webhooks` for the specific team
        or `manage_webhooks` for the channel.
      operationId: RegenOutgoingHookToken
      parameters:
        - name: hook_id
          in: path
          description: Outgoing webhook GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook token regenerate successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /groups:
    get:
      tags:
        - groups
      summary: Get groups
      description: >-
        Retrieve a list of all groups not associated to a particular channel or
        team.


        `not_associated_to_team` **OR** `not_associated_to_channel` is required.


        If you use `not_associated_to_team`, you must be a team admin for that
        particular team (permission to manage that team).


        If you use `not_associated_to_channel`, you must be a channel admin for
        that particular channel (permission to manage that channel).


        n
      operationId: GetGroups
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of groups per page.
          schema:
            type: integer
            default: 60
        - name: q
          in: query
          description: >-
            String to pattern match the `name` and `display_name` field. Will
            return all groups whose `name` and `display_name` field match any of
            the text.
          schema:
            type: string
        - name: include_member_count
          in: query
          description: >-
            Boolean which adds the `member_count` attribute to each group JSON
            object
          schema:
            type: boolean
        - name: not_associated_to_team
          in: query
          description: >-
            Team GUID which is used to return all the groups not associated to
            this team
          required: true
          schema:
            type: string
        - name: not_associated_to_channel
          in: query
          description: >-
            Group GUID which is used to return all the groups not associated to
            this channel
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: >-
            Only return groups that have been modified since the given Unix
            timestamp (in milliseconds). All modified groups, including deleted
            and created groups, will be returned.

            n
          schema:
            type: integer
        - name: filter_allow_reference
          in: query
          description: >-
            Boolean which filters the group entries with the `allow_reference`
            attribute set.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Group list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /channels/{channel_id}/groups:
    get:
      tags:
        - groups
      summary: Get channel groups
      description: |+
        Retrieve the list of groups associated with a given channel.

        ##### Permissions
        Must have `manage_system` permission.

      operationId: GetGroupsByChannel
      parameters:
        - name: channel_id
          in: path
          description: Channel GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of groups per page.
          schema:
            type: integer
            default: 60
        - name: filter_allow_reference
          in: query
          description: >-
            Boolean which filters the group entries with the `allow_reference`
            attribute set.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Group list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /teams/{team_id}/groups:
    get:
      tags:
        - groups
      summary: Get team groups
      description: |+
        Retrieve the list of groups associated with a given team.

      operationId: GetGroupsByTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of groups per page.
          schema:
            type: integer
            default: 60
        - name: filter_allow_reference
          in: query
          description: >-
            Boolean which filters in the group entries with the
            `allow_reference` attribute set.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Group list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /teams/{team_id}/groups_by_channels:
    get:
      tags:
        - groups
      summary: Get team groups by channels
      description: >+
        Retrieve the set of groups associated with the channels in the given
        team grouped by channel.


        ##### Permissions

        Must have `manage_system` permission or can access only for current user

      operationId: GetGroupsAssociatedToChannelsByTeam
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of groups per page.
          schema:
            type: integer
            default: 60
        - name: filter_allow_reference
          in: query
          description: >-
            Boolean which filters in the group entries with the
            `allow_reference` attribute set.
          schema:
            type: boolean
            default: false
        - name: paginate
          in: query
          description: Boolean to determine whether the pagination should be applied or not
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Group list retrieval successful
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/GroupsAssociatedToChannels'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /users/{user_id}/groups:
    get:
      tags:
        - groups
      summary: Get groups for a userId
      description: |+
        Retrieve the list of groups associated to the user

      operationId: GetGroupsByUserId
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/BadRequest'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /commands:
    post:
      tags:
        - commands
      summary: Create a command
      description: |
        Create a command for a team.
        ##### Permissions
        `manage_slash_commands` for the team the command is in.
      operationId: CreateCommand
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - team_id
                - method
                - trigger
                - url
              properties:
                team_id:
                  type: string
                  description: Team ID to where the command should be created
                method:
                  type: string
                  description: '`''P''` for post request, `''G''` for get request'
                trigger:
                  type: string
                  description: Activation word to trigger the command
                url:
                  type: string
                  description: The URL that the command will make the request
        description: command to be created
        required: true
      responses:
        '201':
          description: Command creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
    get:
      tags:
        - commands
      summary: List commands for a team
      description: |
        List commands for a team.
        ##### Permissions
        `manage_slash_commands` if need list custom commands.
      operationId: ListCommands
      parameters:
        - name: team_id
          in: query
          description: The team id.
          schema:
            type: string
        - name: custom_only
          in: query
          description: >
            To get only the custom commands. If set to false will get the custom

            if the user have access plus the system commands, otherwise just the
            system commands.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List Commands retrieve successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /teams/{team_id}/commands/autocomplete:
    get:
      tags:
        - commands
      summary: List autocomplete commands
      description: |
        List autocomplete commands in the team.
        ##### Permissions
        `view_team` for the team.
      operationId: ListAutocompleteCommands
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Autocomplete commands retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /teams/{team_id}/commands/autocomplete_suggestions:
    get:
      tags:
        - commands
      summary: List commands' autocomplete data
      description: |
        List commands' autocomplete data for the team.
        ##### Permissions
        `view_team` for the team.
      operationId: ListCommandAutocompleteSuggestions
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_input
          in: query
          description: String inputted by the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Commands' autocomplete data retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AutocompleteSuggestion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /commands/{command_id}:
    get:
      tags:
        - commands
      summary: Get a command
      description: >+
        Get a command definition based on command id string.

        ##### Permissions

        Must have `manage_slash_commands` permission for the team the command is
        in.

      operationId: GetCommandById
      parameters:
        - in: path
          name: command_id
          description: ID of the command to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Command get successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - commands
      summary: Update a command
      description: >
        Update a single command based on command id string and Command struct.

        ##### Permissions

        Must have `manage_slash_commands` permission for the team the command is
        in.
      operationId: UpdateCommand
      parameters:
        - in: path
          name: command_id
          description: ID of the command to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
        required: true
      responses:
        '200':
          description: Command updated successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - commands
      summary: Delete a command
      description: >
        Delete a command based on command id string.

        ##### Permissions

        Must have `manage_slash_commands` permission for the team the command is
        in.
      operationId: DeleteCommand
      parameters:
        - in: path
          name: command_id
          description: ID of the command to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Command deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /commands/{command_id}/regen_token:
    put:
      tags:
        - commands
      summary: Generate a new token
      description: >
        Generate a new token for the command based on command id string.

        ##### Permissions

        Must have `manage_slash_commands` permission for the team the command is
        in.
      operationId: RegenCommandToken
      parameters:
        - in: path
          name: command_id
          description: ID of the command to generate the new token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token generation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: The new token
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /commands/execute:
    post:
      tags:
        - commands
      summary: Execute a command
      description: >
        Execute a command on a team.

        ##### Permissions

        Must have `use_slash_commands` permission for the team the command is
        in.
      operationId: ExecuteCommand
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - channel_id
                - command
              properties:
                channel_id:
                  type: string
                  description: Channel Id where the command will execute
                command:
                  type: string
                  description: >-
                    The slash command to execute, including parameters. Eg,
                    `'/echo bounces around the room'`
        description: command to be executed
        required: true
      responses:
        '200':
          description: Command execution successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /roles:
    get:
      tags:
        - roles
      summary: Get a list of all the roles
      description: |+
        ##### Permissions

        `manage_system` permission is required.

      operationId: GetAllRoles
      responses:
        '200':
          description: Roles retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /roles/{role_id}:
    get:
      tags:
        - roles
      summary: Get a role
      description: |+
        Get a role from the provided role id.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRole
      parameters:
        - name: role_id
          in: path
          description: Role GUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /roles/name/{role_name}:
    get:
      tags:
        - roles
      summary: Get a role by name
      description: |+
        Get a role from the provided role name.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRoleByName
      parameters:
        - name: role_name
          in: path
          description: Role Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /roles/names:
    post:
      tags:
        - roles
      summary: Get a list of roles by name
      description: |+
        Get a list of roles from their names.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRolesByNames
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of role names
        required: true
      responses:
        '200':
          description: Role list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /reactions:
    post:
      tags:
        - reactions
      summary: Create a reaction
      description: |
        Create a reaction.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.
      operationId: SaveReaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
        description: >-
          The user's reaction with its post_id, user_id, and emoji_name fields
          set
        required: true
      responses:
        '201':
          description: Reaction creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
  /posts/{post_id}/reactions:
    get:
      tags:
        - reactions
      summary: Get a list of reactions to a post
      description: |
        Get a list of reactions made by all users to a given post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.
      operationId: GetReactions
      parameters:
        - name: post_id
          in: path
          description: ID of a post
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List reactions retrieve successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{user_id}/posts/{post_id}/reactions/{emoji_name}:
    delete:
      tags:
        - reactions
      summary: Remove a reaction from a post
      description: |
        Deletes a reaction made by a user from the given post.
        ##### Permissions
        Must be user or have `manage_system` permission.
      operationId: DeleteReaction
      parameters:
        - name: user_id
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          description: ID of the post
          required: true
          schema:
            type: string
        - name: emoji_name
          in: path
          description: emoji name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reaction deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /bots:
    post:
      tags:
        - bots
      summary: Create a bot
      description: |
        Create a new bot account on the system. Username is required.
        ##### Permissions
        Must have `create_bot` permission.
      operationId: CreateBot
      requestBody:
        description: Bot to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                display_name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Bot creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      tags:
        - bots
      summary: Get bots
      description: >
        Get a page of a list of bots.

        ##### Permissions

        Must have `read_bots` permission for bots you are managing, and
        `read_others_bots` permission for bots others are managing.
      operationId: GetBots
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: >-
            The number of users per page. There is a maximum limit of 200 users
            per page.
          schema:
            type: integer
            default: 60
        - name: include_deleted
          in: query
          description: If deleted bots should be returned.
          schema:
            type: boolean
        - name: only_orphaned
          in: query
          description: >-
            When true, only orphaned bots will be returned. A bot is consitered
            orphaned if it's owner has been deactivated.
          schema:
            type: boolean
      responses:
        '200':
          description: Bot page retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /bots/{bot_user_id}:
    put:
      tags:
        - bots
      summary: Patch a bot
      description: >
        Partially update a bot by providing only the fields you want to update.
        Omitted fields will not be updated. The fields that can be updated are
        defined in the request body, all other provided fields will be ignored.

        ##### Permissions

        Must have `manage_bots` permission. 
      operationId: PatchBot
      parameters:
        - name: bot_user_id
          in: path
          description: Bot user ID
          required: true
          schema:
            type: string
      requestBody:
        description: Bot to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                display_name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Bot patch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      tags:
        - bots
      summary: Get a bot
      description: >
        Get a bot specified by its bot id.

        ##### Permissions

        Must have `read_bots` permission for bots you are managing, and
        `read_others_bots` permission for bots others are managing.
      operationId: GetBot
      parameters:
        - name: bot_user_id
          in: path
          description: Bot user ID
          required: true
          schema:
            type: string
        - name: include_deleted
          in: query
          description: If deleted bots should be returned.
          schema:
            type: boolean
      responses:
        '200':
          description: Bot successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /bots/{bot_user_id}/disable:
    post:
      tags:
        - bots
      summary: Disable a bot
      description: |
        Disable a bot.
        ##### Permissions
        Must have `manage_bots` permission. 
      operationId: DisableBot
      parameters:
        - name: bot_user_id
          in: path
          description: Bot user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bot successfully disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /bots/{bot_user_id}/enable:
    post:
      tags:
        - bots
      summary: Enable a bot
      description: |
        Enable a bot.
        ##### Permissions
        Must have `manage_bots` permission. 
      operationId: EnableBot
      parameters:
        - name: bot_user_id
          in: path
          description: Bot user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bot successfully enabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /1/vod/channel/{channel}/media/{media}/thumbnail:
    post:
      route: api.v1.pub.media.thumbnail.store
      ct: Domain\Api\Http\Controllers\ThumbnailController@store
      content: multipart/form-data
      arequestBody:
        content:
          multipart/form-data:
            schema:
              title: Request body
              type: object
              properties:
                file:
                  description: The thumbnail file
                  example: >-
                    uploaded file within multipart/form-data ( ex: using <form
                    method=post enctype='multipart/form-data'><input type=file
                    name=file> )
                  required: true
                  type: file
      parameters:
        - name: file
          in: query
          description: The thumbnail file
          example: >-
            uploaded file within multipart/form-data ( ex: using <form
            method=post enctype='multipart/form-data'><input type=file
            name=file> )
          required: true
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          example: 'channel id : 6349'
          schema:
            type: string
        - in: path
          format: string
          name: media
          required: true
          example: 'media uuid : 1jhv....'
          schema:
            type: string
      tags: []
      summary: Replaces the thumbnail & poster for a given media
      description: >-
        Replaces the thumbnail & poster for a given media  with the file
        provided in the request as multipart/form-data.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/Api_Thumbnail'
        '400':
          $ref: '#/components/responses/08d6964f'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/a039ea57'
        '422':
          $ref: '#/components/responses/2f952ed9'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse:
    get:
      route: api.v1.pub.browse.root.index
      ct: Domain\Api\Http\Controllers\BrowseController@browseRoot
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Lists all children of the channel's root folder.
      description: Lists all children of the channel's root folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/08d6964f'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/a039ea57'
        '422':
          $ref: '#/components/responses/2f952ed9'
      security:
        bearerAuth: []
    delete:
      route: api.v1.pub.browse.bulk.trash
      ct: Domain\Api\Http\Controllers\BrowseController@trashMany
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Moves one or many medias/folders to trash.
      description: Moves one or many medias/folders to trash.
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '204':
          content:
            application/json:
              schema:
                allOf:
                  description: The resource was deleted successfully.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  type: array
                  description: uuid of medias/folders to move to trash
                  example: '[1jhvl2uqacxj5]'
              required: []
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/copy:
    post:
      route: api.v1.pub.browse.bulk.copy
      ct: Domain\Api\Http\Controllers\BrowseController@copyMany
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Duplicates one or many medias/folders to a given folder.
      description: Duplicates one or many medias/folders to a given folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                  type: string
                  required: true
                  description: uuid of destination folder
                  example: 1jhvl2uqacxj5
                targets:
                  type: array
                  required: true
                  description: uuid of medias/folders to move to trash
                  example: '[1jhvl2uqacxj5]'
              required:
                - destination
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/move:
    post:
      route: api.v1.pub.browse.bulk.move
      ct: Domain\Api\Http\Controllers\BrowseController@moveMany
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Moves one or many medias/folders to a given folder.
      description: Moves one or many medias/folders to a given folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                  type: string
                  required: true
                  description: uuid of destination folder
                  example: 1jhvl2uqacxj5
                targets:
                  type: array
                  required: true
                  description: uuid of medias/folders to move to trash
                  example: '[1jhvl2uqacxj5]'
              required:
                - destination
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/trash:
    get:
      route: api.v1.pub.browse.trash.index
      ct: Domain\Api\Http\Controllers\BrowseController@trashIndex
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Lists all medias/folders in trash.
      description: Lists all medias/folders in trash.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/4bc0f255'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/trash/{file}:
    delete:
      route: api.v1.pub.browse.trash.destroy
      ct: Domain\Api\Http\Controllers\BrowseController@destroy
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Deletes a media/folder from trash, permanently.
      description: Deletes a media/folder from trash, permanently.
      responses:
        '204':
          content:
            application/json:
              schema:
                allOf:
                  description: The resource was deleted successfully.
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/trash/{file}/restore:
    post:
      route: api.v1.pub.browse.trash.restore
      ct: Domain\Api\Http\Controllers\BrowseController@restore
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Restores a media/folder from trash to its original location.
      description: Restores a media/folder from trash to its original location.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_BrowsableVirtualFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/update:
    put:
      route: api.v1.pub.browse.bulk.update
      ct: Domain\Api\Http\Controllers\BrowseController@updateMany
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Updates one or many medias/folders.
      description: Updates one or many medias/folders.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/Fillable_App\Models\BrowsableVirtualFile
              required: []
              targets:
                type: array
                items:
                  type: string
                example: '[1jhvl2uqacxj5]'
              published:
                type: bool
                example: true
              validated:
                type: bool
                example: true
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/{file}:
    get:
      route: api.v1.pub.browse.index
      ct: Domain\Api\Http\Controllers\BrowseController@browse
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Lists all children of a given folder.
      description: Lists all children of a given folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/multibvf'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    put:
      route: api.v1.pub.browse.file.update
      ct: Domain\Api\Http\Controllers\BrowseController@update
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Updates a media/folder.
      description: Updates a media/folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_BrowsableVirtualFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: object
                $ref: '#/components/schemas/Fillable_App\Models\BrowsableVirtualFile'
              required: []
      security:
        bearerAuth: []
    delete:
      route: api.v1.pub.browse.file.trash
      ct: Domain\Api\Http\Controllers\BrowseController@trash
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Moves a media/folder to trash.
      description: Moves a media/folder to trash.
      responses:
        '204':
          content:
            application/json:
              schema:
                allOf:
                  description: The resource was deleted successfully.
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/{file}/copy:
    post:
      route: api.v1.pub.browse.file.copy
      ct: Domain\Api\Http\Controllers\BrowseController@copy
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Duplicates a media/folder to a given folder.
      description: Duplicates a media/folder to a given folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_BrowsableVirtualFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                  type: string
                  required: true
                  description: uuid of destination folder
                  example: 1jhvl2uqacxj5
              required:
                - destination
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/browse/{file}/move:
    post:
      route: api.v1.pub.browse.file.move
      ct: Domain\Api\Http\Controllers\BrowseController@move
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: file
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Moves a media/folder to a given folder.
      description: Moves a media/folder to a given folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_BrowsableVirtualFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                  type: string
                  required: true
                  description: uuid of destination folder
                  example: 1jhvl2uqacxj5
              required:
                - destination
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/folder:
    get:
      route: api.v1.pub.folder.index
      ct: Domain\Api\Http\Controllers\FolderController@index
      parameters:
        - in: query
          example: >-
            allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: List all folders.
      description: List all folders.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Api_Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/folder/root:
    get:
      route: api.v1.pub.folder.root.show
      ct: Domain\Api\Http\Controllers\FolderController@showRoot
      parameters:
        - in: query
          example: >-
            allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Returns the channel's root folder.
      description: Returns the channel's root folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/folder/{folder}:
    post:
      route: api.v1.pub.folder.store
      ct: Domain\Api\Http\Controllers\FolderController@store
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: folder
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Creates a new folder in the parent folder.
      description: Creates a new folder in the parent folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortFolder'
      security:
        bearerAuth: []
    get:
      route: api.v1.pub.folder.show
      ct: Domain\Api\Http\Controllers\FolderController@show
      parameters:
        - in: query
          example: >-
            allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: folder
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $folder, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a folder.
      description: Returns a folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    put:
      route: api.v1.pub.folder.update
      ct: Domain\Api\Http\Controllers\FolderController@update
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: folder
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Updates a folder.
      description: Updates a folder.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortFolder'
      security:
        bearerAuth: []
    delete:
      route: api.v1.pub.folder.destroy
      ct: Domain\Api\Http\Controllers\FolderController@destroy
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: folder
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Deletes a folder with all its children, recursively.
      description: Deletes a folder with all its children, recursively.
      responses:
        '204':
          content:
            application/json:
              schema:
                allOf:
                  description: The resource was deleted successfully.
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/folder/{folder}/playlist:
    get:
      route: api.v1.pub.folder.playlist
      ct: Domain\Api\Http\Controllers\FolderController@playlist
      parameters:
        - in: query
          example: image,files,medias_count,medias_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: folder
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Lists all playlists having a given folder attached.
      description: Lists all playlists having a given folder attached.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Api_Playlist'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/media:
    get:
      route: api.v1.pub.media.index
      ct: Domain\Api\Http\Controllers\MediaController@index
      parameters:
        - in: query
          example: >-
            manifests,source,state,preview,sample,shot_boundaries,thumbnail,poster,encodings,progress,playbacks
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Lists all medias.
      description: Lists all medias.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Api_Media'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/media/{media}:
    get:
      route: api.v1.pub.media.show
      ct: Domain\Api\Http\Controllers\MediaController@show
      parameters:
        - in: query
          example: >-
            manifests,source,state,preview,sample,shot_boundaries,thumbnail,poster,encodings,progress,playbacks
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $media, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a media.
      description: Returns a media.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Media'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    put:
      route: api.v1.pub.media.update
      ct: Domain\Api\Http\Controllers\MediaController@update
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Updates a media.
      description: Updates a media.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Media'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortMedia'
      security:
        bearerAuth: []
    delete:
      route: api.v1.pub.media.destroy
      ct: Domain\Api\Http\Controllers\MediaController@destroy
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Deletes a media.
      description: Deletes a media.
      responses:
        '204':
          content:
            application/json:
              schema:
                allOf:
                  description: The resource was deleted successfully.
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/media/{media}/chapter:
    get:
      route: api.v1.pub.media.chapter.index
      ct: Domain\Api\Http\Controllers\ChapterController@index
      parameters:
        - in: query
          example: image
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Lists all chapters of a given media.
      description: Lists all chapters of a given media.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/shortChapter'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    post:
      route: api.v1.pub.media.chapter.store
      ct: Domain\Api\Http\Controllers\ChapterController@store
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Creates a new chapter to a given media.
      description: Creates a new chapter to a given media.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/shortChapter'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/9436319d'
      security:
        bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortChapter'
  /1/vod/channel/{channel}/media/{media}/chapter/{chapter}:
    get:
      route: api.v1.pub.media.chapter.show
      ct: Domain\Api\Http\Controllers\ChapterController@show
      parameters:
        - in: query
          example: image
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: path
          format: string
          name: chapter
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $media, $chapter, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a chapter.
      description: Returns a chapter.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Chapter'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    put:
      route: api.v1.pub.media.chapter.update
      ct: Domain\Api\Http\Controllers\ChapterController@update
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: path
          format: string
          name: chapter
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Updates a chapter.
      description: Updates a chapter.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/shortChapter'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/41638d24'
      security:
        bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortChapter'
  /1/vod/channel/{channel}/media/{media}/cut:
    post:
      route: api.v1.pub.cut.performCut
      ct: Domain\Encode\Http\Controllers\CutController@performCut
      parameters:
        - schema:
            type: string
          in: query
          format: string
          name: new
          example: '1'
          description: creates a new trimmed media if set to 1
        - schema:
            type: string
          in: query
          name: from
          example: '2'
          description: time in seconds where the trim starts, in multiples of 2
        - schema:
            type: string
          in: query
          format: string
          name: duration
          example: '24'
          description: >-
            duration of the trim in seconds, in multiples of 2, is
            (endTime-startTrimTime)
        - schema:
            type: string
          in: path
          name: channel
          example: '6349'
          description: channel id
        - schema:
            type: string
          in: path
          name: media
          example: 1jhvl2uqa5v8a
          description: media uuid
      tags: []
      summary: Cuts a media with its encodings
      description: Cuts a media with its encodings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string
                        example: New cut task dispatched
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                $ref: '#/components/parameters/cut'
              required: []
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/player:
    get:
      route: api.v1.pub.player.index
      ct: Domain\Api\Http\Controllers\PlayerController@index
      parameters:
        - in: query
          example: >-
            files,logo_image,preload_image,interrupt_image,geoip_image,restrict_image,is_channel_default
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Lists all players.
      description: Lists all players.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Api_Player'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/player/{player}:
    get:
      route: api.v1.pub.player.show
      ct: Domain\Api\Http\Controllers\PlayerController@show
      parameters:
        - in: query
          example: >-
            files,logo_image,preload_image,interrupt_image,geoip_image,restrict_image,is_channel_default
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: player
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $player, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a player.
      description: Returns a player.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Player'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
    put:
      route: api.v1.pub.player.update
      ct: Domain\Api\Http\Controllers\PlayerController@update
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: player
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: Updates a player.
      description: Updates a player.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Player'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/556bb773'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: object
                $ref: '#/components/schemas/Fillable_App\Models\Player'
              required: []
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/playlist:
    get:
      route: api.v1.pub.playlist.index
      ct: Domain\Api\Http\Controllers\PlaylistController@index
      parameters:
        - in: query
          example: image,files,medias_count,medias_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Lists all playlists.
      description: Lists all playlists.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Api_Playlist'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/e7a7a4eb'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/playlist/{playlist}:
    get:
      route: api.v1.pub.playlist.show
      ct: Domain\Api\Http\Controllers\PlaylistController@show
      parameters:
        - in: query
          example: image,files,medias_count,medias_duration
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: playlist
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $playlist, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a playlist.
      description: Returns a playlist.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Playlist'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/share:
    post:
      route: api.v1.pub.share.store
      ct: Domain\Api\Http\Controllers\ShareController@store
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
      tags: []
      summary: Creates a new share to a given target.
      description: >-
        Creates a share, returns a share having id in order to build this url :
        https://api.vod2.infomaniak.com/res/embed/{{ ID }}.html
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/shortShare'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  example: 1jhvl2uqacxj5
                  description: uuid of media or playlist
                player:
                  type: string
                  example: 1jhvl2uqacxj5
                  description: uuid of player
                encoding:
                  type: string
                  example: 1jhvl2uqacxj5
                  description: uuid of encoding
      security:
        bearerAuth: []
      name: Share a media or playlist
  /1/vod/channel/{channel}/share/{share}:
    get:
      route: api.v1.pub.share.show
      ct: Domain\Api\Http\Controllers\ShareController@show
      parameters:
        - in: query
          example: links,target_id,target_type,player,manifests,target
          name: with
          required: false
          schema:
            type: string
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: share
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: $share, new OptionsHttp($request
          type: string
          required: true
          schema:
            type: string
      tags: []
      summary: Returns a share.
      description: Returns a share.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Api_Share'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/share/{share}/token:
    post:
      route: api.v1.pub.share.token
      ct: Domain\Api\Http\Controllers\ShareController@token
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: share
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: token
      description: token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                $ref: '#/components/parameters/maketoken'
              required: []
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/avg_time:
    get:
      route: api.v1.statistics.avg_time
      ct: Domain\Stats\Http\Controllers\ViewingController@getAvgConsumedTime
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: avg time
      description: avg time
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: '"number_ips":"7","average_time":"337473"'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/consumption:
    get:
      route: api.v1.statistics.consumption
      ct: >-
        Domain\Stats\Http\Controllers\ConsumptionController@getChannelConsumption
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: consumption
      description: consumption
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: '"value":"6062195290"'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/consumption/encodings/histogram:
    get:
      route: api.v1.statistics.consumption.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ConsumptionController@getChannelConsumptionPerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/perhisto'
      tags: []
      summary: consumption encoding histogram
      description: consumption encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media:
    get:
      route: api.v1.statistics.top-media
      ct: Domain\Stats\Http\Controllers\MediaController@getChannelTopMedia
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: top-media
      description: top-media
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/consumption:
    get:
      route: api.v1.statistics.media.consumption
      ct: Domain\Stats\Http\Controllers\ConsumptionController@getConsumption
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media consumption
      description: media consumption
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/consumption/encodings/histogram:
    get:
      route: api.v1.statistics.media.consumption.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ConsumptionController@getConsumptionPerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/perhisto'
      tags: []
      summary: media consumption encoding histogram
      description: media consumption encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/geolocation/clusters:
    get:
      route: api.v1.statistics.media.clusters
      ct: Domain\Stats\Http\Controllers\GeolocationController@getClusters
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: media clusters
      description: media clusters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/geolocation/countries:
    get:
      route: api.v1.statistics.media.countries
      ct: Domain\Stats\Http\Controllers\GeolocationController@getCountries
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
      tags: []
      summary: media countries
      description: media countries
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/browsers/shares:
    get:
      route: api.v1.statistics.media.browsers.shares
      ct: Domain\Stats\Http\Controllers\TechnologiesController@getBrowsersShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media browsers shares
      description: media browsers shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/os/shares:
    get:
      route: api.v1.statistics.media.os.shares
      ct: Domain\Stats\Http\Controllers\TechnologiesController@getOsShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media os shares
      description: media os shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/playback/shares:
    get:
      route: api.v1.statistics.media.playbacks.shares
      ct: Domain\Stats\Http\Controllers\TechnologiesController@getPlaybacksShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media playbacks shares
      description: media playbacks shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/players/shares:
    get:
      route: api.v1.statistics.media.players.shares
      ct: Domain\Stats\Http\Controllers\TechnologiesController@getPlayersShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media players shares
      description: media players shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewers:
    get:
      route: api.v1.statistics.media.viewers
      ct: Domain\Stats\Http\Controllers\ViewersController@getViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: medias
          description: Valid Media identifiers separated with comma ,
          type: Media
          schema:
            type: string
          required: true
          example: '?medias=1jhvl1uq4j94b,1jhvl1uq4j94c'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media viewers
      description: media viewers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/encodings/histogram:
    get:
      route: api.v1.statistics.media.viewers.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ViewersController@getViewersPerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media viewers encoding histogram
      description: media viewers encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/encodings/shares:
    get:
      route: api.v1.statistics.media.viewers.encoding.shares
      ct: >-
        Domain\Stats\Http\Controllers\ViewersController@getViewersPerEncodingShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media viewers encoding shares
      description: media viewers encoding shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/uniques:
    get:
      route: api.v1.statistics.media.viewers.unique
      ct: Domain\Stats\Http\Controllers\ViewersController@getUniqueViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - in: query
          name: medias
          description: Valid Media identifiers separated with comma ,
          type: Media
          schema:
            type: string
          required: true
          example: '?medias=1jhvl1uq4j94b,1jhvl1uq4j94c'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media viewers unique
      description: media viewers unique
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewing:
    get:
      route: api.v1.statistics.media.viewing_time
      ct: Domain\Stats\Http\Controllers\ViewingController@getViewingTime
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
      tags: []
      summary: media viewing time
      description: media viewing time
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/media/{media}/viewing/encodings/histogram:
    get:
      route: api.v1.statistics.media.viewing_time.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ViewingController@getViewingTimePerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: path
          format: string
          name: media
          required: true
          schema:
            type: string
          example: 1jhvl2uqa5v8a
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/perhisto'
      tags: []
      summary: media viewing time encoding histogram
      description: media viewing time encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/technologies/browsers/shares:
    get:
      route: api.v1.statistics.browsers.shares
      ct: >-
        Domain\Stats\Http\Controllers\TechnologiesController@getChannelBrowsersShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: browsers shares
      description: browsers shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/technologies/os/shares:
    get:
      route: api.v1.statistics.os.shares
      ct: Domain\Stats\Http\Controllers\TechnologiesController@getChannelOsShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: os shares
      description: os shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/technologies/playback/shares:
    get:
      route: api.v1.statistics.playbacks.shares
      ct: >-
        Domain\Stats\Http\Controllers\TechnologiesController@getChannelPlaybacksShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: playbacks shares
      description: playbacks shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/technologies/players/shares:
    get:
      route: api.v1.statistics.players.shares
      ct: >-
        Domain\Stats\Http\Controllers\TechnologiesController@getChannelPlayersShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: players shares
      description: players shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/time_ip:
    get:
      route: api.v1.statistics.time_ip
      ct: Domain\Stats\Http\Controllers\ViewingController@getConsumedTimePerIp
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: time ip
      description: time ip
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: '"10.8.8.49":"1934000"'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/5e128766'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers:
    get:
      route: api.v1.statistics.viewers
      ct: Domain\Stats\Http\Controllers\ViewersController@getChannelViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers
      description: viewers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/encodings/histogram:
    get:
      route: api.v1.statistics.viewers.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ViewersController@getChannelViewersPerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers encoding histogram
      description: viewers encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/encodings/shares:
    get:
      route: api.v1.statistics.viewers.encoding.shares
      ct: >-
        Domain\Stats\Http\Controllers\ViewersController@getChannelViewersPerEncodingShare
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers encoding shares
      description: viewers encoding shares
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/histogram:
    get:
      route: api.v1.statistics.viewers.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ViewersController@getChannelViewersHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/perhisto'
      tags: []
      summary: viewers histogram
      description: viewers histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/medias:
    get:
      route: api.v1.statistics.viewers.medias.bulk
      ct: Domain\Stats\Http\Controllers\ViewersController@getViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: query
          name: medias
          description: Valid Media identifiers separated with comma ,
          type: Media
          schema:
            type: string
          required: true
          example: '?medias=1jhvl1uq4j94b,1jhvl1uq4j94c'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers medias bulk
      description: viewers medias bulk
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: '"1jhvl2uq8p2vt":{"value":"13"},"1jhvl2uq8p2w9":{"value":"2"}'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/uniques:
    get:
      route: api.v1.statistics.viewers.unique
      ct: Domain\Stats\Http\Controllers\ViewersController@getChannelUniqueViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers unique
      description: viewers unique
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewers/uniques/medias:
    get:
      route: api.v1.statistics.viewers.medias.unique.bulk
      ct: Domain\Stats\Http\Controllers\ViewersController@getUniqueViewers
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: query
          name: medias
          description: Valid Media identifiers separated with comma ,
          type: Media
          schema:
            type: string
          required: true
          example: '?medias=1jhvl1uq4j94b,1jhvl1uq4j94c'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewers medias unique bulk
      description: viewers medias unique bulk
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewing:
    get:
      route: api.v1.statistics.viewing_time
      ct: Domain\Stats\Http\Controllers\ViewingController@getChannelViewingTime
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewing time
      description: viewing time
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/statistics/viewing/encodings/histogram:
    get:
      route: api.v1.statistics.viewing_time.encoding.histogram
      ct: >-
        Domain\Stats\Http\Controllers\ViewingController@getChannelViewingTimePerEncodingHistogram
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - $ref: '#/components/parameters/from'
      tags: []
      summary: viewing time encoding histogram
      description: viewing time encoding histogram
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        bearerAuth: []
  /1/vod/channel/{channel}/upload:
    post:
      route: api.v1.pub.upload.store
      ct: Domain\Api\Http\Controllers\UploadController@store
      parameters:
        - in: path
          format: string
          name: channel
          required: true
          schema:
            type: string
          example: 'channel id : 6349'
        - in: header
          name: Digest
          description: 'Digest: algorythmn checksum'
          example: >-
            Digest:
            sha-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=,unixsum=30637
          schema:
            type: string
          format: string
        - in: formData
          name: file
          description: uploaded file
          schema:
            type: string
          type: file
      tags: []
      summary: store
      description: Creates a new upload
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/success_media'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder:
                  type: string
                  format: uuid
                  description: A valid UUID for Folder
                  example: 1jhvl2uqa5v8a
                url:
                  type: string
                  example: http://infomaniak.com/video.mp4
                  description: Provide either url to import video from or file below
                file:
                  schema:
                    type: file
                    format: binary
                    dataType: file
                    example: >-
                      uploaded file within multipart/form-data ( ex: using
                      &lt;form method=post
                      enctype='multipart/form-data'&gt;&lt;input type=file
                      name=file&gt; )
                name:
                  type: string
                  example: video name
                size:
                  type: string
                  description: expected video size
                  example: '230000'
              required:
                - folder
          file:
            schema: 1
      security:
        bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/admin:
    put:
      tags:
        - Administrator
      summary: Update administrator
      description: Update the email address for the Acronis administrator user
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Email
                  example: myemail@mydomain.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Administrator
      summary: Create administrator
      description: Create an Acronis administrator
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Email
                  example: myemail@mydomain.com
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/admin/request_password:
    post:
      tags:
        - Passwords
      summary: Request administrator password
      description: >-
        Get a new token or send an email, to change the Acronis administrator
        password
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/SwissBackupTokenPassword'
                            schema: []
                          - type: array
                            items:
                              type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots:
    get:
      tags:
        - Slots
      summary: List all slots
      description: Get all slots for the given Swiss Backup product
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SwissBackupSlot'
                          schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Slots
      summary: Create
      description: Create a new slot via a job, for the given Swiss Backup
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - customer_name
                - email
                - size
                - type
              type: object
              properties:
                connection_type:
                  title: connection_type
                  enum:
                    - ftp
                    - s3
                    - swift
                  type: string
                  description: Slot connection type (Swift, S3, FTP)
                  example: swift
                customer_name:
                  title: customer_name
                  maxLength: 255
                  minLength: 2
                  type: string
                  description: Customer name of the resource `{name}`
                  example: SwissBackup Slot
                email:
                  title: email
                  type: string
                  description: Email
                  example: myemail@mydomain.com
                firstname:
                  title: firstname
                  maxLength: 255
                  type: string
                  nullable: true
                  example: Jean
                lang:
                  title: lang
                  type: integer
                  description: >-
                    Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5 =
                    es)
                  example: 1
                lastname:
                  title: lastname
                  maxLength: 255
                  type: string
                  nullable: true
                  example: Paul
                size:
                  title: size
                  minimum: 1000000000
                  type: integer
                  description: Total storage size of the Swiss Backup product (Bytes)
                  example: 200000000000
                type:
                  title: type
                  enum:
                    - acronis
                    - linux
                    - mobile
                    - office
                    - other
                    - qnap
                    - server
                    - synology
                    - virtual
                    - workstation
                  type: string
                  description: Type of the resource `{name}`
                  example: workstation
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackupSlot'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/disable:
    post:
      tags:
        - Slots
      summary: Disable
      description: Disable a slot via a job, for the given Swiss Backup
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/enable:
    post:
      tags:
        - Slots
      summary: Enable
      description: Enable a slot via a job, for the given Swiss Backup
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/request_password:
    post:
      tags:
        - Passwords
      summary: Request slot password
      description: Get a new token or send the email, to change the password for a slot
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/SwissBackupTokenPassword'
                            schema: []
                          - type: array
                            items:
                              type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups:
    get:
      tags:
        - Product management
      summary: List all Swiss Backups
      description: List all Swiss Backup products for the given account
      parameters:
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: >-
              Unique identifier of the `account` that is related to the resource
              `{name}`
          name: account_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - customer_name
              - internal_name
              - expired_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[customer_name]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SwissBackup'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}:
    get:
      tags:
        - Product management
      summary: Swiss Backup information
      description: Get details for the given Swiss Backup product
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackup'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Product management
      summary: Update a Swiss Backup
      description: Update the given Swiss Backup product
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the `account`
          required: true
          style: form
          explode: true
          schema:
            type: integer
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                periodicity:
                  title: periodicity
                  enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                  type: number
                  description: Commitment period (in years)
                  example: 1
                  format: double
                storage_reserved_acronis:
                  title: storage_reserved_acronis
                  type: integer
                  description: Allocated storage size for Acronis (Bytes)
                  example: 100000000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackup'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/acronis_informations:
    get:
      tags:
        - Product management
      summary: Acronis information
      description: >-
        Get Acronis information, from the Acronis API, for the given Swiss
        Backup product
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AcronisUsage'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}:
    get:
      tags:
        - Slots
      summary: Slot information
      description: Get more details about the given slot
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackupSlot'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Slots
      summary: Update
      description: Update a slot via a job, for the given Swiss Backup
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                activate_notifications:
                  title: activate_notifications
                  type: boolean
                  description: True if the user wants to receive Acronis notifications
                  example: true
                customer_name:
                  title: customer_name
                  maxLength: 255
                  minLength: 2
                  type: string
                  description: Customer name of the resource `{name}`
                  example: SwissBackup Slot
                email:
                  title: email
                  type: string
                  description: Email
                  example: myemail@mydomain.com
                lang:
                  title: lang
                  type: integer
                  description: >-
                    Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5 =
                    es)
                  example: 1
                send_mail:
                  title: send_mail
                  type: boolean
                size:
                  title: size
                  minimum: 1000000000
                  type: integer
                  description: Total storage size of the Swiss Backup product (Bytes)
                  example: 200000000000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackupSlot'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Slots
      summary: Delete
      description: Delete a slot for the given Swiss Backup
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - type: boolean
                          - nullable: true
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/rclone:
    get:
      tags:
        - Slots
      summary: RClone details
      description: Get RClone details about the given slot
      parameters:
        - description: Unique identifier of the Swiss Backup to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: swiss_backup_id
          in: path
        - description: Unique identifier of the Slot to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: slot_id
          in: path
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/pricing:
    get:
      tags:
        - Billing
      summary: List prices and discounts
      description: List all prices and discounts for Swiss Backup products
      parameters:
        - description: The account identifier
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: >-
              Unique identifier of the `account` that is related to the resource
              `{name}`
          name: account_id
          in: query
        - style: form
          explode: true
          schema:
            title: currency_id
            type: integer
          name: currency_id
          in: query
        - style: form
          explode: true
          schema:
            title: swiss_backup_id
            type: integer
          name: swiss_backup_id
          in: query
        - style: form
          explode: true
          schema:
            title: with_renewal
            type: boolean
          name: with_renewal
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SwissBackupPrice_2731a22e'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/swiss_backups/calculate:
    get:
      tags:
        - Billing
      summary: Calculate the price
      description: Calculate the price for a specific configuration
      parameters:
        - style: form
          explode: true
          schema:
            title: currency_id
            type: integer
          name: currency_id
          in: query
        - style: form
          explode: true
          schema:
            title: due_at
            type: string
            description: Contract end date
          name: due_at
          in: query
        - style: form
          explode: true
          schema:
            title: is_demo
            type: boolean
            description: True if the product is a trial
            example: true
          name: is_demo
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: size
            type: integer
            description: Total storage size of the Swiss Backup product (Bytes)
            example: 200000000000
          name: size
          in: query
        - style: form
          explode: true
          schema:
            title: slot
            type: integer
          name: slot
          in: query
        - style: form
          explode: true
          schema:
            title: slot_mobile
            type: integer
          name: slot_mobile
          in: query
        - style: form
          explode: true
          schema:
            title: slot_server
            type: integer
          name: slot_server
          in: query
        - style: form
          explode: true
          schema:
            title: slot_virtual
            type: integer
          name: slot_virtual
          in: query
        - style: form
          explode: true
          schema:
            title: slot_workstation
            type: integer
          name: slot_workstation
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - type: number
                          - type: integer
      security:
        - bearerAuth: []
  /1/radios/players/ip-access:
    post:
      tags:
        - Players
      summary: Check ip access to mountpoint
      description: This endpoint allows you to check ip access to mountpoint.
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - mountpoint
              type: object
              properties:
                mountpoint:
                  title: mountpoint
                  type: string
                  description: Specify the mountpoint to check ip authorization
                  example: /my-mountpoint.mp3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
  /1/radios/players/{player_uuid}/domain-access:
    post:
      tags:
        - Players
      summary: Check domain access for player
      description: This endpoint allows you to check domain access for player.
      parameters:
        - description: The universally unique identifier (UUID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: player_uuid
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - domain
              type: object
              properties:
                domain:
                  title: domain
                  type: string
                  description: Specify the domain to check authorization
                  example: infomaniak.ch,myradio.ch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
  /1/radios/players/{player_uuid}/config:
    post:
      tags:
        - Players
      summary: Get player config
      description: This endpoint allows you to get the player config.
      parameters:
        - description: The universally unique identifier (UUID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: player_uuid
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PlayerConfiguration'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
  /1/radios/{radio_product_id}/stations:
    get:
      tags:
        - Stations
      summary: List stations
      description: This endpoint allows you to retrieve all the stations.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Station_446a80a0'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Stations
      summary: Store station
      description: This endpoint allows you to store a station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
              type: object
              properties:
                cluster_id:
                  title: cluster_id
                  type: integer
                  description: Specify the cluster
                  example: 1
                is_acpm:
                  title: is_acpm
                  type: boolean
                  description: Specify if you need the log for the ACPM
                  example: true
                is_daily_restart:
                  title: is_daily_restart
                  type: boolean
                  description: Specify if the station will restart daily
                  example: true
                is_send_logs:
                  title: is_send_logs
                  type: boolean
                  description: Specify if we send you the log
                  example: true
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Specify the name of the station
                  example: MyStation
                time_daily_restart:
                  title: time_daily_restart
                  maxLength: 255
                  type: string
                  description: Specify at which moment the daily restart begin
                  example: '22:15'
                timezone_daily_restart:
                  title: timezone_daily_restart
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Ciudad_Juarez
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Fort_Nelson
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Colombo
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kathmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Riyadh
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ulaanbaatar
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faroe
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/Perth
                    - Australia/Sydney
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Ulyanovsk
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zurich
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Wake
                    - Pacific/Wallis
                    - UTC
                  type: string
                  description: Specify the timezone of the daily restart
                  example: Europe/Zurich
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/thumbnail:
    post:
      tags:
        - Stations
      summary: Update station thumbnail
      description: This endpoint allows you to update a station thumbnail.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - thumbnail
              type: object
              properties:
                thumbnail:
                  title: thumbnail
                  maxLength: 3072
                  type: string
                  description: Specify the new thumbnail file for the station
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Stations
      summary: Delete station thumbnail
      description: This endpoint allows you to delete a station thumbnail.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/reset_general_parameters:
    post:
      tags:
        - Stations
      summary: Reset general parameters
      description: This endpoint allows you to reset general parameters.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/send_logs:
    post:
      tags:
        - Stations
      summary: Send logs
      description: This endpoint allows you to send logs.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
                - to
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get logs
                  example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get logs
                  example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/toggle_direct_live:
    post:
      tags:
        - Stations
      summary: Toggle direct live
      description: This endpoint allows you to toggle direct live.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams:
    get:
      tags:
        - Streams
      summary: List streams
      description: This endpoint allows you to retrieve all the streams.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Stream'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Streams
      summary: Store stream
      description: This endpoint allows you to store a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - bitrate
                - codec
                - mountpoint
              type: object
              properties:
                bitrate:
                  title: bitrate
                  enum:
                    - 24
                    - 32
                    - 48
                    - 64
                    - 96
                    - 128
                    - 192
                    - 256
                    - 320
                    - 512
                  type: integer
                  description: Specify the bitrate of the stream
                codec:
                  title: codec
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
                  description: Specify the codec of the stream
                country_list:
                  title: country_list
                  maxLength: 255
                  pattern: /^([A-Z]{2}
                  type: string
                  description: Specify the country list not allow accessing to the stream
                  nullable: true
                  example: IT,JP
                fallback_is_active_relay:
                  title: fallback_is_active_relay
                  type: boolean
                  description: Specify if the fallback is a relay stream
                  example: true
                fallback_relay_mountpoint:
                  title: fallback_relay_mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the relay mountpoint for the fallback
                  example: /myrelay-mountpoint.mp3
                fallback_relay_port:
                  title: fallback_relay_port
                  maximum: 65535
                  minimum: 1
                  type: integer
                  description: Specify the relay server port for the fallback
                  example: 80
                fallback_relay_server:
                  title: fallback_relay_server
                  maxLength: 255
                  type: string
                  description: Specify the relay server domain for the fallback
                  example: myrelayradio.ch
                hash_key:
                  title: hash_key
                  maxLength: 255
                  type: string
                  description: Specify the token to protect the stream
                  nullable: true
                  example: my-token
                ip_exclude_list:
                  title: ip_exclude_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list not allow accessing to the stream
                  nullable: true
                  example: 127.0.0.3,127.0.0.4
                ip_include_list:
                  title: ip_include_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list allow accessing to the stream
                  nullable: true
                  example: 127.0.0.1,127.0.0.2
                is_active_relay:
                  title: is_active_relay
                  type: boolean
                  description: Specify if this is a relay stream
                  example: true
                is_allow_country:
                  title: is_allow_country
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                is_fallback:
                  title: is_fallback
                  type: boolean
                  description: Specify is the new stream have a fallback
                  example: true
                is_hash_restriction:
                  title: is_hash_restriction
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                mountpoint:
                  title: mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the mountpoint of the stream
                  example: /my-mountpoint.mp3
                relay_mountpoint:
                  title: relay_mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the relay mountpoint
                  example: /myrelay-mountpoint.mp3
                relay_port:
                  title: relay_port
                  maximum: 65535
                  minimum: 1
                  type: integer
                  description: Specify the relay server port
                  example: 80
                relay_server:
                  title: relay_server
                  maxLength: 255
                  type: string
                  description: Specify the relay server domain
                  example: myrelayradio.ch
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/add-fallback:
    post:
      tags:
        - Streams
      summary: Add fallback stream
      description: This endpoint allows you to add a fallback stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the source stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/remove-fallback:
    post:
      tags:
        - Streams
      summary: Remove fallback stream
      description: This endpoint allows you to remove the fallback stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the source stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/introduction-file:
    get:
      tags:
        - Streams
      summary: Get introduction file
      description: This endpoint allows you to get the introduction file for a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Streams
      summary: Update introduction file
      description: This endpoint allows you to update the introduction file for a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                file:
                  title: file
                  maxLength: 2048
                  type: string
                  description: Specify the new introduction file for the stream
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Streams
      summary: Delete introduction file
      description: This endpoint allows you to delete the introduction file for a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/add:
    post:
      tags:
        - Hls Stream
      summary: Add hls stream
      description: This endpoint allows you to add a hls stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                buffer_size:
                  title: buffer_size
                  minimum: 25
                  type: integer
                  description: Specify the buffer size of the hls stream
                  example: 5
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/add:
    post:
      tags:
        - Transcodings
      summary: Add transcoded stream
      description: This endpoint allows you to add transcoded stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - bitrate
                - codec
              type: object
              properties:
                bitrate:
                  title: bitrate
                  enum:
                    - 24
                    - 32
                    - 48
                    - 64
                    - 96
                    - 128
                    - 192
                    - 256
                    - 320
                    - 512
                  type: integer
                  description: Specify the bitrate for the new stream
                codec:
                  title: codec
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
                  description: Specify the codec for the new stream
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/{stream_id}/unbind:
    post:
      tags:
        - Transcodings
      summary: Unbind transcoded stream
      description: This endpoint allows you to unbind transcoding on transcoded stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the transcoded stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players:
    get:
      tags:
        - Players
      summary: List product players
      description: This endpoint allows you to retrieve all the players in a product.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Player'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Players
      summary: Store player
      description: This endpoint allows you to store a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - display_name
                - name
                - stations
                - type
              type: object
              properties:
                background_color:
                  title: background_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the background color used in the player
                  example: '202020'
                button_color:
                  title: button_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the button color used in the player
                  example: FFFFFF
                display_name:
                  title: display_name
                  maxLength: 255
                  type: string
                  description: Specify the name uses to display in the player
                  example: Radio Player
                domains:
                  title: domains
                  maxLength: 255
                  type: string
                  description: Specify the domains allow accessing to the player
                  example: infomaniak.ch,myradio.ch
                facebook_link:
                  title: facebook_link
                  maxLength: 255
                  type: string
                  description: Specify the Facebook link used in Facebook embed
                  example: myradio.ch
                height:
                  title: height
                  exclusiveMinimum: true
                  pattern: /^\d+(\.\d{1
                  type: string
                  description: Specify the height in px for display the player
                  example: '144.00'
                is_auto_start:
                  title: is_auto_start
                  type: boolean
                  description: Specify if the auto start is enabled
                  example: true
                is_cover:
                  title: is_cover
                  type: boolean
                  description: Specify if the cover will be displayed
                  example: true
                is_embed:
                  title: is_embed
                  type: boolean
                  description: Specify if the embed url will be displayed int the player
                  example: true
                is_facebook_embed:
                  title: is_facebook_embed
                  type: boolean
                  description: >-
                    Specify if the Facebook embed url will be displayed int the
                    player
                  example: true
                is_listeners:
                  title: is_listeners
                  type: boolean
                  description: Specify if listeners information is displayed
                  example: true
                is_listeners_hold:
                  title: is_listeners_hold
                  type: boolean
                  description: Specify if listeners hold is used
                  example: true
                is_logo:
                  title: is_logo
                  type: boolean
                  description: Specify if the logo Infomaniak is displayed
                  example: true
                is_metadata_display:
                  title: is_metadata_display
                  type: boolean
                  description: Specify if the metadata title and artist will be visible
                  example: true
                is_spectrum:
                  title: is_spectrum
                  type: boolean
                  description: Specify if the spectrum will be displayed
                  example: true
                is_station_thumbnail:
                  title: is_station_thumbnail
                  type: boolean
                  description: Specify if the station thumbnail will be displayed
                  example: true
                is_twitter_embed:
                  title: is_twitter_embed
                  type: boolean
                  description: >-
                    Specify if the Twitter embed url will be displayed int the
                    player
                  example: true
                language:
                  title: language
                  maxLength: 255
                  enum:
                    - de
                    - en
                    - es
                    - fr
                    - it
                  type: string
                  description: Specify the language used in the player
                listeners_hold:
                  title: listeners_hold
                  type: integer
                  description: Specify listeners hold for listeners information
                  example: 100
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Specify the name of the player, it is not used in the player
                  example: MyPlayer
                secondary_color:
                  title: secondary_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the secondary color used in the player
                  example: 0098FF
                stations:
                  title: stations
                  type: array
                  items:
                    title: item
                    type: object
                    properties:
                      id:
                        title: id
                        type: integer
                        description: Specify the id of the station
                        example: 1
                      is_main:
                        title: is_main
                        type: boolean
                        description: Specify if the station is the main station to listen
                        example: true
                      order:
                        title: order
                        type: integer
                        description: Specify the order of the station in the list
                        example: 1
                      streams:
                        title: streams
                        maxItems: 3
                        type: array
                        items:
                          title: item
                          type: object
                          properties:
                            id:
                              title: id
                              type: integer
                              description: Specify the id of the stream to use
                              example: 0
                            is_main:
                              title: is_main
                              type: boolean
                              description: >-
                                Specify if the stream is the main stream of the
                                station
                              example: true
                        description: >-
                          Specify the list of streams used in the super player
                          by station
                      hls_stream:
                        title: hls_stream
                        type: object
                        properties:
                          id:
                            title: id
                            type: integer
                            description: Specify the HLS Stream id used in the player
                            example: 2
                          is_main:
                            title: is_main
                            type: boolean
                            description: >-
                              Specify if the HLS stream is the main stream of
                              this station
                            example: true
                  description: Specify the list of stations used in the super player
                twitter_account:
                  title: twitter_account
                  maxLength: 255
                  type: string
                  description: Specify the Twitter account will be used in Twitter embed
                  example: MyAccount
                twitter_backlink:
                  title: twitter_backlink
                  maxLength: 255
                  type: string
                  description: Specify the Twitter backlink used in Twitter embed
                  example: myradio.ch
                twitter_hashtag:
                  title: twitter_hashtag
                  maxLength: 255
                  type: string
                  description: Specify the Twitter hashtag used in Twitter embed
                  example: radio,infomaniak
                type:
                  title: type
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                  type: integer
                  description: Specify the type of player
                  example: 1
                volume:
                  title: volume
                  maximum: 100
                  type: integer
                  description: Specify the default volume in the player
                  example: 50
                width:
                  title: width
                  exclusiveMinimum: true
                  pattern: /^\d+(\.\d{1
                  type: string
                  description: Specify the width in px for display the player
                  example: '505.00'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players/{player_id}/duplicate:
    post:
      tags:
        - Players
      summary: Duplicate player
      description: This endpoint allows you to duplicate a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Specify the name of the player, it is not used in the player
                  example: MySecondPlayer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players/{player_id}/reset:
    post:
      tags:
        - Players
      summary: Reset player
      description: This endpoint allows you to reset a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players/{player_id}/thumbnail:
    post:
      tags:
        - Players
      summary: Update thumbnail
      description: This endpoint allows you to update a thumbnail.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - thumbnail
                - type
              type: object
              properties:
                thumbnail:
                  title: thumbnail
                  maxLength: 3072
                  type: string
                  description: Specify the new thumbnail file for the player
                  format: binary
                type:
                  title: type
                  enum:
                    - loading
                    - restriction
                    - thumbnail
                    - unavailable
                  type: string
                  description: Specify the type of thumbnail will be changed
                  example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Players
      summary: Delete thumbnail
      description: This endpoint allows you to delete a thumbnail.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - type
              type: object
              properties:
                type:
                  title: type
                  enum:
                    - loading
                    - restriction
                    - thumbnail
                    - unavailable
                  type: string
                  description: Specify the type of thumbnail will be changed
                  example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/streams/available-mountpoint:
    post:
      tags:
        - Streams
      summary: Mountpoint is available
      description: This endpoint allows you to check if a stream mountpoint is available.
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - mountpoint
              type: object
              properties:
                mountpoint:
                  title: mountpoint
                  type: string
                  description: Specify the mountpoint to check the availability
                  example: /my-mountpoint.mp3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/hls_stream/{subdomain}/key:
    get:
      tags:
        - Hls Stream
      summary: Get hls stream key
      description: This endpoint allows you to get the hls stream key to decrypt hls chunk.
      parameters:
        - description: The subdomain of the hls stream.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: subdomain
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: index
            type: integer
            description: Specify the index of the hls chunk to get the matching key
            example: 1
          name: index
          in: query
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
  /1/radios/streams/{stream_uuid}/playlist:
    get:
      tags:
        - Streams
      summary: get playlist with stream url
      description: This endpoint allows you to get playlist file with stream url.
      parameters:
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: stream_uuid
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
  /1/radios/streams/{stream_uuid}/introduction-file:
    get:
      tags:
        - Streams
      summary: Get introduction file
      description: This endpoint allows you to get the introduction file for a stream.
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: stream_uuid
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
  /1/radios/playlist/{any}:
    get:
      tags:
        - Streams
      summary: Get playlist with legacy parameters
      description: This endpoint allows you to get playlist file with legacy parameters.
      parameters:
        - style: simple
          explode: true
          schema:
            type: string
          name: any
          in: path
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
  /1/radios/packs:
    get:
      tags:
        - Packs
      summary: List packs
      description: This endpoint allows you to retrieve all the packs.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Pack'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
  /1/radios:
    get:
      tags:
        - Radio Products
      summary: List products
      description: This endpoint allows you to retrieve all the products.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            exclusiveMinimum: true
            type: integer
            description: Specify the account
            example: 1
          name: account_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/RadioProduct'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}:
    get:
      tags:
        - Radio Products
      summary: Get product
      description: This endpoint allows you to retrieve a product.
      parameters:
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RadioProduct'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Radio Products
      summary: Update product
      description: This endpoint allows you to update a product.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                customer_name:
                  title: customer_name
                  maxLength: 255
                  type: string
                  description: Specify the name of the product
                  example: MyRadioProduct
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/users:
    get:
      tags:
        - Radio Products
      summary: List users
      description: This endpoint allows you to retrieve all users attach to the product.
      parameters:
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}:
    get:
      tags:
        - Stations
      summary: Get station
      description: This endpoint allows you to retrieve a station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Station_446a80a0'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Stations
      summary: Update station
      description: This endpoint allows you to update a station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                cluster_id:
                  title: cluster_id
                  type: integer
                  description: Specify the cluster
                  example: 1
                is_acpm:
                  title: is_acpm
                  type: boolean
                  description: Specify if you need the log for the ACPM
                  example: true
                is_daily_restart:
                  title: is_daily_restart
                  type: boolean
                  description: Specify if the station will restart daily
                  example: true
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: >-
                    Specify if you enable or disable the diffusion of all
                    streams
                  example: true
                is_send_logs:
                  title: is_send_logs
                  type: boolean
                  description: Specify if we send you the log
                  example: true
                log_login:
                  title: log_login
                  maxLength: 255
                  type: string
                  description: The login to connect to the log server
                  nullable: true
                  example: MyLogin
                log_password:
                  title: log_password
                  maxLength: 255
                  type: string
                  description: The password to connect to the log server
                  nullable: true
                  example: KeepItSecret
                log_path:
                  title: log_path
                  maxLength: 255
                  type: string
                  description: The path where the log is store
                  nullable: true
                  example: /my_log_foler
                log_server:
                  title: log_server
                  maxLength: 255
                  type: string
                  description: The server name to connect to the log server
                  nullable: true
                  example: mylogserver.ch
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Specify the name of the station
                  example: MyStation
                time_daily_restart:
                  title: time_daily_restart
                  maxLength: 255
                  type: string
                  description: Specify at which moment the daily restart begin
                  example: '22:15'
                timezone_daily_restart:
                  title: timezone_daily_restart
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Ciudad_Juarez
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Fort_Nelson
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Colombo
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kathmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Riyadh
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ulaanbaatar
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faroe
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/Perth
                    - Australia/Sydney
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Ulyanovsk
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zurich
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Wake
                    - Pacific/Wallis
                    - UTC
                  type: string
                  description: Specify the timezone of the daily restart
                  example: Europe/Zurich
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Stations
      summary: Delete station
      description: This endpoint allows you to delete a station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/players:
    get:
      tags:
        - Players
      summary: List station players
      description: This endpoint allows you to retrieve all the players in a station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Player'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/server_events:
    get:
      tags:
        - Server Events
      summary: List server events
      description: This endpoint allows you to retrieve master and edge events by date.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - type: array
                            items:
                              $ref: '#/components/schemas/ServerEvent'
                              schema: []
                          - type: integer
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/encoder_events:
    get:
      tags:
        - Encoder Events
      summary: List encoder events
      description: This endpoint allows you to retrieve encoder events by date.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - type: array
                            items:
                              $ref: '#/components/schemas/EncoderEvent'
                              schema: []
                          - type: integer
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/listeners:
    get:
      tags:
        - Stats > Stations
      summary: Get listeners
      description: This endpoint allows you to retrieve station listeners stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/listeners_per_minute:
    get:
      tags:
        - Stats > Stations
      summary: Get listeners per minute
      description: >-
        This endpoint allows you to retrieve station listeners stats per minute
        on last 24h.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatListenerPerMinute'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/countries:
    get:
      tags:
        - Stats > Stations
      summary: Get countries
      description: This endpoint allows you to retrieve station countries stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/countries_continent:
    get:
      tags:
        - Stats > Stations
      summary: Get countries by continent
      description: >-
        This endpoint allows you to retrieve station total countries stats by
        continent.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatCountryContinent'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stream_listeners:
    get:
      tags:
        - Stats > Stations
      summary: Get listeners by stream
      description: This endpoint allows you to retrieve station listeners stats by stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_empty
            type: boolean
            description: Define if stream without listener are in the return
            example: true
          name: with_empty
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatListenerByStation'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/consumption:
    get:
      tags:
        - Stats > Stations
      summary: Get consumption
      description: This endpoint allows you to retrieve station consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumption'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/total_consumption:
    get:
      tags:
        - Stats > Stations
      summary: Get total consumption
      description: This endpoint allows you to retrieve station total consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: integer
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stream_consumption:
    get:
      tags:
        - Stats > Stations
      summary: Get consumption by stream
      description: >-
        This endpoint allows you to retrieve station consumption stats by
        stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumptionByStream'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/players:
    get:
      tags:
        - Stats > Stations
      summary: Get players
      description: This endpoint allows you to retrieve players stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/total_players:
    get:
      tags:
        - Stats > Stations
      summary: Get total players
      description: This endpoint allows you to retrieve players total stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatTotalPlayer'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stats_by_stream:
    get:
      tags:
        - Stats > Stations
      summary: Get stats by streams
      description: This endpoint allows you to retrieve stats group by streams.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/export_csv:
    get:
      tags:
        - Stats > Stations
      summary: Export stats
      description: This endpoint allows you to export station stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - listeners_per_minute
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: stream_ids
            type: string
            description: List of stream ids for get stats
            example: 1,3,5
          name: stream_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_hls_stats
            type: boolean
            description: Define if hls stream will be count in the stats
            example: false
          name: with_hls_stats
          in: query
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/stats/links:
    get:
      tags:
        - Stats > Stations
      summary: List stats links
      description: This endpoint allows you to get all stats links.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatListLink'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/notification:
    get:
      tags:
        - Notifications
      summary: Get notification
      description: >-
        This endpoint allows you to retrieve the notification bind to the
        radio_product or station if it's exist.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            oneOf:
              - type: integer
              - nullable: true
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Notification'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Notifications
      summary: Update notification
      description: This endpoint allows you to update a notification.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                end_hour:
                  title: end_hour
                  type: string
                  description: Specify the last hour of the day to receive notification
                  example: '15:45:55'
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Specify if the notification is enabled
                  example: true
                is_friday:
                  title: is_friday
                  type: boolean
                  description: Specify if the notification can be sent the friday
                  example: true
                is_mail:
                  title: is_mail
                  type: boolean
                  description: Specify if the notification will be sent by mail
                  example: true
                is_monday:
                  title: is_monday
                  type: boolean
                  description: Specify if the notification can be sent the monday
                  example: true
                is_saturday:
                  title: is_saturday
                  type: boolean
                  description: Specify if the notification can be sent the saturday
                  example: true
                is_sms:
                  title: is_sms
                  type: boolean
                  description: Specify if the notification will be sent by sms
                  example: true
                is_sunday:
                  title: is_sunday
                  type: boolean
                  description: Specify if the notification can be sent the sunday
                  example: true
                is_thursday:
                  title: is_thursday
                  type: boolean
                  description: Specify if the notification can be sent the thursday
                  example: true
                is_tuesday:
                  title: is_tuesday
                  type: boolean
                  description: Specify if the notification can be sent the tuesday
                  example: true
                is_wednesday:
                  title: is_wednesday
                  type: boolean
                  description: Specify if the notification can be sent the wednesday
                  example: true
                start_hour:
                  title: start_hour
                  type: string
                  description: Specify the begin hour of the day to receive notification
                  example: '12:30:10'
                users:
                  title: users
                  maxLength: 255
                  type: string
                  description: Specify the list of account id will receive the notification
                  nullable: true
                  example: 1,2,5,7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}:
    get:
      tags:
        - Streams
      summary: Get stream
      description: This endpoint allows you to retrieve a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Stream'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Streams
      summary: Update stream
      description: This endpoint allows you to update a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                bitrate:
                  title: bitrate
                  enum:
                    - 24
                    - 32
                    - 48
                    - 64
                    - 96
                    - 128
                    - 192
                    - 256
                    - 320
                    - 512
                  type: integer
                  description: Specify the bitrate of the stream
                codec:
                  title: codec
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
                  description: Specify the codec of the stream
                country_list:
                  title: country_list
                  maxLength: 255
                  pattern: /^([A-Z]{2}
                  type: string
                  description: Specify the country list not allow accessing to the stream
                  nullable: true
                  example: IT,JP
                fallback_is_active_relay:
                  title: fallback_is_active_relay
                  type: boolean
                  description: Specify if the fallback is a relay stream
                  example: true
                fallback_relay_mountpoint:
                  title: fallback_relay_mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the relay mountpoint for the fallback
                  nullable: true
                  example: /myrelay-mountpoint.mp3
                fallback_relay_port:
                  title: fallback_relay_port
                  maximum: 65535
                  minimum: 1
                  type: integer
                  description: Specify the relay server port for the fallback
                  nullable: true
                  example: 0
                fallback_relay_server:
                  title: fallback_relay_server
                  maxLength: 255
                  type: string
                  description: Specify the relay server domain for the fallback
                  nullable: true
                  example: myrelayradio.ch
                hash_key:
                  title: hash_key
                  maxLength: 255
                  type: string
                  description: Specify the token to protect the stream
                  nullable: true
                  example: my-token
                ip_exclude_list:
                  title: ip_exclude_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list not allow accessing to the stream
                  nullable: true
                  example: 127.0.0.3,127.0.0.4
                ip_include_list:
                  title: ip_include_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list allow accessing to the stream
                  nullable: true
                  example: 127.0.0.1,127.0.0.2
                is_active_relay:
                  title: is_active_relay
                  type: boolean
                  description: Specify if this is a relay stream
                  example: true
                is_allow_country:
                  title: is_allow_country
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                is_fallback:
                  title: is_fallback
                  type: boolean
                  description: Specify is the new stream have a fallback
                  example: true
                is_hash_restriction:
                  title: is_hash_restriction
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                mountpoint:
                  title: mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the mountpoint of the stream
                  example: /my-mountpoint.mp3
                password:
                  title: password
                  maxLength: 255
                  type: string
                  description: Specify the password of the stream
                  example: KeepItSecret
                relay_mountpoint:
                  title: relay_mountpoint
                  maxLength: 255
                  type: string
                  description: Specify the relay mountpoint
                  nullable: true
                  example: /myrelay-mountpoint.mp3
                relay_port:
                  title: relay_port
                  maximum: 65535
                  minimum: 1
                  type: integer
                  description: Specify the relay server port
                  nullable: true
                  example: 0
                relay_server:
                  title: relay_server
                  maxLength: 255
                  type: string
                  description: Specify the relay server domain
                  nullable: true
                  example: myrelayradio.ch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Streams
      summary: Delete stream
      description: This endpoint allows you to delete a stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/actual-bitrate:
    get:
      tags:
        - Streams
      summary: Get actual bitrate
      description: This endpoint allows you to check real the bitrate of the stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/listeners:
    get:
      tags:
        - Stats > Streams
      summary: Get listeners
      description: This endpoint allows you to retrieve stream listeners stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/listeners_per_minute:
    get:
      tags:
        - Stats > Streams
      summary: Get listeners by minute
      description: >-
        This endpoint allows you to retrieve stream listeners stats by minute on
        last 24h.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatListenerPerMinute'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/countries:
    get:
      tags:
        - Stats > Streams
      summary: Get countries
      description: This endpoint allows you to retrieve stream countries stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/countries_continent:
    get:
      tags:
        - Stats > Streams
      summary: Get countries by continent
      description: >-
        This endpoint allows you to retrieve stream total countries stats by
        continent.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatCountryContinent'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/consumption:
    get:
      tags:
        - Stats > Streams
      summary: Get consumption
      description: This endpoint allows you to retrieve stream consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumption'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/total_consumption:
    get:
      tags:
        - Stats > Streams
      summary: Get total consumption
      description: This endpoint allows you to retrieve total stream consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: integer
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/players:
    get:
      tags:
        - Stats > Streams
      summary: Get players
      description: This endpoint allows you to retrieve players stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/total_players:
    get:
      tags:
        - Stats > Streams
      summary: Get total players
      description: This endpoint allows you to retrieve players total stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatTotalPlayer'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/export_csv:
    get:
      tags:
        - Stats > Streams
      summary: Export stats
      description: This endpoint allows you to export stream stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - listeners_per_minute
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream:
    get:
      tags:
        - Hls Stream
      summary: Get hls stream
      description: This endpoint allows you to retrieve a hls stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/HlsStream'
                        schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Hls Stream
      summary: Update hls stream
      description: This endpoint allows you to update a hls stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                bitrates:
                  title: bitrates
                  maxLength: 255
                  type: string
                  description: Specify the bitrates available in the hls stream
                  example: 64,96,128
                buffer_size:
                  title: buffer_size
                  minimum: 5
                  type: integer
                  description: Specify the buffer size of the hls stream
                  example: 5
                country_list:
                  title: country_list
                  maxLength: 255
                  pattern: /^([A-Z]{2}
                  type: string
                  description: >-
                    Specify the country list not allow accessing to the hls
                    stream
                  nullable: true
                  example: IT,CA
                domains:
                  title: domains
                  type: string
                  description: Specify the domains allow accessing to the hls stream
                  nullable: true
                  example: infomaniak.com,my-domain.com
                hash_key:
                  title: hash_key
                  maxLength: 255
                  type: string
                  description: Specify the token to protect the hls stream
                  nullable: true
                  example: my-token
                ip_exclude_list:
                  title: ip_exclude_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list not allow accessing to the hls stream
                  nullable: true
                  example: 127.0.0.3,127.0.0.4
                ip_include_list:
                  title: ip_include_list
                  maxLength: 255
                  type: string
                  description: Specify the ip list allow accessing to the hls stream
                  nullable: true
                  example: 127.0.0.1,127.0.0.2
                is_allow_country:
                  title: is_allow_country
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                is_hash_restriction:
                  title: is_hash_restriction
                  type: boolean
                  description: Specify if the access restriction rules is enabled
                  example: true
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Specify the name of the hls stream
                  example: MyHlsStream
                source_id:
                  title: source_id
                  type: integer
                  description: Specify the source stream of the hls stream
                  example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Hls Stream
      summary: Delete hls stream
      description: This endpoint allows you to delete a hls stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/listeners:
    get:
      tags:
        - Stats > HlsStream
      summary: Get listeners
      description: This endpoint allows you to retrieve hls stream listeners stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/listeners_per_minute:
    get:
      tags:
        - Stats > HlsStream
      summary: Get listeners by minute
      description: >-
        This endpoint allows you to retrieve hls stream listeners stats by
        minute on last 24h.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatListenerPerMinute'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/countries:
    get:
      tags:
        - Stats > HlsStream
      summary: Get countries
      description: This endpoint allows you to retrieve hls stream countries stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/countries_continent:
    get:
      tags:
        - Stats > HlsStream
      summary: Get countries by continent
      description: >-
        This endpoint allows you to retrieve hls stream total countries stats by
        continent.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatCountryContinent'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/consumption:
    get:
      tags:
        - Stats > HlsStream
      summary: Get consumption
      description: This endpoint allows you to retrieve hls stream consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumption'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/total_consumption:
    get:
      tags:
        - Stats > HlsStream
      summary: Get total consumption
      description: This endpoint allows you to retrieve total hls stream consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: integer
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/players:
    get:
      tags:
        - Stats > HlsStream
      summary: Get players
      description: This endpoint allows you to retrieve players stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/total_players:
    get:
      tags:
        - Stats > HlsStream
      summary: Get total players
      description: This endpoint allows you to retrieve players total stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatTotalPlayer'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/export_csv:
    get:
      tags:
        - Stats > HlsStream
      summary: Export stats
      description: This endpoint allows you to export hls stream stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - listeners_per_minute
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/notification:
    get:
      tags:
        - Notifications
      summary: Get notification
      description: >-
        This endpoint allows you to retrieve the notification bind to the
        radio_product or station if it's exist.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            oneOf:
              - type: integer
              - nullable: true
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Notification'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Notifications
      summary: Update notification radio product
      description: This endpoint allows you to update a notification for radio product.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                end_hour:
                  title: end_hour
                  type: string
                  description: Specify the last hour of the day to receive notification
                  example: '15:45:55'
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Specify if the notification is enabled
                  example: true
                is_friday:
                  title: is_friday
                  type: boolean
                  description: Specify if the notification can be sent the friday
                  example: true
                is_mail:
                  title: is_mail
                  type: boolean
                  description: Specify if the notification will be sent by mail
                  example: true
                is_monday:
                  title: is_monday
                  type: boolean
                  description: Specify if the notification can be sent the monday
                  example: true
                is_saturday:
                  title: is_saturday
                  type: boolean
                  description: Specify if the notification can be sent the saturday
                  example: true
                is_sms:
                  title: is_sms
                  type: boolean
                  description: Specify if the notification will be sent by sms
                  example: true
                is_sunday:
                  title: is_sunday
                  type: boolean
                  description: Specify if the notification can be sent the sunday
                  example: true
                is_thursday:
                  title: is_thursday
                  type: boolean
                  description: Specify if the notification can be sent the thursday
                  example: true
                is_tuesday:
                  title: is_tuesday
                  type: boolean
                  description: Specify if the notification can be sent the tuesday
                  example: true
                is_wednesday:
                  title: is_wednesday
                  type: boolean
                  description: Specify if the notification can be sent the wednesday
                  example: true
                start_hour:
                  title: start_hour
                  type: string
                  description: Specify the begin hour of the day to receive notification
                  example: '12:30:10'
                users:
                  title: users
                  maxLength: 255
                  type: string
                  description: Specify the list of account id will receive the notification
                  nullable: true
                  example: 1,2,5,7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players/{player_id}:
    get:
      tags:
        - Players
      summary: Get player
      description: This endpoint allows you to retrieve a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Players
      summary: Update player
      description: This endpoint allows you to update a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                background_color:
                  title: background_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the background color used in the player
                  example: '202020'
                button_color:
                  title: button_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the button color used in the player
                  example: FFFFFF
                display_name:
                  title: display_name
                  maxLength: 255
                  type: string
                  description: Specify the name uses to display in the player
                  example: Radio Player
                domains:
                  title: domains
                  maxLength: 255
                  type: string
                  description: Specify the domains allow accessing to the player
                  example: infomaniak.ch,myradio.ch
                facebook_link:
                  title: facebook_link
                  maxLength: 255
                  type: string
                  description: Specify the Facebook link used in Facebook embed
                  example: myradio.ch
                height:
                  title: height
                  exclusiveMinimum: true
                  pattern: /^\d+(\.\d{1
                  type: string
                  description: Specify the height in px for display the player
                  example: '144.00'
                is_auto_start:
                  title: is_auto_start
                  type: boolean
                  description: Specify if the auto start is enabled
                  example: true
                is_cover:
                  title: is_cover
                  type: boolean
                  description: Specify if the cover will be displayed
                  example: true
                is_embed:
                  title: is_embed
                  type: boolean
                  description: Specify if the embed url will be displayed int the player
                  example: true
                is_facebook_embed:
                  title: is_facebook_embed
                  type: boolean
                  description: >-
                    Specify if the Facebook embed url will be displayed int the
                    player
                  example: true
                is_listeners:
                  title: is_listeners
                  type: boolean
                  description: Specify if listeners information is displayed
                  example: true
                is_listeners_hold:
                  title: is_listeners_hold
                  type: boolean
                  description: Specify if listeners hold is used
                  example: true
                is_logo:
                  title: is_logo
                  type: boolean
                  description: Specify if the logo Infomaniak is displayed
                  example: true
                is_metadata_display:
                  title: is_metadata_display
                  type: boolean
                  description: Specify if the metadata title and artist will be visible
                  example: true
                is_spectrum:
                  title: is_spectrum
                  type: boolean
                  description: Specify if the spectrum will be displayed
                  example: true
                is_station_thumbnail:
                  title: is_station_thumbnail
                  type: boolean
                  description: Specify if the station thumbnail will be displayed
                  example: true
                is_twitter_embed:
                  title: is_twitter_embed
                  type: boolean
                  description: >-
                    Specify if the Twitter embed url will be displayed int the
                    player
                  example: true
                language:
                  title: language
                  maxLength: 255
                  enum:
                    - de
                    - en
                    - es
                    - fr
                    - it
                  type: string
                  description: Specify the language used in the player
                listeners_hold:
                  title: listeners_hold
                  type: integer
                  description: Specify listeners hold for listeners information
                  example: 100
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Specify the name of the player, it is not used in the player
                  example: MyPlayer
                secondary_color:
                  title: secondary_color
                  maxLength: 255
                  pattern: /^[0-9A-F]{6}$/
                  type: string
                  description: Specify the secondary color used in the player
                  example: 0098FF
                stations:
                  title: stations
                  type: array
                  items:
                    title: item
                    type: object
                    properties:
                      id:
                        title: id
                        type: integer
                        description: Specify the id of the station
                        example: 1
                      is_main:
                        title: is_main
                        type: boolean
                        description: Specify if the station is the main station to listen
                        example: true
                      order:
                        title: order
                        type: integer
                        description: Specify the order of the station in the list
                        example: 1
                      streams:
                        title: streams
                        maxItems: 3
                        type: array
                        items:
                          title: item
                          type: object
                          properties:
                            id:
                              title: id
                              type: integer
                              description: Specify the id of the stream to use
                              example: 1
                            is_main:
                              title: is_main
                              type: boolean
                              description: >-
                                Specify if the stream is the main stream of the
                                station
                              example: true
                        description: >-
                          Specify the list of streams used in the super player
                          by station
                      hls_stream:
                        title: hls_stream
                        type: object
                        properties:
                          id:
                            title: id
                            type: integer
                            description: Specify the HLS Stream id used in the player
                            example: 2
                          is_main:
                            title: is_main
                            type: boolean
                            description: >-
                              Specify if the HLS stream is the main stream of
                              this station
                            example: true
                  description: Specify the list of stations used in the super player
                twitter_account:
                  title: twitter_account
                  maxLength: 255
                  type: string
                  description: Specify the Twitter account will be used in Twitter embed
                  example: MyAccount
                twitter_backlink:
                  title: twitter_backlink
                  maxLength: 255
                  type: string
                  description: Specify the Twitter backlink used in Twitter embed
                  example: myradio.ch
                twitter_hashtag:
                  title: twitter_hashtag
                  maxLength: 255
                  type: string
                  description: Specify the Twitter hashtag used in Twitter embed
                  example: radio,infomaniak
                type:
                  title: type
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                  type: integer
                  description: Specify the type of player
                  example: 1
                volume:
                  title: volume
                  maximum: 100
                  type: integer
                  description: Specify the default volume in the player
                  example: 50
                width:
                  title: width
                  exclusiveMinimum: true
                  pattern: /^\d+(\.\d{1
                  type: string
                  description: Specify the width in px for display the player
                  example: '505.00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Players
      summary: Delete player
      description: This endpoint allows you to delete a player.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/players/{player_id}/integrate:
    get:
      tags:
        - Players
      summary: Integrate
      description: This endpoint allows you to integrate a player iframe.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/listeners:
    get:
      tags:
        - Stats > Radio Products
      summary: Get listeners
      description: This endpoint allows you to retrieve product listeners stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/listeners_per_minute:
    get:
      tags:
        - Stats > Radio Products
      summary: Get listeners per minute
      description: >-
        This endpoint allows you to retrieve product listeners stats per minute
        on last 24h.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatListenerPerMinute'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/countries:
    get:
      tags:
        - Stats > Radio Products
      summary: Get countries
      description: This endpoint allows you to retrieve product countries stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/countries_continent:
    get:
      tags:
        - Stats > Radio Products
      summary: Get countries by continent
      description: >-
        This endpoint allows you to retrieve product total countries stats by
        continent.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatCountryContinent'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/station_listeners:
    get:
      tags:
        - Stats > Radio Products
      summary: Get listeners by station
      description: This endpoint allows you to retrieve product listeners stats by station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
        - style: form
          explode: true
          schema:
            title: with_empty
            type: boolean
            description: Define if station without listener are in the return
            example: true
          name: with_empty
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatListenerByStation_21e42669'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/consumption:
    get:
      tags:
        - Stats > Radio Products
      summary: Get consumption
      description: This endpoint allows you to retrieve product consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumption'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/total_consumption:
    get:
      tags:
        - Stats > Radio Products
      summary: Get total consumption
      description: This endpoint allows you to retrieve product total consumption stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: integer
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/station_consumption:
    get:
      tags:
        - Stats > Radio Products
      summary: Get consumption by station
      description: >-
        This endpoint allows you to retrieve product consumption stats by
        station.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatConsumptionByStation'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/players:
    get:
      tags:
        - Stats > Radio Products
      summary: Get players
      description: This endpoint allows you to retrieve players stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/total_players:
    get:
      tags:
        - Stats > Radio Products
      summary: Get total players
      description: This endpoint allows you to retrieve total players stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatTotalPlayer'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/stats_by_station:
    get:
      tags:
        - Stats > Radio Products
      summary: Get stats by stations
      description: This endpoint allows you to retrieve stats group by stations.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stats/export_csv:
    get:
      tags:
        - Stats > Radio Products
      summary: Export stats
      description: This endpoint allows you to export product stats.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - required: true
          style: form
          explode: true
          schema:
            title: datatype
            enum:
              - consumption
              - countries
              - listeners
              - listeners_per_minute
              - players
            type: string
          name: datatype
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: from
            type: string
            description: Specify the starting date to get stats
            example: 2022-01-01, 2022-01-01 00:00:00, 1640995200
          name: from
          in: query
        - style: form
          explode: true
          schema:
            title: station_ids
            type: string
            description: List of station ids for get stats
            example: 1,3,5
          name: station_ids
          in: query
        - required: true
          style: form
          explode: true
          schema:
            title: to
            type: string
            description: Specify the ending date to get stats
            example: 2022-12-31, 2022-12-31 00:00:00, 1672444800
          name: to
          in: query
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/options:
    get:
      tags:
        - Radio Product Options
      summary: List radio product options
      description: >-
        This endpoint allows you to retrieve all the option attach to a radio
        product.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/RadioProductOptionShop'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/unbind:
    delete:
      tags:
        - Streams
      summary: Delete stream and unbind
      description: >-
        This endpoint allows you to delete a stream and convert transcoding
        stream to standard stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - streams_id_to_unbind
              type: object
              properties:
                streams_id_to_unbind:
                  title: streams_id_to_unbind
                  type: string
                  description: Specify the stream id will be unbind
                  example: 1,4,7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding:
    delete:
      tags:
        - Transcodings
      summary: Delete transcoding
      description: This endpoint allows you to delete transcoding.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/{stream_id}:
    delete:
      tags:
        - Transcodings
      summary: Remove transcoded stream
      description: This endpoint allows you to remove transcoded stream.
      parameters:
        - description: The unique identifier (ID) of the radio product to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: radio_product_id
          in: path
        - description: The unique identifier (ID) of the station to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: station_id
          in: path
        - description: The unique identifier (ID) of the transcoded stream to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: stream_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/signatures:
    get:
      tags:
        - Service Mail > Signatures
      summary: List signatures
      description: Returns list of signature models for given service mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    post:
      tags:
        - Service Mail > Signatures
      summary: Create signature
      description: Create new signature model for given service mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - content
                - name
              type: object
              properties:
                content:
                  title: content
                  maxLength: 65536
                  type: string
                default:
                  title: default
                  type: boolean
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Name of the resource `{name}`
                position:
                  title: position
                  enum:
                    - bottom
                    - top
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/signatures/upload:
    post:
      tags:
        - Service Mail > Signatures
      summary: Upload an image
      description: Upload an image.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - image
              type: object
              properties:
                image:
                  title: image
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NewSignatureAsset'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/auto_replies:
    get:
      tags:
        - Service Mail > Auto Reply
      summary: List auto replies
      description: Returns list of auto replies models for given service mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    post:
      tags:
        - Service Mail > Auto Reply
      summary: Create auto reply
      description: Create new auto reply for given service mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - is_recurrent
                - message
              type: object
              properties:
                dont_reply_to:
                  title: dont_reply_to
                  type: array
                  description: List of emails the auto reply won't respond to
                  example: '[test@tests.ch]'
                ended_at:
                  title: ended_at
                  type: integer
                  description: Timestamp `{name}` has ended
                  nullable: true
                is_recurrent:
                  title: is_recurrent
                  type: boolean
                  description: 'Is the `{name}` active in a cycle ? '
                is_visible:
                  title: is_visible
                  type: boolean
                message:
                  title: message
                  maxLength: 65536
                  type: string
                recurrent_days:
                  title: recurrent_days
                  type: array
                  items:
                    title: item
                    type: boolean
                  description: List of the days when the auto reply is activated
                started_at:
                  title: started_at
                  type: integer
                  description: Timestamp `{name}` has been started
                  nullable: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/filters:
    get:
      tags:
        - Service Mail > Filters
      summary: List filters
      description: Returns filters for given Service Mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
      security:
        - bearerAuth: []
    post:
      tags:
        - Service Mail > Filters
      summary: Create service mail filter
      description: |-
        Create filters for given Service Mail

        *
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes:
    get:
      tags:
        - Mailbox management
      summary: List mailboxes
      description: >-
        This endpoint allows you to retrieve all the mailboxes for a given mail
        hosting.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - style: form
          explode: true
          schema:
            type: string
          name: search
          in: query
        - style: form
          explode: true
          schema:
            type: string
          name: filter_by
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema: []
        - $ref: '#/components/parameters/PerPage'
          schema: []
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Mailbox'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailbox management
      summary: Add a mailbox
      description: Creates a new mailbox in the mail hosting.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - mailbox_name
                - password
              type: object
              properties:
                mailbox_name:
                  title: mailbox_name
                  type: string
                  description: Mailbox
                password:
                  title: password
                  type: string
                  description: Mailbox password
                link_to_current_user:
                  title: link_to_current_user
                  type: boolean
                  description: >-
                    Link mailbox to current user to access this address from the
                    Mail tool. (default value is set to `true` if target is
                    current_user)
                target:
                  title: target
                  type: string
                  description: current_user|other_user
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxStore'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_spam_filter:
    post:
      tags:
        - Mailboxes > Actions
      summary: Toggle spam filter
      description: Toggle spam filter on given mailboxes
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - enabled
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                enabled:
                  title: enabled
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_promotion_filter:
    post:
      tags:
        - Mailboxes > Actions
      summary: Toggle promotions filter
      description: Toggle promotions filter on given mailboxes
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - enabled
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                enabled:
                  title: enabled
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/set_permissions:
    post:
      tags:
        - Mailboxes > Actions
      summary: Set global permissions to mailbox
      description: Set global permissions to mailbox
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_auto_reply:
    post:
      tags:
        - Mailboxes > Actions
      summary: Set global permissions to mailbox
      description: Toggle auto reply on / off on given mailboxes
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - enabled
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                enabled:
                  title: enabled
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
                service_mail_auto_reply_id:
                  title: service_mail_auto_reply_id
                  type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/delete_redirects:
    post:
      tags:
        - Mailboxes > Actions
      summary: Delete all redirections for given mailboxes
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/apply_signature:
    post:
      tags:
        - Mailboxes > Actions
      summary: Apply a service mail signature model to given mailboxes
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - service_mail_signature_id
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
                service_mail_signature_id:
                  title: service_mail_signature_id
                  type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/invitations:
    post:
      tags:
        - Mailboxes > Users
      summary: Add an invitation
      description: Create a new invitation of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - permissions
              type: object
              properties:
                permissions:
                  title: permissions
                  type: array
                  items:
                    type: string
                  description: >-
                    (can_manage_filters, can_manage_security,
                    can_manage_aliases, can_manage_redirections,

                    can_manage_signatures, can_manage_auto_reply,
                    can_change_password, can_configure_mail_folders)
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WorkspaceInvitation'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - mailbox_is_blocked
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Mailbox is blocked
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Mailbox is blocked:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_blocked
                      description: Mailbox is blocked
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/set_activation:
    put:
      tags:
        - Mailboxes > Sieve filters
      summary: Enable / disable filter
      description: >-
        Enable or disable the filter of a given mailbox linked to the current
        user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - is_enabled
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Name of the filter
                is_enabled:
                  title: is_enabled
                  type: string
                  description: Specify if the filter is enabled or disabled
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                              - sieve_load_error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                              - Sieve load error
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/reorder:
    put:
      tags:
        - Mailboxes > Sieve filters
      summary: Reorder filters
      description: Reorder the filters of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - order
              type: object
              properties:
                order:
                  title: order
                  type: array
                  items:
                    type: string
                  description: Array of Filter names
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_mailbox_filters
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                              - sieve_load_error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid mailbox filters
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                              - Sieve load error
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid mailbox filters:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_filters
                      description: Invalid mailbox filters
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters:
    get:
      tags:
        - Mailboxes > Sieve filters
      summary: List filters
      description: Retrieve the sieve filters of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxFilter'
                        schema: []
        '400':
          description: Invalid mailbox password
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: invalid_mailbox_password
                          description:
                            enum:
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Invalid mailbox password
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailboxes > Sieve filters
      summary: Add a filter
      description: Add a filter to the given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PostSieveFilter'
                  schema: []
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Sieve load error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_filter_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                              - sieve_load_error
                            type: string
                            description: Error code
                            example: sieve_load_error
                          description:
                            enum:
                              - Invalid filter name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                              - Sieve load error
                            type: string
                            description: Description of the error
                            example: Sieve load error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Sieve filters
      summary: Delete a filter
      description: Delete a filter from the given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Name of the filter
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                              - sieve_load_error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                              - Sieve load error
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Sieve filters
      summary: Update a filter
      description: Update the filter of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PatchSieveFilter'
                  schema: []
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                              - sieve_load_error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                              - Sieve load error
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts:
    post:
      tags:
        - Mailboxes > Sieve filters
      summary: Add a script
      description: Add a sieve script to a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - content
                - is_enabled
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Filter script name
                content:
                  title: content
                  type: string
                  description: Filter script content
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Specify if the script is enabled or disabled
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_script_content
                              - invalid_filter_script_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter script content
                              - Invalid filter script name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid filter script content:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_content
                      description: Invalid filter script content
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Sieve filters
      summary: Delete a script
      description: Delete a sieve script from the given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Filter name
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_script_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter script name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Sieve filters
      summary: Update a script
      description: Update a sieve script for a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - content
                - is_enabled
                - name
                - old_name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Filter script name
                old_name:
                  title: old_name
                  type: string
                  description: Filter script old name
                content:
                  title: content
                  type: string
                  description: Filter script content
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Specify if the script is enabled or disabled
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_script_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter script name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts/set_activation:
    put:
      tags:
        - Mailboxes > Sieve filters
      summary: Enable / disable script
      description: >-
        Enable / disable a filter script for a given mailbox linked to the
        current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - is_enabled
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Filter script name
                is_enabled:
                  title: is_enabled
                  type: string
                  description: Specify if the script is enabled or disabled
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_filter_script_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid filter script name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts/import:
    put:
      tags:
        - Mailboxes > Sieve filters
      summary: Import .siv file
      description: Import .siv file in a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - file
                - name
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Filter script name
                file:
                  title: file
                  type: string
                  description: Base64 Filter script content
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - import_filter_script_error
                              - invalid_filter_script_name
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Import filter script error
                              - Invalid filter script name
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Import filter script error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: import_filter_script_error
                      description: Import filter script error
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders:
    get:
      tags:
        - Mailboxes > Folders
      summary: List folders
      description: Retrieves the folders of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxFolder'
                        schema: []
        '400':
          description: Invalid mailbox password
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: invalid_mailbox_password
                          description:
                            enum:
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Invalid mailbox password
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Mailboxes > Folders
      summary: Update folders
      description: >-
        Updates the folder mapping configuration for the draft, trash, sent an
        spam folders of a given mailbox linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - archives_folder
                - commercials_folder
                - draft_folder
                - sent_folder
                - social_networks_folder
                - spam_folder
                - trash_folder
              type: object
              properties:
                draft_folder:
                  title: draft_folder
                  type: string
                  description: Draft folder name
                trash_folder:
                  title: trash_folder
                  type: string
                  description: Trash folder name
                sent_folder:
                  title: sent_folder
                  type: string
                  description: Sent folder name
                spam_folder:
                  title: spam_folder
                  type: string
                  description: Spam folder name
                archives_folder:
                  title: archives_folder
                  type: string
                  description: Archives folder name
                commercials_folder:
                  title: commercials_folder
                  type: string
                  description: Folder for Commercial emails filter
                social_networks_folder:
                  title: social_networks_folder
                  type: string
                  description: Folder for SocialNetwork emails filter
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Invalid mailbox folders
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_mailbox_folders
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: invalid_mailbox_folders
                          description:
                            enum:
                              - Invalid mailbox folders
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Invalid mailbox folders
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Invalid mailbox folders:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_folders
                      description: Invalid mailbox folders
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/upload:
    post:
      tags:
        - Mailboxes > Signatures
      summary: Upload an image
      description: Upload an image.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - image
              type: object
              properties:
                image:
                  title: image
                  type: string
                  description: Base64 image content (png,jpg,jpeg or gif MIME type)
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NewSignatureAsset'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures:
    get:
      tags:
        - Mailboxes > Signatures
      summary: List signatures
      description: Get a list of selected Mailbox Signatures.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxSignature'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailboxes > Signatures
      summary: Add a signature
      description: Create a new signature for the given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
                - reply_to_id
                - sender_id
              type: object
              properties:
                name:
                  title: name
                  type: string
                  description: Signature's name
                reply_to_id:
                  title: reply_to_id
                  type: integer
                  description: Validated sender/reply address identifier
                sender_id:
                  title: sender_id
                  type: integer
                  description: Validated sender/reply address identifier
                content:
                  title: content
                  type: string
                  description: HTML content of the signature
                position:
                  title: position
                  type: string
                  description: Text location (top|bottom)
                full_name:
                  title: full_name
                  type: string
                  description: The full name (generally first name and surname)
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/check_verified:
    post:
      tags:
        - Mailboxes > Headers
      summary: Check if email is already validated
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Email not validated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - email_not_validated
                            type: string
                            description: Error code
                            example: email_not_validated
                          description:
                            enum:
                              - Email not validated
                            type: string
                            description: Description of the error
                            example: Email not validated
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Email not validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: email_not_validated
                      description: Email not validated
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/forwarding_addresses:
    get:
      tags:
        - Mailboxes > Forwarding
      summary: List forwarding
      description: >-
        Retrieves information about the forwarding configuration of a given
        mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxForwarding'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailboxes > Forwarding
      summary: Add a forwarding
      description: Adds a new forwarding address to the given mailbox
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - redirect_address
              type: object
              properties:
                redirect_address:
                  title: redirect_address
                  type: string
                  description: Redirect address
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NewMailboxForwarding'
                        schema: []
        '400':
          description: Too much redirections
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - incorrect_redirect_address
                              - max_mailbox_redirection
                              - redirect_address_already_exists
                              - too_much_redirections
                            type: string
                            description: Error code
                            example: too_much_redirections
                          description:
                            enum:
                              - Incorrect redirect address
                              - Max mailbox redirection
                              - Redirect address already exists
                              - Too much redirections
                            type: string
                            description: Description of the error
                            example: Too much redirections
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Too much redirections:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_much_redirections
                      description: Too much redirections
                      errors: []
                Redirect address already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_already_exists
                      description: Redirect address already exists
                      errors: []
                Max mailbox redirection:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: max_mailbox_redirection
                      description: Max mailbox redirection
                      errors: []
                Incorrect redirect address:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: incorrect_redirect_address
                      description: Incorrect redirect address
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Forwarding
      summary: Delete all forwardings
      description: Deletes all configured forwarding addresses of the given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Forwarding
      summary: Update a forwarding
      description: Update a given mailbox forwarding.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Enable or disable forwarding
                redirect_addresses:
                  title: redirect_addresses
                  description: Redirect address or addresses
                has_dont_deliver:
                  title: has_dont_deliver
                  type: boolean
                  description: Delete messages from the server after sending
                has_forward_spam:
                  title: has_forward_spam
                  type: boolean
                  description: Transmit spam messages
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - redirect_address_alias_or_mailboxname
                              - too_much_redirections
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Redirect address alias or mailboxname
                              - Too much redirections
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Redirect address alias or mailboxname:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_alias_or_mailboxname
                      description: Redirect address alias or mailboxname
                      errors: []
                Too much redirections:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_much_redirections
                      description: Too much redirections
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/model:
    get:
      tags:
        - Mailboxes > Auto reply
      summary: List auto replies models
      description: Get auto replies models available for a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailboxes > Auto reply
      summary: Add auto reply model
      description: Create an auto replies model for a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/reset:
    put:
      tags:
        - Mailboxes > Auto reply
      summary: Reset an auto reply
      description: Resets the count of automatic replies that were sent per sender.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/aliases:
    get:
      tags:
        - Mailboxes > Aliases
      summary: List aliases
      description: >-
        This endpoint allows you to retrieve all the aliases for a given
        mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxAlias'
                        schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Mailboxes > Aliases
      summary: Update aliases
      description: Updates the list of aliases for a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - aliases
              type: object
              properties:
                aliases:
                  title: aliases
                  type: array
                  items:
                    type: string
                  description: Aliases to update.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - alias_limit_reached
                              - cannot_create_alias_for_generic_mailbox
                              - error
                              - unknown_error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Alias limit reached
                              - Bad Request
                              - Cannot create alias for generic mailbox
                              - Unknown error
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot create alias for generic mailbox:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_for_generic_mailbox
                      description: Cannot create alias for generic mailbox
                      errors: []
                Alias limit reached:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_limit_reached
                      description: Alias limit reached
                      errors: []
                Unknown error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unknown_error
                      description: Unknown error
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Mailboxes > Aliases
      summary: Add an alias
      description: Creates an alias on the given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - alias
              type: object
              properties:
                alias:
                  title: alias
                  type: string
                  description: New alias for the mailbox.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - alias_already_exists
                              - alias_limit_reached
                              - cannot_create_alias_for_generic_mailbox
                              - cannot_create_alias_with_a_redirection
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Alias already exists
                              - Alias limit reached
                              - Bad Request
                              - Cannot create alias for generic mailbox
                              - Cannot create alias with a redirection
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot create alias for generic mailbox:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_for_generic_mailbox
                      description: Cannot create alias for generic mailbox
                      errors: []
                Cannot create alias with a redirection:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_with_a_redirection
                      description: Cannot create alias with a redirection
                      errors: []
                Alias already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_already_exists
                      description: Alias already exists
                      errors: []
                Alias limit reached:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_limit_reached
                      description: Alias limit reached
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings:
    get:
      tags:
        - Product management
      summary: List products
      description: >-
        Returns a variety of information about one or more Hosting Mail from an
        Account identifier.
      parameters:
        - description: Unique identifier of the Account to request.
          required: true
          style: form
          explode: true
          schema:
            type: integer
          name: account_id
          in: query
        - description: Search filter.
          style: form
          explode: true
          schema:
            type: string
          name: search
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - customer_name
              - internal_name
              - expired_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[customer_name]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ServiceMail'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/csv:
    get:
      tags:
        - Product management
      summary: Export products as csv
      description: Returns a variety of information about one or more Hosting Mail as CSV.
      parameters:
        - description: Account identifier
          required: true
          style: form
          explode: true
          schema:
            type: integer
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MailHosting'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/invitations:
    get:
      tags:
        - Product management
      summary: List workspace invitation
      description: >-
        Returns a variety of information about one or more Workspace invitation
        from an Account identifier.
      parameters:
        - description: Account identifier
          required: true
          style: form
          explode: true
          schema:
            type: integer
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkspaceInvitation'
                          schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}:
    get:
      tags:
        - Product management
      summary: Display a product
      description: Get informations for a given hosting mail.
      parameters:
        - description: Unique identifier of the Hosting Mail to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ServiceMail'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/preferences:
    get:
      tags:
        - Service Mail > Preferences
      summary: List preferences
      description: Returns preferences for given Service Mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ServiceMailpreferences'
                        schema: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Service Mail > Preferences
      summary: Update preferences
      description: Update preferences for given service Mail
      parameters:
        - style: simple
          explode: true
          schema:
            type: string
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                authorized_senders:
                  title: authorized_senders
                  type: array
                  items:
                    title: item
                    type: string
                blocked_senders:
                  title: blocked_senders
                  type: array
                  items:
                    title: item
                    type: string
                default_permission:
                  title: default_permission
                  type: array
                  items:
                    title: item
                    type: boolean
                dkim_enabled:
                  title: dkim_enabled
                  type: boolean
                promotion_filter_enabled:
                  title: promotion_filter_enabled
                  type: boolean
                spam_filter_enabled:
                  title: spam_filter_enabled
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/signatures/{signature_id}:
    get:
      tags:
        - Service Mail > Signatures
      summary: Show a signature model
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: signature_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    delete:
      tags:
        - Service Mail > Signatures
      summary: Delete signature
      description: Delete signature model
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: Signature identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: signature_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                send_mail:
                  title: send_mail
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Service Mail > Signatures
      summary: Update signature
      description: Update signature model
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: signature_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                content:
                  title: content
                  maxLength: 65536
                  type: string
                default:
                  title: default
                  type: boolean
                name:
                  title: name
                  maxLength: 255
                  type: string
                  description: Name of the resource `{name}`
                position:
                  title: position
                  enum:
                    - bottom
                    - top
                  type: string
                send_mail:
                  title: send_mail
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/auto_replies/{auto_reply_id}:
    get:
      tags:
        - Service Mail > Auto Reply
      summary: Show a specific auto reply
      description: Show a specific auto reply model
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: auto_reply_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    delete:
      tags:
        - Service Mail > Auto Reply
      summary: Delete auto reply
      description: Delete auto reply
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: auto_reply_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Service Mail > Auto Reply
      summary: Update auto reply
      description: Update auto reply
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: ServiceMailAutoReply identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: auto_reply_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                dont_reply_to:
                  title: dont_reply_to
                  type: array
                  description: List of emails the auto reply won't respond to
                  example: '[test@tests.ch]'
                ended_at:
                  title: ended_at
                  type: integer
                  description: Timestamp `{name}` has ended
                  nullable: true
                is_visible:
                  title: is_visible
                  type: boolean
                message:
                  title: message
                  maxLength: 65536
                  type: string
                recurrent_days:
                  title: recurrent_days
                  type: array
                  items:
                    title: item
                    type: boolean
                  description: List of the days when the auto reply is activated
                started_at:
                  title: started_at
                  type: integer
                  description: Timestamp `{name}` has been started
                  nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/filters/{filter_id}:
    get:
      tags:
        - Service Mail > Filters
      summary: Show a specific service mail filter
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: filter_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    put:
      tags:
        - Service Mail > Filters
      summary: Update service mail filter
      description: Update filter for given Service Mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: Sieve filter identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: filter_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Service Mail > Filters
      summary: Delete  filter
      description: Delete  filters for given Service Mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: Sieve filter identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: filter_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/batch/{batchId}:
    get:
      tags:
        - Mailboxes > Actions
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: batchId
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/users:
    get:
      tags:
        - Mailbox management
      summary: List users
      description: >-
        Returns a variety of information about one or more users for a given
        mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WorkspaceUserList'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/invitations:
    get:
      tags:
        - Mailbox management
      summary: List user invitations
      description: >-
        Returns a variety of information about one or more user invitations for
        a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkspaceInvitation'
                          schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}:
    get:
      tags:
        - Mailbox management
      summary: Display a mailbox
      description: >-
        Returns a variety of information about a single a Mailbox specified by
        the requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Mailbox'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailbox management
      summary: Delete a mailbox
      description: Deletes a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - mailbox_cannot_delete_quarantine
                              - mailbox_is_ldap_locked
                              - mailbox_is_smtpban
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Mailbox cannot delete quarantine
                              - Mailbox is ldap locked
                              - Mailbox is smtpban
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Mailbox is smtpban:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_smtpban
                      description: Mailbox is smtpban
                      errors: []
                Mailbox is ldap locked:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_ldap_locked
                      description: Mailbox is ldap locked
                      errors: []
                Mailbox cannot delete quarantine:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_cannot_delete_quarantine
                      description: Mailbox cannot delete quarantine
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailbox management
      summary: Update a mailbox
      description: Updates a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                password:
                  title: password
                  type: string
                  description: Mailbox password
                full_name:
                  title: full_name
                  type: string
                  description: Specify full name
                note:
                  title: note
                  type: string
                  description: Add a note
                has_move_spam:
                  title: has_move_spam
                  type: boolean
                  description: Specify if spam are moved to spam folder
                authorized_senders:
                  title: authorized_senders
                  description: Specify white list
                blocked_senders:
                  title: blocked_senders
                  description: Specify black list
                has_responder:
                  title: has_responder
                  type: boolean
                  description: Specify if mailbox responder is enabled
                has_mail_filtering:
                  title: has_mail_filtering
                  type: boolean
                  description: Specify if mail filtering is enabled
                mail_filtering_folder_commercials:
                  title: mail_filtering_folder_commercials
                  type: string
                  description: Specify commercial folder
                mail_filtering_folder_social_networks:
                  title: mail_filtering_folder_social_networks
                  type: string
                  description: Specify social networks folder
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/users:
    get:
      tags:
        - Mailboxes > Users
      summary: List users
      description: Retrieves the users of a given mailbox alias
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WorkspaceUser'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/invitations:
    get:
      tags:
        - Mailboxes > Users
      summary: List user invitations
      description: Retrieves the user invitations of a given mailbox alias.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkspaceInvitation'
                          schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/models:
    get:
      tags:
        - Mailboxes > Signatures
      summary: List signatures
      description: Returns list of signature models for given service mail
      parameters:
        - description: ServiceMail identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/{signature_id}:
    get:
      tags:
        - Mailboxes > Signatures
      summary: Display a signature
      description: Retrieves information about a given signature
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: The unique identifier (ID) of the signature to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: signature_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxSignatureElement'
                        schema: []
        '400':
          description: Signature does not exist
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - signature_does_not_exist
                            type: string
                            description: Error code
                            example: signature_does_not_exist
                          description:
                            enum:
                              - Signature does not exist
                            type: string
                            description: Description of the error
                            example: Signature does not exist
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Signatures
      summary: Delete a signature
      description: Deletes the given mailbox signature.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: The unique identifier (ID) of the signature to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: signature_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - signature_does_not_exist
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Signature does not exist
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Signatures
      summary: Update a signature
      description: Updates a given mailbox signature.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: The unique identifier (ID) of the signature to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: signature_id
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - reply_to_id
                - sender_id
              type: object
              properties:
                reply_to_id:
                  title: reply_to_id
                  type: integer
                  description: Validated sender/reply address identifier
                sender_id:
                  title: sender_id
                  type: integer
                  description: Validated sender/reply address identifier
                is_default:
                  title: is_default
                  type: boolean
                  description: Set signature as default
                position:
                  title: position
                  type: string
                  description: Text location (top|bottom)
                content:
                  title: content
                  type: string
                  description: HTML content of the signature
                full_name:
                  title: full_name
                  type: string
                  description: The full name (generally first name and surname)
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - invalid_reply_to_code
                              - invalid_sender_code
                              - signature_does_not_exist
                              - signature_name_already_exists
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Invalid reply to code
                              - Invalid sender code
                              - Signature does not exist
                              - Signature name already exists
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
                Invalid reply to code:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_reply_to_code
                      description: Invalid reply to code
                      errors: []
                Invalid sender code:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_sender_code
                      description: Invalid sender code
                      errors: []
                Signature name already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_name_already_exists
                      description: Signature name already exists
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses:
    get:
      tags:
        - Mailboxes > Headers
      summary: List headers
      description: >-
        Returns a variety of information about one or more headers of a given
        mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/VerifiedEmail'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply:
    get:
      tags:
        - Mailboxes > Auto reply
      summary: Display an auto reply
      description: Retrieves information about a given mailbox's auto reply configuration.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/MailboxAutoReply'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Auto reply
      summary: Delete an auto reply
      description: Deletes a given mailbox's auto reply.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Auto reply
      summary: Update an auto reply
      description: Updates the auto reply configuration of a given mailbox
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PatchAutoReply'
                  schema: []
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/model/{model_id}:
    get:
      tags:
        - Mailboxes > Auto reply
      summary: Show auto reply model
      description: Show an auto replies model for a given mailbox
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: model_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ServiceMailResponder'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Mailboxes > Auto reply
      summary: Update auto reply model
      description: Delete an auto replies model for a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: model_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Auto reply
      summary: Update auto reply model
      description: Update an auto replies model for a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: model_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/invitations/send:
    put:
      tags:
        - Mailboxes > Users
      summary: Send an invitation
      description: Sends an invitation.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
                - key
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Email invitation
                key:
                  title: key
                  type: string
                  description: Invitation identifier
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - cannot_send_invitation_email
                              - error
                              - invalid_password
                              - too_many_attempts_try_again_in_1_minute
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Cannot send invitation email
                              - Invalid password
                              - Too many attempts try again in 1 minute
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_password
                      description: Invalid password
                      errors: []
                Too many attempts try again in 1 minute:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_many_attempts_try_again_in_1_minute
                      description: Too many attempts try again in 1 minute
                      errors: []
                Cannot send invitation email:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_send_invitation_email
                      description: Cannot send invitation email
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/users/{user_id}:
    delete:
      tags:
        - Mailboxes > Users
      summary: Remove a user
      description: Removes a user from a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: User identifier
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: user_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Users
      summary: Update user permission
      description: Updates the permissions of a user on a given mailbox
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: User identifier
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: user_id
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PatchMailboxPermission'
                  schema: []
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/invitations/{key}:
    delete:
      tags:
        - Mailboxes > Users
      summary: Delete an invitation
      description: Deletes an invitation from a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: key
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Mailboxes > Users
      summary: Update invitation permission
      description: Updates the permissions of a given invitation on a mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: key
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PatchMailboxPermission'
                  schema: []
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - cannot_update_invitation
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Cannot update invitation
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot update invitation:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_update_invitation
                      description: Cannot update invitation
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/{signature_id}/default:
    put:
      tags:
        - Mailboxes > Signatures
      summary: Set a signature as default
      description: Sets the given signature as the default one.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: The unique identifier (ID) of the signature to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: signature_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - signature_does_not_exist
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Signature does not exist
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/send_validation:
    put:
      tags:
        - Mailboxes > Headers
      summary: Send validation email with code
      description: Send validation email with code when adding a new sender/reply address.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Sender/reply address to validate
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - sender_reply_address_already_validated
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Sender reply address already validated
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sender reply address already validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sender_reply_address_already_validated
                      description: Sender reply address already validated
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/send_validation_link:
    put:
      tags:
        - Mailboxes > Headers
      summary: Send validation email with link
      description: Send validation email with link when adding a new sender/reply address.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Sender/reply address to validate
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/VerifiedEmail'
                          schema: []
        '400':
          description: Sender reply address already validated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - sender_reply_address_already_validated
                            type: string
                            description: Error code
                            example: sender_reply_address_already_validated
                          description:
                            enum:
                              - Sender reply address already validated
                            type: string
                            description: Description of the error
                            example: Sender reply address already validated
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Sender reply address already validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sender_reply_address_already_validated
                      description: Sender reply address already validated
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/validate:
    put:
      tags:
        - Mailboxes > Headers
      summary: Validate a sender
      description: Validate a new sender/reply address.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      requestBody:
        description: Request body of the called URI
        content:
          application/json:
            schema:
              title: Request body
              required:
                - code
                - email
              type: object
              properties:
                email:
                  title: email
                  type: string
                  description: Sender/reply address to validate
                code:
                  title: code
                  type: string
                  description: Validation code
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/delete_mailboxes:
    delete:
      tags:
        - Mailboxes > Actions
      summary: Delete mailbox of a service mail
      parameters:
        - required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - password
              type: object
              properties:
                apply_all:
                  title: apply_all
                  type: boolean
                mailboxes:
                  title: mailboxes
                  type: array
                  items:
                    title: item
                    type: string
                password:
                  title: password
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders/spam:
    delete:
      tags:
        - Mailboxes > Folders
      summary: Purge spam folder
      description: >-
        Deletes all mails currently in the spam folder of the given mailbox
        linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Invalid mailbox password
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: invalid_mailbox_password
                          description:
                            enum:
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Invalid mailbox password
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders/trash:
    delete:
      tags:
        - Mailboxes > Folders
      summary: Empty trash folder
      description: >-
        Deletes all mails currently in the trash folder of the given mailbox
        linked to the current user
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Invalid mailbox password
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - invalid_mailbox_password
                              - mailbox_not_linked_to_current_user
                            type: string
                            description: Error code
                            example: invalid_mailbox_password
                          description:
                            enum:
                              - Invalid mailbox password
                              - Mailbox not linked to current user
                            type: string
                            description: Description of the error
                            example: Invalid mailbox password
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/{verified_email_id}:
    delete:
      tags:
        - Mailboxes > Headers
      summary: Delete a sender
      description: Delete a sender/reply address.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: sender/reply address to remove (verified_email identifier)
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: verified_email_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/forwarding_addresses/{redirect_addresses}:
    delete:
      tags:
        - Mailboxes > Forwarding
      summary: Delete a forwarding
      description: Deletes the given forwarding address from the given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: redirect_addresses
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                              - redirect_address_does_not_exist
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                              - Redirect address does not exist
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Redirect address does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_does_not_exist
                      description: Redirect address does not exist
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/aliases/{alias}:
    delete:
      tags:
        - Mailboxes > Aliases
      summary: Delete an alias
      description: Removes an alias from a given mailbox.
      parameters:
        - description: The unique identifier (ID) of the mail hosting to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: mail_hosting_id
          in: path
        - description: >-
            The username (that is the part before the @) of the email address
            you want to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: mailbox_name
          in: path
        - description: Alias to remove.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: alias
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - alias_does_not_exist
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Alias does not exist
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Alias does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_does_not_exist
                      description: Alias does not exist
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/avatar:
    post:
      tags:
        - Profile/Others
      summary: Add / Update profile's avatar.
      description: >-
        Image must be a scared image with minimum size of 16 of type image/png,
        image/jpeg or image/gif
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - avatar
                - encoding
              type: object
              properties:
                avatar:
                  title: avatar
                  type: string
                  description: Avatar
                encoding:
                  title: encoding
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Useravatar'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Profile/Others
      summary: Delete profile's avatar.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/applications/passwords:
    get:
      tags:
        - Applications Passwords
      summary: List applications passwords
      description: >-
        This endpoint allows you to retrieve all the application password of the
        current user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/partialUserapplicationpassword'
                          schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Applications Passwords
      summary: Add an application password
      description: >-
        Add a profile specific password

        Warning: password given in response cannot be retrieved later, so store
        / show it immediately
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Userapplicationpassword'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      description: This endpoint allows you to retrieve all the accounts of a user.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - name
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[name]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Account'
                          schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/accounts/{account_id}:
    get:
      tags:
        - Accounts
      summary: Display an account
      description: >-
        Returns a variety of information about a single Account specified by the
        requested unique identifier.
      parameters:
        - description: Unique identifier of the Account to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: account_id
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Account'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/accounts/{account_id}/services:
    get:
      tags:
        - Accounts
      summary: List services
      description: This endpoint allows you to retrieve all the services of an account.
      parameters:
        - description: Unique identifier of the Account to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: account_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Service'
                          schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/async/tasks:
    get:
      tags:
        - Tasks
      summary: List tasks
      description: This endpoint allows you to retrieve all the tasks.
      parameters:
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AsyncTask'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
  /1/async/tasks/{task_uuid}:
    get:
      tags:
        - Tasks
      summary: Display a task
      description: >-
        Returns a variety of information about a single Task specified by the
        requested unique identifier.
      parameters:
        - description: The unique identifier (UUID) of the task to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: task_uuid
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AsyncTask'
                        schema: []
  /1/countries:
    get:
      tags:
        - Countries
      summary: List countries
      description: This endpoint allows you to retrieve all the countries.
      parameters:
        - style: form
          explode: true
          schema:
            title: only_enabled
            type: boolean
          name: only_enabled
          in: query
        - style: form
          explode: true
          schema:
            title: only_enabled_exception
            type: array
            items:
              title: item
              type: integer
          name: only_enabled_exception
          in: query
        - style: form
          explode: true
          schema:
            title: search
            type: string
          name: search
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Country'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
  /1/countries/{country_id}:
    get:
      tags:
        - Countries
      summary: Display a country
      description: >-
        Returns a variety of information about a single Country specified by the
        requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the country to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: country_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Country'
                        schema: []
  /1/languages:
    get:
      tags:
        - Languages
      summary: List languages
      description: This endpoint allows you to retrieve all the languages.
      parameters:
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Language'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
  /1/languages/{language_id}:
    get:
      tags:
        - Languages
      summary: Display a language
      description: >-
        Returns a variety of information about a single Language specified by
        the requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the language to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: language_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Language'
                        schema: []
  /1/products:
    get:
      tags:
        - Products
      summary: List products
      description: >-
        This endpoint allows you to retrieve all the products where the current
        user's has at least one right.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: >-
              Unique identifier of the `account` that is related to the resource
              `{name}`
            example: 1234
          name: account_id
          in: query
        - style: form
          explode: true
          schema:
            title: customer_name
            type: string
            description: Customer name of the resource `{name}`
            example: My kDrive
          name: customer_name
          in: query
        - style: form
          explode: true
          schema:
            title: fqdn
            type: string
            example: www.my-domain.ch
          name: fqdn
          in: query
        - style: form
          explode: true
          schema:
            title: internal_name
            type: string
            example: My kDrive
          name: internal_name
          in: query
        - style: form
          explode: true
          schema:
            title: product_id
            type: integer
            description: >-
              Unique identifier of the `product` that is related to the resource
              `{name}`
            example: 1234
          name: product_id
          in: query
        - style: form
          explode: true
          schema:
            title: service_id
            enum:
              - 1
              - 2
              - 3
              - 4
              - 6
              - 7
              - 10
              - 14
              - 15
              - 18
              - 23
              - 25
              - 26
              - 29
              - 30
              - 31
              - 34
              - 35
              - 37
              - 40
              - 43
              - 48
              - 50
            type: integer
            description: >-
              Unique identifier of the `service` that is related to the resource
              `{name}`
            example: 40
          name: service_id
          in: query
        - style: form
          explode: true
          schema:
            title: service_name
            enum:
              - backup
              - certificate
              - cloud
              - cloud_hd
              - custom_url
              - dedicated_server
              - domain
              - drive
              - e_ticketing
              - email_hosting
              - hosting
              - housing
              - invitation
              - jelastic
              - mailing
              - nas
              - public_cloud
              - radio
              - swiss_backup
              - video
              - vod
              - web_hosting
              - website_builder
            type: string
            description: Name of the service
            example: drive
          name: service_name
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
  /1/timezones:
    get:
      tags:
        - Timezones
      summary: List timezones
      description: This endpoint allows you to retrieve all the timezones.
      parameters:
        - style: form
          explode: true
          schema:
            title: search
            type: string
          name: search
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema: []
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Timezone'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
  /1/timezones/{timezone_id}:
    get:
      tags:
        - Timezones
      summary: Display a timezone
      description: >-
        Returns a variety of information about a single Timezone specified by
        the requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the timezone to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: timezone_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Timezone'
                        schema: []
  /2/events:
    get:
      tags:
        - Events
      summary: List events
      description: This endpoint allows you to retrieve all the opened events.
      parameters:
        - style: form
          explode: true
          schema:
            title: event_type
            enum:
              - internal
              - public
              - server
              - streaming
            type: string
          name: event_type
          in: query
        - style: form
          explode: true
          schema:
            title: locale
            enum:
              - de
              - en
              - es
              - fr
              - it
            type: string
            description: Represents a language identifier and a region identifier
          name: locale
          in: query
        - style: form
          explode: true
          schema:
            title: show_auto
            type: boolean
          name: show_auto
          in: query
        - style: form
          explode: true
          schema:
            title: status
            enum:
              - inprogress
              - reviewed
              - terminated
            type: string
            description: Status of the resource `{name}`
          name: status
          in: query
        - style: form
          explode: true
          schema:
            title: with_trashed
            type: boolean
          name: with_trashed
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Event'
                          schema: []
  /2/events/{event_id}:
    get:
      tags:
        - Events
      summary: Display an event
      description: >-
        Returns a variety of information about a single Event specified by the
        requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the event to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: event_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Event'
                        schema: []
  /2/profile:
    get:
      tags:
        - Profile/Others
      summary: List user informations
      description: >-
        This endpoint allows you to retrieve all the informations of the current
        user.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserProfile'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    patch:
      tags:
        - Profile/Others
      summary: Update profile information
      parameters:
        - style: form
          explode: true
          schema:
            title: dry_run
            type: boolean
            description: Ensures that the request passes the system validation
          name: dry_run
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - email
              type: object
              properties:
                country_id:
                  title: country_id
                  type: integer
                current_account_id:
                  title: current_account_id
                  type: integer
                current_password:
                  title: current_password
                  type: string
                email:
                  title: email
                  maxLength: 128
                  type: string
                  description: Email
                firstname:
                  title: firstname
                  maxLength: 128
                  type: string
                keep_session_ids:
                  title: keep_session_ids
                  type: array
                  items:
                    title: item
                    type: string
                language_id:
                  title: language_id
                  type: integer
                  description: >-
                    Unique identifier of the `language` that is related to the
                    resource `{name}`
                lastname:
                  title: lastname
                  maxLength: 128
                  type: string
                locale:
                  title: locale
                  type: string
                  description: Represents a language identifier and a region identifier
                password:
                  title: password
                  type: string
                reminder_email:
                  title: reminder_email
                  maxLength: 200
                  type: string
                reminder_phone:
                  title: reminder_phone
                  maxLength: 15
                  type: string
                successful_connexion_notification:
                  title: successful_connexion_notification
                  type: boolean
                timezone:
                  title: timezone
                  type: string
                timezone_id:
                  title: timezone_id
                  type: integer
                unsuccessful_connexion_limit:
                  title: unsuccessful_connexion_limit
                  type: boolean
                unsuccessful_connexion_notification:
                  title: unsuccessful_connexion_notification
                  type: boolean
                unsuccessful_connexion_rate_limit:
                  title: unsuccessful_connexion_rate_limit
                  maximum: 100
                  minimum: 1
                  type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/support/tickets:
    get:
      tags:
        - Support
      summary: List support tickets
      description: >-
        This endpoint allows you to retrieve all the support tickets of the
        current user.
      parameters:
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - created_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[created_at]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Usersupportticket'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
  /2/profile/logs:
    get:
      tags:
        - Logs
      summary: List logs
      description: >-
        This endpoint allows you to retrieve all the activity logs related to
        your user.
      parameters:
        - style: form
          explode: true
          schema:
            title: action_id
            type: integer
          name: action_id
          in: query
        - style: form
          explode: true
          schema:
            title: created_at_end
            minimum: 1632379
            type: integer
          name: created_at_end
          in: query
        - style: form
          explode: true
          schema:
            title: created_at_start
            maximum: 1663828856
            minimum: 1632292
            type: integer
          name: created_at_start
          in: query
        - style: form
          explode: true
          schema:
            title: search
            maxLength: 128
            minLength: 1
            type: string
          name: search
          in: query
        - style: form
          explode: true
          schema:
            title: service_id
            maximum: 100
            minimum: 1
            type: integer
            description: >-
              Unique identifier of the `service` that is related to the resource
              `{name}`
          name: service_id
          in: query
        - style: form
          explode: true
          schema:
            title: user_id
            type: integer
          name: user_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - created_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[created_at]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Useractivitylogs'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/emails:
    get:
      tags:
        - Emails
      summary: List emails
      description: Retrieve list of all email addresses of the current user's profile.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Useremail'
                          schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/emails/{email_type}/{email_id}:
    get:
      tags:
        - Emails
      summary: Display an email
      description: Get details of a specific email address of the current user's profile.
      parameters:
        - description: The email type (email|email_request) to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: email_type
          in: path
        - description: The unique identifier (ID) of the email to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: email_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Useremail'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Emails
      summary: Delete an email
      description: Delete an email address of the current user's profile.
      parameters:
        - description: The email type (email|email_request) to request.
          required: true
          style: simple
          explode: true
          schema:
            type: string
          name: email_type
          in: path
        - description: The unique identifier (ID) of the email to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: email_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/phones:
    get:
      tags:
        - Phones
      summary: List phones
      description: This endpoint allows you to retrieve all the phones of the current user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Userphone'
                          schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/phones/{phone_id}:
    get:
      tags:
        - Phones
      summary: Display a phone
      description: >-
        Returns a variety of information about a single phone specified by the
        requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the phone to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: phone_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Userphone'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Phones
      summary: Delete a phone
      description: Delete a current user profile phone
      parameters:
        - description: The unique identifier (ID) of the phone to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: phone_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /2/profile/applications/passwords/{password_id}:
    get:
      tags:
        - Applications Passwords
      summary: Display an application password
      description: >-
        Returns a variety of information about a single application password
        specified by the requested unique identifier.
      parameters:
        - description: The unique identifier (ID) of the password to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: password_id
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/partialUserapplicationpassword'
                        schema: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_authorized
                            type: string
                            description: Error code
                            example: not_authorized
                          description:
                            enum:
                              - Forbidden
                            type: string
                            description: Description of the error
                            example: Forbidden
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - not_found
                            type: string
                            description: Error code
                            example: not_found
                          description:
                            enum:
                              - Not Found
                            type: string
                            description: Description of the error
                            example: Not Found
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
      security:
        - bearerAuth: []
  /1/videos:
    get:
      tags:
        - Channel
      summary: List channels
      description: This endpoint allows you to retrieve all channels on the pack order.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - customer_name
              - internal_name
              - expired_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[customer_name]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Channel'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Channel
      summary: Create a channel
      description: This endpoint allows you to create a channel.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
              type: object
              properties:
                name:
                  title: name
                  minLength: -1
                  type: string
                  description: Specify the name of the channel
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Channel'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/events:
    get:
      tags:
        - Event
      summary: List all events
      description: This endpoint allows you to retrieve all Event.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - start_at
              - stop_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[start_at]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/RepeatablePlannedEvent'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Event
      summary: Create an event
      description: This endpoint allows you to create an Event.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - authorize_country
                - fragment_duration
                - name
                - start_at
                - stop_at
                - stop_live
                - timezone
              type: object
              properties:
                access_country:
                  title: access_country
                  type: string
                  nullable: true
                authorize_country:
                  title: authorize_country
                  type: boolean
                  description: Authorise or Prohibit countries to view the stream
                  example: true
                date:
                  title: date
                  type: string
                  description: Timestamp `{name}` has been created
                  nullable: true
                dvr_window:
                  title: dvr_window
                  minimum: -1
                  type: integer
                  nullable: true
                fragment_duration:
                  title: fragment_duration
                  maximum: 420
                  minimum: 1
                  type: integer
                  description: Limit the size of files
                name:
                  title: name
                  type: string
                  description: Name of the resource `{name}`
                  example: My first event
                record:
                  title: record
                  type: boolean
                  description: Activate the interupt the live event
                record_name:
                  title: record_name
                  type: string
                  description: Name of the recording
                repeat_interval:
                  title: repeat_interval
                  minimum: 3600
                  type: integer
                  nullable: true
                repeat_until:
                  title: repeat_until
                  minimum: 1693188895
                  type: integer
                  nullable: true
                simulcasts:
                  title: simulcasts
                  type: array
                  items:
                    title: item
                    required:
                      - simulcast_config_id
                    type: object
                    properties:
                      simulcast_config_id:
                        title: simulcast_config_id
                        type: integer
                start_at:
                  title: start_at
                  minimum: 1
                  type: integer
                  description: Start of the event
                  example: 1234567890
                stop_at:
                  title: stop_at
                  minimum: 1
                  type: integer
                  description: End of the event
                  example: 1234567890
                stop_live:
                  title: stop_live
                  type: boolean
                  description: Add geographical restrictions
                  example: true
                storage_machine_id:
                  title: storage_machine_id
                  type: integer
                  description: Unique identifier of the `storage space`
                timezone:
                  title: timezone
                  type: string
                weekdays_only:
                  title: weekdays_only
                  type: boolean
                  nullable: true
                weekends_only:
                  title: weekends_only
                  type: boolean
                  nullable: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RepeatablePlannedEvent'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/players:
    get:
      tags:
        - Players
      summary: Lists all players
      description: This endpoint allows you to retrieve all players.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Limit'
          schema: []
        - $ref: '#/components/parameters/Skip'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - name
              - created_at
              - updated_at
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[name]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Player'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Players
      summary: Create a player
      description: This endpoint allows you to create a new player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/players/{player}:
    get:
      tags:
        - Players
      summary: Return a player
      description: This endpoint allows you to retrieve a player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Players
      summary: Update a player
      description: This endpoint allows you to update a player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Players
      summary: Copy a player
      description: This endpoint allows you to copy a player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Players
      summary: Delete a player
      description: This endpoint allows you to delete a player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/recording:
    get:
      tags:
        - Option > Record
      summary: Return Recording config
      description: This endpoint allows you to retrieve to get the recording config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RecordingConfig'
                        schema: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Option > Record
      summary: Update recording config
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                auto_record:
                  title: auto_record
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RecordingConfig'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Option > Record
      summary: Create recording config
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RecordingConfig'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/recording/storage:
    get:
      tags:
        - Option > Record > Storage
      summary: Lists all storage machine
      description: This endpoint allows you to retrieve all storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StorageMachine'
                          schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Option > Record > Storage
      summary: Return a storage machine
      description: This endpoint allows you to create a new storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StorageMachine'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/recording/storage/test:
    post:
      tags:
        - Option > Record > Storage
      summary: Update a storage machine
      description: This endpoint allows you to test a storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/watermark:
    get:
      tags:
        - Option > Watermarking
      summary: Return watermark
      description: This endpoint allows you to retrieve to get the watermark.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TranscodingOverlay'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Option > Watermarking
      summary: Update watermark
      description: This endpoint allows you to retrieve to update the watermark.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TranscodingOverlay'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Option > Watermarking
      summary: Create watermark
      description: This endpoint allows you to retrieve to create the watermark.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TranscodingOverlay'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/timeshift:
    get:
      tags:
        - Option > Timeshift
      summary: Return timeshift config
      description: This endpoint allows you to retrieve to get a timeshift config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TimeshiftConfig'
                        schema: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Option > Timeshift
      summary: Update a timeshift config
      description: This endpoint allows you to retrieve to update a timeshift config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TimeshiftConfig'
                        schema: []
      security:
        - bearerAuth: []
    post:
      tags:
        - Option > Timeshift
      summary: Create a timeshift config.
      description: This endpoint allows you to retrieve to create a timeshift config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TimeshiftConfig'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/order:
    get:
      tags:
        - order
      summary: Returns a pack order
      description: |-
        Retrieve all info about the pack currently used by the account from
        which the request was made. This includes pricing and excess data.
        If the account has no active offer, this will throw an error.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
    put:
      tags:
        - order
      summary: Update a pack
      description: This endpoint allows you to update a Pack order.
      parameters:
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              type: object
              properties:
                allowed_excess:
                  title: allowed_excess
                  minimum: -1
                  type: integer
                  description: >-
                    Specify a limit before the interruption of live events in
                    case of overrun
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - unprocessable_entity
                            type: string
                            description: Error code
                            example: unprocessable_entity
                          description:
                            enum:
                              - Unprocessable Entity
                            type: string
                            description: Description of the error
                            example: Unprocessable Entity
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/prices:
    get:
      tags:
        - Prices
      summary: Get price
      description: This endpoint allows you to retrieve get the price on the pack order.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
      security:
        - bearerAuth: []
  /1/videos/prices/description:
    get:
      tags:
        - Prices
      summary: Get description
      description: >-
        This endpoint allows you to retrieve get the description on the pack
        order.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
      security:
        - bearerAuth: []
  /1/videos/stats/consumption:
    get:
      tags:
        - Stats > Globals > Consumption
      summary: Consumption
      description: >-
        This endpoint allows you to retrieve Global consumption all channel on
        the pack order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Consumptionressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/consumption/channels/histogram:
    get:
      tags:
        - Stats > Globals > Consumption
      summary: Consumption per Channel histogram
      description: >-
        This endpoint allows you to retrieve Global Histogram per channel on the
        pack order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Consumptionressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewers:
    get:
      tags:
        - Stats > Globals > Viewers
      summary: Viewers
      description: This endpoint allows you to retrieve Global viewers on the pack order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Viewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewers/uniques:
    get:
      tags:
        - Stats > Globals > Viewers
      summary: Unique Viewers
      description: >-
        This endpoint allows you to retrieve Global unique viewers on the pack
        order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Viewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewers/histogram:
    get:
      tags:
        - Stats > Globals > Viewers
      summary: Viewers Histogram
      description: >-
        This endpoint allows you to retrieve Global unique viewers histogram on
        the pack order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Histogramviewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewers/channels/histogram:
    get:
      tags:
        - Stats > Globals > Viewers
      summary: Viewers per channel histogram
      description: >-
        This endpoint allows you to retrieve Global viewers histogram per
        channel.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewers/channels/shares:
    get:
      tags:
        - Stats > Globals > Viewers
      summary: Viewers per channel share
      description: >-
        This endpoint allows you to retrieve Global viewers histogram share per
        channel.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewing:
    get:
      tags:
        - Stats > Globals > Viewing
      summary: Viewing time
      description: >-
        This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Viewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/viewing/channels/histogram:
    get:
      tags:
        - Stats > Globals > Viewing
      summary: Viewing histogram par channel
      description: >-
        This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/geolocation/countries:
    get:
      tags:
        - Stats > Globals > Geolocation
      summary: Countries
      description: >-
        This endpoint allows you to retrieve Global all countries on the pack
        order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/stats/geolocation/clusters:
    get:
      tags:
        - Stats > Globals > Geolocation
      summary: Clusters
      description: >-
        This endpoint allows you to retrieve Global unique viewers on the pack
        order.
      parameters:
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}:
    get:
      tags:
        - Channel
      summary: Return a channel
      description: This endpoint allows you to retrieve a channel.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Channel'
                        schema: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Channel
      summary: Config a channel
      description: >-
        This endpoint allows you to update a config of the channel.


        Trigger a full (re-)configuration of the given channel, based on the
        given request.

        This may also only update the channel's metadata based on the
        configuration request.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - name
                - remember_to_config
                - streams
                - transcode
              type: object
              properties:
                auto_transcode:
                  title: auto_transcode
                  type: boolean
                name:
                  title: name
                  type: string
                  description: Name of the resource `{name}`
                remember_to_config:
                  title: remember_to_config
                  type: boolean
                source_type:
                  title: source_type
                  enum:
                    - camip
                    - encoder
                    - maniak
                    - mobile
                    - webcam
                  type: string
                streams:
                  title: streams
                  type: array
                  items:
                    title: item
                    type: object
                    properties:
                      audio_bitrate:
                        title: audio_bitrate
                        type: integer
                      height:
                        title: height
                        type: integer
                      pass:
                        title: pass
                        type: string
                      resolution:
                        title: resolution
                        type: integer
                      url:
                        title: url
                        type: string
                      username:
                        title: username
                        type: string
                      video_bitrate:
                        title: video_bitrate
                        type: integer
                      width:
                        title: width
                        type: integer
                transcode:
                  title: transcode
                  type: boolean
                type:
                  title: type
                  enum:
                    - abr
                    - mono
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Channel'
                        schema: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Channel
      summary: Delete a channel
      description: This endpoint allows you to delete a channel.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/consumption:
    get:
      tags:
        - Stats > Channels > Consumption
      summary: Consumption
      description: This endpoint allows you to retrieve channel consumption stats.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Consumptionressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/consumption/resolutions/histogram:
    get:
      tags:
        - Stats > Channels > Consumption
      summary: Consumption Per resolution
      description: >-
        This endpoint allows you to retrieve consumption Per resolution
        histogram.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/geolocation/countries:
    get:
      tags:
        - Stats > Channels > Geolocation
      summary: Countries
      description: This endpoint allows you to retrieve get countries.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Geolocationressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/geolocation/clusters:
    get:
      tags:
        - Stats > Channels > Geolocation
      summary: Clusters
      description: This endpoint allows you to retrieve get clusters.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Clusterressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/technologies/browsers/shares:
    get:
      tags:
        - Stats > Channels > Technologies
      summary: Browsers share
      description: This endpoint allows you to retrieve get browsers share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/technologies/players/shares:
    get:
      tags:
        - Stats > Channels > Technologies
      summary: Player share
      description: This endpoint allows you to retrieve get player share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/technologies/os/shares:
    get:
      tags:
        - Stats > Channels > Technologies
      summary: OS share
      description: This endpoint allows you to retrieve get OS share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewers:
    get:
      tags:
        - Stats > Channels > Viewers
      summary: Viewers share
      description: This endpoint allows you to retrieve get viewers share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Viewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewers/histogram:
    get:
      tags:
        - Stats > Channels > Viewers
      summary: Viewers Histogram share
      description: This endpoint allows you to retrieve get viewers Histogram share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewers/resolutions/shares:
    get:
      tags:
        - Stats > Channels > Viewers
      summary: Viewers per resolution share.
      description: This endpoint allows you to retrieve get viewers per resolution share.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Resolutionsresource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewers/resolutions/histogram:
    get:
      tags:
        - Stats > Channels > Viewers
      summary: Viewers per resolution histogram.
      description: >-
        This endpoint allows you to retrieve get viewers per resolution
        histogram.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Resolutionsandhistogramressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewers/uniques:
    get:
      tags:
        - Stats > Channels > Viewers
      summary: Unique viewers.
      description: This endpoint allows you to retrieve get unique viewers.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewing:
    get:
      tags:
        - Stats > Channels > Viewing
      summary: Viewing time
      description: >-
        This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Request body
              required:
                - from
              type: object
              properties:
                from:
                  title: from
                  type: string
                  description: Specify the starting date to get Consumption
                  example: '1640995200'
                per:
                  title: per
                  enum:
                    - day
                    - hour
                    - minute
                    - month
                    - week
                    - year
                  type: string
                  description: Specify
                to:
                  title: to
                  type: string
                  description: Specify the ending date to get Consumption
                  example: '1672444800'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Viewersressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/stats/viewing/resolutions/histogram:
    get:
      tags:
        - Stats > Channels > Viewing
      summary: Viewing histogram par channel
      description: >-
        This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
        - description: The unique identifier (ID) of the Pack order to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: Specify the starting date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: from
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: to
          in: query
        - description: Specify the ending date to get Consumption
          required: true
          style: form
          explode: true
          schema:
            type: string
          name: per
          in: query
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Resolutionsandhistogramressource'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/events/{repeatable_planned_event}:
    get:
      tags:
        - Event
      summary: Return an event
      description: This endpoint allows you to retrieve an Event.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the event to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: repeatable_planned_event
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RepeatablePlannedEvent'
                        schema: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Event
      summary: Update an event
      description: This endpoint allows you to update an Event.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: repeatable_planned_event
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RepeatablePlannedEvent'
                        schema: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Event
      summary: Delete an event
      description: This endpoint allows you to delete an Event.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: repeatable_planned_event
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
      security:
        - bearerAuth: []
  /1/videos/{channel}/integrations:
    get:
      tags:
        - Integrations
      summary: Integration code
      description: >-
        This implies manual integration between the broadcast source and the
        broadcast method.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Integrationsressource'
                          schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/players/{player}/thumbnail/{thumbnail}:
    get:
      tags:
        - Players > Pictures
      summary: Show picture
      description: This endpoint allows you to retrieve a Vignette for the player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: thumbnail
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Player'
                        schema: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/players/{player}/embed:
    get:
      tags:
        - Players > Embeds
      summary: Integration code
      description: >-
        Integrate the player into your site by cutting / pasting the HTML5 code
        below.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Embedressource'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/players/{player}/embed/url:
    get:
      tags:
        - Players > Embeds
      summary: Integration url
      description: >-
        Try to retrieve the parameters needed to construct an iframe for the
        player identified by the given

        player ID for the given channel, or for the last updated player of the
        channel, if any.

        If the channels hasn't any player and that no player ID is provided,

        it will return parameters for a default player.


        If the channels doesn't exist or that the player isn't linked to the
        channel,

        or that the channel is badly configured, this will throw an error.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: The unique identifier (ID) of the player to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: player
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Urlressource'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options:
    get:
      tags:
        - Option
      summary: List option
      description: This endpoint allows you to retrieve to see all option of the  channel.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Options'
                          schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/{video_option}:
    get:
      tags:
        - Option
      summary: Return option
      description: This endpoint allows you to retrieve option.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_option
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Options'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/recording/instant:
    get:
      tags:
        - Option > Record > Instant
      summary: Create recording config
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/recording/storage/{video_storage_machine}:
    get:
      tags:
        - Option > Record > Storage
      summary: Create a storage machine
      description: This endpoint allows you to retrieve a storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_storage_machine
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StorageMachine'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    put:
      tags:
        - Option > Record > Storage
      summary: Update a storage machine
      description: This endpoint allows you to update a storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_storage_machine
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StorageMachine'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Option > Record > Storage
      summary: Update a storage machine
      description: This endpoint allows you to delete a storage machine.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_storage_machine
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/simulcast:
    get:
      tags:
        - Option > simulcast
      summary: Lists all simulcast config
      description: This endpoint allows you to retrieve to get the simulcast.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
        - $ref: '#/components/parameters/Return'
          schema: []
        - $ref: '#/components/parameters/Page'
          schema:
            default: 1
        - $ref: '#/components/parameters/PerPage'
          schema:
            minimum: 1
        - $ref: '#/components/parameters/OrderBy'
          schema:
            enum:
              - enabled
              - simulcast_platform_id
        - $ref: '#/components/parameters/Order'
          schema: []
        - $ref: '#/components/parameters/OrderFor'
          schema:
            enum:
              - asc
              - desc
            example: order_for[enabled]=asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SimulcastConfig'
                          schema: []
                  - $ref: '#/components/schemas/Pagination'
                    schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}:
    get:
      tags:
        - Option > simulcast
      summary: Return simulcast
      description: This endpoint allows you to retrieve to get the simulcast.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_simulcast_config
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SimulcastConfig'
                          schema: []
      security:
        - bearerAuth: []
    delete:
      tags:
        - Option > simulcast
      summary: Delete a player
      description: This endpoint allows you to retrieve to delete the player.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_simulcast_config
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - internal_server_error
                            type: string
                            description: Error code
                            example: internal_server_error
                          description:
                            enum:
                              - Internal Server Error
                            type: string
                            description: Description of the error
                            example: Internal Server Error
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/countries:
    get:
      tags:
        - Misc > Countries
      summary: List countries
      description: List all the countries available for anything as Code => Name.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Countriesressource'
                        schema: []
  /1/videos/timezones:
    get:
      tags:
        - Misc > Countries
      summary: List timezones
      description: >-
        List all the timezones available for  "America/Asuncion": "(GMT-03:00)
        Asuncion",.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Timezonesressource'
                        schema: []
  /1/videos/password:
    get:
      tags:
        - Misc > stream
      summary: Generate stream key
      description: >-
        Generate a random password string in base 52 (0-9a-zA-Z minus
        aeiouAEIOU).

        The first 5 vowels have been removed to avoid bad luck passwords

        (1fUcky0u for example).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
  /1/videos/{channel}/live/start:
    put:
      tags:
        - Live
      summary: Resume the live
      description: Attempt to resume the live if interrupted or does nothing otherwise.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Channel'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/live/stop:
    put:
      tags:
        - Live
      summary: Interrupt the live
      description: >-
        Attempt to interrupt the live if not already interrupted or does nothing
        otherwise.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
        - description: The account identifier
          required: true
          style: form
          explode: true
          schema:
            title: account_id
            type: integer
            description: Account identifier
            example: 42000
          name: account_id
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Channel'
                        schema: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/{video_option}/recommit:
    put:
      tags:
        - Option
      summary: Undertake option
      description: >-
        This WILL NOT restore an option effectively terminated, regardless of
        whether the option has been

        instantly terminated or its termination date has been reached.


        If the given option has already been marked for termination for the
        given channel

        then this won't do anything.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_option
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/watermark/enable:
    put:
      tags:
        - Option > Watermarking
      summary: Enabled watermark
      description: This endpoint allows you to retrieve to enable the watermark.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TranscodingOverlay'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/watermark/disable:
    put:
      tags:
        - Option > Watermarking
      summary: Disable watermark
      description: This endpoint allows you to retrieve to enable the watermark.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TranscodingOverlay'
                        schema: []
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}/enable:
    put:
      tags:
        - Option > simulcast
      summary: Disable simulcast
      description: This endpoint allows you to retrieve to enable the simulcast.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_simulcast_config
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}/disable:
    put:
      tags:
        - Option > simulcast
      summary: Disable simulcast
      description: This endpoint allows you to retrieve to disable the simulcast.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_simulcast_config
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: object
      security:
        - bearerAuth: []
  /1/videos/{channel}/options/{video_option}/terminate:
    delete:
      tags:
        - Option
      summary: Terminate option
      description: This endpoint allows you to retrieve to terminate the option.
      parameters:
        - description: The unique identifier (ID) of the channel to request.
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          name: channel
          in: path
        - style: simple
          explode: true
          schema:
            type: string
          name: video_option
          in: path
        - description: >-
            *Optional* : Allows loading additional data about a resource, which
            may include related resources.
          style: form
          explode: true
          schema:
            type: string
          name: with
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                    schema: []
                  - type: object
                    properties:
                      data:
                        type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                    schema: []
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          code:
                            enum:
                              - error
                            type: string
                            description: Error code
                            example: error
                          description:
                            enum:
                              - Bad Request
                            type: string
                            description: Description of the error
                            example: Bad Request
                          errors:
                            type: array
                            description: Error details
                        description: Error object
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
      security:
        - bearerAuth: []
components:
  schemas:
    PlannedConference:
      title: Plan a conference
      required:
        - calendar_id
        - starting_at
        - ending_at
        - timezone
        - hostname
        - title
        - options
      type: object
      properties:
        calendar_id:
          title: The unique identifier (ID) of the Infomaniak Calendar
          description: >-
            The unique identifier (ID) of the Infomaniak Calendar where you want
            to plan the meeting. Make a GET request on
            https://calendar.infomaniak.com/api/pim/calendar
          type: integer
        starting_at:
          title: Event starting date
          type: string
          example: '2020-06-01 20:00:00'
        ending_at:
          title: Event ending date
          description: >-
            Room settings can be deleted if this date expires. This field will
            be updated if event dates change in Infomaniak Calendar.
          type: string
          example: '2020-06-01 20:00:00'
        timezone:
          title: Event timezone
          type: string
          example: Europe/Zurich
        hostname:
          title: Hostname
          description: Needed for rebuilding room url
          type: string
          example: kmeet.infomaniak.com
          maxLength: 255
        title:
          title: Event title
          type: string
          minLength: 1
          maxLength: 150
        description:
          title: Event description
          type: string
          maxLength: 2000
        attendees:
          title: Event attendees
          type: array
          maxLength: 100
          items:
            $ref: '#/components/schemas/CalendarEventAttendees'
        options:
          title: Room settings
          type: array
          items:
            $ref: '#/components/schemas/ConferenceOptions'
    Response:
      title: Generic response schema to be reused
      required:
        - result
      type: object
      properties:
        result:
          enum:
            - success
            - error
            - asynchronous
          type: string
          description: Result of the HTTP request
          example: success
    PlannedConferenceReturn:
      title: Planned room return
      required:
        - calendar_id
        - starting_at
        - ending_at
        - timezone
        - hostname
        - title
        - options
      type: object
      properties:
        id:
          title: The unique identifier (ID) of the Infomaniak room settings
          type: integer
        name:
          title: The room ID
          type: string
        code:
          title: The room code
          type: string
        user_id:
          title: The unique identifier (ID) of the Infomaniak user
          type: integer
        event_id:
          title: The unique identifier (ID) of the Infomaniak Calendar event
          type: integer
        created_at:
          title: Event creation date
          type: string
          example: '2020-06-01 20:00:00'
        updated_at:
          title: Event update date
          type: string
          example: '2020-06-01 20:00:00'
        ending_at:
          title: Event ending date
          description: >-
            Room settings can be deleted if this date expires. This field will
            be updated if event dates change in Infomaniak Calendar.
          type: string
          example: '2020-06-01 20:00:00'
        hostname:
          title: hostname
          description: Needed for rebuilding room url
          type: string
          example: kmeet.infomaniak.com
          maxLength: 255
        options:
          title: Room settings
          type: array
          items:
            $ref: '#/components/schemas/ConferenceOptionsReturn'
    TopReactionList:
      type: object
      properties:
        has_next:
          description: Indicates if there is another page of reactions that can be fetched.
          type: boolean
        items:
          description: List of reactions.
          type: array
          items:
            $ref: '#/components/schemas/TopReaction'
    TopChannelList:
      type: object
      properties:
        has_next:
          description: Indicates if there is another page of channels that can be fetched.
          type: boolean
        items:
          description: List of channels.
          type: array
          items:
            $ref: '#/components/schemas/TopChannel'
    NewTeamMembersList:
      type: object
      properties:
        has_next:
          description: >-
            Indicates if there is another page of new team members that can be
            fetched.
          type: boolean
        items:
          description: List of new team members.
          type: array
          items:
            $ref: '#/components/schemas/NewTeamMember'
        total_count:
          description: The total count of new team members for the given time range.
          type: integer
    TopThreadList:
      type: object
      properties:
        has_next:
          description: >-
            Indicates if there is another page of top threads that can be
            fetched.
          type: boolean
        items:
          description: List of top threads.
          type: array
          items:
            $ref: '#/components/schemas/TopThread'
    TopDMList:
      type: object
      properties:
        has_next:
          description: Indicates if there is another page of top DMs that can be fetched.
          type: boolean
        items:
          description: List of top DMs.
          type: array
          items:
            $ref: '#/components/schemas/TopDM'
    User:
      title: User
      required:
        - assistant_at
        - avatar
        - deleted_at
        - display_name
        - double_auth_method
        - email
        - first_name
        - has_double_auth
        - has_private_folder
        - has_recovery_email
        - has_valid_email
        - has_valid_phone
        - id
        - last_name
        - last_password_at
        - score
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User`
        display_name:
          title: display_name
          type: string
          description: Display name
        first_name:
          title: first_name
          type: string
          description: First name
        last_name:
          title: last_name
          type: string
          description: Last name
        email:
          title: email
          type: string
          description: Email
        avatar:
          title: avatar
          type: string
          description: Avatar
        type:
          title: type
          type: string
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `User` was deleted at
          format: timestamp
        teams:
          title: teams
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: teams
            description: List of Team identifiers
            conditional: true
            items: null
            in: null
            deprecated: null
          description: List of Team identifiers
        security:
          title: security
          type: object
          properties:
            assistant_at:
              title: assistant_at
              type: integer
              description: The last date the assistant was used
              format: timestamp
              nullable: true
            double_auth_method:
              title: double_auth_method
              type: string
              description: Double authentication method used to log in
            has_double_auth:
              title: has_double_auth
              type: boolean
              description: Whether the `User` has double authentication enabled
            last_password_at:
              title: last_password_at
              type: integer
              description: Last time `User`'s password was changed
              format: timestamp
              nullable: true
            score:
              title: score
              type: integer
              description: Security score of the `User`
            has_valid_email:
              title: has_valid_email
              type: integer
              description: Whether the `User` has a valid email
            has_recovery_email:
              title: has_recovery_email
              type: boolean
              description: Whether the `User` has a recovery email
            has_valid_phone:
              title: has_valid_phone
              type: boolean
              description: Whether the `User` has a valid phone number
            has_private_folder:
              title: has_private_folder
              type: boolean
              description: Whether the `User` has a private folder
    UserAutocomplete:
      type: object
      properties:
        users:
          description: A list of users that are the main result of the query
          type: array
          items:
            $ref: '#/components/schemas/User'
        out_of_channel:
          description: >-
            A special case list of users returned when autocompleting in a
            specific channel. Omitted when empty or not relevant
          type: array
          items:
            $ref: '#/components/schemas/User'
    UserNotifyProps:
      type: object
      properties:
        email:
          type: string
          description: >-
            Set to "true" to enable email notifications, "false" to disable.
            Defaults to "true".
        push:
          type: string
          description: >-
            Set to "all" to receive push notifications for all activity,
            "mention" for mentions and direct messages only, and "none" to
            disable. Defaults to "mention".
        desktop:
          type: string
          description: >-
            Set to "all" to receive desktop notifications for all activity,
            "mention" for mentions and direct messages only, and "none" to
            disable. Defaults to "all".
        desktop_sound:
          type: string
          description: >-
            Set to "true" to enable sound on desktop notifications, "false" to
            disable. Defaults to "true".
        mention_keys:
          type: string
          description: >-
            A comma-separated list of words to count as mentions. Defaults to
            username and @username.
        channel:
          type: string
          description: >-
            Set to "true" to enable channel-wide notifications (@channel, @all,
            etc.), "false" to disable. Defaults to "true".
        first_name:
          type: string
          description: >-
            Set to "true" to enable mentions for first name. Defaults to "true"
            if a first name is set, "false" otherwise.
    StatusOK:
      type: object
      properties:
        status:
          description: >-
            Will contain "ok" if the request was successful and there was
            nothing else to return
          type: string
    ChannelMemberWithTeamData:
      allOf:
        - $ref: '#/components/schemas/ChannelMember'
        - type: object
          properties:
            team_display_name:
              type: string
              description: The display name of the team to which this channel belongs.
            team_name:
              type: string
              description: The name of the team to which this channel belongs.
            team_update_at:
              type: integer
              description: >-
                The time at which the team to which this channel belongs was
                last updated.
    UserThreads:
      type: object
      properties:
        total:
          description: Total number of threads (used for paging)
          type: integer
        threads:
          description: Array of threads
          type: array
          items:
            $ref: '#/components/schemas/UserThread'
    UserThread:
      description: a thread that user is following
      type: object
      properties:
        id:
          type: string
          description: ID of the post that is this thread's root
        reply_count:
          type: integer
          description: number of replies in this thread
        last_reply_at:
          type: integer
          format: int64
          description: timestamp of the last post to this thread
        last_viewed_at:
          type: integer
          format: int64
          description: timestamp of the last time the user viewed this thread
        participants:
          type: array
          description: >-
            list of users participating in this thread. only includes IDs unless
            'extended' was set to 'true'
          items:
            $ref: '#/components/schemas/Post'
        post:
          $ref: '#/components/schemas/Post'
    Status:
      type: object
      properties:
        user_id:
          type: string
        status:
          type: string
        manual:
          type: boolean
        last_activity_at:
          type: integer
          format: int64
    Team:
      title: Team
      required:
        - color_id
        - created_at
        - created_by_id
        - id
        - name
        - owned_by_id
        - updated_at
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Team`
        name:
          title: name
          type: string
          description: Name of the resource `Team`
        color_id:
          title: color_id
          type: integer
          description: Unique identifier of the `color` of the resource `Team`
        owned_by_id:
          title: owned_by_id
          type: integer
          description: Unique identifier of the `user` that owned the resource `Team`
        created_by_id:
          title: created_by_id
          type: integer
          description: Unique identifier of the `user` that created the resource `Team`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Team` was created at
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Team` was updated at
          format: timestamp
        created_by:
          $ref: '#/components/schemas/User'
          schema: []
        owned_by:
          $ref: '#/components/schemas/User'
          schema: []
        user_count:
          title: user_count
          type: integer
          description: User count related to the resource `Team`
        product_count:
          title: product_count
          type: integer
          description: Product count related to the resource `Team`
        product_by_service_count:
          title: product_by_service_count
          type: integer
          description: Product by service count related to the resource `Team`
    TeamMember:
      type: object
      properties:
        team_id:
          description: The ID of the team this member belongs to.
          type: string
        user_id:
          description: The ID of the user this member relates to.
          type: string
        roles:
          description: >-
            The complete list of roles assigned to this team member, as a
            space-separated list of role names, including any roles granted
            implicitly through permissions schemes.
          type: string
        delete_at:
          description: The time in milliseconds that this team member was deleted.
          type: integer
        scheme_user:
          description: >-
            Whether this team member holds the default user role defined by the
            team's permissions scheme.
          type: boolean
        scheme_admin:
          description: >-
            Whether this team member holds the default admin role defined by the
            team's permissions scheme.
          type: boolean
        explicit_roles:
          description: >-
            The list of roles explicitly assigned to this team member, as a
            space separated list of role names. This list does *not* include any
            roles granted implicitly through permissions schemes.
          type: string
    TeamStats:
      type: object
      properties:
        team_id:
          type: string
        total_member_count:
          type: integer
        active_member_count:
          type: integer
    TeamUnread:
      type: object
      properties:
        team_id:
          type: string
        msg_count:
          type: integer
        mention_count:
          type: integer
    ChannelListWithTeamData:
      type: array
      items:
        $ref: '#/components/schemas/ChannelWithTeamData'
    Channel:
      title: Channel
      required:
        - blocked
        - blocked_at
        - channel_id
        - created_at
        - deleted
        - deleted_at
        - free
        - maintained
        - maintained_at
        - name
        - real_type
        - remember_to_config
        - source_type
        - type
        - updated_at
      type: object
      properties:
        channel_id:
          title: channel_id
          type: integer
          description: >-
            Unique identifier of the `channel` that is related to the resource
            `Channel`
          example: 69001
        name:
          title: name
          type: string
          description: Name of the resource `Channel`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Channel` has been created
          format: datetime
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Channel` has been updated
          format: datetime
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `Channel` has been deleted
          format: datetime
        deleted:
          title: deleted
          type: boolean
          description: Boolean `Channel` has been deleted
        type:
          title: type
          enum:
            - abr
            - mono
          type: string
        source_type:
          title: source_type
          enum:
            - camip
            - encoder
            - maniak
            - mobile
            - webcam
          type: string
        remember_to_config:
          title: remember_to_config
          type: boolean
        free:
          title: free
          type: boolean
        blocked:
          title: blocked
          type: boolean
        maintained:
          title: maintained
          type: boolean
        blocked_at:
          title: blocked_at
          type: integer
          format: datetime
        maintained_at:
          title: maintained_at
          type: integer
          format: datetime
        tags:
          title: tags
          type: string
        rights:
          title: rights
          type: string
        live:
          $ref: '#/components/schemas/Liveressource'
          schema: []
        real_type:
          title: real_type
          type: string
        status:
          title: status
          type: array
          description: Status of the resource `Channel`
        consumption:
          $ref: '#/components/schemas/Consumptionressource'
          schema: []
        recording_status:
          title: recording_status
          type: string
        options:
          title: options
          type: array
        default_options:
          title: default_options
          type: array
        streams:
          type: array
          items:
            $ref: '#/components/schemas/stream'
            schema: []
        restriction:
          $ref: '#/components/schemas/ViewersRestrictions'
          schema: []
        machines:
          type: array
          items:
            $ref: '#/components/schemas/Machine'
            schema: []
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
            schema: []
        order:
          title: order
          type: string
    ChannelStats:
      type: object
      properties:
        channel_id:
          type: string
        member_count:
          type: integer
    PostList:
      type: object
      properties:
        order:
          type: array
          items:
            type: string
        posts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Post'
        next_post_id:
          type: string
          description: The ID of next post. Not omitted when empty or not relevant.
        prev_post_id:
          type: string
          description: The ID of previous post. Not omitted when empty or not relevant.
        has_next:
          type: boolean
          description: Whether there are more items after this page.
    ChannelMember:
      type: object
      properties:
        channel_id:
          type: string
        user_id:
          type: string
        roles:
          type: string
        last_viewed_at:
          description: The time in milliseconds the channel was last viewed by the user
          type: integer
          format: int64
        msg_count:
          type: integer
        mention_count:
          type: integer
        notify_props:
          $ref: '#/components/schemas/ChannelNotifyProps'
        last_update_at:
          description: The time in milliseconds the channel member was last updated
          type: integer
          format: int64
    ChannelNotifyProps:
      type: object
      properties:
        email:
          type: string
          description: >-
            Set to "true" to enable email notifications, "false" to disable, or
            "default" to use the global user notification setting.
        push:
          type: string
          description: >-
            Set to "all" to receive push notifications for all activity,
            "mention" for mentions and direct messages only, "none" to disable,
            or "default" to use the global user notification setting.
        desktop:
          type: string
          description: >-
            Set to "all" to receive desktop notifications for all activity,
            "mention" for mentions and direct messages only, "none" to disable,
            or "default" to use the global user notification setting.
        mark_unread:
          type: string
          description: >-
            Set to "all" to mark the channel unread for any new message,
            "mention" to mark unread for new mentions only. Defaults to "all".
    ChannelUnread:
      type: object
      properties:
        team_id:
          type: string
        channel_id:
          type: string
        msg_count:
          type: integer
        mention_count:
          type: integer
    ChannelModeration:
      type: object
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ChannelModeratedRoles'
    ChannelModerationPatch:
      type: object
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ChannelModeratedRolesPatch'
    OrderedSidebarCategories:
      description: List of user's categories with their channels
      type: object
      properties:
        order:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/SidebarCategoryWithChannels'
    SidebarCategory:
      description: User's sidebar category
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        team_id:
          type: string
        display_name:
          type: string
        type:
          type: string
          enum:
            - channels
            - custom
            - direct_messages
            - favorites
    Post:
      type: object
      properties:
        id:
          type: string
        create_at:
          description: The time in milliseconds a post was created
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds a post was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds a post was deleted
          type: integer
          format: int64
        edit_at:
          type: integer
          format: int64
        user_id:
          type: string
        channel_id:
          type: string
        root_id:
          type: string
        original_id:
          type: string
        message:
          type: string
        type:
          type: string
        props:
          type: object
        hashtag:
          type: string
        file_ids:
          type: array
          items:
            type: string
        pending_post_id:
          type: string
        metadata:
          $ref: '#/components/schemas/PostMetadata'
    ChannelUnreadAt:
      type: object
      properties:
        team_id:
          description: The ID of the team the channel belongs to.
          type: string
        channel_id:
          description: The ID of the channel the user has access to..
          type: string
        msg_count:
          description: No. of messages the user has already read.
          type: integer
        mention_count:
          description: No. of mentions the user has within the unread posts of the channel.
          type: integer
        last_viewed_at:
          description: time in milliseconds when the user last viewed the channel.
          type: integer
    FileInfo:
      type: object
      properties:
        id:
          description: The unique identifier for this file
          type: string
        user_id:
          description: The ID of the user that uploaded this file
          type: string
        post_id:
          description: If this file is attached to a post, the ID of that post
          type: string
        create_at:
          description: The time in milliseconds a file was created
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds a file was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds a file was deleted
          type: integer
          format: int64
        name:
          description: The name of the file
          type: string
        extension:
          description: The extension at the end of the file name
          type: string
        size:
          description: The size of the file in bytes
          type: integer
        mime_type:
          description: The MIME type of the file
          type: string
        width:
          description: If this file is an image, the width of the file
          type: integer
        height:
          description: If this file is an image, the height of the file
          type: integer
        has_preview_image:
          description: >-
            If this file is an image, whether or not it has a preview-sized
            version
          type: boolean
    PostListWithSearchMatches:
      type: object
      properties:
        order:
          type: array
          items:
            type: string
        posts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Post'
        matches:
          description: A mapping of post IDs to a list of matched terms within the post.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    Preference:
      type: object
      properties:
        user_id:
          description: The ID of the user that owns this preference
          type: string
        category:
          type: string
        name:
          type: string
        value:
          type: string
    AppError:
      type: object
      properties:
        status_code:
          type: integer
        id:
          type: string
        message:
          type: string
        request_id:
          type: string
    FileInfoList:
      type: object
      properties:
        order:
          type: array
          items:
            type: string
        file_infos:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FileInfo'
        next_file_id:
          type: string
          description: The ID of next file info. Not omitted when empty or not relevant.
        prev_file_id:
          type: string
          description: >-
            The ID of previous file info. Not omitted when empty or not
            relevant.
    Emoji:
      type: object
      properties:
        id:
          description: The ID of the emoji
          type: string
        creator_id:
          description: The ID of the user that made the emoji
          type: string
        name:
          description: The name of the emoji
          type: string
        create_at:
          description: The time in milliseconds the emoji was made
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds the emoji was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds the emoji was deleted
          type: integer
          format: int64
    IncomingWebhook:
      type: object
      properties:
        id:
          description: The unique identifier for this incoming webhook
          type: string
        create_at:
          description: The time in milliseconds a incoming webhook was created
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds a incoming webhook was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds a incoming webhook was deleted
          type: integer
          format: int64
        channel_id:
          description: >-
            The ID of a public channel or private group that receives the
            webhook payloads
          type: string
        description:
          description: The description for this incoming webhook
          type: string
        display_name:
          description: The display name for this incoming webhook
          type: string
    OutgoingWebhook:
      type: object
      properties:
        id:
          description: The unique identifier for this outgoing webhook
          type: string
        create_at:
          description: The time in milliseconds a outgoing webhook was created
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds a outgoing webhook was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds a outgoing webhook was deleted
          type: integer
          format: int64
        creator_id:
          description: The Id of the user who created the webhook
          type: string
        team_id:
          description: The ID of the team that the webhook watchs
          type: string
        channel_id:
          description: The ID of a public channel that the webhook watchs
          type: string
        description:
          description: The description for this outgoing webhook
          type: string
        display_name:
          description: The display name for this outgoing webhook
          type: string
        trigger_words:
          description: List of words for the webhook to trigger on
          type: array
          items:
            type: string
        trigger_when:
          description: >-
            When to trigger the webhook, `0` when a trigger word is present at
            all and `1` if the message starts with a trigger word
          type: integer
        callback_urls:
          description: The URLs to POST the payloads to when the webhook is triggered
          type: array
          items:
            type: string
        content_type:
          description: >-
            The format to POST the data in, either `application/json` or
            `application/x-www-form-urlencoded`
          default: application/x-www-form-urlencoded
          type: string
    Group:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        source:
          type: string
        remote_id:
          type: string
        create_at:
          type: integer
          format: int64
        update_at:
          type: integer
          format: int64
        delete_at:
          type: integer
          format: int64
        has_syncables:
          type: boolean
    GroupsAssociatedToChannels:
      description: >-
        a map of channel id(s) to the set of groups that constrain the
        corresponding channel in a team
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/GroupWithSchemeAdmin'
    Command:
      type: object
      properties:
        id:
          description: The ID of the slash command
          type: string
        token:
          description: The token which is used to verify the source of the payload
          type: string
        create_at:
          description: The time in milliseconds the command was created
          type: integer
        update_at:
          description: The time in milliseconds the command was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds the command was deleted, 0 if never deleted
          type: integer
          format: int64
        creator_id:
          description: The user id for the commands creator
          type: string
        team_id:
          description: The team id for which this command is configured
          type: string
        trigger:
          description: The string that triggers this command
          type: string
        method:
          description: Is the trigger done with HTTP Get ('G') or HTTP Post ('P')
          type: string
        username:
          description: What is the username for the response post
          type: string
        icon_url:
          description: The url to find the icon for this users avatar
          type: string
        auto_complete:
          description: Use auto complete for this command
          type: boolean
        auto_complete_desc:
          description: The description for this command shown when selecting the command
          type: string
        auto_complete_hint:
          description: The hint for this command
          type: string
        display_name:
          description: Display name for the command
          type: string
        description:
          description: Description for this command
          type: string
        url:
          description: The URL that is triggered
          type: string
    AutocompleteSuggestion:
      type: object
      properties:
        Complete:
          description: Completed suggestion
          type: string
        Suggestion:
          description: Predicted text user might want to input
          type: string
        Hint:
          description: Hint about suggested input
          type: string
        Description:
          description: Description of the suggested command
          type: string
        IconData:
          description: Base64 encoded svg image
          type: string
    CommandResponse:
      type: object
      properties:
        ResponseType:
          description: The response type either in_channel or ephemeral
          type: string
        Text:
          type: string
        Username:
          type: string
        IconURL:
          type: string
        GotoLocation:
          type: string
        Attachments:
          type: array
          items:
            $ref: '#/components/schemas/SlackAttachment'
    Role:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the role.
        name:
          type: string
          description: >-
            The unique name of the role, used when assigning roles to
            users/groups in contexts.
        display_name:
          type: string
          description: The human readable name for the role.
        description:
          type: string
          description: A human readable description of the role.
        permissions:
          type: array
          items:
            type: string
          description: A list of the unique names of the permissions this role grants.
        scheme_managed:
          type: boolean
          description: >-
            indicates if this role is managed by a scheme (true), or is a custom
            stand-alone role (false).
    Reaction:
      type: object
      properties:
        user_id:
          description: The ID of the user that made this reaction
          type: string
        post_id:
          description: The ID of the post to which this reaction was made
          type: string
        emoji_name:
          description: The name of the emoji that was used for this reaction
          type: string
        create_at:
          description: The time in milliseconds this reaction was made
          type: integer
          format: int64
    Bot:
      description: A bot account
      type: object
      properties:
        user_id:
          description: The user id of the associated user entry.
          type: string
        create_at:
          description: The time in milliseconds a bot was created
          type: integer
          format: int64
        update_at:
          description: The time in milliseconds a bot was last updated
          type: integer
          format: int64
        delete_at:
          description: The time in milliseconds a bot was deleted
          type: integer
          format: int64
        username:
          type: string
        display_name:
          type: string
        description:
          type: string
        owner_id:
          description: The user id of the user that currently owns this bot.
          type: string
    ApiResponse:
      type: object
      properties:
        result:
          type: string
          example: success
    Api_Thumbnail:
      description: Thumbnail
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        link:
          $ref: '#/components/schemas/Api_Link'
          type: object
    multibvf:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Api_BrowsableVirtualFile'
    Api_BrowsableVirtualFile:
      description: BrowsableVirtualFile
      type: object
      properties:
        name:
          format: string
          type: ''
        description:
          format: string
          type: string
          example: maria
        validated:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        published:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        streams:
          type: array
          enum:
            - audio
            - video
          example: '[audio, video]'
        duration:
          type: seconds
          description: duration in seconds
          example: '276.62'
        size:
          type: number
          example: 2300000
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        discarded_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        folders_count:
          format: int32
          type: integer
          example: 42
        files_count:
          format: int32
          type: integer
          example: 42
        path:
          format: string
          type: ''
          example: /foldera/folderb/file
        preview:
          type: object
          $ref: '#/components/schemas/Api_Preview'
        sample:
          type: object
          $ref: '#/components/schemas/Api_Sample'
        thumbnail:
          type: object
          $ref: '#/components/schemas/Api_Link'
        state:
          format: int32
          type: number
          example: 42
        progress:
          type: number
          description: '%'
          example: 50
        playlists_attached_count:
          type: number
          example: 2
        tags:
          type: array
        type:
          format: string
          type: string
          example: maria
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
    Fillable_App\Models\BrowsableVirtualFile:
      type: object
      properties:
        name:
          format: string
          type: ''
        validated:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        published:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
    Api_Folder:
      description: Folder
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        name:
          format: string
          type: ''
        description:
          format: string
          type: string
          example: maria
        auto_validate:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        auto_publish:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        key:
          format: string
          type: string
          example: maria
        allowed_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        disallowed_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        allowed_country:
          type: array
          items:
            $ref: '#/components/schemas/Api_Country'
        disallowed_country:
          type: array
          items:
            $ref: '#/components/schemas/Api_Country'
        image:
          format: mixed
          type: string
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        discarded_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        media_count:
          format: string
          type: number
        media_duration:
          format: string
          type: string
          example: maria
        encodings:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Encoding'
        discarded:
          format: string
          type: ''
        effective_encodings:
          format: string
          type: ''
        path:
          format: string
          type: ''
        published:
          format: string
          type: ''
        restricted:
          format: string
          type: ''
        validated:
          format: string
          type: ''
        player:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Player'
    shortFolder:
      description: folder
      type: object
      properties:
        id:
          type: string
          example: 1jhvl2uqae5sa
        name:
          type: string
          example: foldername
        description:
          type: string
          example: folder description
        validated:
          type: bool
          example: true
        published:
          type: bool
          example: true
        auto_validate:
          type: bool
          example: true
        auto_publish:
          type: bool
          example: true
        restricted:
          type: bool
          example: false
        key:
          type: string
        allowed_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        disallowed_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        allowed_country:
          type: array
          items:
            $ref: '#/components/schemas/Api_Country'
        disallowed_country:
          type: array
          items:
            $ref: '#/components/schemas/Api_Country'
        discarded:
          type: string
        created_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        updated_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        discarded_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        deleted_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        image:
          type: string
        media_count:
          type: int
          example: 2
        media_duration:
          type: float
          example: 12.16
    Api_Playlist:
      description: Playlist
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        name:
          format: string
          type: string
          example: maria
        description:
          format: string
          type: string
          example: maria
        type:
          description: ''
          type: string
          items:
            type: string
          enum:
            - STATIC
            - DYNAMIC
          example: STATIC
          format: string
        mode:
          description: ''
          type: string
          items:
            type: string
          enum:
            - MERGE
            - SPLIT
            - LIVE
          example: MERGE
          format: string
        sort:
          description: ''
          type: string
          items:
            type: string
          enum:
            - CREATED_ASC
            - CREATED_DESC
            - PUBLISHED_ASC
            - PUBLISHED_DESC
            - NAME_ASC
            - NAME_DESC
            - DURATION_ASC
            - DURATION_DESC
            - RANDOM
            - MANUAL
          example: CREATED_ASC
          format: string
        validated:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        published:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        prepend:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        auto_add_media_by_name:
          format: string
          type: string
        auto_add_media_by_description:
          format: string
          type: string
        medias_thumbnail:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        medias_info:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        nav_position:
          description: ''
          type: string
          items:
            type: string
          enum:
            - ABOVE
            - BELOW
          example: ABOVE
          format: string
        chapter_style:
          description: ''
          type: string
          items:
            type: string
          enum:
            - DARK
            - LIGHT
          example: DARK
          format: string
        live_reference_time:
          format: string
          type: timestamp
          example: maria
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        medias_count:
          format: int32
          type: integer
          example: 42
        medias_duration:
          format: float
          type: string
        shares:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Share'
        tags:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Tag'
    Api_Media:
      description: Media
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        name:
          format: string
          type: ''
        description:
          format: string
          type: string
          example: maria
        validated:
          format: string
          example: true
          type: bool
          enum:
            - true
            - false
        published:
          format: string
          example: true
          type: bool
          enum:
            - true
            - false
        streams:
          type: array
          enum:
            - audio
            - video
          example: '[audio, video]'
        shot_boundaries:
          type: array
          example: '[1, 2,10]'
        duration:
          type: seconds
          description: duration in seconds
          example: '276.62'
        collected_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        published_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        discarded_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        manifests:
          type: object
          $ref: '#/components/schemas/media_manifests'
        source:
          type: object
          $ref: '#/components/schemas/Api_Link'
        state:
          type: number
          example: 192
        preview:
          type: object
          $ref: '#/components/schemas/Api_Preview'
        sample:
          type: object
          $ref: '#/components/schemas/Api_Sample'
        thumbnail:
          type: object
          $ref: '#/components/schemas/Api_Link'
        poster:
          type: object
          $ref: '#/components/schemas/Api_Link'
        encodings:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Encoding'
        progress:
          type: number
          description: '%'
          example: 50
        playbacks:
          type: object
          $ref: '#/components/schemas/media_playbacks'
        annotations:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Annotation'
        category:
          type: string
          example: moto
        chapters:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Chapter'
        folder:
          type: string
          example: 1jhvl2uqa5v8a
        country_restricted:
          format: string
          type: ''
        ip_restricted:
          format: string
          type: ''
        key_restricted:
          format: string
          type: ''
        path:
          format: string
          type: ''
        journal:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_MediaJournalLog'
        language:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Language'
        logos:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Logo'
        scenes:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Thumbnail'
          type: object
        shares:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Share'
        subtitles:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Subtitle'
        tags:
          type: array
        thumbstrip:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Thumbnail'
          type: object
        upload:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Upload'
          type: object
      name:
        example: nom du media
    shortMedia:
      description: Media
      type: object
      properties:
        id:
          type: string
          example: 1jhvl2uqae5sa
        name:
          type: string
          example: video name
        description:
          type: string
          example: video description
        validated:
          type: bool
          example: true
        published:
          type: bool
          example: true
        streams:
          type: array
          example: '[audio,video]'
        shot_boundaries:
          type: array
          example: '[]'
        key_restricted:
          type: bool
          example: false
        ip_restricted:
          type: bool
          example: false
        country_restricted:
          type: bool
          example: false
        state:
          type: int
          example: 4
        created_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        updated_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        folder:
          type: object
          $ref: '#/components/schemas/shortFolder'
        upload:
          type: object
          $ref: '#/components/schemas/shortUpload'
    shortChapter:
      description: chapter
      type: object
      properties:
        id:
          type: string
          example: 1jhvl2uqae5sa
        timestamp:
          type: int
          example: 2
        description:
          type: string
          example: description
        published:
          type: bool
          example: true
        created_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        updated_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        deleted_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        index:
          type: int
          example: 0
    Api_Chapter:
      description: Chapter
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        timestamp:
          format: float
          type: string
        name:
          format: string
          type: string
          example: maria
        description:
          format: string
          type: string
          example: maria
        published:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        index:
          format: int32
          type: number
          example: 42
    Api_Player:
      description: Player
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        default:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        name:
          format: string
          type: string
          example: maria
        description:
          format: string
          type: string
          example: maria
        show_controls:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_progression:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_audio:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_duration:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_fullscreen:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_default_logo:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_speed:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        default_speed:
          format: float
          type: number
          example: 1
        is360:
          format: int32
          type: number
          example: 42
        encoding_change_enabled:
          format: int32
          type: number
          example: 42
        encoding_limit:
          format: int32
          type: number
          example: 42
        chromecast:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        force_media_ratio:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        auto_start:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        audio_volume:
          format: int32
          type: number
          example: 42
        show_replay:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_loop:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_related:
          format: int32
          type: number
          example: 42
        play_related:
          format: int32
          type: number
          example: 42
        related_type:
          description: ''
          type: string
          items:
            type: string
          enum:
            - SIMILAR_TAGS
            - LAST_UPLOADED
            - SAME_FOLDER
            - MOST_VIEWED
          example: SIMILAR_TAGS
          format: string
        width:
          format: int32
          type: number
          example: 42
        height:
          format: int32
          type: number
          example: 42
        controlbar_color:
          $ref: '#/components/schemas/color'
          type: object
        control_color:
          $ref: '#/components/schemas/color'
          type: object
        control_active_color:
          $ref: '#/components/schemas/color'
          type: object
        logo_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        logo_anchor:
          description: ''
          type: string
          items:
            type: string
          enum:
            - TOP_LEFT
            - TOP_RIGHT
            - BOTTOM_LEFT
            - BOTTOM_RIGHT
            - CENTER
          example: TOP_LEFT
          format: string
        logo_margin_vertical:
          format: int32
          type: number
          example: 42
        logo_margin_horizontal:
          format: int32
          type: number
          example: 42
        logo_percentage:
          format: int32
          type: number
          example: 42
        show_media_info:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_media_thumbnail:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        media_thumbnail_anchor:
          description: ''
          type: string
          items:
            type: string
          enum:
            - TOP
            - LEFT
          example: TOP
          format: string
        auto_hide_controls:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_viewers:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_viewers_after:
          format: int32
          type: number
          example: 42
        show_viewers_only_after:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        time_before_hide_cb:
          format: int32
          type: number
          example: 42
        enable_facebook:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        facebook_back_link:
          format: string
          type: string
          example: maria
        facebook_player_embed:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        enable_twitter:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        twitter_via:
          format: string
          type: string
          example: maria
        twitter_back_link:
          format: string
          type: string
          example: maria
        twitter_related:
          format: string
          type: string
        enable_embed_code:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        preload_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        interrupt_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        geoip_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        restrict_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        is_channel_default:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        ads:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Ad'
        owned:
          type: bool
          example: true
        shares:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Share'
    Fillable_App\Models\Player:
      type: object
      properties:
        name:
          format: string
          type: string
          example: maria
        description:
          format: string
          type: string
          example: maria
        show_controls:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_progression:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_audio:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_duration:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_fullscreen:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_default_logo:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_speed:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        default_speed:
          format: float
          type: string
        is360:
          format: int32
          type: number
          example: 42
        encoding_change_enabled:
          format: int32
          type: number
          example: 42
        encoding_limit:
          format: int32
          type: number
          example: 42
        auto_start:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        audio_volume:
          format: int32
          type: number
          example: 42
        show_replay:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_loop:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_related:
          format: int32
          type: number
          example: 42
        play_related:
          format: int32
          type: number
          example: 42
        related_type:
          description: ''
          type: string
          items:
            type: string
          enum:
            - SIMILAR_TAGS
            - LAST_UPLOADED
            - SAME_FOLDER
            - MOST_VIEWED
          example: SIMILAR_TAGS
          format: string
        width:
          format: int32
          type: number
          example: 42
        height:
          format: int32
          type: number
          example: 42
        controlbar_color:
          $ref: '#/components/schemas/color'
          type: object
        control_color:
          $ref: '#/components/schemas/color'
          type: object
        control_active_color:
          $ref: '#/components/schemas/color'
          type: object
        logo_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        logo_anchor:
          description: ''
          type: string
          items:
            type: string
          enum:
            - TOP_LEFT
            - TOP_RIGHT
            - BOTTOM_LEFT
            - BOTTOM_RIGHT
            - CENTER
          example: TOP_LEFT
          format: string
        logo_margin_vertical:
          format: int32
          type: number
          example: 42
        logo_margin_horizontal:
          format: int32
          type: number
          example: 42
        logo_percentage:
          format: int32
          type: number
          example: 42
        show_media_info:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_media_thumbnail:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        media_thumbnail_anchor:
          description: ''
          type: string
          items:
            type: string
          enum:
            - TOP
            - LEFT
          example: TOP
          format: string
        enable_facebook:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        facebook_back_link:
          format: string
          type: string
          example: maria
        facebook_player_embed:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        enable_twitter:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        twitter_via:
          format: string
          type: string
          example: maria
        twitter_back_link:
          format: string
          type: string
          example: maria
        twitter_related:
          format: string
          type: string
        enable_embed_code:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        preload_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        interrupt_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        geoip_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        restrict_image:
          type: object
          $ref: '#/components/schemas/Api_DataUrl'
        chromecast:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        auto_hide_controls:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_viewers:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_viewers_only_after:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        show_viewers_after:
          format: int32
          type: number
          example: 42
        time_before_hide_cb:
          format: int32
          type: number
          example: 42
        force_media_ratio:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
    shortShare:
      description: Share
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        target_type:
          format: string
          type: string
          example: maria
        target_id:
          format: string
          type: string
          example: maria
        comment:
          format: string
          type: string
          example: maria
        timestamp:
          format: string
          type: string
          example: maria
        validity:
          format: int32
          description: In seconds
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        links:
          type: array
          items:
            type:
              $ref: '#/components/schemas/Api_Link'
    Api_Share:
      description: Share
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        target_type:
          format: string
          type: string
          example: maria
        target_id:
          format: string
          type: string
          example: maria
        comment:
          format: string
          type: string
          example: maria
        timestamp:
          format: string
          type: string
          example: maria
        validity:
          format: int32
          description: In seconds
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        links:
          description: ''
          type: array
          items:
            type: string
        player:
          type: object
          $ref: '#/components/schemas/Api_Player'
        manifests:
          format: string
          type: string
          example: maria
        target:
          $ref: '#/components/schemas/Api_Share'
          type: object
        encoding:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Encoding'
        valid_until:
          format: string
          type: Carbon
    success_media:
      description: Media
      type: object
      properties:
        result:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/shortMedia'
    ErrorResponse:
      title: Generic error response schema to be reused
      required:
        - result
      type: object
      properties:
        result:
          type: string
          description: Result of the HTTP request
          example: error
    SwissBackupTokenPassword:
      title: Swiss Backup Token Password
      required:
        - token
      type: object
      properties:
        token:
          title: token
          type: string
    SwissBackupSlot:
      title: Swiss Backup Slot
      required:
        - activate_notifications
        - connection_type
        - created_at
        - customer_name
        - endpoint
        - id
        - lang
        - locked
        - locked_at
        - size
        - storage_used
        - subtype
        - tags
        - type
        - unit_admin
        - usage_last_check
        - username
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Swiss Backup Slot`
        customer_name:
          title: customer_name
          type: string
          description: Customer name of the resource `Swiss Backup Slot`
          example: SwissBackup Slot
        type:
          title: type
          type: string
          description: Type of the resource `Swiss Backup Slot`
          example: slot
        subtype:
          title: subtype
          type: string
          description: Slot subtype (Arconis or Openstack Swift)
          example: swift
        connection_type:
          title: connection_type
          type: string
          description: Slot connection type (Swift, S3, FTP)
          example: swift
        size:
          title: size
          type: integer
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
        storage_used:
          title: storage_used
          type: integer
          description: Used storage size by free storage slots or Acronis backups (Bytes)
          example: 100000000000
        usage_last_check:
          title: usage_last_check
          type: integer
          description: Date of the last data update
          format: timestamp
          example: 1666685147
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Swiss Backup Slot` has been created
          format: timestamp
          example: 1666354846
        locked_at:
          title: locked_at
          type: integer
          description: Slot lock date
          format: timestamp
          example: 1666354979
        locked:
          title: locked
          type: boolean
          description: True if the slot is locked
          example: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            schema: []
        lang:
          title: lang
          type: integer
          description: Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5 = es)
          example: 1
        activate_notifications:
          title: activate_notifications
          type: boolean
          description: True if the user wants to receive Acronis notifications
          example: true
        unit_admin:
          title: unit_admin
          type: boolean
          deprecated: true
        username:
          title: username
          type: string
          description: Acronis administrator username
          example: SBA-AA000000-ADMIN
        endpoint:
          title: endpoint
          type: string
          description: Endpoint for the slot connection
          example: https://swiss-backup.infomaniak.com
        IPS_key:
          title: IPS_key
          type: string
          description: IPS identifier
        email:
          title: email
          type: string
          description: Email
          example: myemail@mydomain.com
        slot_name:
          title: slot_name
          type: string
          description: Slot name
          example: My Slot
        tenant_name:
          title: tenant_name
          type: string
          description: Swift connection tenant name
          example: sb_project_SBI-AA000000
        domain_name:
          title: domain_name
          type: string
          description: Swift connection domain name
          example: default
        container_name:
          title: container_name
          type: string
          description: Slot container name (optional)
          example: default
        directory:
          title: directory
          type: string
          description: Slot default directory (optional)
          example: /identity/v3
        config:
          title: config
          type: string
        parent:
          title: parent
          type: object
    SwissBackup:
      title: Swiss Backup
      required:
        - account_id
        - account_name
        - created_at
        - customer_name
        - expired_at
        - has_maintenance
        - has_operation_in_progress
        - id
        - internal_name
        - is_demo
        - is_free
        - is_locked
        - is_migrated
        - is_trial
        - is_zero_price
        - max_slots
        - nb_slots
        - nb_unallocated_mobile_workstation
        - nb_unallocated_slots
        - new_interface
        - rights
        - service_id
        - service_name
        - size
        - storage_reserved
        - tags
        - unique_id
        - version
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Swiss Backup`
        account_id:
          title: account_id
          type: integer
          description: >-
            Unique identifier of the `account` that is related to the resource
            `Swiss Backup`
        service_id:
          title: service_id
          type: integer
          description: >-
            Unique identifier of the `service` that is related to the resource
            `Swiss Backup`
        service_name:
          title: service_name
          type: string
          description: Name of the service
        customer_name:
          title: customer_name
          type: string
          description: Customer name of the resource `Swiss Backup`
          example: SwissBackup Slot
        internal_name:
          title: internal_name
          type: string
          nullable: true
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Swiss Backup` has been created
          format: timestamp
          example: 1666354846
        expired_at:
          title: expired_at
          type: integer
          description: Timestamp `Swiss Backup` has expired
          format: timestamp
          nullable: true
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `Swiss Backup` has been deleted
          format: timestamp
        version:
          title: version
          type: integer
        has_maintenance:
          title: has_maintenance
          type: boolean
          description: Does the resource `Swiss Backup` have a maintenance mode enabled?
        is_locked:
          title: is_locked
          type: boolean
          description: Is the resource `Swiss Backup` locked?
        has_operation_in_progress:
          title: has_operation_in_progress
          type: boolean
          description: Does the resource `Swiss Backup` have an operation in progress ?
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            schema: []
        unique_id:
          title: unique_id
          type: integer
          description: Unique identifier of the resource `Swiss Backup`
        description:
          title: description
          type: string
          description: Description of the resource `Swiss Backup`
        bill_reference:
          title: bill_reference
          type: string
        is_free:
          title: is_free
          type: boolean
          description: Does the resource `Swiss Backup` have a free price status?
        is_zero_price:
          title: is_zero_price
          type: boolean
          description: Does the resource `Swiss Backup` have a zero price status?
        is_trial:
          title: is_trial
          type: boolean
          description: Does the resource `Swiss Backup` have a trial status?
        rights:
          $ref: '#/components/schemas/Right'
          schema: []
        parent_id:
          title: parent_id
          type: integer
        parent_service_id:
          title: parent_service_id
          type: integer
        parent_service_name:
          title: parent_service_name
          type: string
        status:
          $ref: '#/components/schemas/Productstatus'
          schema: []
        users:
          type: array
          items:
            $ref: '#/components/schemas/ProductUser'
            schema: []
        admin:
          title: admin
          type: string
          description: Acronis administrator details
        fqdn:
          title: fqdn
          type: string
        nb_slots:
          title: nb_slots
          type: integer
          description: Total number of slots (Acronis & Free storage)
          example: 5
        max_slots:
          title: max_slots
          type: integer
          description: Total number of authorized slots (Acronis & Free storage)
          example: 7
        nb_unallocated_slots:
          title: nb_unallocated_slots
          type: integer
          example: 0
          deprecated: true
        nb_unallocated_mobile_workstation:
          title: nb_unallocated_mobile_workstation
          type: integer
          example: 0
          deprecated: true
        size:
          title: size
          type: integer
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
        size_free_storage:
          title: size_free_storage
          type: integer
          description: Allocated storage size for the free storage (Bytes)
          example: 100000000000
        is_demo:
          title: is_demo
          type: string
          description: True if the product is a trial
          example: 'false'
        is_migrated:
          title: is_migrated
          type: string
          description: True if the backup is an old FTP backup
          example: 'false'
          deprecated: true
        new_interface:
          title: new_interface
          type: string
          description: True if the product has the new interface
          example: 'false'
        account_name:
          title: account_name
          type: string
          description: Account name
          example: Infomaniak SA
        storage_reserved:
          title: storage_reserved
          type: integer
          description: Allocated storage size (Bytes)
          example: 200000000000
        storage_reserved_free_storage:
          title: storage_reserved_free_storage
          type: integer
          description: Allocated storage size for free storage slots (Bytes)
          example: 100000000000
        storage_reserved_acronis:
          title: storage_reserved_acronis
          type: integer
          description: Allocated storage size for Acronis (Bytes)
          example: 100000000000
        periodicity:
          title: periodicity
          type: integer
          description: Commitment period (in years)
          example: 1
        promo:
          title: promo
          type: integer
          description: Promotion percentage
          example: 0
        due_at:
          title: due_at
          type: integer
          description: Contract end date
          format: timestamp
        has_been_demo:
          title: has_been_demo
          type: string
          description: True if the product has been a trial
          example: 'true'
        storage_used_free_storage:
          title: storage_used_free_storage
          type: integer
          description: Used storage size by free storage slots (Bytes)
          example: 9000000000
        storage_used:
          title: storage_used
          type: integer
          description: Used storage size by free storage slots or Acronis backups (Bytes)
          example: 100000000000
        max_slots_free_storage:
          title: max_slots_free_storage
          type: integer
          description: Maximum number of free storage slots allowed
          example: 7
        max_slots_server:
          title: max_slots_server
          type: integer
          description: Maximum number of Acronis server licences allowed
          example: 3
        max_slots_virtual:
          title: max_slots_virtual
          type: integer
          description: Maximum number of Acronis virtual machine licences allowed
          example: 4
        max_slots_workstation:
          title: max_slots_workstation
          type: integer
          description: Maximum number of Acronis workstation licences allowed
          example: 5
        max_slots_mobile:
          title: max_slots_mobile
          type: integer
          description: Maximum number of Acronis mobile licences allowed
          example: 6
        nb_slots_free_storage:
          title: nb_slots_free_storage
          type: integer
          description: Number of free storage slots
          example: 2
        nb_slots_server:
          title: nb_slots_server
          type: integer
          description: Number of Acronis server licences
          example: 1
        nb_slots_virtual:
          title: nb_slots_virtual
          type: integer
          description: Number of Acronis virtual machine licences
          example: 0
        nb_slots_workstation:
          title: nb_slots_workstation
          type: integer
          description: Number of Acronis workstation licences
          example: 1
        nb_slots_mobile:
          title: nb_slots_mobile
          type: integer
          description: Number of Acronis mobile licences
          example: 1
        IPS_key:
          title: IPS_key
          type: string
          description: IPS identifier
    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items
            Added when using query parameter `page`
          example: 221
        page:
          type: integer
          description: |
            Number of the current page
            Added when using query parameter `page`
          example: 2
        pages:
          type: integer
          description: |
            Total number of pages
            Added when using query parameter `page`
          example: 15
        items_per_page:
          type: integer
          description: |
            Number of items per page
            Added when using query parameter `page`
          example: 15
    AcronisUsage:
      title: Acronis Usage
      required:
        - nb_slots_mobile
        - nb_slots_server
        - nb_slots_virtual
        - nb_slots_workstation
        - storage_used_acronis
      type: object
      properties:
        storage_used_acronis:
          title: storage_used_acronis
          type: integer
          example: 123556789000
        nb_slots_workstation:
          title: nb_slots_workstation
          type: integer
          description: Number of Acronis workstation licences
          example: 0
        nb_slots_server:
          title: nb_slots_server
          type: integer
          description: Number of Acronis server licences
          example: 2
        nb_slots_virtual:
          title: nb_slots_virtual
          type: integer
          description: Number of Acronis virtual machine licences
          example: 1
        nb_slots_mobile:
          title: nb_slots_mobile
          type: integer
          description: Number of Acronis mobile licences
          example: 5
    SwissBackupPrice_2731a22e:
      title: Swiss Backup Price
      required:
        - discounts
        - prices
      type: object
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/SwissBackupPrice'
            schema: []
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/SwissBackupDiscount'
            schema: []
    PlayerConfiguration:
      title: PlayerConfiguration
      required:
        - artist
        - background_color
        - button_color
        - cover
        - date
        - display_name
        - facebook_link
        - height
        - id
        - is_auto_start
        - is_cover
        - is_embed
        - is_facebook_embed
        - is_listeners
        - is_logo_enable
        - is_spectrum
        - is_station_thumbnail
        - language
        - listeners
        - loading
        - restriction
        - secondary_color
        - stations
        - thumbnail
        - timeline
        - title
        - twitter_account
        - twitter_backlink
        - twitter_hashtag
        - unavailable
        - volume
        - width
      type: object
      properties:
        artist:
          title: artist
          type: string
          description: The current artist name of the played music
          example: Imagine Dragon
        background_color:
          title: background_color
          type: string
          description: The background color used in the `Player`
          example: '202020'
        button_color:
          title: button_color
          type: string
          description: The button color used in the `Player`
          example: FFFFFF
        cover:
          title: cover
          type: string
          description: The current cover url of the played music
          example: https://radiocover.storage5.infomaniak.com/cover/5fa592b4e019d.jpg
        date:
          title: date
          type: string
          description: The date of the last update
          example: '1671107301'
        display_name:
          title: display_name
          type: string
          description: Name of the ressource `Player` visible by final customer
          example: MyRadioPlayer
        facebook_link:
          title: facebook_link
          type: string
          description: The Facebook link used to Facebook embed
        height:
          title: height
          type: number
          description: The height used for render the `Player` (px)
          example: 144
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Player`
          example: 1
        is_auto_start:
          title: is_auto_start
          type: boolean
          description: Is the auto start enabled?
          example: true
        is_cover:
          title: is_cover
          type: boolean
          description: Is the cover enabled?
          example: true
        is_embed:
          title: is_embed
          type: boolean
          description: Is embed link visible?
          example: true
        is_facebook_embed:
          title: is_facebook_embed
          type: boolean
          description: Is the Facebook embed link visible?
          example: true
        is_listeners:
          title: is_listeners
          type: boolean
          description: Is the listeners informations displayed?
          example: true
        is_logo_enable:
          title: is_logo_enable
          type: boolean
          description: Is the logo Infomaniak enabled?
          example: true
        is_spectrum:
          title: is_spectrum
          type: boolean
          description: Is the spectrum enabled?
          example: true
        is_station_thumbnail:
          title: is_station_thumbnail
          type: boolean
          description: Is the station thumbnail we be displayed like cover?
          example: true
        language:
          title: language
          enum:
            - de
            - en
            - es
            - fr
            - it
          type: string
          description: The language used in the `Player`
          example: fr
        listeners:
          title: listeners
          type: integer
          description: The current number of listeners on the station
          example: 152
        loading:
          title: loading
          type: string
          description: The url of the loading file used in the player
          example: https://storage.infomaniak.com/player/my-loading.png
        restriction:
          title: restriction
          type: string
          description: The url of the restriction file used in the player
          example: https://storage.infomaniak.com/player/my-restriction.png
        secondary_color:
          title: secondary_color
          type: string
          description: The secondary color used in the `Player`
          example: 0098FF
        stations:
          title: stations
          type: array
        timeline:
          title: timeline
          type: array
          description: The list of last songs played on the station
        title:
          title: title
          type: string
          description: The current artist title of the played music
          example: Radioactive
        thumbnail:
          title: thumbnail
          type: string
          description: The thumbnail url of the `Player`
          example: https://storage.infomaniak.com/player/my-thumbnail.png
        twitter_account:
          title: twitter_account
          type: string
          description: The Twitter account used to Twitter embed
          example: MyAccount
        twitter_backlink:
          title: twitter_backlink
          type: string
          description: The Twitter backlink used to Twitter embed
          example: my-radio.ch
        twitter_hashtag:
          title: twitter_hashtag
          type: string
          description: The Twitter hashtag used to Twitter embed
          example: infomaniak,radio
        unavailable:
          title: unavailable
          type: string
          description: The url of the unavailable file used in the player
          example: https://storage.infomaniak.com/player/my-unavailable.png
        volume:
          title: volume
          type: integer
          description: The volume used in the `Player`
          example: 50
        width:
          title: width
          type: number
          description: The width used for render the `Player` (px)
          example: 505
    Station_446a80a0:
      title: Station
      required:
        - cluster_name
        - created_at
        - id
        - is_acpm
        - is_daily_restart
        - is_enabled
        - is_send_logs
        - listeners
        - log_login
        - log_password
        - log_path
        - log_server
        - name
        - password
        - thumbnail
        - time_daily_restart
        - timezone_daily_restart
        - updated_at
        - uuid
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Station`
          example: 1
        uuid:
          title: uuid
          type: string
          description: Universally unique identifier of the resource `Station`
          example: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
        name:
          title: name
          type: string
          description: Name of the resource `Station`
          example: MyStation
        thumbnail:
          title: thumbnail
          type: string
          description: The url to the thumbnail of the `Station`
          example: https://storage.infomaniak.com/my-thumbnail.png
        password:
          title: password
          type: string
          description: The password use to access to protected pages
          example: KeepItSecret
        is_daily_restart:
          title: is_daily_restart
          type: boolean
          description: Is the daily restart enabled?
          example: true
        time_daily_restart:
          title: time_daily_restart
          type: string
          description: The time use for daily restart
          example: '15:03'
        timezone_daily_restart:
          title: timezone_daily_restart
          type: string
          description: The timezone to use for daily restart
          example: Europe/Zurich
        is_enabled:
          title: is_enabled
          type: boolean
          description: Is the resource `Station` enabled?
          example: true
        is_acpm:
          title: is_acpm
          type: boolean
          description: Is the ACPM stats enabled?
          example: true
        is_send_logs:
          title: is_send_logs
          type: boolean
          description: Is the logs sending enabled?
          example: true
        log_server:
          title: log_server
          type: string
          description: The server name to connect to the log server
          example: my-log-server.ch
        log_login:
          title: log_login
          type: string
          description: The login to connect to the log server
          example: MyLogin
        log_password:
          title: log_password
          type: string
          description: The password to connect to the log server
          example: KeepItSecret
        log_path:
          title: log_path
          type: string
          description: The path where the log is store
          example: my_log_folder
        listeners:
          title: listeners
          type: integer
          description: The number of currently listeners listen all `Stream`
          example: 152
        cluster_name:
          title: cluster_name
          type: string
          description: The name of the `Cluster`
          example: plain
        monthly_consumption:
          title: monthly_consumption
          type: integer
          description: The current monthly consumption (Byte)
          example: 1856473697
        count_streams_up:
          title: count_streams_up
          type: integer
          description: The current count of streams online
          example: 3
        streams:
          type: array
          items:
            $ref: '#/components/schemas/Stream'
            schema: []
        hls_stream:
          $ref: '#/components/schemas/HlsStream'
          schema: []
        options:
          title: options
          type: string
        stats:
          title: stats
          type: array
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Station` has been created
          format: timestamp
          example: 1478357542
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Station` has been updated
          format: timestamp
          example: 1615838270
    Stream:
      title: Stream
      type: string
    Player:
      title: Player
      required:
        - ads_enabled
        - ads_url
        - allow_full_screen
        - auto_hide_controls
        - auto_start
        - buffer
        - chromecast
        - control_active_color
        - control_color
        - controlbar_color
        - countdown
        - countdown_days
        - countdown_hours
        - countdown_minutes
        - countdown_seconds
        - countdown_txt
        - created_at
        - description
        - enable_embed_code
        - enable_facebook
        - enable_twitter
        - extract_preload_img
        - facebook_back_link
        - facebook_player_embed
        - geo_ip_img
        - height
        - interrupt_img
        - is360
        - logo_anchor
        - logo_img
        - logo_margin_left
        - logo_margin_top
        - logo_percentage
        - name
        - player_id
        - preload_img
        - ratio
        - restrict_img
        - show_controls
        - show_logo
        - show_viewers
        - show_viewers_after
        - show_viewers_only_after
        - sound_enabled
        - sound_percentage
        - stereo_projection360
        - time_before_hide_cb
        - title
        - twitter_back_link
        - twitter_related
        - twitter_via
        - updated_at
        - use_geo_ip_img
        - use_interrupt_img
        - use_preload_img
        - use_restrict_img
        - width
      type: object
      properties:
        player_id:
          title: player_id
          type: integer
          description: >-
            Unique identifier of the `player` that is related to the resource
            `Player`
        name:
          title: name
          type: string
          description: Name of the ressource `Player` visible by final customer
          example: MyRadioPlayer
        title:
          title: title
          type: string
          description: Name of the video stream
        description:
          title: description
          type: string
          description: Description of the stream
        buffer:
          title: buffer
          type: string
          description: >-
            Buffer memory enables the reduction of video interruptions if yours
            viewers connections become unstable by preloading
        auto_start:
          title: auto_start
          type: boolean
          description: Start the video automatically (does not function on Android and iOS)
        allow_full_screen:
          title: allow_full_screen
          type: boolean
          description: Authorise full-screen mode
        is360:
          title: is360
          type: boolean
          description: This option is required to display your 360 video streaming
        show_controls:
          title: show_controls
          type: boolean
          description: Display the playback bar
        auto_hide_controls:
          title: auto_hide_controls
          type: boolean
          description: Hide the playback bar after a few seconds
        time_before_hide_cb:
          title: time_before_hide_cb
          type: integer
        show_viewers:
          title: show_viewers
          type: boolean
          description: Display the number of viewers
        show_viewers_after:
          title: show_viewers_after
          type: integer
          description: Display from the following number after {number} viewers
        ratio:
          title: ratio
          type: string
          description: Ratio of the player
        width:
          title: width
          type: integer
          description: The width used for render the `Player` (px)
          example: 1280
        height:
          title: height
          type: integer
          description: The height used for render the `Player` (px)
          example: 720
        show_logo:
          title: show_logo
          type: boolean
          description: Is the logo Infomaniak enabled?
          example: true
        logo_img:
          title: logo_img
          type: string
          description: The logo url of the `Player`
          example: >-
            https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png
        logo_anchor:
          title: logo_anchor
          enum:
            - bottom left
            - bottom right
            - top left
            - top right
          type: string
          description: is the position of logo
        logo_percentage:
          title: logo_percentage
          type: integer
          description: The logo size in `Player`
          example: 50
        logo_margin_top:
          title: logo_margin_top
          type: integer
          description: The margin top log in `Player`
          example: 50
        logo_margin_left:
          title: logo_margin_left
          type: integer
          description: The margin left log in `Player`
          example: 50
        control_color:
          title: control_color
          type: string
          description: The background color used in the `Player`
          example: '#FFFFFF'
        controlbar_color:
          title: controlbar_color
          type: string
          description: The button color used in the `Player`
          example: '#000000'
        control_active_color:
          title: control_active_color
          type: string
          description: The secondary color color used in the `Player`
          example: '#0098FF'
        extract_preload_img:
          title: extract_preload_img
          type: boolean
        use_preload_img:
          title: use_preload_img
          type: boolean
          description: This image is displayed before the video is played.
          example: true
        preload_img:
          title: preload_img
          type: string
        use_geo_ip_img:
          title: use_geo_ip_img
          type: boolean
        geo_ip_img:
          title: geo_ip_img
          type: string
        use_interrupt_img:
          title: use_interrupt_img
          type: boolean
        interrupt_img:
          title: interrupt_img
          type: string
          description: >-
            This image is displayed if the viewer is not authorised to view the
            broadcast (IP, domain, unique hash code, etc.)
          example: >-
            https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png
        use_restrict_img:
          title: use_restrict_img
          type: boolean
          description: >-
            This image is displayed if the viewer is located in an unauthorised
            geographic
          example: true
        restrict_img:
          title: restrict_img
          type: string
          description: >-
            This image is displayed if the viewer is not authorised to view the
            broadcast (IP, domain, unique hash code, etc.)
          example: >-
            https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png
        countdown:
          title: countdown
          type: boolean
          description: Is the countdown enabled?
        countdown_txt:
          title: countdown_txt
          type: string
          description: >-
            Description of the countdown of the `Player` visible by final
            customer
        countdown_days:
          title: countdown_days
          type: string
          description: countdown days
        countdown_hours:
          title: countdown_hours
          type: string
          description: hours days
        countdown_minutes:
          title: countdown_minutes
          type: string
          description: countdown minutes
        countdown_seconds:
          title: countdown_seconds
          type: string
          description: countdown seconde
        enable_embed_code:
          title: enable_embed_code
          type: boolean
          description: Authorise other users to intergrate your live event on their sites
        enable_facebook:
          title: enable_facebook
          type: boolean
          description: Is the facebook embed link visible?
          example: true
        facebook_back_link:
          title: facebook_back_link
          type: string
          description: The Twitter backlink used to facebook embed
          example: my-lovely-stream.ch
        facebook_player_embed:
          title: facebook_player_embed
          type: boolean
        enable_twitter:
          title: enable_twitter
          type: boolean
          description: Is the Twitter embed link visible?
          example: true
        twitter_via:
          title: twitter_via
          type: string
          example: MyAccount
        twitter_back_link:
          title: twitter_back_link
          type: string
          description: The Twitter backlink used to twitter embed
          example: my-lovely-stream.ch
        twitter_related:
          title: twitter_related
          type: string
          description: The Twitter hashtag used to Twitter embed
          example: infomaniak video live
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Player` has been created
          format: datetime
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Player` has been updated
          format: datetime
        ads_enabled:
          title: ads_enabled
          type: boolean
          description: Is the ads enabled?
          example: true
        sound_enabled:
          title: sound_enabled
          type: boolean
          description: Is the sound enabled?
          example: true
        sound_percentage:
          title: sound_percentage
          type: integer
          description: The volume used in the `Player`
          example: 50
        show_viewers_only_after:
          title: show_viewers_only_after
          type: boolean
        chromecast:
          title: chromecast
          type: boolean
          description: >-
            you need to use a player that supports https in order for chromecast
            to work correctly
        stereo_projection360:
          title: stereo_projection360
          type: string
        ads_url:
          title: ads_url
          type: string
          description: The ads url
          example: ''
        channel:
          $ref: '#/components/schemas/Channel'
          schema: []
        integrations:
          title: integrations
          type: string
          description: List all the raw integrations supported for the given channel.
        countdown_stops_at:
          title: countdown_stops_at
          type: string
        thumbnail_url:
          title: thumbnail_url
          type: string
        restrictions:
          title: restrictions
          type: string
    Pack:
      title: Pack
      required:
        - available_space_vod
        - bandwidth
        - max_channel
        - monthly_fee
        - name
        - order_info
        - pack_id
      type: object
      properties:
        pack_id:
          title: pack_id
          type: integer
          description: >-
            Unique identifier of the `pack` that is related to the resource
            `Pack`
          example: 3
        name:
          title: name
          type: string
          description: Name of the resource `Pack`
          example: Pro
        order_info:
          title: order_info
          type: integer
        available_space_vod:
          title: available_space_vod
          type: integer
          description: The archive storage space, is in GB
          example: 100
        max_channel:
          title: max_channel
          type: integer
          description: The max `Channel` Number of stream is included
          example: 5
        monthly_fee:
          title: monthly_fee
          type: integer
          description: The cost per extra GB consumed
        bandwidth:
          title: bandwidth
          type: integer
          description: The max 'bandwidth' available by month, is in To
    RadioProduct:
      title: RadioProduct
      required:
        - has_maintenance
        - is_locked
        - listeners
        - locked_at
        - max_station
        - overquota_at
        - price
        - product
        - rights
        - status
        - updated_at
      type: object
      properties:
        product:
          title: product
          type: string
        price:
          title: price
          type: number
          description: The `RadioProduct` price
        overquota_at:
          title: overquota_at
          type: integer
          format: datetime
        locked_at:
          title: locked_at
          type: integer
          description: Timestamp `RadioProduct` has been locked
          format: datetime
        is_locked:
          title: is_locked
          type: boolean
          description: Is the resource `RadioProduct` locked?
          example: true
        has_maintenance:
          title: has_maintenance
          type: boolean
          description: Does the resource `RadioProduct` have a maintenance mode enabled?
          example: true
        max_station:
          title: max_station
          type: integer
          description: The max `Station` can be created
          example: 5
        pack:
          $ref: '#/components/schemas/Pack'
          schema: []
        pack_price:
          $ref: '#/components/schemas/PackPrice'
          schema: []
        options:
          title: options
          type: string
        stations:
          type: array
          items:
            $ref: '#/components/schemas/Station_446a80a0'
            schema: []
        count_stations:
          title: count_stations
          type: integer
        listeners:
          title: listeners
          type: integer
          description: The number of currently listeners listen all `Stream`
          example: 152
        monthly_consumption:
          title: monthly_consumption
          type: integer
          description: The current monthly consumption (Byte)
          example: 1856473697
        status:
          title: status
          type: array
          description: The status of the `RadioProduct`
          example: ''
        rights:
          title: rights
          type: array
          description: The rights of the `RadioProduct`
        packs:
          type: array
          items:
            $ref: '#/components/schemas/Pack'
            schema: []
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `RadioProduct` has been updated
          format: timestamp
          example: 1615838270
    ServerEvent:
      title: ServerEvent
      required:
        - date
        - name
        - status
        - type
      type: object
      properties:
        name:
          title: name
          type: string
          description: The name of the server
          example: icepe10
        type:
          title: type
          type: string
          description: The type of the server
          example: edge
        date:
          title: date
          type: integer
          description: The date of the server event
          format: timestamp
          example: 1679754593
        status:
          title: status
          enum:
            - down
            - up
          type: string
          description: The status of the event
          example: up
    EncoderEvent:
      title: EncoderEvent
      required:
        - date
        - is_source
        - is_transcoding
        - mountpoint
        - stream_id
        - type
      type: object
      properties:
        mountpoint:
          title: mountpoint
          type: string
          description: The mountpoint has the event
          example: /my-mountpoint.mp3
        type:
          title: type
          enum:
            - bad_password
            - start
            - stop
          type: string
          description: The type of event
          example: start
        date:
          title: date
          type: string
          description: The date of the encoder event
          example: '1679754593'
        stream_id:
          title: stream_id
          type: integer
          description: The stream id has the event
          example: 2
        is_transcoding:
          title: is_transcoding
          type: boolean
          description: Is a transcoded stream ?
          example: true
        is_source:
          title: is_source
          type: boolean
          description: Is a source stream?
          example: true
    StatListenerPerMinute:
      title: StatListenerPerMinute
      required:
        - average_per_minute
        - max_listeners
        - min_listeners
        - stats
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/StatListenerPerMinuteStats'
            schema: []
        average_per_minute:
          title: average_per_minute
          type: number
          description: The average of listeners per minute
          example: 10.05
        max_listeners:
          title: max_listeners
          type: integer
          description: The max listeners in one minute
          example: 20
        min_listeners:
          title: min_listeners
          type: integer
          description: The min listeners in one minute
          example: 1
    StatCountryContinent:
      title: StatCountryContinent
      required:
        - AF
        - AN
        - AS
        - EU
        - NA
        - OC
        - SA
      type: object
      properties:
        AS:
          title: AS
          type: integer
          description: The number of listeners in Asie
          example: 5
        AN:
          title: AN
          type: integer
          description: The number of listeners in Antarctique
          example: 10
        AF:
          title: AF
          type: integer
          description: The number of listeners in Afrique
          example: 9
        SA:
          title: SA
          type: integer
          description: The number of listeners in South America
          example: 3
        EU:
          title: EU
          type: integer
          description: The number of listeners in Europe
          example: 15
        OC:
          title: OC
          type: integer
          description: The number of listeners in Océanie
          example: 0
        NA:
          title: NA
          type: integer
          description: The number of listeners in North America
          example: 2
    StatListenerByStation:
      title: StatListenerByStation
      required:
        - average_listeners
        - average_listening_time
        - listeners
        - listeners_30s
        - listening_time
        - max_listeners
        - max_listening_time
        - min_listeners
        - min_listening_time
        - stream_id
        - type
        - uniques
      type: object
      properties:
        stream_id:
          title: stream_id
          type: integer
          description: The stream id related to this stat
          example: 2
        listeners:
          title: listeners
          type: integer
          description: The number of listeners
          example: 10
        listeners_30s:
          title: listeners_30s
          type: integer
          description: The number of listeners will stay 30 seconds
          example: 5
        max_listeners:
          title: max_listeners
          type: integer
          description: The max listeners on the date range
          example: 5
        min_listeners:
          title: min_listeners
          type: integer
          description: The min listeners on the date range
          example: 0
        uniques:
          title: uniques
          type: integer
          description: The number of unique listeners
          example: 4
        average_listeners:
          title: average_listeners
          type: number
          description: The average listeners on the date range
          example: 3.36
        listening_time:
          title: listening_time
          type: integer
          description: The number of seconds listened
          example: 120
        max_listening_time:
          title: max_listening_time
          type: integer
          description: The max of seconds listened
          example: 20
        min_listening_time:
          title: min_listening_time
          type: integer
          description: The min of seconds listened
          example: 1
        average_listening_time:
          title: average_listening_time
          type: number
          description: The average of seconds listened on the date range
          example: 53.15
        type:
          title: type
          enum:
            - hls
            - stream
          type: string
          description: The type of stream
          example: hls
    StatConsumption:
      title: StatConsumption
      required:
        - average_bytes_by_listeners
        - bytes
        - date
      type: object
      properties:
        date:
          title: date
          type: string
          description: The date of the consumption stat
          example: '1679754593'
        bytes:
          title: bytes
          type: integer
          description: The number of bytes consumed
          example: 131315
        average_bytes_by_listeners:
          title: average_bytes_by_listeners
          type: number
          description: The average of bytes consumed by listener
          example: 15621
    StatConsumptionByStream:
      title: StatConsumptionByStream
      required:
        - average_bytes_by_day
        - average_bytes_by_listeners
        - max_bytes
        - stream_id
        - total_bytes
        - type
      type: object
      properties:
        stream_id:
          title: stream_id
          type: integer
          description: The stream id related to this stat
          example: 2
        total_bytes:
          title: total_bytes
          type: integer
          description: The total of bytes consumed on the date range
          example: 1012652
        average_bytes_by_listeners:
          title: average_bytes_by_listeners
          type: number
          description: The average of bytes consumed by listeners
          example: 5165
        average_bytes_by_day:
          title: average_bytes_by_day
          type: number
          description: The average of bytes consumed by day
          example: 51132
        max_bytes:
          title: max_bytes
          type: integer
          description: The max bytes consumed in one day
          example: 15156
        type:
          title: type
          enum:
            - hls
            - stream
          type: string
          description: The type of stream
          example: hls
    StatTotalPlayer:
      title: StatTotalPlayer
      required:
        - average_listeners_by_day
        - listeners
        - percent_listeners
        - player
      type: object
      properties:
        streams:
          title: streams
          type: string
          description: >-
            The list of streams use this player (only available on stations
            stats)
          example: 1,3,5
        stations:
          title: stations
          type: string
          description: >-
            The list of stations use this player (only available on radio
            products stats)
          example: 10,15
        player:
          title: player
          type: string
          description: The stat player name
          example: Safari
        listeners:
          title: listeners
          type: integer
          description: The number of listeners
          example: 10
        percent_listeners:
          title: percent_listeners
          type: number
          description: The percent of listeners of the player total
          example: 40.85
        average_listeners_by_day:
          title: average_listeners_by_day
          type: number
          description: The average of listeners by day
          example: 20.05
    StatListLink:
      title: StatListLink
      required:
        - hostname
        - instant_customer
        - instant_customer_per_stream
        - mediastats_per_stream
        - password
        - port
        - status
        - status_per_stream
        - update_metadata
        - username
      type: object
      properties:
        hostname:
          title: hostname
          type: string
          description: The hostname of the API
          example: https://api.infomaniak.com
        port:
          title: port
          type: integer
          description: The port of the API
          example: 80
        username:
          title: username
          type: string
          description: The username to use in stat link
          example: myUsername
        password:
          title: password
          type: string
          description: The password to use in stat link
          example: myPassword
        status:
          title: status
          type: string
          description: The url link to call to get status on each streams
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status
        status_per_stream:
          title: status_per_stream
          type: array
          items:
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: status_per_stream
            description: The url list to call to get status stream
            conditional: false
            items: null
            in: null
            example: >-
              https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
            deprecated: null
          description: The url list to call to get status stream
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
        instant_customer:
          title: instant_customer
          type: string
          description: The url link to call to get number of listeners on each streams
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners
        instant_customer_per_stream:
          title: instant_customer_per_stream
          type: array
          items:
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: instant_customer_per_stream
            description: The url list to call to get number of listeners on stream
            conditional: false
            items: null
            in: null
            example: >-
              https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
            deprecated: null
          description: The url list to call to get number of listeners on stream
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
        mediastats_per_stream:
          title: mediastats_per_stream
          type: array
          items:
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: mediastats_per_stream
            description: The url list to call to get mediastats on stream
            conditional: false
            items: null
            in: null
            example: >-
              https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
            deprecated: null
          description: The url list to call to get mediastats on stream
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
        update_metadata:
          title: update_metadata
          type: string
          description: The url link to call to change metadata of your station
          example: >-
            https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/metadata?data=artist
            - title
    Notification:
      title: Notification
      required:
        - end_hour
        - is_enabled
        - is_friday
        - is_mail
        - is_monday
        - is_saturday
        - is_sms
        - is_sunday
        - is_thursday
        - is_tuesday
        - is_wednesday
        - start_hour
        - users
      type: object
      properties:
        is_monday:
          title: is_monday
          type: boolean
          description: Is the users can be notified the monday ?
          example: true
        is_tuesday:
          title: is_tuesday
          type: boolean
          description: Is the users can be notified the tuesday ?
          example: true
        is_wednesday:
          title: is_wednesday
          type: boolean
          description: Is the users can be notified the wednesday ?
          example: true
        is_thursday:
          title: is_thursday
          type: boolean
          description: Is the users can be notified the thursday ?
          example: true
        is_friday:
          title: is_friday
          type: boolean
          description: Is the users can be notified the friday ?
          example: true
        is_saturday:
          title: is_saturday
          type: boolean
          description: Is the users can be notified the saturday ?
          example: true
        is_sunday:
          title: is_sunday
          type: boolean
          description: Is the users can be notified the sunday ?
          example: true
        start_hour:
          title: start_hour
          type: string
          description: The time to use for daily restart
          example: '14:25'
        end_hour:
          title: end_hour
          type: string
          description: The time to use for daily restart
          example: '20:03'
        is_mail:
          title: is_mail
          type: boolean
          description: Is the users can be notified by mail ?
          example: true
        is_sms:
          title: is_sms
          type: boolean
          description: Is the users can be notified by sms ?
          example: true
        is_enabled:
          title: is_enabled
          type: boolean
          description: Is the resource `Notification` enabled?
          example: true
        users:
          title: users
          type: array
          description: List of users ID will notified
          example: 1,5,10
    HlsStream:
      title: HlsStream
      required:
        - bitrates
        - buffer_size
        - country_list
        - created_at
        - domains
        - fragment_size
        - hash_key
        - id
        - ip_exclude_list
        - ip_include_list
        - is_allow_country
        - is_hash_restriction
        - is_up
        - name
        - source_id
        - updated_at
        - url
        - uuid
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `HlsStream`
          example: 1
        uuid:
          title: uuid
          type: string
          description: Universally unique identifier of the resource `HlsStream`
          example: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
        name:
          title: name
          type: string
          description: Define unique name used in url
          example: myHls
        bitrates:
          title: bitrates
          type: string
          description: The bitrates used in the `HlsStream`
          example: 64,96,128
        buffer_size:
          title: buffer_size
          type: integer
          description: The size of the buffer in the `HlsStream`
          example: 25
        fragment_size:
          title: fragment_size
          type: integer
          description: The size of the fragment in the `HlsStream` use for buffer size
          example: 25
        is_hash_restriction:
          title: is_hash_restriction
          type: boolean
          description: Is hash restriction enabled?
          example: true
        hash_key:
          title: hash_key
          type: string
          description: The hash key used for hash protection
          example: my_hash_key
        ip_include_list:
          title: ip_include_list
          type: string
          description: The ip list allows to access to the hls stream
        ip_exclude_list:
          title: ip_exclude_list
          type: string
          description: The ip list not allows to access to the hls stream
        is_allow_country:
          title: is_allow_country
          type: boolean
          description: Define if the hls stream used the restriction rules
        country_list:
          title: country_list
          type: string
          description: The country list not allows to access to the hls stream
        url:
          title: url
          type: string
          description: The public url for `HlsStream`
          example: my-hls.infomaniak.com/my-hls/manifest.m3u8
        is_up:
          title: is_up
          type: boolean
          description: Is the `HlsStream` is online?
          example: true
        domains:
          title: domains
          type: string
          description: The list of domains allow to access
          example: infomaniak.com,my-radio.ch
        source_id:
          title: source_id
          type: integer
          description: The source `Stream` of the `HlsStream`
          example: 1
        created_at:
          title: created_at
          type: integer
          description: Timestamp `HlsStream` has been created
          format: timestamp
          example: 1478357542
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `HlsStream` has been updated
          format: timestamp
          example: 1615838270
    StatListenerByStation_21e42669:
      title: StatListenerByStation
      required:
        - average_listeners
        - average_listening_time
        - listeners
        - listeners_30s
        - listening_time
        - max_listeners
        - max_listening_time
        - min_listeners
        - min_listening_time
        - station_id
        - uniques
      type: object
      properties:
        station_id:
          title: station_id
          type: integer
          description: The station id related to this stat
          example: 2
        listeners:
          title: listeners
          type: integer
          description: The number of listeners
          example: 10
        listeners_30s:
          title: listeners_30s
          type: integer
          description: The number of listeners will stay 30 seconds
          example: 5
        max_listeners:
          title: max_listeners
          type: integer
          description: The max listeners on the date range
          example: 5
        min_listeners:
          title: min_listeners
          type: integer
          description: The min listeners on the date range
          example: 0
        uniques:
          title: uniques
          type: integer
          description: The number of unique listeners
          example: 4
        average_listeners:
          title: average_listeners
          type: number
          description: The average listeners on the date range
          example: 3.36
        listening_time:
          title: listening_time
          type: integer
          description: The number of seconds listened
          example: 120
        max_listening_time:
          title: max_listening_time
          type: integer
          description: The max of seconds listened
          example: 20
        min_listening_time:
          title: min_listening_time
          type: integer
          description: The min of seconds listened
          example: 1
        average_listening_time:
          title: average_listening_time
          type: number
          description: The average of seconds listened on the date range
          example: 53.15
    StatConsumptionByStation:
      title: StatConsumptionByStation
      required:
        - average_bytes_by_day
        - average_bytes_by_listeners
        - max_bytes
        - station_id
        - total_bytes
      type: object
      properties:
        station_id:
          title: station_id
          type: integer
          description: The station id related to this stat
          example: 2
        total_bytes:
          title: total_bytes
          type: integer
          description: The total of bytes consumed on the date range
          example: 1012652
        average_bytes_by_listeners:
          title: average_bytes_by_listeners
          type: number
          description: The average of bytes consumed by listeners
          example: 5165
        average_bytes_by_day:
          title: average_bytes_by_day
          type: number
          description: The average of bytes consumed by day
          example: 51132
        max_bytes:
          title: max_bytes
          type: integer
          description: The max bytes consumed in one day
          example: 15156
    RadioProductOptionShop:
      title: RadioProductOptionShop
      required:
        - created_at
        - ended_at
        - id
        - option_subject_id
        - option_subject_name
        - option_subject_type
        - price
        - quantity
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `RadioProductOptionShop`
          example: 1
        quantity:
          title: quantity
          type: integer
        price:
          title: price
          type: number
        type:
          title: type
          type: integer
          description: Type of the resource `RadioProductOptionShop`
          example: 1
        option_subject_id:
          title: option_subject_id
          type: integer
        option_subject_type:
          title: option_subject_type
          type: string
        option_subject_name:
          title: option_subject_name
          type: string
        created_at:
          title: created_at
          type: integer
          description: Timestamp `RadioProductOptionShop` has been created
          format: timestamp
          example: 1478357542
        ended_at:
          title: ended_at
          type: integer
          description: Timestamp `RadioProductOptionShop` has ended
          format: timestamp
          example: 1600370552
    NewSignatureAsset:
      title: NewSignatureAsset
      type: object
      properties:
        image:
          title: image
          type: string
          description: |+
            Url of newly created image

          format: url
    Mailbox:
      title: Mailbox
      type: object
      allOf:
        - $ref: '#/components/schemas/MailboxBase'
          schema: []
        - title: Mailbox
          required:
            - is_free_mail
            - is_limited
            - mailbox
            - mailbox_idn
            - mailbox_name
          type: object
          properties:
            is_limited:
              title: is_limited
              type: boolean
              description: |+
                True if mailbox has rate limit

            is_free_mail:
              title: is_free_mail
              type: boolean
              description: |+
                True if mailbox belongs to free mail service

            full_name:
              title: full_name
              type: string
              description: |-
                Mailbox's fullname

                **This field is provided only if you have set with=full_name**
            has_auto_responder:
              title: has_auto_responder
              type: boolean
              description: >-
                True if has_auto_responder is enabled


                **This field is provided only if you have set
                with=has_auto_responder**
            auto_responder:
              $ref: '#/components/schemas/MailboxAutoReply'
              schema: []
            has_redirection:
              title: has_redirection
              type: boolean
              description: |-
                True if has at least one redirection

                **This field is provided only if you have set with=redirection**
            redirections:
              type: array
              items:
                type: string
                description: Redirection address list
            aliases:
              type: array
              items:
                type: string
                description: Aliases names list
            full_aliases:
              type: array
              items:
                type: string
                description: Aliases emails list
                format: email
            created_at:
              title: created_at
              type: integer
              description: |-
                Creation date

                **This field is provided only if you have set with=created_at**
              format: timestamp
              nullable: true
            password_last_changed_at:
              title: password_last_changed_at
              type: integer
              description: >-
                Last password change date


                **This field is provided only if you have set
                with=password_last_changed_at**
              format: timestamp
              nullable: true
            size:
              title: size
              type: integer
              description: |-
                Mailbox size in ko

                **This field is provided only if you have set with=size**
              nullable: true
            size_checked_at:
              title: size_checked_at
              type: integer
              description: |-
                Last mailbox size verification date

                **This field is provided only if you have set with=last_login**
              format: timestamp
              nullable: true
            imap_last_login_at:
              title: imap_last_login_at
              type: integer
              description: |-
                Last login date from imap protocol, unix timestamp

                **This field is provided only if you have set with=last_login**
              format: timestamp
              nullable: true
            pop3_last_login_at:
              title: pop3_last_login_at
              type: integer
              description: |-
                Last login date from imap protocol, unix timestamp

                **This field is provided only if you have set with=size**
              format: timestamp
              nullable: true
            operation_in_progress:
              title: operation_in_progress
              type: boolean
              description: >-
                True if blocking operation is currently in progress on this
                service


                **This field is provided only if you have set
                with=operation_in_progress**
            users:
              type: array
              items:
                $ref: '#/components/schemas/MailUser'
                schema: []
            has_move_spam:
              title: has_move_spam
              type: boolean
              description: >-
                True if has at least one redirection


                **This field is provided only if you have set
                with=has_move_spam**
            authorized_senders:
              type: array
              items:
                type: string
                format: email
                example: user@authorized-senders.com
            blocked_senders:
              type: array
              items:
                type: string
                format: email
                example: user@blocked-senders.com
            has_dkim_signature:
              title: has_dkim_signature
              type: boolean
              description: >-
                True if dkim signature is activated


                **This field is provided only if you have set
                with=has_dkim_signature**
            is_dkim_updatable:
              title: is_dkim_updatable
              type: boolean
              description: >-
                True if dkim signature can be updated


                **This field is provided only if you have set
                with=is_dkim_updatable**
            has_mail_filtering:
              title: has_mail_filtering
              type: boolean
              description: >-
                True if Commercial and SocialNetwork filters are activated


                **This field is provided only if you have set
                with=has_mail_filtering**
            mail_filtering_folder_commercials:
              title: mail_filtering_folder_commercials
              type: string
              description: >-
                Folder for Commercial emails filter


                **This field is provided only if you have set
                with=mail_filtering_folder_commercials**
            mail_filtering_folder_social_networks:
              title: mail_filtering_folder_social_networks
              type: string
              description: >-
                Folder for SocialNetwork emails filter


                **This field is provided only if you have set
                with=mail_filtering_folder_social_networks**
            is_auth:
              title: is_auth
              type: boolean
              description: |-
                True if user is authenticated with this mailbox

                **This field is provided only if you have set with=auth**
            is_removable:
              title: is_removable
              type: boolean
              description: >-
                True if mailbox is is_removable. Note: is always true


                **This field is provided only if you have set
                with=is_removable**
            permissions:
              $ref: '#/components/schemas/MailMailboxPermissions'
              schema: []
            mailbox_id:
              title: mailbox_id
              type: integer
              description: |-
                Identifier of this mailbox

                **This field is provided only if you have set with=mailbox_id**
    MailboxStore:
      title: MailboxStore
      required:
        - mailbox
        - quota
        - total
        - used
      type: object
      properties:
        mailbox:
          $ref: '#/components/schemas/Mailbox'
          schema: []
        quota:
          title: quota
          type: integer
          description: |+
            Service mail quota

        used:
          title: used
          type: integer
          description: |+
            Number of existing mailboxes linked to this service

        total:
          title: total
          type: integer
          description: |+
            New number of mailboxes linked to this service

        existing_user_email:
          title: existing_user_email
          type: boolean
          description: |+
            True when user exists for email and target is other_user

    WorkspaceInvitation:
      title: WorkspaceInvitation
      required:
        - expired_at
        - is_used
        - is_valid
        - key
        - permissions
        - sent_to
        - short_url
      type: object
      properties:
        short_url:
          title: short_url
          type: string
          description: |+
            Invitation url

          format: url
        key:
          title: key
          type: string
          description: |+
            Key

        sent_to:
          title: sent_to
          type: string
          description: |+
            Invitation recipient email address

          format: email
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/MailPermissions'
            schema: []
        expired_at:
          title: expired_at
          type: integer
          description: |+
            Expired date

          format: timestamp
        is_valid:
          title: is_valid
          type: boolean
          description: |+
            True if still valid

        is_used:
          title: is_used
          type: boolean
          description: |+
            True if invitation has been accepted

        mailbox:
          $ref: '#/components/schemas/MailboxBase'
          schema: []
        qrcode:
          title: qrcode
          type: string
          description: |-
            QR Code url

            **This field is provided only if you have set with=qrcode**
          format: base64
    MailboxFilter:
      title: MailboxFilter
      type: object
      properties:
        prevent_script:
          title: prevent_script
          type: boolean
          description: |+
            True if this mailbox can't use custom scripts

        use_scripts:
          title: use_scripts
          type: boolean
          description: |+
            True if a custom script is enabled

        scripts:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Script name
              is_enabled:
                type: boolean
                description: True if this script is enabled
              content:
                type: string
                description: Sieve script content
        filters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name
              is_enabled:
                type: boolean
                description: True if this filter is enabled
              has_all_of:
                type: boolean
                description: All of
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    property:
                      type: string
                      description: Property
                    operator:
                      type: string
                      description: Operator
                    value:
                      type: string
                      description: Value
                description: Conditions
              actions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Type
                    value:
                      type: string
                      description: Value
                description: Actions
        script:
          title: script
          type: string
          description: >+
            Actually used script content (custom script or generated script from
            filters)

    PostSieveFilter:
      required:
        - actions
        - conditions
        - has_all_of
        - is_enabled
        - name
      type: object
      properties:
        name:
          type: string
          description: Filter name
        is_enabled:
          type: boolean
          description: Is enabled
        has_all_of:
          type: boolean
          description: Filter must match all conditions if true, at least one if false
        conditions:
          required:
            - operator
            - property
            - value
          type: object
          properties:
            property:
              enum:
                - body
                - cc
                - from
                - reply-to
                - size
                - subject
                - to
                - x-infomaniak-type
              type: string
            operator:
              enum:
                - begin
                - contains
                - end
                - is
                - not
              type: string
            value:
              type: string
          description: List of condition
        actions:
          required:
            - type
          type: object
          properties:
            type:
              enum:
                - copy
                - discard
                - flag_seen
                - forward
                - move
                - stop
              type: string
            value:
              type: string
            create_a_folder:
              type: string
          description: List of action
      description: Sieve filter PATCH body parameters
    PatchSieveFilter:
      required:
        - actions
        - conditions
        - has_all_of
        - is_enabled
        - name
        - old_name
      type: object
      properties:
        name:
          type: string
          description: New name
        old_name:
          type: string
          description: Old name
        is_enabled:
          type: boolean
          description: Is enabled
        has_all_of:
          type: boolean
          description: Filter must match all conditions if true, at least one if false
        conditions:
          required:
            - operator
            - property
            - value
          type: object
          properties:
            property:
              enum:
                - body
                - cc
                - from
                - reply-to
                - size
                - subject
                - to
                - x-infomaniak-type
              type: string
            operator:
              enum:
                - begin
                - contains
                - end
                - is
                - not
              type: string
            value:
              type: string
          description: List of condition
        actions:
          required:
            - type
          type: object
          properties:
            type:
              enum:
                - copy
                - discard
                - flag_seen
                - forward
                - move
                - stop
              type: string
            value:
              type: string
            create_a_folder:
              type: string
          description: List of action
      description: Sieve filter PATCH body parameters
    MailboxFolder:
      title: MailboxFolder
      type: object
      properties:
        folders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Folder name
        draft_folder:
          title: draft_folder
          type: string
          description: |+
            Draft folder name

        trash_folder:
          title: trash_folder
          type: string
          description: |+
            Trash folder name

        sent_folder:
          title: sent_folder
          type: string
          description: |+
            Sent folder name

        spam_folder:
          title: spam_folder
          type: string
          description: |+
            Spam folder name

        archives_folder:
          title: archives_folder
          type: string
          description: |+
            Archives folder name

        commercials_folder:
          title: commercials_folder
          type: string
          description: |+
            Folder for Commercial emails filter

        social_networks_folder:
          title: social_networks_folder
          type: string
          description: |+
            Folder for SocialNetwork emails filter

    MailboxSignature:
      title: MailboxSignature
      type: object
      properties:
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/MailboxSignatureElement'
            schema: []
        default_signature_id:
          title: default_signature_id
          type: integer
          description: |+
            Default signature identifier

        valid_emails:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedEmail'
            schema: []
        position:
          title: position
          enum:
            - bottom
            - top
          type: string
          description: |+
            Signature position

    MailboxForwarding:
      title: MailboxForwarding
      type: object
      properties:
        is_enabled:
          title: is_enabled
          type: boolean
          description: |+
            Enabled

        redirect_adresses:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                format: email
                description: Email
              email_idn:
                type: string
                format: email
                description: EmailIDN
        has_dont_deliver:
          title: has_dont_deliver
          type: boolean
          description: |+
            True if email is deleted after forwarded

        has_forward_spam:
          title: has_forward_spam
          type: boolean
          description: |+
            True if transmits spam messages

    NewMailboxForwarding:
      title: NewMailboxForwarding
      type: object
      properties:
        email:
          title: email
          type: string
          description: |+
            Email

          format: email
        email_idn:
          title: email_idn
          type: string
          description: |+
            EmailIDN

          format: email
        has_dont_deliver:
          title: has_dont_deliver
          type: boolean
          description: |+
            True if email is deleted after forwarded

    MailboxAlias:
      title: MailboxAlias
      type: object
      properties:
        is_enabled:
          title: is_enabled
          type: integer
          description: |+
            Enable alias

        aliases:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Alias value
    ServiceMail:
      title: ServiceMail
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            Ressource identifier

        account_id:
          title: account_id
          type: integer
          description: |+
            Account id

        service_id:
          title: service_id
          type: integer
          description: |+
            Service id

        service_name:
          title: service_name
          type: string
          description: |+
            Service name

        customer_name:
          title: customer_name
          type: string
          description: |+
            Customer name

        internal_name:
          title: internal_name
          type: string
          description: |+
            Internal name

          nullable: true
        created_at:
          title: created_at
          type: integer
          description: |+
            Created at timestamp

          format: timestamp
        expired_at:
          title: expired_at
          type: integer
          description: |+
            Expired at timestamp

          format: timestamp
        has_maintenance:
          title: has_maintenance
          type: boolean
          description: |+
            Maintenance

        is_locked:
          title: is_locked
          type: boolean
          description: |+
            Locked

        tags:
          title: tags
          type: object
          description: ''
        unique_id:
          title: unique_id
          type: integer
          description: |+
            Unique id

        description:
          title: description
          type: string
          description: |+
            Description

        is_free:
          title: is_free
          type: boolean
          description: |+
            Is free

        is_zero_price:
          title: is_zero_price
          type: boolean
          description: |+
            Is zero price

        rights:
          $ref: '#/components/schemas/DomainRights'
          schema: []
        has_operation_in_progress:
          title: has_operation_in_progress
          type: boolean
          description: >-
            Operation in progress


            **This field is provided only if you have set
            with=operation_in_progress**
        main_fqdn:
          title: main_fqdn
          type: string
          description: |+
            Fully qualified domain name

        main_fqdn_idn:
          title: main_fqdn_idn
          type: string
          description: |+
            Fully qualified domain name, internationalized domain name

        bill_reference:
          title: bill_reference
          type: string
          description: |+
            Bill reference

        bill_periodicity:
          title: bill_periodicity
          type: integer
          description: |+
            Bill periodicity

        quota:
          title: quota
          type: integer
          description: |-
            Quota

            **This field is provided only if you have set with=quota**
          nullable: true
        used:
          title: used
          type: integer
          description: |-
            Used

            **This field is provided only if you have set with=quota**
        total:
          title: total
          type: integer
          description: |-
            Total

            **This field is provided only if you have set with=quota**
        diagnostic_dns:
          $ref: '#/components/schemas/MailDiagnosticDns'
          schema: []
        pack:
          $ref: '#/components/schemas/MailPack'
          schema: []
        limit:
          title: limit
          type: object
          properties:
            alias_for_fqdn:
              title: alias_for_fqdn
              type: boolean
              description: |+

            alias_for_fqdn_default:
              title: alias_for_fqdn_default
              type: boolean
              description: |+

            alias_for_mailbox:
              title: alias_for_mailbox
              type: boolean
              description: |+

            alias_for_mailbox_default:
              title: alias_for_mailbox_default
              type: boolean
              description: |+

          description: |+

    MailHosting:
      title: MailHosting
      required:
        - customer_name
        - expiration
        - mailboxes
        - offer
      type: object
      properties:
        customer_name:
          title: customer_name
          type: string
          description: |+
            customer_name

        offer:
          title: offer
          type: string
          description: |+
            offer

        expiration:
          title: expiration
          type: string
          description: |+
            Expiration date

          format: dd/mm/yyyy
        mailboxes:
          title: mailboxes
          type: integer
          description: |+
            Number of mailboxes on this product

    ServiceMailpreferences:
      title: Service Mail preferences
      required:
        - authorized_senders
        - blocked_senders
        - created_at
        - default_permissions
        - promotion_filter_enabled
        - spam_filter_enabled
        - updated_at
      type: object
      properties:
        default_permissions:
          title: default_permissions
          type: object
        spam_filter_enabled:
          title: spam_filter_enabled
          type: boolean
        promotion_filter_enabled:
          title: promotion_filter_enabled
          type: boolean
        authorized_senders:
          title: authorized_senders
          type: array
        blocked_senders:
          title: blocked_senders
          type: array
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Service Mail preferences` has been created
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Service Mail preferences` has been updated
          format: timestamp
    WorkspaceUserList:
      title: WorkspaceUserList
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUserMail'
            schema: []
    WorkspaceUser:
      title: WorkspaceUser
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/MailUser'
            schema: []
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceInvitation'
            schema: []
    MailboxSignatureElement:
      title: MailboxSignatureElement
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            Signature/personality identifier

        name:
          title: name
          type: string
          description: |+
            Signature name

        content:
          title: content
          type: string
          description: |+
            HTML content of the signature

        reply_to:
          title: reply_to
          type: string
          description: |+
            Reply to email

          format: email
        reply_to_idn:
          title: reply_to_idn
          type: string
          description: |+
            Reply to email IDN

          format: email
        reply_to_id:
          title: reply_to_id
          type: integer
          description: |+
            Reply to VerifiedEmail identifier

        full_name:
          title: full_name
          type: string
          description: |+
            From full name

        sender:
          title: sender
          type: string
          description: |+
            From email

          format: email
        sender_idn:
          title: sender_idn
          type: string
          description: |+
            From email IDN

          format: email
        sender_id:
          title: sender_id
          type: integer
          description: |+
            From VerifiedEmail identifier

        hash:
          title: hash
          type: string
          description: |+
            Hash (deprecated)

          nullable: true
        is_default:
          title: is_default
          type: boolean
          description: |+
            True if default signature/personality

    VerifiedEmail:
      title: VerifiedEmail
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            VerifiedEmail identifier

        email:
          title: email
          type: string
          description: |+
            Email

          format: email
        email_idn:
          title: email_idn
          type: string
          description: |+
            EmailIDN

          format: email
        is_account:
          title: is_account
          type: boolean
          description: |+
            True if is an account

        is_verified:
          title: is_verified
          type: boolean
          description: |+
            True if verified

        is_removable:
          title: is_removable
          type: boolean
          description: |+
            True if is_removable

    MailboxAutoReply:
      title: MailboxAutoReply
      type: object
      properties:
        is_enabled:
          title: is_enabled
          type: boolean
          description: |+
            Enabled (scheduled)

        is_active:
          title: is_active
          type: boolean
          description: |+
            Active (currently activated)

        reply_message:
          title: reply_message
          type: string
          description: |+
            Reply message

        reply_from:
          title: reply_from
          type: string
          description: |+
            Reply from

          format: email
        reply_from_id:
          title: reply_from_id
          type: integer
          description: |+
            Id of verified email configured as reply from

        is_recurrent:
          title: is_recurrent
          type: boolean
          description: |+
            Is recurrent

        recurrent_days:
          title: recurrent_days
          type: object
          properties:
            monday:
              title: monday
              type: boolean
              description: |+
                Activated on mondays

            tuesday:
              title: tuesday
              type: boolean
              description: |+
                Activated on tuesdays

            wednesday:
              title: wednesday
              type: boolean
              description: |+
                Activated on wednesdays

            thursday:
              title: thursday
              type: boolean
              description: |+
                Activated on thursday

            friday:
              title: friday
              type: boolean
              description: |+
                Activated on friday

            saturday:
              title: saturday
              type: boolean
              description: |+
                Activated on saturdays

            sunday:
              title: sunday
              type: boolean
              description: |+
                Activated on sundays

          description: ''
        started_at:
          title: started_at
          type: string
          description: |+
            Start

          format: date
        ended_at:
          title: ended_at
          type: string
          description: |+
            End

          format: date
        dont_reply_to:
          type: array
          items:
            type: string
            format: email
        has_send_original_message:
          title: has_send_original_message
          type: boolean
          description: |+
            Send original message

        valid_emails:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedEmail'
            schema: []
    PatchAutoReply:
      required:
        - is_enabled
      type: object
      properties:
        is_enabled:
          type: boolean
          description: Enable or disable auto reply
        message:
          type: string
          description: Auto reply message
        is_recurrent:
          minLength: 1
          type: boolean
          description: Activate responder for recurrent_days
        recurrent_days:
          type: object
          properties:
            monday:
              minLength: 1
              type: boolean
            tuesday:
              minLength: 1
              type: boolean
            wednesday:
              minLength: 1
              type: boolean
            thursday:
              minLength: 1
              type: boolean
            friday:
              minLength: 1
              type: boolean
            saturday:
              minLength: 1
              type: boolean
            sunday:
              minLength: 1
              type: boolean
          description: Recurrent days when auto reply is activated
        reply_from_id:
          type: integer
          description: Validated sender/reply address identifier
        dont_reply_to:
          type: array
          items:
            type: string
            format: email
          description: Ignored addresses
        started_at:
          minLength: 1
          type: string
          description: Begin date (Y-m-d H:i)<br/>This field must match the `Y-m-d` format.
        ended_at:
          type: string
          description: End date (Y-m-d H:i)<br/>This field must match the `Y-m-d` format.
        time_zone:
          minLength: 1
          type: string
      description: Auto reply PATCH body parameters
    ServiceMailResponder:
      title: Service Mail Responder
      required:
        - ended_at
        - id
        - is_active
        - is_model
        - is_recurrent
        - is_visible
        - message
        - name
        - recurrent_days
        - source_model_id
        - started_at
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Service Mail Responder`
        name:
          title: name
          type: string
          description: Name of the pack mail responder
        is_model:
          title: is_model
          type: boolean
        source_model_id:
          title: source_model_id
          type: integer
          nullable: true
        message:
          title: message
          type: string
          description: Message send by the responder
        is_recurrent:
          title: is_recurrent
          type: string
          description: Days when the responder is activated
        recurrent_days:
          title: recurrent_days
          type: string
          description: Days when the responder is activated
        started_at:
          title: started_at
          type: integer
          description: Timestamp of the start of the responder
          format: timestamp
          nullable: true
        ended_at:
          title: ended_at
          type: integer
          description: Timestamp of the end of the responder
          format: timestamp
          nullable: true
        is_active:
          title: is_active
          type: boolean
          description: is the responder actived
        is_visible:
          title: is_visible
          type: boolean
          nullable: true
        dont_reply_to:
          title: dont_reply_to
          type: array
          description: emails where autoreply will not be sent
          example: '[test@tests.ch]'
        reply_from_id:
          title: reply_from_id
          type: integer
          description: Id of the Email that send the auto reply
          nullable: true
        reply_from:
          title: reply_from
          type: string
          description: Email that send the auto reply
        valid_emails:
          type: array
          items:
            $ref: '#/components/schemas/ValidEmail'
            schema: []
    PatchMailboxPermission:
      type: object
      properties:
        permissions:
          type: object
          properties:
            can_manage_filters:
              type: boolean
              description: Manage sieve filters
            can_manage_security:
              type: boolean
              description: Manage security settings
            can_manage_aliases:
              type: boolean
              description: Manage aliases
            can_manage_redirections:
              type: boolean
              description: Manage redirections
            can_manage_signatures:
              type: boolean
              description: Manage signatures
            can_manage_auto_reply:
              type: boolean
              description: Manage auto reply
            can_change_password:
              type: boolean
              description: Can change mailbox password
            can_configure_mail_folders:
              type: boolean
              description: Can configure folders
          description: Permissions
      description: User or invitation permission PATCH body parameters
    Useravatar:
      title: User avatar
      required:
        - avatar
      type: object
      properties:
        avatar:
          title: avatar
          type: string
          description: Avatar
          example: https://www.infomaniak.com/img/common/logo-infomaniak.svg
    partialUserapplicationpassword:
      title: (partial) User application password
      required:
        - id
        - last_used_at
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: >-
            Unique identifier of the resource `(partial) User application
            password`
          example: 1234
        name:
          title: name
          type: string
          description: Name of the resource `(partial) User application password`
          example: My application
        last_used_at:
          title: last_used_at
          type: integer
          format: timestamp
          nullable: true
          example: 1630929640
    Userapplicationpassword:
      title: User application password
      required:
        - id
        - last_used_at
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User application password`
          example: 1234
        name:
          title: name
          type: string
          description: Name of the resource `User application password`
          example: My application
        last_used_at:
          title: last_used_at
          type: integer
          format: timestamp
          nullable: true
          example: 1630929640
        password:
          title: password
          type: string
          description: Only available when you store it.
          example: aaaabbbbccccdddd
    Account:
      title: Account
      required:
        - beta
        - blocked_order_id
        - created_at
        - id
        - in_process
        - language_id
        - legal_entity_type
        - locale
        - name
        - waiting_payment
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Account`
          example: 1234
        name:
          title: name
          type: string
          description: Name of the resource `Account`
          example: Secret Organization
        legal_entity_type:
          title: legal_entity_type
          enum:
            - company
            - individual
            - public_body
            - restrict
          type: string
          example: company
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Account` has been created
          format: timestamp
          example: 1294959600
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Accountaddress'
            schema: []
        timezone:
          title: timezone
          type: string
          example: Europe/Zurich
        website:
          title: website
          type: string
          example: https://www.infomaniak.com
        phone:
          title: phone
          type: string
          example: '+41790000000'
        fax:
          title: fax
          type: string
          example: '+41220000000'
        language:
          title: language
          type: string
        locale:
          title: locale
          type: string
          description: Represents a language identifier and a region identifier
          example: fr_FR
        language_id:
          title: language_id
          type: integer
          description: >-
            Unique identifier of the `language` that is related to the resource
            `Account`
          example: 1
        logo:
          title: logo
          type: string
          example: https://www.infomaniak.com/img/common/logo-infomaniak.svg
        order:
          title: order
          type: object
          properties:
            waiting_payment:
              title: waiting_payment
              type: integer
              example: 1
            in_process:
              title: in_process
              type: integer
              example: 0
            blocked_order_id:
              title: blocked_order_id
              type: array
        beta:
          title: beta
          type: boolean
          example: true
        type:
          title: type
          type: string
          example: owner
        billing:
          title: billing
          type: boolean
          example: true
        mailing:
          title: mailing
          type: boolean
          example: true
        billing_mailing:
          title: billing_mailing
          type: boolean
          example: true
        workspace_only:
          title: workspace_only
          type: boolean
          example: true
        no_access:
          title: no_access
          type: boolean
          example: true
        is_blocked:
          title: is_blocked
          type: boolean
          example: true
        blocked_at:
          title: blocked_at
          type: integer
          format: timestamp
          example: 0
        vat_number:
          title: vat_number
          type: string
          example: ''
        field1:
          title: field1
          type: string
          example: ''
        field2:
          title: field2
          type: string
          example: ''
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            schema: []
        services_already_demo:
          title: services_already_demo
          type: array
        customization_url:
          title: customization_url
          type: object
        nb_invitations:
          title: nb_invitations
          type: integer
          example: 2
        nb_users:
          title: nb_users
          type: integer
          example: 2
    Service:
      title: Service
      required:
        - count
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Service`
          example: 1
        name:
          title: name
          type: string
          description: Name of the resource `Service`
          example: hosting
        count:
          title: count
          type: integer
          example: 4
    AsyncTask:
      title: Async Task
      required:
        - created_at
        - executed_at
        - finished_at
        - response
        - status
        - updated_at
        - uuid
      type: object
      properties:
        uuid:
          title: uuid
          type: string
          description: Universally unique identifier of the resource `Async Task`
          format: uuid
          example: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
        status:
          title: status
          enum:
            - executed
            - failed
            - running
            - spooled
          type: string
          description: Status of the resource `Async Task`
          example: running
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Async Task` has been created
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Async Task` has been updated
          format: timestamp
        executed_at:
          title: executed_at
          type: integer
          description: Timestamp `Async Task` has been executed
          format: timestamp
        finished_at:
          title: finished_at
          type: integer
          description: Timestamp `Async Task` is finished
          format: timestamp
        response:
          title: response
          type: object
          description: Asynchronous response result
        error:
          title: error
          type: object
          description: Asynchronous error result
    Country:
      title: Country
      required:
        - id
        - is_enabled
        - name
        - short_name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Country`
          format: int32
          example: 203
        name:
          title: name
          type: string
          description: Name of the resource `Country`
          example: SWITZERLAND
        short_name:
          title: short_name
          type: string
          description: Short name of the resource `Country`
          example: CH
        is_enabled:
          title: is_enabled
          type: boolean
          description: Is the resource `Country` enabled?
          example: true
    Language:
      title: Language
      required:
        - id
        - locale
        - name
        - short_locale
        - short_name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Language`
          example: 2
        name:
          title: name
          type: string
          description: Name of the resource `Language`
          example: English
        short_name:
          title: short_name
          type: string
          description: Short name of the resource `Language`
          example: E
        locale:
          title: locale
          type: string
          description: Represents a language identifier and a region identifier
          example: en_GB
        short_locale:
          title: short_locale
          type: string
          description: Represents a language identifier
          example: en
    Product:
      title: Product
      required:
        - account_id
        - created_at
        - customer_name
        - expired_at
        - has_maintenance
        - has_operation_in_progress
        - id
        - internal_name
        - is_free
        - is_locked
        - is_trial
        - is_zero_price
        - rights
        - service_id
        - service_name
        - tags
        - unique_id
        - version
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Product`
        account_id:
          title: account_id
          type: integer
          description: >-
            Unique identifier of the `account` that is related to the resource
            `Product`
        service_id:
          title: service_id
          type: integer
          description: >-
            Unique identifier of the `service` that is related to the resource
            `Product`
        service_name:
          title: service_name
          type: string
          description: Name of the service
        customer_name:
          title: customer_name
          type: string
          description: Customer name of the resource `Product`
        internal_name:
          title: internal_name
          type: string
          nullable: true
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Product` has been created
          format: timestamp
        expired_at:
          title: expired_at
          type: integer
          description: Timestamp `Product` has expired
          format: timestamp
          nullable: true
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `Product` has been deleted
          format: timestamp
        version:
          title: version
          type: integer
        has_maintenance:
          title: has_maintenance
          type: boolean
          description: Does the resource `Product` have a maintenance mode enabled?
        is_locked:
          title: is_locked
          type: boolean
          description: Is the resource `Product` locked?
        has_operation_in_progress:
          title: has_operation_in_progress
          type: boolean
          description: Does the resource `Product` have an operation in progress ?
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            schema: []
        unique_id:
          title: unique_id
          type: integer
          description: Unique identifier of the resource `Product`
        description:
          title: description
          type: string
          description: Description of the resource `Product`
        bill_reference:
          title: bill_reference
          type: string
        is_free:
          title: is_free
          type: boolean
          description: Does the resource `Product` have a free price status?
        is_zero_price:
          title: is_zero_price
          type: boolean
          description: Does the resource `Product` have a zero price status?
        is_trial:
          title: is_trial
          type: boolean
          description: Does the resource `Product` have a trial status?
        rights:
          $ref: '#/components/schemas/Right'
          schema: []
        parent_id:
          title: parent_id
          type: integer
        parent_service_id:
          title: parent_service_id
          type: integer
        parent_service_name:
          title: parent_service_name
          type: string
        status:
          $ref: '#/components/schemas/Productstatus'
          schema: []
        users:
          type: array
          items:
            $ref: '#/components/schemas/ProductUser'
            schema: []
        admin:
          $ref: '#/components/schemas/ProductAdminUser'
          schema: []
        is_managed_by_partner:
          title: is_managed_by_partner
          type: boolean
    Timezone:
      title: Timezone
      required:
        - gmt
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Timezone`
          example: 414
        name:
          title: name
          type: string
          description: Name of the resource `Timezone`
          example: Europe/Zurich
        gmt:
          title: gmt
          type: string
          description: Greenwich Mean Time (GMT)
          example: '01:00'
    Event:
      title: Event
      required:
        - comments
        - description
        - ended_at
        - id
        - services
        - started_at
        - status
        - type
        - url
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Event`
          example: 414
        url:
          title: url
          type: string
          example: ed4px6RxMG
        type:
          title: type
          type: string
          example: enhancement
        status:
          title: status
          type: string
          description: Status of the resource `Event`
          example: terminated
        description:
          $ref: '#/components/schemas/EventDescription'
          schema: []
        comments:
          title: comments
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/EventTag'
            schema: []
        started_at:
          title: started_at
          type: integer
          description: Timestamp `Event` has been started
          format: timestamp
        ended_at:
          title: ended_at
          type: integer
          description: Timestamp `Event` has ended
          format: timestamp
          nullable: true
    UserProfile:
      title: User Profile
      required:
        - avatar
        - country
        - current_account_id
        - date_last_changed_password
        - display_name
        - double_auth
        - double_auth_method
        - email
        - first_name
        - id
        - infomaniak_application
        - language
        - last_login_at
        - last_name
        - login
        - otp
        - remaining_rescue_code
        - sms
        - sms_phone
        - timezone
        - yubikey
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User Profile`
        display_name:
          title: display_name
          type: string
          description: Display name
        first_name:
          title: first_name
          type: string
          description: First name
        last_name:
          title: last_name
          type: string
          description: Last name
        email:
          title: email
          type: string
          description: Email
        avatar:
          title: avatar
          type: string
          description: Avatar
        type:
          title: type
          type: string
        login:
          title: login
          type: string
          description: Login
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/Usersession'
            schema: []
        preferences:
          title: preferences
          type: object
          properties:
            security:
              title: security
              type: object
              properties:
                otp:
                  title: otp
                  type: boolean
                  description: One-time password
                sms:
                  title: sms
                  type: boolean
                sms_phone:
                  title: sms_phone
                  type: string
                yubikey:
                  title: yubikey
                  type: boolean
                infomaniak_application:
                  title: infomaniak_application
                  type: boolean
                double_auth:
                  title: double_auth
                  type: boolean
                  description: Double auth
                remaining_rescue_code:
                  title: remaining_rescue_code
                  type: integer
                last_login_at:
                  title: last_login_at
                  type: integer
                  description: Timestamp `User Profile` has been logged
                  format: timestamp
                date_last_changed_password:
                  title: date_last_changed_password
                  type: integer
                  format: timestamp
                double_auth_method:
                  title: double_auth_method
                  type: string
                  description: Double auth method
                auth_devices:
                  type: array
                  items:
                    $ref: '#/components/schemas/Userauthdevice'
                    schema: []
            account:
              title: account
              type: string
            connection:
              $ref: '#/components/schemas/Userconnection'
              schema: []
            language:
              $ref: '#/components/schemas/Language'
              schema: []
            country:
              $ref: '#/components/schemas/Country'
              schema: []
            timezone:
              $ref: '#/components/schemas/Timezone'
              schema: []
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Userphone'
            schema: []
        emails:
          title: emails
          type: object
          oneOf:
            - title: array
              type: array
              items:
                $ref: '#/components/schemas/Useremail'
                schema: []
            - title: array
              type: array
              items:
                $ref: '#/components/schemas/Useremail_f4611cfe'
                schema: []
    Usersupportticket:
      title: User support ticket
      required:
        - closed
        - created
        - id
        - mask
        - status
        - subject
        - updated
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User support ticket`
          example: 1234
        subject:
          title: subject
          type: string
          example: My ticket subject
        mask:
          title: mask
          type: string
          example: INK-XXX-XXXXX-XXX
        status:
          title: status
          enum:
            - closed
            - deleted
            - open
            - wait
          type: string
          description: Status of the resource `User support ticket`
          example: closed
        created:
          title: created
          type: integer
          format: timestamp
          example: 1606205084
        updated:
          title: updated
          type: integer
          format: timestamp
          example: 1606205084
        closed:
          title: closed
          type: integer
          format: timestamp
          example: 1606221451
    Useractivitylogs:
      title: User activity logs
      required:
        - account_id
        - action
        - created_at
        - description
        - id
        - ip
        - product
        - product_id
        - service_id
      type: object
      properties:
        id:
          title: Unique identifier
          type: string
          description: Unique identifier of the resource `User activity logs`
        description:
          title: description
          type: string
          description: Description of the resource `User activity logs`
        action:
          title: action
          type: string
          nullable: true
          example: Edit
        account_id:
          title: account_id
          type: integer
          description: >-
            Unique identifier of the `account` that is related to the resource
            `User activity logs`
          nullable: true
          example: 1234
        service_id:
          title: service_id
          type: integer
          description: >-
            Unique identifier of the `service` that is related to the resource
            `User activity logs`
          nullable: true
          example: 23
        product_id:
          title: product_id
          type: integer
          description: >-
            Unique identifier of the `product` that is related to the resource
            `User activity logs`
          nullable: true
          example: 1234
        product:
          title: product
          type: string
          nullable: true
          example: My product name
        ip:
          title: ip
          type: string
          nullable: true
          example: 127.0.0.1
        created_at:
          title: created_at
          type: integer
          description: Timestamp `User activity logs` has been created
          format: timestamp
          example: 1628144523
    Useremail:
      title: User email
      required:
        - checked
        - created_at
        - email
        - id
        - reminder
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User email`
          example: 123456
        email:
          title: email
          type: string
          description: Email
          example: john.doe@infomaniak.com
        created_at:
          title: created_at
          type: integer
          description: Timestamp `User email` has been created
          format: timestamp
          example: 1632815150
        reminder:
          title: reminder
          type: boolean
          example: true
        checked:
          title: checked
          type: boolean
          example: true
        type:
          title: type
          enum:
            - other
            - personal
            - professional
          type: string
          example: other
    Userphone:
      title: User phone
      required:
        - checked
        - created_at
        - id
        - phone
        - reminder
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User phone`
          example: 2
        phone:
          title: phone
          type: string
          example: '+41123456789'
        created_at:
          title: created_at
          type: integer
          description: Timestamp `User phone` has been created
          format: timestamp
          example: 1632896634
        reminder:
          title: reminder
          type: string
          example: 'true'
        checked:
          title: checked
          type: boolean
          example: true
        type:
          title: type
          type: string
          example: phone
    RepeatablePlannedEvent:
      title: RepeatablePlannedEvent
      required:
        - access_country
        - authorize_country
        - deleted_at
        - dvr_window
        - fragment_duration
        - name
        - planned_event_id
        - record
        - record_name
        - repeat_interval
        - repeat_until
        - start_at
        - stop_at
        - stop_live
        - storage_machine_id
        - stream_id
        - timezone
        - type
        - weekdays_only
        - weekends_only
      type: object
      properties:
        planned_event_id:
          title: planned_event_id
          type: integer
        stream_id:
          title: stream_id
          type: string
          description: >-
            Unique identifier of the `stream` that is related to the resource
            `RepeatablePlannedEvent`
        storage_machine_id:
          title: storage_machine_id
          type: integer
          description: >-
            Unique identifier of the `channel` that is related to the resource
            `RepeatablePlannedEvent`
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `RepeatablePlannedEvent` has been deleted
          format: datetime
        name:
          title: name
          type: string
          description: Name of the resource `RepeatablePlannedEvent`
        start_at:
          title: start_at
          type: integer
          format: datetime
        stop_at:
          title: stop_at
          type: integer
          format: datetime
        timezone:
          title: timezone
          type: string
        repeat_interval:
          title: repeat_interval
          type: integer
        repeat_until:
          title: repeat_until
          type: integer
          format: datetime
        weekends_only:
          title: weekends_only
          type: boolean
        weekdays_only:
          title: weekdays_only
          type: boolean
        authorize_country:
          title: authorize_country
          type: boolean
        stop_live:
          title: stop_live
          type: boolean
        access_country:
          title: access_country
          type: string
        record:
          title: record
          type: boolean
        record_name:
          title: record_name
          type: string
        fragment_duration:
          title: fragment_duration
          type: integer
        dvr_window:
          title: dvr_window
          type: integer
        type:
          title: type
          enum:
            - all
            - from
            - only
          type: string
          description: >-
            only=>Change only this event, all=>Change all event, from=>Change
            this event and recurrences
    RecordingConfig:
      title: RecordingConfig
      required:
        - auto_record
        - recording_config_id
      type: object
      properties:
        recording_config_id:
          title: recording_config_id
          type: integer
          description: >-
            Unique identifier of the `recording config` that is related to the
            resource `RecordingConfig`
        auto_record:
          title: auto_record
          type: boolean
        storage_machines:
          type: array
          items:
            $ref: '#/components/schemas/StorageMachine'
            schema: []
    StorageMachine:
      title: StorageMachine
      required:
        - auto_fragment_duration
        - auto_record_name
        - default
        - deleted_at
        - full
        - host
        - login
        - name
        - pass
        - path
        - port
        - protocol
        - recording_config_id
        - storage_machine_id
        - url_http
        - use_path
        - valid
        - vod_id
      type: object
      properties:
        storage_machine_id:
          title: storage_machine_id
          type: integer
          description: >-
            Unique identifier of the `channel` that is related to the resource
            `StorageMachine`
        vod_id:
          title: vod_id
          type: integer
          description: >-
            Unique identifier of the `vodProduct` that is related to the
            resource `StorageMachine`
          example: 1980
        name:
          title: name
          type: string
          description: Name of the resource `StorageMachine`
        protocol:
          title: protocol
          type: string
        host:
          title: host
          type: string
        port:
          title: port
          type: integer
        path:
          title: path
          type: string
        login:
          title: login
          type: string
          description: Login
        pass:
          title: pass
          type: string
        url_http:
          title: url_http
          type: string
        full:
          title: full
          type: boolean
        valid:
          title: valid
          type: boolean
        use_path:
          title: use_path
          type: boolean
        recording_config_id:
          title: recording_config_id
          type: integer
          description: >-
            Unique identifier of the `recording config` that is related to the
            resource `StorageMachine`
        default:
          title: default
          type: boolean
        auto_fragment_duration:
          title: auto_fragment_duration
          type: integer
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `StorageMachine` has been deleted
          format: datetime
        auto_record_name:
          title: auto_record_name
          type: string
    TranscodingOverlay:
      title: TranscodingOverlay
      required:
        - align
        - description
        - enabled
        - follow_update
        - height
        - horizontal_offset
        - image_url
        - name
        - opacity_percentage
        - overlay_id
        - size_percentage
        - vertical_offset
        - was_enabled
        - width
        - z_index
      type: object
      properties:
        overlay_id:
          title: overlay_id
          type: integer
        name:
          title: name
          type: string
          description: Name of the resource `TranscodingOverlay`
        enabled:
          title: enabled
          type: boolean
        follow_update:
          title: follow_update
          type: boolean
        description:
          title: description
          type: string
          description: Description of the resource `TranscodingOverlay`
        z_index:
          title: z_index
          type: integer
        align:
          title: align
          type: string
        width:
          title: width
          type: integer
        height:
          title: height
          type: integer
        opacity_percentage:
          title: opacity_percentage
          type: integer
        horizontal_offset:
          title: horizontal_offset
          type: integer
        vertical_offset:
          title: vertical_offset
          type: integer
        size_percentage:
          title: size_percentage
          type: integer
        was_enabled:
          title: was_enabled
          type: boolean
        encoder_preset:
          title: encoder_preset
          type: string
        image_url:
          title: image_url
          type: string
        image_base_64:
          title: image_base_64
          type: string
    TimeshiftConfig:
      title: TimeshiftConfig
      required:
        - dvr_option_id
        - enabled
        - record_window_duration
      type: object
      properties:
        dvr_option_id:
          title: dvr_option_id
          type: integer
        record_window_duration:
          title: record_window_duration
          type: integer
          description: 'Define how far your viewers can go back (max.: 240 minutes)'
        enabled:
          title: enabled
          type: boolean
          description: Activating the Timeshift
        recorder:
          title: recorder
          type: string
    Consumptionressource:
      title: Consumption ressource
      required:
        - from
        - to
        - value
      type: object
      properties:
        value:
          title: value
          type: number
          description: the current monthly consumption (Byte)
        from:
          title: from
          type: integer
          description: Timestamp `Consumption ressource` from
          format: datetime
        to:
          title: to
          type: integer
          description: Timestamp `Consumption ressource` to
          format: datetime
    Viewersressource:
      title: Viewers ressource
      required:
        - from
        - to
        - value
      type: object
      properties:
        value:
          title: value
          type: number
          description: the current monthly viewers
        from:
          title: from
          type: integer
          description: Timestamp `Viewers ressource` from
          format: datetime
        to:
          title: to
          type: integer
          description: Timestamp `Viewers ressource` to
          format: datetime
    Histogramviewersressource:
      title: Histogram viewers ressource
      required:
        - histogram
      type: object
      properties:
        histogram:
          title: histogram
          type: array
    Geolocationressource:
      title: Geolocation ressource
      required:
        - from
        - locations
        - to
      type: object
      properties:
        locations:
          title: locations
          type: array
        from:
          title: from
          type: integer
          description: Timestamp `Geolocation ressource` from
          format: datetime
        to:
          title: to
          type: integer
          description: Timestamp `Geolocation ressource` to
          format: datetime
    Clusterressource:
      title: Cluster ressource
      required:
        - locations
        - resolutions
      type: object
      properties:
        locations:
          title: locations
          type: array
        resolutions:
          title: resolutions
          type: array
    Resolutionsresource:
      title: Resolutions resource
      required:
        - from
        - resolutions
        - to
        - total
      type: object
      properties:
        total:
          title: total
          type: integer
        resolutions:
          title: resolutions
          type: array
        from:
          title: from
          type: integer
          description: Timestamp `Resolutions resource` from
          format: datetime
        to:
          title: to
          type: integer
          description: Timestamp `Resolutions resource` to
          format: datetime
    Resolutionsandhistogramressource:
      title: Resolutions and histogram ressource
      required:
        - from
        - histogram
        - resolutions
        - to
      type: object
      properties:
        histogram:
          title: histogram
          type: array
        resolutions:
          title: resolutions
          type: array
        from:
          title: from
          type: integer
          description: Timestamp `Resolutions and histogram ressource` from
          format: datetime
        to:
          title: to
          type: integer
          description: Timestamp `Resolutions and histogram ressource` to
          format: datetime
    Integrationsressource:
      title: Integrations ressource
      required:
        - constant_url
        - dvr_available
        - dvr_enabled
        - stream_id
        - type
        - url
      type: object
      properties:
        type:
          title: type
          type: string
          example: hls
        url:
          title: url
          type: string
          example: >-
            https://maniak_tv.vedge.infomaniak.com/livecast/ik:maniak_tv/manifest.f4m
        constant_url:
          title: constant_url
          type: boolean
        stream_id:
          title: stream_id
          type: string
          description: >-
            Unique identifier of the `stream` that is related to the resource
            `Integrations ressource`
          example: maniak_tv
        dvr_available:
          title: dvr_available
          type: boolean
        dvr_enabled:
          title: dvr_enabled
          type: boolean
    Embedressource:
      title: Embed ressource
      required:
        - embed
      type: object
      properties:
        embed:
          title: embed
          type: string
          example: >-
            <iframe style='border:0;' allowfullscreen width='1280' height='720'
            src='https://player.infomaniak.com?channel=69069&player=4242'></iframe>
    Urlressource:
      title: Url ressource
      required:
        - src
      type: object
      properties:
        src:
          title: src
          type: string
          example: https://player.infomaniak.com?channel=69069&player=4242
    Options:
      title: Options
      required:
        - available
        - description
        - included
        - invoiceable_option
        - name
        - option_active
        - pricing
      type: object
      properties:
        name:
          title: name
          type: string
          description: Name of the resource `Options`
        available:
          title: available
          type: boolean
        description:
          title: description
          type: string
          description: Description of the resource `Options`
        included:
          title: included
          type: boolean
        option_active:
          title: option_active
          type: boolean
        pricing:
          $ref: '#/components/schemas/PricingOption'
          schema: []
        invoiceable_option:
          $ref: '#/components/schemas/ChannelInvoiceableOption'
          schema: []
    SimulcastConfig:
      title: SimulcastConfig
      required:
        - application_instance
        - application_name
        - deleted_at
        - dest_stream
        - enabled
        - facebook_config
        - force_disabled
        - host
        - name
        - platform
        - port
        - previously_enabled_by_event
        - scheme
        - simulcast_config_id
        - simulcast_platform_id
        - stream_id
        - was_enabled
      type: object
      properties:
        simulcast_config_id:
          title: simulcast_config_id
          type: integer
        simulcast_platform_id:
          title: simulcast_platform_id
          type: string
        host:
          title: host
          type: string
        port:
          title: port
          type: integer
        application_name:
          title: application_name
          type: string
        application_instance:
          title: application_instance
          type: string
        dest_stream:
          title: dest_stream
          type: string
        enabled:
          title: enabled
          type: boolean
        stream_id:
          title: stream_id
          type: string
          description: >-
            Unique identifier of the `stream` that is related to the resource
            `SimulcastConfig`
        name:
          title: name
          type: string
          description: Name of the resource `SimulcastConfig`
        was_enabled:
          title: was_enabled
          type: boolean
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `SimulcastConfig` has been deleted
          format: datetime
        previously_enabled_by_event:
          title: previously_enabled_by_event
          type: boolean
        force_disabled:
          title: force_disabled
          type: boolean
        scheme:
          title: scheme
          type: string
        facebook_config:
          title: facebook_config
          type: string
        platform:
          title: platform
          type: string
    Countriesressource:
      title: Countries ressource
      required:
        - '0'
      type: object
      properties:
        - title: '0'
          type: array
    Timezonesressource:
      title: Timezones ressource
      required:
        - '0'
      type: object
      properties:
        - title: '0'
          type: array
    CalendarEventAttendees:
      title: Event attendee
      required:
        - address
        - state
      type: object
      properties:
        address:
          title: Email address
          type: string
          example: myemail@ik.me
        organizer:
          title: Attendee is organizer or not
          type: boolean
        state:
          title: State of the attendee
          type: string
          enum:
            - NEEDS-ACTION
            - ACCEPTED
            - DECLINED
            - TENTATIVE
            - DELEGATED
        name:
          title: Name
          type: string
          maxLength: 100
    ConferenceOptions:
      title: Room settings
      required:
        - subject
        - start_audio_muted
        - enable_recording
        - enable_moderator_video
        - start_audio_only
        - lobby_enabled
        - password_enabled
        - e2ee_enabled
      type: object
      properties:
        subject:
          title: Subject
          type: string
        start_audio_muted:
          title: Start with audio muted
          type: boolean
        enable_recording:
          title: Enable auto recording
          type: boolean
        drive_id:
          title: The unique identifier (ID) of the kDrive
          description: Required if enable_recording is true
          type: integer
        enable_moderator_video:
          title: Enable video for moderator
          type: boolean
        start_audio_only:
          title: Start with audio only
          type: boolean
        lobby_enabled:
          title: Enable lobby
          type: boolean
        password_enabled:
          title: Enable password
          type: boolean
        password:
          title: Password
          description: Required if password_enabled is true (never displayed)
          type: string
        e2ee_enabled:
          title: Enable end to end encryption
          type: boolean
    ConferenceOptionsReturn:
      title: Room settings
      required:
        - subject
        - start_audio_muted
        - enable_recording
        - enable_moderator_video
        - start_audio_only
        - lobby_enabled
        - password_enabled
        - e2ee_enabled
      type: object
      properties:
        subject:
          title: Subject
          type: string
        start_audio_muted:
          title: Start with audio muted
          type: boolean
        enable_recording:
          title: Enable auto recording
          type: boolean
        drive_id:
          title: The unique identifier (ID) of the kDrive
          description: Required if enable_recording is true
          type: integer
        enable_moderator_video:
          title: Enable video for moderator
          type: boolean
        start_audio_only:
          title: Start with audio only
          type: boolean
        lobby_enabled:
          title: Enable lobby
          type: boolean
        password_enabled:
          title: Enable password
          type: boolean
        e2ee_enabled:
          title: Enable end to end encryption
          type: boolean
    Liveressource:
      title: Live ressource
      required:
        - application_instance
        - bytes_in
        - bytes_in_rate
        - bytes_out
        - bytes_out_rate
        - server_name
        - total_connections
      type: object
      properties:
        server_name:
          title: server_name
          type: string
        application_instance:
          title: application_instance
          type: string
        bytes_in:
          title: bytes_in
          type: integer
        bytes_out:
          title: bytes_out
          type: integer
        bytes_in_rate:
          title: bytes_in_rate
          type: integer
        bytes_out_rate:
          title: bytes_out_rate
          type: integer
        total_connections:
          title: total_connections
          type: integer
    stream:
      title: stream
      required:
        - audio_bitrate
        - audio_codec
        - created_at
        - frame_rate
        - instant_connection
        - interrupted
        - interrupted_at
        - keyframe_rate
        - language
        - original_stream_id
        - pass
        - published
        - recording_config_id
        - rendered
        - resolution
        - restrictions_id
        - stream_id
        - transcoding_option_id
        - url
        - username
        - video_bitrate
      type: object
      properties:
        stream_id:
          title: stream_id
          type: string
          description: >-
            Unique identifier of the `stream` that is related to the resource
            `stream`
        original_stream_id:
          title: original_stream_id
          type: string
        rendered:
          title: rendered
          type: boolean
        transcoding_option_id:
          title: transcoding_option_id
          type: integer
          description: >-
            Unique identifier of the `Option transcoding` that is related to the
            resource `stream`
        url:
          title: url
          type: string
        audio_bitrate:
          title: audio_bitrate
          type: integer
        video_bitrate:
          title: video_bitrate
          type: integer
        language:
          title: language
          type: string
        created_at:
          title: created_at
          type: integer
          description: Timestamp `stream` has been created
          format: datetime
        interrupted_at:
          title: interrupted_at
          type: integer
          description: Timestamp `stream` has been interrupted
          format: datetime
        restrictions_id:
          title: restrictions_id
          type: integer
          description: >-
            Unique identifier of the `restriction` that is related to the
            resource `stream`
        published:
          title: published
          type: boolean
        resolution:
          title: resolution
          type: integer
        recording_config_id:
          title: recording_config_id
          type: integer
          description: >-
            Unique identifier of the `recording config` that is related to the
            resource `stream`
        username:
          title: username
          type: string
        pass:
          title: pass
          type: string
        interrupted:
          title: interrupted
          type: boolean
        audio_codec:
          title: audio_codec
          type: string
        frame_rate:
          title: frame_rate
          type: string
        keyframe_rate:
          title: keyframe_rate
          type: integer
        instant_connection:
          title: instant_connection
          type: integer
        channel:
          $ref: '#/components/schemas/Channel'
          schema: []
    ViewersRestrictions:
      title: ViewersRestrictions
      required:
        - access_country
        - allow_domain
        - authorize_country
        - exception_ip
        - forbidden_ip
        - player_token
        - restrictions_id
        - shared_key
      type: object
      properties:
        restrictions_id:
          title: restrictions_id
          type: integer
          description: >-
            Unique identifier of the `restriction` that is related to the
            resource `ViewersRestrictions`
        access_country:
          title: access_country
          type: string
        allow_domain:
          title: allow_domain
          type: string
        exception_ip:
          title: exception_ip
          type: string
        forbidden_ip:
          title: forbidden_ip
          type: string
        shared_key:
          title: shared_key
          type: string
        authorize_country:
          title: authorize_country
          type: boolean
        player_token:
          title: player_token
          type: string
    Machine:
      title: Machine
      required:
        - ip
        - name
        - pool_id
        - type
        - url
        - url_domain
      type: object
      properties:
        name:
          title: name
          type: string
          description: Name of the resource `Machine`
        ip:
          title: ip
          type: string
        url:
          title: url
          type: string
        type:
          title: type
          enum:
            - edge
            - load-balancer
            - master
            - recorder
            - time-shifter
            - transcoder
          type: string
          description: Type of server
        pool_id:
          title: pool_id
          enum:
            - '1'
            - '2'
          type: integer
        url_domain:
          title: url_domain
          type: string
    ChannelWithTeamData:
      allOf:
        - $ref: '#/components/schemas/Channel'
        - type: object
          properties:
            team_display_name:
              type: string
              description: The display name of the team to which this channel belongs.
            team_name:
              type: string
              description: The name of the team to which this channel belongs.
            team_update_at:
              type: integer
              description: >-
                The time at which the team to which this channel belongs was
                last updated.
            policy_id:
              type: string
              description: >-
                The data retention policy to which this team has been assigned.
                If no such policy exists, or the caller does not have the
                `sysconsole_read_compliance_data_retention` permission, this
                field will be null.
    PostMetadata:
      type: object
      description: Additional information used to display a post.
      properties:
        embeds:
          type: array
          description: >
            Information about content embedded in the post including OpenGraph
            previews, image link previews, and message attachments. This field
            will be null if the post does not contain embedded content.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of content that is embedded in this point.
                enum:
                  - image
                  - message_attachment
                  - opengraph
                  - link
              url:
                type: string
                description: The URL of the embedded content, if one exists.
              data:
                type: object
                description: >
                  Any additional information about the embedded content. Only
                  used at this time to store OpenGraph metadata.

                  This field will be null for non-OpenGraph embeds.
        emojis:
          type: array
          description: >
            The custom emojis that appear in this point or have been used in
            reactions to this post. This field will be null if the post does not
            contain custom emojis.
          items:
            $ref: '#/components/schemas/Emoji'
        files:
          type: array
          description: >
            The FileInfo objects for any files attached to the post. This field
            will be null if the post does not have any file attachments.
          items:
            $ref: '#/components/schemas/FileInfo'
        images:
          type: object
          description: >
            An object mapping the URL of an external image to an object
            containing the dimensions of that image. This field will be null if
            the post or its embedded content does not reference any external
            images.
          items:
            type: object
            properties:
              height:
                type: integer
              width:
                type: integer
        reactions:
          type: array
          description: >
            Any reactions made to this point. This field will be null if no
            reactions have been made to this post.
          items:
            $ref: '#/components/schemas/Reaction'
    TopReaction:
      type: object
      properties:
        emoji_name:
          description: The name of the emoji used for this reaction.
          type: string
        count:
          description: The number of the times this emoji has been used.
          type: integer
          format: int64
    NewTeamMember:
      type: object
      properties:
        id:
          description: The user's ID.
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        position:
          description: The user's position field value.
          type: string
        create_at:
          description: The creation timestamp of the team member record.
          type: integer
    TopChannel:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        display_name:
          type: string
        name:
          type: string
        team_id:
          type: string
        message_count:
          description: >-
            The number of messages posted in the channel by users over the given
            time period (not including messages posted by bots).
          type: string
    InsightUserInformation:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        username:
          type: string
        last_picture_update:
          type: string
        create_at:
          type: integer
          format: int64
    TopThread:
      type: object
      properties:
        post:
          $ref: '#/components/schemas/Post'
        channel_id:
          type: string
        channel_display_name:
          type: string
        channel_name:
          type: string
        Participants:
          type: array
          items:
            type: string
        user_information:
          $ref: '#/components/schemas/InsightUserInformation'
    TopDMInsightUserInformation:
      allOf:
        - $ref: '#/components/schemas/InsightUserInformation'
        - type: object
          properties:
            position:
              type: string
    TopDM:
      type: object
      properties:
        post_count:
          type: integer
          format: int64
        outgoing_message_count:
          type: integer
          format: int64
        second_participant:
          $ref: '#/components/schemas/TopDMInsightUserInformation'
    SlackAttachment:
      type: object
      properties:
        Id:
          type: string
        Fallback:
          type: string
        Color:
          type: string
        Pretext:
          type: string
        AuthorName:
          type: string
        AuthorLink:
          type: string
        AuthorIcon:
          type: string
        Title:
          type: string
        TitleLink:
          type: string
        Text:
          type: string
        Fields:
          type: array
          items:
            $ref: '#/components/schemas/SlackAttachmentField'
        ImageURL:
          type: string
        ThumbURL:
          type: string
        Footer:
          type: string
        FooterIcon:
          type: string
        Timestamp:
          description: >-
            The timestamp of the slack attachment, either type of string or
            integer
          type: string
    SlackAttachmentField:
      type: object
      properties:
        Title:
          type: string
        Value:
          description: >-
            The value of the attachment, set as string but capable with golang
            interface
          type: string
        Short:
          type: boolean
    ChannelModeratedRoles:
      type: object
      properties:
        guests:
          $ref: '#/components/schemas/ChannelModeratedRole'
        members:
          $ref: '#/components/schemas/ChannelModeratedRole'
    ChannelModeratedRole:
      type: object
      properties:
        value:
          type: boolean
        enabled:
          type: boolean
    ChannelModeratedRolesPatch:
      type: object
      properties:
        guests:
          type: boolean
        members:
          type: boolean
    SidebarCategoryWithChannels:
      description: User's sidebar category with it's channels
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        team_id:
          type: string
        display_name:
          type: string
        type:
          type: string
          enum:
            - channels
            - custom
            - direct_messages
            - favorites
        channel_ids:
          type: array
          items:
            type: string
    GroupWithSchemeAdmin:
      description: group augmented with scheme admin information
      type: object
      properties:
        group:
          $ref: '#/components/schemas/Group'
        scheme_admin:
          type: boolean
    Api_Country:
      description: Country
      type: object
      properties:
        id:
          format: string
          description: ISO 3166-1 alpha-2
          type: string
          example: maria
        alpha3:
          format: string
          description: ISO 3166-1 alpha-3
          type: string
          example: maria
        name:
          format: string
          type: string
          example: maria
        official_state_name:
          format: string
          type: string
          example: maria
    Api_DemoGroup:
      description: DemoGroup
      type: object
      properties:
        id:
          format: int32
          type: number
          example: 42
        iDemo:
          format: int32
          description: Liaison avec la conf de la démo
          type: number
          example: 42
        iGroupe:
          format: string
          type: string
          example: maria
        iService:
          format: string
          type: string
          example: maria
        iItem:
          format: string
          type: string
          example: maria
        iSubItem:
          format: string
          type: string
          example: maria
        bDesactived:
          format: string
          type: string
          example: maria
        bIgnoreUse:
          format: string
          type: string
          example: maria
        dCreated:
          format: string
          description: Date de création de la démo
          type: string
          example: maria
        dValidite:
          format: string
          description: >-
            Date de butée de validité. A cette date on désactive l'item puis X
            jours après on le résilie
          type: string
          example: maria
        dResilied:
          format: string
          description: Date ou la désactivation d'une démo est intervenue.
          type: string
          example: maria
        dLimited:
          format: string
          description: Date ou la limitation d'une démo est intervenue.
          type: string
          example: maria
        dConverted:
          format: string
          description: Date ou la démo a été convertie en produit classique.
          type: string
          example: maria
        iMailSent:
          format: int32
          description: Liste de flag pour les mails déjà envoyé
          type: number
          example: 42
        account:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Account'
    ip:
      type: string
      example: 127.0.0.1
      properties: null
    Api_Language:
      description: Language
      type: object
      properties:
        id:
          format: string
          description: ISO 639-1
          type: string
          example: maria
        name:
          format: string
          type: string
          example: maria
        endonym:
          format: string
          type: string
          example: maria
    Api_Logo:
      description: Logo
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        uuid:
          format: string
          type: string
          example: maria
        channel_id:
          format: int32
          type: number
          example: 42
        mode:
          description: ''
          type: string
          items:
            type: string
          enum:
            - OVERLAY
            - EMBED
          example: OVERLAY
          format: string
        position:
          description: ''
          type: string
          items:
            type: string
          enum:
            - TOP_LEFT
            - TOP_MIDDLE
            - TOP_RIGHT
            - CENTER_LEFT
            - CENTER_MIDDLE
            - CENTER_RIGHT
            - BOTTOM_LEFT
            - BOTTOM_MIDDLE
            - BOTTOM_RIGHT
          example: TOP_LEFT
          format: string
        margin:
          format: int32
          type: number
          example: 42
        size:
          format: int32
          description: Integer value 1-100
          type: number
          example: 42
        data:
          format: string
          type: string
          example: maria
        width:
          format: int32
          type: number
          example: 42
        height:
          format: int32
          type: number
          example: 42
        mimetype:
          format: string
          type: string
          example: maria
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        channel:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Channel'
        medias:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Media'
        overlayLogos:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_OverlayLogo'
        uuidSequence:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_UuidSequence'
          type: object
    Api_Product:
      description: Product
      type: object
      properties:
        id:
          format: int32
          type: number
          example: 42
        auto_empty_trash:
          format: string
          type: string
          example: maria
        channel_name:
          format: string
          type: string
          example: maria
        channel_description:
          format: string
          type: string
          example: maria
        player:
          type: object
          $ref: '#/components/schemas/Api_Player'
        statistic_ignored_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        ftp_prefix:
          format: string
          type: string
          example: maria
        pack:
          format: string
          type: string
        medias_count:
          format: int32
          type: integer
          example: 42
        medias_uploaded:
          format: int32
          type: number
          example: 42
        medias_uploaded_last_hour:
          format: int32
          type: number
          example: 42
        parameters:
          description: ''
          type: array
          items:
            type: string
        rights:
          description: ''
          type: array
          items:
            type: string
        bill_reference:
          format: string
          type: string
          example: maria
        available_quota:
          format: float
          type: string
        legacy_product_id:
          format: int32
          type: number
          example: 42
        suspended_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        created_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        customer_name:
          format: string
          type: string
          example: maria
        expired_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        internal_name:
          format: string
          type: string
          example: maria
        service_id:
          format: int32
          type: number
          example: 42
        slug:
          format: string
          type: string
          example: maria
        special:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        version:
          format: int32
          type: number
          example: 42
        tags:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Tag'
        deleted_at:
          type: datetime
          example: '2021-09-15T14:23:41+00:00'
    Api_Tag:
      description: Tag
      type: object
      properties:
        id:
          format: int32
          type: number
          example: 42
        name:
          format: string
          type: string
          example: maria
        color:
          format: int32
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
    Api_User:
      description: User
      type: object
      properties:
        iGlobalUserCode:
          format: string
          type: string
          example: maria
        sLogin:
          format: string
          type: string
          example: maria
        sEmail:
          format: string
          type: string
          example: maria
        sFirstname:
          format: string
          type: string
          example: maria
        sLastname:
          format: string
          type: string
          example: maria
        sPassword:
          format: string
          type: string
          example: maria
        sCryptKey:
          format: string
          type: string
          example: maria
        iStatus:
          format: string
          type: string
          example: maria
        dValidationDate:
          format: datetime
          description: >-
            Date à laquelle le compte utilisateur a été validé (par lui même
            suite à invitation par exemple)
          type: string
          example: '2021-02-23T19:15:00+00:00'
        bInfomaniak:
          format: int32
          description: Flag pour indiquer si staff Infomaniak
          type: number
          example: 42
        setStaffDepartement:
          format: string
          type: string
          example: maria
        dDeleted:
          format: datetime
          type: string
          example: '2021-02-23T19:15:00+00:00'
        sOTPAuthSecret:
          format: string
          type: string
          example: maria
        sHashPassword:
          format: string
          type: string
          example: maria
        setDeletedAction:
          format: string
          type: string
          example: maria
        bOTPAuth:
          format: string
          type: string
          example: maria
        dLastLogin:
          format: datetime
          type: string
          example: '2021-02-23T19:15:00+00:00'
        dLastLoginAdmin:
          format: datetime
          type: string
          example: '2021-02-23T19:15:00+00:00'
        setCreatedAction:
          format: string
          type: string
          example: maria
        bInvalidEmail:
          format: string
          type: string
          example: maria
        sOTPAuthPendingSecret:
          format: string
          type: string
          example: maria
        sAvatarUrl:
          format: string
          type: string
          example: maria
        dCreation:
          format: string
          type: string
          example: maria
        dSecurityAssistant:
          format: string
          type: string
          example: maria
        bSMSAuth:
          format: string
          type: string
          example: maria
        sSMSPhone:
          format: string
          type: string
          example: maria
        dResetPassword:
          format: string
          type: string
          example: maria
        bYubikeyAuth:
          format: string
          type: string
          example: maria
        sYubikeyId:
          format: string
          type: string
          example: maria
        bDoubleAuth:
          format: string
          type: string
          example: maria
        sDoubleAuthMethod:
          format: string
          type: string
          example: maria
        bApplicationAuth:
          format: string
          type: string
          example: maria
        sPasswordStatus:
          format: string
          type: string
          example: maria
        dDatePasswordStatusChanged:
          format: string
          type: string
          example: maria
        accessGrants:
          description: ''
          type: array
          items:
            type: AccessGrant
        accessTokens:
          description: ''
          type: array
          items:
            type: AccessToken
        accounts:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Account'
        addresses:
          description: ''
          type: array
          items:
            type: Address
        answer:
          format: string
          type: SecretAnswer
        applications:
          description: ''
          type: array
          items:
            type: Application
        authDevices:
          description: ''
          type: array
          items:
            type: UserAuthDevice
        contactAddresses:
          description: ''
          type: array
          items:
            type: Address
        emails:
          description: ''
          type: array
          items:
            type: Email
        admin_last_used_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        avatar_url:
          format: string
          type: ''
        b_invalid_email:
          format: string
          type: ''
        created_action:
          format: string
          type: ''
        created_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        current_account:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Account'
          type: object
        d_security_assistant:
          format: string
          type: ''
        deleted_by_id:
          format: int32
          type: number
          example: 42
        deleted_by_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        email:
          format: string
          type: ''
        firstname:
          format: string
          type: ''
        id:
          format: string
          type: ''
        invalid_email:
          format: string
          type: ''
        last_used_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        lastname:
          format: string
          type: ''
        login:
          format: string
          type: ''
        name:
          format: string
          type: ''
        otp_enabled:
          format: string
          type: ''
        otpauth_secret:
          format: string
          type: ''
        phone:
          format: string
          type: ''
        remember_token:
          format: string
          type: ''
        staff:
          format: string
          type: ''
        status:
          format: string
          type: ''
        validated_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        mailboxes:
          description: ''
          type: array
          items:
            type: Mailbox
        oldPasswords:
          description: ''
          type: array
          items:
            type: OldPassword
        phones:
          description: ''
          type: array
          items:
            type: Phone
        preference:
          format: string
          type: Preference
        rememberTokens:
          description: ''
          type: array
          items:
            type: RememberToken
        rescueCodes:
          description: ''
          type: array
          items:
            type: RescueCode
        rights:
          description: ''
          type: array
          items:
            type: Right
        roles:
          description: ''
          type: array
          items:
            type: Role
        serviceRights:
          description: ''
          type: array
          items:
            type: ServiceRight
        password:
          format: string
        s_email:
          format: string
        s_remember_token:
          format: string
        teams:
          description: ''
          type: array
          items:
            type: Team
        userPasswords:
          description: ''
          type: array
          items:
            type: UserPassword
        validateEmailTokens:
          description: ''
          type: array
          items:
            type: ValidateEmailToken
    Api_AlertHitLog:
      description: AlertHitLog
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        datetime:
          format: string
          type: string
          example: maria
        state:
          format: string
          type: string
          example: maria
        result:
          format: string
          example: true
          type: bool
          enum:
            - true
            - false
        response:
          format: string
          type: string
          example: maria
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
    Api_Preview:
      description: Preview
      type: object
      properties:
        audio:
          type: object
          $ref: '#/components/schemas/Api_Link'
        audio_raw:
          type: object
          $ref: '#/components/schemas/Api_Link'
        video:
          type: object
          $ref: '#/components/schemas/Api_Link'
    Api_Sample:
      description: Sample
      type: object
      properties:
        audio:
          type: object
          $ref: '#/components/schemas/Api_Link'
        video:
          type: object
          $ref: '#/components/schemas/Api_Link'
    Api_Link:
      description: Link
      type: object
      properties:
        url:
          format: string
          type: string
          example: https://infomaniak.com
        mimetype:
          format: string
          type: string
          example: maria
        size:
          format: int32
          type: number
          example: 42
        size_human_readable:
          format: string
          type: string
          example: maria
    Api_MediaJournalLog:
      description: MediaJournalLog
      type: object
      properties:
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        media:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Media'
    Api_Channel:
      description: Channel
      type: object
      properties:
        id:
          format: string
          type: string
          example: maria
        name:
          format: string
          type: string
          example: maria
        description:
          format: string
          type: string
          example: maria
        statistic_ignored_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        auto_empty_trash:
          format: string
          type: string
          example: maria
        journal:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_MediaJournalLog'
    Api_DataUrl:
      type: object
      description: dataUrl
      properties:
        data:
          type: string
          example: b64encodedData
        mimetype:
          type: string
          example: image/png
        encoding:
          type: string
          example: encoding
    Api_Account:
      description: Account
      type: object
      properties:
        iCodeGroupes:
          format: string
          type: string
          example: maria
        sGroupesNom:
          format: string
          type: string
          example: maria
        eTypeGroup:
          format: string
          type: string
          example: maria
        sTVA:
          format: string
          description: Numéro de TVA
          type: string
          example: maria
        sPhone:
          format: string
          type: string
          example: maria
        sFax:
          format: string
          type: string
          example: maria
        sWebsite:
          format: string
          type: string
          example: maria
        bPartner:
          format: string
          type: string
          example: maria
        bContreAffaireAllowed:
          format: string
          type: string
          example: maria
        bExportGIT:
          format: int32
          description: Exporter les factures et paiements vers GIT
          type: number
          example: 42
        bAlwaysOn:
          format: int32
          type: number
          example: 42
        bDisableServiceOnUnpaid:
          format: string
          type: string
          example: maria
        bUseRenouvellement:
          format: string
          type: string
          example: maria
        bBetaTesteur:
          format: string
          type: string
          example: maria
        bExonerationTVA:
          format: string
          type: string
          example: maria
        fExonerationTVALimitTTC:
          format: string
          type: string
          example: maria
        iCountryCode:
          format: int32
          description: Code pays PAR DEFAUT des nouveaux users
          type: number
          example: 42
        iLanguageCode:
          format: int32
          description: Code langue par défaut du group
          type: number
          example: 42
        iTimezoneCode:
          format: int32
          description: timezone par défaut du groupe
          type: number
          example: 42
        iDefautEcheanceFacture:
          format: int32
          description: Echéance par défaut pour les factures du groupe en nombre de jours
          type: number
          example: 42
        bUniqueReference:
          format: string
          type: string
          example: maria
        bPerte:
          format: int32
          description: Possède au moins un fact. passée en perte
          type: number
          example: 42
        dDateCreation:
          format: string
          type: string
          example: maria
        bDeleted:
          format: string
          type: string
          example: maria
        dDeletedDate:
          format: datetime
          type: string
          example: '2021-02-23T19:15:00+00:00'
        sIPCreation:
          format: string
          type: string
          example: maria
        iBannerCampagne:
          format: int32
          description: stocker si groupe a été créé après click sur bannière campagne
          type: number
          example: 42
        idAffiliation:
          format: string
          type: string
          example: maria
        iStatutDoublon:
          format: int32
          description: Etat du traitement si compte en doublon
          type: number
          example: 42
        dDoublon:
          format: string
          description: Date à laquelle le statut a été changé
          type: string
          example: maria
        sUniqueReference:
          format: string
          description: >-
            Référence unique du groupe que le client doit renseigner lors d'un
            paiement par IBAN
          type: string
          example: maria
        CGUs:
          description: ''
          type: array
          items:
            type: CGUAgreement
        addresses:
          description: ''
          type: array
          items:
            type: Address
        billingAddresses:
          description: ''
          type: array
          items:
            type: Address
        country:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Country'
        customizationUrl:
          format: string
          type: AccountCustomizationUrl
        demoGroups:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_DemoGroup'
        beta:
          format: string
          type: ''
        country_id:
          format: string
          type: ''
        created_at:
          format: datetime
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_by_id:
          format: int32
          type: number
          example: 42
        deleted_by_ip:
          type: array
          items:
            $ref: '#/components/schemas/ip'
        fax:
          format: string
          type: ''
        id:
          format: string
          type: ''
        language_id:
          format: string
          type: ''
        legal_entity_type:
          format: string
          type: ''
        name:
          format: string
          type: ''
        partner:
          format: string
          type: ''
        phone:
          format: string
          type: ''
        s_phone:
          format: string
          type: ''
        timezone_id:
          format: string
          type: ''
        tva:
          format: string
          type: ''
        type:
          format: string
          type: ''
        website:
          format: string
          type: ''
        invitations:
          description: ''
          type: array
          items:
            type: AccountInvitation
        invoices:
          description: ''
          type: array
          items:
            type: Invoice
        language:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Language'
        logo:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Logo'
          type: object
        logs:
          description: ''
          type: array
          items:
            type: Log
        premiumSupport:
          description: ''
          type: array
          items:
            type: PremiumSupport
        products:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Product'
        roles:
          description: ''
          type: array
          items:
            type: Role
        services:
          description: ''
          type: array
          items:
            type: Service
        tags:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Tag'
        teams:
          description: ''
          type: array
          items:
            type: Team
        timezone:
          description: ''
          type: array
          items:
            type: Timezone
        users:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_User'
    Api_EncodingPreset:
      description: EncodingPreset
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        name:
          format: string
          type: string
          example: maria
        type:
          description: ''
          type: string
          items:
            type: string
          enum:
            - PLAYBACK
            - STORAGE
          example: PLAYBACK
          format: string
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        template:
          type: object
          $ref: '#/components/schemas/encoding_preset_template'
    Api_EncodingStream:
      description: EncodingStream
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        video_bitrate:
          format: int32
          description: In bps
          type: number
          example: 42
        video_width:
          format: int32
          type: number
          example: 42
        video_height:
          format: int32
          type: number
          example: 42
        audio_bitrate:
          format: int32
          description: In bps
          type: number
          example: 42
        audio_sampling:
          format: int32
          description: In Hz
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        encoding:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Encoding'
    encoding_preset_template:
      description: encoding preset
      type: object
      properties:
        container:
          type: number
          example: 2
        audio_codec:
          type: number
          example: 1
        audio_channel:
          type: number
          example: 2
        streams:
          type: array
          items:
            type: object
            properties:
              audio_bitrate:
                type: number
                example: 64000
              audio_sampling:
                type: number
                example: 48000
    Api_Encoding:
      description: Encoding
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        container:
          description: ''
          type: string
          items:
            type: string
          enum:
            - FLV
            - M4A
            - MKV
            - MP4
            - WEBM
            - MP3
            - COPY
            - AAC
          example: FLV
          format: string
        name:
          format: string
          type: string
          example: maria
        copy:
          format: string
          example: true
          type: bool
          enum:
            - true
            - false
        video_codec:
          description: ''
          type: string
          items:
            type: string
          enum:
            - H264
            - HEVC
            - THEORA
            - VP8
            - VP9
            - COPY
            - H263
          example: H264
          format: string
        video_aspect:
          description: ''
          type: string
          items:
            type: string
          enum:
            - LETTERBOX
            - STRETCH
            - FILL
            - KEEP_RATIO
            - COPY
          example: LETTERBOX
          format: string
        video_fps:
          format: float
          type: string
        audio_codec:
          description: ''
          type: string
          items:
            type: string
          enum:
            - AAC
            - HE_AAC
            - FLAC
            - MP3
            - VORBIS
            - COPY
            - OPUS
          example: AAC
          format: string
        audio_channel:
          description: ''
          type: string
          items:
            type: string
          enum:
            - MONO_1_0
            - STEREO_2_0
            - STEREO_2_1
            - SURROUND_4_1
            - SURROUND_5_1
            - SURROUND_6_1
            - SURROUND_7_1
          example: MONO_1_0
          format: string
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        owned:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        preset:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_EncodingPreset'
        streams:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_EncodingStream'
    Api_OverlayLogo:
      description: OverlayLogo
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        uuid:
          format: string
          type: string
          example: maria
        media_id:
          format: int32
          type: number
          example: 42
        logo_id:
          format: int32
          type: number
          example: 42
        index:
          format: int32
          type: number
          example: 42
        progress:
          format: float
          type: string
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        activities:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_MediaActivity'
        link:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_Link'
          type: object
        logo:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Logo'
        media:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Media'
        uuidSequence:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_UuidSequence'
          type: object
    Api_UuidSequence:
      description: UuidSequence
      type: object
      properties:
        uuid:
          format: string
          type: string
          example: maria
        model_type:
          format: string
          type: string
          example: maria
        model_id:
          format: int32
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        model:
          $ref: '#/components/schemas/Api_UuidSequence'
          type: object
        uuidSequence:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_UuidSequence'
          type: object
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
    media_manifests:
      description: manifest
      type: object
      properties:
        json:
          type: object
          properties:
            url:
              type: string
              example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
            mimetype:
              type: string
              example: application/json
            data:
              type: object
              properties:
                format:
                  type: string
                  example: JSON
        xml:
          type: object
          properties:
            url:
              type: string
              example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
            mimetype:
              type: string
              example: application/xml
            data:
              type: object
              properties:
                format:
                  type: string
                  example: XML
        v1xml:
          type: object
          properties:
            url:
              type: string
              example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
            mimetype:
              type: string
              example: application/xml
            data:
              type: object
              properties:
                format:
                  type: string
                  example: XML (v1 compatibility)
        yaml:
          type: object
          properties:
            url:
              type: string
              example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
            mimetype:
              type: string
              example: text/yaml
            data:
              type: object
              properties:
                format:
                  type: string
                  example: YAML
        yml:
          type: object
          properties:
            url:
              type: string
              example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
            mimetype:
              type: string
              example: text/yaml
            ' data':
              type: object
              properties:
                format:
                  type: string
                  example: YAML
    media_playbacks:
      description: playbacks
      type: object
      properties:
        encodingId:
          type: object
          properties:
            strategy:
              type: object
              properties:
                url:
                  type: string
                  example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
                mimetype:
                  type: string
                  example: video/mp4
                ' data':
                  type: object
                  properties:
                    encoding:
                      type: string
                      example: Copy source
                    strategy:
                      type: string
                      example: Progressive download (Best available)
                    key:
                      type: string
                      example: 'null'
    Api_Annotation:
      description: Annotation
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        body:
          format: string
          type: string
          example: maria
        published:
          format: string
          example: true
          type: bool
          enum:
            - true
            - false
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        from:
          format: float
          type: string
        to:
          format: float
          type: string
    Api_Subtitle:
      description: Subtitle
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        lines:
          format: string
          type: string
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        name:
          format: string
          type: string
          example: maria
        published:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        default:
          format: string
          type: bool
          enum:
            - true
            - false
          example: true
        link:
          description: ''
          type: array
          items:
            type: string
        language:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Language'
    Api_Upload:
      description: Upload
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        index:
          type: number
          example: 0
        progress:
          type: number
          example: 50
          description: percentage
        url:
          example: https://infomaniak.ch/url.mp4
        ready_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        meta:
          format: string
          description: ''
          $ref: '#/components/schemas/Api_UploadMeta'
          type: object
    Api_MediaActivity:
      description: MediaActivity
      type: object
      properties:
        cause:
          description: ''
          type: string
          items:
            type: string
          enum:
            - ELOQUENT_CREATED
            - ELOQUENT_RESTORED
            - ELOQUENT_REMOVED
            - ELOQUENT_UNREMOVED
            - ELOQUENT_DELETED
            - UPLOAD_INITIALIZING
            - UPLOAD_PULLING
            - UPLOAD_PULLED
            - UPLOAD_PUSHING
            - UPLOAD_PUSHED
            - UPLOAD_FAILED
            - AUDIO_SAMPLE_GENERATED
            - AUDIO_SAMPLE_GENERATING
            - AUDIO_WAVEFORM_GENERATED
            - AUDIO_WAVEFORM_GENERATING
            - SCENES_GENERATED
            - SCENES_GENERATING
            - THUMBNAIL_GENERATION_FAILED
            - THUMBSTRIP_GENERATED
            - THUMBSTRIP_GENERATING
            - VIDEO_PREVIEW_GENERATED
            - VIDEO_PREVIEW_GENERATING
            - VIDEO_SAMPLE_GENERATED
            - VIDEO_SAMPLE_GENERATING
            - VIDEO_THUMBNAIL_GENERATED
            - VIDEO_THUMBNAIL_GENERATING
            - ENCODING
            - VIDEO_POSTER_GENERATED
            - VIDEO_POSTER_GENERATING
            - FILE_STORING
            - FILE_STORED
            - ENCODING_QUEUED
            - ENCODING_STARTED
            - ENCODING_FINISHED
            - ENCODING_FAILED
          example: ELOQUENT_CREATED
          format: string
        message:
          format: string
          type: string
          example: maria
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        context:
          format: string
          type: string
          example: maria
        actor:
          $ref: '#/components/schemas/Api_MediaActivity'
          type: object
        media:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Api_Media'
    color:
      type: string
      example: '#FF0077'
      properties: null
    Api_Ad:
      description: Ad
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        url:
          format: string
          type: string
          example: https://infomaniak.com
        mimetype:
          format: string
          type: string
          example: maria
        href:
          format: string
          type: string
          example: maria
        type:
          description: ''
          type: string
          items:
            type: string
          enum:
            - PRE_ROLL
            - MID_ROLL
            - PST_ROLL
          example: PRE_ROLL
          format: string
        offset:
          format: string
          type: string
          example: maria
        tracking_id:
          format: string
          type: string
          example: maria
    Api_PlaylistItem:
      description: PlaylistItem
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 1jhvl2uqa5v8a
        position:
          format: int32
          type: number
          example: 42
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        deleted_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        type:
          format: string
          type: string
          example: maria
        model:
          $ref: '#/components/schemas/Api_PlaylistItem'
          type: object
    Api_UploadMeta:
      description: UploadMeta
      type: object
      properties:
        nb_streams:
          format: int32
          type: number
          example: 42
        nb_programs:
          format: int32
          type: number
          example: 42
        format_name:
          format: string
          type: string
          example: maria
        format_long_name:
          format: string
          type: string
          example: maria
        start_time:
          format: string
          type: timestamp
          example: maria
        duration:
          format: string
          type: string
          example: maria
        size:
          format: int32
          type: number
          example: 42
        bit_rate:
          format: int32
          description: In bps
          type: number
          example: 42
        probe_score:
          format: int32
          type: number
          example: 42
        tags:
          format: string
          type: string
        created_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        updated_at:
          format: string
          example: '2021-09-15T14:23:41+00:00'
          type: datetime
        display_aspect_ratio:
          format: string
          type: ''
        display_aspect_ratio_source:
          format: string
          type: ''
        height:
          format: string
          type: ''
        sample_aspect_ratio:
          format: string
          type: ''
        sample_aspect_ratio_source:
          format: string
          type: ''
        width:
          format: string
          type: ''
    Download_Link:
      description: Link
      type: object
      properties:
        url:
          format: string
          type: string
          example: https://infomaniak.com
        mimetype:
          format: string
          type: string
          example: maria
        size:
          format: int32
          type: number
          example: 42
        size_human_readable:
          format: string
          type: string
          example: maria
    shortUpload:
      description: upload
      type: object
      properties:
        id:
          type: string
          example: 1jhvl2uqae5sa
        index:
          type: int
          example: 0
        progress:
          type: int
          example: 50
        url:
          type: string
          example: https://infomaniak.ch/url.mp4
        created_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
        ready_at:
          type: datetime
          example: '2022-01-18T08:59:20+00:00'
    Tag:
      title: Tag
      required:
        - color
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Tag`
          example: 1234
        name:
          title: name
          type: string
          description: Name of the resource `Tag`
          example: My tag name
        color:
          title: color
          type: integer
          example: 4
        product_count:
          title: product_count
          type: integer
          description: Product count related to the resource `Tag`
          example: 2
    Right:
      title: Right
      type: object
      properties:
        technical:
          title: technical
          type: boolean
        statistic:
          title: statistic
          type: boolean
        check:
          title: check
          type: boolean
        sale:
          title: sale
          type: boolean
    Productstatus:
      title: Product status
      required:
        - activated_at
        - activated_by
        - infomaniak
        - locked
        - maintenance
        - superuser
        - technical
      type: object
      properties:
        maintenance:
          title: maintenance
          type: object
          properties:
            technical:
              title: technical
              type: boolean
            superuser:
              title: superuser
              type: boolean
            infomaniak:
              title: infomaniak
              type: boolean
        locked:
          title: locked
          type: object
          properties:
            superuser:
              title: superuser
              type: boolean
            infomaniak:
              title: infomaniak
              type: boolean
        activated_by:
          title: activated_by
          type: array
        activated_at:
          title: activated_at
          type: integer
          format: timestamp
    ProductUser:
      title: ProductUser
      required:
        - rights
        - user_id
      type: object
      properties:
        user_id:
          title: user_id
          type: integer
        rights:
          $ref: '#/components/schemas/Right'
          schema: []
    SwissBackupPrice:
      title: Swiss Backup Price
      required:
        - amount
        - amount_excl_vat
        - currency
        - type
        - unit
      type: object
      properties:
        type:
          title: type
          type: string
          description: Type of the resource `Swiss Backup Price`
          example: slot
        unit:
          title: unit
          type: integer
          example: 1
        currency:
          title: currency
          type: integer
          example: 1
        amount:
          title: amount
          type: string
          description: Amount incl. VAT
          example: '2.000'
        amount_excl_vat:
          title: amount_excl_vat
          type: string
          description: Amount excl. VAT
          example: '1.860'
    SwissBackupDiscount:
      title: Swiss Backup Discount
      required:
        - label
        - periodicity
        - value
      type: object
      properties:
        label:
          title: label
          type: string
          example: 2_years
        periodicity:
          title: periodicity
          type: integer
          description: Commitment period (in years)
          example: 2
        value:
          title: value
          type: integer
          example: 20
    StreamStored:
      title: Stream Stored
      required:
        - bitrate
        - codec
        - fallback_mountpoint
        - id
        - is_fallback
        - is_relay
        - is_source
        - is_transcoding
        - mountpoint
        - password
        - server_address
        - url
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Stream`
          example: 1
        mountpoint:
          title: mountpoint
          type: string
          description: The mountpoint to access to the stream
        codec:
          title: codec
          type: integer
          description: The codec used in the stream
        bitrate:
          title: bitrate
          type: integer
          description: The bitrate used to in the stream
        password:
          title: password
          type: string
          description: The password to access to the protected pages
        url:
          title: url
          type: string
          description: The url to listen the stream
        server_address:
          title: server_address
          type: string
          description: The server address to connect encoder
        fallback_mountpoint:
          title: fallback_mountpoint
          type: string
          description: The mountpoint used to fallback the stream
        is_relay:
          title: is_relay
          type: boolean
          description: Define if the stream is a relay stream
        is_source:
          title: is_source
          type: boolean
          description: >-
            Define if the stream is used like a source for HlsStream or
            Transcoding
        is_transcoding:
          title: is_transcoding
          type: boolean
          description: Define if the stream is a transcoded stream
        is_fallback:
          title: is_fallback
          type: boolean
          description: Is the `Stream` is a fallback?
          example: true
    PackPrice:
      title: PackPrice
      required:
        - currency
        - id
        - periodicity
        - periodicity_id
        - price_excluding_vat
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `PackPrice`
          example: 1
        price_excluding_vat:
          title: price_excluding_vat
          type: number
          description: The `PackPrice` without vat
          example: 15.2
        currency:
          title: currency
          enum:
            - CHF
            - EUR
          type: string
          description: The `PackPrice` currency
          example: CHF
        periodicity:
          title: periodicity
          enum:
            - MONTH
            - YEAR
          type: string
          description: The `PackPrice` time range
          example: MONTH
        periodicity_id:
          title: periodicity_id
          enum:
            - '1'
            - '2'
          type: integer
          description: Unique identifier of the resource `Periodicity`
          example: 1
    StreamSimplify:
      title: Stream Simplify
      required:
        - bitrate
        - codec
        - id
        - is_fallback
        - is_source
        - mountpoint
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Stream`
          example: 1
        type:
          title: type
          type: string
          description: The type of stream
          example: standard
        mountpoint:
          title: mountpoint
          type: string
          description: The mountpoint to access to the stream
        codec:
          title: codec
          type: integer
          description: The codec used in the stream
        bitrate:
          title: bitrate
          type: string
          description: The bitrate used to in the stream
        is_source:
          title: is_source
          type: boolean
          description: >-
            Define if the stream is used like a source for HlsStream or
            Transcoding
        is_fallback:
          title: is_fallback
          type: boolean
          description: Is the `Stream` is a fallback?
          example: true
    StatListenerPerMinuteStats:
      title: StatListenerPerMinuteStats
      required:
        - date
        - listeners
      type: object
      properties:
        date:
          title: date
          type: string
          description: The date of the listeners stat
          example: '1679754593'
        listeners:
          title: listeners
          type: integer
          description: The number of listeners
          example: 10
    ProductAdminUser:
      title: ProductAdminUser
      required:
        - display_name
        - email
        - user_id
      type: object
      properties:
        user_id:
          title: user_id
          type: integer
        email:
          title: email
          type: string
          description: Email
        display_name:
          title: display_name
          type: string
          description: Display name
    PublicCloudPrice:
      title: Public Cloud Price
      required:
        - CHF_excl_tax
        - CHF_incl_tax
        - EUR_excl_tax
        - EUR_incl_tax
      type: object
      properties:
        CHF_excl_tax:
          title: CHF_excl_tax
          type: number
          example: 124.51
        CHF_incl_tax:
          title: CHF_incl_tax
          type: number
          example: 136.36
        EUR_excl_tax:
          title: EUR_excl_tax
          type: number
          example: 118.21
        EUR_incl_tax:
          title: EUR_incl_tax
          type: number
          example: 138.49
    MailboxBase:
      title: MailboxBase
      required:
        - mailbox
        - mailbox_idn
        - mailbox_name
      type: object
      properties:
        mailbox_name:
          title: mailbox_name
          type: string
          description: |+
            The username (that is the part before the @) of the email address

          format: email
          example: user
        mailbox:
          title: mailbox
          type: string
          description: |+
            Full email address

          format: email
          example: user@xn--xample-hva.com
        mailbox_idn:
          title: mailbox_idn
          type: string
          description: |+
            Full email address with internationalized domain name (IDN) format

          format: email
          example: user@êxample.com
    MailUser:
      title: MailUser
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            WorkspaceUser identifier

        email:
          title: email
          type: string
          description: |+
            Email

          format: email
        name:
          title: name
          type: string
          description: |+
            Name

        is_deleted:
          title: is_deleted
          type: boolean
          description: |+
            True if deleted

        avatar:
          title: avatar
          type: string
          description: |+
            Avatar url

          format: url
        last_login_at:
          title: last_login_at
          type: object
          description: |+
            Last login timestamp

          format: timestamp
        has_double_auth:
          title: has_double_auth
          type: boolean
          description: |+
            True if double authentication is enabled

        permissions:
          $ref: '#/components/schemas/MailPermissions'
          schema: []
    MailMailboxPermissions:
      title: MailMailboxPermissions
      type: object
      allOf:
        - $ref: '#/components/schemas/MailPermissions'
          schema: []
        - title: MailMailboxPermissions
          type: object
          properties:
            has_technical_right:
              title: has_technical_right
              type: boolean
              description: |+
                Has technical right

            is_linked_to_user:
              title: is_linked_to_user
              type: boolean
              description: |+
                Is linked to user

    MailPermissions:
      title: MailPermissions
      type: object
      properties:
        can_manage_filters:
          title: can_manage_filters
          type: boolean
          description: |+
            Manage filters

        can_manage_security:
          title: can_manage_security
          type: boolean
          description: |+
            Manage security

        can_manage_aliases:
          title: can_manage_aliases
          type: boolean
          description: |+
            Manage aliases

        can_manage_redirections:
          title: can_manage_redirections
          type: boolean
          description: |+
            Manage redirections

        can_manage_signatures:
          title: can_manage_signatures
          type: boolean
          description: |+
            Manage signatures

        can_manage_auto_reply:
          title: can_manage_auto_reply
          type: boolean
          description: |+
            Manage auto reply

        can_change_password:
          title: can_change_password
          type: boolean
          description: |+
            Change password

        can_configure_mail_folders:
          title: can_configure_mail_folders
          type: boolean
          description: |+
            Configure mail folders

      description: Permissions
    MailingListSubscriber:
      title: MailingListSubscriber
      type: object
      properties:
        full_name:
          title: full_name
          type: string
          description: |+
            full_name

        mail:
          title: mail
          type: string
          description: |+
            Full email address

          format: email
        mail_idn:
          title: mail_idn
          type: string
          description: |+
            Full email address with IDN format

          format: email
        config:
          title: config
          type: object
          properties:
            count:
              title: count
              type: integer
              description: |+
                count

            last_error:
              title: last_error
              type: integer
              description: |+
                last_error

            last_error_code:
              title: last_error_code
              type: integer
              description: |+
                last_error_code

          description: |+

    DomainRights:
      title: DomainRights
      type: object
      properties:
        technical:
          title: technical
          type: boolean
          description: |+
            Technical

        statistic:
          title: statistic
          type: boolean
          description: |+
            Technical

        check:
          title: check
          type: boolean
          description: |+
            Technical

        sale:
          title: sale
          type: boolean
          description: |+
            Technical

      description: Rights
    MailDiagnosticDns:
      title: MailDiagnosticDns
      type: object
      properties:
        has_error:
          title: has_error
          type: boolean
          description: |+
            Has error

      description: Diagnostic dns
    MailPack:
      title: MailPack
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            Ressource identifier

        description:
          title: description
          type: string
          description: |+
            Description

        is_starter:
          title: is_starter
          type: boolean
          description: |+
            Is starter

        has_list_tool:
          title: has_list_tool
          type: boolean
          description: |+
            Has list tool

        has_newsletter_tool:
          title: has_newsletter_tool
          type: boolean
          description: |+
            Has newsletter tool

        additional_paid_email:
          title: additional_paid_email
          type: integer
          description: |+
            Additional paid email

        free_additional_email:
          title: free_additional_email
          type: integer
          description: |+
            Free additional email

      description: Pack
    WorkspaceUserMail:
      title: WorkspaceUserMail
      type: object
      properties:
        id:
          title: id
          type: integer
          description: |+
            WorkspaceUser identifier

        email:
          title: email
          type: string
          description: |+
            Email

          format: email
        name:
          title: name
          type: string
          description: |+
            Name

        is_deleted:
          title: is_deleted
          type: boolean
          description: |+
            True if deleted

        is_unified:
          title: is_unified
          type: boolean
          description: |+
            True if unified passwords

        avatar:
          title: avatar
          type: string
          description: |+
            Avatar url

          format: url
        has_double_auth:
          title: has_double_auth
          type: boolean
          description: |+
            True if double authentication is enabled

        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUserMailbox'
            schema: []
    WorkspaceUserMailbox:
      title: WorkspaceUserMailbox
      type: object
      allOf:
        - $ref: '#/components/schemas/MailboxBase'
          schema: []
        - title: WorkspaceUserMailbox
          type: object
          properties:
            permissions:
              $ref: '#/components/schemas/MailPermissions'
              schema: []
    ValidEmail:
      title: ValidEmail
      required:
        - email
        - email_idn
        - id
        - is_account
        - is_removable
        - is_verified
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `ValidEmail`
        email:
          title: email
          type: string
          description: Email
        email_idn:
          title: email_idn
          type: string
        is_account:
          title: is_account
          type: string
        is_verified:
          title: is_verified
          type: string
        is_removable:
          title: is_removable
          type: string
    HardwareModel:
      title: HardwareModel
      type: object
      properties:
        id:
          type: null
          format: int
        name:
          type: null
          format: string
        description:
          type: null
          format: date
        generation:
          type: null
          format: string
        equipment_type_id:
          type: null
          format: string
        manufacturer_id:
          type: null
          format: string
        shortname_alias:
          type: null
          format: string
        site_id:
          type: null
          format: string
        schema_id:
          type: null
          format: string
        factory_path:
          type: null
          format: float
        created_at:
          type: null
          format: date
        skip_serial:
          type: null
          format: string
        deleted_at:
          type: null
          format: date
        updated_at:
          type: null
          format: date
    EquipmentBase:
      title: EquipmentBase
      required:
        - created_at
        - id
        - name
        - root_name
        - serial_number
        - status
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `EquipmentBase`
        serial_number:
          title: serial_number
          type: string
          example: WSJSJS45
        name:
          title: name
          type: string
          description: Name of equipment
          example: swift03-swiftstore-10
        type:
          title: type
          type: string
          description: Type of equipment
          example: server
        status:
          title: status
          type: string
          description: Status of equipment
          example: available
        created_at:
          title: created_at
          type: integer
          description: Date of creation
          format: timestamp
        hardware_model:
          $ref: '#/components/schemas/HardwareModel'
          schema: []
        specification:
          title: specification
          type: array
        ancestors:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentBase'
            schema: []
        description:
          title: description
          type: string
          description: Description of the resource `EquipmentBase`
        serial_number_2:
          title: serial_number_2
          type: string
          description: Some equipments have 2 SN
          example: WSJSJS95
        order:
          title: order
          type: string
          description: Order details
        tags:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentTag'
            schema: []
        root_name:
          title: root_name
          type: string
          description: Name of datacenter
          example: Datacenter 3 production
    EquipmentTag:
      title: EquipmentTag
      required:
        - category
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `EquipmentTag`
        name:
          title: name
          type: string
          description: Name of tag
          example: kDrive
        category:
          title: category
          type: string
          description: Category of tag
          example: Team
    PhysicalServer:
      title: PhysicalServer
      required:
        - cpu_description
        - id
        - main_server
        - memory_description
        - servers
        - storage_description
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `PhysicalServer`
        cpu_description:
          title: cpu_description
          type: string
          example: Xeon L5320
        memory_description:
          title: memory_description
          type: string
          example: 8GB (4x2GB Dual Rank DIMMs)
        storage_description:
          title: storage_description
          type: string
        main_server:
          $ref: '#/components/schemas/LogicalServer'
          schema: []
        servers:
          type: array
          items:
            $ref: '#/components/schemas/LogicalServer'
            schema: []
    LogicalServer:
      title: LogicalServer
      required:
        - cpu
        - created_at
        - description
        - ipv4
        - ipv6
        - name
        - parent_id
        - ram
        - server_id
        - type
      type: object
      properties:
        server_id:
          title: server_id
          type: integer
        name:
          title: name
          type: string
          description: Name of the resource `LogicalServer`
        description:
          title: description
          type: string
          description: Description of the resource `LogicalServer`
        type:
          title: type
          enum:
            - DMU
            - IMU
            - NAS
            - NMU
            - NTU
            - OS
            - VMU
            - VNU
            - XEN
            - XENMU
          type: string
        cpu:
          title: cpu
          type: integer
          description: count of allowed CPU
        ram:
          title: ram
          type: integer
          description: quantity of allowed RAM
        ipv4:
          title: ipv4
          type: string
          nullable: true
        ipv6:
          title: ipv6
          type: string
          nullable: true
        parent_id:
          title: parent_id
          type: integer
        parent_equipment:
          $ref: '#/components/schemas/EquipmentServer'
          schema: []
        created_at:
          title: created_at
          type: integer
          description: Timestamp `LogicalServer` has been created
          format: timestamp
      description: This model represents a logical server, could be a main server or a VM.
    EquipmentServer:
      title: EquipmentServer
      required:
        - created_at
        - id
        - name
        - position
        - rack_id
        - rack_name
        - root_name
        - serial_number
        - size
        - status
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `EquipmentServer`
        serial_number:
          title: serial_number
          type: string
          example: WSJSJS45Z
        name:
          title: name
          type: string
          description: Name of equipment
          example: swift03-swiftstore-10
        type:
          title: type
          type: string
          description: Type of equipment
          example: server
        status:
          title: status
          type: string
          description: Status of equipment
          example: available
        created_at:
          title: created_at
          type: integer
          description: Date of creation
          format: timestamp
        hardware_model:
          $ref: '#/components/schemas/HardwareModel'
          schema: []
        specification:
          title: specification
          type: array
        ancestors:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentBase'
            schema: []
        description:
          title: description
          type: string
          description: Description of the resource `EquipmentServer`
        serial_number_2:
          title: serial_number_2
          type: string
          description: Some equipments have 2 SN
          example: WSJSJS95
        order:
          title: order
          type: string
          description: Order details
        tags:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentTag'
            schema: []
        root_name:
          title: root_name
          type: string
          description: Name of datacenter
          example: Datacenter 3 production
        rack_name:
          title: rack_name
          type: string
          description: Name of installed rack if is in production
          nullable: true
          example: A12
        rack_id:
          title: rack_id
          type: integer
          description: Id of installed rack if is in production
          nullable: true
          example: 271
        position:
          title: position
          type: string
          nullable: true
          example: '22'
        size:
          title: size
          type: string
          description: Size of server on rack (1U,2U)
        components:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentBase'
            schema: []
        network_infos:
          $ref: '#/components/schemas/PhysicalServer'
          schema: []
        interfaces:
          title: interfaces
          type: string
    Reservation:
      title: Reservation
      required:
        - id
        - position
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: string
          description: Unique identifier of the resource `Reservation`
        position:
          title: position
          type: integer
          description: Position of reservation
          example: 40
        type:
          title: type
          type: string
          description: Type of reservation
          example: patch_panel
    PartnerInvitationData:
      title: PartnerInvitationData
      required:
        - full_access
        - partner_id
      type: object
      properties:
        partner_id:
          title: partner_id
          type: integer
        full_access:
          title: full_access
          type: boolean
          description: Describes the type of access the partner has on its client
        products:
          title: products
          type: array
    Partner:
      title: Partner
      required:
        - budget_max
        - budget_min
        - created_at
        - email
        - id
        - image
        - is_active
        - is_premium
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Partner`
          example: 414
        name:
          title: name
          type: string
          description: Name of the resource `Partner`
          example: The WebAgency
        image:
          title: image
          type: string
        is_active:
          title: is_active
          type: boolean
          example: true
        budget_min:
          title: budget_min
          type: integer
          example: 100
        budget_max:
          title: budget_max
          type: integer
          example: 2000
        email:
          title: email
          type: string
          description: Email
          example: partner@infomaniak.com
        is_premium:
          title: is_premium
          type: boolean
          example: true
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Partner` has been created
          format: timestamp
        description:
          title: description
          type: string
          description: Description of the resource `Partner`
        description_en:
          title: description_en
          type: string
        description_de:
          title: description_de
          type: string
        description_it:
          title: description_it
          type: string
        description_es:
          title: description_es
          type: string
        addresses:
          title: addresses
          type: array
        skills:
          title: skills
          type: array
        skills_by_domain:
          title: skills_by_domain
          type: array
        skills_by_activity:
          title: skills_by_activity
          type: array
        references:
          title: references
          type: string
        certifications:
          title: certifications
          type: array
        languages:
          title: languages
          type: array
        available_languages:
          title: available_languages
          type: array
        tenders:
          title: tenders
          type: string
        opinions:
          title: opinions
          type: string
        messages:
          title: messages
          type: string
        note:
          title: note
          type: string
        medal:
          title: medal
          type: integer
        products:
          title: products
          type: array
        invoices:
          title: invoices
          type: array
    Accountaddress:
      title: Account address
      required:
        - city
        - country
        - created_at
        - id
        - street
        - street2
        - type
        - zip
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Account address`
          example: 1234
        street:
          title: street
          type: string
          example: Rue Eugène-Marziano 25
        street2:
          title: street2
          type: string
          example: ''
        zip:
          title: zip
          type: string
          example: '1227'
        city:
          title: city
          type: string
          example: Genève
        type:
          title: type
          type: string
          example: professional
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Account address` has been created
          format: timestamp
          example: 1558601584
        country:
          $ref: '#/components/schemas/Geolocationressource'
          schema: []
        for_invoice:
          title: for_invoice
          type: boolean
    RoleRight:
      title: RoleRight
      required:
        - created_at
        - rights
        - role_id
      type: object
      properties:
        role_id:
          title: role_id
          type: integer
        service_id:
          title: service_id
          type: integer
          description: >-
            Unique identifier of the `service` that is related to the resource
            `RoleRight`
        product_id:
          title: product_id
          type: integer
          description: >-
            Unique identifier of the `product` that is related to the resource
            `RoleRight`
        product_unique_id:
          title: product_unique_id
          type: integer
        product_name:
          title: product_name
          type: string
        rights:
          title: rights
          type: string
        created_at:
          title: created_at
          type: integer
          description: Timestamp `RoleRight` has been created
          format: timestamp
    PartnershipIncomeTotal:
      title: Partnership Income Total
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: amount
          type: number
        currency:
          title: currency
          type: string
          example: CHF
    EventDescription:
      title: Event Description
      required:
        - description
        - title
        - translations
      type: object
      properties:
        title:
          title: title
          type: string
          example: Network maintenance
        description:
          title: description
          type: string
          description: Description of the resource `Event Description`
          example: >-
            This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
        translations:
          type: array
          items:
            $ref: '#/components/schemas/EventTranslation'
            schema: []
    EventTag:
      title: Event Tag
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Event Tag`
          example: 1
        name:
          title: name
          type: string
          description: Name of the resource `Event Tag`
          example: hosting
        type:
          $ref: '#/components/schemas/EventTag'
          schema: []
    EventTranslation:
      title: Event Translation
      required:
        - body
        - language
        - title
      type: object
      properties:
        title:
          title: title
          type: string
          example: Network maintenance
        body:
          title: body
          type: string
          example: >-
            This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
        language:
          title: language
          enum:
            - de
            - en
            - es
            - fr
            - it
          type: string
          example: en
    Usersession:
      title: User session
      required:
        - browser
        - device
        - ip
        - last_accessed_at
        - location
        - user_agent
      type: object
      properties:
        browser:
          title: browser
          type: string
        last_accessed_at:
          title: last_accessed_at
          type: integer
          format: timestamp
        device:
          title: device
          type: string
        location:
          title: location
          type: string
        ip:
          title: ip
          type: string
        user_agent:
          title: user_agent
          type: string
    Userauthdevice:
      title: User auth device
      required:
        - created_at
        - deleted_at
        - device
        - id
        - last_connexion
        - name
        - updated_at
        - user_agent
        - user_ip
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User auth device`
        name:
          title: name
          type: string
          description: Name of the resource `User auth device`
        last_connexion:
          title: last_connexion
          type: integer
          format: timestamp
        user_agent:
          title: user_agent
          type: string
        user_ip:
          title: user_ip
          type: string
        device:
          title: device
          type: string
        created_at:
          title: created_at
          type: integer
          description: Timestamp `User auth device` has been created
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `User auth device` has been updated
          format: timestamp
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `User auth device` has been deleted
          format: timestamp
    Userconnection:
      title: User connection
      required:
        - successful_notification
        - unsuccessful_limit
        - unsuccessful_notification
        - unsuccessful_rate_limit
      type: object
      properties:
        unsuccessful_limit:
          title: unsuccessful_limit
          type: boolean
        unsuccessful_rate_limit:
          title: unsuccessful_rate_limit
          type: integer
        unsuccessful_notification:
          title: unsuccessful_notification
          type: boolean
        successful_notification:
          title: successful_notification
          type: boolean
    Useremail_f4611cfe:
      title: User email
      required:
        - checked
        - created_at
        - email
        - id
        - reminder
        - type
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `User email`
        email:
          title: email
          type: string
          description: Email
          example: tony@stark-industries.com
        created_at:
          title: created_at
          type: integer
          description: Timestamp `User email` has been created
          format: timestamp
        reminder:
          title: reminder
          type: boolean
          example: true
        checked:
          title: checked
          type: boolean
        type:
          title: type
          type: string
          example: email_request
    Country_e76d7464:
      title: Country
      required:
        - enabled
        - id
        - name
        - short
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Country`
          format: int32
          example: 203
        short:
          title: short
          type: string
          example: CH
        name:
          title: name
          type: string
          description: Name of the resource `Country`
          example: SWITZERLAND
        enabled:
          title: enabled
          type: boolean
          example: true
    Usersecretquestion:
      title: User secret question
      required:
        - secret_answer
        - secret_question_id
      type: object
      properties:
        secret_question_id:
          title: secret_question_id
          type: integer
        secret_answer:
          title: secret_answer
          type: string
    Drive:
      title: Drive
      required:
        - account_admin
        - account_id
        - ai_scan
        - can_access_dashboard
        - can_add_user
        - can_rewind
        - can_see_stats
        - can_set_sharelink_custom_url
        - can_set_sharelink_expiration
        - can_set_sharelink_password
        - can_set_trash_duration
        - can_upgrade_to_ksuite
        - color
        - comments_per_file
        - created_at
        - default
        - default_page
        - depth_sub_directories
        - empty_trash_days
        - expired_at
        - files_by_directory
        - files_by_user
        - files_size
        - has_approved
        - has_approved_ai_categories
        - hide
        - id
        - in_maintenance
        - is_demo
        - is_enabled
        - is_in_app_subscription
        - is_locked
        - maintenance_at
        - max_days
        - max_keep_deleted_user
        - max_numbers
        - name
        - pack
        - pack_id
        - product_id
        - role
        - shared_link
        - size
        - updated_at
        - use_dropbox
        - use_folder_custom_color
        - use_manage_right
        - use_team_space
        - use_upload_compression
        - use_vault
        - use_versioning
        - used_size
        - users_count
        - users_quota
        - version
        - versioning
        - versioning_days
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Id of the kDrive
        name:
          title: name
          type: string
          description: Name of the kDrive
        size:
          title: size
          type: integer
          description: Maximum space (in bytes)
        used_size:
          title: used_size
          type: integer
          description: Used space (in bytes)
        created_at:
          title: created_at
          type: integer
          description: Creation timestamp
          format: timestamp
          nullable: true
        updated_at:
          title: updated_at
          type: integer
          description: Last update timestamp
          format: timestamp
          nullable: true
        in_maintenance:
          title: in_maintenance
          type: boolean
          description: When maintenance is activated
        maintenance_reason:
          title: maintenance_reason
          enum:
            - demo_end
            - invoice_overdue
            - not_renew
            - technical
          type: string
          description: >-
            Reason of Drive maintenance.<note><strong>demo_end</strong>: The
            demonstration period of the Drive has come to an
            end.</note><note><strong>invoice_overdue</strong>: An invoice for
            this Drive is currently
            unpaid.</note><note><strong>not_renew</strong>: This Drive has
            expired and must be renewed.</note>
          example: demo_end
        maintenance_at:
          title: maintenance_at
          type: integer
          description: When maintenance was activated at
          format: timestamp
          nullable: true
        maintenance_types:
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceType'
            schema: []
        version:
          title: version
          type: string
          description: Backend version
        users_count:
          title: users_count
          type: integer
          description: Number of user slots used
        users_quota:
          title: users_quota
          type: integer
          description: Maximum number of users for this kdrive
        product_id:
          title: product_id
          type: integer
          description: Unique id of the kDrive product
        account_id:
          title: account_id
          type: integer
          description: Id of the account in which the kDrive is
        account:
          title: account
          type: string
          description: Account the Drive belongs to.
        expired_at:
          title: expired_at
          type: integer
          description: Product expiration timestamp
          format: timestamp
          nullable: true
        is_locked:
          title: is_locked
          type: boolean
          description: If the product is locked
        description:
          title: description
          type: string
          description: Custom description of this kDrive
        bill_reference:
          title: bill_reference
          type: string
          description: Reference used for billing
        is_demo:
          title: is_demo
          type: boolean
          description: If the product is in free trial period
        role:
          title: role
          enum:
            - admin
            - external
            - none
            - user
          type: string
          description: Role of the current user within this kDrive
          example: admin
        account_admin:
          title: account_admin
          type: boolean
          description: Can be managed as admin
        is_in_app_subscription:
          title: is_in_app_subscription
          type: boolean
          description: Whether this drive has been purchased within an app store
        rewind:
          $ref: '#/components/schemas/Rewind'
          schema: []
        invitations_count:
          title: invitations_count
          type: integer
          description: Number of pending invitation.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
            schema: []
        categories_permissions:
          $ref: '#/components/schemas/Categorypermission'
          schema: []
        users:
          title: users
          type: object
          properties:
            account:
              title: account
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: account
                description: Users identifiers of the account group
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Users identifiers of the account group
            drive:
              title: drive
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: drive
                description: Users identifiers of the kDrive
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Users identifiers of the kDrive
            external:
              title: external
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: external
                description: Users identifiers of the drive (only externals users)
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Users identifiers of the drive (only externals users)
            internal:
              title: internal
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: internal
                description: Users identifiers of the drive (only internal users)
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Users identifiers of the drive (only internal users)
          description: All users identifiers by types
        teams:
          title: teams
          type: object
          properties:
            account:
              title: account
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: account
                description: Teams identifiers of the account group
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Teams identifiers of the account group
            drive:
              title: drive
              type: array
              items:
                type: integer
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: drive
                description: Teams identifiers of the kDrive
                conditional: true
                items: null
                in: null
                deprecated: null
              description: Teams identifiers of the kDrive
          description: All teams identifiers by types
        rights:
          $ref: '#/components/schemas/Right'
          schema: []
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            schema: []
        k_suite:
          title: k_suite
          type: object
          properties:
            id:
              title: Unique identifier
              type: integer
              description: Id of the kSuite
            name:
              title: name
              type: string
              description: Name of the kSuite
            pack_id:
              title: pack_id
              type: integer
              description: Id of the type of kSuite
            pack:
              title: pack
              type: string
              description: Name of the type of kSuite
          description: The kSuite in which the kDrive is
        capabilities:
          title: capabilities
          type: object
          properties:
            use_versioning:
              title: use_versioning
              type: boolean
              description: Is versioning activated
            use_upload_compression:
              title: use_upload_compression
              type: boolean
              description: During upload compression is allowed
            use_team_space:
              title: use_team_space
              type: boolean
              description: Shared/Team directory feature
            can_add_user:
              title: can_add_user
              type: boolean
              description: Can add an user in the kDrive
            can_see_stats:
              title: can_see_stats
              type: boolean
              description: Can see stats of the kDrive
            can_upgrade_to_ksuite:
              title: can_upgrade_to_ksuite
              type: boolean
              description: Can the drive be upgraded to a kSuite
            can_rewind:
              title: can_rewind
              type: boolean
              description: Can rewind the kDrive
        settings:
          title: settings
          type: object
          properties:
            ai_scan:
              title: ai_scan
              type: object
              properties:
                is_enabled:
                  title: is_enabled
                  type: boolean
                  description: Is AI scanning enabled
                has_approved:
                  title: has_approved
                  type: boolean
                  description: Is AI scanning approved
                  nullable: true
                has_approved_ai_categories:
                  title: has_approved_ai_categories
                  type: boolean
                  description: Are AI categories approved
                  nullable: true
                updated_at:
                  title: updated_at
                  type: integer
                  description: When AI scanning was approved at
                  format: timestamp
                  nullable: true
            versioning:
              title: versioning
              type: object
              properties:
                max_numbers:
                  title: max_numbers
                  type: integer
                  description: Number of versions that can be kept if active
                max_days:
                  title: max_days
                  type: integer
                  description: Maximum number of days versions are kept
            max_keep_deleted_user:
              title: max_keep_deleted_user
              type: string
              description: Max time the files of an user deleted is kept
          description: Settings of the current users for this kDrive
        preferences:
          title: preferences
          type: object
          properties:
            color:
              title: color
              type: string
              description: Default color for kDrive
            hide:
              title: hide
              type: boolean
              description: Is the drive hidden for the current user
            default:
              title: default
              type: boolean
              description: >-
                The default drive chosen by the user, if none the first drive in
                the list should be considered the default. There should only be
                one default drive.
            default_page:
              title: default_page
              type: string
              description: User's default landing page
        pack:
          $ref: '#/components/schemas/PricingPlan'
          schema: []
    UserUuid:
      title: User Uuid
      required:
        - uuid
        - valid_until
      type: object
      properties:
        uuid:
          title: uuid
          type: string
          description: Uuid v4
          example: 96df2a1c-e449-441c-ae3a-2191f91fdc7d
        valid_until:
          title: valid_until
          type: integer
          description: Validity of the Uuid
          format: timestamp
    MaintenanceType:
      title: Maintenance Type
      required:
        - code
        - description
        - name
      type: object
      properties:
        name:
          title: name
          type: string
          description: Name of active Maintenance Type
        code:
          title: code
          type: string
          description: Active Maintenance Type
        description:
          title: description
          type: string
          description: Short explanation of active Maintenance Type
    Rewind:
      title: Rewind
      required:
        - approval_at
        - archived
        - archiving
        - conflicted
        - created_at
        - created_by
        - directory_archive_id
        - directory_conflict_id
        - directory_id
        - executed
        - expires_at
        - files_found
        - id
        - is_approved
        - me
        - mode
        - not_handled_files
        - not_handled_versions
        - rewind_at
        - sanitized
        - status
        - team
        - to_archive
        - to_execute
        - to_move
        - to_rename
        - to_update
        - total
        - user_id
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Rewind identifier
        status:
          title: status
          enum:
            - canceled
            - done
            - drive_not_ready
            - expired
            - failed
            - in_progress
            - new
            - sanitizing
            - waiting_approval
          type: string
          description: >-
            Rewind status.<note><strong>canceled</strong>: Rewind was canceled
            by the user and deleted.</note><note><strong>done</strong>: Rewind
            completed
            successfully.</note><note><strong>drive_not_ready</strong>: Rewind
            cannot start because the drive was not ready (uploads or actions in
            progress).</note><note><strong>expired</strong>: Rewind has expired
            and deleted.</note><note><strong>failed</strong>: Rewind completed
            with errors.</note><note><strong>in_progress</strong>: Rewind is
            currently in progress.</note><note><strong>new</strong>: Rewind did
            not start.</note><note><strong>sanitizing</strong>: Rewind find the
            activity to sanitize.</note><note><strong>waiting_approval</strong>:
            Rewind waiting user approval to continue.</note>
          example: canceled
        mode:
          title: mode
          enum:
            - directory
            - drive
            - user
          type: string
          description: >-
            Rewind type.<note><strong>directory</strong>: Rewind only a
            directory.</note><note><strong>drive</strong>: Rewind all the
            drive.</note><note><strong>user</strong>: Rewind a user's private
            folder.</note>
          example: directory
        archiving:
          title: archiving
          enum:
            - all
            - current
            - none
          type: string
          description: >-
            Rewind archive mode, all created files between now and the rewind
            date will be set to trash or to an archive depending on the mode
            selected.<note><strong>all</strong>: Keep in an archive folder the
            current or trashed files.</note><note><strong>current</strong>: Keep
            in an archive folder the current
            files.</note><note><strong>none</strong>: Don't build an archive,
            trash all created files.</note>
          nullable: true
          example: all
        directory_id:
          title: directory_id
          type: integer
          description: >-
            The targeted directory of the rewind <note>Filled only in directory
            and user mode</note>
          nullable: true
        directory:
          $ref: '#/components/schemas/Directory'
          schema: []
        directory_name:
          title: directory_name
          type: string
          description: >-
            The name of the directory selected when the directory mode is
            selected
        user_id:
          title: user_id
          type: integer
          description: >-
            The targeted user of the rewind <note>Filled only in user
            mode</note>
          nullable: true
        rewind_at:
          title: rewind_at
          type: integer
          description: Rewind at
          format: timestamp
        created_at:
          title: created_at
          type: integer
          description: created at
          format: timestamp
        finished_at:
          title: finished_at
          type: integer
          description: when the rewind is executed the finished process time is save here
          format: timestamp
        expires_at:
          title: expires_at
          type: integer
          description: Date of the rewind approval
          format: timestamp
        created_by:
          title: created_by
          type: integer
          description: created by the user
          format: timestamp
        is_approved:
          title: is_approved
          type: boolean
          description: Rewind approved by the user
        approval_at:
          title: approval_at
          type: integer
          description: Date of the rewind approval
          format: timestamp
        rewind_name:
          title: rewind_name
          type: string
          description: The name of the directory choose during approval step
        sanitizer:
          title: sanitizer
          type: object
          properties:
            sanitized:
              title: sanitized
              type: integer
            total:
              title: total
              type: object
              properties:
                to_execute:
                  title: to_execute
                  type: integer
                files_found:
                  title: files_found
                  type: integer
                to_move:
                  title: to_move
                  type: integer
                to_rename:
                  title: to_rename
                  type: integer
                to_update:
                  title: to_update
                  type: integer
                to_archive:
                  title: to_archive
                  type: integer
                not_handled_versions:
                  title: not_handled_versions
                  type: integer
                not_handled_files:
                  title: not_handled_files
                  type: integer
            team:
              title: team
              type: object
              properties:
                to_execute:
                  title: to_execute
                  type: integer
                files_found:
                  title: files_found
                  type: integer
                to_move:
                  title: to_move
                  type: integer
                to_rename:
                  title: to_rename
                  type: integer
                to_update:
                  title: to_update
                  type: integer
                to_archive:
                  title: to_archive
                  type: integer
                not_handled_versions:
                  title: not_handled_versions
                  type: integer
                not_handled_files:
                  title: not_handled_files
                  type: integer
            me:
              title: me
              type: object
              properties:
                to_execute:
                  title: to_execute
                  type: integer
                files_found:
                  title: files_found
                  type: integer
                to_move:
                  title: to_move
                  type: integer
                to_rename:
                  title: to_rename
                  type: integer
                to_update:
                  title: to_update
                  type: integer
                to_archive:
                  title: to_archive
                  type: integer
                not_handled_versions:
                  title: not_handled_versions
                  type: integer
                not_handled_files:
                  title: not_handled_files
                  type: integer
            others:
              title: others
              type: string
          description: >-
            Sanitizer resume, returned only when the rewind has done the
            sanitizing process
        summary:
          title: summary
          type: object
          properties:
            total:
              title: total
              type: object
              properties:
                executed:
                  title: executed
                  type: integer
                archived:
                  title: archived
                  type: integer
                conflicted:
                  title: conflicted
                  type: integer
            team:
              title: team
              type: object
              properties:
                executed:
                  title: executed
                  type: integer
                archived:
                  title: archived
                  type: integer
                conflicted:
                  title: conflicted
                  type: integer
                directory_id:
                  title: directory_id
                  type: integer
                  nullable: true
                directory_archive_id:
                  title: directory_archive_id
                  type: integer
                  nullable: true
                directory_conflict_id:
                  title: directory_conflict_id
                  type: integer
                  nullable: true
            me:
              title: me
              type: object
              properties:
                executed:
                  title: executed
                  type: integer
                archived:
                  title: archived
                  type: integer
                conflicted:
                  title: conflicted
                  type: integer
                directory_id:
                  title: directory_id
                  type: integer
                  nullable: true
                directory_archive_id:
                  title: directory_archive_id
                  type: integer
                  nullable: true
                directory_conflict_id:
                  title: directory_conflict_id
                  type: integer
                  nullable: true
            others:
              type: array
              items:
                $ref: '#/components/schemas/CountFile'
                schema: []
          description: Rewind resume, returned only when the rewind is finished
    Category:
      title: Category
      required:
        - color
        - created_at
        - created_by
        - id
        - is_predefined
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Category identifier
        name:
          title: name
          type: string
          description: Category name
        color:
          title: color
          type: string
          description: Color the Category displays in
          example: '#FF1493'
        is_predefined:
          title: is_predefined
          type: boolean
          description: If the Category is system or user defined
        created_by:
          title: created_by
          type: integer
          description: Unique identifier of the creator of the resource `Category`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Category` was created at
          format: timestamp
        user_uses:
          title: user_uses
          type: integer
          description: Number of uses of the Category
    Categorypermission:
      title: Category permission
      required:
        - can_create
        - can_delete
        - can_edit
        - can_put_on_file
        - can_read_on_file
      type: object
      properties:
        can_create:
          title: can_create
          type: boolean
          description: User can create new categories
        can_edit:
          title: can_edit
          type: boolean
          description: User can edit existing categories
        can_delete:
          title: can_delete
          type: boolean
          description: User can delete categories and remove them from files
        can_read_on_file:
          title: can_read_on_file
          type: boolean
          description: User can read the categories that are present on files
        can_put_on_file:
          title: can_put_on_file
          type: boolean
          description: User can add categories to files
    PricingPlan:
      title: Pricing Plan
      required:
        - base
        - can_access_dashboard
        - can_rewind
        - can_set_sharelink_custom_url
        - can_set_sharelink_expiration
        - can_set_sharelink_password
        - can_set_trash_duration
        - giga
        - id
        - max
        - min
        - name
        - storage
        - use_dropbox
        - use_folder_custom_color
        - use_manage_right
        - use_vault
        - users
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Pricing Plan`
        name:
          title: name
          type: string
          description: Name of the resource `Pricing Plan`
          example: team
        limits:
          title: limits
          type: object
          properties:
            users:
              title: users
              type: object
              properties:
                base:
                  title: base
                  type: integer
                  description: Included/Allowed number of user
                min:
                  title: min
                  type: integer
                  description: Minimum number of additional user
                  nullable: true
                max:
                  title: max
                  type: integer
                  description: Maximum number of additional user
                  nullable: true
              description: Get users number limit of the Pricing Plan
            storage:
              title: storage
              type: object
              properties:
                giga:
                  title: giga
                  type: integer
                  description: Included/Allowed storage (in gigabyte)
                min:
                  title: min
                  type: integer
                  description: Minimum number of additional storage (in gigabyte)
                  nullable: true
                max:
                  title: max
                  type: integer
                  description: Maximum number of additional storage (in gigabyte)
                  nullable: true
              description: Get the limits of the pricing plan
          description: Get the users and storage limits of the Pricing Plan
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Drivepackprice'
            schema: []
        capabilities:
          title: capabilities
          type: object
          properties:
            use_vault:
              title: use_vault
              type: boolean
              description: Vault directory feature
            use_manage_right:
              title: use_manage_right
              type: boolean
              description: Can use additional manage right
            can_set_trash_duration:
              title: can_set_trash_duration
              type: boolean
              description: Can change the max days in trash
            use_dropbox:
              title: use_dropbox
              type: boolean
              description: Dropboxes feature
            can_rewind:
              title: can_rewind
              type: boolean
              description: Can access/use restoration feature
            use_folder_custom_color:
              title: use_folder_custom_color
              type: boolean
              description: Can set a custom color on a folder
            can_access_dashboard:
              title: can_access_dashboard
              type: boolean
              description: Can access the managing dashboard
            can_set_sharelink_password:
              title: can_set_sharelink_password
              type: boolean
              description: Public link can expire
            can_set_sharelink_expiration:
              title: can_set_sharelink_expiration
              type: boolean
              description: Public link can be protected by password
            can_set_sharelink_custom_url:
              title: can_set_sharelink_custom_url
              type: boolean
              description: Public link can have custom theme
          description: Locked/Unlocked features of the Pricing Plan
    Directory:
      title: Directory
      required:
        - added_at
        - can_become_dropbox
        - can_become_sharelink
        - can_create_directory
        - can_create_file
        - can_delete
        - can_leave
        - can_move
        - can_move_into
        - can_read
        - can_rename
        - can_share
        - can_show
        - can_upload
        - can_use_favorite
        - can_use_team
        - can_write
        - color
        - created_at
        - created_by
        - depth
        - description
        - drive_id
        - id
        - last_accessed_at
        - last_modified_at
        - locked_at
        - name
        - parent_id
        - status
        - token
        - type
        - unlocked_at
        - visibility
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Directory`
        name:
          title: name
          type: string
          description: File name
          example: Directory
        sorted_name:
          title: sorted_name
          type: string
          description: Specific sortable name
        path:
          title: path
          type: string
          description: Full path of the Directory
          example: /full/path/Directory
        type:
          title: type
          enum:
            - dir
            - file
          type: string
          description: Type of returned element either a dir (Directory) or file (File)
          nullable: true
          example: file
        status:
          title: status
          enum:
            - erasing
            - locked
            - trash_inherited
            - trashed
            - uploading
          type: string
          description: >-
            Current state of Directory. The state can be null meaning that the
            Directory has no specific state.<note><strong>erasing</strong>:
            Directory is currently being erased from the
            drive.</note><note><strong>locked</strong>: Directory is currently
            locked. No action can be made except unlocking by the application
            which locked the File (such as office, webdav or external
            import).</note><note><strong>trash_inherited</strong>: Directory is
            currently in trash because a parent directory was
            trashed.</note><note><strong>trashed</strong>: Directory is
            currently in trash and specifically trashed by the
            user.</note><note><strong>uploading</strong>: Directory is currently
            being uploaded. The Directory is locked and no action can be done
            excepting upload actions.</note>
          nullable: true
          example: erasing
        visibility:
          title: visibility
          enum:
            - ''
            - is_in_team_space_folder
            - is_root
            - is_shared_space
            - is_team_space
            - is_team_space_folder
          type: string
          description: >-
            Visibility of Directory, empty string if no specific visibility. Add
            additional information about Directory to show different icons or
            more.<note><strong></strong>: Empty visibility mean no special
            visibility.</note><note><strong>is_in_team_space_folder</strong>: Is
            a Directory inside a Common Documents
            directory.</note><note><strong>is_root</strong>: Is the root
            directory of the user.</note><note><strong>is_shared_space</strong>:
            Is the shared root directory, a special directory where the files
            inside are the private files of other user shared with the logged
            user.</note><note><strong>is_team_space</strong>: Is the Common
            Documents directory, a special directory where the files inside are
            common to all users by
            default.</note><note><strong>is_team_space_folder</strong>: Is the
            root directory inside the Common Documents.</note>
          example: ''
        drive_id:
          title: drive_id
          type: integer
          description: Drive identifier
          example: 1111
        depth:
          title: depth
          type: integer
          description: Current path depth of Directory
          example: 3
        created_by:
          title: created_by
          type: integer
          description: The identifier of the user who first uploaded the Directory
          nullable: true
        created_at:
          title: created_at
          type: integer
          description: >-
            Directory creation timestamp (in seconds), if available in its
            metadata or specified on upload
          format: timestamp
          nullable: true
        added_at:
          title: added_at
          type: integer
          description: >-
            The timestamp (in seconds) at which the Directory has been uploaded
            for the first time
          format: timestamp
        last_modified_at:
          title: last_modified_at
          type: integer
          description: >-
            Directory creation timestamp (in seconds), if available in its
            metadata or specified on upload
          format: timestamp
        parent_id:
          title: parent_id
          type: integer
          description: Parent directory identifier
        deleted_at:
          title: deleted_at
          type: integer
          description: >-
            Timestamp of deleted resource Directory, only visible when the
            Directory is trashed
          format: timestamp
        deleted_by:
          title: deleted_by
          type: integer
          description: >-
            User identifier of deleted resource Directory, only visible when the
            Directory is trashed
        shared_root_id:
          title: shared_root_id
          type: integer
          description: Root Directory identifier, only visible for shared user
          nullable: true
          example: 1
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Directory'
            schema: []
        users:
          title: users
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: users
            description: Array of users identifiers that has access to the Directory
            conditional: true
            items: null
            in: null
            deprecated: null
          description: Array of users identifiers that has access to the Directory
        teams:
          title: teams
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: teams
            description: Array of teams identifiers that has access to the Directory
            conditional: true
            items: null
            in: null
            deprecated: null
          description: Array of teams identifiers that has access to the Directory
        is_favorite:
          title: is_favorite
          type: boolean
          description: Is Directory pinned as favorite
        activity:
          title: activity
          type: object
          properties:
            last_accessed_at:
              title: last_accessed_at
              type: integer
              description: Timestamp of the last user access of the Directory
              format: timestamp
          description: Activities information about the Directory
        sharelink:
          $ref: '#/components/schemas/ShareLink'
          schema: []
        capabilities:
          title: capabilities
          type: object
          properties:
            can_use_favorite:
              title: can_use_favorite
              type: boolean
              description: Right to set file as favorite
            can_become_sharelink:
              title: can_become_sharelink
              type: boolean
              description: Right to share file by link (share_link)
            can_use_team:
              title: can_use_team
              type: boolean
              description: Right to use and give team access
            can_show:
              title: can_show
              type: boolean
              description: Right to see Directory information
            can_read:
              title: can_read
              type: boolean
              description: Right to read Directory content
            can_write:
              title: can_write
              type: boolean
              description: Right to write Directory
            can_share:
              title: can_share
              type: boolean
              description: Right to share Directory or manage access to Directory
            can_leave:
              title: can_leave
              type: boolean
              description: Right to leave shared Directory
            can_delete:
              title: can_delete
              type: boolean
              description: Right to delete Directory
            can_rename:
              title: can_rename
              type: boolean
              description: Right to rename Directory
            can_move:
              title: can_move
              type: boolean
              description: Right to move Directory
            can_create_directory:
              title: can_create_directory
              type: boolean
              description: Right to add new child directory
            can_create_file:
              title: can_create_file
              type: boolean
              description: Right to add new child file
            can_upload:
              title: can_upload
              type: boolean
              description: Right to upload a child file
            can_move_into:
              title: can_move_into
              type: boolean
              description: right to move directory
            can_become_dropbox:
              title: can_become_dropbox
              type: boolean
              description: Right to use convert directory into collaborative directory
          description: Directory rights
        lock:
          title: lock
          type: object
          properties:
            locked_at:
              title: locked_at
              type: integer
              description: When Directory is locked, locked timestamp
              format: timestamp
              nullable: true
            unlocked_at:
              title: unlocked_at
              type: integer
              description: When Directory is locked, automatic lock release timestamp
              format: timestamp
              nullable: true
            description:
              title: description
              type: string
              description: When Directory is locked, locked reason
              nullable: true
              example: onlyoffice
            token:
              title: token
              type: string
              description: When Directory is locked, locked token
              nullable: true
              example: onlyoffice:123456
          description: When Directory is locked, locked information
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FileCategory'
            schema: []
        etag:
          title: etag
          type: string
          description: ETag of the file
          nullable: true
        color:
          title: color
          type: string
          description: Color of the directory for the user requesting it
          nullable: true
          example: '#0098ff'
        dropbox:
          $ref: '#/components/schemas/Dropbox'
          schema: []
        external_import:
          $ref: '#/components/schemas/ExternalImportFile'
          schema: []
        rewind:
          $ref: '#/components/schemas/Rewind'
          schema: []
    CountFile:
      title: Count File
      required:
        - archived
        - conflicted
        - executed
        - user_id
      type: object
      properties:
        user_id:
          title: user_id
          type: integer
          description: User id
        executed:
          title: executed
          type: integer
          description: Total of actions executed
        archived:
          title: archived
          type: integer
          description: Total of actions archived
        conflicted:
          title: conflicted
          type: integer
          description: Total of actions conflicted
    ShareLink:
      title: Share Link
      required:
        - access_blocked
        - can_comment
        - can_download
        - can_edit
        - can_see_info
        - can_see_stats
        - capabilities
        - created_at
        - created_by
        - file_id
        - right
        - updated_at
        - url
        - valid_until
      type: object
      properties:
        url:
          title: url
          type: string
          description: Share link url
          example: >-
            https://kdrive.infomaniak.com/app/share/xxxx/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx
        file_id:
          title: file_id
          type: integer
        right:
          title: right
          enum:
            - inherit
            - password
            - public
          type: string
          description: >-
            Rights required to view the share
            link.<note><strong>inherit</strong>: Share link is accessible only
            by users of the drive.</note><note><strong>password</strong>: Share
            link is public but protected by a
            password.</note><note><strong>public</strong>: Share link is public,
            no restriction set.</note>
          example: inherit
        valid_until:
          title: valid_until
          type: integer
          description: Until when the share link is valid
          format: timestamp
          nullable: true
        created_by:
          title: created_by
          type: integer
          description: Unique identifier of the creator of the resource `Share Link`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Share Link` was created at
          format: timestamp
          nullable: true
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Share Link` was updated at
          format: timestamp
          nullable: true
        capabilities:
          title: capabilities
          type: object
          properties:
            can_edit:
              title: can_edit
              type: boolean
              description: Does share link allow editing
            can_see_stats:
              title: can_see_stats
              type: boolean
              description: Does share link allow stats to be seen
            can_see_info:
              title: can_see_info
              type: boolean
              description: Does share link allow info to be seen
            can_download:
              title: can_download
              type: boolean
              description: Does share link allow download
            can_comment:
              title: can_comment
              type: boolean
              description: Does share link allow adding comments
        access_blocked:
          title: access_blocked
          type: boolean
          description: If the share link is blocked
        views:
          title: views
          type: integer
          description: Number of views of share link (last 180 days only)
    FileCategory:
      title: File Category
      required:
        - added_at
        - category_id
        - is_generated_by_ai
        - user_id
        - user_validation
      type: object
      properties:
        category_id:
          title: category_id
          type: integer
          description: Category identifier
        added_at:
          title: added_at
          type: integer
          description: Time when the category was added to file
          format: timestamp
        user_validation:
          title: user_validation
          enum:
            - CORRECT
            - INCORRECT
            - TO_VALIDATE
          type: string
          description: State of user validation after auto assignment from AI.
          nullable: true
          example: TO_VALIDATE
        is_generated_by_ai:
          title: is_generated_by_ai
          type: boolean
          description: Whether the Category was generated by an AI or not
        user_id:
          title: user_id
          type: integer
          description: User identifier
          nullable: true
        category:
          $ref: '#/components/schemas/Category'
          schema: []
    Dropbox:
      title: Dropbox
      required:
        - capabilities
        - created_at
        - created_by
        - date
        - has_expired
        - has_password
        - has_size_limit
        - has_validity
        - id
        - last_uploaded_at
        - limit
        - name
        - remaining
        - updated_at
        - url
        - used
        - users_count
        - uuid
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Dropbox`
        uuid:
          title: uuid
          type: string
          description: Dropbox unique identifier
        name:
          title: name
          type: string
          description: Name of the dropbox
        url:
          title: url
          type: string
          description: Public URL of the dropbox
        users_count:
          title: users_count
          type: integer
          description: Number of recorded users that uploaded in the dropbox
        created_by:
          title: created_by
          type: integer
          description: Unique identifier of the creator of the resource `Dropbox`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Dropbox` was created at
          format: timestamp
          nullable: true
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Dropbox` was updated at
          format: timestamp
          nullable: true
        last_uploaded_at:
          title: last_uploaded_at
          type: integer
          description: Last time someone uploaded a file in the dropbox
          format: timestamp
          nullable: true
        capabilities:
          title: capabilities
          type: object
          properties:
            has_password:
              title: has_password
              type: boolean
              description: A password was defined to access to the dropbox
            has_notification:
              title: has_notification
              type: boolean
              description: >-
                Notification was enabled on the dropbox, email we be send to
                dropbox owner when someone upload a file
            has_validity:
              title: has_validity
              type: boolean
              description: >-
                A validity period was set to the dropbox, after the date define
                the dropbox is not accessible
            has_size_limit:
              title: has_size_limit
              type: boolean
              description: >-
                A limit size was defined to the dropbox, after the date define
                the dropbox is not accessible
            validity:
              title: validity
              type: string
            size:
              title: size
              type: string
        user:
          $ref: '#/components/schemas/User'
          schema: []
    ExternalImportFile:
      title: External Import File
      required:
        - created_at
        - id
        - message
        - name
        - status
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: External file import identifier
        name:
          title: name
          type: string
          description: External file name
        status:
          title: status
          enum:
            - downloading
            - error
            - finished
            - uploading
            - waiting
          type: string
          description: >-
            External file import status.<note><strong>downloading</strong>:
            External file is currently
            downloading.</note><note><strong>error</strong>: External file
            import failed, additional information in the message
            field.</note><note><strong>finished</strong>: External file was
            successfully imported.</note><note><strong>uploading</strong>:
            External file is currently
            uploading.</note><note><strong>waiting</strong>: External file is
            not upload, waiting to be imported.</note>
          example: downloading
        message:
          title: message
          type: string
          description: Message when error occur
        created_at:
          title: created_at
          type: integer
          description: External file creation date
          format: timestamp
    Drivepackprice:
      title: Drive pack price
      required:
        - amount_excl_vat
        - amount_incl_vat
        - currency_id
        - period
        - type
        - unit
      type: object
      properties:
        type:
          title: type
          enum:
            - base
            - storage_giga
            - user
          type: string
          description: >-
            Drive pack price type, Base: standard price, User : Additional user
            price, Storage_giga : Additional storage price
        unit:
          title: unit
          type: integer
          description: Unity of additional type
        period:
          title: period
          type: integer
          description: Price by months
        currency_id:
          title: currency_id
          type: integer
          description: Currency identifier
        amount_excl_vat:
          title: amount_excl_vat
          type: number
          description: Price without the tax
        amount_incl_vat:
          title: amount_incl_vat
          type: number
          description: Price with the tax
    PublicImage:
      title: PublicImage
      required:
        - id
        - public_url
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `PublicImage`
        public_url:
          title: public_url
          type: string
          example: >-
            "https://kdrive.infomaniak.com/drive/xxxxx/public/d/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx/preview"
    DriveUserInvitation:
      title: Drive User Invitation
      required:
        - access_name
        - created_at
        - email
        - expired_at
        - file_id
        - id
        - invited_by
        - is_private
        - is_valid
        - key
        - lang
        - message
        - role
        - status
        - type
        - url
        - user_id
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Drive User Invitation`
        type:
          title: type
          enum:
            - file
            - user
          type: string
          description: Type of `Invitation`
        is_private:
          title: is_private
          type: boolean
        user_exist:
          title: user_exist
          type: boolean
        key:
          title: key
          type: string
          description: Random key used to uniquely identify the `Invitation`
        file_id:
          title: file_id
          type: integer
        lang:
          title: lang
          type: string
          description: Language to invite the `User` in
        user_id:
          title: user_id
          type: integer
          description: User identifier
          nullable: true
        user:
          $ref: '#/components/schemas/User'
          schema: []
        invited_by:
          title: invited_by
          type: integer
          description: Identifier of `User` that sent the invitation
          nullable: true
        invited:
          $ref: '#/components/schemas/User'
          schema: []
        url:
          title: url
          type: string
          description: '`Invitation` url'
        is_valid:
          title: is_valid
          type: boolean
          description: Whether the `Invitation` is still valid or not
        status:
          title: status
          enum:
            - accepted
            - cancelled
            - pending
            - rejected
          type: string
          description: Status of the `Invitation`
        email:
          title: email
          type: string
          description: Email
        message:
          title: message
          type: string
          description: '`Invitation` message'
        expired_at:
          title: expired_at
          type: integer
          description: When the invitation expire
          format: timestamp
          nullable: true
        created_at:
          title: created_at
          type: integer
          description: When the invitation was created
          format: timestamp
          nullable: true
        access_name:
          title: access_name
          type: string
          description: '`Drive` name displayed for user'
        role:
          title: role
          type: string
          description: Role that will be assigned to invited `User`
        drive:
          $ref: '#/components/schemas/Drive'
          schema: []
    DriveUser:
      title: Drive User
      required:
        - account_id
        - assistant_at
        - avatar
        - can_create_team_directory
        - can_set_trash_duration
        - color
        - created_at
        - default
        - default_page
        - deleted_at
        - display_name
        - double_auth_method
        - drive_id
        - drive_name
        - email
        - first_name
        - has_double_auth
        - has_private_folder
        - has_recovery_email
        - has_technical_permission
        - has_valid_email
        - has_valid_phone
        - hide
        - id
        - last_connection_at
        - last_name
        - last_password_at
        - preference
        - product_id
        - role
        - score
        - status
        - type
        - updated_at
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Drive User`
        display_name:
          title: display_name
          type: string
          description: Display name
        first_name:
          title: first_name
          type: string
          description: First name
        last_name:
          title: last_name
          type: string
          description: Last name
        email:
          title: email
          type: string
          description: Email
        avatar:
          title: avatar
          type: string
          description: Avatar
        type:
          title: type
          enum:
            - main
            - shared
          type: string
          description: >-
            Type of the access; this field is no longer used and has been
            replaced by an additional role property
            `external`.<note><strong>main</strong>: User has access to the
            drive.</note><note><strong>shared</strong>: User has access to a
            shared file / directory only.</note>
          example: main
          deprecated: true
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `Drive User` was deleted at
          format: timestamp
        teams:
          title: teams
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: teams
            description: List of Team identifiers
            conditional: true
            items: null
            in: null
            deprecated: null
          description: List of Team identifiers
        security:
          title: security
          type: object
          properties:
            assistant_at:
              title: assistant_at
              type: integer
              description: The last date the assistant was used
              format: timestamp
              nullable: true
            double_auth_method:
              title: double_auth_method
              type: string
              description: Double authentication method used to log in
            has_double_auth:
              title: has_double_auth
              type: boolean
              description: Whether the `Drive User` has double authentication enabled
            last_password_at:
              title: last_password_at
              type: integer
              description: Last time `Drive User`'s password was changed
              format: timestamp
              nullable: true
            score:
              title: score
              type: integer
              description: Security score of the `Drive User`
            has_valid_email:
              title: has_valid_email
              type: integer
              description: Whether the `Drive User` has a valid email
            has_recovery_email:
              title: has_recovery_email
              type: boolean
              description: Whether the `Drive User` has a recovery email
            has_valid_phone:
              title: has_valid_phone
              type: boolean
              description: Whether the `Drive User` has a valid phone number
            has_private_folder:
              title: has_private_folder
              type: boolean
              description: Whether the `Drive User` has a private folder
        drive_id:
          title: drive_id
          type: integer
          description: Drive identifier
          example: 1111
        drive:
          $ref: '#/components/schemas/Drive'
          schema: []
        drive_name:
          title: drive_name
          type: string
        account_id:
          title: account_id
          type: integer
          description: Account identifier of resource `Drive User`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Drive User` was created at
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Drive User` was updated at
          format: timestamp
        last_connection_at:
          title: last_connection_at
          type: integer
          description: Timestamp `User` was last connected at
          format: timestamp
          nullable: true
        product_id:
          title: product_id
          type: integer
          description: >-
            Unique identifier of the `product` that is related to the resource
            `Drive User`
        status:
          title: status
          enum:
            - active
            - deleted_kept
            - deleted_removed
            - deleted_transferred
            - deleted_transferring
            - locked
            - pending
          type: string
          description: >-
            Current access status of the user in the
            drive.<note><strong>active</strong>: User has access to the
            Drive.</note><note><strong>deleted_kept</strong>: User has been
            removed but his data remain in the
            drive.</note><note><strong>deleted_removed</strong>: User has been
            removed.</note><note><strong>deleted_transferred</strong>: User has
            been removed and his data has been transferred to another
            user.</note><note><strong>deleted_transferring</strong>: User has
            been removed and is being transferred to another
            user.</note><note><strong>locked</strong>: User has been locked,
            user can no longer access to the
            drive.</note><note><strong>pending</strong>: User has not accepted
            the invitation request.</note>
          example: active
        role:
          title: role
          enum:
            - admin
            - external
            - user
          type: string
          description: >-
            Administration level of the user.<note><strong>admin</strong>:
            Administrator of the drive, can manage the drive (settings,
            invitations and users) and the
            files.</note><note><strong>external</strong>: External user can only
            access the files given by the others
            roles.</note><note><strong>user</strong>: Internal user can invite
            user and manage the files of his private directory and other
            directories with manage file access.</note>
          example: admin
        preference:
          title: preference
          type: object
          properties:
            color:
              title: color
              type: string
              description: Default color for drive
            hide:
              title: hide
              type: boolean
              description: Is the drive hidden for the current user
            default:
              title: default
              type: boolean
              description: >-
                The default drive chosen by the user, if none the first drive in
                the list should be considered the default. There should only be
                one default drive.
            default_page:
              title: default_page
              type: string
              description: User's default landing page
        categories_permissions:
          title: categories_permissions
          type: string
          description: Get user permissions on categories
        capabilities:
          title: capabilities
          type: object
          properties:
            can_create_team_directory:
              title: can_create_team_directory
              type: boolean
            can_set_trash_duration:
              title: can_set_trash_duration
              type: boolean
            has_technical_permission:
              title: has_technical_permission
              type: boolean
              description: >-
                Whether the `Drive User` has the permission to perform technical
                operations
        private_storage:
          title: private_storage
          type: integer
          description: Storage size of private files (bytes)
    DriveDefaultLimits:
      title: Drive Default Limits
      required:
        - archive_files_download
        - bandwidth
        - comments_per_file
        - empty_trash_days
        - files_by_folders
        - files_by_user
        - files_size
        - min_size_for_hotcache
        - shared_link
        - sub_folders
        - versioning
        - versioning_days
      type: object
      properties:
        files_by_folders:
          title: files_by_folders
          type: integer
          description: Number of files/folders in the same folder
        files_size:
          title: files_size
          type: integer
          description: Max file size
        sub_folders:
          title: sub_folders
          type: integer
          description: Max depth of folder
        empty_trash_days:
          title: empty_trash_days
          type: integer
          description: Number of days a file is conserved when trashed
        versioning_days:
          title: versioning_days
          type: integer
          description: Number of days a version of a file is conserved
        versioning:
          title: versioning
          type: integer
          description: Number of version of a fail
        files_by_user:
          title: files_by_user
          type: integer
          description: Max number of file for one user
        shared_link:
          title: shared_link
          type: integer
          description: Max shared linkg
        bandwidth:
          title: bandwidth
          type: integer
          description: Bandwidth authorize for a user in 24 hours
        archive_files_download:
          title: archive_files_download
          type: integer
          description: Max files downloadable in a archive
        comments_per_file:
          title: comments_per_file
          type: integer
          description: Max number of comments per file
        min_size_for_hotcache:
          title: min_size_for_hotcache
          type: integer
          description: >-
            Minimum size of a file to be cached on kCache before moving to a
            "cold" storage
    File:
      title: File
      required:
        - added_at
        - can_become_sharelink
        - can_delete
        - can_leave
        - can_move
        - can_read
        - can_rename
        - can_share
        - can_show
        - can_use_favorite
        - can_use_team
        - can_write
        - created_at
        - created_by
        - depth
        - description
        - download_extensions
        - drive_id
        - extension_type
        - id
        - is_multiple
        - keep_forever
        - last_accessed_at
        - last_modified_at
        - locked_at
        - mime_type
        - name
        - number
        - onlyoffice_extension
        - parent_id
        - size
        - status
        - token
        - total_size
        - type
        - unlocked_at
        - visibility
        - when_downloading
        - when_onlyoffice_opening
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `File`
        name:
          title: name
          type: string
          description: File name
          example: File
        sorted_name:
          title: sorted_name
          type: string
          description: Specific sortable name
        path:
          title: path
          type: string
          description: Full path of the File
          example: /full/path/File
        type:
          title: type
          enum:
            - dir
            - file
          type: string
          description: Type of returned element either a dir (Directory) or file (File)
          nullable: true
          example: file
        status:
          title: status
          enum:
            - erasing
            - locked
            - trash_inherited
            - trashed
            - uploading
          type: string
          description: >-
            Current state of File. The state can be null meaning that the File
            has no specific state.<note><strong>erasing</strong>: File is
            currently being erased from the
            drive.</note><note><strong>locked</strong>: File is currently
            locked. No action can be made except unlocking by the application
            which locked the File (such as office, webdav or external
            import).</note><note><strong>trash_inherited</strong>: File is
            currently in trash because a parent directory was
            trashed.</note><note><strong>trashed</strong>: File is currently in
            trash and specifically trashed by the
            user.</note><note><strong>uploading</strong>: File is currently
            being uploaded. The File is locked and no action can be done
            excepting upload actions.</note>
          nullable: true
          example: erasing
        visibility:
          title: visibility
          enum:
            - ''
            - is_in_private_space
            - is_in_shared_space
            - is_in_team_space_folder
            - is_private_space
            - is_root
            - is_shared_space
            - is_team_space
            - is_team_space_folder
          type: string
          description: >-
            Visibility of File, empty string if no specific visibility. Add
            additional information about File to show different icons or
            more.<note><strong></strong>: Empty visibility mean no special
            visibility.</note><note><strong>is_in_private_space</strong>: Is a
            File inside the private directory of the
            user.</note><note><strong>is_in_shared_space</strong>: Is a File
            inside the shared root directory, a special directory where the
            files inside are the private files of other user shared with the
            logged user.</note><note><strong>is_in_team_space_folder</strong>:
            Is a File inside a Common Documents
            directory.</note><note><strong>is_private_space</strong>: Is the
            private directory of the user.</note><note><strong>is_root</strong>:
            Is the root directory of the
            user.</note><note><strong>is_shared_space</strong>: Is the shared
            root directory, a special directory where the files inside are the
            private files of other user shared with the logged
            user.</note><note><strong>is_team_space</strong>: Is the Common
            Documents directory, a special directory where the files inside are
            common to all users by
            default.</note><note><strong>is_team_space_folder</strong>: Is the
            root directory inside the Common Documents.</note>
          example: ''
        drive_id:
          title: drive_id
          type: integer
          description: Drive identifier
          example: 1111
        depth:
          title: depth
          type: integer
          description: Current path depth of File
          example: 3
        created_by:
          title: created_by
          type: integer
          description: The identifier of the user who first uploaded the File
          nullable: true
        created_at:
          title: created_at
          type: integer
          description: >-
            File creation timestamp (in seconds), if available in its metadata
            or specified on upload
          format: timestamp
          nullable: true
        added_at:
          title: added_at
          type: integer
          description: >-
            The timestamp (in seconds) at which the File has been uploaded for
            the first time
          format: timestamp
        last_modified_at:
          title: last_modified_at
          type: integer
          description: >-
            File creation timestamp (in seconds), if available in its metadata
            or specified on upload
          format: timestamp
        parent_id:
          title: parent_id
          type: integer
          description: Parent directory identifier
        deleted_at:
          title: deleted_at
          type: integer
          description: >-
            Timestamp of deleted resource File, only visible when the File is
            trashed
          format: timestamp
        deleted_by:
          title: deleted_by
          type: integer
          description: >-
            User identifier of deleted resource File, only visible when the File
            is trashed
        shared_root_id:
          title: shared_root_id
          type: integer
          description: Root Directory identifier, only visible for shared user
          nullable: true
          example: 1
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Directory'
            schema: []
        users:
          title: users
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: users
            description: Array of users identifiers that has access to the File
            conditional: true
            items: null
            in: null
            deprecated: null
          description: Array of users identifiers that has access to the File
        teams:
          title: teams
          type: array
          items:
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            format: null
            optional: false
            title: teams
            description: Array of teams identifiers that has access to the File
            conditional: true
            items: null
            in: null
            deprecated: null
          description: Array of teams identifiers that has access to the File
        is_favorite:
          title: is_favorite
          type: boolean
          description: Is File pinned as favorite
        activity:
          title: activity
          type: object
          properties:
            last_accessed_at:
              title: last_accessed_at
              type: integer
              description: Timestamp of the last user access of the File
              format: timestamp
          description: Activities information about the File
        sharelink:
          $ref: '#/components/schemas/ShareLink'
          schema: []
        capabilities:
          title: capabilities
          type: object
          properties:
            can_use_favorite:
              title: can_use_favorite
              type: boolean
              description: Right to set file as favorite
            can_become_sharelink:
              title: can_become_sharelink
              type: boolean
              description: Right to share file by link (share_link)
            can_use_team:
              title: can_use_team
              type: boolean
              description: Right to use and give team access
            can_show:
              title: can_show
              type: boolean
              description: Right to see File information
            can_read:
              title: can_read
              type: boolean
              description: Right to read File content
            can_write:
              title: can_write
              type: boolean
              description: Right to write File
            can_share:
              title: can_share
              type: boolean
              description: Right to share File or manage access to File
            can_leave:
              title: can_leave
              type: boolean
              description: Right to leave shared File
            can_delete:
              title: can_delete
              type: boolean
              description: Right to delete File
            can_rename:
              title: can_rename
              type: boolean
              description: Right to rename File
            can_move:
              title: can_move
              type: boolean
              description: Right to move File
          description: Capabilities of File
        lock:
          title: lock
          type: object
          properties:
            locked_at:
              title: locked_at
              type: integer
              description: When File is locked, locked timestamp
              format: timestamp
              nullable: true
            unlocked_at:
              title: unlocked_at
              type: integer
              description: When File is locked, automatic lock release timestamp
              format: timestamp
              nullable: true
            description:
              title: description
              type: string
              description: When File is locked, locked reason
              nullable: true
              example: onlyoffice
            token:
              title: token
              type: string
              description: When File is locked, locked token
              nullable: true
              example: onlyoffice:123456
          description: When File is locked, locked information
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FileCategory'
            schema: []
        etag:
          title: etag
          type: string
          description: ETag of the file
          nullable: true
        size:
          title: size
          type: integer
          description: Size of File <note>The unit of size is defined in Bytes</note>
          nullable: true
          example: 1700
        mime_type:
          title: mime_type
          type: string
          description: Mime-type of file
          nullable: true
        extension_type:
          title: extension_type
          type: string
          description: File type
          nullable: true
          example: spreadsheet
        supported_by:
          title: supported_by
          enum:
            - kmail
            - onlyoffice
            - thumbnail
          type: object
          oneOf:
            - title: array
              type: array
            - title: string
              type: string
          description: >-
            List of app of where the file can be
            opened.<note><strong>kmail</strong>: File is handled by the kmail
            app webview.</note><note><strong>onlyoffice</strong>: File is
            handled by only-office
            route.</note><note><strong>thumbnail</strong>: File is handled by
            preview and thumbnail route.</note>
          example: kmail
        version:
          title: version
          type: object
          properties:
            is_multiple:
              title: is_multiple
              type: boolean
              description: File has multi-version
            number:
              title: number
              type: integer
              description: Get number of version
            total_size:
              title: total_size
              type: integer
              description: Size of the file with all version  (byte unit)
              nullable: true
            keep_forever:
              title: keep_forever
              type: boolean
              description: >-
                True if the current version of this file should be kept forever,
                otherwise false or empty
          description: Information when file has multi-version
        conversion_capabilities:
          title: conversion_capabilities
          type: object
          properties:
            when_downloading:
              title: when_downloading
              type: boolean
              description: Whether the file may be converted upon download
            download_extensions:
              title: download_extensions
              type: array
              items:
                type: string
                ref: false
                primitive: false
                collection: false
                one-of: false
                format: null
                optional: false
                title: download_extensions
                description: >-
                  Available extensions to which the file may be converted upon
                  download, if possible
                conditional: false
                items: null
                in: null
                deprecated: null
              description: >-
                Available extensions to which the file may be converted upon
                download, if possible
            when_onlyoffice_opening:
              title: when_onlyoffice_opening
              type: boolean
              description: >-
                Whether the file may be converted for live edition with
                OnlyOffice
            onlyoffice_extension:
              title: onlyoffice_extension
              type: string
              description: >-
                Available extension to which the file may be converted by
                OnlyOffice, if possible
              nullable: true
              example: docx
          description: The available ways to convert the file
        hash:
          title: hash
          type: string
          description: Hash of the file content
          nullable: true
          example: xxh3:00ec7bec63e548df
    Chart:
      title: Chart
      required:
        - data
        - name
        - unit
      type: object
      properties:
        name:
          title: name
          type: string
          description: X coordinate name
        unit:
          title: unit
          type: string
          description: X coordinate unit
        data:
          title: data
          type: object
          oneOf:
            - title: timestamp[]
            - title: string[]
          description: X coordinate data points
        metric:
          title: metric
          type: string
          description: Metric of the requested chart
    Drive_26fe3376:
      title: Drive
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Unique identifier
          type: string
          description: Drive identifier
        name:
          title: name
          type: string
          description: Drive name
    SanitizedActivity:
      title: Sanitized Activity
      required:
        - action
        - state
      type: object
      properties:
        target:
          title: target
          type: object
          oneOf:
            - title: string
              type: string
            - title: int
              type: integer
          description: Path of the activity
          example: /directory/file
        target_at:
          title: target_at
          type: object
          oneOf:
            - title: timestamp
              type: integer
              format: timestamp
            - title: int
              type: integer
          description: Target date of the activity
        action:
          title: action
          enum:
            - archive
            - archive_in_trash
            - file_deleted
            - move
            - rename
            - restore
            - trash
            - update
            - version_deleted
          type: string
          description: >-
            Action to do in rewind situation.<note><strong>archive</strong>:
            File needs to be archived in a specific
            directory.</note><note><strong>archive_in_trash</strong>: File needs
            to be archived in trash
            root.</note><note><strong>file_deleted</strong>: File does not
            exist.</note><note><strong>move</strong>: File needs to be
            moved.</note><note><strong>rename</strong>: File needs to be
            renamed.</note><note><strong>restore</strong>: File needs to be
            restored from trash.</note><note><strong>trash</strong>: File needs
            to be trashed.</note><note><strong>update</strong>: File content
            need to be updated.</note><note><strong>version_deleted</strong>:
            File content does not exist.</note>
          example: archive
        state:
          title: state
          enum:
            - not_executed
            - not_handled
            - on_conflict
            - on_error
            - success
          type: string
          description: >-
            State one action in the rewind
            process.<note><strong>not_executed</strong>: Action was not executed
            yet.</note><note><strong>not_handled</strong>: Action cannot be
            rewound.</note><note><strong>on_conflict</strong>: Action lead to a
            conflict with another file/directory, this item was moved to a
            specific directory.</note><note><strong>on_error</strong>: Action
            lead to a fatal error, for instance the targeted version of a file
            was unable to be restored.</note><note><strong>success</strong>:
            Action was executed correctly.</note>
          example: not_executed
        special_parent_id:
          title: special_parent_id
          type: integer
          nullable: true
    Userfileaccess:
      title: User file access
      required:
        - access
        - color
        - id
        - name
        - right
        - status
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: >-
            User file access Identifier, can be team identifier, user
            identifier, invitation identifier
        access:
          title: access
          enum:
            - invitation
            - team
            - user
          type: string
          description: Access type
        name:
          title: name
          type: string
          description: User file access name
        right:
          title: right
          type: string
          description: Access right
          nullable: true
        color:
          title: color
          type: integer
          description: Access color
          nullable: true
        status:
          title: status
          enum:
            - accepted
            - cancelled
            - expired
            - pending
            - rejected
          type: string
          description: Status of access
    TeamFileAccess:
      title: Team File Access
      required:
        - access
        - color
        - id
        - name
        - right
        - status
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: >-
            Team File Access Identifier, can be team identifier, user
            identifier, invitation identifier
        access:
          title: access
          type: string
          description: Access type
          example: team
        name:
          title: name
          type: string
          description: Team File Access name
        right:
          title: right
          type: string
          description: Access right
          nullable: true
        color:
          title: color
          type: integer
          description: Access color
          nullable: true
        status:
          title: status
          enum:
            - accepted
            - cancelled
            - expired
            - pending
            - rejected
          type: string
          description: Status of access
    ExternInvitationFileAccess:
      title: Extern Invitation File Access
      required:
        - access
        - color
        - email
        - id
        - invitation_drive_id
        - name
        - right
        - status
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: >-
            Extern Invitation File Access Identifier, can be team identifier,
            user identifier, invitation identifier
        access:
          title: access
          type: string
          description: Access type
          example: invitation
        name:
          title: name
          type: string
          description: Extern Invitation File Access name
        right:
          title: right
          type: string
          description: Access right
          nullable: true
        color:
          title: color
          type: integer
          description: Access color
          nullable: true
        status:
          title: status
          enum:
            - accepted
            - cancelled
            - expired
            - pending
            - rejected
          type: string
          description: Status of access
        email:
          title: email
          type: string
          description: Email if available
          nullable: true
        user:
          $ref: '#/components/schemas/User'
          schema: []
        invitation_drive_id:
          title: invitation_drive_id
          type: integer
          description: Access was given with the access to the drive id
          nullable: true
    Feedbackaccessresource:
      title: Feedback access resource
      required:
        - access
        - id
        - message
        - result
      type: object
      properties:
        id:
          title: Unique identifier
          type: object
          oneOf:
            - title: int
              type: integer
            - title: string
              type: string
          description: The email,team or user identifier filled in the parameters
          example: '1000'
        result:
          title: result
          type: boolean
          description: The invitation send
          example: true
        access:
          title: access
          type: object
          oneOf:
            - $ref: '#/components/schemas/ExternInvitationFileAccess'
              schema: []
            - $ref: '#/components/schemas/TeamFileAccess'
              schema: []
            - $ref: '#/components/schemas/Userfileaccess'
              schema: []
          description: The invitation send, null if access was not found
          nullable: true
        message:
          title: message
          type: string
          description: Additional message about why email fail to be sent
          example: error_already_exist
    Comment:
      title: Comment
      required:
        - body
        - created_at
        - id
        - is_resolved
        - liked
        - likes_count
        - parent_id
        - responses_count
        - updated_at
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Comment`
        parent_id:
          title: parent_id
          type: integer
          description: >-
            Comment parent identifier. If present, this comment is a response of
            another comment
        body:
          title: body
          type: string
          description: Comment message
        is_resolved:
          title: is_resolved
          type: boolean
          description: If a comment is set as resolved, solved.
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Comment` was created at
          format: timestamp
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `Comment` was updated at
          format: timestamp
        liked:
          title: liked
          type: boolean
          description: if the comment is liked
        likes_count:
          title: likes_count
          type: integer
          description: Number of likes
        responses_count:
          title: responses_count
          type: integer
          description: Number of responses for this comment
        user:
          $ref: '#/components/schemas/User'
          schema: []
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
            schema: []
        likes:
          type: array
          items:
            $ref: '#/components/schemas/User'
            schema: []
    ActivityFile_5e63f180:
      title: Activity File
      required:
        - action
        - created_at
        - device
        - file_id
        - id
        - ip
        - location
        - name
        - type
        - user_agent
        - user_id
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `Activity File`
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Activity File` was created at
          format: timestamp
        action:
          title: action
          type: string
          description: Activity type
          example: file_rename
        new_path:
          title: new_path
          type: string
          description: Current path of the activity file/directory
          example: /directory/file_renamed
        old_path:
          title: old_path
          type: string
          description: Previous path of the activity file/directory
          example: /directory/filename
        private_path_user_id:
          title: private_path_user_id
          type: integer
          description: get private folder user id
        file_id:
          title: file_id
          type: integer
          description: Logged file identifier
        user_id:
          title: user_id
          type: integer
          description: User identifier of the action, null if the user was not logged
          nullable: true
        user:
          $ref: '#/components/schemas/User'
          schema: []
        source:
          title: source
          type: object
          properties:
            name:
              title: name
              enum:
                - api
                - job
                - webdav
              type: string
              description: Name of the source
            ip:
              title: ip
              type: string
              description: Ip of the source
            user_agent:
              title: user_agent
              type: string
              description: User Agent of the source
            device:
              title: device
              type: string
              description: Device of the source
            location:
              title: location
              type: string
              description: Location of the source
          description: Information about where the Activity was generated
        file:
          title: file
          type: object
          oneOf:
            - $ref: '#/components/schemas/File'
              schema: []
            - $ref: '#/components/schemas/Directory'
              schema: []
          description: Associated File or Directory, null is element was deleted
          nullable: true
        parent:
          $ref: '#/components/schemas/Directory'
          schema: []
        entity:
          title: entity
          type: object
          properties:
            id:
              title: Unique identifier
              type: integer
              description: Id of the object
            type:
              title: type
              type: integer
              description: Type of the object
          description: Object the Activity is about
    Cursor:
      title: Cursor
      required:
        - activity_id
        - created_at
        - limit
        - page
        - recursive
        - source_id
        - user_id
      type: object
      properties:
        user_id:
          title: user_id
          type: integer
          description: ID of the user who created the cursor
        source_id:
          title: source_id
          type: integer
          description: ID of the directory the cursor was created in
        activity_id:
          title: activity_id
          type: integer
          description: ID of the last activity seen by the cursor
        created_at:
          title: created_at
          type: integer
          description: Timestamp of the cursor's creation
        recursive:
          title: recursive
          type: boolean
          description: Whether the cursor also reads children directories
        page:
          title: page
          type: integer
          description: Current page of cursor data
          nullable: true
        limit:
          title: limit
          type: integer
          description: Curent limit of cursor
          nullable: true
    Uploadsegment:
      title: Upload segment
      required:
        - created_at
        - hash
        - number
        - size
        - status
      type: object
      properties:
        number:
          title: number
          type: integer
          description: Index of the chunk to compute the final object correctly
        status:
          title: status
          enum:
            - error
            - ok
            - uploading
          type: string
          description: >-
            The chunk status during the upload.<note><strong>error</strong>:
            Something was wrong chunk was not correctly received, retried to
            send the same chunk.</note><note><strong>ok</strong>: Chunk has been
            received.</note><note><strong>uploading</strong>: Chunks still
            uploading.</note>
          example: error
        created_at:
          title: created_at
          type: integer
          description: Timestamp `Upload segment` was created at
          format: timestamp
        size:
          title: size
          type: integer
          description: Chunk uploaded size, computed
        hash:
          title: hash
          type: string
          description: Chunk uploaded hash, computed
    Periodicity:
      title: Periodicity
      required:
        - id
        - unite
        - value
      type: object
      properties:
        id:
          title: Unique identifier
          enum:
            - '1'
            - '2'
          type: integer
          description: Unique identifier of the resource `Periodicity`
          example: 1
        unite:
          title: unite
          type: integer
        value:
          title: value
          enum:
            - MONTH
            - YEAR
          type: string
          description: The `PackPrice` time range
          example: MONTH
    VodProduct:
      title: VodProduct
      required:
        - name
        - vod_id
      type: object
      properties:
        vod_id:
          title: vod_id
          type: integer
          description: >-
            Unique identifier of the `vodProduct` that is related to the
            resource `VodProduct`
          example: 1980
        name:
          title: name
          type: string
          description: Name of the resource `VodProduct`
    PricingOption:
      title: PricingOption
      required:
        - amount_excl_tax
        - currency
        - id
        - periodicity
      type: object
      properties:
        id:
          title: Unique identifier
          type: integer
          description: Unique identifier of the resource `PricingOption`
          example: 1
        currency:
          $ref: '#/components/schemas/Admin'
          schema: []
        periodicity:
          $ref: '#/components/schemas/Periodicity'
          schema: []
        amount_excl_tax:
          title: amount_excl_tax
          type: number
    ChannelInvoiceableOption:
      title: ChannelInvoiceableOption
      required:
        - channel_id
        - deleted_at
        - demo
        - end_echeance_at
        - free
        - next_deadline_at
        - option_active
        - option_id
        - ordered_at
        - terminated_at
        - updated_at
      type: object
      properties:
        channel_id:
          title: channel_id
          type: integer
          description: >-
            Unique identifier of the `channel` that is related to the resource
            `ChannelInvoiceableOption`
          example: 69001
        option_id:
          title: option_id
          type: integer
        updated_at:
          title: updated_at
          type: integer
          description: Timestamp `ChannelInvoiceableOption` has been updated
          format: datetime
        ordered_at:
          title: ordered_at
          type: integer
          description: Timestamp `ChannelInvoiceableOption` has been ordered
          format: datetime
        next_deadline_at:
          title: next_deadline_at
          type: integer
          format: datetime
        end_echeance_at:
          title: end_echeance_at
          type: integer
          format: datetime
        free:
          title: free
          type: boolean
        demo:
          title: demo
          type: boolean
        option_active:
          title: option_active
          type: boolean
        terminated_at:
          title: terminated_at
          type: integer
          format: datetime
        deleted_at:
          title: deleted_at
          type: integer
          description: Timestamp `ChannelInvoiceableOption` has been deleted
          format: datetime
    Admin:
      title: Admin
      required:
        - currency
        - currency_pretty
        - id
      type: object
      properties:
        id:
          title: Unique identifier
          type: string
          description: Unique identifier of the resource `Admin`
          example: '1'
        currency:
          title: currency
          type: string
        currency_pretty:
          title: currency_pretty
          type: string
    SuccessResponseData:
      required:
        - data
      type: object
      properties:
        data:
          anyOf:
            - type: string
            - type: number
            - type: integer
            - type: boolean
            - type: array
            - type: object
          description: Effective response
          nullable: false
    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - $ref: '#/components/schemas/SuccessResponseData'
    ResponseSuccessTotalSpecific:
      required:
        - total
      type: object
      properties:
        total:
          type: integer
          description: Total number of results
    TotalSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - $ref: '#/components/schemas/ResponseSuccessTotalSpecific'
    ResponseSuccessPaginatedSpecific:
      required:
        - pages
        - page
        - items_per_page
      type: object
      properties:
        pages:
          type: integer
          description: Total number of pages
        page:
          type: integer
          description: The current page
        items_per_page:
          type: integer
          description: Number of results per page
    Error:
      title: Error
      type: object
    ApiError:
      type: object
      properties:
        result:
          type: string
        error:
          type: object
          properties:
            code:
              type: string
            description:
              type: string
            context:
              type: object
    PaginatedSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/TotalSuccessResponse'
        - $ref: '#/components/schemas/ResponseSuccessPaginatedSpecific'
  parameters:
    cut: []
    maketoken:
      strategy:
        type: string
        description: Array
        example: HLS
        enum:
          - DASH
          - HLS
          - BEST
          - SINGLE
        format: string
      start_time:
        type: string
        description: default NOW
        example: NOW()
        format: date
      end_time:
        type: string
        description: default NOW
        example: NOW()
        format: date
      window:
        type: number
        description: secondes
        example: 127
        format: int
        minimum: '1'
      allowed_domains:
        type: array
        description: array
        example: '[url1,url2]'
      restricted_domains:
        type: array
        description: array
        example: '[url1,url2]'
    from:
      schema:
        type: string
      in: query
      format: string
      name: from
      example: '1640390400'
      description: begin date timestamp
    perhisto:
      schema:
        type: string
      in: query
      format: string
      name: per
      example: 1d
      description: Histogram grouped by 1d,1h,1m ..
    Return:
      description: >
        *Optional* :  If you pass this parameter with the value `total`, then
        the response will be the number of items in the collection, instead of
        the items themselves.<br />

        Part of the `total` capacity
      schema:
        enum:
          - total
        type: string
      name: return
      in: query
    Limit:
      description: |
        *Optional parameter* that define the number of items to return<br />
        Part of the `offset` capacity
      schema:
        type: integer
      example: 10
      name: limit
      in: query
    Skip:
      description: >
        *Optional parameter* that define the index of the first item to return
        (0 = first item)<br />

        Part of the `offset` capacity
      schema:
        type: integer
      example: 2
      name: skip
      in: query
    Page:
      description: |
        *Optional parameter* that define the page number<br />
        Part of the `pagination` capacity
      schema:
        type: integer
      example: 5
      name: page
      in: query
    PerPage:
      description: |
        *Optional parameter* that define the number of items per page<br />
        Part of the `pagination` capacity
      schema:
        type: integer
      example: 10
      name: per_page
      in: query
    OrderBy:
      description: |
        *Optional parameter* that define the field used for sorting<br />
        Part of the `sort` capacity
      style: form
      explode: false
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example: id
      name: order_by
      in: query
    Order:
      description: |
        *Optional parameter* that define the default sort order<br />
        Part of the `sort` capacity
      schema:
        enum:
          - asc
          - desc
        type: string
        default: asc
      example: asc
      name: order
      in: query
    OrderFor:
      description: |
        *Optional parameter* that define the sorting order for a field<br />
        By default **order** is used<br />
        Part of the `sort` capacity
      style: deepObject
      explode: true
      schema:
        type: object
      name: order_for
      in: query
  securitySchemes:
    oAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.infomaniak.com/authorize
          tokenUrl: https://login.infomaniak.com/token
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    '0':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request is malformed.
    '1':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Access to the resource is forbidden for this user.
    '2':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Resource requested not found.
    '3':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: There was an internal error in the server.
    Forbidden:
      description: Do not have appropriate permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: error
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: vod_not_authorized
                      description:
                        type: string
                        example: Authorization required
            properties:
              data:
                type: string
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ApiError'
            properties:
              data:
                type: string
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            allOf:
              '0':
                type: object
                properties:
                  result:
                    type: string
                    example: error
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: vod_model_not_found
                      description:
                        type: string
                        example: No query results for model model 1234
                      context:
                        type: object
              properties:
                data:
                  type: string
    TooLarge:
      description: Content too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    NotImplemented:
      description: Feature is disabled
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    InternalServerError:
      description: Something went wrong with the server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    a039ea57:
      description: '404 : ModelNotFoundException'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 404
                      description:
                        type: string
                        example: '404 : ModelNotFoundException'
                      context:
                        type: object
            properties:
              data:
                type: string
    2f952ed9:
      description: '422 : The given data was invalid.'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 422
                      description:
                        type: string
                        example: '422 : The given data was invalid.'
                      context:
                        type: object
            properties:
              data:
                type: string
    08d6964f:
      description: '400 : BadRequestHttpException'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 400
                      description:
                        type: string
                        example: '400 : BadRequestHttpException'
                      context:
                        type: object
            properties:
              data:
                type: string
    4bc0f255:
      description: '404 : MissingModelBehaviorException'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 404
                      description:
                        type: string
                        example: '404 : MissingModelBehaviorException'
                      context:
                        type: object
            properties:
              data:
                type: string
    9436319d:
      description: '404 : InvalidImageFormatException'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 404
                      description:
                        type: string
                        example: '404 : InvalidImageFormatException'
                      context:
                        type: object
            properties:
              data:
                type: string
    41638d24:
      description: '404 : FileException'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 404
                      description:
                        type: string
                        example: '404 : FileException'
                      context:
                        type: object
            properties:
              data:
                type: string
    556bb773:
      description: '401 : NotAuthorized'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 401
                      description:
                        type: string
                        example: '401 : NotAuthorized'
                      context:
                        type: object
            properties:
              data:
                type: string
    e7a7a4eb:
      description: '404 : CountHalt'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 404
                      description:
                        type: string
                        example: '404 : CountHalt'
                      context:
                        type: object
            properties:
              data:
                type: string
    '5e128766':
      description: '500 : Exception'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  result:
                    type: string
                    example: failure
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 500
                      description:
                        type: string
                        example: '500 : Exception'
                      context:
                        type: object
            properties:
              data:
                type: string
    GenericPaginatedOrNotPaginatedSuccessResponse:
      description: OK
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SuccessResponse'
              - $ref: '#/components/schemas/TotalSuccessResponse'
              - $ref: '#/components/schemas/PaginatedSuccessResponse'