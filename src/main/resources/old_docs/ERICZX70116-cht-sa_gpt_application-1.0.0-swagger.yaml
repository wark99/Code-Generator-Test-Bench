openapi: 3.1.0
info:
  title: CHT SA GPT Application
  description: Development Environment.
  version: 1.0.0
paths:
  /api/department:
    post:
      tags:
        - department
      summary: ''
      operationId: _api_department_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentPostDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/department/{target_id}:
    put:
      tags:
        - department
      summary: ''
      operationId: _api_department__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentPutDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - department
      summary: ''
      operationId: _api_department__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/department-access-level:
    post:
      tags:
        - department_access_level
      summary: ''
      operationId: _api_department_access_level_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentAccessLevelPostDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/department-access-level/{target_id}:
    put:
      tags:
        - department_access_level
      summary: ''
      operationId: _api_department_access_level__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentAccessLevelPutDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - department_access_level
      summary: ''
      operationId: _api_department_access_level__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-account:
    post:
      tags:
        - user_account
      summary: ''
      operationId: _api_user_account_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountPostDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-account/{target_id}:
    put:
      tags:
        - user_account
      summary: ''
      operationId: _api_user_account__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountPutDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user_account
      summary: ''
      operationId: _api_user_account__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-role:
    post:
      tags:
        - user_role
      summary: ''
      operationId: _api_user_role_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolePostDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-role/{target_id}:
    put:
      tags:
        - user_role
      summary: ''
      operationId: _api_user_role__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolePutDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user_role
      summary: ''
      operationId: _api_user_role__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-role-access-level:
    post:
      tags:
        - user_role_access_level
      summary: ''
      operationId: _api_user_role_access_level_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleAccessLevelPostDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user-role-access-level/{target_id}:
    put:
      tags:
        - user_role_access_level
      summary: ''
      operationId: _api_user_role_access_level__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleAccessLevelPutDTO'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user_role_access_level
      summary: ''
      operationId: _api_user_role_access_level__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/document-file-record:
    get:
      tags:
        - document_file_record
      summary: ''
      operationId: _api_document_file_record_get
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - document_file_record
      summary: ''
      operationId: _api_document_file_record_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body__api_document_file_record_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPostCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/document-file-record/{target_id}:
    put:
      tags:
        - document_file_record
      summary: ''
      operationId: _api_document_file_record__target_id__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/Body__api_document_file_record__target_id__put
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionPutCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - document_file_record
      summary: ''
      operationId: _api_document_file_record__target_id__delete
      parameters:
        - required: true
          schema:
            type: integer
            title: Target Id
          name: target_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseHttpActionDeleteCorrectResponseModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BaseHttpActionDeleteCorrectResponseModel:
      properties:
        executed:
          type: boolean
          title: Executed
          default: true
        code:
          type: string
          title: Code
          default: '20002'
        message:
          type: string
          title: Message
          default: delete correct
      type: object
      title: BaseHttpActionDeleteCorrectResponseModel
    BaseHttpActionPostCorrectResponseModel:
      properties:
        executed:
          type: boolean
          title: Executed
          default: true
        code:
          type: string
          title: Code
          default: '20000'
        message:
          type: string
          title: Message
          default: post correct
        entity:
          title: Entity
      type: object
      title: BaseHttpActionPostCorrectResponseModel
    BaseHttpActionPutCorrectResponseModel:
      properties:
        executed:
          type: boolean
          title: Executed
          default: true
        code:
          type: string
          title: Code
          default: '20001'
        message:
          type: string
          title: Message
          default: put correct
        entity:
          title: Entity
      type: object
      title: BaseHttpActionPutCorrectResponseModel
    Body__api_document_file_record__target_id__put:
      properties:
        training_record_id:
          type: integer
          title: Training Record Id
        file_description:
          type: string
          title: File Description
        note:
          type: string
          title: Note
        input_file:
          type: string
          format: binary
          title: Input File
      type: object
      required:
        - training_record_id
        - file_description
        - note
        - input_file
      title: Body__api_document_file_record__target_id__put
    Body__api_document_file_record_post:
      properties:
        training_record_id:
          type: integer
          title: Training Record Id
        file_description:
          type: string
          title: File Description
        note:
          type: string
          title: Note
        input_file:
          type: string
          format: binary
          title: Input File
      type: object
      required:
        - training_record_id
        - file_description
        - note
        - input_file
      title: Body__api_document_file_record_post
    DepartmentAccessLevelPostDTO:
      properties:
        accessLevelName:
          type: string
          title: Accesslevelname
        accessLevel:
          type: integer
          title: Accesslevel
      type: object
      required:
        - accessLevelName
        - accessLevel
      title: DepartmentAccessLevelPostDTO
    DepartmentAccessLevelPutDTO:
      properties:
        accessLevelName:
          type: string
          title: Accesslevelname
        accessLevel:
          type: integer
          title: Accesslevel
      type: object
      required:
        - accessLevelName
        - accessLevel
      title: DepartmentAccessLevelPutDTO
    DepartmentPostDTO:
      properties:
        departmentName:
          type: string
          title: Departmentname
        departmentCode:
          type: integer
          title: Departmentcode
      type: object
      required:
        - departmentName
        - departmentCode
      title: DepartmentPostDTO
    DepartmentPutDTO:
      properties:
        departmentName:
          type: string
          title: Departmentname
        departmentCode:
          type: integer
          title: Departmentcode
      type: object
      required:
        - departmentName
        - departmentCode
      title: DepartmentPutDTO
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    UserAccountPostDTO:
      properties:
        userAccountName:
          type: string
          title: Useraccountname
        userPassword:
          type: integer
          title: Userpassword
      type: object
      required:
        - userAccountName
        - userPassword
      title: UserAccountPostDTO
    UserAccountPutDTO:
      properties:
        userPassword:
          type: integer
          title: Userpassword
      type: object
      required:
        - userPassword
      title: UserAccountPutDTO
    UserRoleAccessLevelPostDTO:
      properties:
        accessLevelName:
          type: string
          title: Accesslevelname
        accessLevel:
          type: integer
          title: Accesslevel
      type: object
      required:
        - accessLevelName
        - accessLevel
      title: UserRoleAccessLevelPostDTO
    UserRoleAccessLevelPutDTO:
      properties:
        accessLevelName:
          type: string
          title: Accesslevelname
        accessLevel:
          type: integer
          title: Accesslevel
      type: object
      required:
        - accessLevelName
        - accessLevel
      title: UserRoleAccessLevelPutDTO
    UserRolePostDTO:
      properties:
        roleName:
          type: string
          title: Rolename
        roleCode:
          type: integer
          title: Rolecode
      type: object
      required:
        - roleName
        - roleCode
      title: UserRolePostDTO
    UserRolePutDTO:
      properties:
        roleName:
          type: string
          title: Rolename
        roleCode:
          type: integer
          title: Rolecode
      type: object
      required:
        - roleName
        - roleCode
      title: UserRolePutDTO
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError