openapi: 3.0.0
info:
  title: Mighty Claim Helper API
  version: v1
paths:
  /initialize:
    post:
      summary: Start a new user session with an initial greeting.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Unique identifier for the user's session.
      responses:
        '200':
          description: Initial greeting and preliminary questions.

  /consent-verification:
    post:
      summary: Verify user consent for communication via text (SMS).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
                userResponse:
                  type: string
                  description: User's response to the consent query.
      responses:
        '200':
          description: Confirmation of consent verification.

  /consent-confirmation-disclaimer:
    post:
      summary: Confirm user's understanding of the service's nature and limitations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
                userResponse:
                  type: string
                  description: User's response to the disclaimer.
      responses:
        '200':
          description: Confirmation of user's understanding and consent.

  /basic-user-info:
    post:
      summary: Collect basic user information like full name and referral source.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
      responses:
        '200':
          description: Request for basic user information.

  /case-specific-queries:
    post:
      summary: Ask case-specific questions regarding legal representation and accident details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
      responses:
        '200':
          description: Case-specific queries and potential off-ramp scenarios.

  /follow-up-questions:
    post:
      summary: Pose detailed follow-up questions based on previous responses.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
                userResponse:
                  type: string
                  description: User's response to previous questions.
      responses:
        '200':
          description: Follow-up questions for clarity and completeness.

  /business-hours-notification:
    get:
      summary: Notify the user about business hours and expected response times.
      responses:
        '200':
          description: Business hours information.

  /end-interaction:
    post:
      summary: Conclude the interaction and provide closure.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
      responses:
        '200':
          description: Thank you message and interaction conclusion.

  /feedback-collection:
    post:
      summary: Collect user feedback for continuous improvement.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Session identifier.
                feedback:
                  type: string
                  description: User's feedback on the interaction.
      responses:
        '200':
          description: Acknowledgement of feedback and appreciation.