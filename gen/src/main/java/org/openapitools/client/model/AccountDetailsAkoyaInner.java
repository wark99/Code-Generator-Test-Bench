/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AnnuityAccountAkoya;
import org.openapitools.client.model.DepositAccountAkoya;
import org.openapitools.client.model.InsuranceAccountAkoya;
import org.openapitools.client.model.InvestmentAccountAkoya;
import org.openapitools.client.model.LoanAccountAkoya;
import org.openapitools.client.model.LocAccountAkoya;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountDetailsAkoyaInner
 */
@JsonPropertyOrder({
  AccountDetailsAkoyaInner.JSON_PROPERTY_INVESTMENT_ACCOUNT,
  AccountDetailsAkoyaInner.JSON_PROPERTY_DEPOSIT_ACCOUNT,
  AccountDetailsAkoyaInner.JSON_PROPERTY_LOAN_ACCOUNT,
  AccountDetailsAkoyaInner.JSON_PROPERTY_LOC_ACCOUNT,
  AccountDetailsAkoyaInner.JSON_PROPERTY_INSURANCE_ACCOUNT,
  AccountDetailsAkoyaInner.JSON_PROPERTY_ANNUITY_ACCOUNT
})
@JsonTypeName("AccountDetailsAkoya_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountDetailsAkoyaInner {
  public static final String JSON_PROPERTY_INVESTMENT_ACCOUNT = "investmentAccount";
  private InvestmentAccountAkoya investmentAccount;

  public static final String JSON_PROPERTY_DEPOSIT_ACCOUNT = "depositAccount";
  private DepositAccountAkoya depositAccount;

  public static final String JSON_PROPERTY_LOAN_ACCOUNT = "loanAccount";
  private LoanAccountAkoya loanAccount;

  public static final String JSON_PROPERTY_LOC_ACCOUNT = "locAccount";
  private LocAccountAkoya locAccount;

  public static final String JSON_PROPERTY_INSURANCE_ACCOUNT = "insuranceAccount";
  private InsuranceAccountAkoya insuranceAccount;

  public static final String JSON_PROPERTY_ANNUITY_ACCOUNT = "annuityAccount";
  private AnnuityAccountAkoya annuityAccount;

  public AccountDetailsAkoyaInner() {
  }

  public AccountDetailsAkoyaInner investmentAccount(InvestmentAccountAkoya investmentAccount) {
    
    this.investmentAccount = investmentAccount;
    return this;
  }

   /**
   * Get investmentAccount
   * @return investmentAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVESTMENT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvestmentAccountAkoya getInvestmentAccount() {
    return investmentAccount;
  }


  @JsonProperty(JSON_PROPERTY_INVESTMENT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestmentAccount(InvestmentAccountAkoya investmentAccount) {
    this.investmentAccount = investmentAccount;
  }


  public AccountDetailsAkoyaInner depositAccount(DepositAccountAkoya depositAccount) {
    
    this.depositAccount = depositAccount;
    return this;
  }

   /**
   * Get depositAccount
   * @return depositAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPOSIT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DepositAccountAkoya getDepositAccount() {
    return depositAccount;
  }


  @JsonProperty(JSON_PROPERTY_DEPOSIT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDepositAccount(DepositAccountAkoya depositAccount) {
    this.depositAccount = depositAccount;
  }


  public AccountDetailsAkoyaInner loanAccount(LoanAccountAkoya loanAccount) {
    
    this.loanAccount = loanAccount;
    return this;
  }

   /**
   * Get loanAccount
   * @return loanAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoanAccountAkoya getLoanAccount() {
    return loanAccount;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanAccount(LoanAccountAkoya loanAccount) {
    this.loanAccount = loanAccount;
  }


  public AccountDetailsAkoyaInner locAccount(LocAccountAkoya locAccount) {
    
    this.locAccount = locAccount;
    return this;
  }

   /**
   * Get locAccount
   * @return locAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOC_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocAccountAkoya getLocAccount() {
    return locAccount;
  }


  @JsonProperty(JSON_PROPERTY_LOC_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocAccount(LocAccountAkoya locAccount) {
    this.locAccount = locAccount;
  }


  public AccountDetailsAkoyaInner insuranceAccount(InsuranceAccountAkoya insuranceAccount) {
    
    this.insuranceAccount = insuranceAccount;
    return this;
  }

   /**
   * Get insuranceAccount
   * @return insuranceAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSURANCE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InsuranceAccountAkoya getInsuranceAccount() {
    return insuranceAccount;
  }


  @JsonProperty(JSON_PROPERTY_INSURANCE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsuranceAccount(InsuranceAccountAkoya insuranceAccount) {
    this.insuranceAccount = insuranceAccount;
  }


  public AccountDetailsAkoyaInner annuityAccount(AnnuityAccountAkoya annuityAccount) {
    
    this.annuityAccount = annuityAccount;
    return this;
  }

   /**
   * Get annuityAccount
   * @return annuityAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNUITY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnnuityAccountAkoya getAnnuityAccount() {
    return annuityAccount;
  }


  @JsonProperty(JSON_PROPERTY_ANNUITY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnuityAccount(AnnuityAccountAkoya annuityAccount) {
    this.annuityAccount = annuityAccount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDetailsAkoyaInner accountDetailsAkoyaInner = (AccountDetailsAkoyaInner) o;
    return Objects.equals(this.investmentAccount, accountDetailsAkoyaInner.investmentAccount) &&
        Objects.equals(this.depositAccount, accountDetailsAkoyaInner.depositAccount) &&
        Objects.equals(this.loanAccount, accountDetailsAkoyaInner.loanAccount) &&
        Objects.equals(this.locAccount, accountDetailsAkoyaInner.locAccount) &&
        Objects.equals(this.insuranceAccount, accountDetailsAkoyaInner.insuranceAccount) &&
        Objects.equals(this.annuityAccount, accountDetailsAkoyaInner.annuityAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(investmentAccount, depositAccount, loanAccount, locAccount, insuranceAccount, annuityAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDetailsAkoyaInner {\n");
    sb.append("    investmentAccount: ").append(toIndentedString(investmentAccount)).append("\n");
    sb.append("    depositAccount: ").append(toIndentedString(depositAccount)).append("\n");
    sb.append("    loanAccount: ").append(toIndentedString(loanAccount)).append("\n");
    sb.append("    locAccount: ").append(toIndentedString(locAccount)).append("\n");
    sb.append("    insuranceAccount: ").append(toIndentedString(insuranceAccount)).append("\n");
    sb.append("    annuityAccount: ").append(toIndentedString(annuityAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

