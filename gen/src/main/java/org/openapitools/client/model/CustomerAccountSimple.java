/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An account represents a bank account such as a checking or savings that the customer has added via the Connect interface.
 */
@JsonPropertyOrder({
  CustomerAccountSimple.JSON_PROPERTY_ID,
  CustomerAccountSimple.JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY,
  CustomerAccountSimple.JSON_PROPERTY_NAME,
  CustomerAccountSimple.JSON_PROPERTY_TYPE,
  CustomerAccountSimple.JSON_PROPERTY_AGGREGATION_STATUS_CODE,
  CustomerAccountSimple.JSON_PROPERTY_STATUS,
  CustomerAccountSimple.JSON_PROPERTY_CUSTOMER_ID,
  CustomerAccountSimple.JSON_PROPERTY_INSTITUTION_ID,
  CustomerAccountSimple.JSON_PROPERTY_AGGREGATION_SUCCESS_DATE,
  CustomerAccountSimple.JSON_PROPERTY_AGGREGATION_ATTEMPT_DATE,
  CustomerAccountSimple.JSON_PROPERTY_CREATED_DATE,
  CustomerAccountSimple.JSON_PROPERTY_CURRENCY,
  CustomerAccountSimple.JSON_PROPERTY_INSTITUTION_LOGIN_ID,
  CustomerAccountSimple.JSON_PROPERTY_DISPLAY_POSITION,
  CustomerAccountSimple.JSON_PROPERTY_PARENT_ACCOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:26:42.703698393Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CustomerAccountSimple {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY = "accountNumberDisplay";
  private String accountNumberDisplay;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  private Integer aggregationStatusCode;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_INSTITUTION_ID = "institutionId";
  private String institutionId;

  public static final String JSON_PROPERTY_AGGREGATION_SUCCESS_DATE = "aggregationSuccessDate";
  private Long aggregationSuccessDate;

  public static final String JSON_PROPERTY_AGGREGATION_ATTEMPT_DATE = "aggregationAttemptDate";
  private Long aggregationAttemptDate;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private Long createdDate;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_INSTITUTION_LOGIN_ID = "institutionLoginId";
  private Long institutionLoginId;

  public static final String JSON_PROPERTY_DISPLAY_POSITION = "displayPosition";
  private Integer displayPosition;

  public static final String JSON_PROPERTY_PARENT_ACCOUNT = "parentAccount";
  private String parentAccount;

  public CustomerAccountSimple() {
  }

  public CustomerAccountSimple id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * An account ID
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public CustomerAccountSimple accountNumberDisplay(String accountNumberDisplay) {
    
    this.accountNumberDisplay = accountNumberDisplay;
    return this;
  }

   /**
   * The account number from a financial institution in truncated format:    * Last four digits: \&quot;1234\&quot;    * Last four digits with suffix: \&quot;1234-9\&quot;    * Full value for string accounts: \&quot;john@gmail.com\&quot; example: &#39;1234-9&#39;
   * @return accountNumberDisplay
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountNumberDisplay() {
    return accountNumberDisplay;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountNumberDisplay(String accountNumberDisplay) {
    this.accountNumberDisplay = accountNumberDisplay;
  }


  public CustomerAccountSimple name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The account name from the institution
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CustomerAccountSimple type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The list of supported account types. * \&quot;checking\&quot;: Standard checking * \&quot;savings\&quot;: Standard savings * \&quot;cd\&quot;: Certificates of deposit * \&quot;moneyMarket\&quot;: Money Market * \&quot;creditCard\&quot;: Standard credit cards * \&quot;lineOfCredit\&quot;: Home equity, line of credit * \&quot;investment\&quot;: Generic investment (no details) * \&quot;investmentTaxDeferred\&quot;: Generic tax-advantaged investment (no details) * \&quot;employeeStockPurchasePlan\&quot;: ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans * \&quot;ira\&quot;: Individual Retirement Account (not Rollover or Roth) * \&quot;401k\&quot;: 401K Plan * \&quot;roth\&quot;: Roth IRA, Roth 401K * \&quot;403b\&quot;: 403B Plan * \&quot;529plan\&quot;: 529 Plan (True value is 529) * \&quot;rollover\&quot;: Rollover IRA * \&quot;ugma\&quot;: Uniform Gifts to Minors Act * \&quot;utma\&quot;: Uniform Transfers to Minors Act * \&quot;keogh\&quot;: Keogh Plan * \&quot;457plan\&quot;: 457 Plan (True value is 457) * \&quot;401a\&quot;: 401A Plan * \&quot;brokerageAccount\&quot;: Brokerage Account * \&quot;educationSavings\&quot;: Education Savings Account that is not a 529 * \&quot;healthSavingsAccount\&quot;: HSA (Health Savings Accounts) * \&quot;pension\&quot;: Pension * \&quot;profitSharingPlan\&quot;: Profit Sharing Plan * \&quot;roth401k\&quot;: Roth 401K * \&quot;sepIRA\&quot;: Simplified Employee Pension IRA * \&quot;simpleIRA\&quot;: Simple IRA * \&quot;thriftSavingsPlan\&quot;: Thrift Savings Plan * \&quot;variableAnnuity\&quot;: Variable Annuity * \&quot;cryptocurrency\&quot;: Cryptocurrency Wallet, Cryptocurrency Account * \&quot;mortgage\&quot;: Standard Mortgages * \&quot;loan\&quot;: Auto loans, equity loans, other loans * \&quot;studentLoan\&quot;: Student Loan * \&quot;studentLoanGroup\&quot;: Student Loan Group * \&quot;studentLoanAccount\&quot;: Student Loan Account
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public CustomerAccountSimple aggregationStatusCode(Integer aggregationStatusCode) {
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://developer.mastercard.com/open-banking-us/documentation/products/manage/account-aggregation/#aggregation-status-codes)). Won&#39;t be present until you have run your first aggregation for the account.
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public CustomerAccountSimple status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * \&quot;pending\&quot; during account discovery, always \&quot;active\&quot; following   successful account activation
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public CustomerAccountSimple customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID. See Add Customer API for how to create a customer ID.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public CustomerAccountSimple institutionId(String institutionId) {
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * The ID of a financial institution
   * @return institutionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstitutionId() {
    return institutionId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }


  public CustomerAccountSimple aggregationSuccessDate(Long aggregationSuccessDate) {
    
    this.aggregationSuccessDate = aggregationSuccessDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return aggregationSuccessDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION_SUCCESS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAggregationSuccessDate() {
    return aggregationSuccessDate;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_SUCCESS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregationSuccessDate(Long aggregationSuccessDate) {
    this.aggregationSuccessDate = aggregationSuccessDate;
  }


  public CustomerAccountSimple aggregationAttemptDate(Long aggregationAttemptDate) {
    
    this.aggregationAttemptDate = aggregationAttemptDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return aggregationAttemptDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION_ATTEMPT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAggregationAttemptDate() {
    return aggregationAttemptDate;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_ATTEMPT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregationAttemptDate(Long aggregationAttemptDate) {
    this.aggregationAttemptDate = aggregationAttemptDate;
  }


  public CustomerAccountSimple createdDate(Long createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return createdDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }


  public CustomerAccountSimple currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public CustomerAccountSimple institutionLoginId(Long institutionLoginId) {
    
    this.institutionLoginId = institutionLoginId;
    return this;
  }

   /**
   * An institution login ID (from the account record), represented as a number
   * @return institutionLoginId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTION_LOGIN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getInstitutionLoginId() {
    return institutionLoginId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_LOGIN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstitutionLoginId(Long institutionLoginId) {
    this.institutionLoginId = institutionLoginId;
  }


  public CustomerAccountSimple displayPosition(Integer displayPosition) {
    
    this.displayPosition = displayPosition;
    return this;
  }

   /**
   * Display position of the account at the financial institution, \&quot;1\&quot;     being the top listed account
   * @return displayPosition
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDisplayPosition() {
    return displayPosition;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayPosition(Integer displayPosition) {
    this.displayPosition = displayPosition;
  }


  public CustomerAccountSimple parentAccount(String parentAccount) {
    
    this.parentAccount = parentAccount;
    return this;
  }

   /**
   * An account ID
   * @return parentAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentAccount() {
    return parentAccount;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentAccount(String parentAccount) {
    this.parentAccount = parentAccount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAccountSimple customerAccountSimple = (CustomerAccountSimple) o;
    return Objects.equals(this.id, customerAccountSimple.id) &&
        Objects.equals(this.accountNumberDisplay, customerAccountSimple.accountNumberDisplay) &&
        Objects.equals(this.name, customerAccountSimple.name) &&
        Objects.equals(this.type, customerAccountSimple.type) &&
        Objects.equals(this.aggregationStatusCode, customerAccountSimple.aggregationStatusCode) &&
        Objects.equals(this.status, customerAccountSimple.status) &&
        Objects.equals(this.customerId, customerAccountSimple.customerId) &&
        Objects.equals(this.institutionId, customerAccountSimple.institutionId) &&
        Objects.equals(this.aggregationSuccessDate, customerAccountSimple.aggregationSuccessDate) &&
        Objects.equals(this.aggregationAttemptDate, customerAccountSimple.aggregationAttemptDate) &&
        Objects.equals(this.createdDate, customerAccountSimple.createdDate) &&
        Objects.equals(this.currency, customerAccountSimple.currency) &&
        Objects.equals(this.institutionLoginId, customerAccountSimple.institutionLoginId) &&
        Objects.equals(this.displayPosition, customerAccountSimple.displayPosition) &&
        Objects.equals(this.parentAccount, customerAccountSimple.parentAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountNumberDisplay, name, type, aggregationStatusCode, status, customerId, institutionId, aggregationSuccessDate, aggregationAttemptDate, createdDate, currency, institutionLoginId, displayPosition, parentAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAccountSimple {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountNumberDisplay: ").append(toIndentedString(accountNumberDisplay)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    aggregationSuccessDate: ").append(toIndentedString(aggregationSuccessDate)).append("\n");
    sb.append("    aggregationAttemptDate: ").append(toIndentedString(aggregationAttemptDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    institutionLoginId: ").append(toIndentedString(institutionLoginId)).append("\n");
    sb.append("    displayPosition: ").append(toIndentedString(displayPosition)).append("\n");
    sb.append("    parentAccount: ").append(toIndentedString(parentAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

