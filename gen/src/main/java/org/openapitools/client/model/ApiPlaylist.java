/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ApiDataUrl;
import org.openapitools.client.model.ApiShare;
import org.openapitools.client.model.ApiTag;
import org.openapitools.client.model.Bool;
import org.openapitools.client.model.Datetime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Playlist
 */
@JsonPropertyOrder({
  ApiPlaylist.JSON_PROPERTY_ID,
  ApiPlaylist.JSON_PROPERTY_NAME,
  ApiPlaylist.JSON_PROPERTY_DESCRIPTION,
  ApiPlaylist.JSON_PROPERTY_TYPE,
  ApiPlaylist.JSON_PROPERTY_MODE,
  ApiPlaylist.JSON_PROPERTY_SORT,
  ApiPlaylist.JSON_PROPERTY_VALIDATED,
  ApiPlaylist.JSON_PROPERTY_PUBLISHED,
  ApiPlaylist.JSON_PROPERTY_IMAGE,
  ApiPlaylist.JSON_PROPERTY_PREPEND,
  ApiPlaylist.JSON_PROPERTY_AUTO_ADD_MEDIA_BY_NAME,
  ApiPlaylist.JSON_PROPERTY_AUTO_ADD_MEDIA_BY_DESCRIPTION,
  ApiPlaylist.JSON_PROPERTY_MEDIAS_THUMBNAIL,
  ApiPlaylist.JSON_PROPERTY_MEDIAS_INFO,
  ApiPlaylist.JSON_PROPERTY_NAV_POSITION,
  ApiPlaylist.JSON_PROPERTY_CHAPTER_STYLE,
  ApiPlaylist.JSON_PROPERTY_LIVE_REFERENCE_TIME,
  ApiPlaylist.JSON_PROPERTY_CREATED_AT,
  ApiPlaylist.JSON_PROPERTY_UPDATED_AT,
  ApiPlaylist.JSON_PROPERTY_DELETED_AT,
  ApiPlaylist.JSON_PROPERTY_MEDIAS_COUNT,
  ApiPlaylist.JSON_PROPERTY_MEDIAS_DURATION,
  ApiPlaylist.JSON_PROPERTY_SHARES,
  ApiPlaylist.JSON_PROPERTY_TAGS
})
@JsonTypeName("Api_Playlist")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ApiPlaylist {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * 
   */
  public enum TypeEnum {
    STATIC("STATIC"),
    
    DYNAMIC("DYNAMIC");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * 
   */
  public enum ModeEnum {
    MERGE("MERGE"),
    
    SPLIT("SPLIT"),
    
    LIVE("LIVE");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MODE = "mode";
  private ModeEnum mode;

  /**
   * 
   */
  public enum SortEnum {
    CREATED_ASC("CREATED_ASC"),
    
    CREATED_DESC("CREATED_DESC"),
    
    PUBLISHED_ASC("PUBLISHED_ASC"),
    
    PUBLISHED_DESC("PUBLISHED_DESC"),
    
    NAME_ASC("NAME_ASC"),
    
    NAME_DESC("NAME_DESC"),
    
    DURATION_ASC("DURATION_ASC"),
    
    DURATION_DESC("DURATION_DESC"),
    
    RANDOM("RANDOM"),
    
    MANUAL("MANUAL");

    private String value;

    SortEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SortEnum fromValue(String value) {
      for (SortEnum b : SortEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SORT = "sort";
  private SortEnum sort;

  /**
   * Gets or Sets validated
   */
  public enum ValidatedEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    ValidatedEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValidatedEnum fromValue(Bool value) {
      for (ValidatedEnum b : ValidatedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VALIDATED = "validated";
  private ValidatedEnum validated = null;

  /**
   * Gets or Sets published
   */
  public enum PublishedEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    PublishedEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PublishedEnum fromValue(Bool value) {
      for (PublishedEnum b : PublishedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PUBLISHED = "published";
  private PublishedEnum published = null;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private ApiDataUrl image;

  /**
   * Gets or Sets prepend
   */
  public enum PrependEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    PrependEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrependEnum fromValue(Bool value) {
      for (PrependEnum b : PrependEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PREPEND = "prepend";
  private PrependEnum prepend = null;

  public static final String JSON_PROPERTY_AUTO_ADD_MEDIA_BY_NAME = "auto_add_media_by_name";
  private String autoAddMediaByName;

  public static final String JSON_PROPERTY_AUTO_ADD_MEDIA_BY_DESCRIPTION = "auto_add_media_by_description";
  private String autoAddMediaByDescription;

  /**
   * Gets or Sets mediasThumbnail
   */
  public enum MediasThumbnailEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    MediasThumbnailEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MediasThumbnailEnum fromValue(Bool value) {
      for (MediasThumbnailEnum b : MediasThumbnailEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MEDIAS_THUMBNAIL = "medias_thumbnail";
  private MediasThumbnailEnum mediasThumbnail = null;

  /**
   * Gets or Sets mediasInfo
   */
  public enum MediasInfoEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    MediasInfoEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MediasInfoEnum fromValue(Bool value) {
      for (MediasInfoEnum b : MediasInfoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MEDIAS_INFO = "medias_info";
  private MediasInfoEnum mediasInfo = null;

  /**
   * 
   */
  public enum NavPositionEnum {
    ABOVE("ABOVE"),
    
    BELOW("BELOW");

    private String value;

    NavPositionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NavPositionEnum fromValue(String value) {
      for (NavPositionEnum b : NavPositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_NAV_POSITION = "nav_position";
  private NavPositionEnum navPosition;

  /**
   * 
   */
  public enum ChapterStyleEnum {
    DARK("DARK"),
    
    LIGHT("LIGHT");

    private String value;

    ChapterStyleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChapterStyleEnum fromValue(String value) {
      for (ChapterStyleEnum b : ChapterStyleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHAPTER_STYLE = "chapter_style";
  private ChapterStyleEnum chapterStyle;

  public static final String JSON_PROPERTY_LIVE_REFERENCE_TIME = "live_reference_time";
  private Timestamp liveReferenceTime = null;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Datetime createdAt = null;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Datetime updatedAt = null;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private Datetime deletedAt = null;

  public static final String JSON_PROPERTY_MEDIAS_COUNT = "medias_count";
  private Integer mediasCount;

  public static final String JSON_PROPERTY_MEDIAS_DURATION = "medias_duration";
  private Float mediasDuration;

  public static final String JSON_PROPERTY_SHARES = "shares";
  private List<ApiShare> shares;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<ApiTag> tags;

  public ApiPlaylist() {
  }

  public ApiPlaylist id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ApiPlaylist name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApiPlaylist description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ApiPlaylist type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * 
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ApiPlaylist mode(ModeEnum mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * 
   * @return mode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModeEnum getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public ApiPlaylist sort(SortEnum sort) {
    
    this.sort = sort;
    return this;
  }

   /**
   * 
   * @return sort
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SortEnum getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(SortEnum sort) {
    this.sort = sort;
  }


  public ApiPlaylist validated(ValidatedEnum validated) {
    
    this.validated = validated;
    return this;
  }

   /**
   * Get validated
   * @return validated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ValidatedEnum getValidated() {
    return validated;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidated(ValidatedEnum validated) {
    this.validated = validated;
  }


  public ApiPlaylist published(PublishedEnum published) {
    
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PublishedEnum getPublished() {
    return published;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublished(PublishedEnum published) {
    this.published = published;
  }


  public ApiPlaylist image(ApiDataUrl image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiDataUrl getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(ApiDataUrl image) {
    this.image = image;
  }


  public ApiPlaylist prepend(PrependEnum prepend) {
    
    this.prepend = prepend;
    return this;
  }

   /**
   * Get prepend
   * @return prepend
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREPEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrependEnum getPrepend() {
    return prepend;
  }


  @JsonProperty(JSON_PROPERTY_PREPEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrepend(PrependEnum prepend) {
    this.prepend = prepend;
  }


  public ApiPlaylist autoAddMediaByName(String autoAddMediaByName) {
    
    this.autoAddMediaByName = autoAddMediaByName;
    return this;
  }

   /**
   * Get autoAddMediaByName
   * @return autoAddMediaByName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_ADD_MEDIA_BY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAutoAddMediaByName() {
    return autoAddMediaByName;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_ADD_MEDIA_BY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoAddMediaByName(String autoAddMediaByName) {
    this.autoAddMediaByName = autoAddMediaByName;
  }


  public ApiPlaylist autoAddMediaByDescription(String autoAddMediaByDescription) {
    
    this.autoAddMediaByDescription = autoAddMediaByDescription;
    return this;
  }

   /**
   * Get autoAddMediaByDescription
   * @return autoAddMediaByDescription
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_ADD_MEDIA_BY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAutoAddMediaByDescription() {
    return autoAddMediaByDescription;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_ADD_MEDIA_BY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoAddMediaByDescription(String autoAddMediaByDescription) {
    this.autoAddMediaByDescription = autoAddMediaByDescription;
  }


  public ApiPlaylist mediasThumbnail(MediasThumbnailEnum mediasThumbnail) {
    
    this.mediasThumbnail = mediasThumbnail;
    return this;
  }

   /**
   * Get mediasThumbnail
   * @return mediasThumbnail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIAS_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MediasThumbnailEnum getMediasThumbnail() {
    return mediasThumbnail;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAS_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediasThumbnail(MediasThumbnailEnum mediasThumbnail) {
    this.mediasThumbnail = mediasThumbnail;
  }


  public ApiPlaylist mediasInfo(MediasInfoEnum mediasInfo) {
    
    this.mediasInfo = mediasInfo;
    return this;
  }

   /**
   * Get mediasInfo
   * @return mediasInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIAS_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MediasInfoEnum getMediasInfo() {
    return mediasInfo;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAS_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediasInfo(MediasInfoEnum mediasInfo) {
    this.mediasInfo = mediasInfo;
  }


  public ApiPlaylist navPosition(NavPositionEnum navPosition) {
    
    this.navPosition = navPosition;
    return this;
  }

   /**
   * 
   * @return navPosition
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAV_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NavPositionEnum getNavPosition() {
    return navPosition;
  }


  @JsonProperty(JSON_PROPERTY_NAV_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavPosition(NavPositionEnum navPosition) {
    this.navPosition = navPosition;
  }


  public ApiPlaylist chapterStyle(ChapterStyleEnum chapterStyle) {
    
    this.chapterStyle = chapterStyle;
    return this;
  }

   /**
   * 
   * @return chapterStyle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAPTER_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChapterStyleEnum getChapterStyle() {
    return chapterStyle;
  }


  @JsonProperty(JSON_PROPERTY_CHAPTER_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChapterStyle(ChapterStyleEnum chapterStyle) {
    this.chapterStyle = chapterStyle;
  }


  public ApiPlaylist liveReferenceTime(Timestamp liveReferenceTime) {
    
    this.liveReferenceTime = liveReferenceTime;
    return this;
  }

   /**
   * Get liveReferenceTime
   * @return liveReferenceTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_REFERENCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Timestamp getLiveReferenceTime() {
    return liveReferenceTime;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_REFERENCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiveReferenceTime(Timestamp liveReferenceTime) {
    this.liveReferenceTime = liveReferenceTime;
  }


  public ApiPlaylist createdAt(Datetime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(Datetime createdAt) {
    this.createdAt = createdAt;
  }


  public ApiPlaylist updatedAt(Datetime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(Datetime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ApiPlaylist deletedAt(Datetime deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedAt(Datetime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public ApiPlaylist mediasCount(Integer mediasCount) {
    
    this.mediasCount = mediasCount;
    return this;
  }

   /**
   * Get mediasCount
   * @return mediasCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIAS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMediasCount() {
    return mediasCount;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediasCount(Integer mediasCount) {
    this.mediasCount = mediasCount;
  }


  public ApiPlaylist mediasDuration(Float mediasDuration) {
    
    this.mediasDuration = mediasDuration;
    return this;
  }

   /**
   * Get mediasDuration
   * @return mediasDuration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIAS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getMediasDuration() {
    return mediasDuration;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediasDuration(Float mediasDuration) {
    this.mediasDuration = mediasDuration;
  }


  public ApiPlaylist shares(List<ApiShare> shares) {
    
    this.shares = shares;
    return this;
  }

  public ApiPlaylist addSharesItem(ApiShare sharesItem) {
    if (this.shares == null) {
      this.shares = new ArrayList<>();
    }
    this.shares.add(sharesItem);
    return this;
  }

   /**
   * 
   * @return shares
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiShare> getShares() {
    return shares;
  }


  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShares(List<ApiShare> shares) {
    this.shares = shares;
  }


  public ApiPlaylist tags(List<ApiTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public ApiPlaylist addTagsItem(ApiTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * 
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiTag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<ApiTag> tags) {
    this.tags = tags;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiPlaylist apiPlaylist = (ApiPlaylist) o;
    return Objects.equals(this.id, apiPlaylist.id) &&
        Objects.equals(this.name, apiPlaylist.name) &&
        Objects.equals(this.description, apiPlaylist.description) &&
        Objects.equals(this.type, apiPlaylist.type) &&
        Objects.equals(this.mode, apiPlaylist.mode) &&
        Objects.equals(this.sort, apiPlaylist.sort) &&
        Objects.equals(this.validated, apiPlaylist.validated) &&
        Objects.equals(this.published, apiPlaylist.published) &&
        Objects.equals(this.image, apiPlaylist.image) &&
        Objects.equals(this.prepend, apiPlaylist.prepend) &&
        Objects.equals(this.autoAddMediaByName, apiPlaylist.autoAddMediaByName) &&
        Objects.equals(this.autoAddMediaByDescription, apiPlaylist.autoAddMediaByDescription) &&
        Objects.equals(this.mediasThumbnail, apiPlaylist.mediasThumbnail) &&
        Objects.equals(this.mediasInfo, apiPlaylist.mediasInfo) &&
        Objects.equals(this.navPosition, apiPlaylist.navPosition) &&
        Objects.equals(this.chapterStyle, apiPlaylist.chapterStyle) &&
        Objects.equals(this.liveReferenceTime, apiPlaylist.liveReferenceTime) &&
        Objects.equals(this.createdAt, apiPlaylist.createdAt) &&
        Objects.equals(this.updatedAt, apiPlaylist.updatedAt) &&
        Objects.equals(this.deletedAt, apiPlaylist.deletedAt) &&
        Objects.equals(this.mediasCount, apiPlaylist.mediasCount) &&
        Objects.equals(this.mediasDuration, apiPlaylist.mediasDuration) &&
        Objects.equals(this.shares, apiPlaylist.shares) &&
        Objects.equals(this.tags, apiPlaylist.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, type, mode, sort, validated, published, image, prepend, autoAddMediaByName, autoAddMediaByDescription, mediasThumbnail, mediasInfo, navPosition, chapterStyle, liveReferenceTime, createdAt, updatedAt, deletedAt, mediasCount, mediasDuration, shares, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiPlaylist {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    validated: ").append(toIndentedString(validated)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    prepend: ").append(toIndentedString(prepend)).append("\n");
    sb.append("    autoAddMediaByName: ").append(toIndentedString(autoAddMediaByName)).append("\n");
    sb.append("    autoAddMediaByDescription: ").append(toIndentedString(autoAddMediaByDescription)).append("\n");
    sb.append("    mediasThumbnail: ").append(toIndentedString(mediasThumbnail)).append("\n");
    sb.append("    mediasInfo: ").append(toIndentedString(mediasInfo)).append("\n");
    sb.append("    navPosition: ").append(toIndentedString(navPosition)).append("\n");
    sb.append("    chapterStyle: ").append(toIndentedString(chapterStyle)).append("\n");
    sb.append("    liveReferenceTime: ").append(toIndentedString(liveReferenceTime)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    mediasCount: ").append(toIndentedString(mediasCount)).append("\n");
    sb.append("    mediasDuration: ").append(toIndentedString(mediasDuration)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

