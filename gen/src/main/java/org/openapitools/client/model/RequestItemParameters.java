/*
 * Gamestream Backup Service API
 * REST API for Gamestream Cloud Gaming game saves backups management Some useful links: - [Gamestream](https://www.gamestream?biz) - [Pleio](https://www.pleio.games)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: xavier@gamestream.biz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RequestItemParameters
 */
@JsonPropertyOrder({
  RequestItemParameters.JSON_PROPERTY_DRAW,
  RequestItemParameters.JSON_PROPERTY_NEEDLE,
  RequestItemParameters.JSON_PROPERTY_LIMIT_START,
  RequestItemParameters.JSON_PROPERTY_LIMIT_LENGTH,
  RequestItemParameters.JSON_PROPERTY_USERID,
  RequestItemParameters.JSON_PROPERTY_PROFILE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:32.669774675Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RequestItemParameters {
  public static final String JSON_PROPERTY_DRAW = "draw";
  private Object draw = 1;

  public static final String JSON_PROPERTY_NEEDLE = "needle";
  private Object needle = ;

  public static final String JSON_PROPERTY_LIMIT_START = "limit_start";
  private Object limitStart = 0;

  public static final String JSON_PROPERTY_LIMIT_LENGTH = "limit_length";
  private Object limitLength = 15;

  public static final String JSON_PROPERTY_USERID = "userid";
  private Object userid = ;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  private String profile = "";

  public RequestItemParameters() {
  }

  public RequestItemParameters draw(Object draw) {
    
    this.draw = draw;
    return this;
  }

   /**
   * draw parameter, must be set to 1
   * minimum: 1
   * maximum: 1
   * @return draw
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DRAW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDraw() {
    return draw;
  }


  @JsonProperty(JSON_PROPERTY_DRAW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDraw(Object draw) {
    this.draw = draw;
  }


  public RequestItemParameters needle(Object needle) {
    
    this.needle = needle;
    return this;
  }

   /**
   * case sensitive string to filter output data (empty string means no filtering)
   * @return needle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEEDLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getNeedle() {
    return needle;
  }


  @JsonProperty(JSON_PROPERTY_NEEDLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNeedle(Object needle) {
    this.needle = needle;
  }


  public RequestItemParameters limitStart(Object limitStart) {
    
    this.limitStart = limitStart;
    return this;
  }

   /**
   * first index of the output data to be returned (first item index is 0)
   * minimum: 0
   * @return limitStart
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLimitStart() {
    return limitStart;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLimitStart(Object limitStart) {
    this.limitStart = limitStart;
  }


  public RequestItemParameters limitLength(Object limitLength) {
    
    this.limitLength = limitLength;
    return this;
  }

   /**
   * maximum number of items to be returned (0 means all items)
   * minimum: 0
   * @return limitLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_LENGTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLimitLength() {
    return limitLength;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_LENGTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLimitLength(Object limitLength) {
    this.limitLength = limitLength;
  }


  public RequestItemParameters userid(Object userid) {
    
    this.userid = userid;
    return this;
  }

   /**
   * ID of the user
   * @return userid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getUserid() {
    return userid;
  }


  @JsonProperty(JSON_PROPERTY_USERID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserid(Object userid) {
    this.userid = userid;
  }


  public RequestItemParameters profile(String profile) {
    
    this.profile = profile;
    return this;
  }

   /**
   * ID of the profile of the user
   * @return profile
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(String profile) {
    this.profile = profile;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestItemParameters requestItemParameters = (RequestItemParameters) o;
    return Objects.equals(this.draw, requestItemParameters.draw) &&
        Objects.equals(this.needle, requestItemParameters.needle) &&
        Objects.equals(this.limitStart, requestItemParameters.limitStart) &&
        Objects.equals(this.limitLength, requestItemParameters.limitLength) &&
        Objects.equals(this.userid, requestItemParameters.userid) &&
        Objects.equals(this.profile, requestItemParameters.profile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(draw, needle, limitStart, limitLength, userid, profile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestItemParameters {\n");
    sb.append("    draw: ").append(toIndentedString(draw)).append("\n");
    sb.append("    needle: ").append(toIndentedString(needle)).append("\n");
    sb.append("    limitStart: ").append(toIndentedString(limitStart)).append("\n");
    sb.append("    limitLength: ").append(toIndentedString(limitLength)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

