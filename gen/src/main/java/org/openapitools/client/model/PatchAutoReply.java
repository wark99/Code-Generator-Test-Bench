/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PatchAutoReplyRecurrentDays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Auto reply PATCH body parameters
 */
@JsonPropertyOrder({
  PatchAutoReply.JSON_PROPERTY_IS_ENABLED,
  PatchAutoReply.JSON_PROPERTY_MESSAGE,
  PatchAutoReply.JSON_PROPERTY_IS_RECURRENT,
  PatchAutoReply.JSON_PROPERTY_RECURRENT_DAYS,
  PatchAutoReply.JSON_PROPERTY_REPLY_FROM_ID,
  PatchAutoReply.JSON_PROPERTY_DONT_REPLY_TO,
  PatchAutoReply.JSON_PROPERTY_STARTED_AT,
  PatchAutoReply.JSON_PROPERTY_ENDED_AT,
  PatchAutoReply.JSON_PROPERTY_TIME_ZONE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PatchAutoReply {
  public static final String JSON_PROPERTY_IS_ENABLED = "is_enabled";
  private Boolean isEnabled;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_IS_RECURRENT = "is_recurrent";
  private Boolean isRecurrent;

  public static final String JSON_PROPERTY_RECURRENT_DAYS = "recurrent_days";
  private PatchAutoReplyRecurrentDays recurrentDays;

  public static final String JSON_PROPERTY_REPLY_FROM_ID = "reply_from_id";
  private Integer replyFromId;

  public static final String JSON_PROPERTY_DONT_REPLY_TO = "dont_reply_to";
  private List<String> dontReplyTo;

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  private String startedAt;

  public static final String JSON_PROPERTY_ENDED_AT = "ended_at";
  private String endedAt;

  public static final String JSON_PROPERTY_TIME_ZONE = "time_zone";
  private String timeZone;

  public PatchAutoReply() {
  }

  public PatchAutoReply isEnabled(Boolean isEnabled) {
    
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Enable or disable auto reply
   * @return isEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public PatchAutoReply message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Auto reply message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public PatchAutoReply isRecurrent(Boolean isRecurrent) {
    
    this.isRecurrent = isRecurrent;
    return this;
  }

   /**
   * Activate responder for recurrent_days
   * @return isRecurrent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_RECURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRecurrent() {
    return isRecurrent;
  }


  @JsonProperty(JSON_PROPERTY_IS_RECURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsRecurrent(Boolean isRecurrent) {
    this.isRecurrent = isRecurrent;
  }


  public PatchAutoReply recurrentDays(PatchAutoReplyRecurrentDays recurrentDays) {
    
    this.recurrentDays = recurrentDays;
    return this;
  }

   /**
   * Get recurrentDays
   * @return recurrentDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRENT_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PatchAutoReplyRecurrentDays getRecurrentDays() {
    return recurrentDays;
  }


  @JsonProperty(JSON_PROPERTY_RECURRENT_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurrentDays(PatchAutoReplyRecurrentDays recurrentDays) {
    this.recurrentDays = recurrentDays;
  }


  public PatchAutoReply replyFromId(Integer replyFromId) {
    
    this.replyFromId = replyFromId;
    return this;
  }

   /**
   * Validated sender/reply address identifier
   * @return replyFromId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPLY_FROM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getReplyFromId() {
    return replyFromId;
  }


  @JsonProperty(JSON_PROPERTY_REPLY_FROM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplyFromId(Integer replyFromId) {
    this.replyFromId = replyFromId;
  }


  public PatchAutoReply dontReplyTo(List<String> dontReplyTo) {
    
    this.dontReplyTo = dontReplyTo;
    return this;
  }

  public PatchAutoReply addDontReplyToItem(String dontReplyToItem) {
    if (this.dontReplyTo == null) {
      this.dontReplyTo = new ArrayList<>();
    }
    this.dontReplyTo.add(dontReplyToItem);
    return this;
  }

   /**
   * Ignored addresses
   * @return dontReplyTo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DONT_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDontReplyTo() {
    return dontReplyTo;
  }


  @JsonProperty(JSON_PROPERTY_DONT_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDontReplyTo(List<String> dontReplyTo) {
    this.dontReplyTo = dontReplyTo;
  }


  public PatchAutoReply startedAt(String startedAt) {
    
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Begin date (Y-m-d H:i)&lt;br/&gt;This field must match the &#x60;Y-m-d&#x60; format.
   * @return startedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartedAt() {
    return startedAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedAt(String startedAt) {
    this.startedAt = startedAt;
  }


  public PatchAutoReply endedAt(String endedAt) {
    
    this.endedAt = endedAt;
    return this;
  }

   /**
   * End date (Y-m-d H:i)&lt;br/&gt;This field must match the &#x60;Y-m-d&#x60; format.
   * @return endedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndedAt() {
    return endedAt;
  }


  @JsonProperty(JSON_PROPERTY_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndedAt(String endedAt) {
    this.endedAt = endedAt;
  }


  public PatchAutoReply timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeZone() {
    return timeZone;
  }


  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchAutoReply patchAutoReply = (PatchAutoReply) o;
    return Objects.equals(this.isEnabled, patchAutoReply.isEnabled) &&
        Objects.equals(this.message, patchAutoReply.message) &&
        Objects.equals(this.isRecurrent, patchAutoReply.isRecurrent) &&
        Objects.equals(this.recurrentDays, patchAutoReply.recurrentDays) &&
        Objects.equals(this.replyFromId, patchAutoReply.replyFromId) &&
        Objects.equals(this.dontReplyTo, patchAutoReply.dontReplyTo) &&
        Objects.equals(this.startedAt, patchAutoReply.startedAt) &&
        Objects.equals(this.endedAt, patchAutoReply.endedAt) &&
        Objects.equals(this.timeZone, patchAutoReply.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isEnabled, message, isRecurrent, recurrentDays, replyFromId, dontReplyTo, startedAt, endedAt, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchAutoReply {\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    isRecurrent: ").append(toIndentedString(isRecurrent)).append("\n");
    sb.append("    recurrentDays: ").append(toIndentedString(recurrentDays)).append("\n");
    sb.append("    replyFromId: ").append(toIndentedString(replyFromId)).append("\n");
    sb.append("    dontReplyTo: ").append(toIndentedString(dontReplyTo)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    endedAt: ").append(toIndentedString(endedAt)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

