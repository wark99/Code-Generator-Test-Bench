/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RequestBody55
 */
@JsonPropertyOrder({
  RequestBody55.JSON_PROPERTY_PASSWORD,
  RequestBody55.JSON_PROPERTY_FULL_NAME,
  RequestBody55.JSON_PROPERTY_NOTE,
  RequestBody55.JSON_PROPERTY_HAS_MOVE_SPAM,
  RequestBody55.JSON_PROPERTY_AUTHORIZED_SENDERS,
  RequestBody55.JSON_PROPERTY_BLOCKED_SENDERS,
  RequestBody55.JSON_PROPERTY_HAS_RESPONDER,
  RequestBody55.JSON_PROPERTY_HAS_MAIL_FILTERING,
  RequestBody55.JSON_PROPERTY_MAIL_FILTERING_FOLDER_COMMERCIALS,
  RequestBody55.JSON_PROPERTY_MAIL_FILTERING_FOLDER_SOCIAL_NETWORKS
})
@JsonTypeName("Request_body_55")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RequestBody55 {
  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_FULL_NAME = "full_name";
  private String fullName;

  public static final String JSON_PROPERTY_NOTE = "note";
  private String note;

  public static final String JSON_PROPERTY_HAS_MOVE_SPAM = "has_move_spam";
  private Boolean hasMoveSpam;

  public static final String JSON_PROPERTY_AUTHORIZED_SENDERS = "authorized_senders";
  private JsonNullable<Object> authorizedSenders = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_BLOCKED_SENDERS = "blocked_senders";
  private JsonNullable<Object> blockedSenders = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_HAS_RESPONDER = "has_responder";
  private Boolean hasResponder;

  public static final String JSON_PROPERTY_HAS_MAIL_FILTERING = "has_mail_filtering";
  private Boolean hasMailFiltering;

  public static final String JSON_PROPERTY_MAIL_FILTERING_FOLDER_COMMERCIALS = "mail_filtering_folder_commercials";
  private String mailFilteringFolderCommercials;

  public static final String JSON_PROPERTY_MAIL_FILTERING_FOLDER_SOCIAL_NETWORKS = "mail_filtering_folder_social_networks";
  private String mailFilteringFolderSocialNetworks;

  public RequestBody55() {
  }

  public RequestBody55 password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Mailbox password
   * @return password
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public RequestBody55 fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Specify full name
   * @return fullName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullName() {
    return fullName;
  }


  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public RequestBody55 note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Add a note
   * @return note
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNote() {
    return note;
  }


  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNote(String note) {
    this.note = note;
  }


  public RequestBody55 hasMoveSpam(Boolean hasMoveSpam) {
    
    this.hasMoveSpam = hasMoveSpam;
    return this;
  }

   /**
   * Specify if spam are moved to spam folder
   * @return hasMoveSpam
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_MOVE_SPAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasMoveSpam() {
    return hasMoveSpam;
  }


  @JsonProperty(JSON_PROPERTY_HAS_MOVE_SPAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasMoveSpam(Boolean hasMoveSpam) {
    this.hasMoveSpam = hasMoveSpam;
  }


  public RequestBody55 authorizedSenders(Object authorizedSenders) {
    this.authorizedSenders = JsonNullable.<Object>of(authorizedSenders);
    
    return this;
  }

   /**
   * Get authorizedSenders
   * @return authorizedSenders
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getAuthorizedSenders() {
        return authorizedSenders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHORIZED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getAuthorizedSenders_JsonNullable() {
    return authorizedSenders;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHORIZED_SENDERS)
  public void setAuthorizedSenders_JsonNullable(JsonNullable<Object> authorizedSenders) {
    this.authorizedSenders = authorizedSenders;
  }

  public void setAuthorizedSenders(Object authorizedSenders) {
    this.authorizedSenders = JsonNullable.<Object>of(authorizedSenders);
  }


  public RequestBody55 blockedSenders(Object blockedSenders) {
    this.blockedSenders = JsonNullable.<Object>of(blockedSenders);
    
    return this;
  }

   /**
   * Get blockedSenders
   * @return blockedSenders
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getBlockedSenders() {
        return blockedSenders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BLOCKED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getBlockedSenders_JsonNullable() {
    return blockedSenders;
  }
  
  @JsonProperty(JSON_PROPERTY_BLOCKED_SENDERS)
  public void setBlockedSenders_JsonNullable(JsonNullable<Object> blockedSenders) {
    this.blockedSenders = blockedSenders;
  }

  public void setBlockedSenders(Object blockedSenders) {
    this.blockedSenders = JsonNullable.<Object>of(blockedSenders);
  }


  public RequestBody55 hasResponder(Boolean hasResponder) {
    
    this.hasResponder = hasResponder;
    return this;
  }

   /**
   * Specify if mailbox responder is enabled
   * @return hasResponder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_RESPONDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasResponder() {
    return hasResponder;
  }


  @JsonProperty(JSON_PROPERTY_HAS_RESPONDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasResponder(Boolean hasResponder) {
    this.hasResponder = hasResponder;
  }


  public RequestBody55 hasMailFiltering(Boolean hasMailFiltering) {
    
    this.hasMailFiltering = hasMailFiltering;
    return this;
  }

   /**
   * Specify if mail filtering is enabled
   * @return hasMailFiltering
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_MAIL_FILTERING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasMailFiltering() {
    return hasMailFiltering;
  }


  @JsonProperty(JSON_PROPERTY_HAS_MAIL_FILTERING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasMailFiltering(Boolean hasMailFiltering) {
    this.hasMailFiltering = hasMailFiltering;
  }


  public RequestBody55 mailFilteringFolderCommercials(String mailFilteringFolderCommercials) {
    
    this.mailFilteringFolderCommercials = mailFilteringFolderCommercials;
    return this;
  }

   /**
   * Specify commercial folder
   * @return mailFilteringFolderCommercials
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIL_FILTERING_FOLDER_COMMERCIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMailFilteringFolderCommercials() {
    return mailFilteringFolderCommercials;
  }


  @JsonProperty(JSON_PROPERTY_MAIL_FILTERING_FOLDER_COMMERCIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailFilteringFolderCommercials(String mailFilteringFolderCommercials) {
    this.mailFilteringFolderCommercials = mailFilteringFolderCommercials;
  }


  public RequestBody55 mailFilteringFolderSocialNetworks(String mailFilteringFolderSocialNetworks) {
    
    this.mailFilteringFolderSocialNetworks = mailFilteringFolderSocialNetworks;
    return this;
  }

   /**
   * Specify social networks folder
   * @return mailFilteringFolderSocialNetworks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIL_FILTERING_FOLDER_SOCIAL_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMailFilteringFolderSocialNetworks() {
    return mailFilteringFolderSocialNetworks;
  }


  @JsonProperty(JSON_PROPERTY_MAIL_FILTERING_FOLDER_SOCIAL_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailFilteringFolderSocialNetworks(String mailFilteringFolderSocialNetworks) {
    this.mailFilteringFolderSocialNetworks = mailFilteringFolderSocialNetworks;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBody55 requestBody55 = (RequestBody55) o;
    return Objects.equals(this.password, requestBody55.password) &&
        Objects.equals(this.fullName, requestBody55.fullName) &&
        Objects.equals(this.note, requestBody55.note) &&
        Objects.equals(this.hasMoveSpam, requestBody55.hasMoveSpam) &&
        equalsNullable(this.authorizedSenders, requestBody55.authorizedSenders) &&
        equalsNullable(this.blockedSenders, requestBody55.blockedSenders) &&
        Objects.equals(this.hasResponder, requestBody55.hasResponder) &&
        Objects.equals(this.hasMailFiltering, requestBody55.hasMailFiltering) &&
        Objects.equals(this.mailFilteringFolderCommercials, requestBody55.mailFilteringFolderCommercials) &&
        Objects.equals(this.mailFilteringFolderSocialNetworks, requestBody55.mailFilteringFolderSocialNetworks);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(password, fullName, note, hasMoveSpam, hashCodeNullable(authorizedSenders), hashCodeNullable(blockedSenders), hasResponder, hasMailFiltering, mailFilteringFolderCommercials, mailFilteringFolderSocialNetworks);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBody55 {\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    hasMoveSpam: ").append(toIndentedString(hasMoveSpam)).append("\n");
    sb.append("    authorizedSenders: ").append(toIndentedString(authorizedSenders)).append("\n");
    sb.append("    blockedSenders: ").append(toIndentedString(blockedSenders)).append("\n");
    sb.append("    hasResponder: ").append(toIndentedString(hasResponder)).append("\n");
    sb.append("    hasMailFiltering: ").append(toIndentedString(hasMailFiltering)).append("\n");
    sb.append("    mailFilteringFolderCommercials: ").append(toIndentedString(mailFilteringFolderCommercials)).append("\n");
    sb.append("    mailFilteringFolderSocialNetworks: ").append(toIndentedString(mailFilteringFolderSocialNetworks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

