/*
 * Matomo API
 * Complete Matomo reporting API documentation
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IndexPhpMethodTagManagerImportContainerVersionPostRequest
 */
@JsonPropertyOrder({
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_MODULE,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_FORMAT,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_METHOD,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_EXPORTED_CONTAINER_VERSION,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_ID_SITE,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_ID_CONTAINER,
  IndexPhpMethodTagManagerImportContainerVersionPostRequest.JSON_PROPERTY_BACKUP_NAME
})
@JsonTypeName("_index_php_method_TagManager_importContainerVersion_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:01.495468819Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IndexPhpMethodTagManagerImportContainerVersionPostRequest {
  public static final String JSON_PROPERTY_MODULE = "module";
  private Object module = null;

  public static final String JSON_PROPERTY_FORMAT = "format";
  private Object format = null;

  public static final String JSON_PROPERTY_METHOD = "method";
  private Object method = null;

  public static final String JSON_PROPERTY_EXPORTED_CONTAINER_VERSION = "exportedContainerVersion";
  private JsonNullable<Object> exportedContainerVersion = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ID_SITE = "idSite";
  private JsonNullable<Object> idSite = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ID_CONTAINER = "idContainer";
  private JsonNullable<Object> idContainer = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_BACKUP_NAME = "backupName";
  private JsonNullable<Object> backupName = JsonNullable.<Object>of(null);

  public IndexPhpMethodTagManagerImportContainerVersionPostRequest() {
  }

  public IndexPhpMethodTagManagerImportContainerVersionPostRequest module(Object module) {
    
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getModule() {
    return module;
  }


  @JsonProperty(JSON_PROPERTY_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModule(Object module) {
    this.module = module;
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest format(Object format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormat(Object format) {
    this.format = format;
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest method(Object method) {
    
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(Object method) {
    this.method = method;
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest exportedContainerVersion(Object exportedContainerVersion) {
    this.exportedContainerVersion = JsonNullable.<Object>of(exportedContainerVersion);
    
    return this;
  }

   /**
   * Get exportedContainerVersion
   * @return exportedContainerVersion
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExportedContainerVersion() {
        return exportedContainerVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPORTED_CONTAINER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExportedContainerVersion_JsonNullable() {
    return exportedContainerVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPORTED_CONTAINER_VERSION)
  public void setExportedContainerVersion_JsonNullable(JsonNullable<Object> exportedContainerVersion) {
    this.exportedContainerVersion = exportedContainerVersion;
  }

  public void setExportedContainerVersion(Object exportedContainerVersion) {
    this.exportedContainerVersion = JsonNullable.<Object>of(exportedContainerVersion);
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest idSite(Object idSite) {
    this.idSite = JsonNullable.<Object>of(idSite);
    
    return this;
  }

   /**
   * Get idSite
   * @return idSite
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIdSite() {
        return idSite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIdSite_JsonNullable() {
    return idSite;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_SITE)
  public void setIdSite_JsonNullable(JsonNullable<Object> idSite) {
    this.idSite = idSite;
  }

  public void setIdSite(Object idSite) {
    this.idSite = JsonNullable.<Object>of(idSite);
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest idContainer(Object idContainer) {
    this.idContainer = JsonNullable.<Object>of(idContainer);
    
    return this;
  }

   /**
   * Get idContainer
   * @return idContainer
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIdContainer() {
        return idContainer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIdContainer_JsonNullable() {
    return idContainer;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINER)
  public void setIdContainer_JsonNullable(JsonNullable<Object> idContainer) {
    this.idContainer = idContainer;
  }

  public void setIdContainer(Object idContainer) {
    this.idContainer = JsonNullable.<Object>of(idContainer);
  }


  public IndexPhpMethodTagManagerImportContainerVersionPostRequest backupName(Object backupName) {
    this.backupName = JsonNullable.<Object>of(backupName);
    
    return this;
  }

   /**
   * Get backupName
   * @return backupName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getBackupName() {
        return backupName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACKUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getBackupName_JsonNullable() {
    return backupName;
  }
  
  @JsonProperty(JSON_PROPERTY_BACKUP_NAME)
  public void setBackupName_JsonNullable(JsonNullable<Object> backupName) {
    this.backupName = backupName;
  }

  public void setBackupName(Object backupName) {
    this.backupName = JsonNullable.<Object>of(backupName);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexPhpMethodTagManagerImportContainerVersionPostRequest indexPhpMethodTagManagerImportContainerVersionPostRequest = (IndexPhpMethodTagManagerImportContainerVersionPostRequest) o;
    return Objects.equals(this.module, indexPhpMethodTagManagerImportContainerVersionPostRequest.module) &&
        Objects.equals(this.format, indexPhpMethodTagManagerImportContainerVersionPostRequest.format) &&
        Objects.equals(this.method, indexPhpMethodTagManagerImportContainerVersionPostRequest.method) &&
        equalsNullable(this.exportedContainerVersion, indexPhpMethodTagManagerImportContainerVersionPostRequest.exportedContainerVersion) &&
        equalsNullable(this.idSite, indexPhpMethodTagManagerImportContainerVersionPostRequest.idSite) &&
        equalsNullable(this.idContainer, indexPhpMethodTagManagerImportContainerVersionPostRequest.idContainer) &&
        equalsNullable(this.backupName, indexPhpMethodTagManagerImportContainerVersionPostRequest.backupName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(module, format, method, hashCodeNullable(exportedContainerVersion), hashCodeNullable(idSite), hashCodeNullable(idContainer), hashCodeNullable(backupName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexPhpMethodTagManagerImportContainerVersionPostRequest {\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    exportedContainerVersion: ").append(toIndentedString(exportedContainerVersion)).append("\n");
    sb.append("    idSite: ").append(toIndentedString(idSite)).append("\n");
    sb.append("    idContainer: ").append(toIndentedString(idContainer)).append("\n");
    sb.append("    backupName: ").append(toIndentedString(backupName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

