/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DifficultyLevel;
import org.openapitools.client.model.TagSummary;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QuestionSummary
 */
@JsonPropertyOrder({
  QuestionSummary.JSON_PROPERTY_ID,
  QuestionSummary.JSON_PROPERTY_TITLE,
  QuestionSummary.JSON_PROPERTY_CONTENT,
  QuestionSummary.JSON_PROPERTY_AUTHOR,
  QuestionSummary.JSON_PROPERTY_CREATED_AT,
  QuestionSummary.JSON_PROPERTY_DIFFICULTY,
  QuestionSummary.JSON_PROPERTY_TAGS,
  QuestionSummary.JSON_PROPERTY_UPVOTE_COUNT,
  QuestionSummary.JSON_PROPERTY_DOWNVOTE_COUNT,
  QuestionSummary.JSON_PROPERTY_ANSWER_COUNT,
  QuestionSummary.JSON_PROPERTY_VIEW_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class QuestionSummary {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_DIFFICULTY = "difficulty";
  private DifficultyLevel difficulty;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagSummary> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_UPVOTE_COUNT = "upvoteCount";
  private Integer upvoteCount;

  public static final String JSON_PROPERTY_DOWNVOTE_COUNT = "downvoteCount";
  private Integer downvoteCount;

  public static final String JSON_PROPERTY_ANSWER_COUNT = "answerCount";
  private Integer answerCount;

  public static final String JSON_PROPERTY_VIEW_COUNT = "viewCount";
  private Integer viewCount;

  public QuestionSummary() {
  }

  public QuestionSummary id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public QuestionSummary title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public QuestionSummary content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public QuestionSummary author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }


  public QuestionSummary createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public QuestionSummary difficulty(DifficultyLevel difficulty) {
    
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Get difficulty
   * @return difficulty
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DifficultyLevel getDifficulty() {
    return difficulty;
  }


  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDifficulty(DifficultyLevel difficulty) {
    this.difficulty = difficulty;
  }


  public QuestionSummary tags(List<TagSummary> tags) {
    
    this.tags = tags;
    return this;
  }

  public QuestionSummary addTagsItem(TagSummary tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TagSummary> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<TagSummary> tags) {
    this.tags = tags;
  }


  public QuestionSummary upvoteCount(Integer upvoteCount) {
    
    this.upvoteCount = upvoteCount;
    return this;
  }

   /**
   * Get upvoteCount
   * @return upvoteCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpvoteCount() {
    return upvoteCount;
  }


  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpvoteCount(Integer upvoteCount) {
    this.upvoteCount = upvoteCount;
  }


  public QuestionSummary downvoteCount(Integer downvoteCount) {
    
    this.downvoteCount = downvoteCount;
    return this;
  }

   /**
   * Get downvoteCount
   * @return downvoteCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOWNVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDownvoteCount() {
    return downvoteCount;
  }


  @JsonProperty(JSON_PROPERTY_DOWNVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDownvoteCount(Integer downvoteCount) {
    this.downvoteCount = downvoteCount;
  }


  public QuestionSummary answerCount(Integer answerCount) {
    
    this.answerCount = answerCount;
    return this;
  }

   /**
   * Get answerCount
   * @return answerCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ANSWER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAnswerCount() {
    return answerCount;
  }


  @JsonProperty(JSON_PROPERTY_ANSWER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnswerCount(Integer answerCount) {
    this.answerCount = answerCount;
  }


  public QuestionSummary viewCount(Integer viewCount) {
    
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Get viewCount
   * @return viewCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEW_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViewCount() {
    return viewCount;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuestionSummary questionSummary = (QuestionSummary) o;
    return Objects.equals(this.id, questionSummary.id) &&
        Objects.equals(this.title, questionSummary.title) &&
        Objects.equals(this.content, questionSummary.content) &&
        Objects.equals(this.author, questionSummary.author) &&
        Objects.equals(this.createdAt, questionSummary.createdAt) &&
        Objects.equals(this.difficulty, questionSummary.difficulty) &&
        Objects.equals(this.tags, questionSummary.tags) &&
        Objects.equals(this.upvoteCount, questionSummary.upvoteCount) &&
        Objects.equals(this.downvoteCount, questionSummary.downvoteCount) &&
        Objects.equals(this.answerCount, questionSummary.answerCount) &&
        Objects.equals(this.viewCount, questionSummary.viewCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, content, author, createdAt, difficulty, tags, upvoteCount, downvoteCount, answerCount, viewCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionSummary {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    upvoteCount: ").append(toIndentedString(upvoteCount)).append("\n");
    sb.append("    downvoteCount: ").append(toIndentedString(downvoteCount)).append("\n");
    sb.append("    answerCount: ").append(toIndentedString(answerCount)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

