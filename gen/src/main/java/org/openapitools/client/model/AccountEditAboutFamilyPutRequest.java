/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountEditAboutFamilyPutRequestOtherRequirement;
import org.openapitools.client.model.JobIdEditPutRequestPay;
import org.openapitools.client.model.JobIdEditPutRequestSchedule;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountEditAboutFamilyPutRequest
 */
@JsonPropertyOrder({
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_NUMBER_OF_CHILDREN,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_CHILDREN_AGE,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_REQUIRE_SPECIAL_NEEDS_EXPERIENCE,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_OTHER_REQUIREMENT,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_CHILDCARE_TYPES,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_SCHEDULE,
  AccountEditAboutFamilyPutRequest.JSON_PROPERTY_PAY_OFFERED
})
@JsonTypeName("_account_edit_about_family_put_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountEditAboutFamilyPutRequest {
  public static final String JSON_PROPERTY_NUMBER_OF_CHILDREN = "number_of_children";
  private Integer numberOfChildren;

  /**
   * Gets or Sets childrenAge
   */
  public enum ChildrenAgeEnum {
    TODDLER("toddler"),
    
    PRESCHOOLER("preschooler"),
    
    _5_11_YR_OLD("5-11_yr_old"),
    
    TEENAGER("teenager");

    private String value;

    ChildrenAgeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildrenAgeEnum fromValue(String value) {
      for (ChildrenAgeEnum b : ChildrenAgeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDREN_AGE = "children_age";
  private List<ChildrenAgeEnum> childrenAge = new ArrayList<>();

  public static final String JSON_PROPERTY_REQUIRE_SPECIAL_NEEDS_EXPERIENCE = "require_special_needs_experience";
  private Boolean requireSpecialNeedsExperience;

  public static final String JSON_PROPERTY_OTHER_REQUIREMENT = "other_requirement";
  private AccountEditAboutFamilyPutRequestOtherRequirement otherRequirement;

  /**
   * Gets or Sets childcareTypes
   */
  public enum ChildcareTypesEnum {
    NANNY("nanny"),
    
    BABYSITTER("babysitter"),
    
    CHILDMINDER("childminder"),
    
    PRIVATE_TUTOR("private_tutor"),
    
    HOUSEHOLD_HELP("household_help");

    private String value;

    ChildcareTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildcareTypesEnum fromValue(String value) {
      for (ChildcareTypesEnum b : ChildcareTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDCARE_TYPES = "childcare_types";
  private List<ChildcareTypesEnum> childcareTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_SCHEDULE = "schedule";
  private JobIdEditPutRequestSchedule schedule;

  public static final String JSON_PROPERTY_PAY_OFFERED = "pay_offered";
  private JobIdEditPutRequestPay payOffered;

  public AccountEditAboutFamilyPutRequest() {
  }

  public AccountEditAboutFamilyPutRequest numberOfChildren(Integer numberOfChildren) {
    
    this.numberOfChildren = numberOfChildren;
    return this;
  }

   /**
   * Get numberOfChildren
   * @return numberOfChildren
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNumberOfChildren() {
    return numberOfChildren;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfChildren(Integer numberOfChildren) {
    this.numberOfChildren = numberOfChildren;
  }


  public AccountEditAboutFamilyPutRequest childrenAge(List<ChildrenAgeEnum> childrenAge) {
    
    this.childrenAge = childrenAge;
    return this;
  }

  public AccountEditAboutFamilyPutRequest addChildrenAgeItem(ChildrenAgeEnum childrenAgeItem) {
    if (this.childrenAge == null) {
      this.childrenAge = new ArrayList<>();
    }
    this.childrenAge.add(childrenAgeItem);
    return this;
  }

   /**
   * Get childrenAge
   * @return childrenAge
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ChildrenAgeEnum> getChildrenAge() {
    return childrenAge;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildrenAge(List<ChildrenAgeEnum> childrenAge) {
    this.childrenAge = childrenAge;
  }


  public AccountEditAboutFamilyPutRequest requireSpecialNeedsExperience(Boolean requireSpecialNeedsExperience) {
    
    this.requireSpecialNeedsExperience = requireSpecialNeedsExperience;
    return this;
  }

   /**
   * Get requireSpecialNeedsExperience
   * @return requireSpecialNeedsExperience
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUIRE_SPECIAL_NEEDS_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequireSpecialNeedsExperience() {
    return requireSpecialNeedsExperience;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRE_SPECIAL_NEEDS_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequireSpecialNeedsExperience(Boolean requireSpecialNeedsExperience) {
    this.requireSpecialNeedsExperience = requireSpecialNeedsExperience;
  }


  public AccountEditAboutFamilyPutRequest otherRequirement(AccountEditAboutFamilyPutRequestOtherRequirement otherRequirement) {
    
    this.otherRequirement = otherRequirement;
    return this;
  }

   /**
   * Get otherRequirement
   * @return otherRequirement
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OTHER_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountEditAboutFamilyPutRequestOtherRequirement getOtherRequirement() {
    return otherRequirement;
  }


  @JsonProperty(JSON_PROPERTY_OTHER_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOtherRequirement(AccountEditAboutFamilyPutRequestOtherRequirement otherRequirement) {
    this.otherRequirement = otherRequirement;
  }


  public AccountEditAboutFamilyPutRequest childcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    
    this.childcareTypes = childcareTypes;
    return this;
  }

  public AccountEditAboutFamilyPutRequest addChildcareTypesItem(ChildcareTypesEnum childcareTypesItem) {
    if (this.childcareTypes == null) {
      this.childcareTypes = new ArrayList<>();
    }
    this.childcareTypes.add(childcareTypesItem);
    return this;
  }

   /**
   * Get childcareTypes
   * @return childcareTypes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ChildcareTypesEnum> getChildcareTypes() {
    return childcareTypes;
  }


  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    this.childcareTypes = childcareTypes;
  }


  public AccountEditAboutFamilyPutRequest schedule(JobIdEditPutRequestSchedule schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public JobIdEditPutRequestSchedule getSchedule() {
    return schedule;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchedule(JobIdEditPutRequestSchedule schedule) {
    this.schedule = schedule;
  }


  public AccountEditAboutFamilyPutRequest payOffered(JobIdEditPutRequestPay payOffered) {
    
    this.payOffered = payOffered;
    return this;
  }

   /**
   * Get payOffered
   * @return payOffered
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAY_OFFERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public JobIdEditPutRequestPay getPayOffered() {
    return payOffered;
  }


  @JsonProperty(JSON_PROPERTY_PAY_OFFERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayOffered(JobIdEditPutRequestPay payOffered) {
    this.payOffered = payOffered;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountEditAboutFamilyPutRequest accountEditAboutFamilyPutRequest = (AccountEditAboutFamilyPutRequest) o;
    return Objects.equals(this.numberOfChildren, accountEditAboutFamilyPutRequest.numberOfChildren) &&
        Objects.equals(this.childrenAge, accountEditAboutFamilyPutRequest.childrenAge) &&
        Objects.equals(this.requireSpecialNeedsExperience, accountEditAboutFamilyPutRequest.requireSpecialNeedsExperience) &&
        Objects.equals(this.otherRequirement, accountEditAboutFamilyPutRequest.otherRequirement) &&
        Objects.equals(this.childcareTypes, accountEditAboutFamilyPutRequest.childcareTypes) &&
        Objects.equals(this.schedule, accountEditAboutFamilyPutRequest.schedule) &&
        Objects.equals(this.payOffered, accountEditAboutFamilyPutRequest.payOffered);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfChildren, childrenAge, requireSpecialNeedsExperience, otherRequirement, childcareTypes, schedule, payOffered);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountEditAboutFamilyPutRequest {\n");
    sb.append("    numberOfChildren: ").append(toIndentedString(numberOfChildren)).append("\n");
    sb.append("    childrenAge: ").append(toIndentedString(childrenAge)).append("\n");
    sb.append("    requireSpecialNeedsExperience: ").append(toIndentedString(requireSpecialNeedsExperience)).append("\n");
    sb.append("    otherRequirement: ").append(toIndentedString(otherRequirement)).append("\n");
    sb.append("    childcareTypes: ").append(toIndentedString(childcareTypes)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    payOffered: ").append(toIndentedString(payOffered)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

