/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CashFlowMonthlyCashFlowCharacteristics
 */
@JsonPropertyOrder({
  CashFlowMonthlyCashFlowCharacteristics.JSON_PROPERTY_MONTH,
  CashFlowMonthlyCashFlowCharacteristics.JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS,
  CashFlowMonthlyCashFlowCharacteristics.JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS_LESS_TRANSFERS,
  CashFlowMonthlyCashFlowCharacteristics.JSON_PROPERTY_AVERAGE_TRANSACTION_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CashFlowMonthlyCashFlowCharacteristics {
  public static final String JSON_PROPERTY_MONTH = "month";
  private Long month;

  public static final String JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS = "totalCreditsLessTotalDebits";
  private BigDecimal totalCreditsLessTotalDebits;

  public static final String JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS_LESS_TRANSFERS = "totalCreditsLessTotalDebitsLessTransfers";
  private BigDecimal totalCreditsLessTotalDebitsLessTransfers;

  public static final String JSON_PROPERTY_AVERAGE_TRANSACTION_AMOUNT = "averageTransactionAmount";
  private BigDecimal averageTransactionAmount;

  public CashFlowMonthlyCashFlowCharacteristics() {
  }

  public CashFlowMonthlyCashFlowCharacteristics month(Long month) {
    
    this.month = month;
    return this;
  }

   /**
   * One instance for each complete calendar month in the report
   * @return month
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonth(Long month) {
    this.month = month;
  }


  public CashFlowMonthlyCashFlowCharacteristics totalCreditsLessTotalDebits(BigDecimal totalCreditsLessTotalDebits) {
    
    this.totalCreditsLessTotalDebits = totalCreditsLessTotalDebits;
    return this;
  }

   /**
   * Total Credits - Total Debits by month
   * @return totalCreditsLessTotalDebits
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalCreditsLessTotalDebits() {
    return totalCreditsLessTotalDebits;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCreditsLessTotalDebits(BigDecimal totalCreditsLessTotalDebits) {
    this.totalCreditsLessTotalDebits = totalCreditsLessTotalDebits;
  }


  public CashFlowMonthlyCashFlowCharacteristics totalCreditsLessTotalDebitsLessTransfers(BigDecimal totalCreditsLessTotalDebitsLessTransfers) {
    
    this.totalCreditsLessTotalDebitsLessTransfers = totalCreditsLessTotalDebitsLessTransfers;
    return this;
  }

   /**
   * Total Credits - Total Debits by month (Without Transfers)
   * @return totalCreditsLessTotalDebitsLessTransfers
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalCreditsLessTotalDebitsLessTransfers() {
    return totalCreditsLessTotalDebitsLessTransfers;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_LESS_TOTAL_DEBITS_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCreditsLessTotalDebitsLessTransfers(BigDecimal totalCreditsLessTotalDebitsLessTransfers) {
    this.totalCreditsLessTotalDebitsLessTransfers = totalCreditsLessTotalDebitsLessTransfers;
  }


  public CashFlowMonthlyCashFlowCharacteristics averageTransactionAmount(BigDecimal averageTransactionAmount) {
    
    this.averageTransactionAmount = averageTransactionAmount;
    return this;
  }

   /**
   * Average transaction amount by month
   * @return averageTransactionAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageTransactionAmount() {
    return averageTransactionAmount;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageTransactionAmount(BigDecimal averageTransactionAmount) {
    this.averageTransactionAmount = averageTransactionAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowMonthlyCashFlowCharacteristics cashFlowMonthlyCashFlowCharacteristics = (CashFlowMonthlyCashFlowCharacteristics) o;
    return Objects.equals(this.month, cashFlowMonthlyCashFlowCharacteristics.month) &&
        Objects.equals(this.totalCreditsLessTotalDebits, cashFlowMonthlyCashFlowCharacteristics.totalCreditsLessTotalDebits) &&
        Objects.equals(this.totalCreditsLessTotalDebitsLessTransfers, cashFlowMonthlyCashFlowCharacteristics.totalCreditsLessTotalDebitsLessTransfers) &&
        Objects.equals(this.averageTransactionAmount, cashFlowMonthlyCashFlowCharacteristics.averageTransactionAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, totalCreditsLessTotalDebits, totalCreditsLessTotalDebitsLessTransfers, averageTransactionAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowMonthlyCashFlowCharacteristics {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    totalCreditsLessTotalDebits: ").append(toIndentedString(totalCreditsLessTotalDebits)).append("\n");
    sb.append("    totalCreditsLessTotalDebitsLessTransfers: ").append(toIndentedString(totalCreditsLessTotalDebitsLessTransfers)).append("\n");
    sb.append("    averageTransactionAmount: ").append(toIndentedString(averageTransactionAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

