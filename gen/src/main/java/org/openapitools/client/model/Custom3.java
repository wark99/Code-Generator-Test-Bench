/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PhoneNumber;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Custom3
 */
@JsonPropertyOrder({
  Custom3.JSON_PROPERTY_ADDRESS_MATCH,
  Custom3.JSON_PROPERTY_MAX_INQUIRY_COUNT,
  Custom3.JSON_PROPERTY_PHONE_NUMBER,
  Custom3.JSON_PROPERTY_PO_BOX,
  Custom3.JSON_PROPERTY_UNIT_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Custom3 {
  public static final String JSON_PROPERTY_ADDRESS_MATCH = "addressMatch";
  private String addressMatch;

  public static final String JSON_PROPERTY_MAX_INQUIRY_COUNT = "maxInquiryCount";
  private String maxInquiryCount;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private PhoneNumber phoneNumber;

  public static final String JSON_PROPERTY_PO_BOX = "poBox";
  private String poBox;

  public static final String JSON_PROPERTY_UNIT_NUMBER = "unitNumber";
  private String unitNumber;

  public Custom3() {
  }

  public Custom3 addressMatch(String addressMatch) {
    
    this.addressMatch = addressMatch;
    return this;
  }

   /**
   * Get addressMatch
   * @return addressMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressMatch() {
    return addressMatch;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressMatch(String addressMatch) {
    this.addressMatch = addressMatch;
  }


  public Custom3 maxInquiryCount(String maxInquiryCount) {
    
    this.maxInquiryCount = maxInquiryCount;
    return this;
  }

   /**
   * Get maxInquiryCount
   * @return maxInquiryCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_INQUIRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaxInquiryCount() {
    return maxInquiryCount;
  }


  @JsonProperty(JSON_PROPERTY_MAX_INQUIRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxInquiryCount(String maxInquiryCount) {
    this.maxInquiryCount = maxInquiryCount;
  }


  public Custom3 phoneNumber(PhoneNumber phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhoneNumber getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(PhoneNumber phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Custom3 poBox(String poBox) {
    
    this.poBox = poBox;
    return this;
  }

   /**
   * Get poBox
   * @return poBox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PO_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPoBox() {
    return poBox;
  }


  @JsonProperty(JSON_PROPERTY_PO_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoBox(String poBox) {
    this.poBox = poBox;
  }


  public Custom3 unitNumber(String unitNumber) {
    
    this.unitNumber = unitNumber;
    return this;
  }

   /**
   * Get unitNumber
   * @return unitNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitNumber() {
    return unitNumber;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Custom3 custom3 = (Custom3) o;
    return Objects.equals(this.addressMatch, custom3.addressMatch) &&
        Objects.equals(this.maxInquiryCount, custom3.maxInquiryCount) &&
        Objects.equals(this.phoneNumber, custom3.phoneNumber) &&
        Objects.equals(this.poBox, custom3.poBox) &&
        Objects.equals(this.unitNumber, custom3.unitNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressMatch, maxInquiryCount, phoneNumber, poBox, unitNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Custom3 {\n");
    sb.append("    addressMatch: ").append(toIndentedString(addressMatch)).append("\n");
    sb.append("    maxInquiryCount: ").append(toIndentedString(maxInquiryCount)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    poBox: ").append(toIndentedString(poBox)).append("\n");
    sb.append("    unitNumber: ").append(toIndentedString(unitNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

