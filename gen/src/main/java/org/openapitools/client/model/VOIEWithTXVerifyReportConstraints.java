/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ReportCustomField;
import org.openapitools.client.model.VOIEWithInterviewData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VOIEWithTXVerifyReportConstraints
 */
@JsonPropertyOrder({
  VOIEWithTXVerifyReportConstraints.JSON_PROPERTY_ACCOUNT_IDS,
  VOIEWithTXVerifyReportConstraints.JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA,
  VOIEWithTXVerifyReportConstraints.JSON_PROPERTY_REPORT_CUSTOM_FIELDS,
  VOIEWithTXVerifyReportConstraints.JSON_PROPERTY_FROM_DATE,
  VOIEWithTXVerifyReportConstraints.JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T11:16:07.490346735Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class VOIEWithTXVerifyReportConstraints {
  public static final String JSON_PROPERTY_ACCOUNT_IDS = "accountIds";
  private String accountIds;

  public static final String JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA = "voieWithInterviewData";
  private VOIEWithInterviewData voieWithInterviewData;

  public static final String JSON_PROPERTY_REPORT_CUSTOM_FIELDS = "reportCustomFields";
  private List<ReportCustomField> reportCustomFields;

  public static final String JSON_PROPERTY_FROM_DATE = "fromDate";
  private Long fromDate;

  public static final String JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM = "incomeStreamConfidenceMinimum";
  private Integer incomeStreamConfidenceMinimum;

  public VOIEWithTXVerifyReportConstraints() {
  }

  public VOIEWithTXVerifyReportConstraints accountIds(String accountIds) {
    
    this.accountIds = accountIds;
    return this;
  }

   /**
   * A whitespace-separated list of account IDs to be included in the report (all accounts will be included if not set)
   * @return accountIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountIds() {
    return accountIds;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountIds(String accountIds) {
    this.accountIds = accountIds;
  }


  public VOIEWithTXVerifyReportConstraints voieWithInterviewData(VOIEWithInterviewData voieWithInterviewData) {
    
    this.voieWithInterviewData = voieWithInterviewData;
    return this;
  }

   /**
   * Get voieWithInterviewData
   * @return voieWithInterviewData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VOIEWithInterviewData getVoieWithInterviewData() {
    return voieWithInterviewData;
  }


  @JsonProperty(JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVoieWithInterviewData(VOIEWithInterviewData voieWithInterviewData) {
    this.voieWithInterviewData = voieWithInterviewData;
  }


  public VOIEWithTXVerifyReportConstraints reportCustomFields(List<ReportCustomField> reportCustomFields) {
    
    this.reportCustomFields = reportCustomFields;
    return this;
  }

  public VOIEWithTXVerifyReportConstraints addReportCustomFieldsItem(ReportCustomField reportCustomFieldsItem) {
    if (this.reportCustomFields == null) {
      this.reportCustomFields = new ArrayList<>();
    }
    this.reportCustomFields.add(reportCustomFieldsItem);
    return this;
  }

   /**
   * The &#x60;reportCustomFields&#x60; parameter is used when experiences are associated with a credit decisioning report.  Designate up to 5 custom fields that you&#39;d like associated with the report when it&#39;s generated. Every custom field consists of three variables: &#x60;label&#x60;, &#x60;value&#x60;, and &#x60;shown&#x60;. The &#x60;shown&#x60; variable is \&quot;true\&quot; or \&quot;false\&quot;. * \&quot;true\&quot;: (default) display the custom field in the PDF report * \&quot;false\&quot;: don&#39;t display the custom field in the PDF report  For an experience that generates multiple reports, the &#x60;reportCustomFields&#x60; parameter gets passed to all reports.  All custom fields display in the Reseller Billing API.
   * @return reportCustomFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportCustomField> getReportCustomFields() {
    return reportCustomFields;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportCustomFields(List<ReportCustomField> reportCustomFields) {
    this.reportCustomFields = reportCustomFields;
  }


  public VOIEWithTXVerifyReportConstraints fromDate(Long fromDate) {
    
    this.fromDate = fromDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return fromDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFromDate() {
    return fromDate;
  }


  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromDate(Long fromDate) {
    this.fromDate = fromDate;
  }


  public VOIEWithTXVerifyReportConstraints incomeStreamConfidenceMinimum(Integer incomeStreamConfidenceMinimum) {
    
    this.incomeStreamConfidenceMinimum = incomeStreamConfidenceMinimum;
    return this;
  }

   /**
   * Include income streams in the report, based on the income stream&#39;s confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.
   * @return incomeStreamConfidenceMinimum
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIncomeStreamConfidenceMinimum() {
    return incomeStreamConfidenceMinimum;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStreamConfidenceMinimum(Integer incomeStreamConfidenceMinimum) {
    this.incomeStreamConfidenceMinimum = incomeStreamConfidenceMinimum;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VOIEWithTXVerifyReportConstraints voIEWithTXVerifyReportConstraints = (VOIEWithTXVerifyReportConstraints) o;
    return Objects.equals(this.accountIds, voIEWithTXVerifyReportConstraints.accountIds) &&
        Objects.equals(this.voieWithInterviewData, voIEWithTXVerifyReportConstraints.voieWithInterviewData) &&
        Objects.equals(this.reportCustomFields, voIEWithTXVerifyReportConstraints.reportCustomFields) &&
        Objects.equals(this.fromDate, voIEWithTXVerifyReportConstraints.fromDate) &&
        Objects.equals(this.incomeStreamConfidenceMinimum, voIEWithTXVerifyReportConstraints.incomeStreamConfidenceMinimum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIds, voieWithInterviewData, reportCustomFields, fromDate, incomeStreamConfidenceMinimum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VOIEWithTXVerifyReportConstraints {\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    voieWithInterviewData: ").append(toIndentedString(voieWithInterviewData)).append("\n");
    sb.append("    reportCustomFields: ").append(toIndentedString(reportCustomFields)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    incomeStreamConfidenceMinimum: ").append(toIndentedString(incomeStreamConfidenceMinimum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

