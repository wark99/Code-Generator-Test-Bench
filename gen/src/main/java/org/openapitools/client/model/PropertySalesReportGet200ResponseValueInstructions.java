/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertySalesReportGet200ResponseValueInstructions
 */
@JsonPropertyOrder({
  PropertySalesReportGet200ResponseValueInstructions.JSON_PROPERTY_COUNT,
  PropertySalesReportGet200ResponseValueInstructions.JSON_PROPERTY_FEES,
  PropertySalesReportGet200ResponseValueInstructions.JSON_PROPERTY_TOTAL_VALUE_OF_PROPERTIES,
  PropertySalesReportGet200ResponseValueInstructions.JSON_PROPERTY_WITHDRAWN,
  PropertySalesReportGet200ResponseValueInstructions.JSON_PROPERTY_APPLICANTS
})
@JsonTypeName("_property_sales_report_get_200_response_value_instructions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertySalesReportGet200ResponseValueInstructions {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_FEES = "fees";
  private Double fees;

  public static final String JSON_PROPERTY_TOTAL_VALUE_OF_PROPERTIES = "total_value_of_properties";
  private Double totalValueOfProperties;

  public static final String JSON_PROPERTY_WITHDRAWN = "withdrawn";
  private Integer withdrawn;

  public static final String JSON_PROPERTY_APPLICANTS = "applicants";
  private Integer applicants;

  public PropertySalesReportGet200ResponseValueInstructions() {
  }

  public PropertySalesReportGet200ResponseValueInstructions count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Total number of all instructions
   * @return count
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public PropertySalesReportGet200ResponseValueInstructions fees(Double fees) {
    
    this.fees = fees;
    return this;
  }

   /**
   * Sum of all fees
   * @return fees
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFees() {
    return fees;
  }


  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFees(Double fees) {
    this.fees = fees;
  }


  public PropertySalesReportGet200ResponseValueInstructions totalValueOfProperties(Double totalValueOfProperties) {
    
    this.totalValueOfProperties = totalValueOfProperties;
    return this;
  }

   /**
   * Sum of advertised prices
   * @return totalValueOfProperties
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VALUE_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalValueOfProperties() {
    return totalValueOfProperties;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VALUE_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalValueOfProperties(Double totalValueOfProperties) {
    this.totalValueOfProperties = totalValueOfProperties;
  }


  public PropertySalesReportGet200ResponseValueInstructions withdrawn(Integer withdrawn) {
    
    this.withdrawn = withdrawn;
    return this;
  }

   /**
   * Total number of withdrawn properties
   * @return withdrawn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WITHDRAWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWithdrawn() {
    return withdrawn;
  }


  @JsonProperty(JSON_PROPERTY_WITHDRAWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWithdrawn(Integer withdrawn) {
    this.withdrawn = withdrawn;
  }


  public PropertySalesReportGet200ResponseValueInstructions applicants(Integer applicants) {
    
    this.applicants = applicants;
    return this;
  }

   /**
   * Total number of applicants
   * @return applicants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getApplicants() {
    return applicants;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicants(Integer applicants) {
    this.applicants = applicants;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertySalesReportGet200ResponseValueInstructions propertySalesReportGet200ResponseValueInstructions = (PropertySalesReportGet200ResponseValueInstructions) o;
    return Objects.equals(this.count, propertySalesReportGet200ResponseValueInstructions.count) &&
        Objects.equals(this.fees, propertySalesReportGet200ResponseValueInstructions.fees) &&
        Objects.equals(this.totalValueOfProperties, propertySalesReportGet200ResponseValueInstructions.totalValueOfProperties) &&
        Objects.equals(this.withdrawn, propertySalesReportGet200ResponseValueInstructions.withdrawn) &&
        Objects.equals(this.applicants, propertySalesReportGet200ResponseValueInstructions.applicants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, fees, totalValueOfProperties, withdrawn, applicants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertySalesReportGet200ResponseValueInstructions {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    totalValueOfProperties: ").append(toIndentedString(totalValueOfProperties)).append("\n");
    sb.append("    withdrawn: ").append(toIndentedString(withdrawn)).append("\n");
    sb.append("    applicants: ").append(toIndentedString(applicants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

