/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AddressNodeNormSchemeCreator;
import org.openapitools.client.model.CompanyId;
import org.openapitools.client.model.Created;
import org.openapitools.client.model.LastLogin;
import org.openapitools.client.model.Locale;
import org.openapitools.client.model.Phone2;
import org.openapitools.client.model.StatusUser;
import org.openapitools.client.model.Tz1;
import org.openapitools.client.model.Updated;
import org.openapitools.client.model.UserRole;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UserBaseScheme
 */
@JsonPropertyOrder({
  UserBaseScheme.JSON_PROPERTY_COMPANY_ID,
  UserBaseScheme.JSON_PROPERTY_CREATED,
  UserBaseScheme.JSON_PROPERTY_CREATOR,
  UserBaseScheme.JSON_PROPERTY_UPDATED,
  UserBaseScheme.JSON_PROPERTY_UPDATER,
  UserBaseScheme.JSON_PROPERTY_ID,
  UserBaseScheme.JSON_PROPERTY_NAME,
  UserBaseScheme.JSON_PROPERTY_EMAIL,
  UserBaseScheme.JSON_PROPERTY_PHONE,
  UserBaseScheme.JSON_PROPERTY_ROLE,
  UserBaseScheme.JSON_PROPERTY_LOCALE,
  UserBaseScheme.JSON_PROPERTY_TZ,
  UserBaseScheme.JSON_PROPERTY_LAST_LOGIN,
  UserBaseScheme.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UserBaseScheme {
  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private CompanyId companyId;

  public static final String JSON_PROPERTY_CREATED = "created";
  private Created created;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private AddressNodeNormSchemeCreator creator;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private Updated updated;

  public static final String JSON_PROPERTY_UPDATER = "updater";
  private AddressNodeNormSchemeCreator updater;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private Phone2 phone;

  public static final String JSON_PROPERTY_ROLE = "role";
  private UserRole role;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private Locale locale;

  public static final String JSON_PROPERTY_TZ = "tz";
  private Tz1 tz;

  public static final String JSON_PROPERTY_LAST_LOGIN = "last_login";
  private LastLogin lastLogin;

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusUser status;

  public UserBaseScheme() {
  }

  public UserBaseScheme companyId(CompanyId companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyId getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyId(CompanyId companyId) {
    this.companyId = companyId;
  }


  public UserBaseScheme created(Created created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Created getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(Created created) {
    this.created = created;
  }


  public UserBaseScheme creator(AddressNodeNormSchemeCreator creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreator(AddressNodeNormSchemeCreator creator) {
    this.creator = creator;
  }


  public UserBaseScheme updated(Updated updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Updated getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdated(Updated updated) {
    this.updated = updated;
  }


  public UserBaseScheme updater(AddressNodeNormSchemeCreator updater) {
    
    this.updater = updater;
    return this;
  }

   /**
   * Get updater
   * @return updater
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getUpdater() {
    return updater;
  }


  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdater(AddressNodeNormSchemeCreator updater) {
    this.updater = updater;
  }


  public UserBaseScheme id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique user id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public UserBaseScheme name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * user name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UserBaseScheme email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * user email
   * @return email
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public UserBaseScheme phone(Phone2 phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Phone2 getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhone(Phone2 phone) {
    this.phone = phone;
  }


  public UserBaseScheme role(UserRole role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserRole getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(UserRole role) {
    this.role = role;
  }


  public UserBaseScheme locale(Locale locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Locale getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocale(Locale locale) {
    this.locale = locale;
  }


  public UserBaseScheme tz(Tz1 tz) {
    
    this.tz = tz;
    return this;
  }

   /**
   * Get tz
   * @return tz
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Tz1 getTz() {
    return tz;
  }


  @JsonProperty(JSON_PROPERTY_TZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTz(Tz1 tz) {
    this.tz = tz;
  }


  public UserBaseScheme lastLogin(LastLogin lastLogin) {
    
    this.lastLogin = lastLogin;
    return this;
  }

   /**
   * Get lastLogin
   * @return lastLogin
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LastLogin getLastLogin() {
    return lastLogin;
  }


  @JsonProperty(JSON_PROPERTY_LAST_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastLogin(LastLogin lastLogin) {
    this.lastLogin = lastLogin;
  }


  public UserBaseScheme status(StatusUser status) {
    
    this.status = status;
    return this;
  }

   /**
   * user status (1 - Inactive, 2 - New, 3 - Active)
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusUser getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusUser status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserBaseScheme userBaseScheme = (UserBaseScheme) o;
    return Objects.equals(this.companyId, userBaseScheme.companyId) &&
        Objects.equals(this.created, userBaseScheme.created) &&
        Objects.equals(this.creator, userBaseScheme.creator) &&
        Objects.equals(this.updated, userBaseScheme.updated) &&
        Objects.equals(this.updater, userBaseScheme.updater) &&
        Objects.equals(this.id, userBaseScheme.id) &&
        Objects.equals(this.name, userBaseScheme.name) &&
        Objects.equals(this.email, userBaseScheme.email) &&
        Objects.equals(this.phone, userBaseScheme.phone) &&
        Objects.equals(this.role, userBaseScheme.role) &&
        Objects.equals(this.locale, userBaseScheme.locale) &&
        Objects.equals(this.tz, userBaseScheme.tz) &&
        Objects.equals(this.lastLogin, userBaseScheme.lastLogin) &&
        Objects.equals(this.status, userBaseScheme.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, created, creator, updated, updater, id, name, email, phone, role, locale, tz, lastLogin, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserBaseScheme {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    tz: ").append(toIndentedString(tz)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

