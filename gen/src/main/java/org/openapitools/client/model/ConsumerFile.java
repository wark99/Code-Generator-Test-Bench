/*
 * VS4+ APIs
 * This file describes the VS4+ APIs using the swagger notation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.Credit;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConsumerFile
 */
@JsonPropertyOrder({
  ConsumerFile.JSON_PROPERTY_AGGREGATOR,
  ConsumerFile.JSON_PROPERTY_ACCOUNTS,
  ConsumerFile.JSON_PROPERTY_BUREAU,
  ConsumerFile.JSON_PROPERTY_CREDIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:38.356341300Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ConsumerFile {
  /**
   * The financial aggregator that exports accounts data.
   */
  public enum AggregatorEnum {
    FINICITY("finicity"),
    
    MX("mx"),
    
    YODLEE("yodlee");

    private String value;

    AggregatorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AggregatorEnum fromValue(String value) {
      for (AggregatorEnum b : AggregatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGGREGATOR = "aggregator";
  private AggregatorEnum aggregator;

  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  private List<Account> accounts = new ArrayList<>();

  /**
   * The credit bureau that exports credit report data.
   */
  public enum BureauEnum {
    EFX("efx"),
    
    EXP("exp"),
    
    TU("tu");

    private String value;

    BureauEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BureauEnum fromValue(String value) {
      for (BureauEnum b : BureauEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BUREAU = "bureau";
  private BureauEnum bureau;

  public static final String JSON_PROPERTY_CREDIT = "credit";
  private Credit credit;

  public ConsumerFile() {
  }

  public ConsumerFile aggregator(AggregatorEnum aggregator) {
    
    this.aggregator = aggregator;
    return this;
  }

   /**
   * The financial aggregator that exports accounts data.
   * @return aggregator
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AggregatorEnum getAggregator() {
    return aggregator;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregator(AggregatorEnum aggregator) {
    this.aggregator = aggregator;
  }


  public ConsumerFile accounts(List<Account> accounts) {
    
    this.accounts = accounts;
    return this;
  }

  public ConsumerFile addAccountsItem(Account accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * Financial institution accounts.
   * @return accounts
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Account> getAccounts() {
    return accounts;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccounts(List<Account> accounts) {
    this.accounts = accounts;
  }


  public ConsumerFile bureau(BureauEnum bureau) {
    
    this.bureau = bureau;
    return this;
  }

   /**
   * The credit bureau that exports credit report data.
   * @return bureau
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BUREAU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BureauEnum getBureau() {
    return bureau;
  }


  @JsonProperty(JSON_PROPERTY_BUREAU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBureau(BureauEnum bureau) {
    this.bureau = bureau;
  }


  public ConsumerFile credit(Credit credit) {
    
    this.credit = credit;
    return this;
  }

   /**
   * Get credit
   * @return credit
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Credit getCredit() {
    return credit;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredit(Credit credit) {
    this.credit = credit;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumerFile consumerFile = (ConsumerFile) o;
    return Objects.equals(this.aggregator, consumerFile.aggregator) &&
        Objects.equals(this.accounts, consumerFile.accounts) &&
        Objects.equals(this.bureau, consumerFile.bureau) &&
        Objects.equals(this.credit, consumerFile.credit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregator, accounts, bureau, credit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumerFile {\n");
    sb.append("    aggregator: ").append(toIndentedString(aggregator)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    bureau: ").append(toIndentedString(bureau)).append("\n");
    sb.append("    credit: ").append(toIndentedString(credit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

