/*
 * Perch API
 * Perch API for accessing data from Perch. See our [API Guide](https://docs.google.com/document/d/1ms6LFNwFN4C4WkrfWs8Hlu5igFBpNLhNr7uLEkGmvJA) for guidance on best practices. <br/> <br/> Find out more about Perch at [https://perch.fit](https://perch.fit) or by contacting us at [support@perch.fit](mailto:support@perch.fit).
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@perch.fit
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LimbPattern;
import org.openapitools.client.model.Rep;
import org.openapitools.client.model.SetError;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object representing a set tracked by or entered into Perch.
 */
@JsonPropertyOrder({
  Set.JSON_PROPERTY_ID,
  Set.JSON_PROPERTY_CREATED_AT,
  Set.JSON_PROPERTY_USER_ID,
  Set.JSON_PROPERTY_ORG_ID,
  Set.JSON_PROPERTY_EXERCISE_ID,
  Set.JSON_PROPERTY_WEIGHT,
  Set.JSON_PROPERTY_PCT1RM,
  Set.JSON_PROPERTY_TRACKED,
  Set.JSON_PROPERTY_BANDS_USED,
  Set.JSON_PROPERTY_CHAINS_USED,
  Set.JSON_PROPERTY_START_TIME,
  Set.JSON_PROPERTY_END_TIME,
  Set.JSON_PROPERTY_ERROR,
  Set.JSON_PROPERTY_REPS,
  Set.JSON_PROPERTY_NUM_REPS,
  Set.JSON_PROPERTY_NUM_TRACKED_REPS,
  Set.JSON_PROPERTY_FIRST_LIMB,
  Set.JSON_PROPERTY_LIMB_PATTERN,
  Set.JSON_PROPERTY_MIN_MEAN_POWER,
  Set.JSON_PROPERTY_AVG_MEAN_POWER,
  Set.JSON_PROPERTY_MAX_MEAN_POWER,
  Set.JSON_PROPERTY_MIN_MEAN_VELOCITY,
  Set.JSON_PROPERTY_AVG_MEAN_VELOCITY,
  Set.JSON_PROPERTY_MAX_MEAN_VELOCITY,
  Set.JSON_PROPERTY_AVG_ECC_MEAN_VELOCITY,
  Set.JSON_PROPERTY_MAX_ECC_MEAN_VELOCITY,
  Set.JSON_PROPERTY_MIN_ECC_MEAN_VELOCITY,
  Set.JSON_PROPERTY_MIN_PEAK_POWER,
  Set.JSON_PROPERTY_AVG_PEAK_POWER,
  Set.JSON_PROPERTY_MAX_PEAK_POWER,
  Set.JSON_PROPERTY_MIN_PEAK_VELOCITY,
  Set.JSON_PROPERTY_AVG_PEAK_VELOCITY,
  Set.JSON_PROPERTY_MAX_PEAK_VELOCITY,
  Set.JSON_PROPERTY_AVG_ECC_PEAK_VELOCITY,
  Set.JSON_PROPERTY_MAX_ECC_PEAK_VELOCITY,
  Set.JSON_PROPERTY_MIN_ECC_PEAK_VELOCITY,
  Set.JSON_PROPERTY_AVG_ECC_TIME,
  Set.JSON_PROPERTY_MAX_ECC_TIME,
  Set.JSON_PROPERTY_MIN_ECC_TIME,
  Set.JSON_PROPERTY_MAX_VELOCITY_AT100_MS,
  Set.JSON_PROPERTY_AVG_VELOCITY_AT100_MS,
  Set.JSON_PROPERTY_MIN_VELOCITY_AT100_MS,
  Set.JSON_PROPERTY_MAX_TIME_TO_PEAK_VELOCITY,
  Set.JSON_PROPERTY_AVG_TIME_TO_PEAK_VELOCITY,
  Set.JSON_PROPERTY_MIN_TIME_TO_PEAK_VELOCITY,
  Set.JSON_PROPERTY_MAX_TIME_TO_PEAK_POWER,
  Set.JSON_PROPERTY_AVG_TIME_TO_PEAK_POWER,
  Set.JSON_PROPERTY_MIN_TIME_TO_PEAK_POWER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:41.221792118Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Set {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private BigDecimal createdAt;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_ORG_ID = "org_id";
  private Integer orgId;

  public static final String JSON_PROPERTY_EXERCISE_ID = "exercise_id";
  private Integer exerciseId;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private BigDecimal weight;

  public static final String JSON_PROPERTY_PCT1RM = "pct_1rm";
  private BigDecimal pct1rm;

  public static final String JSON_PROPERTY_TRACKED = "tracked";
  private Boolean tracked;

  public static final String JSON_PROPERTY_BANDS_USED = "bands_used";
  private Boolean bandsUsed;

  public static final String JSON_PROPERTY_CHAINS_USED = "chains_used";
  private Boolean chainsUsed;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private BigDecimal startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private BigDecimal endTime;

  public static final String JSON_PROPERTY_ERROR = "error";
  private SetError error;

  public static final String JSON_PROPERTY_REPS = "reps";
  private List<Rep> reps;

  public static final String JSON_PROPERTY_NUM_REPS = "num_reps";
  private Integer numReps;

  public static final String JSON_PROPERTY_NUM_TRACKED_REPS = "num_tracked_reps";
  private Integer numTrackedReps;

  /**
   * In a unilateral exercise, this is the limb with which the athlete began their reps.
   */
  public enum FirstLimbEnum {
    RIGHT("RIGHT"),
    
    LEFT("LEFT");

    private String value;

    FirstLimbEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FirstLimbEnum fromValue(String value) {
      for (FirstLimbEnum b : FirstLimbEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIRST_LIMB = "first_limb";
  private FirstLimbEnum firstLimb;

  public static final String JSON_PROPERTY_LIMB_PATTERN = "limb_pattern";
  private LimbPattern limbPattern;

  public static final String JSON_PROPERTY_MIN_MEAN_POWER = "min_mean_power";
  private BigDecimal minMeanPower;

  public static final String JSON_PROPERTY_AVG_MEAN_POWER = "avg_mean_power";
  private BigDecimal avgMeanPower;

  public static final String JSON_PROPERTY_MAX_MEAN_POWER = "max_mean_power";
  private BigDecimal maxMeanPower;

  public static final String JSON_PROPERTY_MIN_MEAN_VELOCITY = "min_mean_velocity";
  private BigDecimal minMeanVelocity;

  public static final String JSON_PROPERTY_AVG_MEAN_VELOCITY = "avg_mean_velocity";
  private BigDecimal avgMeanVelocity;

  public static final String JSON_PROPERTY_MAX_MEAN_VELOCITY = "max_mean_velocity";
  private BigDecimal maxMeanVelocity;

  public static final String JSON_PROPERTY_AVG_ECC_MEAN_VELOCITY = "avg_ecc_mean_velocity";
  private BigDecimal avgEccMeanVelocity;

  public static final String JSON_PROPERTY_MAX_ECC_MEAN_VELOCITY = "max_ecc_mean_velocity";
  private BigDecimal maxEccMeanVelocity;

  public static final String JSON_PROPERTY_MIN_ECC_MEAN_VELOCITY = "min_ecc_mean_velocity";
  private BigDecimal minEccMeanVelocity;

  public static final String JSON_PROPERTY_MIN_PEAK_POWER = "min_peak_power";
  private BigDecimal minPeakPower;

  public static final String JSON_PROPERTY_AVG_PEAK_POWER = "avg_peak_power";
  private BigDecimal avgPeakPower;

  public static final String JSON_PROPERTY_MAX_PEAK_POWER = "max_peak_power";
  private BigDecimal maxPeakPower;

  public static final String JSON_PROPERTY_MIN_PEAK_VELOCITY = "min_peak_velocity";
  private BigDecimal minPeakVelocity;

  public static final String JSON_PROPERTY_AVG_PEAK_VELOCITY = "avg_peak_velocity";
  private BigDecimal avgPeakVelocity;

  public static final String JSON_PROPERTY_MAX_PEAK_VELOCITY = "max_peak_velocity";
  private BigDecimal maxPeakVelocity;

  public static final String JSON_PROPERTY_AVG_ECC_PEAK_VELOCITY = "avg_ecc_peak_velocity";
  private BigDecimal avgEccPeakVelocity;

  public static final String JSON_PROPERTY_MAX_ECC_PEAK_VELOCITY = "max_ecc_peak_velocity";
  private BigDecimal maxEccPeakVelocity;

  public static final String JSON_PROPERTY_MIN_ECC_PEAK_VELOCITY = "min_ecc_peak_velocity";
  private BigDecimal minEccPeakVelocity;

  public static final String JSON_PROPERTY_AVG_ECC_TIME = "avg_ecc_time";
  private BigDecimal avgEccTime;

  public static final String JSON_PROPERTY_MAX_ECC_TIME = "max_ecc_time";
  private BigDecimal maxEccTime;

  public static final String JSON_PROPERTY_MIN_ECC_TIME = "min_ecc_time";
  private BigDecimal minEccTime;

  public static final String JSON_PROPERTY_MAX_VELOCITY_AT100_MS = "max_velocity_at_100_ms";
  private BigDecimal maxVelocityAt100Ms;

  public static final String JSON_PROPERTY_AVG_VELOCITY_AT100_MS = "avg_velocity_at_100_ms";
  private BigDecimal avgVelocityAt100Ms;

  public static final String JSON_PROPERTY_MIN_VELOCITY_AT100_MS = "min_velocity_at_100_ms";
  private BigDecimal minVelocityAt100Ms;

  public static final String JSON_PROPERTY_MAX_TIME_TO_PEAK_VELOCITY = "max_time_to_peak_velocity";
  private BigDecimal maxTimeToPeakVelocity;

  public static final String JSON_PROPERTY_AVG_TIME_TO_PEAK_VELOCITY = "avg_time_to_peak_velocity";
  private BigDecimal avgTimeToPeakVelocity;

  public static final String JSON_PROPERTY_MIN_TIME_TO_PEAK_VELOCITY = "min_time_to_peak_velocity";
  private BigDecimal minTimeToPeakVelocity;

  public static final String JSON_PROPERTY_MAX_TIME_TO_PEAK_POWER = "max_time_to_peak_power";
  private BigDecimal maxTimeToPeakPower;

  public static final String JSON_PROPERTY_AVG_TIME_TO_PEAK_POWER = "avg_time_to_peak_power";
  private BigDecimal avgTimeToPeakPower;

  public static final String JSON_PROPERTY_MIN_TIME_TO_PEAK_POWER = "min_time_to_peak_power";
  private BigDecimal minTimeToPeakPower;

  public Set() {
  }

  public Set id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique id for the set
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public Set createdAt(BigDecimal createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(BigDecimal createdAt) {
    this.createdAt = createdAt;
  }


  public Set userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public Set orgId(Integer orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * The ID of the organization the user who performed the set belongs to.
   * @return orgId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrgId() {
    return orgId;
  }


  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrgId(Integer orgId) {
    this.orgId = orgId;
  }


  public Set exerciseId(Integer exerciseId) {
    
    this.exerciseId = exerciseId;
    return this;
  }

   /**
   * Get exerciseId
   * @return exerciseId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXERCISE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExerciseId() {
    return exerciseId;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExerciseId(Integer exerciseId) {
    this.exerciseId = exerciseId;
  }


  public Set weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * The weight the lift was performed with.
   * @return weight
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public Set pct1rm(BigDecimal pct1rm) {
    
    this.pct1rm = pct1rm;
    return this;
  }

   /**
   * The percentage [0.0 - 1.0] this set\&quot;s weight is of the user\&quot;s One Rep Max (1RM) for this exercise.
   * @return pct1rm
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PCT1RM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPct1rm() {
    return pct1rm;
  }


  @JsonProperty(JSON_PROPERTY_PCT1RM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPct1rm(BigDecimal pct1rm) {
    this.pct1rm = pct1rm;
  }


  public Set tracked(Boolean tracked) {
    
    this.tracked = tracked;
    return this;
  }

   /**
   * Delineates whether this set was tracked by a Perch camera (&#x60;true&#x60;) or manually entered into Perch.
   * @return tracked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRACKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTracked() {
    return tracked;
  }


  @JsonProperty(JSON_PROPERTY_TRACKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTracked(Boolean tracked) {
    this.tracked = tracked;
  }


  public Set bandsUsed(Boolean bandsUsed) {
    
    this.bandsUsed = bandsUsed;
    return this;
  }

   /**
   * Whether bands were used for this set.
   * @return bandsUsed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDS_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBandsUsed() {
    return bandsUsed;
  }


  @JsonProperty(JSON_PROPERTY_BANDS_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandsUsed(Boolean bandsUsed) {
    this.bandsUsed = bandsUsed;
  }


  public Set chainsUsed(Boolean chainsUsed) {
    
    this.chainsUsed = chainsUsed;
    return this;
  }

   /**
   * Whether chains were used for this set.
   * @return chainsUsed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAINS_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChainsUsed() {
    return chainsUsed;
  }


  @JsonProperty(JSON_PROPERTY_CHAINS_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChainsUsed(Boolean chainsUsed) {
    this.chainsUsed = chainsUsed;
  }


  public Set startTime(BigDecimal startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartTime(BigDecimal startTime) {
    this.startTime = startTime;
  }


  public Set endTime(BigDecimal endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(BigDecimal endTime) {
    this.endTime = endTime;
  }


  public Set error(SetError error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SetError getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(SetError error) {
    this.error = error;
  }


  public Set reps(List<Rep> reps) {
    
    this.reps = reps;
    return this;
  }

  public Set addRepsItem(Rep repsItem) {
    if (this.reps == null) {
      this.reps = new ArrayList<>();
    }
    this.reps.add(repsItem);
    return this;
  }

   /**
   * Contains all reps the Perch device tracked. &#x60;Set.error.ghost_rep_indices&#x60; optionally contains indices into this array that were marked by the user as erroneous and should be ignored.
   * @return reps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Rep> getReps() {
    return reps;
  }


  @JsonProperty(JSON_PROPERTY_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReps(List<Rep> reps) {
    this.reps = reps;
  }


  public Set numReps(Integer numReps) {
    
    this.numReps = numReps;
    return this;
  }

   /**
   * The number of VALID reps on this set. This is the same as then length of the Reps array, unless the user marked an error and removed ghost reps. In that case, this count of reps reflects the removal of those ghost reps.
   * @return numReps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumReps() {
    return numReps;
  }


  @JsonProperty(JSON_PROPERTY_NUM_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumReps(Integer numReps) {
    this.numReps = numReps;
  }


  public Set numTrackedReps(Integer numTrackedReps) {
    
    this.numTrackedReps = numTrackedReps;
    return this;
  }

   /**
   * The number of reps the Perch camera tracked for this set. This will always be exactly the length of the Reps array.
   * @return numTrackedReps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_TRACKED_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumTrackedReps() {
    return numTrackedReps;
  }


  @JsonProperty(JSON_PROPERTY_NUM_TRACKED_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumTrackedReps(Integer numTrackedReps) {
    this.numTrackedReps = numTrackedReps;
  }


  public Set firstLimb(FirstLimbEnum firstLimb) {
    
    this.firstLimb = firstLimb;
    return this;
  }

   /**
   * In a unilateral exercise, this is the limb with which the athlete began their reps.
   * @return firstLimb
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_LIMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FirstLimbEnum getFirstLimb() {
    return firstLimb;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_LIMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstLimb(FirstLimbEnum firstLimb) {
    this.firstLimb = firstLimb;
  }


  public Set limbPattern(LimbPattern limbPattern) {
    
    this.limbPattern = limbPattern;
    return this;
  }

   /**
   * Get limbPattern
   * @return limbPattern
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMB_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LimbPattern getLimbPattern() {
    return limbPattern;
  }


  @JsonProperty(JSON_PROPERTY_LIMB_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimbPattern(LimbPattern limbPattern) {
    this.limbPattern = limbPattern;
  }


  public Set minMeanPower(BigDecimal minMeanPower) {
    
    this.minMeanPower = minMeanPower;
    return this;
  }

   /**
   * The minimum of &#x60;Rep.concentric_mean_velocity_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * N/lbs * min_mean_power&#x60;
   * @return minMeanPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinMeanPower() {
    return minMeanPower;
  }


  @JsonProperty(JSON_PROPERTY_MIN_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinMeanPower(BigDecimal minMeanPower) {
    this.minMeanPower = minMeanPower;
  }


  public Set avgMeanPower(BigDecimal avgMeanPower) {
    
    this.avgMeanPower = avgMeanPower;
    return this;
  }

   /**
   * The mean of &#x60;Rep.concentric_mean_velocity_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * N/lbs * avg_mean_power&#x60;
   * @return avgMeanPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgMeanPower() {
    return avgMeanPower;
  }


  @JsonProperty(JSON_PROPERTY_AVG_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgMeanPower(BigDecimal avgMeanPower) {
    this.avgMeanPower = avgMeanPower;
  }


  public Set maxMeanPower(BigDecimal maxMeanPower) {
    
    this.maxMeanPower = maxMeanPower;
    return this;
  }

   /**
   * The max of &#x60;Rep.concentric_mean_velocity_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * N/lbs * max_mean_power&#x60;
   * @return maxMeanPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxMeanPower() {
    return maxMeanPower;
  }


  @JsonProperty(JSON_PROPERTY_MAX_MEAN_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxMeanPower(BigDecimal maxMeanPower) {
    this.maxMeanPower = maxMeanPower;
  }


  public Set minMeanVelocity(BigDecimal minMeanVelocity) {
    
    this.minMeanVelocity = minMeanVelocity;
    return this;
  }

   /**
   * The minimum of &#x60;Rep.concentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * min_mean_velocity&#x60;
   * @return minMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinMeanVelocity() {
    return minMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MIN_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinMeanVelocity(BigDecimal minMeanVelocity) {
    this.minMeanVelocity = minMeanVelocity;
  }


  public Set avgMeanVelocity(BigDecimal avgMeanVelocity) {
    
    this.avgMeanVelocity = avgMeanVelocity;
    return this;
  }

   /**
   * The mean of &#x60;Rep.concentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * avg_mean_velocity&#x60;
   * @return avgMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgMeanVelocity() {
    return avgMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_AVG_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgMeanVelocity(BigDecimal avgMeanVelocity) {
    this.avgMeanVelocity = avgMeanVelocity;
  }


  public Set maxMeanVelocity(BigDecimal maxMeanVelocity) {
    
    this.maxMeanVelocity = maxMeanVelocity;
    return this;
  }

   /**
   * The max of &#x60;Rep.concentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * max_mean_velocity&#x60;
   * @return maxMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxMeanVelocity() {
    return maxMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MAX_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxMeanVelocity(BigDecimal maxMeanVelocity) {
    this.maxMeanVelocity = maxMeanVelocity;
  }


  public Set avgEccMeanVelocity(BigDecimal avgEccMeanVelocity) {
    
    this.avgEccMeanVelocity = avgEccMeanVelocity;
    return this;
  }

   /**
   * The mean of &#x60;Rep.eccentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * avg_ecc_mean_velocity&#x60;
   * @return avgEccMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgEccMeanVelocity() {
    return avgEccMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_AVG_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgEccMeanVelocity(BigDecimal avgEccMeanVelocity) {
    this.avgEccMeanVelocity = avgEccMeanVelocity;
  }


  public Set maxEccMeanVelocity(BigDecimal maxEccMeanVelocity) {
    
    this.maxEccMeanVelocity = maxEccMeanVelocity;
    return this;
  }

   /**
   * The max of &#x60;Rep.eccentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * max_ecc_mean_velocity&#x60;
   * @return maxEccMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxEccMeanVelocity() {
    return maxEccMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxEccMeanVelocity(BigDecimal maxEccMeanVelocity) {
    this.maxEccMeanVelocity = maxEccMeanVelocity;
  }


  public Set minEccMeanVelocity(BigDecimal minEccMeanVelocity) {
    
    this.minEccMeanVelocity = minEccMeanVelocity;
    return this;
  }

   /**
   * The min of &#x60;Rep.eccentric_mean_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * min_ecc_mean_velocity&#x60;
   * @return minEccMeanVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinEccMeanVelocity() {
    return minEccMeanVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MIN_ECC_MEAN_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinEccMeanVelocity(BigDecimal minEccMeanVelocity) {
    this.minEccMeanVelocity = minEccMeanVelocity;
  }


  public Set minPeakPower(BigDecimal minPeakPower) {
    
    this.minPeakPower = minPeakPower;
    return this;
  }

   /**
   * The minimum of &#x60;Rep.concentric_peak_power_per_mass_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * m/in * kg/lbs * min_peak_power&#x60;
   * @return minPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinPeakPower() {
    return minPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_MIN_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPeakPower(BigDecimal minPeakPower) {
    this.minPeakPower = minPeakPower;
  }


  public Set avgPeakPower(BigDecimal avgPeakPower) {
    
    this.avgPeakPower = avgPeakPower;
    return this;
  }

   /**
   * The mean of &#x60;Rep.concentric_peak_power_per_mass_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * m/in * kg/lbs * avg_peak_power&#x60;
   * @return avgPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgPeakPower() {
    return avgPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_AVG_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgPeakPower(BigDecimal avgPeakPower) {
    this.avgPeakPower = avgPeakPower;
  }


  public Set maxPeakPower(BigDecimal maxPeakPower) {
    
    this.maxPeakPower = maxPeakPower;
    return this;
  }

   /**
   * The max of &#x60;Rep.concentric_peak_power_per_mass_z * Set.weight&#x60; across all reps. Convert to watts: &#x60;m/in * m/in * kg/lbs * max_peak_power&#x60;
   * @return maxPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxPeakPower() {
    return maxPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPeakPower(BigDecimal maxPeakPower) {
    this.maxPeakPower = maxPeakPower;
  }


  public Set minPeakVelocity(BigDecimal minPeakVelocity) {
    
    this.minPeakVelocity = minPeakVelocity;
    return this;
  }

   /**
   * The minimum of &#x60;Rep.concentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * min_peak_velocity&#x60;
   * @return minPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinPeakVelocity() {
    return minPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MIN_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPeakVelocity(BigDecimal minPeakVelocity) {
    this.minPeakVelocity = minPeakVelocity;
  }


  public Set avgPeakVelocity(BigDecimal avgPeakVelocity) {
    
    this.avgPeakVelocity = avgPeakVelocity;
    return this;
  }

   /**
   * The mean of &#x60;Rep.concentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * avg_peak_velocity&#x60;
   * @return avgPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgPeakVelocity() {
    return avgPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_AVG_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgPeakVelocity(BigDecimal avgPeakVelocity) {
    this.avgPeakVelocity = avgPeakVelocity;
  }


  public Set maxPeakVelocity(BigDecimal maxPeakVelocity) {
    
    this.maxPeakVelocity = maxPeakVelocity;
    return this;
  }

   /**
   * The max of &#x60;Rep.concentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * max_peak_velocity&#x60;
   * @return maxPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxPeakVelocity() {
    return maxPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPeakVelocity(BigDecimal maxPeakVelocity) {
    this.maxPeakVelocity = maxPeakVelocity;
  }


  public Set avgEccPeakVelocity(BigDecimal avgEccPeakVelocity) {
    
    this.avgEccPeakVelocity = avgEccPeakVelocity;
    return this;
  }

   /**
   * The mean of &#x60;Rep.eccentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * avg_ecc_peak_velocity&#x60;
   * @return avgEccPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgEccPeakVelocity() {
    return avgEccPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_AVG_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgEccPeakVelocity(BigDecimal avgEccPeakVelocity) {
    this.avgEccPeakVelocity = avgEccPeakVelocity;
  }


  public Set maxEccPeakVelocity(BigDecimal maxEccPeakVelocity) {
    
    this.maxEccPeakVelocity = maxEccPeakVelocity;
    return this;
  }

   /**
   * The max of &#x60;Rep.eccentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * max_ecc_peak_velocity&#x60;
   * @return maxEccPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxEccPeakVelocity() {
    return maxEccPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxEccPeakVelocity(BigDecimal maxEccPeakVelocity) {
    this.maxEccPeakVelocity = maxEccPeakVelocity;
  }


  public Set minEccPeakVelocity(BigDecimal minEccPeakVelocity) {
    
    this.minEccPeakVelocity = minEccPeakVelocity;
    return this;
  }

   /**
   * The min of &#x60;Rep.eccentric_peak_velocity_z&#x60; across all reps. Convert to m/s: &#x60;m/in * min_ecc_peak_velocity&#x60;
   * @return minEccPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinEccPeakVelocity() {
    return minEccPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MIN_ECC_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinEccPeakVelocity(BigDecimal minEccPeakVelocity) {
    this.minEccPeakVelocity = minEccPeakVelocity;
  }


  public Set avgEccTime(BigDecimal avgEccTime) {
    
    this.avgEccTime = avgEccTime;
    return this;
  }

   /**
   * The mean of &#x60;(Rep.eccentric_end_time - Rep.eccentric_end_time)&#x60; across all reps. Convert to seconds: &#x60;us/s * avg_ecc_time&#x60;
   * @return avgEccTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgEccTime() {
    return avgEccTime;
  }


  @JsonProperty(JSON_PROPERTY_AVG_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgEccTime(BigDecimal avgEccTime) {
    this.avgEccTime = avgEccTime;
  }


  public Set maxEccTime(BigDecimal maxEccTime) {
    
    this.maxEccTime = maxEccTime;
    return this;
  }

   /**
   * The max of &#x60;(Rep.eccentric_end_time - Rep.eccentric_end_time)&#x60; across all reps. Convert to seconds: &#x60;us/s * max_ecc_time&#x60;
   * @return maxEccTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxEccTime() {
    return maxEccTime;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxEccTime(BigDecimal maxEccTime) {
    this.maxEccTime = maxEccTime;
  }


  public Set minEccTime(BigDecimal minEccTime) {
    
    this.minEccTime = minEccTime;
    return this;
  }

   /**
   * The min of &#x60;(Rep.eccentric_end_time - Rep.eccentric_end_time)&#x60; across all reps. Convert to seconds: &#x60;us/s * min_ecc_time&#x60;
   * @return minEccTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinEccTime() {
    return minEccTime;
  }


  @JsonProperty(JSON_PROPERTY_MIN_ECC_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinEccTime(BigDecimal minEccTime) {
    this.minEccTime = minEccTime;
  }


  public Set maxVelocityAt100Ms(BigDecimal maxVelocityAt100Ms) {
    
    this.maxVelocityAt100Ms = maxVelocityAt100Ms;
    return this;
  }

   /**
   * The maximum value of &#x60;Rep.concentric_velocity_at_100_ms&#x60; across all reps. Convert to m/s: &#x60;m/in * max_velocity_at_100_ms&#x60;
   * @return maxVelocityAt100Ms
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxVelocityAt100Ms() {
    return maxVelocityAt100Ms;
  }


  @JsonProperty(JSON_PROPERTY_MAX_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxVelocityAt100Ms(BigDecimal maxVelocityAt100Ms) {
    this.maxVelocityAt100Ms = maxVelocityAt100Ms;
  }


  public Set avgVelocityAt100Ms(BigDecimal avgVelocityAt100Ms) {
    
    this.avgVelocityAt100Ms = avgVelocityAt100Ms;
    return this;
  }

   /**
   * The average value of &#x60;Rep.concentric_velocity_at_100_ms&#x60; across all reps. Convert to m/s: &#x60;m/in * avg_velocity_at_100_ms&#x60;
   * @return avgVelocityAt100Ms
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgVelocityAt100Ms() {
    return avgVelocityAt100Ms;
  }


  @JsonProperty(JSON_PROPERTY_AVG_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgVelocityAt100Ms(BigDecimal avgVelocityAt100Ms) {
    this.avgVelocityAt100Ms = avgVelocityAt100Ms;
  }


  public Set minVelocityAt100Ms(BigDecimal minVelocityAt100Ms) {
    
    this.minVelocityAt100Ms = minVelocityAt100Ms;
    return this;
  }

   /**
   * The minimum value of &#x60;Rep.concentric_velocity_at_100_ms&#x60; across all reps. Convert to m/s: &#x60;m/in * min_velocity_at_100_ms&#x60;
   * @return minVelocityAt100Ms
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinVelocityAt100Ms() {
    return minVelocityAt100Ms;
  }


  @JsonProperty(JSON_PROPERTY_MIN_VELOCITY_AT100_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinVelocityAt100Ms(BigDecimal minVelocityAt100Ms) {
    this.minVelocityAt100Ms = minVelocityAt100Ms;
  }


  public Set maxTimeToPeakVelocity(BigDecimal maxTimeToPeakVelocity) {
    
    this.maxTimeToPeakVelocity = maxTimeToPeakVelocity;
    return this;
  }

   /**
   * The maximum value of &#x60;Rep.concentric_time_to_peak_velocity&#x60; across all reps.
   * @return maxTimeToPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxTimeToPeakVelocity() {
    return maxTimeToPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTimeToPeakVelocity(BigDecimal maxTimeToPeakVelocity) {
    this.maxTimeToPeakVelocity = maxTimeToPeakVelocity;
  }


  public Set avgTimeToPeakVelocity(BigDecimal avgTimeToPeakVelocity) {
    
    this.avgTimeToPeakVelocity = avgTimeToPeakVelocity;
    return this;
  }

   /**
   * The average value of &#x60;Rep.concentric_time_to_peak_velocity&#x60; across all reps.
   * @return avgTimeToPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgTimeToPeakVelocity() {
    return avgTimeToPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_AVG_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgTimeToPeakVelocity(BigDecimal avgTimeToPeakVelocity) {
    this.avgTimeToPeakVelocity = avgTimeToPeakVelocity;
  }


  public Set minTimeToPeakVelocity(BigDecimal minTimeToPeakVelocity) {
    
    this.minTimeToPeakVelocity = minTimeToPeakVelocity;
    return this;
  }

   /**
   * The minimum value of &#x60;Rep.concentric_time_to_peak_velocity&#x60; across all reps.
   * @return minTimeToPeakVelocity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinTimeToPeakVelocity() {
    return minTimeToPeakVelocity;
  }


  @JsonProperty(JSON_PROPERTY_MIN_TIME_TO_PEAK_VELOCITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinTimeToPeakVelocity(BigDecimal minTimeToPeakVelocity) {
    this.minTimeToPeakVelocity = minTimeToPeakVelocity;
  }


  public Set maxTimeToPeakPower(BigDecimal maxTimeToPeakPower) {
    
    this.maxTimeToPeakPower = maxTimeToPeakPower;
    return this;
  }

   /**
   * The maximum value of &#x60;Rep.concentric_time_to_peak_power&#x60; across all reps.
   * @return maxTimeToPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxTimeToPeakPower() {
    return maxTimeToPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTimeToPeakPower(BigDecimal maxTimeToPeakPower) {
    this.maxTimeToPeakPower = maxTimeToPeakPower;
  }


  public Set avgTimeToPeakPower(BigDecimal avgTimeToPeakPower) {
    
    this.avgTimeToPeakPower = avgTimeToPeakPower;
    return this;
  }

   /**
   * The average value of &#x60;Rep.concentric_time_to_peak_power&#x60; across all reps.
   * @return avgTimeToPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgTimeToPeakPower() {
    return avgTimeToPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_AVG_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgTimeToPeakPower(BigDecimal avgTimeToPeakPower) {
    this.avgTimeToPeakPower = avgTimeToPeakPower;
  }


  public Set minTimeToPeakPower(BigDecimal minTimeToPeakPower) {
    
    this.minTimeToPeakPower = minTimeToPeakPower;
    return this;
  }

   /**
   * The minimum value of &#x60;Rep.concentric_time_to_peak_power&#x60; across all reps.
   * @return minTimeToPeakPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinTimeToPeakPower() {
    return minTimeToPeakPower;
  }


  @JsonProperty(JSON_PROPERTY_MIN_TIME_TO_PEAK_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinTimeToPeakPower(BigDecimal minTimeToPeakPower) {
    this.minTimeToPeakPower = minTimeToPeakPower;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Set set = (Set) o;
    return Objects.equals(this.id, set.id) &&
        Objects.equals(this.createdAt, set.createdAt) &&
        Objects.equals(this.userId, set.userId) &&
        Objects.equals(this.orgId, set.orgId) &&
        Objects.equals(this.exerciseId, set.exerciseId) &&
        Objects.equals(this.weight, set.weight) &&
        Objects.equals(this.pct1rm, set.pct1rm) &&
        Objects.equals(this.tracked, set.tracked) &&
        Objects.equals(this.bandsUsed, set.bandsUsed) &&
        Objects.equals(this.chainsUsed, set.chainsUsed) &&
        Objects.equals(this.startTime, set.startTime) &&
        Objects.equals(this.endTime, set.endTime) &&
        Objects.equals(this.error, set.error) &&
        Objects.equals(this.reps, set.reps) &&
        Objects.equals(this.numReps, set.numReps) &&
        Objects.equals(this.numTrackedReps, set.numTrackedReps) &&
        Objects.equals(this.firstLimb, set.firstLimb) &&
        Objects.equals(this.limbPattern, set.limbPattern) &&
        Objects.equals(this.minMeanPower, set.minMeanPower) &&
        Objects.equals(this.avgMeanPower, set.avgMeanPower) &&
        Objects.equals(this.maxMeanPower, set.maxMeanPower) &&
        Objects.equals(this.minMeanVelocity, set.minMeanVelocity) &&
        Objects.equals(this.avgMeanVelocity, set.avgMeanVelocity) &&
        Objects.equals(this.maxMeanVelocity, set.maxMeanVelocity) &&
        Objects.equals(this.avgEccMeanVelocity, set.avgEccMeanVelocity) &&
        Objects.equals(this.maxEccMeanVelocity, set.maxEccMeanVelocity) &&
        Objects.equals(this.minEccMeanVelocity, set.minEccMeanVelocity) &&
        Objects.equals(this.minPeakPower, set.minPeakPower) &&
        Objects.equals(this.avgPeakPower, set.avgPeakPower) &&
        Objects.equals(this.maxPeakPower, set.maxPeakPower) &&
        Objects.equals(this.minPeakVelocity, set.minPeakVelocity) &&
        Objects.equals(this.avgPeakVelocity, set.avgPeakVelocity) &&
        Objects.equals(this.maxPeakVelocity, set.maxPeakVelocity) &&
        Objects.equals(this.avgEccPeakVelocity, set.avgEccPeakVelocity) &&
        Objects.equals(this.maxEccPeakVelocity, set.maxEccPeakVelocity) &&
        Objects.equals(this.minEccPeakVelocity, set.minEccPeakVelocity) &&
        Objects.equals(this.avgEccTime, set.avgEccTime) &&
        Objects.equals(this.maxEccTime, set.maxEccTime) &&
        Objects.equals(this.minEccTime, set.minEccTime) &&
        Objects.equals(this.maxVelocityAt100Ms, set.maxVelocityAt100Ms) &&
        Objects.equals(this.avgVelocityAt100Ms, set.avgVelocityAt100Ms) &&
        Objects.equals(this.minVelocityAt100Ms, set.minVelocityAt100Ms) &&
        Objects.equals(this.maxTimeToPeakVelocity, set.maxTimeToPeakVelocity) &&
        Objects.equals(this.avgTimeToPeakVelocity, set.avgTimeToPeakVelocity) &&
        Objects.equals(this.minTimeToPeakVelocity, set.minTimeToPeakVelocity) &&
        Objects.equals(this.maxTimeToPeakPower, set.maxTimeToPeakPower) &&
        Objects.equals(this.avgTimeToPeakPower, set.avgTimeToPeakPower) &&
        Objects.equals(this.minTimeToPeakPower, set.minTimeToPeakPower);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, userId, orgId, exerciseId, weight, pct1rm, tracked, bandsUsed, chainsUsed, startTime, endTime, error, reps, numReps, numTrackedReps, firstLimb, limbPattern, minMeanPower, avgMeanPower, maxMeanPower, minMeanVelocity, avgMeanVelocity, maxMeanVelocity, avgEccMeanVelocity, maxEccMeanVelocity, minEccMeanVelocity, minPeakPower, avgPeakPower, maxPeakPower, minPeakVelocity, avgPeakVelocity, maxPeakVelocity, avgEccPeakVelocity, maxEccPeakVelocity, minEccPeakVelocity, avgEccTime, maxEccTime, minEccTime, maxVelocityAt100Ms, avgVelocityAt100Ms, minVelocityAt100Ms, maxTimeToPeakVelocity, avgTimeToPeakVelocity, minTimeToPeakVelocity, maxTimeToPeakPower, avgTimeToPeakPower, minTimeToPeakPower);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Set {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    exerciseId: ").append(toIndentedString(exerciseId)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    pct1rm: ").append(toIndentedString(pct1rm)).append("\n");
    sb.append("    tracked: ").append(toIndentedString(tracked)).append("\n");
    sb.append("    bandsUsed: ").append(toIndentedString(bandsUsed)).append("\n");
    sb.append("    chainsUsed: ").append(toIndentedString(chainsUsed)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    reps: ").append(toIndentedString(reps)).append("\n");
    sb.append("    numReps: ").append(toIndentedString(numReps)).append("\n");
    sb.append("    numTrackedReps: ").append(toIndentedString(numTrackedReps)).append("\n");
    sb.append("    firstLimb: ").append(toIndentedString(firstLimb)).append("\n");
    sb.append("    limbPattern: ").append(toIndentedString(limbPattern)).append("\n");
    sb.append("    minMeanPower: ").append(toIndentedString(minMeanPower)).append("\n");
    sb.append("    avgMeanPower: ").append(toIndentedString(avgMeanPower)).append("\n");
    sb.append("    maxMeanPower: ").append(toIndentedString(maxMeanPower)).append("\n");
    sb.append("    minMeanVelocity: ").append(toIndentedString(minMeanVelocity)).append("\n");
    sb.append("    avgMeanVelocity: ").append(toIndentedString(avgMeanVelocity)).append("\n");
    sb.append("    maxMeanVelocity: ").append(toIndentedString(maxMeanVelocity)).append("\n");
    sb.append("    avgEccMeanVelocity: ").append(toIndentedString(avgEccMeanVelocity)).append("\n");
    sb.append("    maxEccMeanVelocity: ").append(toIndentedString(maxEccMeanVelocity)).append("\n");
    sb.append("    minEccMeanVelocity: ").append(toIndentedString(minEccMeanVelocity)).append("\n");
    sb.append("    minPeakPower: ").append(toIndentedString(minPeakPower)).append("\n");
    sb.append("    avgPeakPower: ").append(toIndentedString(avgPeakPower)).append("\n");
    sb.append("    maxPeakPower: ").append(toIndentedString(maxPeakPower)).append("\n");
    sb.append("    minPeakVelocity: ").append(toIndentedString(minPeakVelocity)).append("\n");
    sb.append("    avgPeakVelocity: ").append(toIndentedString(avgPeakVelocity)).append("\n");
    sb.append("    maxPeakVelocity: ").append(toIndentedString(maxPeakVelocity)).append("\n");
    sb.append("    avgEccPeakVelocity: ").append(toIndentedString(avgEccPeakVelocity)).append("\n");
    sb.append("    maxEccPeakVelocity: ").append(toIndentedString(maxEccPeakVelocity)).append("\n");
    sb.append("    minEccPeakVelocity: ").append(toIndentedString(minEccPeakVelocity)).append("\n");
    sb.append("    avgEccTime: ").append(toIndentedString(avgEccTime)).append("\n");
    sb.append("    maxEccTime: ").append(toIndentedString(maxEccTime)).append("\n");
    sb.append("    minEccTime: ").append(toIndentedString(minEccTime)).append("\n");
    sb.append("    maxVelocityAt100Ms: ").append(toIndentedString(maxVelocityAt100Ms)).append("\n");
    sb.append("    avgVelocityAt100Ms: ").append(toIndentedString(avgVelocityAt100Ms)).append("\n");
    sb.append("    minVelocityAt100Ms: ").append(toIndentedString(minVelocityAt100Ms)).append("\n");
    sb.append("    maxTimeToPeakVelocity: ").append(toIndentedString(maxTimeToPeakVelocity)).append("\n");
    sb.append("    avgTimeToPeakVelocity: ").append(toIndentedString(avgTimeToPeakVelocity)).append("\n");
    sb.append("    minTimeToPeakVelocity: ").append(toIndentedString(minTimeToPeakVelocity)).append("\n");
    sb.append("    maxTimeToPeakPower: ").append(toIndentedString(maxTimeToPeakPower)).append("\n");
    sb.append("    avgTimeToPeakPower: ").append(toIndentedString(avgTimeToPeakPower)).append("\n");
    sb.append("    minTimeToPeakPower: ").append(toIndentedString(minTimeToPeakPower)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

