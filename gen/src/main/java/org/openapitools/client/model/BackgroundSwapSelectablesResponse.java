/*
 * CIC-NEW
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BackgroundSwapSelectablesResponseBackgrounds1Inner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BackgroundSwapSelectablesResponse
 */
@JsonPropertyOrder({
  BackgroundSwapSelectablesResponse.JSON_PROPERTY_BACKGROUNDS,
  BackgroundSwapSelectablesResponse.JSON_PROPERTY_APPLICABLE
})
@JsonTypeName("backgroundSwapSelectablesResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:13:48.943071954Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class BackgroundSwapSelectablesResponse {
  public static final String JSON_PROPERTY_BACKGROUNDS = "backgrounds";
  private List<BackgroundSwapSelectablesResponseBackgrounds1Inner> backgrounds;

  public static final String JSON_PROPERTY_APPLICABLE = "applicable";
  private List<String> applicable;

  public BackgroundSwapSelectablesResponse() {
  }

  public BackgroundSwapSelectablesResponse backgrounds(List<BackgroundSwapSelectablesResponseBackgrounds1Inner> backgrounds) {
    
    this.backgrounds = backgrounds;
    return this;
  }

  public BackgroundSwapSelectablesResponse addBackgroundsItem(BackgroundSwapSelectablesResponseBackgrounds1Inner backgroundsItem) {
    if (this.backgrounds == null) {
      this.backgrounds = new ArrayList<>();
    }
    this.backgrounds.add(backgroundsItem);
    return this;
  }

   /**
   * Get backgrounds
   * @return backgrounds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKGROUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BackgroundSwapSelectablesResponseBackgrounds1Inner> getBackgrounds() {
    return backgrounds;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackgrounds(List<BackgroundSwapSelectablesResponseBackgrounds1Inner> backgrounds) {
    this.backgrounds = backgrounds;
  }


  public BackgroundSwapSelectablesResponse applicable(List<String> applicable) {
    
    this.applicable = applicable;
    return this;
  }

  public BackgroundSwapSelectablesResponse addApplicableItem(String applicableItem) {
    if (this.applicable == null) {
      this.applicable = new ArrayList<>();
    }
    this.applicable.add(applicableItem);
    return this;
  }

   /**
   * Get applicable
   * @return applicable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getApplicable() {
    return applicable;
  }


  @JsonProperty(JSON_PROPERTY_APPLICABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicable(List<String> applicable) {
    this.applicable = applicable;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackgroundSwapSelectablesResponse backgroundSwapSelectablesResponse = (BackgroundSwapSelectablesResponse) o;
    return Objects.equals(this.backgrounds, backgroundSwapSelectablesResponse.backgrounds) &&
        Objects.equals(this.applicable, backgroundSwapSelectablesResponse.applicable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgrounds, applicable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackgroundSwapSelectablesResponse {\n");
    sb.append("    backgrounds: ").append(toIndentedString(backgrounds)).append("\n");
    sb.append("    applicable: ").append(toIndentedString(applicable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

