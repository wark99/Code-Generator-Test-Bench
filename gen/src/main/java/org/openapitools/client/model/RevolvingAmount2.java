/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RevolvingAmount2
 */
@JsonPropertyOrder({
  RevolvingAmount2.JSON_PROPERTY_CREDIT_LIMIT,
  RevolvingAmount2.JSON_PROPERTY_CURRENT_BALANCE,
  RevolvingAmount2.JSON_PROPERTY_HIGH_CREDIT,
  RevolvingAmount2.JSON_PROPERTY_MONTHLY_PAYMENT,
  RevolvingAmount2.JSON_PROPERTY_PAST_DUE,
  RevolvingAmount2.JSON_PROPERTY_PERCENT_AVAILABLE_CREDIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RevolvingAmount2 {
  public static final String JSON_PROPERTY_CREDIT_LIMIT = "creditLimit";
  private String creditLimit;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private String currentBalance;

  public static final String JSON_PROPERTY_HIGH_CREDIT = "highCredit";
  private String highCredit;

  public static final String JSON_PROPERTY_MONTHLY_PAYMENT = "monthlyPayment";
  private String monthlyPayment;

  public static final String JSON_PROPERTY_PAST_DUE = "pastDue";
  private String pastDue;

  public static final String JSON_PROPERTY_PERCENT_AVAILABLE_CREDIT = "percentAvailableCredit";
  private String percentAvailableCredit;

  public RevolvingAmount2() {
  }

  public RevolvingAmount2 creditLimit(String creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditLimit() {
    return creditLimit;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditLimit(String creditLimit) {
    this.creditLimit = creditLimit;
  }


  public RevolvingAmount2 currentBalance(String currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(String currentBalance) {
    this.currentBalance = currentBalance;
  }


  public RevolvingAmount2 highCredit(String highCredit) {
    
    this.highCredit = highCredit;
    return this;
  }

   /**
   * Get highCredit
   * @return highCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHighCredit() {
    return highCredit;
  }


  @JsonProperty(JSON_PROPERTY_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighCredit(String highCredit) {
    this.highCredit = highCredit;
  }


  public RevolvingAmount2 monthlyPayment(String monthlyPayment) {
    
    this.monthlyPayment = monthlyPayment;
    return this;
  }

   /**
   * Get monthlyPayment
   * @return monthlyPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTHLY_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMonthlyPayment() {
    return monthlyPayment;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthlyPayment(String monthlyPayment) {
    this.monthlyPayment = monthlyPayment;
  }


  public RevolvingAmount2 pastDue(String pastDue) {
    
    this.pastDue = pastDue;
    return this;
  }

   /**
   * Get pastDue
   * @return pastDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPastDue() {
    return pastDue;
  }


  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPastDue(String pastDue) {
    this.pastDue = pastDue;
  }


  public RevolvingAmount2 percentAvailableCredit(String percentAvailableCredit) {
    
    this.percentAvailableCredit = percentAvailableCredit;
    return this;
  }

   /**
   * Get percentAvailableCredit
   * @return percentAvailableCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERCENT_AVAILABLE_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPercentAvailableCredit() {
    return percentAvailableCredit;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT_AVAILABLE_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentAvailableCredit(String percentAvailableCredit) {
    this.percentAvailableCredit = percentAvailableCredit;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RevolvingAmount2 revolvingAmount2 = (RevolvingAmount2) o;
    return Objects.equals(this.creditLimit, revolvingAmount2.creditLimit) &&
        Objects.equals(this.currentBalance, revolvingAmount2.currentBalance) &&
        Objects.equals(this.highCredit, revolvingAmount2.highCredit) &&
        Objects.equals(this.monthlyPayment, revolvingAmount2.monthlyPayment) &&
        Objects.equals(this.pastDue, revolvingAmount2.pastDue) &&
        Objects.equals(this.percentAvailableCredit, revolvingAmount2.percentAvailableCredit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditLimit, currentBalance, highCredit, monthlyPayment, pastDue, percentAvailableCredit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RevolvingAmount2 {\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    highCredit: ").append(toIndentedString(highCredit)).append("\n");
    sb.append("    monthlyPayment: ").append(toIndentedString(monthlyPayment)).append("\n");
    sb.append("    pastDue: ").append(toIndentedString(pastDue)).append("\n");
    sb.append("    percentAvailableCredit: ").append(toIndentedString(percentAvailableCredit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

