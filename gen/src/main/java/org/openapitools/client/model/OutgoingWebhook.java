/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OutgoingWebhook
 */
@JsonPropertyOrder({
  OutgoingWebhook.JSON_PROPERTY_ID,
  OutgoingWebhook.JSON_PROPERTY_CREATE_AT,
  OutgoingWebhook.JSON_PROPERTY_UPDATE_AT,
  OutgoingWebhook.JSON_PROPERTY_DELETE_AT,
  OutgoingWebhook.JSON_PROPERTY_CREATOR_ID,
  OutgoingWebhook.JSON_PROPERTY_TEAM_ID,
  OutgoingWebhook.JSON_PROPERTY_CHANNEL_ID,
  OutgoingWebhook.JSON_PROPERTY_DESCRIPTION,
  OutgoingWebhook.JSON_PROPERTY_DISPLAY_NAME,
  OutgoingWebhook.JSON_PROPERTY_TRIGGER_WORDS,
  OutgoingWebhook.JSON_PROPERTY_TRIGGER_WHEN,
  OutgoingWebhook.JSON_PROPERTY_CALLBACK_URLS,
  OutgoingWebhook.JSON_PROPERTY_CONTENT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class OutgoingWebhook {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_AT = "create_at";
  private Long createAt;

  public static final String JSON_PROPERTY_UPDATE_AT = "update_at";
  private Long updateAt;

  public static final String JSON_PROPERTY_DELETE_AT = "delete_at";
  private Long deleteAt;

  public static final String JSON_PROPERTY_CREATOR_ID = "creator_id";
  private String creatorId;

  public static final String JSON_PROPERTY_TEAM_ID = "team_id";
  private String teamId;

  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private String displayName;

  public static final String JSON_PROPERTY_TRIGGER_WORDS = "trigger_words";
  private List<String> triggerWords;

  public static final String JSON_PROPERTY_TRIGGER_WHEN = "trigger_when";
  private Integer triggerWhen;

  public static final String JSON_PROPERTY_CALLBACK_URLS = "callback_urls";
  private List<String> callbackUrls;

  public static final String JSON_PROPERTY_CONTENT_TYPE = "content_type";
  private String contentType = "application/x-www-form-urlencoded";

  public OutgoingWebhook() {
  }

  public OutgoingWebhook id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this outgoing webhook
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public OutgoingWebhook createAt(Long createAt) {
    
    this.createAt = createAt;
    return this;
  }

   /**
   * The time in milliseconds a outgoing webhook was created
   * @return createAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreateAt() {
    return createAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateAt(Long createAt) {
    this.createAt = createAt;
  }


  public OutgoingWebhook updateAt(Long updateAt) {
    
    this.updateAt = updateAt;
    return this;
  }

   /**
   * The time in milliseconds a outgoing webhook was last updated
   * @return updateAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUpdateAt() {
    return updateAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateAt(Long updateAt) {
    this.updateAt = updateAt;
  }


  public OutgoingWebhook deleteAt(Long deleteAt) {
    
    this.deleteAt = deleteAt;
    return this;
  }

   /**
   * The time in milliseconds a outgoing webhook was deleted
   * @return deleteAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDeleteAt() {
    return deleteAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteAt(Long deleteAt) {
    this.deleteAt = deleteAt;
  }


  public OutgoingWebhook creatorId(String creatorId) {
    
    this.creatorId = creatorId;
    return this;
  }

   /**
   * The Id of the user who created the webhook
   * @return creatorId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatorId() {
    return creatorId;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatorId(String creatorId) {
    this.creatorId = creatorId;
  }


  public OutgoingWebhook teamId(String teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * The ID of the team that the webhook watchs
   * @return teamId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }


  public OutgoingWebhook channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The ID of a public channel that the webhook watchs
   * @return channelId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public OutgoingWebhook description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description for this outgoing webhook
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public OutgoingWebhook displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name for this outgoing webhook
   * @return displayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public OutgoingWebhook triggerWords(List<String> triggerWords) {
    
    this.triggerWords = triggerWords;
    return this;
  }

  public OutgoingWebhook addTriggerWordsItem(String triggerWordsItem) {
    if (this.triggerWords == null) {
      this.triggerWords = new ArrayList<>();
    }
    this.triggerWords.add(triggerWordsItem);
    return this;
  }

   /**
   * List of words for the webhook to trigger on
   * @return triggerWords
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIGGER_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTriggerWords() {
    return triggerWords;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerWords(List<String> triggerWords) {
    this.triggerWords = triggerWords;
  }


  public OutgoingWebhook triggerWhen(Integer triggerWhen) {
    
    this.triggerWhen = triggerWhen;
    return this;
  }

   /**
   * When to trigger the webhook, &#x60;0&#x60; when a trigger word is present at all and &#x60;1&#x60; if the message starts with a trigger word
   * @return triggerWhen
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIGGER_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTriggerWhen() {
    return triggerWhen;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerWhen(Integer triggerWhen) {
    this.triggerWhen = triggerWhen;
  }


  public OutgoingWebhook callbackUrls(List<String> callbackUrls) {
    
    this.callbackUrls = callbackUrls;
    return this;
  }

  public OutgoingWebhook addCallbackUrlsItem(String callbackUrlsItem) {
    if (this.callbackUrls == null) {
      this.callbackUrls = new ArrayList<>();
    }
    this.callbackUrls.add(callbackUrlsItem);
    return this;
  }

   /**
   * The URLs to POST the payloads to when the webhook is triggered
   * @return callbackUrls
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CALLBACK_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCallbackUrls() {
    return callbackUrls;
  }


  @JsonProperty(JSON_PROPERTY_CALLBACK_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
  }


  public OutgoingWebhook contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * The format to POST the data in, either &#x60;application/json&#x60; or &#x60;application/x-www-form-urlencoded&#x60;
   * @return contentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutgoingWebhook outgoingWebhook = (OutgoingWebhook) o;
    return Objects.equals(this.id, outgoingWebhook.id) &&
        Objects.equals(this.createAt, outgoingWebhook.createAt) &&
        Objects.equals(this.updateAt, outgoingWebhook.updateAt) &&
        Objects.equals(this.deleteAt, outgoingWebhook.deleteAt) &&
        Objects.equals(this.creatorId, outgoingWebhook.creatorId) &&
        Objects.equals(this.teamId, outgoingWebhook.teamId) &&
        Objects.equals(this.channelId, outgoingWebhook.channelId) &&
        Objects.equals(this.description, outgoingWebhook.description) &&
        Objects.equals(this.displayName, outgoingWebhook.displayName) &&
        Objects.equals(this.triggerWords, outgoingWebhook.triggerWords) &&
        Objects.equals(this.triggerWhen, outgoingWebhook.triggerWhen) &&
        Objects.equals(this.callbackUrls, outgoingWebhook.callbackUrls) &&
        Objects.equals(this.contentType, outgoingWebhook.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createAt, updateAt, deleteAt, creatorId, teamId, channelId, description, displayName, triggerWords, triggerWhen, callbackUrls, contentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutgoingWebhook {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("    updateAt: ").append(toIndentedString(updateAt)).append("\n");
    sb.append("    deleteAt: ").append(toIndentedString(deleteAt)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    triggerWords: ").append(toIndentedString(triggerWords)).append("\n");
    sb.append("    triggerWhen: ").append(toIndentedString(triggerWhen)).append("\n");
    sb.append("    callbackUrls: ").append(toIndentedString(callbackUrls)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

