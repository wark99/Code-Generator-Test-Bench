/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Addr;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.Period;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateNormProcessScheme
 */
@JsonPropertyOrder({
  CreateNormProcessScheme.JSON_PROPERTY_PROCESS_CLASS,
  CreateNormProcessScheme.JSON_PROPERTY_ADDR,
  CreateNormProcessScheme.JSON_PROPERTY_GROUP,
  CreateNormProcessScheme.JSON_PROPERTY_CONSUMPTION_GROUP,
  CreateNormProcessScheme.JSON_PROPERTY_PERIOD,
  CreateNormProcessScheme.JSON_PROPERTY_TZ,
  CreateNormProcessScheme.JSON_PROPERTY_LAST_PERIOD,
  CreateNormProcessScheme.JSON_PROPERTY_ONLY_SUC
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateNormProcessScheme {
  public static final String JSON_PROPERTY_PROCESS_CLASS = "process_class";
  private Object processClass = null;

  public static final String JSON_PROPERTY_ADDR = "addr";
  private Addr addr;

  public static final String JSON_PROPERTY_GROUP = "group";
  private Group group;

  public static final String JSON_PROPERTY_CONSUMPTION_GROUP = "consumption_group";
  private Integer consumptionGroup;

  public static final String JSON_PROPERTY_PERIOD = "period";
  private Period period = Period.NUMBER_0;

  public static final String JSON_PROPERTY_TZ = "tz";
  private String tz = "Europe/Moscow";

  public static final String JSON_PROPERTY_LAST_PERIOD = "last_period";
  private Boolean lastPeriod = false;

  public static final String JSON_PROPERTY_ONLY_SUC = "only_suc";
  private Boolean onlySuc = true;

  public CreateNormProcessScheme() {
  }

  public CreateNormProcessScheme processClass(Object processClass) {
    
    this.processClass = processClass;
    return this;
  }

   /**
   * Get processClass
   * @return processClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getProcessClass() {
    return processClass;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessClass(Object processClass) {
    this.processClass = processClass;
  }


  public CreateNormProcessScheme addr(Addr addr) {
    
    this.addr = addr;
    return this;
  }

   /**
   * Get addr
   * @return addr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Addr getAddr() {
    return addr;
  }


  @JsonProperty(JSON_PROPERTY_ADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddr(Addr addr) {
    this.addr = addr;
  }


  public CreateNormProcessScheme group(Group group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Group getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(Group group) {
    this.group = group;
  }


  public CreateNormProcessScheme consumptionGroup(Integer consumptionGroup) {
    
    this.consumptionGroup = consumptionGroup;
    return this;
  }

   /**
   * consumption group id
   * @return consumptionGroup
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getConsumptionGroup() {
    return consumptionGroup;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumptionGroup(Integer consumptionGroup) {
    this.consumptionGroup = consumptionGroup;
  }


  public CreateNormProcessScheme period(Period period) {
    
    this.period = period;
    return this;
  }

   /**
   * Period
   * @return period
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Period getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(Period period) {
    this.period = period;
  }


  public CreateNormProcessScheme tz(String tz) {
    
    this.tz = tz;
    return this;
  }

   /**
   * time zone
   * @return tz
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTz() {
    return tz;
  }


  @JsonProperty(JSON_PROPERTY_TZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTz(String tz) {
    this.tz = tz;
  }


  public CreateNormProcessScheme lastPeriod(Boolean lastPeriod) {
    
    this.lastPeriod = lastPeriod;
    return this;
  }

   /**
   * Process run for previous period
   * @return lastPeriod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLastPeriod() {
    return lastPeriod;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPeriod(Boolean lastPeriod) {
    this.lastPeriod = lastPeriod;
  }


  public CreateNormProcessScheme onlySuc(Boolean onlySuc) {
    
    this.onlySuc = onlySuc;
    return this;
  }

   /**
   * Overflow only
   * @return onlySuc
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONLY_SUC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOnlySuc() {
    return onlySuc;
  }


  @JsonProperty(JSON_PROPERTY_ONLY_SUC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnlySuc(Boolean onlySuc) {
    this.onlySuc = onlySuc;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNormProcessScheme createNormProcessScheme = (CreateNormProcessScheme) o;
    return Objects.equals(this.processClass, createNormProcessScheme.processClass) &&
        Objects.equals(this.addr, createNormProcessScheme.addr) &&
        Objects.equals(this.group, createNormProcessScheme.group) &&
        Objects.equals(this.consumptionGroup, createNormProcessScheme.consumptionGroup) &&
        Objects.equals(this.period, createNormProcessScheme.period) &&
        Objects.equals(this.tz, createNormProcessScheme.tz) &&
        Objects.equals(this.lastPeriod, createNormProcessScheme.lastPeriod) &&
        Objects.equals(this.onlySuc, createNormProcessScheme.onlySuc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processClass, addr, group, consumptionGroup, period, tz, lastPeriod, onlySuc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNormProcessScheme {\n");
    sb.append("    processClass: ").append(toIndentedString(processClass)).append("\n");
    sb.append("    addr: ").append(toIndentedString(addr)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    consumptionGroup: ").append(toIndentedString(consumptionGroup)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    tz: ").append(toIndentedString(tz)).append("\n");
    sb.append("    lastPeriod: ").append(toIndentedString(lastPeriod)).append("\n");
    sb.append("    onlySuc: ").append(toIndentedString(onlySuc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

