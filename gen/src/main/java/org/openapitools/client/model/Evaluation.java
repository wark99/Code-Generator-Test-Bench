/*
 * Тестовое задание
 * API для работы с учениками, занятиями и оценками
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Evaluation
 */
@JsonPropertyOrder({
  Evaluation.JSON_PROPERTY_ID,
  Evaluation.JSON_PROPERTY_USER_ID,
  Evaluation.JSON_PROPERTY_LESSON_ID,
  Evaluation.JSON_PROPERTY_GRADE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:37.454999481Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Evaluation {
  public static final String JSON_PROPERTY_ID = "id";
  private BigDecimal id;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private Integer userId;

  public static final String JSON_PROPERTY_LESSON_ID = "lessonId";
  private Integer lessonId;

  public static final String JSON_PROPERTY_GRADE = "grade";
  private Integer grade;

  public Evaluation() {
  }

  public Evaluation id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(BigDecimal id) {
    this.id = id;
  }


  public Evaluation userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public Evaluation lessonId(Integer lessonId) {
    
    this.lessonId = lessonId;
    return this;
  }

   /**
   * Get lessonId
   * @return lessonId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LESSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLessonId() {
    return lessonId;
  }


  @JsonProperty(JSON_PROPERTY_LESSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLessonId(Integer lessonId) {
    this.lessonId = lessonId;
  }


  public Evaluation grade(Integer grade) {
    
    this.grade = grade;
    return this;
  }

   /**
   * Get grade
   * minimum: 1
   * maximum: 5
   * @return grade
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGrade() {
    return grade;
  }


  @JsonProperty(JSON_PROPERTY_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrade(Integer grade) {
    this.grade = grade;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Evaluation evaluation = (Evaluation) o;
    return Objects.equals(this.id, evaluation.id) &&
        Objects.equals(this.userId, evaluation.userId) &&
        Objects.equals(this.lessonId, evaluation.lessonId) &&
        Objects.equals(this.grade, evaluation.grade);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, lessonId, grade);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Evaluation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    lessonId: ").append(toIndentedString(lessonId)).append("\n");
    sb.append("    grade: ").append(toIndentedString(grade)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

