/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyLinkedEmployeeResponse
 */
@JsonPropertyOrder({
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_ID,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_FIRST_NAME,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_LAST_NAME,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_EMAIL,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_TELEPHONE,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_ROLE,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_TITLE,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_CALLING_NAME,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_JOB_TITLE,
  PropertyLinkedEmployeeResponse.JSON_PROPERTY_URL_TO_PROFILE_PICTURE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyLinkedEmployeeResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private String lastName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_TELEPHONE = "telephone";
  private String telephone;

  /**
   * 1 &#x3D; Property manager, 2 &#x3D; Valuer, 3 &#x3D; Negotiator
   */
  public enum RoleEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    RoleEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(Integer value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleEnum role;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CALLING_NAME = "calling_name";
  private String callingName;

  public static final String JSON_PROPERTY_JOB_TITLE = "job_title";
  private String jobTitle;

  public static final String JSON_PROPERTY_URL_TO_PROFILE_PICTURE = "url_to_profile_picture";
  private String urlToProfilePicture;

  public PropertyLinkedEmployeeResponse() {
  }

  public PropertyLinkedEmployeeResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public PropertyLinkedEmployeeResponse firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public PropertyLinkedEmployeeResponse lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public PropertyLinkedEmployeeResponse email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public PropertyLinkedEmployeeResponse telephone(String telephone) {
    
    this.telephone = telephone;
    return this;
  }

   /**
   * Get telephone
   * @return telephone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TELEPHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTelephone() {
    return telephone;
  }


  @JsonProperty(JSON_PROPERTY_TELEPHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTelephone(String telephone) {
    this.telephone = telephone;
  }


  public PropertyLinkedEmployeeResponse role(RoleEnum role) {
    
    this.role = role;
    return this;
  }

   /**
   * 1 &#x3D; Property manager, 2 &#x3D; Valuer, 3 &#x3D; Negotiator
   * @return role
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public PropertyLinkedEmployeeResponse title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public PropertyLinkedEmployeeResponse callingName(String callingName) {
    
    this.callingName = callingName;
    return this;
  }

   /**
   * Name the employee would prefer to be known as
   * @return callingName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CALLING_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCallingName() {
    return callingName;
  }


  @JsonProperty(JSON_PROPERTY_CALLING_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallingName(String callingName) {
    this.callingName = callingName;
  }


  public PropertyLinkedEmployeeResponse jobTitle(String jobTitle) {
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobTitle() {
    return jobTitle;
  }


  @JsonProperty(JSON_PROPERTY_JOB_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public PropertyLinkedEmployeeResponse urlToProfilePicture(String urlToProfilePicture) {
    
    this.urlToProfilePicture = urlToProfilePicture;
    return this;
  }

   /**
   * URL which links to the profile picture of the employee
   * @return urlToProfilePicture
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL_TO_PROFILE_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrlToProfilePicture() {
    return urlToProfilePicture;
  }


  @JsonProperty(JSON_PROPERTY_URL_TO_PROFILE_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlToProfilePicture(String urlToProfilePicture) {
    this.urlToProfilePicture = urlToProfilePicture;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyLinkedEmployeeResponse propertyLinkedEmployeeResponse = (PropertyLinkedEmployeeResponse) o;
    return Objects.equals(this.id, propertyLinkedEmployeeResponse.id) &&
        Objects.equals(this.firstName, propertyLinkedEmployeeResponse.firstName) &&
        Objects.equals(this.lastName, propertyLinkedEmployeeResponse.lastName) &&
        Objects.equals(this.email, propertyLinkedEmployeeResponse.email) &&
        Objects.equals(this.telephone, propertyLinkedEmployeeResponse.telephone) &&
        Objects.equals(this.role, propertyLinkedEmployeeResponse.role) &&
        Objects.equals(this.title, propertyLinkedEmployeeResponse.title) &&
        Objects.equals(this.callingName, propertyLinkedEmployeeResponse.callingName) &&
        Objects.equals(this.jobTitle, propertyLinkedEmployeeResponse.jobTitle) &&
        Objects.equals(this.urlToProfilePicture, propertyLinkedEmployeeResponse.urlToProfilePicture);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, email, telephone, role, title, callingName, jobTitle, urlToProfilePicture);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyLinkedEmployeeResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    telephone: ").append(toIndentedString(telephone)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    callingName: ").append(toIndentedString(callingName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    urlToProfilePicture: ").append(toIndentedString(urlToProfilePicture)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

