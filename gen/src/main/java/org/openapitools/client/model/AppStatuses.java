/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppStatus;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The response for the Get App Registration Status API returns an array of status objects.
 */
@JsonPropertyOrder({
  AppStatuses.JSON_PROPERTY_TOTAL_RECORDS,
  AppStatuses.JSON_PROPERTY_TOTAL_PAGES,
  AppStatuses.JSON_PROPERTY_PAGE_NUMBER,
  AppStatuses.JSON_PROPERTY_NUMBER_OF_RECORDS_PER_PAGE,
  AppStatuses.JSON_PROPERTY_APPLICATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:50:32.834459740Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AppStatuses {
  public static final String JSON_PROPERTY_TOTAL_RECORDS = "totalRecords";
  private Long totalRecords;

  public static final String JSON_PROPERTY_TOTAL_PAGES = "totalPages";
  private Long totalPages;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  private Long pageNumber;

  public static final String JSON_PROPERTY_NUMBER_OF_RECORDS_PER_PAGE = "numberOfRecordsPerPage";
  private Long numberOfRecordsPerPage;

  public static final String JSON_PROPERTY_APPLICATIONS = "applications";
  private List<AppStatus> applications = new ArrayList<>();

  public AppStatuses() {
  }

  public AppStatuses totalRecords(Long totalRecords) {
    
    this.totalRecords = totalRecords;
    return this;
  }

   /**
   * The total number of results
   * @return totalRecords
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotalRecords() {
    return totalRecords;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalRecords(Long totalRecords) {
    this.totalRecords = totalRecords;
  }


  public AppStatuses totalPages(Long totalPages) {
    
    this.totalPages = totalPages;
    return this;
  }

   /**
   * The total number of pages
   * @return totalPages
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_PAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotalPages() {
    return totalPages;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalPages(Long totalPages) {
    this.totalPages = totalPages;
  }


  public AppStatuses pageNumber(Long pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * The current page number
   * @return pageNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPageNumber() {
    return pageNumber;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }


  public AppStatuses numberOfRecordsPerPage(Long numberOfRecordsPerPage) {
    
    this.numberOfRecordsPerPage = numberOfRecordsPerPage;
    return this;
  }

   /**
   * The number of results per page
   * @return numberOfRecordsPerPage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RECORDS_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getNumberOfRecordsPerPage() {
    return numberOfRecordsPerPage;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RECORDS_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfRecordsPerPage(Long numberOfRecordsPerPage) {
    this.numberOfRecordsPerPage = numberOfRecordsPerPage;
  }


  public AppStatuses applications(List<AppStatus> applications) {
    
    this.applications = applications;
    return this;
  }

  public AppStatuses addApplicationsItem(AppStatus applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

   /**
   * A list of applications with their statuses
   * @return applications
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AppStatus> getApplications() {
    return applications;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplications(List<AppStatus> applications) {
    this.applications = applications;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStatuses appStatuses = (AppStatuses) o;
    return Objects.equals(this.totalRecords, appStatuses.totalRecords) &&
        Objects.equals(this.totalPages, appStatuses.totalPages) &&
        Objects.equals(this.pageNumber, appStatuses.pageNumber) &&
        Objects.equals(this.numberOfRecordsPerPage, appStatuses.numberOfRecordsPerPage) &&
        Objects.equals(this.applications, appStatuses.applications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalRecords, totalPages, pageNumber, numberOfRecordsPerPage, applications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStatuses {\n");
    sb.append("    totalRecords: ").append(toIndentedString(totalRecords)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    numberOfRecordsPerPage: ").append(toIndentedString(numberOfRecordsPerPage)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

