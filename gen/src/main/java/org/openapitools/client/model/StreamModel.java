/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes a history of repeated transactions between the same parties.
 */
@JsonPropertyOrder({
  StreamModel.JSON_PROPERTY_CADENCE,
  StreamModel.JSON_PROPERTY_ID,
  StreamModel.JSON_PROPERTY_PAYEE,
  StreamModel.JSON_PROPERTY_PAYOR,
  StreamModel.JSON_PROPERTY_RECENCY,
  StreamModel.JSON_PROPERTY_TRANSACTION_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StreamModel {
  public static final String JSON_PROPERTY_CADENCE = "cadence";
  private Integer cadence;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PAYEE = "payee";
  private String payee;

  public static final String JSON_PROPERTY_PAYOR = "payor";
  private String payor;

  public static final String JSON_PROPERTY_RECENCY = "recency";
  private Integer recency;

  public static final String JSON_PROPERTY_TRANSACTION_IDS = "transactionIds";
  private List<String> transactionIds = new ArrayList<>();

  public StreamModel() {
  }

  public StreamModel cadence(Integer cadence) {
    
    this.cadence = cadence;
    return this;
  }

   /**
   * Number of days that occur between each transaction in the stream
   * @return cadence
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CADENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCadence() {
    return cadence;
  }


  @JsonProperty(JSON_PROPERTY_CADENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCadence(Integer cadence) {
    this.cadence = cadence;
  }


  public StreamModel id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Stream Id assigned to identified Stream
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public StreamModel payee(String payee) {
    
    this.payee = payee;
    return this;
  }

   /**
   * The party in the transaction that is receiving the funds
   * @return payee
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayee() {
    return payee;
  }


  @JsonProperty(JSON_PROPERTY_PAYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayee(String payee) {
    this.payee = payee;
  }


  public StreamModel payor(String payor) {
    
    this.payor = payor;
    return this;
  }

   /**
   * The party in the transaction that is sending the funds
   * @return payor
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayor() {
    return payor;
  }


  @JsonProperty(JSON_PROPERTY_PAYOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayor(String payor) {
    this.payor = payor;
  }


  public StreamModel recency(Integer recency) {
    
    this.recency = recency;
    return this;
  }

   /**
   * Number of days since the last transaction occurred in the stream
   * @return recency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRecency() {
    return recency;
  }


  @JsonProperty(JSON_PROPERTY_RECENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecency(Integer recency) {
    this.recency = recency;
  }


  public StreamModel transactionIds(List<String> transactionIds) {
    
    this.transactionIds = transactionIds;
    return this;
  }

  public StreamModel addTransactionIdsItem(String transactionIdsItem) {
    if (this.transactionIds == null) {
      this.transactionIds = new ArrayList<>();
    }
    this.transactionIds.add(transactionIdsItem);
    return this;
  }

   /**
   * List of Transaction IDs that comprise the stream
   * @return transactionIds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTransactionIds() {
    return transactionIds;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionIds(List<String> transactionIds) {
    this.transactionIds = transactionIds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamModel streamModel = (StreamModel) o;
    return Objects.equals(this.cadence, streamModel.cadence) &&
        Objects.equals(this.id, streamModel.id) &&
        Objects.equals(this.payee, streamModel.payee) &&
        Objects.equals(this.payor, streamModel.payor) &&
        Objects.equals(this.recency, streamModel.recency) &&
        Objects.equals(this.transactionIds, streamModel.transactionIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cadence, id, payee, payor, recency, transactionIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamModel {\n");
    sb.append("    cadence: ").append(toIndentedString(cadence)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    payee: ").append(toIndentedString(payee)).append("\n");
    sb.append("    payor: ").append(toIndentedString(payor)).append("\n");
    sb.append("    recency: ").append(toIndentedString(recency)).append("\n");
    sb.append("    transactionIds: ").append(toIndentedString(transactionIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

