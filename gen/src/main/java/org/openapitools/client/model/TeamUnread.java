/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TeamUnread
 */
@JsonPropertyOrder({
  TeamUnread.JSON_PROPERTY_TEAM_ID,
  TeamUnread.JSON_PROPERTY_MSG_COUNT,
  TeamUnread.JSON_PROPERTY_MENTION_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TeamUnread {
  public static final String JSON_PROPERTY_TEAM_ID = "team_id";
  private String teamId;

  public static final String JSON_PROPERTY_MSG_COUNT = "msg_count";
  private Integer msgCount;

  public static final String JSON_PROPERTY_MENTION_COUNT = "mention_count";
  private Integer mentionCount;

  public TeamUnread() {
  }

  public TeamUnread teamId(String teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }


  public TeamUnread msgCount(Integer msgCount) {
    
    this.msgCount = msgCount;
    return this;
  }

   /**
   * Get msgCount
   * @return msgCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MSG_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMsgCount() {
    return msgCount;
  }


  @JsonProperty(JSON_PROPERTY_MSG_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMsgCount(Integer msgCount) {
    this.msgCount = msgCount;
  }


  public TeamUnread mentionCount(Integer mentionCount) {
    
    this.mentionCount = mentionCount;
    return this;
  }

   /**
   * Get mentionCount
   * @return mentionCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MENTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMentionCount() {
    return mentionCount;
  }


  @JsonProperty(JSON_PROPERTY_MENTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMentionCount(Integer mentionCount) {
    this.mentionCount = mentionCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamUnread teamUnread = (TeamUnread) o;
    return Objects.equals(this.teamId, teamUnread.teamId) &&
        Objects.equals(this.msgCount, teamUnread.msgCount) &&
        Objects.equals(this.mentionCount, teamUnread.mentionCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, msgCount, mentionCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamUnread {\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    msgCount: ").append(toIndentedString(msgCount)).append("\n");
    sb.append("    mentionCount: ").append(toIndentedString(mentionCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

