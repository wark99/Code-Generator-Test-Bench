/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetMonthly;
import org.openapitools.client.model.ReportIncomeEstimate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReportIncomeStreamSummary
 */
@JsonPropertyOrder({
  ReportIncomeStreamSummary.JSON_PROPERTY_CONFIDENCE_TYPE,
  ReportIncomeStreamSummary.JSON_PROPERTY_NET_MONTHLY,
  ReportIncomeStreamSummary.JSON_PROPERTY_INCOME_ESTIMATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:25:40.114879426Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ReportIncomeStreamSummary {
  public static final String JSON_PROPERTY_CONFIDENCE_TYPE = "confidenceType";
  private String confidenceType;

  public static final String JSON_PROPERTY_NET_MONTHLY = "netMonthly";
  private List<NetMonthly> netMonthly = new ArrayList<>();

  public static final String JSON_PROPERTY_INCOME_ESTIMATE = "incomeEstimate";
  private ReportIncomeEstimate incomeEstimate;

  public ReportIncomeStreamSummary() {
  }

  public ReportIncomeStreamSummary confidenceType(String confidenceType) {
    
    this.confidenceType = confidenceType;
    return this;
  }

   /**
   * Possible values: \&quot;HIGH\&quot;, \&quot;MODERATE\&quot;, \&quot;LOW\&quot;, \&quot;NO\&quot;
   * @return confidenceType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIDENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConfidenceType() {
    return confidenceType;
  }


  @JsonProperty(JSON_PROPERTY_CONFIDENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfidenceType(String confidenceType) {
    this.confidenceType = confidenceType;
  }


  public ReportIncomeStreamSummary netMonthly(List<NetMonthly> netMonthly) {
    
    this.netMonthly = netMonthly;
    return this;
  }

  public ReportIncomeStreamSummary addNetMonthlyItem(NetMonthly netMonthlyItem) {
    if (this.netMonthly == null) {
      this.netMonthly = new ArrayList<>();
    }
    this.netMonthly.add(netMonthlyItem);
    return this;
  }

   /**
   * A list of net monthly records. One instance for each complete calendar month in the report.
   * @return netMonthly
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NET_MONTHLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<NetMonthly> getNetMonthly() {
    return netMonthly;
  }


  @JsonProperty(JSON_PROPERTY_NET_MONTHLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetMonthly(List<NetMonthly> netMonthly) {
    this.netMonthly = netMonthly;
  }


  public ReportIncomeStreamSummary incomeEstimate(ReportIncomeEstimate incomeEstimate) {
    
    this.incomeEstimate = incomeEstimate;
    return this;
  }

   /**
   * Get incomeEstimate
   * @return incomeEstimate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCOME_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ReportIncomeEstimate getIncomeEstimate() {
    return incomeEstimate;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_ESTIMATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncomeEstimate(ReportIncomeEstimate incomeEstimate) {
    this.incomeEstimate = incomeEstimate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportIncomeStreamSummary reportIncomeStreamSummary = (ReportIncomeStreamSummary) o;
    return Objects.equals(this.confidenceType, reportIncomeStreamSummary.confidenceType) &&
        Objects.equals(this.netMonthly, reportIncomeStreamSummary.netMonthly) &&
        Objects.equals(this.incomeEstimate, reportIncomeStreamSummary.incomeEstimate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidenceType, netMonthly, incomeEstimate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportIncomeStreamSummary {\n");
    sb.append("    confidenceType: ").append(toIndentedString(confidenceType)).append("\n");
    sb.append("    netMonthly: ").append(toIndentedString(netMonthly)).append("\n");
    sb.append("    incomeEstimate: ").append(toIndentedString(incomeEstimate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

