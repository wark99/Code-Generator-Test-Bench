/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CadenceDetails
 */
@JsonPropertyOrder({
  CadenceDetails.JSON_PROPERTY_START_DATE,
  CadenceDetails.JSON_PROPERTY_STOP_DATE,
  CadenceDetails.JSON_PROPERTY_DAYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:23.431609925Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CadenceDetails {
  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private Long startDate;

  public static final String JSON_PROPERTY_STOP_DATE = "stopDate";
  private Long stopDate;

  public static final String JSON_PROPERTY_DAYS = "days";
  private Integer days;

  public CadenceDetails() {
  }

  public CadenceDetails startDate(Long startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * &#x60;postedDate&#x60; of the first deposit transaction
   * @return startDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }


  public CadenceDetails stopDate(Long stopDate) {
    
    this.stopDate = stopDate;
    return this;
  }

   /**
   * &#x60;postedDate&#x60; of the final deposit transaction (omitted if status is active)
   * @return stopDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STOP_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStopDate() {
    return stopDate;
  }


  @JsonProperty(JSON_PROPERTY_STOP_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStopDate(Long stopDate) {
    this.stopDate = stopDate;
  }


  public CadenceDetails days(Integer days) {
    
    this.days = days;
    return this;
  }

   /**
   * Number of days between the recurring deposits
   * @return days
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDays() {
    return days;
  }


  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDays(Integer days) {
    this.days = days;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CadenceDetails cadenceDetails = (CadenceDetails) o;
    return Objects.equals(this.startDate, cadenceDetails.startDate) &&
        Objects.equals(this.stopDate, cadenceDetails.stopDate) &&
        Objects.equals(this.days, cadenceDetails.days);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, stopDate, days);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CadenceDetails {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    stopDate: ").append(toIndentedString(stopDate)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

