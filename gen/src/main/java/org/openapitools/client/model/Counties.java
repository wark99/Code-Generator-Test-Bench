/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Counties
 */
@JsonPropertyOrder({
  Counties.JSON_PROPERTY_CITY,
  Counties.JSON_PROPERTY_INPUT_ELEMENT,
  Counties.JSON_PROPERTY_NAME,
  Counties.JSON_PROPERTY_POPULATION,
  Counties.JSON_PROPERTY_SOURCE,
  Counties.JSON_PROPERTY_STATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Counties {
  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_INPUT_ELEMENT = "inputElement";
  private String inputElement;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_POPULATION = "population";
  private String population;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public Counties() {
  }

  public Counties city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public Counties inputElement(String inputElement) {
    
    this.inputElement = inputElement;
    return this;
  }

   /**
   * Get inputElement
   * @return inputElement
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInputElement() {
    return inputElement;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputElement(String inputElement) {
    this.inputElement = inputElement;
  }


  public Counties name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Counties population(String population) {
    
    this.population = population;
    return this;
  }

   /**
   * Get population
   * @return population
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POPULATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPopulation() {
    return population;
  }


  @JsonProperty(JSON_PROPERTY_POPULATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPopulation(String population) {
    this.population = population;
  }


  public Counties source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public Counties state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Counties counties = (Counties) o;
    return Objects.equals(this.city, counties.city) &&
        Objects.equals(this.inputElement, counties.inputElement) &&
        Objects.equals(this.name, counties.name) &&
        Objects.equals(this.population, counties.population) &&
        Objects.equals(this.source, counties.source) &&
        Objects.equals(this.state, counties.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, inputElement, name, population, source, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Counties {\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    inputElement: ").append(toIndentedString(inputElement)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    population: ").append(toIndentedString(population)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

