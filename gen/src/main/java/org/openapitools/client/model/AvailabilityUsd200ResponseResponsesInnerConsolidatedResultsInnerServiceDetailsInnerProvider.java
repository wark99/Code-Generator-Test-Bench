/*
 * Servantrip API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider
 */
@JsonPropertyOrder({
  AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider.JSON_PROPERTY_BRAND,
  AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider.JSON_PROPERTY_LOGO
})
@JsonTypeName("availabilityUsd_200_response_responses_inner_consolidated_results_inner_service_details_inner_provider")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:17:54.085425345Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider {
  public static final String JSON_PROPERTY_BRAND = "brand";
  private String brand;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private String logo;

  public AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider() {
  }

  public AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider brand(String brand) {
    
    this.brand = brand;
    return this;
  }

   /**
   * Get brand
   * @return brand
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrand() {
    return brand;
  }


  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrand(String brand) {
    this.brand = brand;
  }


  public AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider logo(String logo) {
    
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogo() {
    return logo;
  }


  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogo(String logo) {
    this.logo = logo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider availabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider = (AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider) o;
    return Objects.equals(this.brand, availabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider.brand) &&
        Objects.equals(this.logo, availabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider.logo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brand, logo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailabilityUsd200ResponseResponsesInnerConsolidatedResultsInnerServiceDetailsInnerProvider {\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

