/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StateTimeInterval;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An attribute which represents some state over time, such as a balance or a calculation, including derivatives, ratios, or projections. Reports the state over the requested time interval(s).
 */
@JsonPropertyOrder({
  StateAttribute.JSON_PROPERTY_ATTRIBUTE_NAME,
  StateAttribute.JSON_PROPERTY_REPORTED_BY_TIME_PERIODS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:05:40.878624261Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StateAttribute {
  public static final String JSON_PROPERTY_ATTRIBUTE_NAME = "attributeName";
  private String attributeName;

  public static final String JSON_PROPERTY_REPORTED_BY_TIME_PERIODS = "reportedByTimePeriods";
  private List<StateTimeInterval> reportedByTimePeriods = new ArrayList<>();

  public StateAttribute() {
  }

  public StateAttribute attributeName(String attributeName) {
    
    this.attributeName = attributeName;
    return this;
  }

   /**
   * Name of Attribute as mentioned in Data Dictionary
   * @return attributeName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAttributeName() {
    return attributeName;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public StateAttribute reportedByTimePeriods(List<StateTimeInterval> reportedByTimePeriods) {
    
    this.reportedByTimePeriods = reportedByTimePeriods;
    return this;
  }

  public StateAttribute addReportedByTimePeriodsItem(StateTimeInterval reportedByTimePeriodsItem) {
    if (this.reportedByTimePeriods == null) {
      this.reportedByTimePeriods = new ArrayList<>();
    }
    this.reportedByTimePeriods.add(reportedByTimePeriodsItem);
    return this;
  }

   /**
   * List of state values grouped by specified Time Interval
   * @return reportedByTimePeriods
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPORTED_BY_TIME_PERIODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StateTimeInterval> getReportedByTimePeriods() {
    return reportedByTimePeriods;
  }


  @JsonProperty(JSON_PROPERTY_REPORTED_BY_TIME_PERIODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReportedByTimePeriods(List<StateTimeInterval> reportedByTimePeriods) {
    this.reportedByTimePeriods = reportedByTimePeriods;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StateAttribute stateAttribute = (StateAttribute) o;
    return Objects.equals(this.attributeName, stateAttribute.attributeName) &&
        Objects.equals(this.reportedByTimePeriods, stateAttribute.reportedByTimePeriods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, reportedByTimePeriods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StateAttribute {\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    reportedByTimePeriods: ").append(toIndentedString(reportedByTimePeriods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

