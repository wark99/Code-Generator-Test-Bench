/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SwissBackupDiscount;
import org.openapitools.client.model.SwissBackupPrice;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SwissBackupPrice2731a22e
 */
@JsonPropertyOrder({
  SwissBackupPrice2731a22e.JSON_PROPERTY_PRICES,
  SwissBackupPrice2731a22e.JSON_PROPERTY_DISCOUNTS
})
@JsonTypeName("SwissBackupPrice_2731a22e")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SwissBackupPrice2731a22e {
  public static final String JSON_PROPERTY_PRICES = "prices";
  private List<SwissBackupPrice> prices = new ArrayList<>();

  public static final String JSON_PROPERTY_DISCOUNTS = "discounts";
  private List<SwissBackupDiscount> discounts = new ArrayList<>();

  public SwissBackupPrice2731a22e() {
  }

  public SwissBackupPrice2731a22e prices(List<SwissBackupPrice> prices) {
    
    this.prices = prices;
    return this;
  }

  public SwissBackupPrice2731a22e addPricesItem(SwissBackupPrice pricesItem) {
    if (this.prices == null) {
      this.prices = new ArrayList<>();
    }
    this.prices.add(pricesItem);
    return this;
  }

   /**
   * Get prices
   * @return prices
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SwissBackupPrice> getPrices() {
    return prices;
  }


  @JsonProperty(JSON_PROPERTY_PRICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrices(List<SwissBackupPrice> prices) {
    this.prices = prices;
  }


  public SwissBackupPrice2731a22e discounts(List<SwissBackupDiscount> discounts) {
    
    this.discounts = discounts;
    return this;
  }

  public SwissBackupPrice2731a22e addDiscountsItem(SwissBackupDiscount discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISCOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SwissBackupDiscount> getDiscounts() {
    return discounts;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscounts(List<SwissBackupDiscount> discounts) {
    this.discounts = discounts;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwissBackupPrice2731a22e swissBackupPrice2731a22e = (SwissBackupPrice2731a22e) o;
    return Objects.equals(this.prices, swissBackupPrice2731a22e.prices) &&
        Objects.equals(this.discounts, swissBackupPrice2731a22e.discounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prices, discounts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwissBackupPrice2731a22e {\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

