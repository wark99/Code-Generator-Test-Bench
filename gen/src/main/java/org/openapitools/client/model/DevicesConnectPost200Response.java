/*
 * VR-Training backend with pockebase (device api)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DevicesConnectPost200Response
 */
@JsonPropertyOrder({
  DevicesConnectPost200Response.JSON_PROPERTY_DEVICE_ID,
  DevicesConnectPost200Response.JSON_PROPERTY_DEVICE_SERIAL_NUMBER,
  DevicesConnectPost200Response.JSON_PROPERTY_CLIENT_ID,
  DevicesConnectPost200Response.JSON_PROPERTY_CONNECT_CODE,
  DevicesConnectPost200Response.JSON_PROPERTY_READY,
  DevicesConnectPost200Response.JSON_PROPERTY_RUNNING_SCENARIO,
  DevicesConnectPost200Response.JSON_PROPERTY_RUNNING_RECORD
})
@JsonTypeName("_devices_connect_post_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:19:11.915359394Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DevicesConnectPost200Response {
  public static final String JSON_PROPERTY_DEVICE_ID = "device_id";
  private String deviceId;

  public static final String JSON_PROPERTY_DEVICE_SERIAL_NUMBER = "device_serial_number";
  private String deviceSerialNumber;

  public static final String JSON_PROPERTY_CLIENT_ID = "client_id";
  private String clientId;

  public static final String JSON_PROPERTY_CONNECT_CODE = "connect_code";
  private String connectCode;

  public static final String JSON_PROPERTY_READY = "ready";
  private Boolean ready;

  public static final String JSON_PROPERTY_RUNNING_SCENARIO = "running_scenario";
  private String runningScenario;

  public static final String JSON_PROPERTY_RUNNING_RECORD = "running_record";
  private String runningRecord;

  public DevicesConnectPost200Response() {
  }

  public DevicesConnectPost200Response deviceId(String deviceId) {
    
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Get deviceId
   * @return deviceId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceId() {
    return deviceId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public DevicesConnectPost200Response deviceSerialNumber(String deviceSerialNumber) {
    
    this.deviceSerialNumber = deviceSerialNumber;
    return this;
  }

   /**
   * Get deviceSerialNumber
   * @return deviceSerialNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceSerialNumber() {
    return deviceSerialNumber;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceSerialNumber(String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
  }


  public DevicesConnectPost200Response clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public DevicesConnectPost200Response connectCode(String connectCode) {
    
    this.connectCode = connectCode;
    return this;
  }

   /**
   * Get connectCode
   * @return connectCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectCode() {
    return connectCode;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectCode(String connectCode) {
    this.connectCode = connectCode;
  }


  public DevicesConnectPost200Response ready(Boolean ready) {
    
    this.ready = ready;
    return this;
  }

   /**
   * Get ready
   * @return ready
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReady() {
    return ready;
  }


  @JsonProperty(JSON_PROPERTY_READY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReady(Boolean ready) {
    this.ready = ready;
  }


  public DevicesConnectPost200Response runningScenario(String runningScenario) {
    
    this.runningScenario = runningScenario;
    return this;
  }

   /**
   * Get runningScenario
   * @return runningScenario
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUNNING_SCENARIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRunningScenario() {
    return runningScenario;
  }


  @JsonProperty(JSON_PROPERTY_RUNNING_SCENARIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunningScenario(String runningScenario) {
    this.runningScenario = runningScenario;
  }


  public DevicesConnectPost200Response runningRecord(String runningRecord) {
    
    this.runningRecord = runningRecord;
    return this;
  }

   /**
   * Get runningRecord
   * @return runningRecord
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUNNING_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRunningRecord() {
    return runningRecord;
  }


  @JsonProperty(JSON_PROPERTY_RUNNING_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunningRecord(String runningRecord) {
    this.runningRecord = runningRecord;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevicesConnectPost200Response devicesConnectPost200Response = (DevicesConnectPost200Response) o;
    return Objects.equals(this.deviceId, devicesConnectPost200Response.deviceId) &&
        Objects.equals(this.deviceSerialNumber, devicesConnectPost200Response.deviceSerialNumber) &&
        Objects.equals(this.clientId, devicesConnectPost200Response.clientId) &&
        Objects.equals(this.connectCode, devicesConnectPost200Response.connectCode) &&
        Objects.equals(this.ready, devicesConnectPost200Response.ready) &&
        Objects.equals(this.runningScenario, devicesConnectPost200Response.runningScenario) &&
        Objects.equals(this.runningRecord, devicesConnectPost200Response.runningRecord);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, deviceSerialNumber, clientId, connectCode, ready, runningScenario, runningRecord);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevicesConnectPost200Response {\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceSerialNumber: ").append(toIndentedString(deviceSerialNumber)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    connectCode: ").append(toIndentedString(connectCode)).append("\n");
    sb.append("    ready: ").append(toIndentedString(ready)).append("\n");
    sb.append("    runningScenario: ").append(toIndentedString(runningScenario)).append("\n");
    sb.append("    runningRecord: ").append(toIndentedString(runningRecord)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

