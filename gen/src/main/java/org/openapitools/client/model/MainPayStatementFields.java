/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MainPayStatementFields
 */
@JsonPropertyOrder({
  MainPayStatementFields.JSON_PROPERTY_PAY_DATE,
  MainPayStatementFields.JSON_PROPERTY_START_DATE,
  MainPayStatementFields.JSON_PROPERTY_END_DATE,
  MainPayStatementFields.JSON_PROPERTY_PAY_PERIOD_HOURS,
  MainPayStatementFields.JSON_PROPERTY_PAY_FREQUENCY,
  MainPayStatementFields.JSON_PROPERTY_PAY_TYPE,
  MainPayStatementFields.JSON_PROPERTY_GROSS_PAY_AMOUNT,
  MainPayStatementFields.JSON_PROPERTY_GROSS_PAY_AMOUNT_Y_T_D,
  MainPayStatementFields.JSON_PROPERTY_NET_PAY_AMOUNT,
  MainPayStatementFields.JSON_PROPERTY_NET_PAY_AMOUNT_Y_T_D
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:05:40.878624261Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MainPayStatementFields {
  public static final String JSON_PROPERTY_PAY_DATE = "payDate";
  private Long payDate;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private Long startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private Long endDate;

  public static final String JSON_PROPERTY_PAY_PERIOD_HOURS = "payPeriodHours";
  private BigDecimal payPeriodHours;

  public static final String JSON_PROPERTY_PAY_FREQUENCY = "payFrequency";
  private String payFrequency;

  public static final String JSON_PROPERTY_PAY_TYPE = "payType";
  private String payType;

  public static final String JSON_PROPERTY_GROSS_PAY_AMOUNT = "grossPayAmount";
  private BigDecimal grossPayAmount;

  public static final String JSON_PROPERTY_GROSS_PAY_AMOUNT_Y_T_D = "grossPayAmountYTD";
  private BigDecimal grossPayAmountYTD;

  public static final String JSON_PROPERTY_NET_PAY_AMOUNT = "netPayAmount";
  private BigDecimal netPayAmount;

  public static final String JSON_PROPERTY_NET_PAY_AMOUNT_Y_T_D = "netPayAmountYTD";
  private BigDecimal netPayAmountYTD;

  public MainPayStatementFields() {
  }

  public MainPayStatementFields payDate(Long payDate) {
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Pay date for the pay period
   * @return payDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPayDate() {
    return payDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayDate(Long payDate) {
    this.payDate = payDate;
  }


  public MainPayStatementFields startDate(Long startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date for the pay period
   * @return startDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }


  public MainPayStatementFields endDate(Long endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End date for the pay period
   * @return endDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }


  public MainPayStatementFields payPeriodHours(BigDecimal payPeriodHours) {
    
    this.payPeriodHours = payPeriodHours;
    return this;
  }

   /**
   * Sum of all hours worked each week for the pay period
   * @return payPeriodHours
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_PERIOD_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPayPeriodHours() {
    return payPeriodHours;
  }


  @JsonProperty(JSON_PROPERTY_PAY_PERIOD_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayPeriodHours(BigDecimal payPeriodHours) {
    this.payPeriodHours = payPeriodHours;
  }


  public MainPayStatementFields payFrequency(String payFrequency) {
    
    this.payFrequency = payFrequency;
    return this;
  }

   /**
   * The current pay frequency, or how often a regular pay check is distributed:  * &#x60;Daily&#x60;  * &#x60;Weekly&#x60;  * &#x60;Bi-Weekly&#x60;  * &#x60;Semi-Monthly&#x60;  * &#x60;Monthly&#x60;  * &#x60;Quarterly&#x60;  * &#x60;Semi-Annual&#x60;  * &#x60;Annual&#x60;  * &#x60;Every 2.6 wks&#x60;  * &#x60;Every 4 wks&#x60;  * &#x60;Every 5.2 wks&#x60;  * &#x60;Other&#x60; 
   * @return payFrequency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayFrequency() {
    return payFrequency;
  }


  @JsonProperty(JSON_PROPERTY_PAY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayFrequency(String payFrequency) {
    this.payFrequency = payFrequency;
  }


  public MainPayStatementFields payType(String payType) {
    
    this.payType = payType;
    return this;
  }

   /**
   * Current pay type:  * &#x60;Salary&#x60;  * &#x60;Hourly&#x60;  * &#x60;Daily&#x60; 
   * @return payType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayType() {
    return payType;
  }


  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayType(String payType) {
    this.payType = payType;
  }


  public MainPayStatementFields grossPayAmount(BigDecimal grossPayAmount) {
    
    this.grossPayAmount = grossPayAmount;
    return this;
  }

   /**
   * Gross pay amount for the pay period
   * @return grossPayAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GROSS_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getGrossPayAmount() {
    return grossPayAmount;
  }


  @JsonProperty(JSON_PROPERTY_GROSS_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGrossPayAmount(BigDecimal grossPayAmount) {
    this.grossPayAmount = grossPayAmount;
  }


  public MainPayStatementFields grossPayAmountYTD(BigDecimal grossPayAmountYTD) {
    
    this.grossPayAmountYTD = grossPayAmountYTD;
    return this;
  }

   /**
   * Year to date (YTD) gross pay amount at the time of payment
   * @return grossPayAmountYTD
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROSS_PAY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGrossPayAmountYTD() {
    return grossPayAmountYTD;
  }


  @JsonProperty(JSON_PROPERTY_GROSS_PAY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrossPayAmountYTD(BigDecimal grossPayAmountYTD) {
    this.grossPayAmountYTD = grossPayAmountYTD;
  }


  public MainPayStatementFields netPayAmount(BigDecimal netPayAmount) {
    
    this.netPayAmount = netPayAmount;
    return this;
  }

   /**
   * Net pay amount for a pay period
   * @return netPayAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNetPayAmount() {
    return netPayAmount;
  }


  @JsonProperty(JSON_PROPERTY_NET_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetPayAmount(BigDecimal netPayAmount) {
    this.netPayAmount = netPayAmount;
  }


  public MainPayStatementFields netPayAmountYTD(BigDecimal netPayAmountYTD) {
    
    this.netPayAmountYTD = netPayAmountYTD;
    return this;
  }

   /**
   * Year to date (YTD) net pay amount at the time of payment
   * @return netPayAmountYTD
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_PAY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNetPayAmountYTD() {
    return netPayAmountYTD;
  }


  @JsonProperty(JSON_PROPERTY_NET_PAY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetPayAmountYTD(BigDecimal netPayAmountYTD) {
    this.netPayAmountYTD = netPayAmountYTD;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MainPayStatementFields mainPayStatementFields = (MainPayStatementFields) o;
    return Objects.equals(this.payDate, mainPayStatementFields.payDate) &&
        Objects.equals(this.startDate, mainPayStatementFields.startDate) &&
        Objects.equals(this.endDate, mainPayStatementFields.endDate) &&
        Objects.equals(this.payPeriodHours, mainPayStatementFields.payPeriodHours) &&
        Objects.equals(this.payFrequency, mainPayStatementFields.payFrequency) &&
        Objects.equals(this.payType, mainPayStatementFields.payType) &&
        Objects.equals(this.grossPayAmount, mainPayStatementFields.grossPayAmount) &&
        Objects.equals(this.grossPayAmountYTD, mainPayStatementFields.grossPayAmountYTD) &&
        Objects.equals(this.netPayAmount, mainPayStatementFields.netPayAmount) &&
        Objects.equals(this.netPayAmountYTD, mainPayStatementFields.netPayAmountYTD);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payDate, startDate, endDate, payPeriodHours, payFrequency, payType, grossPayAmount, grossPayAmountYTD, netPayAmount, netPayAmountYTD);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MainPayStatementFields {\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    payPeriodHours: ").append(toIndentedString(payPeriodHours)).append("\n");
    sb.append("    payFrequency: ").append(toIndentedString(payFrequency)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    grossPayAmount: ").append(toIndentedString(grossPayAmount)).append("\n");
    sb.append("    grossPayAmountYTD: ").append(toIndentedString(grossPayAmountYTD)).append("\n");
    sb.append("    netPayAmount: ").append(toIndentedString(netPayAmount)).append("\n");
    sb.append("    netPayAmountYTD: ").append(toIndentedString(netPayAmountYTD)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

