/*
 * Perch API
 * Perch API for accessing data from Perch. See our [API Guide](https://docs.google.com/document/d/1ms6LFNwFN4C4WkrfWs8Hlu5igFBpNLhNr7uLEkGmvJA) for guidance on best practices. <br/> <br/> Find out more about Perch at [https://perch.fit](https://perch.fit) or by contacting us at [support@perch.fit](mailto:support@perch.fit).
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@perch.fit
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FilterUsersParams
 */
@JsonPropertyOrder({
  FilterUsersParams.JSON_PROPERTY_LIMIT,
  FilterUsersParams.JSON_PROPERTY_NEXT_TOKEN,
  FilterUsersParams.JSON_PROPERTY_ID,
  FilterUsersParams.JSON_PROPERTY_GROUP_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:41.221792118Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FilterUsersParams {
  public static final String JSON_PROPERTY_LIMIT = "limit";
  private JsonNullable<Object> limit = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_NEXT_TOKEN = "next_token";
  private JsonNullable<Object> nextToken = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_GROUP_ID = "group_id";
  private Integer groupId;

  public FilterUsersParams() {
  }

  public FilterUsersParams limit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
    
    return this;
  }

   /**
   * Limit the number of data items returned per page. This will default to (and be capped at) the configured page size for each individual endpoint.
   * @return limit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLimit() {
        return limit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLimit_JsonNullable() {
    return limit;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT)
  public void setLimit_JsonNullable(JsonNullable<Object> limit) {
    this.limit = limit;
  }

  public void setLimit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
  }


  public FilterUsersParams nextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
    
    return this;
  }

   /**
   * The &#x60;next_token&#x60; from a previous page response.
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNextToken() {
        return nextToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNextToken_JsonNullable() {
    return nextToken;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  public void setNextToken_JsonNullable(JsonNullable<Object> nextToken) {
    this.nextToken = nextToken;
  }

  public void setNextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
  }


  public FilterUsersParams id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Retrieve a single user with this ID (response data will be a single object not an array).
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public FilterUsersParams groupId(Integer groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * Retrieve users who are members of a group (with id &#x60;group_id&#x60;).
   * @return groupId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroupId() {
    return groupId;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterUsersParams filterUsersParams = (FilterUsersParams) o;
    return equalsNullable(this.limit, filterUsersParams.limit) &&
        equalsNullable(this.nextToken, filterUsersParams.nextToken) &&
        Objects.equals(this.id, filterUsersParams.id) &&
        Objects.equals(this.groupId, filterUsersParams.groupId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(limit), hashCodeNullable(nextToken), id, groupId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterUsersParams {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

