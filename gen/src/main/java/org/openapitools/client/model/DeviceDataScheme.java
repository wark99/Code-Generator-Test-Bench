/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceDataScheme
 */
@JsonPropertyOrder({
  DeviceDataScheme.JSON_PROPERTY_EXT_ID,
  DeviceDataScheme.JSON_PROPERTY_DATA_CONVERTER_ID,
  DeviceDataScheme.JSON_PROPERTY_CREATED,
  DeviceDataScheme.JSON_PROPERTY_DEVICE_DATE,
  DeviceDataScheme.JSON_PROPERTY_PARSED_DATA,
  DeviceDataScheme.JSON_PROPERTY_NET_PROTOCOL_DATA,
  DeviceDataScheme.JSON_PROPERTY_SPECIFIC_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DeviceDataScheme {
  public static final String JSON_PROPERTY_EXT_ID = "ext_id";
  private Integer extId;

  public static final String JSON_PROPERTY_DATA_CONVERTER_ID = "data_converter_id";
  private Integer dataConverterId;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_DEVICE_DATE = "device_date";
  private OffsetDateTime deviceDate;

  public static final String JSON_PROPERTY_PARSED_DATA = "parsed_data";
  private Object parsedData;

  public static final String JSON_PROPERTY_NET_PROTOCOL_DATA = "net_protocol_data";
  private Object netProtocolData;

  public static final String JSON_PROPERTY_SPECIFIC_DATA = "specific_data";
  private Object specificData;

  public DeviceDataScheme() {
  }

  public DeviceDataScheme extId(Integer extId) {
    
    this.extId = extId;
    return this;
  }

   /**
   * unique packet id
   * @return extId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExtId() {
    return extId;
  }


  @JsonProperty(JSON_PROPERTY_EXT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtId(Integer extId) {
    this.extId = extId;
  }


  public DeviceDataScheme dataConverterId(Integer dataConverterId) {
    
    this.dataConverterId = dataConverterId;
    return this;
  }

   /**
   * unique data converter id
   * @return dataConverterId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATA_CONVERTER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDataConverterId() {
    return dataConverterId;
  }


  @JsonProperty(JSON_PROPERTY_DATA_CONVERTER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataConverterId(Integer dataConverterId) {
    this.dataConverterId = dataConverterId;
  }


  public DeviceDataScheme created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * state creation time
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public DeviceDataScheme deviceDate(OffsetDateTime deviceDate) {
    
    this.deviceDate = deviceDate;
    return this;
  }

   /**
   * state device date time
   * @return deviceDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEVICE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDeviceDate() {
    return deviceDate;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceDate(OffsetDateTime deviceDate) {
    this.deviceDate = deviceDate;
  }


  public DeviceDataScheme parsedData(Object parsedData) {
    
    this.parsedData = parsedData;
    return this;
  }

   /**
   * Get parsedData
   * @return parsedData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARSED_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getParsedData() {
    return parsedData;
  }


  @JsonProperty(JSON_PROPERTY_PARSED_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParsedData(Object parsedData) {
    this.parsedData = parsedData;
  }


  public DeviceDataScheme netProtocolData(Object netProtocolData) {
    
    this.netProtocolData = netProtocolData;
    return this;
  }

   /**
   * Get netProtocolData
   * @return netProtocolData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NET_PROTOCOL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getNetProtocolData() {
    return netProtocolData;
  }


  @JsonProperty(JSON_PROPERTY_NET_PROTOCOL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetProtocolData(Object netProtocolData) {
    this.netProtocolData = netProtocolData;
  }


  public DeviceDataScheme specificData(Object specificData) {
    
    this.specificData = specificData;
    return this;
  }

   /**
   * Get specificData
   * @return specificData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SPECIFIC_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSpecificData() {
    return specificData;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFIC_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpecificData(Object specificData) {
    this.specificData = specificData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceDataScheme deviceDataScheme = (DeviceDataScheme) o;
    return Objects.equals(this.extId, deviceDataScheme.extId) &&
        Objects.equals(this.dataConverterId, deviceDataScheme.dataConverterId) &&
        Objects.equals(this.created, deviceDataScheme.created) &&
        Objects.equals(this.deviceDate, deviceDataScheme.deviceDate) &&
        Objects.equals(this.parsedData, deviceDataScheme.parsedData) &&
        Objects.equals(this.netProtocolData, deviceDataScheme.netProtocolData) &&
        Objects.equals(this.specificData, deviceDataScheme.specificData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extId, dataConverterId, created, deviceDate, parsedData, netProtocolData, specificData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceDataScheme {\n");
    sb.append("    extId: ").append(toIndentedString(extId)).append("\n");
    sb.append("    dataConverterId: ").append(toIndentedString(dataConverterId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    deviceDate: ").append(toIndentedString(deviceDate)).append("\n");
    sb.append("    parsedData: ").append(toIndentedString(parsedData)).append("\n");
    sb.append("    netProtocolData: ").append(toIndentedString(netProtocolData)).append("\n");
    sb.append("    specificData: ").append(toIndentedString(specificData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

