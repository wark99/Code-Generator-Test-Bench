/*
 * Drip - Merchant API
 * API Documentation of endpoints available to Merchants. All requests need to contain the `X-API-KEY` received during the initial Drip Merchant Onboarding. If you do not have it, contact one of the admins.
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CheckoutProduct
 */
@JsonPropertyOrder({
  CheckoutProduct.JSON_PROPERTY_MERCHANT_CODE,
  CheckoutProduct.JSON_PROPERTY_FEATURED,
  CheckoutProduct.JSON_PROPERTY_DESCRIPTION,
  CheckoutProduct.JSON_PROPERTY_LINK,
  CheckoutProduct.JSON_PROPERTY_REGULAR_PRICE,
  CheckoutProduct.JSON_PROPERTY_NAME,
  CheckoutProduct.JSON_PROPERTY_QUANTITY,
  CheckoutProduct.JSON_PROPERTY_AMOUNT,
  CheckoutProduct.JSON_PROPERTY_TOTAL_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:11.928068984Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CheckoutProduct {
  public static final String JSON_PROPERTY_MERCHANT_CODE = "merchantCode";
  private String merchantCode;

  public static final String JSON_PROPERTY_FEATURED = "featured";
  private Boolean featured;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_REGULAR_PRICE = "regularPrice";
  private BigDecimal regularPrice;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private BigDecimal totalAmount;

  public CheckoutProduct() {
  }

  public CheckoutProduct merchantCode(String merchantCode) {
    
    this.merchantCode = merchantCode;
    return this;
  }

   /**
   * Should be the ID for the product in the merchant order side
   * @return merchantCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantCode() {
    return merchantCode;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantCode(String merchantCode) {
    this.merchantCode = merchantCode;
  }


  public CheckoutProduct featured(Boolean featured) {
    
    this.featured = featured;
    return this;
  }

   /**
   * Product is currently shown on the homepage
   * @return featured
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFeatured() {
    return featured;
  }


  @JsonProperty(JSON_PROPERTY_FEATURED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }


  public CheckoutProduct description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Product description on merchant store
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CheckoutProduct link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Product link
   * @return link
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(String link) {
    this.link = link;
  }


  public CheckoutProduct regularPrice(BigDecimal regularPrice) {
    
    this.regularPrice = regularPrice;
    return this;
  }

   /**
   * Regular product price
   * @return regularPrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGULAR_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRegularPrice() {
    return regularPrice;
  }


  @JsonProperty(JSON_PROPERTY_REGULAR_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegularPrice(BigDecimal regularPrice) {
    this.regularPrice = regularPrice;
  }


  public CheckoutProduct name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Product name on merchant store
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CheckoutProduct quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public CheckoutProduct amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Actual product price on order
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public CheckoutProduct totalAmount(BigDecimal totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckoutProduct checkoutProduct = (CheckoutProduct) o;
    return Objects.equals(this.merchantCode, checkoutProduct.merchantCode) &&
        Objects.equals(this.featured, checkoutProduct.featured) &&
        Objects.equals(this.description, checkoutProduct.description) &&
        Objects.equals(this.link, checkoutProduct.link) &&
        Objects.equals(this.regularPrice, checkoutProduct.regularPrice) &&
        Objects.equals(this.name, checkoutProduct.name) &&
        Objects.equals(this.quantity, checkoutProduct.quantity) &&
        Objects.equals(this.amount, checkoutProduct.amount) &&
        Objects.equals(this.totalAmount, checkoutProduct.totalAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantCode, featured, description, link, regularPrice, name, quantity, amount, totalAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckoutProduct {\n");
    sb.append("    merchantCode: ").append(toIndentedString(merchantCode)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    regularPrice: ").append(toIndentedString(regularPrice)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

