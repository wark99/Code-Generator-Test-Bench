/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import org.openapitools.client.model.PropertyInvoiceOwnerBalancePostRequestProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyOfferResponse
 */
@JsonPropertyOrder({
  PropertyOfferResponse.JSON_PROPERTY_PROPERTY,
  PropertyOfferResponse.JSON_PROPERTY_PRICE,
  PropertyOfferResponse.JSON_PROPERTY_OFFER_DATE,
  PropertyOfferResponse.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyOfferResponse {
  public static final String JSON_PROPERTY_PROPERTY = "property";
  private PropertyInvoiceOwnerBalancePostRequestProperty property;

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_OFFER_DATE = "offer_date";
  private MaintenancePost200ResponseValueCreatedDate offerDate;

  /**
   * 1 &#x3D; Pending, 2 &#x3D; Withdrawn, 3 &#x3D; Rejected, 4 &#x3D; Accepted
   */
  public enum StatusEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public PropertyOfferResponse() {
  }

  public PropertyOfferResponse property(PropertyInvoiceOwnerBalancePostRequestProperty property) {
    
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyInvoiceOwnerBalancePostRequestProperty getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(PropertyInvoiceOwnerBalancePostRequestProperty property) {
    this.property = property;
  }


  public PropertyOfferResponse price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public PropertyOfferResponse offerDate(MaintenancePost200ResponseValueCreatedDate offerDate) {
    
    this.offerDate = offerDate;
    return this;
  }

   /**
   * Get offerDate
   * @return offerDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getOfferDate() {
    return offerDate;
  }


  @JsonProperty(JSON_PROPERTY_OFFER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfferDate(MaintenancePost200ResponseValueCreatedDate offerDate) {
    this.offerDate = offerDate;
  }


  public PropertyOfferResponse status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * 1 &#x3D; Pending, 2 &#x3D; Withdrawn, 3 &#x3D; Rejected, 4 &#x3D; Accepted
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyOfferResponse propertyOfferResponse = (PropertyOfferResponse) o;
    return Objects.equals(this.property, propertyOfferResponse.property) &&
        Objects.equals(this.price, propertyOfferResponse.price) &&
        Objects.equals(this.offerDate, propertyOfferResponse.offerDate) &&
        Objects.equals(this.status, propertyOfferResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(property, price, offerDate, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyOfferResponse {\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    offerDate: ").append(toIndentedString(offerDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

