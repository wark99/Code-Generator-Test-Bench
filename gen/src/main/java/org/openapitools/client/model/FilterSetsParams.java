/*
 * Perch API
 * Perch API for accessing data from Perch. See our [API Guide](https://docs.google.com/document/d/1ms6LFNwFN4C4WkrfWs8Hlu5igFBpNLhNr7uLEkGmvJA) for guidance on best practices. <br/> <br/> Find out more about Perch at [https://perch.fit](https://perch.fit) or by contacting us at [support@perch.fit](mailto:support@perch.fit).
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@perch.fit
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.client.model.InclusiveFilter;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FilterSetsParams
 */
@JsonPropertyOrder({
  FilterSetsParams.JSON_PROPERTY_LIMIT,
  FilterSetsParams.JSON_PROPERTY_NEXT_TOKEN,
  FilterSetsParams.JSON_PROPERTY_ID,
  FilterSetsParams.JSON_PROPERTY_USER_ID,
  FilterSetsParams.JSON_PROPERTY_GROUP_ID,
  FilterSetsParams.JSON_PROPERTY_EXERCISE_ID,
  FilterSetsParams.JSON_PROPERTY_BEGIN_TIME,
  FilterSetsParams.JSON_PROPERTY_END_TIME,
  FilterSetsParams.JSON_PROPERTY_UNTRACKED,
  FilterSetsParams.JSON_PROPERTY_INCLUDE_REPS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:41.221792118Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FilterSetsParams {
  public static final String JSON_PROPERTY_LIMIT = "limit";
  private JsonNullable<Object> limit = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_NEXT_TOKEN = "next_token";
  private JsonNullable<Object> nextToken = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_GROUP_ID = "group_id";
  private Integer groupId;

  public static final String JSON_PROPERTY_EXERCISE_ID = "exercise_id";
  private Integer exerciseId;

  public static final String JSON_PROPERTY_BEGIN_TIME = "begin_time";
  private BigDecimal beginTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private BigDecimal endTime;

  public static final String JSON_PROPERTY_UNTRACKED = "untracked";
  private InclusiveFilter untracked;

  public static final String JSON_PROPERTY_INCLUDE_REPS = "include_reps";
  private Boolean includeReps = false;

  public FilterSetsParams() {
  }

  public FilterSetsParams limit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
    
    return this;
  }

   /**
   * Limit the number of data items returned per page. This will default to (and be capped at) the configured page size for each individual endpoint.
   * @return limit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLimit() {
        return limit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLimit_JsonNullable() {
    return limit;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT)
  public void setLimit_JsonNullable(JsonNullable<Object> limit) {
    this.limit = limit;
  }

  public void setLimit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
  }


  public FilterSetsParams nextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
    
    return this;
  }

   /**
   * The &#x60;next_token&#x60; from a previous page response.
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNextToken() {
        return nextToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNextToken_JsonNullable() {
    return nextToken;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  public void setNextToken_JsonNullable(JsonNullable<Object> nextToken) {
    this.nextToken = nextToken;
  }

  public void setNextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
  }


  public FilterSetsParams id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Retrieve a single set with this ID (response data will be a single object not an array).
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public FilterSetsParams userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Retrieve only sets for the user with ID &#x3D; &#x60;user_id&#x60;.
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public FilterSetsParams groupId(Integer groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * Retrieve only sets for users in the group with the corresponding &#x60;id&#x60;. This can be set to the &#x60;org_id&#x60; of a user, which would filter for all users in said organization.
   * @return groupId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroupId() {
    return groupId;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }


  public FilterSetsParams exerciseId(Integer exerciseId) {
    
    this.exerciseId = exerciseId;
    return this;
  }

   /**
   * Retrieve only sets for the exercise with ID &#x3D; &#x60;exercise_id&#x60;.
   * @return exerciseId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXERCISE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getExerciseId() {
    return exerciseId;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExerciseId(Integer exerciseId) {
    this.exerciseId = exerciseId;
  }


  public FilterSetsParams beginTime(BigDecimal beginTime) {
    
    this.beginTime = beginTime;
    return this;
  }

   /**
   * Get beginTime
   * @return beginTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEGIN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBeginTime() {
    return beginTime;
  }


  @JsonProperty(JSON_PROPERTY_BEGIN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeginTime(BigDecimal beginTime) {
    this.beginTime = beginTime;
  }


  public FilterSetsParams endTime(BigDecimal endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(BigDecimal endTime) {
    this.endTime = endTime;
  }


  public FilterSetsParams untracked(InclusiveFilter untracked) {
    
    this.untracked = untracked;
    return this;
  }

   /**
   * Controls whether manually entered sets are returned.
   * @return untracked
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNTRACKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InclusiveFilter getUntracked() {
    return untracked;
  }


  @JsonProperty(JSON_PROPERTY_UNTRACKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUntracked(InclusiveFilter untracked) {
    this.untracked = untracked;
  }


  public FilterSetsParams includeReps(Boolean includeReps) {
    
    this.includeReps = includeReps;
    return this;
  }

   /**
   * By specifying &#x60;include_reps &#x3D; true&#x60;, the &#x60;reps&#x60; field will be included on Sets returned. Otherwise, it will be omitted.
   * @return includeReps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeReps() {
    return includeReps;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_REPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeReps(Boolean includeReps) {
    this.includeReps = includeReps;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterSetsParams filterSetsParams = (FilterSetsParams) o;
    return equalsNullable(this.limit, filterSetsParams.limit) &&
        equalsNullable(this.nextToken, filterSetsParams.nextToken) &&
        Objects.equals(this.id, filterSetsParams.id) &&
        Objects.equals(this.userId, filterSetsParams.userId) &&
        Objects.equals(this.groupId, filterSetsParams.groupId) &&
        Objects.equals(this.exerciseId, filterSetsParams.exerciseId) &&
        Objects.equals(this.beginTime, filterSetsParams.beginTime) &&
        Objects.equals(this.endTime, filterSetsParams.endTime) &&
        Objects.equals(this.untracked, filterSetsParams.untracked) &&
        Objects.equals(this.includeReps, filterSetsParams.includeReps);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(limit), hashCodeNullable(nextToken), id, userId, groupId, exerciseId, beginTime, endTime, untracked, includeReps);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterSetsParams {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    exerciseId: ").append(toIndentedString(exerciseId)).append("\n");
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    untracked: ").append(toIndentedString(untracked)).append("\n");
    sb.append("    includeReps: ").append(toIndentedString(includeReps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

