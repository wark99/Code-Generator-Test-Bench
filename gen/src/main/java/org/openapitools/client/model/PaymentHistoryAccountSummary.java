/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.client.model.PaymentHistoryAccountSummaryAccountOwner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Account-level summary of transactions
 */
@JsonPropertyOrder({
  PaymentHistoryAccountSummary.JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY,
  PaymentHistoryAccountSummary.JSON_PROPERTY_FINANCIAL_INSTITUTION,
  PaymentHistoryAccountSummary.JSON_PROPERTY_INSTITUTION_ICON,
  PaymentHistoryAccountSummary.JSON_PROPERTY_CURRENCY,
  PaymentHistoryAccountSummary.JSON_PROPERTY_STATUS,
  PaymentHistoryAccountSummary.JSON_PROPERTY_ACCOUNT_NAME,
  PaymentHistoryAccountSummary.JSON_PROPERTY_ACCOUNT_OWNER,
  PaymentHistoryAccountSummary.JSON_PROPERTY_ACCOUNT_TYPE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_BEGINNING_BALANCE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_CURRENT_BALANCE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_BEGIN_DATE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_END_DATE,
  PaymentHistoryAccountSummary.JSON_PROPERTY_TOTAL_NONSUFFICIENT_FUNDS,
  PaymentHistoryAccountSummary.JSON_PROPERTY_DAYS_SINCE_NONSUFFICIENT_FUNDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:25:40.114879426Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentHistoryAccountSummary {
  public static final String JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY = "accountNumberDisplay";
  private String accountNumberDisplay;

  public static final String JSON_PROPERTY_FINANCIAL_INSTITUTION = "financialInstitution";
  private String financialInstitution;

  public static final String JSON_PROPERTY_INSTITUTION_ICON = "institutionIcon";
  private String institutionIcon;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_ACCOUNT_NAME = "accountName";
  private String accountName;

  public static final String JSON_PROPERTY_ACCOUNT_OWNER = "accountOwner";
  private PaymentHistoryAccountSummaryAccountOwner accountOwner;

  public static final String JSON_PROPERTY_ACCOUNT_TYPE = "accountType";
  private String accountType;

  public static final String JSON_PROPERTY_BEGINNING_BALANCE = "beginningBalance";
  private BigDecimal beginningBalance;

  public static final String JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE = "averageMonthlyBalance";
  private BigDecimal averageMonthlyBalance;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_BEGIN_DATE = "beginDate";
  private String beginDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private String endDate;

  public static final String JSON_PROPERTY_TOTAL_NONSUFFICIENT_FUNDS = "totalNonsufficientFunds";
  private BigDecimal totalNonsufficientFunds;

  public static final String JSON_PROPERTY_DAYS_SINCE_NONSUFFICIENT_FUNDS = "daysSinceNonsufficientFunds";
  private Integer daysSinceNonsufficientFunds;

  public PaymentHistoryAccountSummary() {
  }

  public PaymentHistoryAccountSummary accountNumberDisplay(String accountNumberDisplay) {
    
    this.accountNumberDisplay = accountNumberDisplay;
    return this;
  }

   /**
   * Last four digits of the account
   * @return accountNumberDisplay
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountNumberDisplay() {
    return accountNumberDisplay;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountNumberDisplay(String accountNumberDisplay) {
    this.accountNumberDisplay = accountNumberDisplay;
  }


  public PaymentHistoryAccountSummary financialInstitution(String financialInstitution) {
    
    this.financialInstitution = financialInstitution;
    return this;
  }

   /**
   * Name of the account&#39;s institution
   * @return financialInstitution
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FINANCIAL_INSTITUTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFinancialInstitution() {
    return financialInstitution;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_INSTITUTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFinancialInstitution(String financialInstitution) {
    this.financialInstitution = financialInstitution;
  }


  public PaymentHistoryAccountSummary institutionIcon(String institutionIcon) {
    
    this.institutionIcon = institutionIcon;
    return this;
  }

   /**
   * URL of institution icon
   * @return institutionIcon
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTION_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstitutionIcon() {
    return institutionIcon;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstitutionIcon(String institutionIcon) {
    this.institutionIcon = institutionIcon;
  }


  public PaymentHistoryAccountSummary currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PaymentHistoryAccountSummary status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * An account status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public PaymentHistoryAccountSummary accountName(String accountName) {
    
    this.accountName = accountName;
    return this;
  }

   /**
   * The account name from the institution
   * @return accountName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountName() {
    return accountName;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public PaymentHistoryAccountSummary accountOwner(PaymentHistoryAccountSummaryAccountOwner accountOwner) {
    
    this.accountOwner = accountOwner;
    return this;
  }

   /**
   * Get accountOwner
   * @return accountOwner
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_OWNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PaymentHistoryAccountSummaryAccountOwner getAccountOwner() {
    return accountOwner;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_OWNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountOwner(PaymentHistoryAccountSummaryAccountOwner accountOwner) {
    this.accountOwner = accountOwner;
  }


  public PaymentHistoryAccountSummary accountType(String accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * The list of supported account types. * \&quot;checking\&quot;: Standard checking * \&quot;savings\&quot;: Standard savings * \&quot;cd\&quot;: Certificates of deposit * \&quot;moneyMarket\&quot;: Money Market * \&quot;creditCard\&quot;: Standard credit cards * \&quot;lineOfCredit\&quot;: Home equity, line of credit * \&quot;investment\&quot;: Generic investment (no details) * \&quot;investmentTaxDeferred\&quot;: Generic tax-advantaged investment (no details) * \&quot;employeeStockPurchasePlan\&quot;: ESPP, Employee Stock Ownership Plans (ESOP), Stock Purchase Plans * \&quot;ira\&quot;: Individual Retirement Account (not Rollover or Roth) * \&quot;401k\&quot;: 401K Plan * \&quot;roth\&quot;: Roth IRA, Roth 401K * \&quot;403b\&quot;: 403B Plan * \&quot;529plan\&quot;: 529 Plan (True value is 529) * \&quot;rollover\&quot;: Rollover IRA * \&quot;ugma\&quot;: Uniform Gifts to Minors Act * \&quot;utma\&quot;: Uniform Transfers to Minors Act * \&quot;keogh\&quot;: Keogh Plan * \&quot;457plan\&quot;: 457 Plan (True value is 457) * \&quot;401a\&quot;: 401A Plan * \&quot;brokerageAccount\&quot;: Brokerage Account * \&quot;educationSavings\&quot;: Education Savings Account that is not a 529 * \&quot;healthSavingsAccount\&quot;: HSA (Health Savings Accounts) * \&quot;pension\&quot;: Pension * \&quot;profitSharingPlan\&quot;: Profit Sharing Plan * \&quot;roth401k\&quot;: Roth 401K * \&quot;sepIRA\&quot;: Simplified Employee Pension IRA * \&quot;simpleIRA\&quot;: Simple IRA * \&quot;thriftSavingsPlan\&quot;: Thrift Savings Plan * \&quot;variableAnnuity\&quot;: Variable Annuity * \&quot;cryptocurrency\&quot;: Cryptocurrency Wallet, Cryptocurrency Account * \&quot;mortgage\&quot;: Standard Mortgages * \&quot;loan\&quot;: Auto loans, equity loans, other loans * \&quot;studentLoan\&quot;: Student Loan * \&quot;studentLoanGroup\&quot;: Student Loan Group * \&quot;studentLoanAccount\&quot;: Student Loan Account
   * @return accountType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountType() {
    return accountType;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public PaymentHistoryAccountSummary beginningBalance(BigDecimal beginningBalance) {
    
    this.beginningBalance = beginningBalance;
    return this;
  }

   /**
   * Beginning balance of account
   * @return beginningBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBeginningBalance() {
    return beginningBalance;
  }


  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeginningBalance(BigDecimal beginningBalance) {
    this.beginningBalance = beginningBalance;
  }


  public PaymentHistoryAccountSummary averageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    
    this.averageMonthlyBalance = averageMonthlyBalance;
    return this;
  }

   /**
   * Monthly average balance of account
   * @return averageMonthlyBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageMonthlyBalance() {
    return averageMonthlyBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    this.averageMonthlyBalance = averageMonthlyBalance;
  }


  public PaymentHistoryAccountSummary currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Current balance of account
   * @return currentBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public PaymentHistoryAccountSummary beginDate(String beginDate) {
    
    this.beginDate = beginDate;
    return this;
  }

   /**
   * Begin date of account
   * @return beginDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEGIN_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBeginDate() {
    return beginDate;
  }


  @JsonProperty(JSON_PROPERTY_BEGIN_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeginDate(String beginDate) {
    this.beginDate = beginDate;
  }


  public PaymentHistoryAccountSummary endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End date of account
   * @return endDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public PaymentHistoryAccountSummary totalNonsufficientFunds(BigDecimal totalNonsufficientFunds) {
    
    this.totalNonsufficientFunds = totalNonsufficientFunds;
    return this;
  }

   /**
   * Total of NSF transactions in this account
   * @return totalNonsufficientFunds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_NONSUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalNonsufficientFunds() {
    return totalNonsufficientFunds;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_NONSUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalNonsufficientFunds(BigDecimal totalNonsufficientFunds) {
    this.totalNonsufficientFunds = totalNonsufficientFunds;
  }


  public PaymentHistoryAccountSummary daysSinceNonsufficientFunds(Integer daysSinceNonsufficientFunds) {
    
    this.daysSinceNonsufficientFunds = daysSinceNonsufficientFunds;
    return this;
  }

   /**
   * Days since the latest NSF transaction for this account
   * @return daysSinceNonsufficientFunds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAYS_SINCE_NONSUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDaysSinceNonsufficientFunds() {
    return daysSinceNonsufficientFunds;
  }


  @JsonProperty(JSON_PROPERTY_DAYS_SINCE_NONSUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDaysSinceNonsufficientFunds(Integer daysSinceNonsufficientFunds) {
    this.daysSinceNonsufficientFunds = daysSinceNonsufficientFunds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentHistoryAccountSummary paymentHistoryAccountSummary = (PaymentHistoryAccountSummary) o;
    return Objects.equals(this.accountNumberDisplay, paymentHistoryAccountSummary.accountNumberDisplay) &&
        Objects.equals(this.financialInstitution, paymentHistoryAccountSummary.financialInstitution) &&
        Objects.equals(this.institutionIcon, paymentHistoryAccountSummary.institutionIcon) &&
        Objects.equals(this.currency, paymentHistoryAccountSummary.currency) &&
        Objects.equals(this.status, paymentHistoryAccountSummary.status) &&
        Objects.equals(this.accountName, paymentHistoryAccountSummary.accountName) &&
        Objects.equals(this.accountOwner, paymentHistoryAccountSummary.accountOwner) &&
        Objects.equals(this.accountType, paymentHistoryAccountSummary.accountType) &&
        Objects.equals(this.beginningBalance, paymentHistoryAccountSummary.beginningBalance) &&
        Objects.equals(this.averageMonthlyBalance, paymentHistoryAccountSummary.averageMonthlyBalance) &&
        Objects.equals(this.currentBalance, paymentHistoryAccountSummary.currentBalance) &&
        Objects.equals(this.beginDate, paymentHistoryAccountSummary.beginDate) &&
        Objects.equals(this.endDate, paymentHistoryAccountSummary.endDate) &&
        Objects.equals(this.totalNonsufficientFunds, paymentHistoryAccountSummary.totalNonsufficientFunds) &&
        Objects.equals(this.daysSinceNonsufficientFunds, paymentHistoryAccountSummary.daysSinceNonsufficientFunds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumberDisplay, financialInstitution, institutionIcon, currency, status, accountName, accountOwner, accountType, beginningBalance, averageMonthlyBalance, currentBalance, beginDate, endDate, totalNonsufficientFunds, daysSinceNonsufficientFunds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentHistoryAccountSummary {\n");
    sb.append("    accountNumberDisplay: ").append(toIndentedString(accountNumberDisplay)).append("\n");
    sb.append("    financialInstitution: ").append(toIndentedString(financialInstitution)).append("\n");
    sb.append("    institutionIcon: ").append(toIndentedString(institutionIcon)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountOwner: ").append(toIndentedString(accountOwner)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    beginningBalance: ").append(toIndentedString(beginningBalance)).append("\n");
    sb.append("    averageMonthlyBalance: ").append(toIndentedString(averageMonthlyBalance)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    beginDate: ").append(toIndentedString(beginDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    totalNonsufficientFunds: ").append(toIndentedString(totalNonsufficientFunds)).append("\n");
    sb.append("    daysSinceNonsufficientFunds: ").append(toIndentedString(daysSinceNonsufficientFunds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

