/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConferenceOptions
 */
@JsonPropertyOrder({
  ConferenceOptions.JSON_PROPERTY_SUBJECT,
  ConferenceOptions.JSON_PROPERTY_START_AUDIO_MUTED,
  ConferenceOptions.JSON_PROPERTY_ENABLE_RECORDING,
  ConferenceOptions.JSON_PROPERTY_DRIVE_ID,
  ConferenceOptions.JSON_PROPERTY_ENABLE_MODERATOR_VIDEO,
  ConferenceOptions.JSON_PROPERTY_START_AUDIO_ONLY,
  ConferenceOptions.JSON_PROPERTY_LOBBY_ENABLED,
  ConferenceOptions.JSON_PROPERTY_PASSWORD_ENABLED,
  ConferenceOptions.JSON_PROPERTY_PASSWORD,
  ConferenceOptions.JSON_PROPERTY_E2EE_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ConferenceOptions {
  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_START_AUDIO_MUTED = "start_audio_muted";
  private Boolean startAudioMuted;

  public static final String JSON_PROPERTY_ENABLE_RECORDING = "enable_recording";
  private Boolean enableRecording;

  public static final String JSON_PROPERTY_DRIVE_ID = "drive_id";
  private Integer driveId;

  public static final String JSON_PROPERTY_ENABLE_MODERATOR_VIDEO = "enable_moderator_video";
  private Boolean enableModeratorVideo;

  public static final String JSON_PROPERTY_START_AUDIO_ONLY = "start_audio_only";
  private Boolean startAudioOnly;

  public static final String JSON_PROPERTY_LOBBY_ENABLED = "lobby_enabled";
  private Boolean lobbyEnabled;

  public static final String JSON_PROPERTY_PASSWORD_ENABLED = "password_enabled";
  private Boolean passwordEnabled;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_E2EE_ENABLED = "e2ee_enabled";
  private Boolean e2eeEnabled;

  public ConferenceOptions() {
  }

  public ConferenceOptions subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public ConferenceOptions startAudioMuted(Boolean startAudioMuted) {
    
    this.startAudioMuted = startAudioMuted;
    return this;
  }

   /**
   * Get startAudioMuted
   * @return startAudioMuted
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_AUDIO_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getStartAudioMuted() {
    return startAudioMuted;
  }


  @JsonProperty(JSON_PROPERTY_START_AUDIO_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartAudioMuted(Boolean startAudioMuted) {
    this.startAudioMuted = startAudioMuted;
  }


  public ConferenceOptions enableRecording(Boolean enableRecording) {
    
    this.enableRecording = enableRecording;
    return this;
  }

   /**
   * Get enableRecording
   * @return enableRecording
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_RECORDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableRecording() {
    return enableRecording;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_RECORDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableRecording(Boolean enableRecording) {
    this.enableRecording = enableRecording;
  }


  public ConferenceOptions driveId(Integer driveId) {
    
    this.driveId = driveId;
    return this;
  }

   /**
   * Required if enable_recording is true
   * @return driveId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDriveId() {
    return driveId;
  }


  @JsonProperty(JSON_PROPERTY_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDriveId(Integer driveId) {
    this.driveId = driveId;
  }


  public ConferenceOptions enableModeratorVideo(Boolean enableModeratorVideo) {
    
    this.enableModeratorVideo = enableModeratorVideo;
    return this;
  }

   /**
   * Get enableModeratorVideo
   * @return enableModeratorVideo
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_MODERATOR_VIDEO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableModeratorVideo() {
    return enableModeratorVideo;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_MODERATOR_VIDEO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableModeratorVideo(Boolean enableModeratorVideo) {
    this.enableModeratorVideo = enableModeratorVideo;
  }


  public ConferenceOptions startAudioOnly(Boolean startAudioOnly) {
    
    this.startAudioOnly = startAudioOnly;
    return this;
  }

   /**
   * Get startAudioOnly
   * @return startAudioOnly
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_AUDIO_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getStartAudioOnly() {
    return startAudioOnly;
  }


  @JsonProperty(JSON_PROPERTY_START_AUDIO_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartAudioOnly(Boolean startAudioOnly) {
    this.startAudioOnly = startAudioOnly;
  }


  public ConferenceOptions lobbyEnabled(Boolean lobbyEnabled) {
    
    this.lobbyEnabled = lobbyEnabled;
    return this;
  }

   /**
   * Get lobbyEnabled
   * @return lobbyEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOBBY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLobbyEnabled() {
    return lobbyEnabled;
  }


  @JsonProperty(JSON_PROPERTY_LOBBY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLobbyEnabled(Boolean lobbyEnabled) {
    this.lobbyEnabled = lobbyEnabled;
  }


  public ConferenceOptions passwordEnabled(Boolean passwordEnabled) {
    
    this.passwordEnabled = passwordEnabled;
    return this;
  }

   /**
   * Get passwordEnabled
   * @return passwordEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSWORD_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPasswordEnabled() {
    return passwordEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPasswordEnabled(Boolean passwordEnabled) {
    this.passwordEnabled = passwordEnabled;
  }


  public ConferenceOptions password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Required if password_enabled is true (never displayed)
   * @return password
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public ConferenceOptions e2eeEnabled(Boolean e2eeEnabled) {
    
    this.e2eeEnabled = e2eeEnabled;
    return this;
  }

   /**
   * Get e2eeEnabled
   * @return e2eeEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_E2EE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getE2eeEnabled() {
    return e2eeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_E2EE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setE2eeEnabled(Boolean e2eeEnabled) {
    this.e2eeEnabled = e2eeEnabled;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConferenceOptions conferenceOptions = (ConferenceOptions) o;
    return Objects.equals(this.subject, conferenceOptions.subject) &&
        Objects.equals(this.startAudioMuted, conferenceOptions.startAudioMuted) &&
        Objects.equals(this.enableRecording, conferenceOptions.enableRecording) &&
        Objects.equals(this.driveId, conferenceOptions.driveId) &&
        Objects.equals(this.enableModeratorVideo, conferenceOptions.enableModeratorVideo) &&
        Objects.equals(this.startAudioOnly, conferenceOptions.startAudioOnly) &&
        Objects.equals(this.lobbyEnabled, conferenceOptions.lobbyEnabled) &&
        Objects.equals(this.passwordEnabled, conferenceOptions.passwordEnabled) &&
        Objects.equals(this.password, conferenceOptions.password) &&
        Objects.equals(this.e2eeEnabled, conferenceOptions.e2eeEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, startAudioMuted, enableRecording, driveId, enableModeratorVideo, startAudioOnly, lobbyEnabled, passwordEnabled, password, e2eeEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConferenceOptions {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    startAudioMuted: ").append(toIndentedString(startAudioMuted)).append("\n");
    sb.append("    enableRecording: ").append(toIndentedString(enableRecording)).append("\n");
    sb.append("    driveId: ").append(toIndentedString(driveId)).append("\n");
    sb.append("    enableModeratorVideo: ").append(toIndentedString(enableModeratorVideo)).append("\n");
    sb.append("    startAudioOnly: ").append(toIndentedString(startAudioOnly)).append("\n");
    sb.append("    lobbyEnabled: ").append(toIndentedString(lobbyEnabled)).append("\n");
    sb.append("    passwordEnabled: ").append(toIndentedString(passwordEnabled)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    e2eeEnabled: ").append(toIndentedString(e2eeEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

