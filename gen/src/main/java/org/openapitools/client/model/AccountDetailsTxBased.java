/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountDetailsTxBased
 */
@JsonPropertyOrder({
  AccountDetailsTxBased.JSON_PROPERTY_INTEREST_MARGIN_BALANCE,
  AccountDetailsTxBased.JSON_PROPERTY_AVAILABLE_CASH_BALANCE,
  AccountDetailsTxBased.JSON_PROPERTY_VESTED_BALANCE,
  AccountDetailsTxBased.JSON_PROPERTY_CURRENT_LOAN_BALANCE,
  AccountDetailsTxBased.JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT,
  AccountDetailsTxBased.JSON_PROPERTY_MARGIN_BALANCE,
  AccountDetailsTxBased.JSON_PROPERTY_CURRENT_BALANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:23.431609925Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountDetailsTxBased {
  public static final String JSON_PROPERTY_INTEREST_MARGIN_BALANCE = "interestMarginBalance";
  private BigDecimal interestMarginBalance;

  public static final String JSON_PROPERTY_AVAILABLE_CASH_BALANCE = "availableCashBalance";
  private BigDecimal availableCashBalance;

  public static final String JSON_PROPERTY_VESTED_BALANCE = "vestedBalance";
  private BigDecimal vestedBalance;

  public static final String JSON_PROPERTY_CURRENT_LOAN_BALANCE = "currentLoanBalance";
  private BigDecimal currentLoanBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT = "availableBalanceAmount";
  private BigDecimal availableBalanceAmount;

  public static final String JSON_PROPERTY_MARGIN_BALANCE = "marginBalance";
  private BigDecimal marginBalance;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public AccountDetailsTxBased() {
  }

  public AccountDetailsTxBased interestMarginBalance(BigDecimal interestMarginBalance) {
    
    this.interestMarginBalance = interestMarginBalance;
    return this;
  }

   /**
   * Only available for investment accounts. Net interest earned after deducting interest paid out.
   * @return interestMarginBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestMarginBalance() {
    return interestMarginBalance;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestMarginBalance(BigDecimal interestMarginBalance) {
    this.interestMarginBalance = interestMarginBalance;
  }


  public AccountDetailsTxBased availableCashBalance(BigDecimal availableCashBalance) {
    
    this.availableCashBalance = availableCashBalance;
    return this;
  }

   /**
   * Only available for investment accounts. Amount available for cash withdrawal.
   * @return availableCashBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_CASH_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableCashBalance() {
    return availableCashBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_CASH_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableCashBalance(BigDecimal availableCashBalance) {
    this.availableCashBalance = availableCashBalance;
  }


  public AccountDetailsTxBased vestedBalance(BigDecimal vestedBalance) {
    
    this.vestedBalance = vestedBalance;
    return this;
  }

   /**
   * Only available for investment accounts. Vested amount in account.
   * @return vestedBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VESTED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getVestedBalance() {
    return vestedBalance;
  }


  @JsonProperty(JSON_PROPERTY_VESTED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVestedBalance(BigDecimal vestedBalance) {
    this.vestedBalance = vestedBalance;
  }


  public AccountDetailsTxBased currentLoanBalance(BigDecimal currentLoanBalance) {
    
    this.currentLoanBalance = currentLoanBalance;
    return this;
  }

   /**
   * Only available for investment accounts. Current loan balance.
   * @return currentLoanBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_LOAN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentLoanBalance() {
    return currentLoanBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_LOAN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentLoanBalance(BigDecimal currentLoanBalance) {
    this.currentLoanBalance = currentLoanBalance;
  }


  public AccountDetailsTxBased availableBalanceAmount(BigDecimal availableBalanceAmount) {
    
    this.availableBalanceAmount = availableBalanceAmount;
    return this;
  }

   /**
   * The available balance for the account
   * @return availableBalanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalanceAmount() {
    return availableBalanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalanceAmount(BigDecimal availableBalanceAmount) {
    this.availableBalanceAmount = availableBalanceAmount;
  }


  public AccountDetailsTxBased marginBalance(BigDecimal marginBalance) {
    
    this.marginBalance = marginBalance;
    return this;
  }

   /**
   * Net interest earned after deducting interest paid out
   * @return marginBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMarginBalance() {
    return marginBalance;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarginBalance(BigDecimal marginBalance) {
    this.marginBalance = marginBalance;
  }


  public AccountDetailsTxBased currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Current balance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDetailsTxBased accountDetailsTxBased = (AccountDetailsTxBased) o;
    return Objects.equals(this.interestMarginBalance, accountDetailsTxBased.interestMarginBalance) &&
        Objects.equals(this.availableCashBalance, accountDetailsTxBased.availableCashBalance) &&
        Objects.equals(this.vestedBalance, accountDetailsTxBased.vestedBalance) &&
        Objects.equals(this.currentLoanBalance, accountDetailsTxBased.currentLoanBalance) &&
        Objects.equals(this.availableBalanceAmount, accountDetailsTxBased.availableBalanceAmount) &&
        Objects.equals(this.marginBalance, accountDetailsTxBased.marginBalance) &&
        Objects.equals(this.currentBalance, accountDetailsTxBased.currentBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(interestMarginBalance, availableCashBalance, vestedBalance, currentLoanBalance, availableBalanceAmount, marginBalance, currentBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDetailsTxBased {\n");
    sb.append("    interestMarginBalance: ").append(toIndentedString(interestMarginBalance)).append("\n");
    sb.append("    availableCashBalance: ").append(toIndentedString(availableCashBalance)).append("\n");
    sb.append("    vestedBalance: ").append(toIndentedString(vestedBalance)).append("\n");
    sb.append("    currentLoanBalance: ").append(toIndentedString(currentLoanBalance)).append("\n");
    sb.append("    availableBalanceAmount: ").append(toIndentedString(availableBalanceAmount)).append("\n");
    sb.append("    marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

