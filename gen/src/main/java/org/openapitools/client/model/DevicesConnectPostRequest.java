/*
 * VR-Training backend with pockebase (device api)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DevicesConnectPostRequest
 */
@JsonPropertyOrder({
  DevicesConnectPostRequest.JSON_PROPERTY_CONNECT_CODE,
  DevicesConnectPostRequest.JSON_PROPERTY_DEVICE_SERIAL_NUMBER
})
@JsonTypeName("_devices_connect_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:19:11.915359394Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DevicesConnectPostRequest {
  public static final String JSON_PROPERTY_CONNECT_CODE = "connect_code";
  private BigDecimal connectCode;

  public static final String JSON_PROPERTY_DEVICE_SERIAL_NUMBER = "device_serial_number";
  private String deviceSerialNumber;

  public DevicesConnectPostRequest() {
  }

  public DevicesConnectPostRequest connectCode(BigDecimal connectCode) {
    
    this.connectCode = connectCode;
    return this;
  }

   /**
   * the code showing in the client admin panel
   * @return connectCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getConnectCode() {
    return connectCode;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectCode(BigDecimal connectCode) {
    this.connectCode = connectCode;
  }


  public DevicesConnectPostRequest deviceSerialNumber(String deviceSerialNumber) {
    
    this.deviceSerialNumber = deviceSerialNumber;
    return this;
  }

   /**
   * any unique string the device can provide
   * @return deviceSerialNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceSerialNumber() {
    return deviceSerialNumber;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceSerialNumber(String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevicesConnectPostRequest devicesConnectPostRequest = (DevicesConnectPostRequest) o;
    return Objects.equals(this.connectCode, devicesConnectPostRequest.connectCode) &&
        Objects.equals(this.deviceSerialNumber, devicesConnectPostRequest.deviceSerialNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectCode, deviceSerialNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevicesConnectPostRequest {\n");
    sb.append("    connectCode: ").append(toIndentedString(connectCode)).append("\n");
    sb.append("    deviceSerialNumber: ").append(toIndentedString(deviceSerialNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

