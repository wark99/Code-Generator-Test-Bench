/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AgeObtained;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.YearRange;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IdentificationIssuances
 */
@JsonPropertyOrder({
  IdentificationIssuances.JSON_PROPERTY_AGE_OBTAINED,
  IdentificationIssuances.JSON_PROPERTY_ALERT_MESSAGE_CODE,
  IdentificationIssuances.JSON_PROPERTY_DATE,
  IdentificationIssuances.JSON_PROPERTY_SOURCE,
  IdentificationIssuances.JSON_PROPERTY_STATE,
  IdentificationIssuances.JSON_PROPERTY_STATUS,
  IdentificationIssuances.JSON_PROPERTY_TYPE,
  IdentificationIssuances.JSON_PROPERTY_YEAR_RANGE,
  IdentificationIssuances.JSON_PROPERTY_YEARS_COVERED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IdentificationIssuances {
  public static final String JSON_PROPERTY_AGE_OBTAINED = "ageObtained";
  private AgeObtained ageObtained;

  public static final String JSON_PROPERTY_ALERT_MESSAGE_CODE = "alertMessageCode";
  private String alertMessageCode;

  public static final String JSON_PROPERTY_DATE = "date";
  private DateOfExpiration date;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_YEAR_RANGE = "yearRange";
  private YearRange yearRange;

  public static final String JSON_PROPERTY_YEARS_COVERED = "yearsCovered";
  private String yearsCovered;

  public IdentificationIssuances() {
  }

  public IdentificationIssuances ageObtained(AgeObtained ageObtained) {
    
    this.ageObtained = ageObtained;
    return this;
  }

   /**
   * Get ageObtained
   * @return ageObtained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE_OBTAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgeObtained getAgeObtained() {
    return ageObtained;
  }


  @JsonProperty(JSON_PROPERTY_AGE_OBTAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgeObtained(AgeObtained ageObtained) {
    this.ageObtained = ageObtained;
  }


  public IdentificationIssuances alertMessageCode(String alertMessageCode) {
    
    this.alertMessageCode = alertMessageCode;
    return this;
  }

   /**
   * Get alertMessageCode
   * @return alertMessageCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALERT_MESSAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlertMessageCode() {
    return alertMessageCode;
  }


  @JsonProperty(JSON_PROPERTY_ALERT_MESSAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlertMessageCode(String alertMessageCode) {
    this.alertMessageCode = alertMessageCode;
  }


  public IdentificationIssuances date(DateOfExpiration date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(DateOfExpiration date) {
    this.date = date;
  }


  public IdentificationIssuances source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public IdentificationIssuances state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  public IdentificationIssuances status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public IdentificationIssuances type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public IdentificationIssuances yearRange(YearRange yearRange) {
    
    this.yearRange = yearRange;
    return this;
  }

   /**
   * Get yearRange
   * @return yearRange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YEAR_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public YearRange getYearRange() {
    return yearRange;
  }


  @JsonProperty(JSON_PROPERTY_YEAR_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYearRange(YearRange yearRange) {
    this.yearRange = yearRange;
  }


  public IdentificationIssuances yearsCovered(String yearsCovered) {
    
    this.yearsCovered = yearsCovered;
    return this;
  }

   /**
   * Get yearsCovered
   * @return yearsCovered
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YEARS_COVERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYearsCovered() {
    return yearsCovered;
  }


  @JsonProperty(JSON_PROPERTY_YEARS_COVERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYearsCovered(String yearsCovered) {
    this.yearsCovered = yearsCovered;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentificationIssuances identificationIssuances = (IdentificationIssuances) o;
    return Objects.equals(this.ageObtained, identificationIssuances.ageObtained) &&
        Objects.equals(this.alertMessageCode, identificationIssuances.alertMessageCode) &&
        Objects.equals(this.date, identificationIssuances.date) &&
        Objects.equals(this.source, identificationIssuances.source) &&
        Objects.equals(this.state, identificationIssuances.state) &&
        Objects.equals(this.status, identificationIssuances.status) &&
        Objects.equals(this.type, identificationIssuances.type) &&
        Objects.equals(this.yearRange, identificationIssuances.yearRange) &&
        Objects.equals(this.yearsCovered, identificationIssuances.yearsCovered);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageObtained, alertMessageCode, date, source, state, status, type, yearRange, yearsCovered);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentificationIssuances {\n");
    sb.append("    ageObtained: ").append(toIndentedString(ageObtained)).append("\n");
    sb.append("    alertMessageCode: ").append(toIndentedString(alertMessageCode)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    yearRange: ").append(toIndentedString(yearRange)).append("\n");
    sb.append("    yearsCovered: ").append(toIndentedString(yearsCovered)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

