/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomerBranch;
import org.openapitools.client.model.Inputs;
import org.openapitools.client.model.Warnings;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Custom4
 */
@JsonPropertyOrder({
  Custom4.JSON_PROPERTY_CUSTOMER_BRANCH,
  Custom4.JSON_PROPERTY_FEATURES,
  Custom4.JSON_PROPERTY_INPUTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Custom4 {
  public static final String JSON_PROPERTY_CUSTOMER_BRANCH = "customerBranch";
  private CustomerBranch customerBranch;

  public static final String JSON_PROPERTY_FEATURES = "features";
  private List<Warnings> features;

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  private List<Inputs> inputs;

  public Custom4() {
  }

  public Custom4 customerBranch(CustomerBranch customerBranch) {
    
    this.customerBranch = customerBranch;
    return this;
  }

   /**
   * Get customerBranch
   * @return customerBranch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerBranch getCustomerBranch() {
    return customerBranch;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerBranch(CustomerBranch customerBranch) {
    this.customerBranch = customerBranch;
  }


  public Custom4 features(List<Warnings> features) {
    
    this.features = features;
    return this;
  }

  public Custom4 addFeaturesItem(Warnings featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Warnings> getFeatures() {
    return features;
  }


  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatures(List<Warnings> features) {
    this.features = features;
  }


  public Custom4 inputs(List<Inputs> inputs) {
    
    this.inputs = inputs;
    return this;
  }

  public Custom4 addInputsItem(Inputs inputsItem) {
    if (this.inputs == null) {
      this.inputs = new ArrayList<>();
    }
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * Get inputs
   * @return inputs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Inputs> getInputs() {
    return inputs;
  }


  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputs(List<Inputs> inputs) {
    this.inputs = inputs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Custom4 custom4 = (Custom4) o;
    return Objects.equals(this.customerBranch, custom4.customerBranch) &&
        Objects.equals(this.features, custom4.features) &&
        Objects.equals(this.inputs, custom4.inputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerBranch, features, inputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Custom4 {\n");
    sb.append("    customerBranch: ").append(toIndentedString(customerBranch)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

