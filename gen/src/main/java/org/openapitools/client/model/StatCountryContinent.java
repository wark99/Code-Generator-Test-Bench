/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatCountryContinent
 */
@JsonPropertyOrder({
  StatCountryContinent.JSON_PROPERTY_A_S,
  StatCountryContinent.JSON_PROPERTY_A_N,
  StatCountryContinent.JSON_PROPERTY_A_F,
  StatCountryContinent.JSON_PROPERTY_S_A,
  StatCountryContinent.JSON_PROPERTY_E_U,
  StatCountryContinent.JSON_PROPERTY_O_C,
  StatCountryContinent.JSON_PROPERTY_N_A
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatCountryContinent {
  public static final String JSON_PROPERTY_A_S = "AS";
  private Integer AS;

  public static final String JSON_PROPERTY_A_N = "AN";
  private Integer AN;

  public static final String JSON_PROPERTY_A_F = "AF";
  private Integer AF;

  public static final String JSON_PROPERTY_S_A = "SA";
  private Integer SA;

  public static final String JSON_PROPERTY_E_U = "EU";
  private Integer EU;

  public static final String JSON_PROPERTY_O_C = "OC";
  private Integer OC;

  public static final String JSON_PROPERTY_N_A = "NA";
  private Integer NA;

  public StatCountryContinent() {
  }

  public StatCountryContinent AS(Integer AS) {
    
    this.AS = AS;
    return this;
  }

   /**
   * The number of listeners in Asie
   * @return AS
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_A_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAS() {
    return AS;
  }


  @JsonProperty(JSON_PROPERTY_A_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAS(Integer AS) {
    this.AS = AS;
  }


  public StatCountryContinent AN(Integer AN) {
    
    this.AN = AN;
    return this;
  }

   /**
   * The number of listeners in Antarctique
   * @return AN
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_A_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAN() {
    return AN;
  }


  @JsonProperty(JSON_PROPERTY_A_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAN(Integer AN) {
    this.AN = AN;
  }


  public StatCountryContinent AF(Integer AF) {
    
    this.AF = AF;
    return this;
  }

   /**
   * The number of listeners in Afrique
   * @return AF
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_A_F)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAF() {
    return AF;
  }


  @JsonProperty(JSON_PROPERTY_A_F)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAF(Integer AF) {
    this.AF = AF;
  }


  public StatCountryContinent SA(Integer SA) {
    
    this.SA = SA;
    return this;
  }

   /**
   * The number of listeners in South America
   * @return SA
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_S_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSA() {
    return SA;
  }


  @JsonProperty(JSON_PROPERTY_S_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSA(Integer SA) {
    this.SA = SA;
  }


  public StatCountryContinent EU(Integer EU) {
    
    this.EU = EU;
    return this;
  }

   /**
   * The number of listeners in Europe
   * @return EU
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_E_U)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getEU() {
    return EU;
  }


  @JsonProperty(JSON_PROPERTY_E_U)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEU(Integer EU) {
    this.EU = EU;
  }


  public StatCountryContinent OC(Integer OC) {
    
    this.OC = OC;
    return this;
  }

   /**
   * The number of listeners in Oc√©anie
   * @return OC
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_O_C)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOC() {
    return OC;
  }


  @JsonProperty(JSON_PROPERTY_O_C)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOC(Integer OC) {
    this.OC = OC;
  }


  public StatCountryContinent NA(Integer NA) {
    
    this.NA = NA;
    return this;
  }

   /**
   * The number of listeners in North America
   * @return NA
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_N_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNA() {
    return NA;
  }


  @JsonProperty(JSON_PROPERTY_N_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNA(Integer NA) {
    this.NA = NA;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatCountryContinent statCountryContinent = (StatCountryContinent) o;
    return Objects.equals(this.AS, statCountryContinent.AS) &&
        Objects.equals(this.AN, statCountryContinent.AN) &&
        Objects.equals(this.AF, statCountryContinent.AF) &&
        Objects.equals(this.SA, statCountryContinent.SA) &&
        Objects.equals(this.EU, statCountryContinent.EU) &&
        Objects.equals(this.OC, statCountryContinent.OC) &&
        Objects.equals(this.NA, statCountryContinent.NA);
  }

  @Override
  public int hashCode() {
    return Objects.hash(AS, AN, AF, SA, EU, OC, NA);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatCountryContinent {\n");
    sb.append("    AS: ").append(toIndentedString(AS)).append("\n");
    sb.append("    AN: ").append(toIndentedString(AN)).append("\n");
    sb.append("    AF: ").append(toIndentedString(AF)).append("\n");
    sb.append("    SA: ").append(toIndentedString(SA)).append("\n");
    sb.append("    EU: ").append(toIndentedString(EU)).append("\n");
    sb.append("    OC: ").append(toIndentedString(OC)).append("\n");
    sb.append("    NA: ").append(toIndentedString(NA)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

