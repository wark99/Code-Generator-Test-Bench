/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatusResponseStatusEstimatesInnerLinesInner
 */
@JsonPropertyOrder({
  StatusResponseStatusEstimatesInnerLinesInner.JSON_PROPERTY_COVERAGE_TYPE_CODE,
  StatusResponseStatusEstimatesInnerLinesInner.JSON_PROPERTY_AMOUNT
})
@JsonTypeName("StatusResponse_status_estimates_inner_lines_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatusResponseStatusEstimatesInnerLinesInner {
  /**
   * Gets or Sets coverageTypeCode
   */
  public enum CoverageTypeCodeEnum {
    LABOR("Labor"),
    
    PARTS("Parts"),
    
    OTHER("Other"),
    
    MILEAGE("Mileage"),
    
    TAX("Tax"),
    
    ADMINFEE("AdminFee");

    private String value;

    CoverageTypeCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CoverageTypeCodeEnum fromValue(String value) {
      for (CoverageTypeCodeEnum b : CoverageTypeCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COVERAGE_TYPE_CODE = "coverageTypeCode";
  private CoverageTypeCodeEnum coverageTypeCode;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public StatusResponseStatusEstimatesInnerLinesInner() {
  }

  public StatusResponseStatusEstimatesInnerLinesInner coverageTypeCode(CoverageTypeCodeEnum coverageTypeCode) {
    
    this.coverageTypeCode = coverageTypeCode;
    return this;
  }

   /**
   * Get coverageTypeCode
   * @return coverageTypeCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CoverageTypeCodeEnum getCoverageTypeCode() {
    return coverageTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoverageTypeCode(CoverageTypeCodeEnum coverageTypeCode) {
    this.coverageTypeCode = coverageTypeCode;
  }


  public StatusResponseStatusEstimatesInnerLinesInner amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(String amount) {
    this.amount = amount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusResponseStatusEstimatesInnerLinesInner statusResponseStatusEstimatesInnerLinesInner = (StatusResponseStatusEstimatesInnerLinesInner) o;
    return Objects.equals(this.coverageTypeCode, statusResponseStatusEstimatesInnerLinesInner.coverageTypeCode) &&
        Objects.equals(this.amount, statusResponseStatusEstimatesInnerLinesInner.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverageTypeCode, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusResponseStatusEstimatesInnerLinesInner {\n");
    sb.append("    coverageTypeCode: ").append(toIndentedString(coverageTypeCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

