/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Comments2;
import org.openapitools.client.model.CompanyId;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateDeviceNetIdTypeScheme
 */
@JsonPropertyOrder({
  CreateDeviceNetIdTypeScheme.JSON_PROPERTY_COMPANY_ID,
  CreateDeviceNetIdTypeScheme.JSON_PROPERTY_NAME,
  CreateDeviceNetIdTypeScheme.JSON_PROPERTY_SLUG,
  CreateDeviceNetIdTypeScheme.JSON_PROPERTY_REGEXP,
  CreateDeviceNetIdTypeScheme.JSON_PROPERTY_COMMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateDeviceNetIdTypeScheme {
  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private CompanyId companyId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SLUG = "slug";
  private String slug;

  public static final String JSON_PROPERTY_REGEXP = "regexp";
  private String regexp;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private Comments2 comments;

  public CreateDeviceNetIdTypeScheme() {
  }

  public CreateDeviceNetIdTypeScheme companyId(CompanyId companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyId getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(CompanyId companyId) {
    this.companyId = companyId;
  }


  public CreateDeviceNetIdTypeScheme name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Device net id type name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateDeviceNetIdTypeScheme slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Device net id type slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSlug() {
    return slug;
  }


  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlug(String slug) {
    this.slug = slug;
  }


  public CreateDeviceNetIdTypeScheme regexp(String regexp) {
    
    this.regexp = regexp;
    return this;
  }

   /**
   * Device net id type regular expression. The following characters are valid: A-Z, a-z, 0-9, \&quot;-\&quot;, \&quot;_\&quot;, \&quot;.\&quot;
   * @return regexp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGEXP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegexp() {
    return regexp;
  }


  @JsonProperty(JSON_PROPERTY_REGEXP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegexp(String regexp) {
    this.regexp = regexp;
  }


  public CreateDeviceNetIdTypeScheme comments(Comments2 comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Comments2 getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(Comments2 comments) {
    this.comments = comments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeviceNetIdTypeScheme createDeviceNetIdTypeScheme = (CreateDeviceNetIdTypeScheme) o;
    return Objects.equals(this.companyId, createDeviceNetIdTypeScheme.companyId) &&
        Objects.equals(this.name, createDeviceNetIdTypeScheme.name) &&
        Objects.equals(this.slug, createDeviceNetIdTypeScheme.slug) &&
        Objects.equals(this.regexp, createDeviceNetIdTypeScheme.regexp) &&
        Objects.equals(this.comments, createDeviceNetIdTypeScheme.comments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, name, slug, regexp, comments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeviceNetIdTypeScheme {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    regexp: ").append(toIndentedString(regexp)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

