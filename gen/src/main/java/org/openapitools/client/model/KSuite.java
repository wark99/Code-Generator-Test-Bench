/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The kSuite in which the kDrive is
 */
@JsonPropertyOrder({
  KSuite.JSON_PROPERTY_ID,
  KSuite.JSON_PROPERTY_NAME,
  KSuite.JSON_PROPERTY_PACK_ID,
  KSuite.JSON_PROPERTY_PACK
})
@JsonTypeName("k_suite")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class KSuite {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PACK_ID = "pack_id";
  private Integer packId;

  public static final String JSON_PROPERTY_PACK = "pack";
  private String pack;

  public KSuite() {
  }

  public KSuite id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the kSuite
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public KSuite name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the kSuite
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public KSuite packId(Integer packId) {
    
    this.packId = packId;
    return this;
  }

   /**
   * Id of the type of kSuite
   * @return packId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPackId() {
    return packId;
  }


  @JsonProperty(JSON_PROPERTY_PACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackId(Integer packId) {
    this.packId = packId;
  }


  public KSuite pack(String pack) {
    
    this.pack = pack;
    return this;
  }

   /**
   * Name of the type of kSuite
   * @return pack
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPack() {
    return pack;
  }


  @JsonProperty(JSON_PROPERTY_PACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPack(String pack) {
    this.pack = pack;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KSuite kSuite = (KSuite) o;
    return Objects.equals(this.id, kSuite.id) &&
        Objects.equals(this.name, kSuite.name) &&
        Objects.equals(this.packId, kSuite.packId) &&
        Objects.equals(this.pack, kSuite.pack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, packId, pack);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KSuite {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packId: ").append(toIndentedString(packId)).append("\n");
    sb.append("    pack: ").append(toIndentedString(pack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

