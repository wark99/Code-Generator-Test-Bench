/*
 * RPHaven Games Management
 * This is a sample Pet Store Server based on the OpenAPI 3.1 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: apiteam@rphaven.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TableResource
 */
@JsonPropertyOrder({
  TableResource.JSON_PROPERTY_NAME,
  TableResource.JSON_PROPERTY_SEATS,
  TableResource.JSON_PROPERTY_FORMED,
  TableResource.JSON_PROPERTY_DISBANDS,
  TableResource.JSON_PROPERTY_SIGNUP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:25:40.667796194Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TableResource {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SEATS = "seats";
  private Integer seats;

  public static final String JSON_PROPERTY_FORMED = "formed";
  private OffsetDateTime formed;

  public static final String JSON_PROPERTY_DISBANDS = "disbands";
  private OffsetDateTime disbands;

  public static final String JSON_PROPERTY_SIGNUP = "signup";
  private OffsetDateTime signup;

  public TableResource() {
  }

  public TableResource name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TableResource seats(Integer seats) {
    
    this.seats = seats;
    return this;
  }

   /**
   * The maximum number of participants (including GMs)
   * @return seats
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSeats() {
    return seats;
  }


  @JsonProperty(JSON_PROPERTY_SEATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeats(Integer seats) {
    this.seats = seats;
  }


  public TableResource formed(OffsetDateTime formed) {
    
    this.formed = formed;
    return this;
  }

   /**
   * Get formed
   * @return formed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFormed() {
    return formed;
  }


  @JsonProperty(JSON_PROPERTY_FORMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormed(OffsetDateTime formed) {
    this.formed = formed;
  }


  public TableResource disbands(OffsetDateTime disbands) {
    
    this.disbands = disbands;
    return this;
  }

   /**
   * Get disbands
   * @return disbands
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISBANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDisbands() {
    return disbands;
  }


  @JsonProperty(JSON_PROPERTY_DISBANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisbands(OffsetDateTime disbands) {
    this.disbands = disbands;
  }


  public TableResource signup(OffsetDateTime signup) {
    
    this.signup = signup;
    return this;
  }

   /**
   * Get signup
   * @return signup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSignup() {
    return signup;
  }


  @JsonProperty(JSON_PROPERTY_SIGNUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignup(OffsetDateTime signup) {
    this.signup = signup;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableResource tableResource = (TableResource) o;
    return Objects.equals(this.name, tableResource.name) &&
        Objects.equals(this.seats, tableResource.seats) &&
        Objects.equals(this.formed, tableResource.formed) &&
        Objects.equals(this.disbands, tableResource.disbands) &&
        Objects.equals(this.signup, tableResource.signup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, seats, formed, disbands, signup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableResource {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    seats: ").append(toIndentedString(seats)).append("\n");
    sb.append("    formed: ").append(toIndentedString(formed)).append("\n");
    sb.append("    disbands: ").append(toIndentedString(disbands)).append("\n");
    sb.append("    signup: ").append(toIndentedString(signup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

