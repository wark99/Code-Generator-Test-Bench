/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatTotalPlayer
 */
@JsonPropertyOrder({
  StatTotalPlayer.JSON_PROPERTY_STREAMS,
  StatTotalPlayer.JSON_PROPERTY_STATIONS,
  StatTotalPlayer.JSON_PROPERTY_PLAYER,
  StatTotalPlayer.JSON_PROPERTY_LISTENERS,
  StatTotalPlayer.JSON_PROPERTY_PERCENT_LISTENERS,
  StatTotalPlayer.JSON_PROPERTY_AVERAGE_LISTENERS_BY_DAY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatTotalPlayer {
  public static final String JSON_PROPERTY_STREAMS = "streams";
  private String streams;

  public static final String JSON_PROPERTY_STATIONS = "stations";
  private String stations;

  public static final String JSON_PROPERTY_PLAYER = "player";
  private String player;

  public static final String JSON_PROPERTY_LISTENERS = "listeners";
  private Integer listeners;

  public static final String JSON_PROPERTY_PERCENT_LISTENERS = "percent_listeners";
  private BigDecimal percentListeners;

  public static final String JSON_PROPERTY_AVERAGE_LISTENERS_BY_DAY = "average_listeners_by_day";
  private BigDecimal averageListenersByDay;

  public StatTotalPlayer() {
  }

  public StatTotalPlayer streams(String streams) {
    
    this.streams = streams;
    return this;
  }

   /**
   * The list of streams use this player (only available on stations stats)
   * @return streams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreams() {
    return streams;
  }


  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreams(String streams) {
    this.streams = streams;
  }


  public StatTotalPlayer stations(String stations) {
    
    this.stations = stations;
    return this;
  }

   /**
   * The list of stations use this player (only available on radio products stats)
   * @return stations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStations() {
    return stations;
  }


  @JsonProperty(JSON_PROPERTY_STATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStations(String stations) {
    this.stations = stations;
  }


  public StatTotalPlayer player(String player) {
    
    this.player = player;
    return this;
  }

   /**
   * The stat player name
   * @return player
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLAYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPlayer() {
    return player;
  }


  @JsonProperty(JSON_PROPERTY_PLAYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlayer(String player) {
    this.player = player;
  }


  public StatTotalPlayer listeners(Integer listeners) {
    
    this.listeners = listeners;
    return this;
  }

   /**
   * The number of listeners
   * @return listeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getListeners() {
    return listeners;
  }


  @JsonProperty(JSON_PROPERTY_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setListeners(Integer listeners) {
    this.listeners = listeners;
  }


  public StatTotalPlayer percentListeners(BigDecimal percentListeners) {
    
    this.percentListeners = percentListeners;
    return this;
  }

   /**
   * The percent of listeners of the player total
   * @return percentListeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERCENT_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getPercentListeners() {
    return percentListeners;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPercentListeners(BigDecimal percentListeners) {
    this.percentListeners = percentListeners;
  }


  public StatTotalPlayer averageListenersByDay(BigDecimal averageListenersByDay) {
    
    this.averageListenersByDay = averageListenersByDay;
    return this;
  }

   /**
   * The average of listeners by day
   * @return averageListenersByDay
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_LISTENERS_BY_DAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageListenersByDay() {
    return averageListenersByDay;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_LISTENERS_BY_DAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageListenersByDay(BigDecimal averageListenersByDay) {
    this.averageListenersByDay = averageListenersByDay;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatTotalPlayer statTotalPlayer = (StatTotalPlayer) o;
    return Objects.equals(this.streams, statTotalPlayer.streams) &&
        Objects.equals(this.stations, statTotalPlayer.stations) &&
        Objects.equals(this.player, statTotalPlayer.player) &&
        Objects.equals(this.listeners, statTotalPlayer.listeners) &&
        Objects.equals(this.percentListeners, statTotalPlayer.percentListeners) &&
        Objects.equals(this.averageListenersByDay, statTotalPlayer.averageListenersByDay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streams, stations, player, listeners, percentListeners, averageListenersByDay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatTotalPlayer {\n");
    sb.append("    streams: ").append(toIndentedString(streams)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    player: ").append(toIndentedString(player)).append("\n");
    sb.append("    listeners: ").append(toIndentedString(listeners)).append("\n");
    sb.append("    percentListeners: ").append(toIndentedString(percentListeners)).append("\n");
    sb.append("    averageListenersByDay: ").append(toIndentedString(averageListenersByDay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

