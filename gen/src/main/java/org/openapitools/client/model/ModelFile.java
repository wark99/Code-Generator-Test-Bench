/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Activity;
import org.openapitools.client.model.Capabilities2;
import org.openapitools.client.model.ConversionCapabilities;
import org.openapitools.client.model.Directory;
import org.openapitools.client.model.Dropbox;
import org.openapitools.client.model.ExternalImportFile;
import org.openapitools.client.model.Lock;
import org.openapitools.client.model.ModelFile;
import org.openapitools.client.model.Rewind;
import org.openapitools.client.model.ShareLink;
import org.openapitools.client.model.SupportedBy;
import org.openapitools.client.model.Version;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Associated File or Directory, null is element was deleted
 */
@JsonPropertyOrder({
  ModelFile.JSON_PROPERTY_ID,
  ModelFile.JSON_PROPERTY_NAME,
  ModelFile.JSON_PROPERTY_SORTED_NAME,
  ModelFile.JSON_PROPERTY_PATH,
  ModelFile.JSON_PROPERTY_TYPE,
  ModelFile.JSON_PROPERTY_STATUS,
  ModelFile.JSON_PROPERTY_VISIBILITY,
  ModelFile.JSON_PROPERTY_DRIVE_ID,
  ModelFile.JSON_PROPERTY_DEPTH,
  ModelFile.JSON_PROPERTY_CREATED_BY,
  ModelFile.JSON_PROPERTY_CREATED_AT,
  ModelFile.JSON_PROPERTY_ADDED_AT,
  ModelFile.JSON_PROPERTY_LAST_MODIFIED_AT,
  ModelFile.JSON_PROPERTY_PARENT_ID,
  ModelFile.JSON_PROPERTY_DELETED_AT,
  ModelFile.JSON_PROPERTY_DELETED_BY,
  ModelFile.JSON_PROPERTY_SHARED_ROOT_ID,
  ModelFile.JSON_PROPERTY_PARENTS,
  ModelFile.JSON_PROPERTY_USERS,
  ModelFile.JSON_PROPERTY_TEAMS,
  ModelFile.JSON_PROPERTY_IS_FAVORITE,
  ModelFile.JSON_PROPERTY_ACTIVITY,
  ModelFile.JSON_PROPERTY_SHARELINK,
  ModelFile.JSON_PROPERTY_CAPABILITIES,
  ModelFile.JSON_PROPERTY_LOCK,
  ModelFile.JSON_PROPERTY_CATEGORIES,
  ModelFile.JSON_PROPERTY_ETAG,
  ModelFile.JSON_PROPERTY_SIZE,
  ModelFile.JSON_PROPERTY_MIME_TYPE,
  ModelFile.JSON_PROPERTY_EXTENSION_TYPE,
  ModelFile.JSON_PROPERTY_SUPPORTED_BY,
  ModelFile.JSON_PROPERTY_VERSION,
  ModelFile.JSON_PROPERTY_CONVERSION_CAPABILITIES,
  ModelFile.JSON_PROPERTY_HASH,
  ModelFile.JSON_PROPERTY_COLOR,
  ModelFile.JSON_PROPERTY_DROPBOX,
  ModelFile.JSON_PROPERTY_EXTERNAL_IMPORT,
  ModelFile.JSON_PROPERTY_REWIND
})
@JsonTypeName("_file")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ModelFile {
  public static final String JSON_PROPERTY_ID = "id";
  private Object id = null;

  public static final String JSON_PROPERTY_NAME = "name";
  private Object name = null;

  public static final String JSON_PROPERTY_SORTED_NAME = "sorted_name";
  private JsonNullable<Object> sortedName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PATH = "path";
  private JsonNullable<Object> path = JsonNullable.<Object>of(null);

  /**
   * Type of returned element either a dir (Directory) or file (File)
   */
  public enum TypeEnum {
    DIR("dir"),
    
    FILE("file");

    private Object value;

    TypeEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Object value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type = null;

  /**
   * Current state of Directory. The state can be null meaning that the Directory has no specific state.&lt;note&gt;&lt;strong&gt;erasing&lt;/strong&gt;: Directory is currently being erased from the drive.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;locked&lt;/strong&gt;: Directory is currently locked. No action can be made except unlocking by the application which locked the File (such as office, webdav or external import).&lt;/note&gt;&lt;note&gt;&lt;strong&gt;trash_inherited&lt;/strong&gt;: Directory is currently in trash because a parent directory was trashed.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;trashed&lt;/strong&gt;: Directory is currently in trash and specifically trashed by the user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;uploading&lt;/strong&gt;: Directory is currently being uploaded. The Directory is locked and no action can be done excepting upload actions.&lt;/note&gt;
   */
  public enum StatusEnum {
    ERASING("erasing"),
    
    LOCKED("locked"),
    
    TRASH_INHERITED("trash_inherited"),
    
    TRASHED("trashed"),
    
    UPLOADING("uploading");

    private Object value;

    StatusEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(Object value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status = null;

  /**
   * Visibility of Directory, empty string if no specific visibility. Add additional information about Directory to show different icons or more.&lt;note&gt;&lt;strong&gt;&lt;/strong&gt;: Empty visibility mean no special visibility.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_in_team_space_folder&lt;/strong&gt;: Is a Directory inside a Common Documents directory.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_root&lt;/strong&gt;: Is the root directory of the user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_shared_space&lt;/strong&gt;: Is the shared root directory, a special directory where the files inside are the private files of other user shared with the logged user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_team_space&lt;/strong&gt;: Is the Common Documents directory, a special directory where the files inside are common to all users by default.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_team_space_folder&lt;/strong&gt;: Is the root directory inside the Common Documents.&lt;/note&gt;
   */
  public enum VisibilityEnum {
    EMPTY(""),
    
    IS_IN_TEAM_SPACE_FOLDER("is_in_team_space_folder"),
    
    IS_ROOT("is_root"),
    
    IS_SHARED_SPACE("is_shared_space"),
    
    IS_TEAM_SPACE("is_team_space"),
    
    IS_TEAM_SPACE_FOLDER("is_team_space_folder");

    private Object value;

    VisibilityEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(Object value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility = null;

  public static final String JSON_PROPERTY_DRIVE_ID = "drive_id";
  private Object driveId = null;

  public static final String JSON_PROPERTY_DEPTH = "depth";
  private Object depth = null;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private Object createdBy = null;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Object createdAt = null;

  public static final String JSON_PROPERTY_ADDED_AT = "added_at";
  private Object addedAt = null;

  public static final String JSON_PROPERTY_LAST_MODIFIED_AT = "last_modified_at";
  private Object lastModifiedAt = null;

  public static final String JSON_PROPERTY_PARENT_ID = "parent_id";
  private Object parentId = null;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private JsonNullable<Object> deletedAt = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_DELETED_BY = "deleted_by";
  private JsonNullable<Object> deletedBy = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SHARED_ROOT_ID = "shared_root_id";
  private JsonNullable<Object> sharedRootId = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PARENTS = "parents";
  private JsonNullable<Object> parents = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_USERS = "users";
  private JsonNullable<Object> users = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TEAMS = "teams";
  private JsonNullable<Object> teams = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_FAVORITE = "is_favorite";
  private JsonNullable<Object> isFavorite = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ACTIVITY = "activity";
  private Activity activity;

  public static final String JSON_PROPERTY_SHARELINK = "sharelink";
  private ShareLink sharelink;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private Capabilities2 capabilities;

  public static final String JSON_PROPERTY_LOCK = "lock";
  private Lock lock;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private JsonNullable<Object> categories = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ETAG = "etag";
  private JsonNullable<Object> etag = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SIZE = "size";
  private Object size = null;

  public static final String JSON_PROPERTY_MIME_TYPE = "mime_type";
  private Object mimeType = null;

  public static final String JSON_PROPERTY_EXTENSION_TYPE = "extension_type";
  private Object extensionType = null;

  public static final String JSON_PROPERTY_SUPPORTED_BY = "supported_by";
  private SupportedBy supportedBy;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Version version;

  public static final String JSON_PROPERTY_CONVERSION_CAPABILITIES = "conversion_capabilities";
  private ConversionCapabilities conversionCapabilities;

  public static final String JSON_PROPERTY_HASH = "hash";
  private JsonNullable<Object> hash = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_COLOR = "color";
  private Object color = null;

  public static final String JSON_PROPERTY_DROPBOX = "dropbox";
  private Dropbox dropbox;

  public static final String JSON_PROPERTY_EXTERNAL_IMPORT = "external_import";
  private ExternalImportFile externalImport;

  public static final String JSON_PROPERTY_REWIND = "rewind";
  private Rewind rewind;

  public ModelFile() {
  }

  public ModelFile id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the resource &#x60;Directory&#x60;
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Object id) {
    this.id = id;
  }


  public ModelFile name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * File name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(Object name) {
    this.name = name;
  }


  public ModelFile sortedName(Object sortedName) {
    this.sortedName = JsonNullable.<Object>of(sortedName);
    
    return this;
  }

   /**
   * Specific sortable name
   * @return sortedName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSortedName() {
        return sortedName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORTED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSortedName_JsonNullable() {
    return sortedName;
  }
  
  @JsonProperty(JSON_PROPERTY_SORTED_NAME)
  public void setSortedName_JsonNullable(JsonNullable<Object> sortedName) {
    this.sortedName = sortedName;
  }

  public void setSortedName(Object sortedName) {
    this.sortedName = JsonNullable.<Object>of(sortedName);
  }


  public ModelFile path(Object path) {
    this.path = JsonNullable.<Object>of(path);
    
    return this;
  }

   /**
   * Full path of the Directory
   * @return path
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<Object> path) {
    this.path = path;
  }

  public void setPath(Object path) {
    this.path = JsonNullable.<Object>of(path);
  }


  public ModelFile type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of returned element either a dir (Directory) or file (File)
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ModelFile status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Current state of Directory. The state can be null meaning that the Directory has no specific state.&lt;note&gt;&lt;strong&gt;erasing&lt;/strong&gt;: Directory is currently being erased from the drive.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;locked&lt;/strong&gt;: Directory is currently locked. No action can be made except unlocking by the application which locked the File (such as office, webdav or external import).&lt;/note&gt;&lt;note&gt;&lt;strong&gt;trash_inherited&lt;/strong&gt;: Directory is currently in trash because a parent directory was trashed.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;trashed&lt;/strong&gt;: Directory is currently in trash and specifically trashed by the user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;uploading&lt;/strong&gt;: Directory is currently being uploaded. The Directory is locked and no action can be done excepting upload actions.&lt;/note&gt;
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ModelFile visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Visibility of Directory, empty string if no specific visibility. Add additional information about Directory to show different icons or more.&lt;note&gt;&lt;strong&gt;&lt;/strong&gt;: Empty visibility mean no special visibility.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_in_team_space_folder&lt;/strong&gt;: Is a Directory inside a Common Documents directory.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_root&lt;/strong&gt;: Is the root directory of the user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_shared_space&lt;/strong&gt;: Is the shared root directory, a special directory where the files inside are the private files of other user shared with the logged user.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_team_space&lt;/strong&gt;: Is the Common Documents directory, a special directory where the files inside are common to all users by default.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;is_team_space_folder&lt;/strong&gt;: Is the root directory inside the Common Documents.&lt;/note&gt;
   * @return visibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public ModelFile driveId(Object driveId) {
    
    this.driveId = driveId;
    return this;
  }

   /**
   * Drive identifier
   * @return driveId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDriveId() {
    return driveId;
  }


  @JsonProperty(JSON_PROPERTY_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDriveId(Object driveId) {
    this.driveId = driveId;
  }


  public ModelFile depth(Object depth) {
    
    this.depth = depth;
    return this;
  }

   /**
   * Current path depth of Directory
   * @return depth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDepth() {
    return depth;
  }


  @JsonProperty(JSON_PROPERTY_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDepth(Object depth) {
    this.depth = depth;
  }


  public ModelFile createdBy(Object createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The identifier of the user who first uploaded the Directory
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(Object createdBy) {
    this.createdBy = createdBy;
  }


  public ModelFile createdAt(Object createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Directory creation timestamp (in seconds), if available in its metadata or specified on upload
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Object createdAt) {
    this.createdAt = createdAt;
  }


  public ModelFile addedAt(Object addedAt) {
    
    this.addedAt = addedAt;
    return this;
  }

   /**
   * The timestamp (in seconds) at which the Directory has been uploaded for the first time
   * @return addedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getAddedAt() {
    return addedAt;
  }


  @JsonProperty(JSON_PROPERTY_ADDED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddedAt(Object addedAt) {
    this.addedAt = addedAt;
  }


  public ModelFile lastModifiedAt(Object lastModifiedAt) {
    
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

   /**
   * Directory creation timestamp (in seconds), if available in its metadata or specified on upload
   * @return lastModifiedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLastModifiedAt() {
    return lastModifiedAt;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastModifiedAt(Object lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public ModelFile parentId(Object parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent directory identifier
   * @return parentId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentId(Object parentId) {
    this.parentId = parentId;
  }


  public ModelFile deletedAt(Object deletedAt) {
    this.deletedAt = JsonNullable.<Object>of(deletedAt);
    
    return this;
  }

   /**
   * Timestamp of deleted resource Directory, only visible when the Directory is trashed
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDeletedAt() {
        return deletedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDeletedAt_JsonNullable() {
    return deletedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  public void setDeletedAt_JsonNullable(JsonNullable<Object> deletedAt) {
    this.deletedAt = deletedAt;
  }

  public void setDeletedAt(Object deletedAt) {
    this.deletedAt = JsonNullable.<Object>of(deletedAt);
  }


  public ModelFile deletedBy(Object deletedBy) {
    this.deletedBy = JsonNullable.<Object>of(deletedBy);
    
    return this;
  }

   /**
   * User identifier of deleted resource Directory, only visible when the Directory is trashed
   * @return deletedBy
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDeletedBy() {
        return deletedBy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDeletedBy_JsonNullable() {
    return deletedBy;
  }
  
  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  public void setDeletedBy_JsonNullable(JsonNullable<Object> deletedBy) {
    this.deletedBy = deletedBy;
  }

  public void setDeletedBy(Object deletedBy) {
    this.deletedBy = JsonNullable.<Object>of(deletedBy);
  }


  public ModelFile sharedRootId(Object sharedRootId) {
    this.sharedRootId = JsonNullable.<Object>of(sharedRootId);
    
    return this;
  }

   /**
   * Root Directory identifier, only visible for shared user
   * @return sharedRootId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSharedRootId() {
        return sharedRootId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARED_ROOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSharedRootId_JsonNullable() {
    return sharedRootId;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARED_ROOT_ID)
  public void setSharedRootId_JsonNullable(JsonNullable<Object> sharedRootId) {
    this.sharedRootId = sharedRootId;
  }

  public void setSharedRootId(Object sharedRootId) {
    this.sharedRootId = JsonNullable.<Object>of(sharedRootId);
  }


  public ModelFile parents(Object parents) {
    this.parents = JsonNullable.<Object>of(parents);
    
    return this;
  }

   /**
   * Get parents
   * @return parents
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getParents() {
        return parents.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getParents_JsonNullable() {
    return parents;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENTS)
  public void setParents_JsonNullable(JsonNullable<Object> parents) {
    this.parents = parents;
  }

  public void setParents(Object parents) {
    this.parents = JsonNullable.<Object>of(parents);
  }


  public ModelFile users(Object users) {
    this.users = JsonNullable.<Object>of(users);
    
    return this;
  }

   /**
   * Array of users identifiers that has access to the Directory
   * @return users
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUsers() {
        return users.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUsers_JsonNullable() {
    return users;
  }
  
  @JsonProperty(JSON_PROPERTY_USERS)
  public void setUsers_JsonNullable(JsonNullable<Object> users) {
    this.users = users;
  }

  public void setUsers(Object users) {
    this.users = JsonNullable.<Object>of(users);
  }


  public ModelFile teams(Object teams) {
    this.teams = JsonNullable.<Object>of(teams);
    
    return this;
  }

   /**
   * Array of teams identifiers that has access to the Directory
   * @return teams
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTeams() {
        return teams.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTeams_JsonNullable() {
    return teams;
  }
  
  @JsonProperty(JSON_PROPERTY_TEAMS)
  public void setTeams_JsonNullable(JsonNullable<Object> teams) {
    this.teams = teams;
  }

  public void setTeams(Object teams) {
    this.teams = JsonNullable.<Object>of(teams);
  }


  public ModelFile isFavorite(Object isFavorite) {
    this.isFavorite = JsonNullable.<Object>of(isFavorite);
    
    return this;
  }

   /**
   * Is Directory pinned as favorite
   * @return isFavorite
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsFavorite() {
        return isFavorite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsFavorite_JsonNullable() {
    return isFavorite;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  public void setIsFavorite_JsonNullable(JsonNullable<Object> isFavorite) {
    this.isFavorite = isFavorite;
  }

  public void setIsFavorite(Object isFavorite) {
    this.isFavorite = JsonNullable.<Object>of(isFavorite);
  }


  public ModelFile activity(Activity activity) {
    
    this.activity = activity;
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Activity getActivity() {
    return activity;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivity(Activity activity) {
    this.activity = activity;
  }


  public ModelFile sharelink(ShareLink sharelink) {
    
    this.sharelink = sharelink;
    return this;
  }

   /**
   * Get sharelink
   * @return sharelink
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARELINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShareLink getSharelink() {
    return sharelink;
  }


  @JsonProperty(JSON_PROPERTY_SHARELINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharelink(ShareLink sharelink) {
    this.sharelink = sharelink;
  }


  public ModelFile capabilities(Capabilities2 capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Capabilities2 getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapabilities(Capabilities2 capabilities) {
    this.capabilities = capabilities;
  }


  public ModelFile lock(Lock lock) {
    
    this.lock = lock;
    return this;
  }

   /**
   * Get lock
   * @return lock
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Lock getLock() {
    return lock;
  }


  @JsonProperty(JSON_PROPERTY_LOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLock(Lock lock) {
    this.lock = lock;
  }


  public ModelFile categories(Object categories) {
    this.categories = JsonNullable.<Object>of(categories);
    
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCategories() {
        return categories.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCategories_JsonNullable() {
    return categories;
  }
  
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  public void setCategories_JsonNullable(JsonNullable<Object> categories) {
    this.categories = categories;
  }

  public void setCategories(Object categories) {
    this.categories = JsonNullable.<Object>of(categories);
  }


  public ModelFile etag(Object etag) {
    this.etag = JsonNullable.<Object>of(etag);
    
    return this;
  }

   /**
   * ETag of the file
   * @return etag
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEtag() {
        return etag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ETAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEtag_JsonNullable() {
    return etag;
  }
  
  @JsonProperty(JSON_PROPERTY_ETAG)
  public void setEtag_JsonNullable(JsonNullable<Object> etag) {
    this.etag = etag;
  }

  public void setEtag(Object etag) {
    this.etag = JsonNullable.<Object>of(etag);
  }


  public ModelFile size(Object size) {
    
    this.size = size;
    return this;
  }

   /**
   * Size of File &lt;note&gt;The unit of size is defined in Bytes&lt;/note&gt;
   * @return size
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Object size) {
    this.size = size;
  }


  public ModelFile mimeType(Object mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Mime-type of file
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMimeType(Object mimeType) {
    this.mimeType = mimeType;
  }


  public ModelFile extensionType(Object extensionType) {
    
    this.extensionType = extensionType;
    return this;
  }

   /**
   * File type
   * @return extensionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getExtensionType() {
    return extensionType;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtensionType(Object extensionType) {
    this.extensionType = extensionType;
  }


  public ModelFile supportedBy(SupportedBy supportedBy) {
    
    this.supportedBy = supportedBy;
    return this;
  }

   /**
   * Get supportedBy
   * @return supportedBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupportedBy getSupportedBy() {
    return supportedBy;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedBy(SupportedBy supportedBy) {
    this.supportedBy = supportedBy;
  }


  public ModelFile version(Version version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Version getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Version version) {
    this.version = version;
  }


  public ModelFile conversionCapabilities(ConversionCapabilities conversionCapabilities) {
    
    this.conversionCapabilities = conversionCapabilities;
    return this;
  }

   /**
   * Get conversionCapabilities
   * @return conversionCapabilities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONVERSION_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConversionCapabilities getConversionCapabilities() {
    return conversionCapabilities;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSION_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversionCapabilities(ConversionCapabilities conversionCapabilities) {
    this.conversionCapabilities = conversionCapabilities;
  }


  public ModelFile hash(Object hash) {
    this.hash = JsonNullable.<Object>of(hash);
    
    return this;
  }

   /**
   * Hash of the file content
   * @return hash
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHash() {
        return hash.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHash_JsonNullable() {
    return hash;
  }
  
  @JsonProperty(JSON_PROPERTY_HASH)
  public void setHash_JsonNullable(JsonNullable<Object> hash) {
    this.hash = hash;
  }

  public void setHash(Object hash) {
    this.hash = JsonNullable.<Object>of(hash);
  }


  public ModelFile color(Object color) {
    
    this.color = color;
    return this;
  }

   /**
   * Color of the directory for the user requesting it
   * @return color
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setColor(Object color) {
    this.color = color;
  }


  public ModelFile dropbox(Dropbox dropbox) {
    
    this.dropbox = dropbox;
    return this;
  }

   /**
   * Get dropbox
   * @return dropbox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DROPBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Dropbox getDropbox() {
    return dropbox;
  }


  @JsonProperty(JSON_PROPERTY_DROPBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDropbox(Dropbox dropbox) {
    this.dropbox = dropbox;
  }


  public ModelFile externalImport(ExternalImportFile externalImport) {
    
    this.externalImport = externalImport;
    return this;
  }

   /**
   * Get externalImport
   * @return externalImport
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_IMPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalImportFile getExternalImport() {
    return externalImport;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_IMPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalImport(ExternalImportFile externalImport) {
    this.externalImport = externalImport;
  }


  public ModelFile rewind(Rewind rewind) {
    
    this.rewind = rewind;
    return this;
  }

   /**
   * Get rewind
   * @return rewind
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REWIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Rewind getRewind() {
    return rewind;
  }


  @JsonProperty(JSON_PROPERTY_REWIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRewind(Rewind rewind) {
    this.rewind = rewind;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelFile _file = (ModelFile) o;
    return Objects.equals(this.id, _file.id) &&
        Objects.equals(this.name, _file.name) &&
        equalsNullable(this.sortedName, _file.sortedName) &&
        equalsNullable(this.path, _file.path) &&
        Objects.equals(this.type, _file.type) &&
        Objects.equals(this.status, _file.status) &&
        Objects.equals(this.visibility, _file.visibility) &&
        Objects.equals(this.driveId, _file.driveId) &&
        Objects.equals(this.depth, _file.depth) &&
        Objects.equals(this.createdBy, _file.createdBy) &&
        Objects.equals(this.createdAt, _file.createdAt) &&
        Objects.equals(this.addedAt, _file.addedAt) &&
        Objects.equals(this.lastModifiedAt, _file.lastModifiedAt) &&
        Objects.equals(this.parentId, _file.parentId) &&
        equalsNullable(this.deletedAt, _file.deletedAt) &&
        equalsNullable(this.deletedBy, _file.deletedBy) &&
        equalsNullable(this.sharedRootId, _file.sharedRootId) &&
        equalsNullable(this.parents, _file.parents) &&
        equalsNullable(this.users, _file.users) &&
        equalsNullable(this.teams, _file.teams) &&
        equalsNullable(this.isFavorite, _file.isFavorite) &&
        Objects.equals(this.activity, _file.activity) &&
        Objects.equals(this.sharelink, _file.sharelink) &&
        Objects.equals(this.capabilities, _file.capabilities) &&
        Objects.equals(this.lock, _file.lock) &&
        equalsNullable(this.categories, _file.categories) &&
        equalsNullable(this.etag, _file.etag) &&
        Objects.equals(this.size, _file.size) &&
        Objects.equals(this.mimeType, _file.mimeType) &&
        Objects.equals(this.extensionType, _file.extensionType) &&
        Objects.equals(this.supportedBy, _file.supportedBy) &&
        Objects.equals(this.version, _file.version) &&
        Objects.equals(this.conversionCapabilities, _file.conversionCapabilities) &&
        equalsNullable(this.hash, _file.hash) &&
        Objects.equals(this.color, _file.color) &&
        Objects.equals(this.dropbox, _file.dropbox) &&
        Objects.equals(this.externalImport, _file.externalImport) &&
        Objects.equals(this.rewind, _file.rewind);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, hashCodeNullable(sortedName), hashCodeNullable(path), type, status, visibility, driveId, depth, createdBy, createdAt, addedAt, lastModifiedAt, parentId, hashCodeNullable(deletedAt), hashCodeNullable(deletedBy), hashCodeNullable(sharedRootId), hashCodeNullable(parents), hashCodeNullable(users), hashCodeNullable(teams), hashCodeNullable(isFavorite), activity, sharelink, capabilities, lock, hashCodeNullable(categories), hashCodeNullable(etag), size, mimeType, extensionType, supportedBy, version, conversionCapabilities, hashCodeNullable(hash), color, dropbox, externalImport, rewind);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelFile {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sortedName: ").append(toIndentedString(sortedName)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    driveId: ").append(toIndentedString(driveId)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    addedAt: ").append(toIndentedString(addedAt)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    sharedRootId: ").append(toIndentedString(sharedRootId)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    sharelink: ").append(toIndentedString(sharelink)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    extensionType: ").append(toIndentedString(extensionType)).append("\n");
    sb.append("    supportedBy: ").append(toIndentedString(supportedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    conversionCapabilities: ").append(toIndentedString(conversionCapabilities)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    dropbox: ").append(toIndentedString(dropbox)).append("\n");
    sb.append("    externalImport: ").append(toIndentedString(externalImport)).append("\n");
    sb.append("    rewind: ").append(toIndentedString(rewind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

