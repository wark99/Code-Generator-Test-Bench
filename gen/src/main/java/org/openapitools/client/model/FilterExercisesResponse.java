/*
 * Perch API
 * Perch API for accessing data from Perch. See our [API Guide](https://docs.google.com/document/d/1ms6LFNwFN4C4WkrfWs8Hlu5igFBpNLhNr7uLEkGmvJA) for guidance on best practices. <br/> <br/> Find out more about Perch at [https://perch.fit](https://perch.fit) or by contacting us at [support@perch.fit](mailto:support@perch.fit).
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@perch.fit
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.FilterExercisesResponseAllOfData;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FilterExercisesResponse
 */
@JsonPropertyOrder({
  FilterExercisesResponse.JSON_PROPERTY_TRUNCATED,
  FilterExercisesResponse.JSON_PROPERTY_NEXT_TOKEN,
  FilterExercisesResponse.JSON_PROPERTY_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:41.221792118Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FilterExercisesResponse {
  public static final String JSON_PROPERTY_TRUNCATED = "truncated";
  private Object truncated = null;

  public static final String JSON_PROPERTY_NEXT_TOKEN = "next_token";
  private JsonNullable<Object> nextToken = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_DATA = "data";
  private FilterExercisesResponseAllOfData data;

  public FilterExercisesResponse() {
  }

  public FilterExercisesResponse truncated(Object truncated) {
    
    this.truncated = truncated;
    return this;
  }

   /**
   * Indicates that the result set was truncated and there are more results.
   * @return truncated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRUNCATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTruncated() {
    return truncated;
  }


  @JsonProperty(JSON_PROPERTY_TRUNCATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTruncated(Object truncated) {
    this.truncated = truncated;
  }


  public FilterExercisesResponse nextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
    
    return this;
  }

   /**
   * When &#x60;truncated &#x3D; true&#x60;, &#x60;next_token&#x60; will be non-null and can be used to retrieve further results. Send &#x60;next_token&#x60; in a subsequent request to the same endpoint using the same POST body to get the next set of results.
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNextToken() {
        return nextToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNextToken_JsonNullable() {
    return nextToken;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
  public void setNextToken_JsonNullable(JsonNullable<Object> nextToken) {
    this.nextToken = nextToken;
  }

  public void setNextToken(Object nextToken) {
    this.nextToken = JsonNullable.<Object>of(nextToken);
  }


  public FilterExercisesResponse data(FilterExercisesResponseAllOfData data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterExercisesResponseAllOfData getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(FilterExercisesResponseAllOfData data) {
    this.data = data;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterExercisesResponse filterExercisesResponse = (FilterExercisesResponse) o;
    return Objects.equals(this.truncated, filterExercisesResponse.truncated) &&
        equalsNullable(this.nextToken, filterExercisesResponse.nextToken) &&
        Objects.equals(this.data, filterExercisesResponse.data);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(truncated, hashCodeNullable(nextToken), data);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterExercisesResponse {\n");
    sb.append("    truncated: ").append(toIndentedString(truncated)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

