/*
 * Customer Payment Domain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CapturePnr;
import org.openapitools.client.model.CaptureRequestResponse;
import org.openapitools.client.model.ClientCaptureReceived;
import org.openapitools.client.model.PaymentNotifications;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Capture
 */
@JsonPropertyOrder({
  Capture.JSON_PROPERTY_CLIENT_CAPTURE_RECEIVED,
  Capture.JSON_PROPERTY_CAPTURE_REQUEST_RESPONSE,
  Capture.JSON_PROPERTY_PAYMENT_NOTIFICATIONS,
  Capture.JSON_PROPERTY_CAPTURE_PNR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:54.275857511Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Capture {
  public static final String JSON_PROPERTY_CLIENT_CAPTURE_RECEIVED = "clientCaptureReceived";
  private ClientCaptureReceived clientCaptureReceived;

  public static final String JSON_PROPERTY_CAPTURE_REQUEST_RESPONSE = "captureRequestResponse";
  private CaptureRequestResponse captureRequestResponse;

  public static final String JSON_PROPERTY_PAYMENT_NOTIFICATIONS = "paymentNotifications";
  private PaymentNotifications paymentNotifications;

  public static final String JSON_PROPERTY_CAPTURE_PNR = "capturePnr";
  private CapturePnr capturePnr;

  public Capture() {
  }

  public Capture clientCaptureReceived(ClientCaptureReceived clientCaptureReceived) {
    
    this.clientCaptureReceived = clientCaptureReceived;
    return this;
  }

   /**
   * Get clientCaptureReceived
   * @return clientCaptureReceived
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_CAPTURE_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClientCaptureReceived getClientCaptureReceived() {
    return clientCaptureReceived;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_CAPTURE_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientCaptureReceived(ClientCaptureReceived clientCaptureReceived) {
    this.clientCaptureReceived = clientCaptureReceived;
  }


  public Capture captureRequestResponse(CaptureRequestResponse captureRequestResponse) {
    
    this.captureRequestResponse = captureRequestResponse;
    return this;
  }

   /**
   * Get captureRequestResponse
   * @return captureRequestResponse
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURE_REQUEST_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CaptureRequestResponse getCaptureRequestResponse() {
    return captureRequestResponse;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_REQUEST_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptureRequestResponse(CaptureRequestResponse captureRequestResponse) {
    this.captureRequestResponse = captureRequestResponse;
  }


  public Capture paymentNotifications(PaymentNotifications paymentNotifications) {
    
    this.paymentNotifications = paymentNotifications;
    return this;
  }

   /**
   * Get paymentNotifications
   * @return paymentNotifications
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentNotifications getPaymentNotifications() {
    return paymentNotifications;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentNotifications(PaymentNotifications paymentNotifications) {
    this.paymentNotifications = paymentNotifications;
  }


  public Capture capturePnr(CapturePnr capturePnr) {
    
    this.capturePnr = capturePnr;
    return this;
  }

   /**
   * Get capturePnr
   * @return capturePnr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURE_PNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CapturePnr getCapturePnr() {
    return capturePnr;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_PNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapturePnr(CapturePnr capturePnr) {
    this.capturePnr = capturePnr;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Capture capture = (Capture) o;
    return Objects.equals(this.clientCaptureReceived, capture.clientCaptureReceived) &&
        Objects.equals(this.captureRequestResponse, capture.captureRequestResponse) &&
        Objects.equals(this.paymentNotifications, capture.paymentNotifications) &&
        Objects.equals(this.capturePnr, capture.capturePnr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientCaptureReceived, captureRequestResponse, paymentNotifications, capturePnr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Capture {\n");
    sb.append("    clientCaptureReceived: ").append(toIndentedString(clientCaptureReceived)).append("\n");
    sb.append("    captureRequestResponse: ").append(toIndentedString(captureRequestResponse)).append("\n");
    sb.append("    paymentNotifications: ").append(toIndentedString(paymentNotifications)).append("\n");
    sb.append("    capturePnr: ").append(toIndentedString(capturePnr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

