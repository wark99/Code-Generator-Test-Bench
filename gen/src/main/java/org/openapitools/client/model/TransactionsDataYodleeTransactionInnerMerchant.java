/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountAddressYodlee;
import org.openapitools.client.model.TransactionsDataYodleeTransactionInnerMerchantContact;
import org.openapitools.client.model.TransactionsDataYodleeTransactionInnerMerchantCoordinates;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransactionsDataYodleeTransactionInnerMerchant
 */
@JsonPropertyOrder({
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_WEBSITE,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_ADDRESS,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_CONTACT,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_CATEGORY_LABEL,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_COORDINATES,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_NAME,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_ID,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_SOURCE,
  TransactionsDataYodleeTransactionInnerMerchant.JSON_PROPERTY_LOGO_U_R_L
})
@JsonTypeName("TransactionsDataYodlee_transaction_inner_merchant")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TransactionsDataYodleeTransactionInnerMerchant {
  public static final String JSON_PROPERTY_WEBSITE = "website";
  private String website;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private AccountAddressYodlee address;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private TransactionsDataYodleeTransactionInnerMerchantContact contact;

  public static final String JSON_PROPERTY_CATEGORY_LABEL = "categoryLabel";
  private List<String> categoryLabel;

  public static final String JSON_PROPERTY_COORDINATES = "coordinates";
  private TransactionsDataYodleeTransactionInnerMerchantCoordinates coordinates;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_LOGO_U_R_L = "logoURL";
  private String logoURL;

  public TransactionsDataYodleeTransactionInnerMerchant() {
  }

  public TransactionsDataYodleeTransactionInnerMerchant website(String website) {
    
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebsite() {
    return website;
  }


  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsite(String website) {
    this.website = website;
  }


  public TransactionsDataYodleeTransactionInnerMerchant address(AccountAddressYodlee address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountAddressYodlee getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(AccountAddressYodlee address) {
    this.address = address;
  }


  public TransactionsDataYodleeTransactionInnerMerchant contact(TransactionsDataYodleeTransactionInnerMerchantContact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionsDataYodleeTransactionInnerMerchantContact getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(TransactionsDataYodleeTransactionInnerMerchantContact contact) {
    this.contact = contact;
  }


  public TransactionsDataYodleeTransactionInnerMerchant categoryLabel(List<String> categoryLabel) {
    
    this.categoryLabel = categoryLabel;
    return this;
  }

  public TransactionsDataYodleeTransactionInnerMerchant addCategoryLabelItem(String categoryLabelItem) {
    if (this.categoryLabel == null) {
      this.categoryLabel = new ArrayList<>();
    }
    this.categoryLabel.add(categoryLabelItem);
    return this;
  }

   /**
   * Get categoryLabel
   * @return categoryLabel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCategoryLabel() {
    return categoryLabel;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryLabel(List<String> categoryLabel) {
    this.categoryLabel = categoryLabel;
  }


  public TransactionsDataYodleeTransactionInnerMerchant coordinates(TransactionsDataYodleeTransactionInnerMerchantCoordinates coordinates) {
    
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionsDataYodleeTransactionInnerMerchantCoordinates getCoordinates() {
    return coordinates;
  }


  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordinates(TransactionsDataYodleeTransactionInnerMerchantCoordinates coordinates) {
    this.coordinates = coordinates;
  }


  public TransactionsDataYodleeTransactionInnerMerchant name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TransactionsDataYodleeTransactionInnerMerchant id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public TransactionsDataYodleeTransactionInnerMerchant source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public TransactionsDataYodleeTransactionInnerMerchant logoURL(String logoURL) {
    
    this.logoURL = logoURL;
    return this;
  }

   /**
   * Get logoURL
   * @return logoURL
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGO_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogoURL() {
    return logoURL;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogoURL(String logoURL) {
    this.logoURL = logoURL;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsDataYodleeTransactionInnerMerchant transactionsDataYodleeTransactionInnerMerchant = (TransactionsDataYodleeTransactionInnerMerchant) o;
    return Objects.equals(this.website, transactionsDataYodleeTransactionInnerMerchant.website) &&
        Objects.equals(this.address, transactionsDataYodleeTransactionInnerMerchant.address) &&
        Objects.equals(this.contact, transactionsDataYodleeTransactionInnerMerchant.contact) &&
        Objects.equals(this.categoryLabel, transactionsDataYodleeTransactionInnerMerchant.categoryLabel) &&
        Objects.equals(this.coordinates, transactionsDataYodleeTransactionInnerMerchant.coordinates) &&
        Objects.equals(this.name, transactionsDataYodleeTransactionInnerMerchant.name) &&
        Objects.equals(this.id, transactionsDataYodleeTransactionInnerMerchant.id) &&
        Objects.equals(this.source, transactionsDataYodleeTransactionInnerMerchant.source) &&
        Objects.equals(this.logoURL, transactionsDataYodleeTransactionInnerMerchant.logoURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(website, address, contact, categoryLabel, coordinates, name, id, source, logoURL);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsDataYodleeTransactionInnerMerchant {\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    categoryLabel: ").append(toIndentedString(categoryLabel)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    logoURL: ").append(toIndentedString(logoURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

