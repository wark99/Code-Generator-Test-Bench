/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Earnings
 */
@JsonPropertyOrder({
  Earnings.JSON_PROPERTY_NAME,
  Earnings.JSON_PROPERTY_TYPE,
  Earnings.JSON_PROPERTY_RATE,
  Earnings.JSON_PROPERTY_AMOUNT,
  Earnings.JSON_PROPERTY_AMOUNT_Y_T_D
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:23.431609925Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Earnings {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_RATE = "rate";
  private BigDecimal rate;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_AMOUNT_Y_T_D = "amountYTD";
  private BigDecimal amountYTD;

  public Earnings() {
  }

  public Earnings name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Where available, the employer description of earnings on the paycheck
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Earnings type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Categorization of the earnings:  * &#x60;base&#x60;  * &#x60;bonus&#x60;  * &#x60;overtime&#x60;  * &#x60;commission&#x60;  * &#x60;tips&#x60;  * &#x60;other&#x60; 
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public Earnings rate(BigDecimal rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Rate of pay
   * @return rate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(BigDecimal rate) {
    this.rate = rate;
  }


  public Earnings amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Earnings amount for each earning type
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public Earnings amountYTD(BigDecimal amountYTD) {
    
    this.amountYTD = amountYTD;
    return this;
  }

   /**
   * Earnings YTD amount if available
   * @return amountYTD
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmountYTD() {
    return amountYTD;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountYTD(BigDecimal amountYTD) {
    this.amountYTD = amountYTD;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Earnings earnings = (Earnings) o;
    return Objects.equals(this.name, earnings.name) &&
        Objects.equals(this.type, earnings.type) &&
        Objects.equals(this.rate, earnings.rate) &&
        Objects.equals(this.amount, earnings.amount) &&
        Objects.equals(this.amountYTD, earnings.amountYTD);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, rate, amount, amountYTD);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Earnings {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountYTD: ").append(toIndentedString(amountYTD)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

