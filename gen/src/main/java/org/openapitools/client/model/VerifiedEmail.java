/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VerifiedEmail
 */
@JsonPropertyOrder({
  VerifiedEmail.JSON_PROPERTY_ID,
  VerifiedEmail.JSON_PROPERTY_EMAIL,
  VerifiedEmail.JSON_PROPERTY_EMAIL_IDN,
  VerifiedEmail.JSON_PROPERTY_IS_ACCOUNT,
  VerifiedEmail.JSON_PROPERTY_IS_VERIFIED,
  VerifiedEmail.JSON_PROPERTY_IS_REMOVABLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class VerifiedEmail {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_EMAIL_IDN = "email_idn";
  private String emailIdn;

  public static final String JSON_PROPERTY_IS_ACCOUNT = "is_account";
  private Boolean isAccount;

  public static final String JSON_PROPERTY_IS_VERIFIED = "is_verified";
  private Boolean isVerified;

  public static final String JSON_PROPERTY_IS_REMOVABLE = "is_removable";
  private Boolean isRemovable;

  public VerifiedEmail() {
  }

  public VerifiedEmail id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * VerifiedEmail identifier  
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public VerifiedEmail email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email  
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public VerifiedEmail emailIdn(String emailIdn) {
    
    this.emailIdn = emailIdn;
    return this;
  }

   /**
   * EmailIDN  
   * @return emailIdn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_IDN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailIdn() {
    return emailIdn;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_IDN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailIdn(String emailIdn) {
    this.emailIdn = emailIdn;
  }


  public VerifiedEmail isAccount(Boolean isAccount) {
    
    this.isAccount = isAccount;
    return this;
  }

   /**
   * True if is an account  
   * @return isAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAccount() {
    return isAccount;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAccount(Boolean isAccount) {
    this.isAccount = isAccount;
  }


  public VerifiedEmail isVerified(Boolean isVerified) {
    
    this.isVerified = isVerified;
    return this;
  }

   /**
   * True if verified  
   * @return isVerified
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsVerified() {
    return isVerified;
  }


  @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsVerified(Boolean isVerified) {
    this.isVerified = isVerified;
  }


  public VerifiedEmail isRemovable(Boolean isRemovable) {
    
    this.isRemovable = isRemovable;
    return this;
  }

   /**
   * True if is_removable  
   * @return isRemovable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_REMOVABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRemovable() {
    return isRemovable;
  }


  @JsonProperty(JSON_PROPERTY_IS_REMOVABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsRemovable(Boolean isRemovable) {
    this.isRemovable = isRemovable;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifiedEmail verifiedEmail = (VerifiedEmail) o;
    return Objects.equals(this.id, verifiedEmail.id) &&
        Objects.equals(this.email, verifiedEmail.email) &&
        Objects.equals(this.emailIdn, verifiedEmail.emailIdn) &&
        Objects.equals(this.isAccount, verifiedEmail.isAccount) &&
        Objects.equals(this.isVerified, verifiedEmail.isVerified) &&
        Objects.equals(this.isRemovable, verifiedEmail.isRemovable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, emailIdn, isAccount, isVerified, isRemovable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifiedEmail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailIdn: ").append(toIndentedString(emailIdn)).append("\n");
    sb.append("    isAccount: ").append(toIndentedString(isAccount)).append("\n");
    sb.append("    isVerified: ").append(toIndentedString(isVerified)).append("\n");
    sb.append("    isRemovable: ").append(toIndentedString(isRemovable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

