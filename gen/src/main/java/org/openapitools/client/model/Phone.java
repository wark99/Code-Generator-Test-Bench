/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.Location;
import org.openapitools.client.model.PhoneNumber;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Phone
 */
@JsonPropertyOrder({
  Phone.JSON_PROPERTY_ADDRESS,
  Phone.JSON_PROPERTY_DATE_DISCONNECTED,
  Phone.JSON_PROPERTY_DATE_LAST_REPORTED,
  Phone.JSON_PROPERTY_DATE_OF_LAST_ACCOUNT_ACTIVITY,
  Phone.JSON_PROPERTY_DATE_PUBLISHED,
  Phone.JSON_PROPERTY_NUMBER,
  Phone.JSON_PROPERTY_RESTRICTION,
  Phone.JSON_PROPERTY_SOURCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Phone {
  public static final String JSON_PROPERTY_ADDRESS = "address";
  private Location address;

  public static final String JSON_PROPERTY_DATE_DISCONNECTED = "dateDisconnected";
  private DateOfExpiration dateDisconnected;

  public static final String JSON_PROPERTY_DATE_LAST_REPORTED = "dateLastReported";
  private DateOfExpiration dateLastReported;

  public static final String JSON_PROPERTY_DATE_OF_LAST_ACCOUNT_ACTIVITY = "dateOfLastAccountActivity";
  private DateOfExpiration dateOfLastAccountActivity;

  public static final String JSON_PROPERTY_DATE_PUBLISHED = "datePublished";
  private DateOfExpiration datePublished;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private PhoneNumber number;

  public static final String JSON_PROPERTY_RESTRICTION = "restriction";
  private String restriction;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public Phone() {
  }

  public Phone address(Location address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(Location address) {
    this.address = address;
  }


  public Phone dateDisconnected(DateOfExpiration dateDisconnected) {
    
    this.dateDisconnected = dateDisconnected;
    return this;
  }

   /**
   * Get dateDisconnected
   * @return dateDisconnected
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_DISCONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateDisconnected() {
    return dateDisconnected;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DISCONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateDisconnected(DateOfExpiration dateDisconnected) {
    this.dateDisconnected = dateDisconnected;
  }


  public Phone dateLastReported(DateOfExpiration dateLastReported) {
    
    this.dateLastReported = dateLastReported;
    return this;
  }

   /**
   * Get dateLastReported
   * @return dateLastReported
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_LAST_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateLastReported() {
    return dateLastReported;
  }


  @JsonProperty(JSON_PROPERTY_DATE_LAST_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateLastReported(DateOfExpiration dateLastReported) {
    this.dateLastReported = dateLastReported;
  }


  public Phone dateOfLastAccountActivity(DateOfExpiration dateOfLastAccountActivity) {
    
    this.dateOfLastAccountActivity = dateOfLastAccountActivity;
    return this;
  }

   /**
   * Get dateOfLastAccountActivity
   * @return dateOfLastAccountActivity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_ACCOUNT_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateOfLastAccountActivity() {
    return dateOfLastAccountActivity;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_ACCOUNT_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfLastAccountActivity(DateOfExpiration dateOfLastAccountActivity) {
    this.dateOfLastAccountActivity = dateOfLastAccountActivity;
  }


  public Phone datePublished(DateOfExpiration datePublished) {
    
    this.datePublished = datePublished;
    return this;
  }

   /**
   * Get datePublished
   * @return datePublished
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDatePublished() {
    return datePublished;
  }


  @JsonProperty(JSON_PROPERTY_DATE_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatePublished(DateOfExpiration datePublished) {
    this.datePublished = datePublished;
  }


  public Phone number(PhoneNumber number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhoneNumber getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(PhoneNumber number) {
    this.number = number;
  }


  public Phone restriction(String restriction) {
    
    this.restriction = restriction;
    return this;
  }

   /**
   * Get restriction
   * @return restriction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRestriction() {
    return restriction;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestriction(String restriction) {
    this.restriction = restriction;
  }


  public Phone source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return Objects.equals(this.address, phone.address) &&
        Objects.equals(this.dateDisconnected, phone.dateDisconnected) &&
        Objects.equals(this.dateLastReported, phone.dateLastReported) &&
        Objects.equals(this.dateOfLastAccountActivity, phone.dateOfLastAccountActivity) &&
        Objects.equals(this.datePublished, phone.datePublished) &&
        Objects.equals(this.number, phone.number) &&
        Objects.equals(this.restriction, phone.restriction) &&
        Objects.equals(this.source, phone.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, dateDisconnected, dateLastReported, dateOfLastAccountActivity, datePublished, number, restriction, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    dateDisconnected: ").append(toIndentedString(dateDisconnected)).append("\n");
    sb.append("    dateLastReported: ").append(toIndentedString(dateLastReported)).append("\n");
    sb.append("    dateOfLastAccountActivity: ").append(toIndentedString(dateOfLastAccountActivity)).append("\n");
    sb.append("    datePublished: ").append(toIndentedString(datePublished)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    restriction: ").append(toIndentedString(restriction)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

