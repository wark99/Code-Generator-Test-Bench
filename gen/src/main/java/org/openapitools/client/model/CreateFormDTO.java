/*
 * CRM Cotización
 * CRM Cotización
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Customfields;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateFormDTO
 */
@JsonPropertyOrder({
  CreateFormDTO.JSON_PROPERTY_NAME,
  CreateFormDTO.JSON_PROPERTY_DESCRIPTION,
  CreateFormDTO.JSON_PROPERTY_CONTACT_SCHEMA_ID,
  CreateFormDTO.JSON_PROPERTY_SELECTED_FIELDS_ID,
  CreateFormDTO.JSON_PROPERTY_CUSTOM_FIELDS,
  CreateFormDTO.JSON_PROPERTY_PIPELINE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:21.037021681Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateFormDTO {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTACT_SCHEMA_ID = "contactSchemaId";
  private String contactSchemaId;

  public static final String JSON_PROPERTY_SELECTED_FIELDS_ID = "selectedFieldsId";
  private List<String> selectedFieldsId = new ArrayList<>();

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Customfields customFields;

  public static final String JSON_PROPERTY_PIPELINE_ID = "pipelineId";
  private String pipelineId;

  public CreateFormDTO() {
  }

  public CreateFormDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateFormDTO description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateFormDTO contactSchemaId(String contactSchemaId) {
    
    this.contactSchemaId = contactSchemaId;
    return this;
  }

   /**
   * Get contactSchemaId
   * @return contactSchemaId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTACT_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContactSchemaId() {
    return contactSchemaId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactSchemaId(String contactSchemaId) {
    this.contactSchemaId = contactSchemaId;
  }


  public CreateFormDTO selectedFieldsId(List<String> selectedFieldsId) {
    
    this.selectedFieldsId = selectedFieldsId;
    return this;
  }

  public CreateFormDTO addSelectedFieldsIdItem(String selectedFieldsIdItem) {
    if (this.selectedFieldsId == null) {
      this.selectedFieldsId = new ArrayList<>();
    }
    this.selectedFieldsId.add(selectedFieldsIdItem);
    return this;
  }

   /**
   * Get selectedFieldsId
   * @return selectedFieldsId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELECTED_FIELDS_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSelectedFieldsId() {
    return selectedFieldsId;
  }


  @JsonProperty(JSON_PROPERTY_SELECTED_FIELDS_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelectedFieldsId(List<String> selectedFieldsId) {
    this.selectedFieldsId = selectedFieldsId;
  }


  public CreateFormDTO customFields(Customfields customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Customfields getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Customfields customFields) {
    this.customFields = customFields;
  }


  public CreateFormDTO pipelineId(String pipelineId) {
    
    this.pipelineId = pipelineId;
    return this;
  }

   /**
   * Get pipelineId
   * @return pipelineId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PIPELINE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPipelineId() {
    return pipelineId;
  }


  @JsonProperty(JSON_PROPERTY_PIPELINE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPipelineId(String pipelineId) {
    this.pipelineId = pipelineId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFormDTO createFormDTO = (CreateFormDTO) o;
    return Objects.equals(this.name, createFormDTO.name) &&
        Objects.equals(this.description, createFormDTO.description) &&
        Objects.equals(this.contactSchemaId, createFormDTO.contactSchemaId) &&
        Objects.equals(this.selectedFieldsId, createFormDTO.selectedFieldsId) &&
        Objects.equals(this.customFields, createFormDTO.customFields) &&
        Objects.equals(this.pipelineId, createFormDTO.pipelineId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, contactSchemaId, selectedFieldsId, customFields, pipelineId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFormDTO {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contactSchemaId: ").append(toIndentedString(contactSchemaId)).append("\n");
    sb.append("    selectedFieldsId: ").append(toIndentedString(selectedFieldsId)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    pipelineId: ").append(toIndentedString(pipelineId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

