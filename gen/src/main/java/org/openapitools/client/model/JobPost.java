/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.JobIdAppGet200ResponseApplicationsInner;
import org.openapitools.client.model.JobIdEditPutRequestPay;
import org.openapitools.client.model.JobIdEditPutRequestSchedule;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * JobPost
 */
@JsonPropertyOrder({
  JobPost.JSON_PROPERTY_ID,
  JobPost.JSON_PROPERTY_TITLE,
  JobPost.JSON_PROPERTY_DESCRIPTION,
  JobPost.JSON_PROPERTY_POSTCODE,
  JobPost.JSON_PROPERTY_TOWN,
  JobPost.JSON_PROPERTY_CITY,
  JobPost.JSON_PROPERTY_START_DATE,
  JobPost.JSON_PROPERTY_EXPIRY,
  JobPost.JSON_PROPERTY_VIEWED,
  JobPost.JSON_PROPERTY_STATUS,
  JobPost.JSON_PROPERTY_NUMBER_OF_CHILDREN,
  JobPost.JSON_PROPERTY_APPLICATIONS,
  JobPost.JSON_PROPERTY_CHILDCARE_TYPES,
  JobPost.JSON_PROPERTY_PAY_OFFERS,
  JobPost.JSON_PROPERTY_SCHEDULES,
  JobPost.JSON_PROPERTY_JOB_TYPES,
  JobPost.JSON_PROPERTY_CHILDREN_AGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class JobPost {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_POSTCODE = "postcode";
  private String postcode;

  public static final String JSON_PROPERTY_TOWN = "town";
  private String town;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  private String startDate;

  public static final String JSON_PROPERTY_EXPIRY = "expiry";
  private String expiry;

  public static final String JSON_PROPERTY_VIEWED = "viewed";
  private String viewed;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    LIVE("live"),
    
    DRAFT("draft"),
    
    OFFLINE("offline"),
    
    SUSPENDED("suspended"),
    
    EXPIRED("expired"),
    
    ABANDONED("abandoned");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_NUMBER_OF_CHILDREN = "number_of_children";
  private Integer numberOfChildren;

  public static final String JSON_PROPERTY_APPLICATIONS = "applications";
  private List<JobIdAppGet200ResponseApplicationsInner> applications;

  /**
   * Gets or Sets childcareTypes
   */
  public enum ChildcareTypesEnum {
    NANNY("nanny"),
    
    BABYSITTER("babysitter"),
    
    CHILDMINDER("childminder"),
    
    PRIVATE_TUTOR("private_tutor"),
    
    HOUSEHOLD_HELP("household_help");

    private String value;

    ChildcareTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildcareTypesEnum fromValue(String value) {
      for (ChildcareTypesEnum b : ChildcareTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDCARE_TYPES = "childcare_types";
  private List<ChildcareTypesEnum> childcareTypes;

  public static final String JSON_PROPERTY_PAY_OFFERS = "pay_offers";
  private JobIdEditPutRequestPay payOffers;

  public static final String JSON_PROPERTY_SCHEDULES = "schedules";
  private JobIdEditPutRequestSchedule schedules;

  public static final String JSON_PROPERTY_JOB_TYPES = "job_types";
  private List<String> jobTypes;

  /**
   * Gets or Sets childrenAge
   */
  public enum ChildrenAgeEnum {
    TODDLER("toddler"),
    
    PRESCHOOLER("preschooler"),
    
    _5_11_YR_OLD("5-11_yr_old"),
    
    TEENAGER("teenager");

    private String value;

    ChildrenAgeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildrenAgeEnum fromValue(String value) {
      for (ChildrenAgeEnum b : ChildrenAgeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDREN_AGE = "children_age";
  private List<ChildrenAgeEnum> childrenAge;

  public JobPost() {
  }

  public JobPost id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public JobPost title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public JobPost description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public JobPost postcode(String postcode) {
    
    this.postcode = postcode;
    return this;
  }

   /**
   * Get postcode
   * @return postcode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostcode() {
    return postcode;
  }


  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public JobPost town(String town) {
    
    this.town = town;
    return this;
  }

   /**
   * Get town
   * @return town
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTown() {
    return town;
  }


  @JsonProperty(JSON_PROPERTY_TOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTown(String town) {
    this.town = town;
  }


  public JobPost city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public JobPost startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public JobPost expiry(String expiry) {
    
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpiry() {
    return expiry;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiry(String expiry) {
    this.expiry = expiry;
  }


  public JobPost viewed(String viewed) {
    
    this.viewed = viewed;
    return this;
  }

   /**
   * Get viewed
   * @return viewed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getViewed() {
    return viewed;
  }


  @JsonProperty(JSON_PROPERTY_VIEWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewed(String viewed) {
    this.viewed = viewed;
  }


  public JobPost status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public JobPost numberOfChildren(Integer numberOfChildren) {
    
    this.numberOfChildren = numberOfChildren;
    return this;
  }

   /**
   * Get numberOfChildren
   * @return numberOfChildren
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfChildren() {
    return numberOfChildren;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfChildren(Integer numberOfChildren) {
    this.numberOfChildren = numberOfChildren;
  }


  public JobPost applications(List<JobIdAppGet200ResponseApplicationsInner> applications) {
    
    this.applications = applications;
    return this;
  }

  public JobPost addApplicationsItem(JobIdAppGet200ResponseApplicationsInner applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

   /**
   * Get applications
   * @return applications
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<JobIdAppGet200ResponseApplicationsInner> getApplications() {
    return applications;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplications(List<JobIdAppGet200ResponseApplicationsInner> applications) {
    this.applications = applications;
  }


  public JobPost childcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    
    this.childcareTypes = childcareTypes;
    return this;
  }

  public JobPost addChildcareTypesItem(ChildcareTypesEnum childcareTypesItem) {
    if (this.childcareTypes == null) {
      this.childcareTypes = new ArrayList<>();
    }
    this.childcareTypes.add(childcareTypesItem);
    return this;
  }

   /**
   * Get childcareTypes
   * @return childcareTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChildcareTypesEnum> getChildcareTypes() {
    return childcareTypes;
  }


  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    this.childcareTypes = childcareTypes;
  }


  public JobPost payOffers(JobIdEditPutRequestPay payOffers) {
    
    this.payOffers = payOffers;
    return this;
  }

   /**
   * Get payOffers
   * @return payOffers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_OFFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobIdEditPutRequestPay getPayOffers() {
    return payOffers;
  }


  @JsonProperty(JSON_PROPERTY_PAY_OFFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayOffers(JobIdEditPutRequestPay payOffers) {
    this.payOffers = payOffers;
  }


  public JobPost schedules(JobIdEditPutRequestSchedule schedules) {
    
    this.schedules = schedules;
    return this;
  }

   /**
   * Get schedules
   * @return schedules
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobIdEditPutRequestSchedule getSchedules() {
    return schedules;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchedules(JobIdEditPutRequestSchedule schedules) {
    this.schedules = schedules;
  }


  public JobPost jobTypes(List<String> jobTypes) {
    
    this.jobTypes = jobTypes;
    return this;
  }

  public JobPost addJobTypesItem(String jobTypesItem) {
    if (this.jobTypes == null) {
      this.jobTypes = new ArrayList<>();
    }
    this.jobTypes.add(jobTypesItem);
    return this;
  }

   /**
   * Get jobTypes
   * @return jobTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getJobTypes() {
    return jobTypes;
  }


  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobTypes(List<String> jobTypes) {
    this.jobTypes = jobTypes;
  }


  public JobPost childrenAge(List<ChildrenAgeEnum> childrenAge) {
    
    this.childrenAge = childrenAge;
    return this;
  }

  public JobPost addChildrenAgeItem(ChildrenAgeEnum childrenAgeItem) {
    if (this.childrenAge == null) {
      this.childrenAge = new ArrayList<>();
    }
    this.childrenAge.add(childrenAgeItem);
    return this;
  }

   /**
   * Get childrenAge
   * @return childrenAge
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChildrenAgeEnum> getChildrenAge() {
    return childrenAge;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildrenAge(List<ChildrenAgeEnum> childrenAge) {
    this.childrenAge = childrenAge;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobPost jobPost = (JobPost) o;
    return Objects.equals(this.id, jobPost.id) &&
        Objects.equals(this.title, jobPost.title) &&
        Objects.equals(this.description, jobPost.description) &&
        Objects.equals(this.postcode, jobPost.postcode) &&
        Objects.equals(this.town, jobPost.town) &&
        Objects.equals(this.city, jobPost.city) &&
        Objects.equals(this.startDate, jobPost.startDate) &&
        Objects.equals(this.expiry, jobPost.expiry) &&
        Objects.equals(this.viewed, jobPost.viewed) &&
        Objects.equals(this.status, jobPost.status) &&
        Objects.equals(this.numberOfChildren, jobPost.numberOfChildren) &&
        Objects.equals(this.applications, jobPost.applications) &&
        Objects.equals(this.childcareTypes, jobPost.childcareTypes) &&
        Objects.equals(this.payOffers, jobPost.payOffers) &&
        Objects.equals(this.schedules, jobPost.schedules) &&
        Objects.equals(this.jobTypes, jobPost.jobTypes) &&
        Objects.equals(this.childrenAge, jobPost.childrenAge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, postcode, town, city, startDate, expiry, viewed, status, numberOfChildren, applications, childcareTypes, payOffers, schedules, jobTypes, childrenAge);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobPost {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    viewed: ").append(toIndentedString(viewed)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    numberOfChildren: ").append(toIndentedString(numberOfChildren)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("    childcareTypes: ").append(toIndentedString(childcareTypes)).append("\n");
    sb.append("    payOffers: ").append(toIndentedString(payOffers)).append("\n");
    sb.append("    schedules: ").append(toIndentedString(schedules)).append("\n");
    sb.append("    jobTypes: ").append(toIndentedString(jobTypes)).append("\n");
    sb.append("    childrenAge: ").append(toIndentedString(childrenAge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

