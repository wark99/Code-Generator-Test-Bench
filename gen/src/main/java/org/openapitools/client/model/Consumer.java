/*
 * Inventory Management System API
 * API for Inventory Management System, it saves items(\"Products\") in an Inventory, each Item has a Provider that provides it, and also there is consumers who sonsumes therse Items(\"Products\")
 *
 * The version of the OpenAPI document: Version1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Item;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Consumer
 */
@JsonPropertyOrder({
  Consumer.JSON_PROPERTY_CONSUMER_I_D,
  Consumer.JSON_PROPERTY_CONSUMER_NAME,
  Consumer.JSON_PROPERTY_CONSUMER_B_D,
  Consumer.JSON_PROPERTY_CONSUMER_LOCATION,
  Consumer.JSON_PROPERTY_ITEMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:13:25.962969645Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Consumer {
  public static final String JSON_PROPERTY_CONSUMER_I_D = "consumerID";
  private Integer consumerID;

  public static final String JSON_PROPERTY_CONSUMER_NAME = "consumerName";
  private String consumerName;

  public static final String JSON_PROPERTY_CONSUMER_B_D = "consumerBD";
  private String consumerBD;

  public static final String JSON_PROPERTY_CONSUMER_LOCATION = "consumerLocation";
  private String consumerLocation;

  public static final String JSON_PROPERTY_ITEMS = "items";
  private List<Item> items;

  public Consumer() {
  }

  public Consumer consumerID(Integer consumerID) {
    
    this.consumerID = consumerID;
    return this;
  }

   /**
   * Get consumerID
   * @return consumerID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getConsumerID() {
    return consumerID;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerID(Integer consumerID) {
    this.consumerID = consumerID;
  }


  public Consumer consumerName(String consumerName) {
    
    this.consumerName = consumerName;
    return this;
  }

   /**
   * Get consumerName
   * @return consumerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumerName() {
    return consumerName;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerName(String consumerName) {
    this.consumerName = consumerName;
  }


  public Consumer consumerBD(String consumerBD) {
    
    this.consumerBD = consumerBD;
    return this;
  }

   /**
   * Get consumerBD
   * @return consumerBD
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER_B_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumerBD() {
    return consumerBD;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_B_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerBD(String consumerBD) {
    this.consumerBD = consumerBD;
  }


  public Consumer consumerLocation(String consumerLocation) {
    
    this.consumerLocation = consumerLocation;
    return this;
  }

   /**
   * Get consumerLocation
   * @return consumerLocation
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumerLocation() {
    return consumerLocation;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerLocation(String consumerLocation) {
    this.consumerLocation = consumerLocation;
  }


  public Consumer items(List<Item> items) {
    
    this.items = items;
    return this;
  }

  public Consumer addItemsItem(Item itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Item> getItems() {
    return items;
  }


  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItems(List<Item> items) {
    this.items = items;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Consumer consumer = (Consumer) o;
    return Objects.equals(this.consumerID, consumer.consumerID) &&
        Objects.equals(this.consumerName, consumer.consumerName) &&
        Objects.equals(this.consumerBD, consumer.consumerBD) &&
        Objects.equals(this.consumerLocation, consumer.consumerLocation) &&
        Objects.equals(this.items, consumer.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerID, consumerName, consumerBD, consumerLocation, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Consumer {\n");
    sb.append("    consumerID: ").append(toIndentedString(consumerID)).append("\n");
    sb.append("    consumerName: ").append(toIndentedString(consumerName)).append("\n");
    sb.append("    consumerBD: ").append(toIndentedString(consumerBD)).append("\n");
    sb.append("    consumerLocation: ").append(toIndentedString(consumerLocation)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

