/*
 * Youtube Music
 * Require authentication for all route except /auth and /auth/new.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PlaylistInfor
 */
@JsonPropertyOrder({
  PlaylistInfor.JSON_PROPERTY_PLAYLIST_NAME,
  PlaylistInfor.JSON_PROPERTY_SONG_LIST,
  PlaylistInfor.JSON_PROPERTY_ID,
  PlaylistInfor.JSON_PROPERTY_USER_ID,
  PlaylistInfor.JSON_PROPERTY_IMAGE,
  PlaylistInfor.JSON_PROPERTY_CREATED_AT,
  PlaylistInfor.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:03.133651353Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PlaylistInfor {
  public static final String JSON_PROPERTY_PLAYLIST_NAME = "playlistName";
  private String playlistName;

  public static final String JSON_PROPERTY_SONG_LIST = "songList";
  private List<String> songList;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private Integer userId;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private LocalDate createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private LocalDate updatedAt;

  public PlaylistInfor() {
  }

  public PlaylistInfor playlistName(String playlistName) {
    
    this.playlistName = playlistName;
    return this;
  }

   /**
   * Get playlistName
   * @return playlistName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYLIST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlaylistName() {
    return playlistName;
  }


  @JsonProperty(JSON_PROPERTY_PLAYLIST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaylistName(String playlistName) {
    this.playlistName = playlistName;
  }


  public PlaylistInfor songList(List<String> songList) {
    
    this.songList = songList;
    return this;
  }

  public PlaylistInfor addSongListItem(String songListItem) {
    if (this.songList == null) {
      this.songList = new ArrayList<>();
    }
    this.songList.add(songListItem);
    return this;
  }

   /**
   * List of valid youtube id
   * @return songList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SONG_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSongList() {
    return songList;
  }


  @JsonProperty(JSON_PROPERTY_SONG_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSongList(List<String> songList) {
    this.songList = songList;
  }


  public PlaylistInfor id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public PlaylistInfor userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public PlaylistInfor image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Must be a link to an image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }


  public PlaylistInfor createdAt(LocalDate createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(LocalDate createdAt) {
    this.createdAt = createdAt;
  }


  public PlaylistInfor updatedAt(LocalDate updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(LocalDate updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaylistInfor playlistInfor = (PlaylistInfor) o;
    return Objects.equals(this.playlistName, playlistInfor.playlistName) &&
        Objects.equals(this.songList, playlistInfor.songList) &&
        Objects.equals(this.id, playlistInfor.id) &&
        Objects.equals(this.userId, playlistInfor.userId) &&
        Objects.equals(this.image, playlistInfor.image) &&
        Objects.equals(this.createdAt, playlistInfor.createdAt) &&
        Objects.equals(this.updatedAt, playlistInfor.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(playlistName, songList, id, userId, image, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaylistInfor {\n");
    sb.append("    playlistName: ").append(toIndentedString(playlistName)).append("\n");
    sb.append("    songList: ").append(toIndentedString(songList)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

