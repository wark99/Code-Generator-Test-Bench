/*
 * Reference
 * The DoDays API reference.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@dodays.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.GetMetric200ResponseOneOf;
import org.openapitools.client.model.GetMetric200ResponseOneOf1;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetMetric200Response
 */
@JsonPropertyOrder({
  GetMetric200Response.JSON_PROPERTY_TREND,
  GetMetric200Response.JSON_PROPERTY_VALUE,
  GetMetric200Response.JSON_PROPERTY_PREVIOUS
})
@JsonTypeName("get_metric_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:35.686627593Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class GetMetric200Response {
  public static final String JSON_PROPERTY_TREND = "trend";
  private JsonNullable<Object> trend = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_VALUE = "value";
  private JsonNullable<Object> value = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PREVIOUS = "previous";
  private JsonNullable<Object> previous = JsonNullable.<Object>of(null);

  public GetMetric200Response() {
  }

  public GetMetric200Response trend(Object trend) {
    this.trend = JsonNullable.<Object>of(trend);
    
    return this;
  }

   /**
   * Get trend
   * @return trend
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTrend() {
        return trend.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTrend_JsonNullable() {
    return trend;
  }
  
  @JsonProperty(JSON_PROPERTY_TREND)
  public void setTrend_JsonNullable(JsonNullable<Object> trend) {
    this.trend = trend;
  }

  public void setTrend(Object trend) {
    this.trend = JsonNullable.<Object>of(trend);
  }


  public GetMetric200Response value(Object value) {
    this.value = JsonNullable.<Object>of(value);
    
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getValue() {
        return value.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getValue_JsonNullable() {
    return value;
  }
  
  @JsonProperty(JSON_PROPERTY_VALUE)
  public void setValue_JsonNullable(JsonNullable<Object> value) {
    this.value = value;
  }

  public void setValue(Object value) {
    this.value = JsonNullable.<Object>of(value);
  }


  public GetMetric200Response previous(Object previous) {
    this.previous = JsonNullable.<Object>of(previous);
    
    return this;
  }

   /**
   * Get previous
   * @return previous
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPrevious() {
        return previous.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPrevious_JsonNullable() {
    return previous;
  }
  
  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  public void setPrevious_JsonNullable(JsonNullable<Object> previous) {
    this.previous = previous;
  }

  public void setPrevious(Object previous) {
    this.previous = JsonNullable.<Object>of(previous);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMetric200Response getMetric200Response = (GetMetric200Response) o;
    return equalsNullable(this.trend, getMetric200Response.trend) &&
        equalsNullable(this.value, getMetric200Response.value) &&
        equalsNullable(this.previous, getMetric200Response.previous);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(trend), hashCodeNullable(value), hashCodeNullable(previous));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMetric200Response {\n");
    sb.append("    trend: ").append(toIndentedString(trend)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    previous: ").append(toIndentedString(previous)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

