/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.
 */
@JsonPropertyOrder({
  CustomerAccountDetail.JSON_PROPERTY_DATE_AS_OF,
  CustomerAccountDetail.JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_OPEN_DATE,
  CustomerAccountDetail.JSON_PROPERTY_PERIOD_START_DATE,
  CustomerAccountDetail.JSON_PROPERTY_PERIOD_END_DATE,
  CustomerAccountDetail.JSON_PROPERTY_PERIOD_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_PERIOD_DEPOSIT_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PERIOD_INTEREST_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_YTD_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_PRIOR_YTD_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_MATURITY_DATE,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_CREDIT_AVAILABLE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_CREDIT_MAX_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_CASH_ADVANCE_AVAILABLE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_CASH_ADVANCE_MAX_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_CASH_ADVANCE_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_CASH_ADVANCE_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_CURRENT_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_PAYMENT_MIN_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PAYMENT_DUE_DATE,
  CustomerAccountDetail.JSON_PROPERTY_PREVIOUS_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_START_DATE,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_END_DATE,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_PURCHASE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_FINANCE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_CREDIT_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_REWARD_EARNED_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_PAST_DUE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_DATE,
  CustomerAccountDetail.JSON_PROPERTY_STATEMENT_CLOSE_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_TERM_OF_ML,
  CustomerAccountDetail.JSON_PROPERTY_ML_HOLDER_NAME,
  CustomerAccountDetail.JSON_PROPERTY_DESCRIPTION,
  CustomerAccountDetail.JSON_PROPERTY_LATE_FEE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PAYOFF_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PAYOFF_AMOUNT_DATE,
  CustomerAccountDetail.JSON_PROPERTY_ORIGINAL_MATURITY_DATE,
  CustomerAccountDetail.JSON_PROPERTY_PRINCIPAL_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_ESCROW_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_PERIOD,
  CustomerAccountDetail.JSON_PROPERTY_INITIAL_ML_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_INITIAL_ML_DATE,
  CustomerAccountDetail.JSON_PROPERTY_NEXT_PAYMENT_PRINCIPAL_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_NEXT_PAYMENT_INTEREST_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_NEXT_PAYMENT,
  CustomerAccountDetail.JSON_PROPERTY_NEXT_PAYMENT_DATE,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_DUE_DATE,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_RECEIVE_DATE,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_PRINCIPAL_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_INTEREST_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_ESCROW_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_LAST_FEE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LAST_PAYMENT_LATE_CHARGE,
  CustomerAccountDetail.JSON_PROPERTY_YTD_PRINCIPAL_PAID,
  CustomerAccountDetail.JSON_PROPERTY_YTD_INTEREST_PAID,
  CustomerAccountDetail.JSON_PROPERTY_YTD_INSURANCE_PAID,
  CustomerAccountDetail.JSON_PROPERTY_YTD_TAX_PAID,
  CustomerAccountDetail.JSON_PROPERTY_AUTO_PAY_ENROLLED,
  CustomerAccountDetail.JSON_PROPERTY_MARGIN_ALLOWED,
  CustomerAccountDetail.JSON_PROPERTY_CASH_ACCOUNT_ALLOWED,
  CustomerAccountDetail.JSON_PROPERTY_COLLATERAL,
  CustomerAccountDetail.JSON_PROPERTY_CURRENT_SCHOOL,
  CustomerAccountDetail.JSON_PROPERTY_FIRST_PAYMENT_DATE,
  CustomerAccountDetail.JSON_PROPERTY_FIRST_MORTGAGE,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_PAYMENT_FREQ,
  CustomerAccountDetail.JSON_PROPERTY_ORIGINAL_SCHOOL,
  CustomerAccountDetail.JSON_PROPERTY_RECURRING_PAYMENT_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LENDER,
  CustomerAccountDetail.JSON_PROPERTY_ENDING_BALANCE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_TERM_TYPE,
  CustomerAccountDetail.JSON_PROPERTY_PAYMENTS_MADE,
  CustomerAccountDetail.JSON_PROPERTY_BALLOON_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PROJECTED_INTEREST,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_PAID_LTD,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_RATE_TYPE,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_PAYMENT_TYPE,
  CustomerAccountDetail.JSON_PROPERTY_REPAYMENT_PLAN,
  CustomerAccountDetail.JSON_PROPERTY_PAYMENTS_REMAINING,
  CustomerAccountDetail.JSON_PROPERTY_MARGIN_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_SHORT_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_AVAILABLE_CASH_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_MATURITY_VALUE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_VESTED_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_EMP_MATCH_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT_YTD,
  CustomerAccountDetail.JSON_PROPERTY_CONTRIB_TOTAL_YTD,
  CustomerAccountDetail.JSON_PROPERTY_CASH_BALANCE_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PRE_TAX_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_AFTER_TAX_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_MATCH_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_PROFIT_SHARING_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_ROLLOVER_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_OTHER_VEST_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_OTHER_NONVEST_AMOUNT,
  CustomerAccountDetail.JSON_PROPERTY_CURRENT_LOAN_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_RATE,
  CustomerAccountDetail.JSON_PROPERTY_BUY_POWER,
  CustomerAccountDetail.JSON_PROPERTY_ROLLOVER_LTD,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_AWARD_ID,
  CustomerAccountDetail.JSON_PROPERTY_ORIGINAL_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_GUARANTOR,
  CustomerAccountDetail.JSON_PROPERTY_OWNER,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_SUBSIDY_TYPE,
  CustomerAccountDetail.JSON_PROPERTY_INTEREST_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_REMAINING_TERM_OF_ML,
  CustomerAccountDetail.JSON_PROPERTY_INITIAL_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_FEES_BALANCE,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_YTD_INTEREST_PAID,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_YTD_FEES_PAID,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_YTD_PRINCIPAL_PAID,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_STATUS,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_STATUS_START_DATE,
  CustomerAccountDetail.JSON_PROPERTY_LOAN_STATUS_END_DATE,
  CustomerAccountDetail.JSON_PROPERTY_WEIGHTED_INTEREST_RATE,
  CustomerAccountDetail.JSON_PROPERTY_REPAYMENT_PLAN_START_DATE,
  CustomerAccountDetail.JSON_PROPERTY_REPAYMENT_PLAN_END_DATE,
  CustomerAccountDetail.JSON_PROPERTY_EXPECTED_PAYOFF_DATE,
  CustomerAccountDetail.JSON_PROPERTY_OUT_OF_SCHOOL_DATE,
  CustomerAccountDetail.JSON_PROPERTY_CONVERT_TO_REPAYMENT,
  CustomerAccountDetail.JSON_PROPERTY_DAYS_DELINQUENT,
  CustomerAccountDetail.JSON_PROPERTY_TOTAL_PRINCIPAL_PAID,
  CustomerAccountDetail.JSON_PROPERTY_TOTAL_INTEREST_PAID,
  CustomerAccountDetail.JSON_PROPERTY_TOTAL_AMOUNT_PAID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:35.632313798Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CustomerAccountDetail {
  public static final String JSON_PROPERTY_DATE_AS_OF = "dateAsOf";
  private Long dateAsOf;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT = "availableBalanceAmount";
  private BigDecimal availableBalanceAmount;

  public static final String JSON_PROPERTY_OPEN_DATE = "openDate";
  private Long openDate;

  public static final String JSON_PROPERTY_PERIOD_START_DATE = "periodStartDate";
  private Long periodStartDate;

  public static final String JSON_PROPERTY_PERIOD_END_DATE = "periodEndDate";
  private Long periodEndDate;

  public static final String JSON_PROPERTY_PERIOD_INTEREST_RATE = "periodInterestRate";
  private BigDecimal periodInterestRate;

  public static final String JSON_PROPERTY_PERIOD_DEPOSIT_AMOUNT = "periodDepositAmount";
  private BigDecimal periodDepositAmount;

  public static final String JSON_PROPERTY_PERIOD_INTEREST_AMOUNT = "periodInterestAmount";
  private BigDecimal periodInterestAmount;

  public static final String JSON_PROPERTY_INTEREST_YTD_AMOUNT = "interestYtdAmount";
  private BigDecimal interestYtdAmount;

  public static final String JSON_PROPERTY_INTEREST_PRIOR_YTD_AMOUNT = "interestPriorYtdAmount";
  private BigDecimal interestPriorYtdAmount;

  public static final String JSON_PROPERTY_MATURITY_DATE = "maturityDate";
  private Long maturityDate;

  public static final String JSON_PROPERTY_INTEREST_RATE = "interestRate";
  private String interestRate;

  public static final String JSON_PROPERTY_CREDIT_AVAILABLE_AMOUNT = "creditAvailableAmount";
  private BigDecimal creditAvailableAmount;

  public static final String JSON_PROPERTY_CREDIT_MAX_AMOUNT = "creditMaxAmount";
  private BigDecimal creditMaxAmount;

  public static final String JSON_PROPERTY_CASH_ADVANCE_AVAILABLE_AMOUNT = "cashAdvanceAvailableAmount";
  private BigDecimal cashAdvanceAvailableAmount;

  public static final String JSON_PROPERTY_CASH_ADVANCE_MAX_AMOUNT = "cashAdvanceMaxAmount";
  private BigDecimal cashAdvanceMaxAmount;

  public static final String JSON_PROPERTY_CASH_ADVANCE_BALANCE = "cashAdvanceBalance";
  private BigDecimal cashAdvanceBalance;

  public static final String JSON_PROPERTY_CASH_ADVANCE_INTEREST_RATE = "cashAdvanceInterestRate";
  private BigDecimal cashAdvanceInterestRate;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_PAYMENT_MIN_AMOUNT = "paymentMinAmount";
  private BigDecimal paymentMinAmount;

  public static final String JSON_PROPERTY_PAYMENT_DUE_DATE = "paymentDueDate";
  private Long paymentDueDate;

  public static final String JSON_PROPERTY_PREVIOUS_BALANCE = "previousBalance";
  private BigDecimal previousBalance;

  public static final String JSON_PROPERTY_STATEMENT_START_DATE = "statementStartDate";
  private Long statementStartDate;

  public static final String JSON_PROPERTY_STATEMENT_END_DATE = "statementEndDate";
  private Long statementEndDate;

  public static final String JSON_PROPERTY_STATEMENT_PURCHASE_AMOUNT = "statementPurchaseAmount";
  private BigDecimal statementPurchaseAmount;

  public static final String JSON_PROPERTY_STATEMENT_FINANCE_AMOUNT = "statementFinanceAmount";
  private BigDecimal statementFinanceAmount;

  public static final String JSON_PROPERTY_STATEMENT_CREDIT_AMOUNT = "statementCreditAmount";
  private BigDecimal statementCreditAmount;

  public static final String JSON_PROPERTY_REWARD_EARNED_BALANCE = "rewardEarnedBalance";
  private Integer rewardEarnedBalance;

  public static final String JSON_PROPERTY_PAST_DUE_AMOUNT = "pastDueAmount";
  private BigDecimal pastDueAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_AMOUNT = "lastPaymentAmount";
  private BigDecimal lastPaymentAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_DATE = "lastPaymentDate";
  private Long lastPaymentDate;

  public static final String JSON_PROPERTY_STATEMENT_CLOSE_BALANCE = "statementCloseBalance";
  private BigDecimal statementCloseBalance;

  public static final String JSON_PROPERTY_TERM_OF_ML = "termOfMl";
  private String termOfMl;

  public static final String JSON_PROPERTY_ML_HOLDER_NAME = "mlHolderName";
  private String mlHolderName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LATE_FEE_AMOUNT = "lateFeeAmount";
  private BigDecimal lateFeeAmount;

  public static final String JSON_PROPERTY_PAYOFF_AMOUNT = "payoffAmount";
  private BigDecimal payoffAmount;

  public static final String JSON_PROPERTY_PAYOFF_AMOUNT_DATE = "payoffAmountDate";
  private Long payoffAmountDate;

  public static final String JSON_PROPERTY_ORIGINAL_MATURITY_DATE = "originalMaturityDate";
  private Long originalMaturityDate;

  public static final String JSON_PROPERTY_PRINCIPAL_BALANCE = "principalBalance";
  private BigDecimal principalBalance;

  public static final String JSON_PROPERTY_ESCROW_BALANCE = "escrowBalance";
  private BigDecimal escrowBalance;

  public static final String JSON_PROPERTY_INTEREST_PERIOD = "interestPeriod";
  private String interestPeriod;

  public static final String JSON_PROPERTY_INITIAL_ML_AMOUNT = "initialMlAmount";
  private BigDecimal initialMlAmount;

  public static final String JSON_PROPERTY_INITIAL_ML_DATE = "initialMlDate";
  private Long initialMlDate;

  public static final String JSON_PROPERTY_NEXT_PAYMENT_PRINCIPAL_AMOUNT = "nextPaymentPrincipalAmount";
  private BigDecimal nextPaymentPrincipalAmount;

  public static final String JSON_PROPERTY_NEXT_PAYMENT_INTEREST_AMOUNT = "nextPaymentInterestAmount";
  private BigDecimal nextPaymentInterestAmount;

  public static final String JSON_PROPERTY_NEXT_PAYMENT = "nextPayment";
  private BigDecimal nextPayment;

  public static final String JSON_PROPERTY_NEXT_PAYMENT_DATE = "nextPaymentDate";
  private Long nextPaymentDate;

  public static final String JSON_PROPERTY_LAST_PAYMENT_DUE_DATE = "lastPaymentDueDate";
  private Long lastPaymentDueDate;

  public static final String JSON_PROPERTY_LAST_PAYMENT_RECEIVE_DATE = "lastPaymentReceiveDate";
  private Long lastPaymentReceiveDate;

  public static final String JSON_PROPERTY_LAST_PAYMENT_PRINCIPAL_AMOUNT = "lastPaymentPrincipalAmount";
  private BigDecimal lastPaymentPrincipalAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_INTEREST_AMOUNT = "lastPaymentInterestAmount";
  private BigDecimal lastPaymentInterestAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_ESCROW_AMOUNT = "lastPaymentEscrowAmount";
  private BigDecimal lastPaymentEscrowAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_LAST_FEE_AMOUNT = "lastPaymentLastFeeAmount";
  private BigDecimal lastPaymentLastFeeAmount;

  public static final String JSON_PROPERTY_LAST_PAYMENT_LATE_CHARGE = "lastPaymentLateCharge";
  private BigDecimal lastPaymentLateCharge;

  public static final String JSON_PROPERTY_YTD_PRINCIPAL_PAID = "ytdPrincipalPaid";
  private BigDecimal ytdPrincipalPaid;

  public static final String JSON_PROPERTY_YTD_INTEREST_PAID = "ytdInterestPaid";
  private BigDecimal ytdInterestPaid;

  public static final String JSON_PROPERTY_YTD_INSURANCE_PAID = "ytdInsurancePaid";
  private BigDecimal ytdInsurancePaid;

  public static final String JSON_PROPERTY_YTD_TAX_PAID = "ytdTaxPaid";
  private BigDecimal ytdTaxPaid;

  public static final String JSON_PROPERTY_AUTO_PAY_ENROLLED = "autoPayEnrolled";
  private Boolean autoPayEnrolled;

  public static final String JSON_PROPERTY_MARGIN_ALLOWED = "marginAllowed";
  private Boolean marginAllowed;

  public static final String JSON_PROPERTY_CASH_ACCOUNT_ALLOWED = "cashAccountAllowed";
  private Boolean cashAccountAllowed;

  public static final String JSON_PROPERTY_COLLATERAL = "collateral";
  private String collateral;

  public static final String JSON_PROPERTY_CURRENT_SCHOOL = "currentSchool";
  private String currentSchool;

  public static final String JSON_PROPERTY_FIRST_PAYMENT_DATE = "firstPaymentDate";
  private Long firstPaymentDate;

  public static final String JSON_PROPERTY_FIRST_MORTGAGE = "firstMortgage";
  private Boolean firstMortgage;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_FREQ = "loanPaymentFreq";
  private String loanPaymentFreq;

  public static final String JSON_PROPERTY_ORIGINAL_SCHOOL = "originalSchool";
  private String originalSchool;

  public static final String JSON_PROPERTY_RECURRING_PAYMENT_AMOUNT = "recurringPaymentAmount";
  private BigDecimal recurringPaymentAmount;

  public static final String JSON_PROPERTY_LENDER = "lender";
  private String lender;

  public static final String JSON_PROPERTY_ENDING_BALANCE_AMOUNT = "endingBalanceAmount";
  private BigDecimal endingBalanceAmount;

  public static final String JSON_PROPERTY_LOAN_TERM_TYPE = "loanTermType";
  private String loanTermType;

  public static final String JSON_PROPERTY_PAYMENTS_MADE = "paymentsMade";
  private Integer paymentsMade;

  public static final String JSON_PROPERTY_BALLOON_AMOUNT = "balloonAmount";
  private BigDecimal balloonAmount;

  public static final String JSON_PROPERTY_PROJECTED_INTEREST = "projectedInterest";
  private BigDecimal projectedInterest;

  public static final String JSON_PROPERTY_INTEREST_PAID_LTD = "interestPaidLtd";
  private BigDecimal interestPaidLtd;

  public static final String JSON_PROPERTY_INTEREST_RATE_TYPE = "interestRateType";
  private String interestRateType;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_TYPE = "loanPaymentType";
  private String loanPaymentType;

  public static final String JSON_PROPERTY_REPAYMENT_PLAN = "repaymentPlan";
  private String repaymentPlan;

  public static final String JSON_PROPERTY_PAYMENTS_REMAINING = "paymentsRemaining";
  private Integer paymentsRemaining;

  public static final String JSON_PROPERTY_MARGIN_BALANCE = "marginBalance";
  private BigDecimal marginBalance;

  public static final String JSON_PROPERTY_SHORT_BALANCE = "shortBalance";
  private BigDecimal shortBalance;

  public static final String JSON_PROPERTY_AVAILABLE_CASH_BALANCE = "availableCashBalance";
  private BigDecimal availableCashBalance;

  public static final String JSON_PROPERTY_MATURITY_VALUE_AMOUNT = "maturityValueAmount";
  private BigDecimal maturityValueAmount;

  public static final String JSON_PROPERTY_VESTED_BALANCE = "vestedBalance";
  private BigDecimal vestedBalance;

  public static final String JSON_PROPERTY_EMP_MATCH_AMOUNT = "empMatchAmount";
  private BigDecimal empMatchAmount;

  public static final String JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT = "empPretaxContribAmount";
  private BigDecimal empPretaxContribAmount;

  public static final String JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT_YTD = "empPretaxContribAmountYtd";
  private BigDecimal empPretaxContribAmountYtd;

  public static final String JSON_PROPERTY_CONTRIB_TOTAL_YTD = "contribTotalYtd";
  private BigDecimal contribTotalYtd;

  public static final String JSON_PROPERTY_CASH_BALANCE_AMOUNT = "cashBalanceAmount";
  private BigDecimal cashBalanceAmount;

  public static final String JSON_PROPERTY_PRE_TAX_AMOUNT = "preTaxAmount";
  private BigDecimal preTaxAmount;

  public static final String JSON_PROPERTY_AFTER_TAX_AMOUNT = "afterTaxAmount";
  private BigDecimal afterTaxAmount;

  public static final String JSON_PROPERTY_MATCH_AMOUNT = "matchAmount";
  private BigDecimal matchAmount;

  public static final String JSON_PROPERTY_PROFIT_SHARING_AMOUNT = "profitSharingAmount";
  private BigDecimal profitSharingAmount;

  public static final String JSON_PROPERTY_ROLLOVER_AMOUNT = "rolloverAmount";
  private BigDecimal rolloverAmount;

  public static final String JSON_PROPERTY_OTHER_VEST_AMOUNT = "otherVestAmount";
  private BigDecimal otherVestAmount;

  public static final String JSON_PROPERTY_OTHER_NONVEST_AMOUNT = "otherNonvestAmount";
  private BigDecimal otherNonvestAmount;

  public static final String JSON_PROPERTY_CURRENT_LOAN_BALANCE = "currentLoanBalance";
  private BigDecimal currentLoanBalance;

  public static final String JSON_PROPERTY_LOAN_RATE = "loanRate";
  private BigDecimal loanRate;

  public static final String JSON_PROPERTY_BUY_POWER = "buyPower";
  private BigDecimal buyPower;

  public static final String JSON_PROPERTY_ROLLOVER_LTD = "rolloverLtd";
  private BigDecimal rolloverLtd;

  public static final String JSON_PROPERTY_LOAN_AWARD_ID = "loanAwardId";
  private String loanAwardId;

  public static final String JSON_PROPERTY_ORIGINAL_INTEREST_RATE = "originalInterestRate";
  private BigDecimal originalInterestRate;

  public static final String JSON_PROPERTY_GUARANTOR = "guarantor";
  private String guarantor;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private String owner;

  public static final String JSON_PROPERTY_INTEREST_SUBSIDY_TYPE = "interestSubsidyType";
  private String interestSubsidyType;

  public static final String JSON_PROPERTY_INTEREST_BALANCE = "interestBalance";
  private BigDecimal interestBalance;

  public static final String JSON_PROPERTY_REMAINING_TERM_OF_ML = "remainingTermOfMl";
  private BigDecimal remainingTermOfMl;

  public static final String JSON_PROPERTY_INITIAL_INTEREST_RATE = "initialInterestRate";
  private BigDecimal initialInterestRate;

  public static final String JSON_PROPERTY_FEES_BALANCE = "feesBalance";
  private BigDecimal feesBalance;

  public static final String JSON_PROPERTY_LOAN_YTD_INTEREST_PAID = "loanYtdInterestPaid";
  private BigDecimal loanYtdInterestPaid;

  public static final String JSON_PROPERTY_LOAN_YTD_FEES_PAID = "loanYtdFeesPaid";
  private BigDecimal loanYtdFeesPaid;

  public static final String JSON_PROPERTY_LOAN_YTD_PRINCIPAL_PAID = "loanYtdPrincipalPaid";
  private BigDecimal loanYtdPrincipalPaid;

  public static final String JSON_PROPERTY_LOAN_STATUS = "loanStatus";
  private String loanStatus;

  public static final String JSON_PROPERTY_LOAN_STATUS_START_DATE = "loanStatusStartDate";
  private Long loanStatusStartDate;

  public static final String JSON_PROPERTY_LOAN_STATUS_END_DATE = "loanStatusEndDate";
  private Long loanStatusEndDate;

  public static final String JSON_PROPERTY_WEIGHTED_INTEREST_RATE = "weightedInterestRate";
  private BigDecimal weightedInterestRate;

  public static final String JSON_PROPERTY_REPAYMENT_PLAN_START_DATE = "repaymentPlanStartDate";
  private Long repaymentPlanStartDate;

  public static final String JSON_PROPERTY_REPAYMENT_PLAN_END_DATE = "repaymentPlanEndDate";
  private Long repaymentPlanEndDate;

  public static final String JSON_PROPERTY_EXPECTED_PAYOFF_DATE = "expectedPayoffDate";
  private Long expectedPayoffDate;

  public static final String JSON_PROPERTY_OUT_OF_SCHOOL_DATE = "outOfSchoolDate";
  private Long outOfSchoolDate;

  public static final String JSON_PROPERTY_CONVERT_TO_REPAYMENT = "convertToRepayment";
  private Long convertToRepayment;

  public static final String JSON_PROPERTY_DAYS_DELINQUENT = "daysDelinquent";
  private Integer daysDelinquent;

  public static final String JSON_PROPERTY_TOTAL_PRINCIPAL_PAID = "totalPrincipalPaid";
  private BigDecimal totalPrincipalPaid;

  public static final String JSON_PROPERTY_TOTAL_INTEREST_PAID = "totalInterestPaid";
  private BigDecimal totalInterestPaid;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT_PAID = "totalAmountPaid";
  private BigDecimal totalAmountPaid;

  public CustomerAccountDetail() {
  }

  public CustomerAccountDetail dateAsOf(Long dateAsOf) {
    
    this.dateAsOf = dateAsOf;
    return this;
  }

   /**
   * (All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return dateAsOf
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_AS_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDateAsOf() {
    return dateAsOf;
  }


  @JsonProperty(JSON_PROPERTY_DATE_AS_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAsOf(Long dateAsOf) {
    this.dateAsOf = dateAsOf;
  }


  public CustomerAccountDetail availableBalanceAmount(BigDecimal availableBalanceAmount) {
    
    this.availableBalanceAmount = availableBalanceAmount;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions)
   * @return availableBalanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalanceAmount() {
    return availableBalanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalanceAmount(BigDecimal availableBalanceAmount) {
    this.availableBalanceAmount = availableBalanceAmount;
  }


  public CustomerAccountDetail openDate(Long openDate) {
    
    this.openDate = openDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return openDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOpenDate() {
    return openDate;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenDate(Long openDate) {
    this.openDate = openDate;
  }


  public CustomerAccountDetail periodStartDate(Long periodStartDate) {
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPeriodStartDate() {
    return periodStartDate;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodStartDate(Long periodStartDate) {
    this.periodStartDate = periodStartDate;
  }


  public CustomerAccountDetail periodEndDate(Long periodEndDate) {
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPeriodEndDate() {
    return periodEndDate;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodEndDate(Long periodEndDate) {
    this.periodEndDate = periodEndDate;
  }


  public CustomerAccountDetail periodInterestRate(BigDecimal periodInterestRate) {
    
    this.periodInterestRate = periodInterestRate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate
   * @return periodInterestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPeriodInterestRate() {
    return periodInterestRate;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodInterestRate(BigDecimal periodInterestRate) {
    this.periodInterestRate = periodInterestRate;
  }


  public CustomerAccountDetail periodDepositAmount(BigDecimal periodDepositAmount) {
    
    this.periodDepositAmount = periodDepositAmount;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Amount deposited in period
   * @return periodDepositAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_DEPOSIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPeriodDepositAmount() {
    return periodDepositAmount;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD_DEPOSIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodDepositAmount(BigDecimal periodDepositAmount) {
    this.periodDepositAmount = periodDepositAmount;
  }


  public CustomerAccountDetail periodInterestAmount(BigDecimal periodInterestAmount) {
    
    this.periodInterestAmount = periodInterestAmount;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest accrued during the current period
   * @return periodInterestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPeriodInterestAmount() {
    return periodInterestAmount;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodInterestAmount(BigDecimal periodInterestAmount) {
    this.periodInterestAmount = periodInterestAmount;
  }


  public CustomerAccountDetail interestYtdAmount(BigDecimal interestYtdAmount) {
    
    this.interestYtdAmount = interestYtdAmount;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date
   * @return interestYtdAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_YTD_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestYtdAmount() {
    return interestYtdAmount;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_YTD_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestYtdAmount(BigDecimal interestYtdAmount) {
    this.interestYtdAmount = interestYtdAmount;
  }


  public CustomerAccountDetail interestPriorYtdAmount(BigDecimal interestPriorYtdAmount) {
    
    this.interestPriorYtdAmount = interestPriorYtdAmount;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest earned in prior year
   * @return interestPriorYtdAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_PRIOR_YTD_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestPriorYtdAmount() {
    return interestPriorYtdAmount;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_PRIOR_YTD_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestPriorYtdAmount(BigDecimal interestPriorYtdAmount) {
    this.interestPriorYtdAmount = interestPriorYtdAmount;
  }


  public CustomerAccountDetail maturityDate(Long maturityDate) {
    
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return maturityDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMaturityDate() {
    return maturityDate;
  }


  @JsonProperty(JSON_PROPERTY_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaturityDate(Long maturityDate) {
    this.maturityDate = maturityDate;
  }


  public CustomerAccountDetail interestRate(String interestRate) {
    
    this.interestRate = interestRate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) The account&#39;s current interest rate
   * @return interestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterestRate() {
    return interestRate;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestRate(String interestRate) {
    this.interestRate = interestRate;
  }


  public CustomerAccountDetail creditAvailableAmount(BigDecimal creditAvailableAmount) {
    
    this.creditAvailableAmount = creditAvailableAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance)
   * @return creditAvailableAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_AVAILABLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditAvailableAmount() {
    return creditAvailableAmount;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_AVAILABLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditAvailableAmount(BigDecimal creditAvailableAmount) {
    this.creditAvailableAmount = creditAvailableAmount;
  }


  public CustomerAccountDetail creditMaxAmount(BigDecimal creditMaxAmount) {
    
    this.creditMaxAmount = creditMaxAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The account&#39;s credit limit
   * @return creditMaxAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditMaxAmount() {
    return creditMaxAmount;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditMaxAmount(BigDecimal creditMaxAmount) {
    this.creditMaxAmount = creditMaxAmount;
  }


  public CustomerAccountDetail cashAdvanceAvailableAmount(BigDecimal cashAdvanceAvailableAmount) {
    
    this.cashAdvanceAvailableAmount = cashAdvanceAvailableAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Currently available cash advance
   * @return cashAdvanceAvailableAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_AVAILABLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashAdvanceAvailableAmount() {
    return cashAdvanceAvailableAmount;
  }


  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_AVAILABLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashAdvanceAvailableAmount(BigDecimal cashAdvanceAvailableAmount) {
    this.cashAdvanceAvailableAmount = cashAdvanceAvailableAmount;
  }


  public CustomerAccountDetail cashAdvanceMaxAmount(BigDecimal cashAdvanceMaxAmount) {
    
    this.cashAdvanceMaxAmount = cashAdvanceMaxAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Maximum cash advance amount
   * @return cashAdvanceMaxAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashAdvanceMaxAmount() {
    return cashAdvanceMaxAmount;
  }


  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashAdvanceMaxAmount(BigDecimal cashAdvanceMaxAmount) {
    this.cashAdvanceMaxAmount = cashAdvanceMaxAmount;
  }


  public CustomerAccountDetail cashAdvanceBalance(BigDecimal cashAdvanceBalance) {
    
    this.cashAdvanceBalance = cashAdvanceBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance of current cash advance
   * @return cashAdvanceBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashAdvanceBalance() {
    return cashAdvanceBalance;
  }


  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashAdvanceBalance(BigDecimal cashAdvanceBalance) {
    this.cashAdvanceBalance = cashAdvanceBalance;
  }


  public CustomerAccountDetail cashAdvanceInterestRate(BigDecimal cashAdvanceInterestRate) {
    
    this.cashAdvanceInterestRate = cashAdvanceInterestRate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Interest rate for cash advances
   * @return cashAdvanceInterestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashAdvanceInterestRate() {
    return cashAdvanceInterestRate;
  }


  @JsonProperty(JSON_PROPERTY_CASH_ADVANCE_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashAdvanceInterestRate(BigDecimal cashAdvanceInterestRate) {
    this.cashAdvanceInterestRate = cashAdvanceInterestRate;
  }


  public CustomerAccountDetail currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Investment) Current balance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public CustomerAccountDetail paymentMinAmount(BigDecimal paymentMinAmount) {
    
    this.paymentMinAmount = paymentMinAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due
   * @return paymentMinAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPaymentMinAmount() {
    return paymentMinAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMinAmount(BigDecimal paymentMinAmount) {
    this.paymentMinAmount = paymentMinAmount;
  }


  public CustomerAccountDetail paymentDueDate(Long paymentDueDate) {
    
    this.paymentDueDate = paymentDueDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return paymentDueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPaymentDueDate() {
    return paymentDueDate;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDueDate(Long paymentDueDate) {
    this.paymentDueDate = paymentDueDate;
  }


  public CustomerAccountDetail previousBalance(BigDecimal previousBalance) {
    
    this.previousBalance = previousBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Prior balance in last statement
   * @return previousBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIOUS_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPreviousBalance() {
    return previousBalance;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousBalance(BigDecimal previousBalance) {
    this.previousBalance = previousBalance;
  }


  public CustomerAccountDetail statementStartDate(Long statementStartDate) {
    
    this.statementStartDate = statementStartDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return statementStartDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStatementStartDate() {
    return statementStartDate;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementStartDate(Long statementStartDate) {
    this.statementStartDate = statementStartDate;
  }


  public CustomerAccountDetail statementEndDate(Long statementEndDate) {
    
    this.statementEndDate = statementEndDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return statementEndDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStatementEndDate() {
    return statementEndDate;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementEndDate(Long statementEndDate) {
    this.statementEndDate = statementEndDate;
  }


  public CustomerAccountDetail statementPurchaseAmount(BigDecimal statementPurchaseAmount) {
    
    this.statementPurchaseAmount = statementPurchaseAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Purchase amount of statement period
   * @return statementPurchaseAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_PURCHASE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatementPurchaseAmount() {
    return statementPurchaseAmount;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_PURCHASE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementPurchaseAmount(BigDecimal statementPurchaseAmount) {
    this.statementPurchaseAmount = statementPurchaseAmount;
  }


  public CustomerAccountDetail statementFinanceAmount(BigDecimal statementFinanceAmount) {
    
    this.statementFinanceAmount = statementFinanceAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Finance amount of statement period
   * @return statementFinanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_FINANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatementFinanceAmount() {
    return statementFinanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_FINANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementFinanceAmount(BigDecimal statementFinanceAmount) {
    this.statementFinanceAmount = statementFinanceAmount;
  }


  public CustomerAccountDetail statementCreditAmount(BigDecimal statementCreditAmount) {
    
    this.statementCreditAmount = statementCreditAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Credit amount applied in statement period
   * @return statementCreditAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_CREDIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatementCreditAmount() {
    return statementCreditAmount;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_CREDIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementCreditAmount(BigDecimal statementCreditAmount) {
    this.statementCreditAmount = statementCreditAmount;
  }


  public CustomerAccountDetail rewardEarnedBalance(Integer rewardEarnedBalance) {
    
    this.rewardEarnedBalance = rewardEarnedBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Earned reward balance
   * @return rewardEarnedBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REWARD_EARNED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRewardEarnedBalance() {
    return rewardEarnedBalance;
  }


  @JsonProperty(JSON_PROPERTY_REWARD_EARNED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRewardEarnedBalance(Integer rewardEarnedBalance) {
    this.rewardEarnedBalance = rewardEarnedBalance;
  }


  public CustomerAccountDetail pastDueAmount(BigDecimal pastDueAmount) {
    
    this.pastDueAmount = pastDueAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance past due
   * @return pastDueAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAST_DUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPastDueAmount() {
    return pastDueAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAST_DUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPastDueAmount(BigDecimal pastDueAmount) {
    this.pastDueAmount = pastDueAmount;
  }


  public CustomerAccountDetail lastPaymentAmount(BigDecimal lastPaymentAmount) {
    
    this.lastPaymentAmount = lastPaymentAmount;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment
   * @return lastPaymentAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentAmount() {
    return lastPaymentAmount;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentAmount(BigDecimal lastPaymentAmount) {
    this.lastPaymentAmount = lastPaymentAmount;
  }


  public CustomerAccountDetail lastPaymentDate(Long lastPaymentDate) {
    
    this.lastPaymentDate = lastPaymentDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastPaymentDate() {
    return lastPaymentDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentDate(Long lastPaymentDate) {
    this.lastPaymentDate = lastPaymentDate;
  }


  public CustomerAccountDetail statementCloseBalance(BigDecimal statementCloseBalance) {
    
    this.statementCloseBalance = statementCloseBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance of statement at close
   * @return statementCloseBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT_CLOSE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatementCloseBalance() {
    return statementCloseBalance;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_CLOSE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatementCloseBalance(BigDecimal statementCloseBalance) {
    this.statementCloseBalance = statementCloseBalance;
  }


  public CustomerAccountDetail termOfMl(String termOfMl) {
    
    this.termOfMl = termOfMl;
    return this;
  }

   /**
   * (Mortgage/Loan) Length of loan in months
   * @return termOfMl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TERM_OF_ML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTermOfMl() {
    return termOfMl;
  }


  @JsonProperty(JSON_PROPERTY_TERM_OF_ML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTermOfMl(String termOfMl) {
    this.termOfMl = termOfMl;
  }


  public CustomerAccountDetail mlHolderName(String mlHolderName) {
    
    this.mlHolderName = mlHolderName;
    return this;
  }

   /**
   * (Mortgage/Loan) Holder of the mortgage or loan
   * @return mlHolderName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ML_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMlHolderName() {
    return mlHolderName;
  }


  @JsonProperty(JSON_PROPERTY_ML_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlHolderName(String mlHolderName) {
    this.mlHolderName = mlHolderName;
  }


  public CustomerAccountDetail description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * (Mortgage/Loan) Description of loan
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CustomerAccountDetail lateFeeAmount(BigDecimal lateFeeAmount) {
    
    this.lateFeeAmount = lateFeeAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Late fee charged
   * @return lateFeeAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LATE_FEE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLateFeeAmount() {
    return lateFeeAmount;
  }


  @JsonProperty(JSON_PROPERTY_LATE_FEE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLateFeeAmount(BigDecimal lateFeeAmount) {
    this.lateFeeAmount = lateFeeAmount;
  }


  public CustomerAccountDetail payoffAmount(BigDecimal payoffAmount) {
    
    this.payoffAmount = payoffAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) The amount required to payoff the loan
   * @return payoffAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOFF_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPayoffAmount() {
    return payoffAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAYOFF_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoffAmount(BigDecimal payoffAmount) {
    this.payoffAmount = payoffAmount;
  }


  public CustomerAccountDetail payoffAmountDate(Long payoffAmountDate) {
    
    this.payoffAmountDate = payoffAmountDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return payoffAmountDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOFF_AMOUNT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPayoffAmountDate() {
    return payoffAmountDate;
  }


  @JsonProperty(JSON_PROPERTY_PAYOFF_AMOUNT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoffAmountDate(Long payoffAmountDate) {
    this.payoffAmountDate = payoffAmountDate;
  }


  public CustomerAccountDetail originalMaturityDate(Long originalMaturityDate) {
    
    this.originalMaturityDate = originalMaturityDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return originalMaturityDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOriginalMaturityDate() {
    return originalMaturityDate;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalMaturityDate(Long originalMaturityDate) {
    this.originalMaturityDate = originalMaturityDate;
  }


  public CustomerAccountDetail principalBalance(BigDecimal principalBalance) {
    
    this.principalBalance = principalBalance;
    return this;
  }

   /**
   * (Mortgage/Loan) The principal balance
   * @return principalBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrincipalBalance() {
    return principalBalance;
  }


  @JsonProperty(JSON_PROPERTY_PRINCIPAL_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrincipalBalance(BigDecimal principalBalance) {
    this.principalBalance = principalBalance;
  }


  public CustomerAccountDetail escrowBalance(BigDecimal escrowBalance) {
    
    this.escrowBalance = escrowBalance;
    return this;
  }

   /**
   * (Mortgage/Loan) The escrow balance
   * @return escrowBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESCROW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEscrowBalance() {
    return escrowBalance;
  }


  @JsonProperty(JSON_PROPERTY_ESCROW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEscrowBalance(BigDecimal escrowBalance) {
    this.escrowBalance = escrowBalance;
  }


  public CustomerAccountDetail interestPeriod(String interestPeriod) {
    
    this.interestPeriod = interestPeriod;
    return this;
  }

   /**
   * (Mortgage/Loan) Period of interest
   * @return interestPeriod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterestPeriod() {
    return interestPeriod;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestPeriod(String interestPeriod) {
    this.interestPeriod = interestPeriod;
  }


  public CustomerAccountDetail initialMlAmount(BigDecimal initialMlAmount) {
    
    this.initialMlAmount = initialMlAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Original loan amount
   * @return initialMlAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_ML_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInitialMlAmount() {
    return initialMlAmount;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_ML_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialMlAmount(BigDecimal initialMlAmount) {
    this.initialMlAmount = initialMlAmount;
  }


  public CustomerAccountDetail initialMlDate(Long initialMlDate) {
    
    this.initialMlDate = initialMlDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return initialMlDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_ML_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getInitialMlDate() {
    return initialMlDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_ML_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialMlDate(Long initialMlDate) {
    this.initialMlDate = initialMlDate;
  }


  public CustomerAccountDetail nextPaymentPrincipalAmount(BigDecimal nextPaymentPrincipalAmount) {
    
    this.nextPaymentPrincipalAmount = nextPaymentPrincipalAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards principal in next payment
   * @return nextPaymentPrincipalAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNextPaymentPrincipalAmount() {
    return nextPaymentPrincipalAmount;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextPaymentPrincipalAmount(BigDecimal nextPaymentPrincipalAmount) {
    this.nextPaymentPrincipalAmount = nextPaymentPrincipalAmount;
  }


  public CustomerAccountDetail nextPaymentInterestAmount(BigDecimal nextPaymentInterestAmount) {
    
    this.nextPaymentInterestAmount = nextPaymentInterestAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of interest in next payment
   * @return nextPaymentInterestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNextPaymentInterestAmount() {
    return nextPaymentInterestAmount;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextPaymentInterestAmount(BigDecimal nextPaymentInterestAmount) {
    this.nextPaymentInterestAmount = nextPaymentInterestAmount;
  }


  public CustomerAccountDetail nextPayment(BigDecimal nextPayment) {
    
    this.nextPayment = nextPayment;
    return this;
  }

   /**
   * (Mortgage/Loan) Minimum payment due
   * @return nextPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNextPayment() {
    return nextPayment;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextPayment(BigDecimal nextPayment) {
    this.nextPayment = nextPayment;
  }


  public CustomerAccountDetail nextPaymentDate(Long nextPaymentDate) {
    
    this.nextPaymentDate = nextPaymentDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return nextPaymentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNextPaymentDate() {
    return nextPaymentDate;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextPaymentDate(Long nextPaymentDate) {
    this.nextPaymentDate = nextPaymentDate;
  }


  public CustomerAccountDetail lastPaymentDueDate(Long lastPaymentDueDate) {
    
    this.lastPaymentDueDate = lastPaymentDueDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentDueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastPaymentDueDate() {
    return lastPaymentDueDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentDueDate(Long lastPaymentDueDate) {
    this.lastPaymentDueDate = lastPaymentDueDate;
  }


  public CustomerAccountDetail lastPaymentReceiveDate(Long lastPaymentReceiveDate) {
    
    this.lastPaymentReceiveDate = lastPaymentReceiveDate;
    return this;
  }

   /**
   * (Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentReceiveDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_RECEIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastPaymentReceiveDate() {
    return lastPaymentReceiveDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_RECEIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentReceiveDate(Long lastPaymentReceiveDate) {
    this.lastPaymentReceiveDate = lastPaymentReceiveDate;
  }


  public CustomerAccountDetail lastPaymentPrincipalAmount(BigDecimal lastPaymentPrincipalAmount) {
    
    this.lastPaymentPrincipalAmount = lastPaymentPrincipalAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards principal in last payment
   * @return lastPaymentPrincipalAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentPrincipalAmount() {
    return lastPaymentPrincipalAmount;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentPrincipalAmount(BigDecimal lastPaymentPrincipalAmount) {
    this.lastPaymentPrincipalAmount = lastPaymentPrincipalAmount;
  }


  public CustomerAccountDetail lastPaymentInterestAmount(BigDecimal lastPaymentInterestAmount) {
    
    this.lastPaymentInterestAmount = lastPaymentInterestAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of interest in last payment
   * @return lastPaymentInterestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentInterestAmount() {
    return lastPaymentInterestAmount;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentInterestAmount(BigDecimal lastPaymentInterestAmount) {
    this.lastPaymentInterestAmount = lastPaymentInterestAmount;
  }


  public CustomerAccountDetail lastPaymentEscrowAmount(BigDecimal lastPaymentEscrowAmount) {
    
    this.lastPaymentEscrowAmount = lastPaymentEscrowAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards escrow in last payment
   * @return lastPaymentEscrowAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_ESCROW_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentEscrowAmount() {
    return lastPaymentEscrowAmount;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_ESCROW_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentEscrowAmount(BigDecimal lastPaymentEscrowAmount) {
    this.lastPaymentEscrowAmount = lastPaymentEscrowAmount;
  }


  public CustomerAccountDetail lastPaymentLastFeeAmount(BigDecimal lastPaymentLastFeeAmount) {
    
    this.lastPaymentLastFeeAmount = lastPaymentLastFeeAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of last fee in last payment
   * @return lastPaymentLastFeeAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_LAST_FEE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentLastFeeAmount() {
    return lastPaymentLastFeeAmount;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_LAST_FEE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentLastFeeAmount(BigDecimal lastPaymentLastFeeAmount) {
    this.lastPaymentLastFeeAmount = lastPaymentLastFeeAmount;
  }


  public CustomerAccountDetail lastPaymentLateCharge(BigDecimal lastPaymentLateCharge) {
    
    this.lastPaymentLateCharge = lastPaymentLateCharge;
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of late charge in last payment
   * @return lastPaymentLateCharge
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_LATE_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLastPaymentLateCharge() {
    return lastPaymentLateCharge;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PAYMENT_LATE_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPaymentLateCharge(BigDecimal lastPaymentLateCharge) {
    this.lastPaymentLateCharge = lastPaymentLateCharge;
  }


  public CustomerAccountDetail ytdPrincipalPaid(BigDecimal ytdPrincipalPaid) {
    
    this.ytdPrincipalPaid = ytdPrincipalPaid;
    return this;
  }

   /**
   * (Mortgage/Loan) Principal paid year-to-date
   * @return ytdPrincipalPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YTD_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYtdPrincipalPaid() {
    return ytdPrincipalPaid;
  }


  @JsonProperty(JSON_PROPERTY_YTD_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYtdPrincipalPaid(BigDecimal ytdPrincipalPaid) {
    this.ytdPrincipalPaid = ytdPrincipalPaid;
  }


  public CustomerAccountDetail ytdInterestPaid(BigDecimal ytdInterestPaid) {
    
    this.ytdInterestPaid = ytdInterestPaid;
    return this;
  }

   /**
   * (Mortgage/Loan) Interest paid year-to-date
   * @return ytdInterestPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YTD_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYtdInterestPaid() {
    return ytdInterestPaid;
  }


  @JsonProperty(JSON_PROPERTY_YTD_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYtdInterestPaid(BigDecimal ytdInterestPaid) {
    this.ytdInterestPaid = ytdInterestPaid;
  }


  public CustomerAccountDetail ytdInsurancePaid(BigDecimal ytdInsurancePaid) {
    
    this.ytdInsurancePaid = ytdInsurancePaid;
    return this;
  }

   /**
   * (Mortgage/Loan) Insurance paid year-to-date
   * @return ytdInsurancePaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YTD_INSURANCE_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYtdInsurancePaid() {
    return ytdInsurancePaid;
  }


  @JsonProperty(JSON_PROPERTY_YTD_INSURANCE_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYtdInsurancePaid(BigDecimal ytdInsurancePaid) {
    this.ytdInsurancePaid = ytdInsurancePaid;
  }


  public CustomerAccountDetail ytdTaxPaid(BigDecimal ytdTaxPaid) {
    
    this.ytdTaxPaid = ytdTaxPaid;
    return this;
  }

   /**
   * (Mortgage/Loan) Tax paid year-to-date
   * @return ytdTaxPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YTD_TAX_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYtdTaxPaid() {
    return ytdTaxPaid;
  }


  @JsonProperty(JSON_PROPERTY_YTD_TAX_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYtdTaxPaid(BigDecimal ytdTaxPaid) {
    this.ytdTaxPaid = ytdTaxPaid;
  }


  public CustomerAccountDetail autoPayEnrolled(Boolean autoPayEnrolled) {
    
    this.autoPayEnrolled = autoPayEnrolled;
    return this;
  }

   /**
   * (Mortgage/Loan) Enrolled in autopay (F/Y)
   * @return autoPayEnrolled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_PAY_ENROLLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoPayEnrolled() {
    return autoPayEnrolled;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_PAY_ENROLLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoPayEnrolled(Boolean autoPayEnrolled) {
    this.autoPayEnrolled = autoPayEnrolled;
  }


  public CustomerAccountDetail marginAllowed(Boolean marginAllowed) {
    
    this.marginAllowed = marginAllowed;
    return this;
  }

   /**
   * Margin trading indicator (true / false)
   * @return marginAllowed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARGIN_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMarginAllowed() {
    return marginAllowed;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarginAllowed(Boolean marginAllowed) {
    this.marginAllowed = marginAllowed;
  }


  public CustomerAccountDetail cashAccountAllowed(Boolean cashAccountAllowed) {
    
    this.cashAccountAllowed = cashAccountAllowed;
    return this;
  }

   /**
   * Cash account allowed indicator (true / false)
   * @return cashAccountAllowed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_ACCOUNT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCashAccountAllowed() {
    return cashAccountAllowed;
  }


  @JsonProperty(JSON_PROPERTY_CASH_ACCOUNT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashAccountAllowed(Boolean cashAccountAllowed) {
    this.cashAccountAllowed = cashAccountAllowed;
  }


  public CustomerAccountDetail collateral(String collateral) {
    
    this.collateral = collateral;
    return this;
  }

   /**
   * (Mortgage/Loan) Collateral on loan
   * @return collateral
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCollateral() {
    return collateral;
  }


  @JsonProperty(JSON_PROPERTY_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollateral(String collateral) {
    this.collateral = collateral;
  }


  public CustomerAccountDetail currentSchool(String currentSchool) {
    
    this.currentSchool = currentSchool;
    return this;
  }

   /**
   * (Mortgage/Loan) Current school
   * @return currentSchool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_SCHOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentSchool() {
    return currentSchool;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_SCHOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentSchool(String currentSchool) {
    this.currentSchool = currentSchool;
  }


  public CustomerAccountDetail firstPaymentDate(Long firstPaymentDate) {
    
    this.firstPaymentDate = firstPaymentDate;
    return this;
  }

   /**
   * (Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return firstPaymentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstPaymentDate() {
    return firstPaymentDate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstPaymentDate(Long firstPaymentDate) {
    this.firstPaymentDate = firstPaymentDate;
  }


  public CustomerAccountDetail firstMortgage(Boolean firstMortgage) {
    
    this.firstMortgage = firstMortgage;
    return this;
  }

   /**
   * (Mortgage/Loan) First mortgage (F/Y)
   * @return firstMortgage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_MORTGAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFirstMortgage() {
    return firstMortgage;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MORTGAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMortgage(Boolean firstMortgage) {
    this.firstMortgage = firstMortgage;
  }


  public CustomerAccountDetail loanPaymentFreq(String loanPaymentFreq) {
    
    this.loanPaymentFreq = loanPaymentFreq;
    return this;
  }

   /**
   * (Mortgage/Loan) Frequency of payments (monthly, etc.)
   * @return loanPaymentFreq
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_FREQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanPaymentFreq() {
    return loanPaymentFreq;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_FREQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanPaymentFreq(String loanPaymentFreq) {
    this.loanPaymentFreq = loanPaymentFreq;
  }


  public CustomerAccountDetail originalSchool(String originalSchool) {
    
    this.originalSchool = originalSchool;
    return this;
  }

   /**
   * (Mortgage/Loan) Original school
   * @return originalSchool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_SCHOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalSchool() {
    return originalSchool;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_SCHOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalSchool(String originalSchool) {
    this.originalSchool = originalSchool;
  }


  public CustomerAccountDetail recurringPaymentAmount(BigDecimal recurringPaymentAmount) {
    
    this.recurringPaymentAmount = recurringPaymentAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Recurring payment amount
   * @return recurringPaymentAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRING_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRecurringPaymentAmount() {
    return recurringPaymentAmount;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringPaymentAmount(BigDecimal recurringPaymentAmount) {
    this.recurringPaymentAmount = recurringPaymentAmount;
  }


  public CustomerAccountDetail lender(String lender) {
    
    this.lender = lender;
    return this;
  }

   /**
   * (Mortgage/Loan) Owner of loan
   * @return lender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLender() {
    return lender;
  }


  @JsonProperty(JSON_PROPERTY_LENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLender(String lender) {
    this.lender = lender;
  }


  public CustomerAccountDetail endingBalanceAmount(BigDecimal endingBalanceAmount) {
    
    this.endingBalanceAmount = endingBalanceAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Ending balance
   * @return endingBalanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEndingBalanceAmount() {
    return endingBalanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndingBalanceAmount(BigDecimal endingBalanceAmount) {
    this.endingBalanceAmount = endingBalanceAmount;
  }


  public CustomerAccountDetail loanTermType(String loanTermType) {
    
    this.loanTermType = loanTermType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of loan term
   * @return loanTermType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_TERM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanTermType() {
    return loanTermType;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_TERM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanTermType(String loanTermType) {
    this.loanTermType = loanTermType;
  }


  public CustomerAccountDetail paymentsMade(Integer paymentsMade) {
    
    this.paymentsMade = paymentsMade;
    return this;
  }

   /**
   * (Mortgage/Loan) Number of payments made
   * @return paymentsMade
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENTS_MADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPaymentsMade() {
    return paymentsMade;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENTS_MADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentsMade(Integer paymentsMade) {
    this.paymentsMade = paymentsMade;
  }


  public CustomerAccountDetail balloonAmount(BigDecimal balloonAmount) {
    
    this.balloonAmount = balloonAmount;
    return this;
  }

   /**
   * (Mortgage/Loan) Balloon payment amount
   * @return balloonAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALLOON_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBalloonAmount() {
    return balloonAmount;
  }


  @JsonProperty(JSON_PROPERTY_BALLOON_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalloonAmount(BigDecimal balloonAmount) {
    this.balloonAmount = balloonAmount;
  }


  public CustomerAccountDetail projectedInterest(BigDecimal projectedInterest) {
    
    this.projectedInterest = projectedInterest;
    return this;
  }

   /**
   * (Mortgage/Loan) Projected interest on the loan
   * @return projectedInterest
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECTED_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProjectedInterest() {
    return projectedInterest;
  }


  @JsonProperty(JSON_PROPERTY_PROJECTED_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectedInterest(BigDecimal projectedInterest) {
    this.projectedInterest = projectedInterest;
  }


  public CustomerAccountDetail interestPaidLtd(BigDecimal interestPaidLtd) {
    
    this.interestPaidLtd = interestPaidLtd;
    return this;
  }

   /**
   * (Mortgage/Loan) Interest paid since inception of loan (life to date)
   * @return interestPaidLtd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_PAID_LTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestPaidLtd() {
    return interestPaidLtd;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_PAID_LTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestPaidLtd(BigDecimal interestPaidLtd) {
    this.interestPaidLtd = interestPaidLtd;
  }


  public CustomerAccountDetail interestRateType(String interestRateType) {
    
    this.interestRateType = interestRateType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of interest rate
   * @return interestRateType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_RATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterestRateType() {
    return interestRateType;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_RATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestRateType(String interestRateType) {
    this.interestRateType = interestRateType;
  }


  public CustomerAccountDetail loanPaymentType(String loanPaymentType) {
    
    this.loanPaymentType = loanPaymentType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of loan payment
   * @return loanPaymentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanPaymentType() {
    return loanPaymentType;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanPaymentType(String loanPaymentType) {
    this.loanPaymentType = loanPaymentType;
  }


  public CustomerAccountDetail repaymentPlan(String repaymentPlan) {
    
    this.repaymentPlan = repaymentPlan;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of repayment plan for the student loan
   * @return repaymentPlan
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRepaymentPlan() {
    return repaymentPlan;
  }


  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepaymentPlan(String repaymentPlan) {
    this.repaymentPlan = repaymentPlan;
  }


  public CustomerAccountDetail paymentsRemaining(Integer paymentsRemaining) {
    
    this.paymentsRemaining = paymentsRemaining;
    return this;
  }

   /**
   * (Mortgage/Loan) Number of payments remaining before loan is paid off
   * @return paymentsRemaining
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENTS_REMAINING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPaymentsRemaining() {
    return paymentsRemaining;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENTS_REMAINING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentsRemaining(Integer paymentsRemaining) {
    this.paymentsRemaining = paymentsRemaining;
  }


  public CustomerAccountDetail marginBalance(BigDecimal marginBalance) {
    
    this.marginBalance = marginBalance;
    return this;
  }

   /**
   * (Investment) Net interest earned after deducting interest paid out
   * @return marginBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMarginBalance() {
    return marginBalance;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarginBalance(BigDecimal marginBalance) {
    this.marginBalance = marginBalance;
  }


  public CustomerAccountDetail shortBalance(BigDecimal shortBalance) {
    
    this.shortBalance = shortBalance;
    return this;
  }

   /**
   * (Investment) Sum of short balance
   * @return shortBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getShortBalance() {
    return shortBalance;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortBalance(BigDecimal shortBalance) {
    this.shortBalance = shortBalance;
  }


  public CustomerAccountDetail availableCashBalance(BigDecimal availableCashBalance) {
    
    this.availableCashBalance = availableCashBalance;
    return this;
  }

   /**
   * (Investment) Amount available for cash withdrawal
   * @return availableCashBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_CASH_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableCashBalance() {
    return availableCashBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_CASH_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableCashBalance(BigDecimal availableCashBalance) {
    this.availableCashBalance = availableCashBalance;
  }


  public CustomerAccountDetail maturityValueAmount(BigDecimal maturityValueAmount) {
    
    this.maturityValueAmount = maturityValueAmount;
    return this;
  }

   /**
   * (Investment) amount payable to an investor at maturity
   * @return maturityValueAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATURITY_VALUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaturityValueAmount() {
    return maturityValueAmount;
  }


  @JsonProperty(JSON_PROPERTY_MATURITY_VALUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaturityValueAmount(BigDecimal maturityValueAmount) {
    this.maturityValueAmount = maturityValueAmount;
  }


  public CustomerAccountDetail vestedBalance(BigDecimal vestedBalance) {
    
    this.vestedBalance = vestedBalance;
    return this;
  }

   /**
   * (Investment) Vested amount in account
   * @return vestedBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VESTED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getVestedBalance() {
    return vestedBalance;
  }


  @JsonProperty(JSON_PROPERTY_VESTED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVestedBalance(BigDecimal vestedBalance) {
    this.vestedBalance = vestedBalance;
  }


  public CustomerAccountDetail empMatchAmount(BigDecimal empMatchAmount) {
    
    this.empMatchAmount = empMatchAmount;
    return this;
  }

   /**
   * (Investment) Employer matched contributions
   * @return empMatchAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMP_MATCH_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEmpMatchAmount() {
    return empMatchAmount;
  }


  @JsonProperty(JSON_PROPERTY_EMP_MATCH_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmpMatchAmount(BigDecimal empMatchAmount) {
    this.empMatchAmount = empMatchAmount;
  }


  public CustomerAccountDetail empPretaxContribAmount(BigDecimal empPretaxContribAmount) {
    
    this.empPretaxContribAmount = empPretaxContribAmount;
    return this;
  }

   /**
   * (Investment) Employer pretax contribution amount
   * @return empPretaxContribAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEmpPretaxContribAmount() {
    return empPretaxContribAmount;
  }


  @JsonProperty(JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmpPretaxContribAmount(BigDecimal empPretaxContribAmount) {
    this.empPretaxContribAmount = empPretaxContribAmount;
  }


  public CustomerAccountDetail empPretaxContribAmountYtd(BigDecimal empPretaxContribAmountYtd) {
    
    this.empPretaxContribAmountYtd = empPretaxContribAmountYtd;
    return this;
  }

   /**
   * (Investment) Employer pretax contribution amount year to date
   * @return empPretaxContribAmountYtd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT_YTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEmpPretaxContribAmountYtd() {
    return empPretaxContribAmountYtd;
  }


  @JsonProperty(JSON_PROPERTY_EMP_PRETAX_CONTRIB_AMOUNT_YTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmpPretaxContribAmountYtd(BigDecimal empPretaxContribAmountYtd) {
    this.empPretaxContribAmountYtd = empPretaxContribAmountYtd;
  }


  public CustomerAccountDetail contribTotalYtd(BigDecimal contribTotalYtd) {
    
    this.contribTotalYtd = contribTotalYtd;
    return this;
  }

   /**
   * (Investment) Total year to date contributions
   * @return contribTotalYtd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTRIB_TOTAL_YTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getContribTotalYtd() {
    return contribTotalYtd;
  }


  @JsonProperty(JSON_PROPERTY_CONTRIB_TOTAL_YTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContribTotalYtd(BigDecimal contribTotalYtd) {
    this.contribTotalYtd = contribTotalYtd;
  }


  public CustomerAccountDetail cashBalanceAmount(BigDecimal cashBalanceAmount) {
    
    this.cashBalanceAmount = cashBalanceAmount;
    return this;
  }

   /**
   * (Investment) Cash balance of account
   * @return cashBalanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashBalanceAmount() {
    return cashBalanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_CASH_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashBalanceAmount(BigDecimal cashBalanceAmount) {
    this.cashBalanceAmount = cashBalanceAmount;
  }


  public CustomerAccountDetail preTaxAmount(BigDecimal preTaxAmount) {
    
    this.preTaxAmount = preTaxAmount;
    return this;
  }

   /**
   * (Investment) Pre-tax amount of total balance
   * @return preTaxAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPreTaxAmount() {
    return preTaxAmount;
  }


  @JsonProperty(JSON_PROPERTY_PRE_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreTaxAmount(BigDecimal preTaxAmount) {
    this.preTaxAmount = preTaxAmount;
  }


  public CustomerAccountDetail afterTaxAmount(BigDecimal afterTaxAmount) {
    
    this.afterTaxAmount = afterTaxAmount;
    return this;
  }

   /**
   * (Investment) After-tax amount of total balance
   * @return afterTaxAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AFTER_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAfterTaxAmount() {
    return afterTaxAmount;
  }


  @JsonProperty(JSON_PROPERTY_AFTER_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAfterTaxAmount(BigDecimal afterTaxAmount) {
    this.afterTaxAmount = afterTaxAmount;
  }


  public CustomerAccountDetail matchAmount(BigDecimal matchAmount) {
    
    this.matchAmount = matchAmount;
    return this;
  }

   /**
   * (Investment) Amount matched
   * @return matchAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCH_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMatchAmount() {
    return matchAmount;
  }


  @JsonProperty(JSON_PROPERTY_MATCH_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchAmount(BigDecimal matchAmount) {
    this.matchAmount = matchAmount;
  }


  public CustomerAccountDetail profitSharingAmount(BigDecimal profitSharingAmount) {
    
    this.profitSharingAmount = profitSharingAmount;
    return this;
  }

   /**
   * (Investment) Amount of balance for profit sharing
   * @return profitSharingAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFIT_SHARING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProfitSharingAmount() {
    return profitSharingAmount;
  }


  @JsonProperty(JSON_PROPERTY_PROFIT_SHARING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfitSharingAmount(BigDecimal profitSharingAmount) {
    this.profitSharingAmount = profitSharingAmount;
  }


  public CustomerAccountDetail rolloverAmount(BigDecimal rolloverAmount) {
    
    this.rolloverAmount = rolloverAmount;
    return this;
  }

   /**
   * (Investment) Amount of balance rolled over from original account (401k, etc.)
   * @return rolloverAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLLOVER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRolloverAmount() {
    return rolloverAmount;
  }


  @JsonProperty(JSON_PROPERTY_ROLLOVER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRolloverAmount(BigDecimal rolloverAmount) {
    this.rolloverAmount = rolloverAmount;
  }


  public CustomerAccountDetail otherVestAmount(BigDecimal otherVestAmount) {
    
    this.otherVestAmount = otherVestAmount;
    return this;
  }

   /**
   * (Investment) Other vested amount
   * @return otherVestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHER_VEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOtherVestAmount() {
    return otherVestAmount;
  }


  @JsonProperty(JSON_PROPERTY_OTHER_VEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtherVestAmount(BigDecimal otherVestAmount) {
    this.otherVestAmount = otherVestAmount;
  }


  public CustomerAccountDetail otherNonvestAmount(BigDecimal otherNonvestAmount) {
    
    this.otherNonvestAmount = otherNonvestAmount;
    return this;
  }

   /**
   * (Investment) Other nonvested amount
   * @return otherNonvestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHER_NONVEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOtherNonvestAmount() {
    return otherNonvestAmount;
  }


  @JsonProperty(JSON_PROPERTY_OTHER_NONVEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtherNonvestAmount(BigDecimal otherNonvestAmount) {
    this.otherNonvestAmount = otherNonvestAmount;
  }


  public CustomerAccountDetail currentLoanBalance(BigDecimal currentLoanBalance) {
    
    this.currentLoanBalance = currentLoanBalance;
    return this;
  }

   /**
   * (Investment) Current loan balance
   * @return currentLoanBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_LOAN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentLoanBalance() {
    return currentLoanBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_LOAN_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentLoanBalance(BigDecimal currentLoanBalance) {
    this.currentLoanBalance = currentLoanBalance;
  }


  public CustomerAccountDetail loanRate(BigDecimal loanRate) {
    
    this.loanRate = loanRate;
    return this;
  }

   /**
   * (Investment) Interest rate of loan
   * @return loanRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoanRate() {
    return loanRate;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanRate(BigDecimal loanRate) {
    this.loanRate = loanRate;
  }


  public CustomerAccountDetail buyPower(BigDecimal buyPower) {
    
    this.buyPower = buyPower;
    return this;
  }

   /**
   * (Investment) Money available to buy securities
   * @return buyPower
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUY_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBuyPower() {
    return buyPower;
  }


  @JsonProperty(JSON_PROPERTY_BUY_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyPower(BigDecimal buyPower) {
    this.buyPower = buyPower;
  }


  public CustomerAccountDetail rolloverLtd(BigDecimal rolloverLtd) {
    
    this.rolloverLtd = rolloverLtd;
    return this;
  }

   /**
   * (Investment) Life to date of money rolled over
   * @return rolloverLtd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLLOVER_LTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRolloverLtd() {
    return rolloverLtd;
  }


  @JsonProperty(JSON_PROPERTY_ROLLOVER_LTD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRolloverLtd(BigDecimal rolloverLtd) {
    this.rolloverLtd = rolloverLtd;
  }


  public CustomerAccountDetail loanAwardId(String loanAwardId) {
    
    this.loanAwardId = loanAwardId;
    return this;
  }

   /**
   * (Student Loan) The federal unique loan identifying number
   * @return loanAwardId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_AWARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanAwardId() {
    return loanAwardId;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_AWARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanAwardId(String loanAwardId) {
    this.loanAwardId = loanAwardId;
  }


  public CustomerAccountDetail originalInterestRate(BigDecimal originalInterestRate) {
    
    this.originalInterestRate = originalInterestRate;
    return this;
  }

   /**
   * (Student Loan) The original interest rate to which the loan was disbursed, in APY
   * @return originalInterestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOriginalInterestRate() {
    return originalInterestRate;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalInterestRate(BigDecimal originalInterestRate) {
    this.originalInterestRate = originalInterestRate;
  }


  public CustomerAccountDetail guarantor(String guarantor) {
    
    this.guarantor = guarantor;
    return this;
  }

   /**
   * (Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults)
   * @return guarantor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUARANTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGuarantor() {
    return guarantor;
  }


  @JsonProperty(JSON_PROPERTY_GUARANTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuarantor(String guarantor) {
    this.guarantor = guarantor;
  }


  public CustomerAccountDetail owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * (Student Loan) Owner of the loan
   * @return owner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(String owner) {
    this.owner = owner;
  }


  public CustomerAccountDetail interestSubsidyType(String interestSubsidyType) {
    
    this.interestSubsidyType = interestSubsidyType;
    return this;
  }

   /**
   * (Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized)
   * @return interestSubsidyType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_SUBSIDY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterestSubsidyType() {
    return interestSubsidyType;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_SUBSIDY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestSubsidyType(String interestSubsidyType) {
    this.interestSubsidyType = interestSubsidyType;
  }


  public CustomerAccountDetail interestBalance(BigDecimal interestBalance) {
    
    this.interestBalance = interestBalance;
    return this;
  }

   /**
   * (Student Loan) The total outstanding interest balance
   * @return interestBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestBalance() {
    return interestBalance;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestBalance(BigDecimal interestBalance) {
    this.interestBalance = interestBalance;
  }


  public CustomerAccountDetail remainingTermOfMl(BigDecimal remainingTermOfMl) {
    
    this.remainingTermOfMl = remainingTermOfMl;
    return this;
  }

   /**
   * (Student Loan) The number of months still outstanding on a loan
   * @return remainingTermOfMl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMAINING_TERM_OF_ML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRemainingTermOfMl() {
    return remainingTermOfMl;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_TERM_OF_ML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemainingTermOfMl(BigDecimal remainingTermOfMl) {
    this.remainingTermOfMl = remainingTermOfMl;
  }


  public CustomerAccountDetail initialInterestRate(BigDecimal initialInterestRate) {
    
    this.initialInterestRate = initialInterestRate;
    return this;
  }

   /**
   * (Student Loan) Initial interest rate of loan
   * @return initialInterestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInitialInterestRate() {
    return initialInterestRate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialInterestRate(BigDecimal initialInterestRate) {
    this.initialInterestRate = initialInterestRate;
  }


  public CustomerAccountDetail feesBalance(BigDecimal feesBalance) {
    
    this.feesBalance = feesBalance;
    return this;
  }

   /**
   * (Student Loan) The total outstanding fees balance
   * @return feesBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEES_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFeesBalance() {
    return feesBalance;
  }


  @JsonProperty(JSON_PROPERTY_FEES_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeesBalance(BigDecimal feesBalance) {
    this.feesBalance = feesBalance;
  }


  public CustomerAccountDetail loanYtdInterestPaid(BigDecimal loanYtdInterestPaid) {
    
    this.loanYtdInterestPaid = loanYtdInterestPaid;
    return this;
  }

   /**
   * (Student Loan) Loan interest paid year-to-date
   * @return loanYtdInterestPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_YTD_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoanYtdInterestPaid() {
    return loanYtdInterestPaid;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_YTD_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanYtdInterestPaid(BigDecimal loanYtdInterestPaid) {
    this.loanYtdInterestPaid = loanYtdInterestPaid;
  }


  public CustomerAccountDetail loanYtdFeesPaid(BigDecimal loanYtdFeesPaid) {
    
    this.loanYtdFeesPaid = loanYtdFeesPaid;
    return this;
  }

   /**
   * (Student Loan) Loan fees paid year-to-date
   * @return loanYtdFeesPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_YTD_FEES_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoanYtdFeesPaid() {
    return loanYtdFeesPaid;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_YTD_FEES_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanYtdFeesPaid(BigDecimal loanYtdFeesPaid) {
    this.loanYtdFeesPaid = loanYtdFeesPaid;
  }


  public CustomerAccountDetail loanYtdPrincipalPaid(BigDecimal loanYtdPrincipalPaid) {
    
    this.loanYtdPrincipalPaid = loanYtdPrincipalPaid;
    return this;
  }

   /**
   * (Student Loan) Loan principal paid year-to-date
   * @return loanYtdPrincipalPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_YTD_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoanYtdPrincipalPaid() {
    return loanYtdPrincipalPaid;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_YTD_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanYtdPrincipalPaid(BigDecimal loanYtdPrincipalPaid) {
    this.loanYtdPrincipalPaid = loanYtdPrincipalPaid;
  }


  public CustomerAccountDetail loanStatus(String loanStatus) {
    
    this.loanStatus = loanStatus;
    return this;
  }

   /**
   * (Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance)
   * @return loanStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanStatus() {
    return loanStatus;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanStatus(String loanStatus) {
    this.loanStatus = loanStatus;
  }


  public CustomerAccountDetail loanStatusStartDate(Long loanStatusStartDate) {
    
    this.loanStatusStartDate = loanStatusStartDate;
    return this;
  }

   /**
   * (Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return loanStatusStartDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_STATUS_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLoanStatusStartDate() {
    return loanStatusStartDate;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_STATUS_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanStatusStartDate(Long loanStatusStartDate) {
    this.loanStatusStartDate = loanStatusStartDate;
  }


  public CustomerAccountDetail loanStatusEndDate(Long loanStatusEndDate) {
    
    this.loanStatusEndDate = loanStatusEndDate;
    return this;
  }

   /**
   * (Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return loanStatusEndDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_STATUS_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLoanStatusEndDate() {
    return loanStatusEndDate;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_STATUS_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanStatusEndDate(Long loanStatusEndDate) {
    this.loanStatusEndDate = loanStatusEndDate;
  }


  public CustomerAccountDetail weightedInterestRate(BigDecimal weightedInterestRate) {
    
    this.weightedInterestRate = weightedInterestRate;
    return this;
  }

   /**
   * (Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY
   * @return weightedInterestRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEIGHTED_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWeightedInterestRate() {
    return weightedInterestRate;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHTED_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeightedInterestRate(BigDecimal weightedInterestRate) {
    this.weightedInterestRate = weightedInterestRate;
  }


  public CustomerAccountDetail repaymentPlanStartDate(Long repaymentPlanStartDate) {
    
    this.repaymentPlanStartDate = repaymentPlanStartDate;
    return this;
  }

   /**
   * (Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return repaymentPlanStartDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRepaymentPlanStartDate() {
    return repaymentPlanStartDate;
  }


  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepaymentPlanStartDate(Long repaymentPlanStartDate) {
    this.repaymentPlanStartDate = repaymentPlanStartDate;
  }


  public CustomerAccountDetail repaymentPlanEndDate(Long repaymentPlanEndDate) {
    
    this.repaymentPlanEndDate = repaymentPlanEndDate;
    return this;
  }

   /**
   * (Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return repaymentPlanEndDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRepaymentPlanEndDate() {
    return repaymentPlanEndDate;
  }


  @JsonProperty(JSON_PROPERTY_REPAYMENT_PLAN_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepaymentPlanEndDate(Long repaymentPlanEndDate) {
    this.repaymentPlanEndDate = repaymentPlanEndDate;
  }


  public CustomerAccountDetail expectedPayoffDate(Long expectedPayoffDate) {
    
    this.expectedPayoffDate = expectedPayoffDate;
    return this;
  }

   /**
   * (Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return expectedPayoffDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_PAYOFF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExpectedPayoffDate() {
    return expectedPayoffDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_PAYOFF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedPayoffDate(Long expectedPayoffDate) {
    this.expectedPayoffDate = expectedPayoffDate;
  }


  public CustomerAccountDetail outOfSchoolDate(Long outOfSchoolDate) {
    
    this.outOfSchoolDate = outOfSchoolDate;
    return this;
  }

   /**
   * (Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return outOfSchoolDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUT_OF_SCHOOL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOutOfSchoolDate() {
    return outOfSchoolDate;
  }


  @JsonProperty(JSON_PROPERTY_OUT_OF_SCHOOL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutOfSchoolDate(Long outOfSchoolDate) {
    this.outOfSchoolDate = outOfSchoolDate;
  }


  public CustomerAccountDetail convertToRepayment(Long convertToRepayment) {
    
    this.convertToRepayment = convertToRepayment;
    return this;
  }

   /**
   * (Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return convertToRepayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONVERT_TO_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getConvertToRepayment() {
    return convertToRepayment;
  }


  @JsonProperty(JSON_PROPERTY_CONVERT_TO_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvertToRepayment(Long convertToRepayment) {
    this.convertToRepayment = convertToRepayment;
  }


  public CustomerAccountDetail daysDelinquent(Integer daysDelinquent) {
    
    this.daysDelinquent = daysDelinquent;
    return this;
  }

   /**
   * (Student Loan) The number of days past a due date that a payment should have been made
   * @return daysDelinquent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAYS_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDaysDelinquent() {
    return daysDelinquent;
  }


  @JsonProperty(JSON_PROPERTY_DAYS_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDaysDelinquent(Integer daysDelinquent) {
    this.daysDelinquent = daysDelinquent;
  }


  public CustomerAccountDetail totalPrincipalPaid(BigDecimal totalPrincipalPaid) {
    
    this.totalPrincipalPaid = totalPrincipalPaid;
    return this;
  }

   /**
   * (Student Loan) The total amount paid towards the principal balance
   * @return totalPrincipalPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalPrincipalPaid() {
    return totalPrincipalPaid;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PRINCIPAL_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPrincipalPaid(BigDecimal totalPrincipalPaid) {
    this.totalPrincipalPaid = totalPrincipalPaid;
  }


  public CustomerAccountDetail totalInterestPaid(BigDecimal totalInterestPaid) {
    
    this.totalInterestPaid = totalInterestPaid;
    return this;
  }

   /**
   * (Student Loan) The total amount paid towards interest
   * @return totalInterestPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalInterestPaid() {
    return totalInterestPaid;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalInterestPaid(BigDecimal totalInterestPaid) {
    this.totalInterestPaid = totalInterestPaid;
  }


  public CustomerAccountDetail totalAmountPaid(BigDecimal totalAmountPaid) {
    
    this.totalAmountPaid = totalAmountPaid;
    return this;
  }

   /**
   * (Student Loan) The total amount paid
   * @return totalAmountPaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalAmountPaid() {
    return totalAmountPaid;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmountPaid(BigDecimal totalAmountPaid) {
    this.totalAmountPaid = totalAmountPaid;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAccountDetail customerAccountDetail = (CustomerAccountDetail) o;
    return Objects.equals(this.dateAsOf, customerAccountDetail.dateAsOf) &&
        Objects.equals(this.availableBalanceAmount, customerAccountDetail.availableBalanceAmount) &&
        Objects.equals(this.openDate, customerAccountDetail.openDate) &&
        Objects.equals(this.periodStartDate, customerAccountDetail.periodStartDate) &&
        Objects.equals(this.periodEndDate, customerAccountDetail.periodEndDate) &&
        Objects.equals(this.periodInterestRate, customerAccountDetail.periodInterestRate) &&
        Objects.equals(this.periodDepositAmount, customerAccountDetail.periodDepositAmount) &&
        Objects.equals(this.periodInterestAmount, customerAccountDetail.periodInterestAmount) &&
        Objects.equals(this.interestYtdAmount, customerAccountDetail.interestYtdAmount) &&
        Objects.equals(this.interestPriorYtdAmount, customerAccountDetail.interestPriorYtdAmount) &&
        Objects.equals(this.maturityDate, customerAccountDetail.maturityDate) &&
        Objects.equals(this.interestRate, customerAccountDetail.interestRate) &&
        Objects.equals(this.creditAvailableAmount, customerAccountDetail.creditAvailableAmount) &&
        Objects.equals(this.creditMaxAmount, customerAccountDetail.creditMaxAmount) &&
        Objects.equals(this.cashAdvanceAvailableAmount, customerAccountDetail.cashAdvanceAvailableAmount) &&
        Objects.equals(this.cashAdvanceMaxAmount, customerAccountDetail.cashAdvanceMaxAmount) &&
        Objects.equals(this.cashAdvanceBalance, customerAccountDetail.cashAdvanceBalance) &&
        Objects.equals(this.cashAdvanceInterestRate, customerAccountDetail.cashAdvanceInterestRate) &&
        Objects.equals(this.currentBalance, customerAccountDetail.currentBalance) &&
        Objects.equals(this.paymentMinAmount, customerAccountDetail.paymentMinAmount) &&
        Objects.equals(this.paymentDueDate, customerAccountDetail.paymentDueDate) &&
        Objects.equals(this.previousBalance, customerAccountDetail.previousBalance) &&
        Objects.equals(this.statementStartDate, customerAccountDetail.statementStartDate) &&
        Objects.equals(this.statementEndDate, customerAccountDetail.statementEndDate) &&
        Objects.equals(this.statementPurchaseAmount, customerAccountDetail.statementPurchaseAmount) &&
        Objects.equals(this.statementFinanceAmount, customerAccountDetail.statementFinanceAmount) &&
        Objects.equals(this.statementCreditAmount, customerAccountDetail.statementCreditAmount) &&
        Objects.equals(this.rewardEarnedBalance, customerAccountDetail.rewardEarnedBalance) &&
        Objects.equals(this.pastDueAmount, customerAccountDetail.pastDueAmount) &&
        Objects.equals(this.lastPaymentAmount, customerAccountDetail.lastPaymentAmount) &&
        Objects.equals(this.lastPaymentDate, customerAccountDetail.lastPaymentDate) &&
        Objects.equals(this.statementCloseBalance, customerAccountDetail.statementCloseBalance) &&
        Objects.equals(this.termOfMl, customerAccountDetail.termOfMl) &&
        Objects.equals(this.mlHolderName, customerAccountDetail.mlHolderName) &&
        Objects.equals(this.description, customerAccountDetail.description) &&
        Objects.equals(this.lateFeeAmount, customerAccountDetail.lateFeeAmount) &&
        Objects.equals(this.payoffAmount, customerAccountDetail.payoffAmount) &&
        Objects.equals(this.payoffAmountDate, customerAccountDetail.payoffAmountDate) &&
        Objects.equals(this.originalMaturityDate, customerAccountDetail.originalMaturityDate) &&
        Objects.equals(this.principalBalance, customerAccountDetail.principalBalance) &&
        Objects.equals(this.escrowBalance, customerAccountDetail.escrowBalance) &&
        Objects.equals(this.interestPeriod, customerAccountDetail.interestPeriod) &&
        Objects.equals(this.initialMlAmount, customerAccountDetail.initialMlAmount) &&
        Objects.equals(this.initialMlDate, customerAccountDetail.initialMlDate) &&
        Objects.equals(this.nextPaymentPrincipalAmount, customerAccountDetail.nextPaymentPrincipalAmount) &&
        Objects.equals(this.nextPaymentInterestAmount, customerAccountDetail.nextPaymentInterestAmount) &&
        Objects.equals(this.nextPayment, customerAccountDetail.nextPayment) &&
        Objects.equals(this.nextPaymentDate, customerAccountDetail.nextPaymentDate) &&
        Objects.equals(this.lastPaymentDueDate, customerAccountDetail.lastPaymentDueDate) &&
        Objects.equals(this.lastPaymentReceiveDate, customerAccountDetail.lastPaymentReceiveDate) &&
        Objects.equals(this.lastPaymentPrincipalAmount, customerAccountDetail.lastPaymentPrincipalAmount) &&
        Objects.equals(this.lastPaymentInterestAmount, customerAccountDetail.lastPaymentInterestAmount) &&
        Objects.equals(this.lastPaymentEscrowAmount, customerAccountDetail.lastPaymentEscrowAmount) &&
        Objects.equals(this.lastPaymentLastFeeAmount, customerAccountDetail.lastPaymentLastFeeAmount) &&
        Objects.equals(this.lastPaymentLateCharge, customerAccountDetail.lastPaymentLateCharge) &&
        Objects.equals(this.ytdPrincipalPaid, customerAccountDetail.ytdPrincipalPaid) &&
        Objects.equals(this.ytdInterestPaid, customerAccountDetail.ytdInterestPaid) &&
        Objects.equals(this.ytdInsurancePaid, customerAccountDetail.ytdInsurancePaid) &&
        Objects.equals(this.ytdTaxPaid, customerAccountDetail.ytdTaxPaid) &&
        Objects.equals(this.autoPayEnrolled, customerAccountDetail.autoPayEnrolled) &&
        Objects.equals(this.marginAllowed, customerAccountDetail.marginAllowed) &&
        Objects.equals(this.cashAccountAllowed, customerAccountDetail.cashAccountAllowed) &&
        Objects.equals(this.collateral, customerAccountDetail.collateral) &&
        Objects.equals(this.currentSchool, customerAccountDetail.currentSchool) &&
        Objects.equals(this.firstPaymentDate, customerAccountDetail.firstPaymentDate) &&
        Objects.equals(this.firstMortgage, customerAccountDetail.firstMortgage) &&
        Objects.equals(this.loanPaymentFreq, customerAccountDetail.loanPaymentFreq) &&
        Objects.equals(this.originalSchool, customerAccountDetail.originalSchool) &&
        Objects.equals(this.recurringPaymentAmount, customerAccountDetail.recurringPaymentAmount) &&
        Objects.equals(this.lender, customerAccountDetail.lender) &&
        Objects.equals(this.endingBalanceAmount, customerAccountDetail.endingBalanceAmount) &&
        Objects.equals(this.loanTermType, customerAccountDetail.loanTermType) &&
        Objects.equals(this.paymentsMade, customerAccountDetail.paymentsMade) &&
        Objects.equals(this.balloonAmount, customerAccountDetail.balloonAmount) &&
        Objects.equals(this.projectedInterest, customerAccountDetail.projectedInterest) &&
        Objects.equals(this.interestPaidLtd, customerAccountDetail.interestPaidLtd) &&
        Objects.equals(this.interestRateType, customerAccountDetail.interestRateType) &&
        Objects.equals(this.loanPaymentType, customerAccountDetail.loanPaymentType) &&
        Objects.equals(this.repaymentPlan, customerAccountDetail.repaymentPlan) &&
        Objects.equals(this.paymentsRemaining, customerAccountDetail.paymentsRemaining) &&
        Objects.equals(this.marginBalance, customerAccountDetail.marginBalance) &&
        Objects.equals(this.shortBalance, customerAccountDetail.shortBalance) &&
        Objects.equals(this.availableCashBalance, customerAccountDetail.availableCashBalance) &&
        Objects.equals(this.maturityValueAmount, customerAccountDetail.maturityValueAmount) &&
        Objects.equals(this.vestedBalance, customerAccountDetail.vestedBalance) &&
        Objects.equals(this.empMatchAmount, customerAccountDetail.empMatchAmount) &&
        Objects.equals(this.empPretaxContribAmount, customerAccountDetail.empPretaxContribAmount) &&
        Objects.equals(this.empPretaxContribAmountYtd, customerAccountDetail.empPretaxContribAmountYtd) &&
        Objects.equals(this.contribTotalYtd, customerAccountDetail.contribTotalYtd) &&
        Objects.equals(this.cashBalanceAmount, customerAccountDetail.cashBalanceAmount) &&
        Objects.equals(this.preTaxAmount, customerAccountDetail.preTaxAmount) &&
        Objects.equals(this.afterTaxAmount, customerAccountDetail.afterTaxAmount) &&
        Objects.equals(this.matchAmount, customerAccountDetail.matchAmount) &&
        Objects.equals(this.profitSharingAmount, customerAccountDetail.profitSharingAmount) &&
        Objects.equals(this.rolloverAmount, customerAccountDetail.rolloverAmount) &&
        Objects.equals(this.otherVestAmount, customerAccountDetail.otherVestAmount) &&
        Objects.equals(this.otherNonvestAmount, customerAccountDetail.otherNonvestAmount) &&
        Objects.equals(this.currentLoanBalance, customerAccountDetail.currentLoanBalance) &&
        Objects.equals(this.loanRate, customerAccountDetail.loanRate) &&
        Objects.equals(this.buyPower, customerAccountDetail.buyPower) &&
        Objects.equals(this.rolloverLtd, customerAccountDetail.rolloverLtd) &&
        Objects.equals(this.loanAwardId, customerAccountDetail.loanAwardId) &&
        Objects.equals(this.originalInterestRate, customerAccountDetail.originalInterestRate) &&
        Objects.equals(this.guarantor, customerAccountDetail.guarantor) &&
        Objects.equals(this.owner, customerAccountDetail.owner) &&
        Objects.equals(this.interestSubsidyType, customerAccountDetail.interestSubsidyType) &&
        Objects.equals(this.interestBalance, customerAccountDetail.interestBalance) &&
        Objects.equals(this.remainingTermOfMl, customerAccountDetail.remainingTermOfMl) &&
        Objects.equals(this.initialInterestRate, customerAccountDetail.initialInterestRate) &&
        Objects.equals(this.feesBalance, customerAccountDetail.feesBalance) &&
        Objects.equals(this.loanYtdInterestPaid, customerAccountDetail.loanYtdInterestPaid) &&
        Objects.equals(this.loanYtdFeesPaid, customerAccountDetail.loanYtdFeesPaid) &&
        Objects.equals(this.loanYtdPrincipalPaid, customerAccountDetail.loanYtdPrincipalPaid) &&
        Objects.equals(this.loanStatus, customerAccountDetail.loanStatus) &&
        Objects.equals(this.loanStatusStartDate, customerAccountDetail.loanStatusStartDate) &&
        Objects.equals(this.loanStatusEndDate, customerAccountDetail.loanStatusEndDate) &&
        Objects.equals(this.weightedInterestRate, customerAccountDetail.weightedInterestRate) &&
        Objects.equals(this.repaymentPlanStartDate, customerAccountDetail.repaymentPlanStartDate) &&
        Objects.equals(this.repaymentPlanEndDate, customerAccountDetail.repaymentPlanEndDate) &&
        Objects.equals(this.expectedPayoffDate, customerAccountDetail.expectedPayoffDate) &&
        Objects.equals(this.outOfSchoolDate, customerAccountDetail.outOfSchoolDate) &&
        Objects.equals(this.convertToRepayment, customerAccountDetail.convertToRepayment) &&
        Objects.equals(this.daysDelinquent, customerAccountDetail.daysDelinquent) &&
        Objects.equals(this.totalPrincipalPaid, customerAccountDetail.totalPrincipalPaid) &&
        Objects.equals(this.totalInterestPaid, customerAccountDetail.totalInterestPaid) &&
        Objects.equals(this.totalAmountPaid, customerAccountDetail.totalAmountPaid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateAsOf, availableBalanceAmount, openDate, periodStartDate, periodEndDate, periodInterestRate, periodDepositAmount, periodInterestAmount, interestYtdAmount, interestPriorYtdAmount, maturityDate, interestRate, creditAvailableAmount, creditMaxAmount, cashAdvanceAvailableAmount, cashAdvanceMaxAmount, cashAdvanceBalance, cashAdvanceInterestRate, currentBalance, paymentMinAmount, paymentDueDate, previousBalance, statementStartDate, statementEndDate, statementPurchaseAmount, statementFinanceAmount, statementCreditAmount, rewardEarnedBalance, pastDueAmount, lastPaymentAmount, lastPaymentDate, statementCloseBalance, termOfMl, mlHolderName, description, lateFeeAmount, payoffAmount, payoffAmountDate, originalMaturityDate, principalBalance, escrowBalance, interestPeriod, initialMlAmount, initialMlDate, nextPaymentPrincipalAmount, nextPaymentInterestAmount, nextPayment, nextPaymentDate, lastPaymentDueDate, lastPaymentReceiveDate, lastPaymentPrincipalAmount, lastPaymentInterestAmount, lastPaymentEscrowAmount, lastPaymentLastFeeAmount, lastPaymentLateCharge, ytdPrincipalPaid, ytdInterestPaid, ytdInsurancePaid, ytdTaxPaid, autoPayEnrolled, marginAllowed, cashAccountAllowed, collateral, currentSchool, firstPaymentDate, firstMortgage, loanPaymentFreq, originalSchool, recurringPaymentAmount, lender, endingBalanceAmount, loanTermType, paymentsMade, balloonAmount, projectedInterest, interestPaidLtd, interestRateType, loanPaymentType, repaymentPlan, paymentsRemaining, marginBalance, shortBalance, availableCashBalance, maturityValueAmount, vestedBalance, empMatchAmount, empPretaxContribAmount, empPretaxContribAmountYtd, contribTotalYtd, cashBalanceAmount, preTaxAmount, afterTaxAmount, matchAmount, profitSharingAmount, rolloverAmount, otherVestAmount, otherNonvestAmount, currentLoanBalance, loanRate, buyPower, rolloverLtd, loanAwardId, originalInterestRate, guarantor, owner, interestSubsidyType, interestBalance, remainingTermOfMl, initialInterestRate, feesBalance, loanYtdInterestPaid, loanYtdFeesPaid, loanYtdPrincipalPaid, loanStatus, loanStatusStartDate, loanStatusEndDate, weightedInterestRate, repaymentPlanStartDate, repaymentPlanEndDate, expectedPayoffDate, outOfSchoolDate, convertToRepayment, daysDelinquent, totalPrincipalPaid, totalInterestPaid, totalAmountPaid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAccountDetail {\n");
    sb.append("    dateAsOf: ").append(toIndentedString(dateAsOf)).append("\n");
    sb.append("    availableBalanceAmount: ").append(toIndentedString(availableBalanceAmount)).append("\n");
    sb.append("    openDate: ").append(toIndentedString(openDate)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    periodInterestRate: ").append(toIndentedString(periodInterestRate)).append("\n");
    sb.append("    periodDepositAmount: ").append(toIndentedString(periodDepositAmount)).append("\n");
    sb.append("    periodInterestAmount: ").append(toIndentedString(periodInterestAmount)).append("\n");
    sb.append("    interestYtdAmount: ").append(toIndentedString(interestYtdAmount)).append("\n");
    sb.append("    interestPriorYtdAmount: ").append(toIndentedString(interestPriorYtdAmount)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    creditAvailableAmount: ").append(toIndentedString(creditAvailableAmount)).append("\n");
    sb.append("    creditMaxAmount: ").append(toIndentedString(creditMaxAmount)).append("\n");
    sb.append("    cashAdvanceAvailableAmount: ").append(toIndentedString(cashAdvanceAvailableAmount)).append("\n");
    sb.append("    cashAdvanceMaxAmount: ").append(toIndentedString(cashAdvanceMaxAmount)).append("\n");
    sb.append("    cashAdvanceBalance: ").append(toIndentedString(cashAdvanceBalance)).append("\n");
    sb.append("    cashAdvanceInterestRate: ").append(toIndentedString(cashAdvanceInterestRate)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    paymentMinAmount: ").append(toIndentedString(paymentMinAmount)).append("\n");
    sb.append("    paymentDueDate: ").append(toIndentedString(paymentDueDate)).append("\n");
    sb.append("    previousBalance: ").append(toIndentedString(previousBalance)).append("\n");
    sb.append("    statementStartDate: ").append(toIndentedString(statementStartDate)).append("\n");
    sb.append("    statementEndDate: ").append(toIndentedString(statementEndDate)).append("\n");
    sb.append("    statementPurchaseAmount: ").append(toIndentedString(statementPurchaseAmount)).append("\n");
    sb.append("    statementFinanceAmount: ").append(toIndentedString(statementFinanceAmount)).append("\n");
    sb.append("    statementCreditAmount: ").append(toIndentedString(statementCreditAmount)).append("\n");
    sb.append("    rewardEarnedBalance: ").append(toIndentedString(rewardEarnedBalance)).append("\n");
    sb.append("    pastDueAmount: ").append(toIndentedString(pastDueAmount)).append("\n");
    sb.append("    lastPaymentAmount: ").append(toIndentedString(lastPaymentAmount)).append("\n");
    sb.append("    lastPaymentDate: ").append(toIndentedString(lastPaymentDate)).append("\n");
    sb.append("    statementCloseBalance: ").append(toIndentedString(statementCloseBalance)).append("\n");
    sb.append("    termOfMl: ").append(toIndentedString(termOfMl)).append("\n");
    sb.append("    mlHolderName: ").append(toIndentedString(mlHolderName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lateFeeAmount: ").append(toIndentedString(lateFeeAmount)).append("\n");
    sb.append("    payoffAmount: ").append(toIndentedString(payoffAmount)).append("\n");
    sb.append("    payoffAmountDate: ").append(toIndentedString(payoffAmountDate)).append("\n");
    sb.append("    originalMaturityDate: ").append(toIndentedString(originalMaturityDate)).append("\n");
    sb.append("    principalBalance: ").append(toIndentedString(principalBalance)).append("\n");
    sb.append("    escrowBalance: ").append(toIndentedString(escrowBalance)).append("\n");
    sb.append("    interestPeriod: ").append(toIndentedString(interestPeriod)).append("\n");
    sb.append("    initialMlAmount: ").append(toIndentedString(initialMlAmount)).append("\n");
    sb.append("    initialMlDate: ").append(toIndentedString(initialMlDate)).append("\n");
    sb.append("    nextPaymentPrincipalAmount: ").append(toIndentedString(nextPaymentPrincipalAmount)).append("\n");
    sb.append("    nextPaymentInterestAmount: ").append(toIndentedString(nextPaymentInterestAmount)).append("\n");
    sb.append("    nextPayment: ").append(toIndentedString(nextPayment)).append("\n");
    sb.append("    nextPaymentDate: ").append(toIndentedString(nextPaymentDate)).append("\n");
    sb.append("    lastPaymentDueDate: ").append(toIndentedString(lastPaymentDueDate)).append("\n");
    sb.append("    lastPaymentReceiveDate: ").append(toIndentedString(lastPaymentReceiveDate)).append("\n");
    sb.append("    lastPaymentPrincipalAmount: ").append(toIndentedString(lastPaymentPrincipalAmount)).append("\n");
    sb.append("    lastPaymentInterestAmount: ").append(toIndentedString(lastPaymentInterestAmount)).append("\n");
    sb.append("    lastPaymentEscrowAmount: ").append(toIndentedString(lastPaymentEscrowAmount)).append("\n");
    sb.append("    lastPaymentLastFeeAmount: ").append(toIndentedString(lastPaymentLastFeeAmount)).append("\n");
    sb.append("    lastPaymentLateCharge: ").append(toIndentedString(lastPaymentLateCharge)).append("\n");
    sb.append("    ytdPrincipalPaid: ").append(toIndentedString(ytdPrincipalPaid)).append("\n");
    sb.append("    ytdInterestPaid: ").append(toIndentedString(ytdInterestPaid)).append("\n");
    sb.append("    ytdInsurancePaid: ").append(toIndentedString(ytdInsurancePaid)).append("\n");
    sb.append("    ytdTaxPaid: ").append(toIndentedString(ytdTaxPaid)).append("\n");
    sb.append("    autoPayEnrolled: ").append(toIndentedString(autoPayEnrolled)).append("\n");
    sb.append("    marginAllowed: ").append(toIndentedString(marginAllowed)).append("\n");
    sb.append("    cashAccountAllowed: ").append(toIndentedString(cashAccountAllowed)).append("\n");
    sb.append("    collateral: ").append(toIndentedString(collateral)).append("\n");
    sb.append("    currentSchool: ").append(toIndentedString(currentSchool)).append("\n");
    sb.append("    firstPaymentDate: ").append(toIndentedString(firstPaymentDate)).append("\n");
    sb.append("    firstMortgage: ").append(toIndentedString(firstMortgage)).append("\n");
    sb.append("    loanPaymentFreq: ").append(toIndentedString(loanPaymentFreq)).append("\n");
    sb.append("    originalSchool: ").append(toIndentedString(originalSchool)).append("\n");
    sb.append("    recurringPaymentAmount: ").append(toIndentedString(recurringPaymentAmount)).append("\n");
    sb.append("    lender: ").append(toIndentedString(lender)).append("\n");
    sb.append("    endingBalanceAmount: ").append(toIndentedString(endingBalanceAmount)).append("\n");
    sb.append("    loanTermType: ").append(toIndentedString(loanTermType)).append("\n");
    sb.append("    paymentsMade: ").append(toIndentedString(paymentsMade)).append("\n");
    sb.append("    balloonAmount: ").append(toIndentedString(balloonAmount)).append("\n");
    sb.append("    projectedInterest: ").append(toIndentedString(projectedInterest)).append("\n");
    sb.append("    interestPaidLtd: ").append(toIndentedString(interestPaidLtd)).append("\n");
    sb.append("    interestRateType: ").append(toIndentedString(interestRateType)).append("\n");
    sb.append("    loanPaymentType: ").append(toIndentedString(loanPaymentType)).append("\n");
    sb.append("    repaymentPlan: ").append(toIndentedString(repaymentPlan)).append("\n");
    sb.append("    paymentsRemaining: ").append(toIndentedString(paymentsRemaining)).append("\n");
    sb.append("    marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
    sb.append("    shortBalance: ").append(toIndentedString(shortBalance)).append("\n");
    sb.append("    availableCashBalance: ").append(toIndentedString(availableCashBalance)).append("\n");
    sb.append("    maturityValueAmount: ").append(toIndentedString(maturityValueAmount)).append("\n");
    sb.append("    vestedBalance: ").append(toIndentedString(vestedBalance)).append("\n");
    sb.append("    empMatchAmount: ").append(toIndentedString(empMatchAmount)).append("\n");
    sb.append("    empPretaxContribAmount: ").append(toIndentedString(empPretaxContribAmount)).append("\n");
    sb.append("    empPretaxContribAmountYtd: ").append(toIndentedString(empPretaxContribAmountYtd)).append("\n");
    sb.append("    contribTotalYtd: ").append(toIndentedString(contribTotalYtd)).append("\n");
    sb.append("    cashBalanceAmount: ").append(toIndentedString(cashBalanceAmount)).append("\n");
    sb.append("    preTaxAmount: ").append(toIndentedString(preTaxAmount)).append("\n");
    sb.append("    afterTaxAmount: ").append(toIndentedString(afterTaxAmount)).append("\n");
    sb.append("    matchAmount: ").append(toIndentedString(matchAmount)).append("\n");
    sb.append("    profitSharingAmount: ").append(toIndentedString(profitSharingAmount)).append("\n");
    sb.append("    rolloverAmount: ").append(toIndentedString(rolloverAmount)).append("\n");
    sb.append("    otherVestAmount: ").append(toIndentedString(otherVestAmount)).append("\n");
    sb.append("    otherNonvestAmount: ").append(toIndentedString(otherNonvestAmount)).append("\n");
    sb.append("    currentLoanBalance: ").append(toIndentedString(currentLoanBalance)).append("\n");
    sb.append("    loanRate: ").append(toIndentedString(loanRate)).append("\n");
    sb.append("    buyPower: ").append(toIndentedString(buyPower)).append("\n");
    sb.append("    rolloverLtd: ").append(toIndentedString(rolloverLtd)).append("\n");
    sb.append("    loanAwardId: ").append(toIndentedString(loanAwardId)).append("\n");
    sb.append("    originalInterestRate: ").append(toIndentedString(originalInterestRate)).append("\n");
    sb.append("    guarantor: ").append(toIndentedString(guarantor)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    interestSubsidyType: ").append(toIndentedString(interestSubsidyType)).append("\n");
    sb.append("    interestBalance: ").append(toIndentedString(interestBalance)).append("\n");
    sb.append("    remainingTermOfMl: ").append(toIndentedString(remainingTermOfMl)).append("\n");
    sb.append("    initialInterestRate: ").append(toIndentedString(initialInterestRate)).append("\n");
    sb.append("    feesBalance: ").append(toIndentedString(feesBalance)).append("\n");
    sb.append("    loanYtdInterestPaid: ").append(toIndentedString(loanYtdInterestPaid)).append("\n");
    sb.append("    loanYtdFeesPaid: ").append(toIndentedString(loanYtdFeesPaid)).append("\n");
    sb.append("    loanYtdPrincipalPaid: ").append(toIndentedString(loanYtdPrincipalPaid)).append("\n");
    sb.append("    loanStatus: ").append(toIndentedString(loanStatus)).append("\n");
    sb.append("    loanStatusStartDate: ").append(toIndentedString(loanStatusStartDate)).append("\n");
    sb.append("    loanStatusEndDate: ").append(toIndentedString(loanStatusEndDate)).append("\n");
    sb.append("    weightedInterestRate: ").append(toIndentedString(weightedInterestRate)).append("\n");
    sb.append("    repaymentPlanStartDate: ").append(toIndentedString(repaymentPlanStartDate)).append("\n");
    sb.append("    repaymentPlanEndDate: ").append(toIndentedString(repaymentPlanEndDate)).append("\n");
    sb.append("    expectedPayoffDate: ").append(toIndentedString(expectedPayoffDate)).append("\n");
    sb.append("    outOfSchoolDate: ").append(toIndentedString(outOfSchoolDate)).append("\n");
    sb.append("    convertToRepayment: ").append(toIndentedString(convertToRepayment)).append("\n");
    sb.append("    daysDelinquent: ").append(toIndentedString(daysDelinquent)).append("\n");
    sb.append("    totalPrincipalPaid: ").append(toIndentedString(totalPrincipalPaid)).append("\n");
    sb.append("    totalInterestPaid: ").append(toIndentedString(totalInterestPaid)).append("\n");
    sb.append("    totalAmountPaid: ").append(toIndentedString(totalAmountPaid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

