/*
 * CRM Cotización
 * CRM Cotización
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ContactSchemaDTO;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BodyCreateContactSchemaApiV1ContactsSchemaPost
 */
@JsonPropertyOrder({
  BodyCreateContactSchemaApiV1ContactsSchemaPost.JSON_PROPERTY_CONTACT_SCHEMA,
  BodyCreateContactSchemaApiV1ContactsSchemaPost.JSON_PROPERTY_ORGANIZATION_ID
})
@JsonTypeName("Body_create_contact_schema_api_v1_contacts_schema_post")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:21.037021681Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class BodyCreateContactSchemaApiV1ContactsSchemaPost {
  public static final String JSON_PROPERTY_CONTACT_SCHEMA = "contact_schema";
  private ContactSchemaDTO contactSchema;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organizationId";
  private String organizationId;

  public BodyCreateContactSchemaApiV1ContactsSchemaPost() {
  }

  public BodyCreateContactSchemaApiV1ContactsSchemaPost contactSchema(ContactSchemaDTO contactSchema) {
    
    this.contactSchema = contactSchema;
    return this;
  }

   /**
   * Get contactSchema
   * @return contactSchema
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTACT_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ContactSchemaDTO getContactSchema() {
    return contactSchema;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactSchema(ContactSchemaDTO contactSchema) {
    this.contactSchema = contactSchema;
  }


  public BodyCreateContactSchemaApiV1ContactsSchemaPost organizationId(String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyCreateContactSchemaApiV1ContactsSchemaPost bodyCreateContactSchemaApiV1ContactsSchemaPost = (BodyCreateContactSchemaApiV1ContactsSchemaPost) o;
    return Objects.equals(this.contactSchema, bodyCreateContactSchemaApiV1ContactsSchemaPost.contactSchema) &&
        Objects.equals(this.organizationId, bodyCreateContactSchemaApiV1ContactsSchemaPost.organizationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactSchema, organizationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyCreateContactSchemaApiV1ContactsSchemaPost {\n");
    sb.append("    contactSchema: ").append(toIndentedString(contactSchema)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

