/*
 * kf+ - K@rl Schnittstellenspezifikation
 * kita finder+ - K@rl Schnittstellenspezifikation für die Übertragung von  Ereignissen aus dem Antragsmodul
 *
 * The version of the OpenAPI document: 11
 * Contact: itm.km23@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AntragErmMitBelegenGeschwisterkinderInner;
import org.openapitools.client.model.Unterlagenstatus;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AntragErmMitBelegen
 */
@JsonPropertyOrder({
  AntragErmMitBelegen.JSON_PROPERTY_ZEITRAUM_VON,
  AntragErmMitBelegen.JSON_PROPERTY_BERECHNUNGSART_BESUCH,
  AntragErmMitBelegen.JSON_PROPERTY_BERECHNUNGSART_VERPFLEGUNG,
  AntragErmMitBelegen.JSON_PROPERTY_EINKOMMEN_IN_CENT,
  AntragErmMitBelegen.JSON_PROPERTY_EINKOMMENSJAHR,
  AntragErmMitBelegen.JSON_PROPERTY_UNTERLAGENSTATUS,
  AntragErmMitBelegen.JSON_PROPERTY_BEMERKUNG,
  AntragErmMitBelegen.JSON_PROPERTY_KENNZEICHEN_INDIVIDUELLE_FESTSETZUNG,
  AntragErmMitBelegen.JSON_PROPERTY_GESCHWISTERKINDER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:41.833762886Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AntragErmMitBelegen {
  public static final String JSON_PROPERTY_ZEITRAUM_VON = "zeitraum_von";
  private String zeitraumVon;

  public static final String JSON_PROPERTY_BERECHNUNGSART_BESUCH = "berechnungsart_besuch";
  private String berechnungsartBesuch;

  public static final String JSON_PROPERTY_BERECHNUNGSART_VERPFLEGUNG = "berechnungsart_verpflegung";
  private String berechnungsartVerpflegung;

  public static final String JSON_PROPERTY_EINKOMMEN_IN_CENT = "einkommenInCent";
  private Integer einkommenInCent;

  public static final String JSON_PROPERTY_EINKOMMENSJAHR = "einkommensjahr";
  private String einkommensjahr;

  public static final String JSON_PROPERTY_UNTERLAGENSTATUS = "unterlagenstatus";
  private Unterlagenstatus unterlagenstatus;

  public static final String JSON_PROPERTY_BEMERKUNG = "bemerkung";
  private String bemerkung;

  public static final String JSON_PROPERTY_KENNZEICHEN_INDIVIDUELLE_FESTSETZUNG = "kennzeichen_individuelle_festsetzung";
  private Boolean kennzeichenIndividuelleFestsetzung;

  public static final String JSON_PROPERTY_GESCHWISTERKINDER = "geschwisterkinder";
  private List<AntragErmMitBelegenGeschwisterkinderInner> geschwisterkinder;

  public AntragErmMitBelegen() {
  }

  public AntragErmMitBelegen zeitraumVon(String zeitraumVon) {
    
    this.zeitraumVon = zeitraumVon;
    return this;
  }

   /**
   * Wenn Standardantrag oder Folgeantrag, dann 1.9. des aktuellen Einrichungsjahres Datumseingabe der Eltern
   * @return zeitraumVon
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ZEITRAUM_VON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getZeitraumVon() {
    return zeitraumVon;
  }


  @JsonProperty(JSON_PROPERTY_ZEITRAUM_VON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZeitraumVon(String zeitraumVon) {
    this.zeitraumVon = zeitraumVon;
  }


  public AntragErmMitBelegen berechnungsartBesuch(String berechnungsartBesuch) {
    
    this.berechnungsartBesuch = berechnungsartBesuch;
    return this;
  }

   /**
   * Arten der Berechnung der Besuchsgebühren. Werden von K@RL definiert und müssen im Antragsmodul konfigurierbar hinterlegt werden können.
   * @return berechnungsartBesuch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BERECHNUNGSART_BESUCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBerechnungsartBesuch() {
    return berechnungsartBesuch;
  }


  @JsonProperty(JSON_PROPERTY_BERECHNUNGSART_BESUCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBerechnungsartBesuch(String berechnungsartBesuch) {
    this.berechnungsartBesuch = berechnungsartBesuch;
  }


  public AntragErmMitBelegen berechnungsartVerpflegung(String berechnungsartVerpflegung) {
    
    this.berechnungsartVerpflegung = berechnungsartVerpflegung;
    return this;
  }

   /**
   * Arten der Berechnung der Verpflegungsgebühren. Werden von K@RL definiert und müssen im Antragsmodul konfigurierbar hinterlegt werden können.
   * @return berechnungsartVerpflegung
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BERECHNUNGSART_VERPFLEGUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBerechnungsartVerpflegung() {
    return berechnungsartVerpflegung;
  }


  @JsonProperty(JSON_PROPERTY_BERECHNUNGSART_VERPFLEGUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBerechnungsartVerpflegung(String berechnungsartVerpflegung) {
    this.berechnungsartVerpflegung = berechnungsartVerpflegung;
  }


  public AntragErmMitBelegen einkommenInCent(Integer einkommenInCent) {
    
    this.einkommenInCent = einkommenInCent;
    return this;
  }

   /**
   * Einkommenshöhe, anhand dessen die Gebührenhöhe in K@RL berechnet wird.
   * @return einkommenInCent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EINKOMMEN_IN_CENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEinkommenInCent() {
    return einkommenInCent;
  }


  @JsonProperty(JSON_PROPERTY_EINKOMMEN_IN_CENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEinkommenInCent(Integer einkommenInCent) {
    this.einkommenInCent = einkommenInCent;
  }


  public AntragErmMitBelegen einkommensjahr(String einkommensjahr) {
    
    this.einkommensjahr = einkommensjahr;
    return this;
  }

   /**
   * vom SB je nach Antragsart, bei Ermäßigung aufgrund des Einkommens das Kalendervorvorjahr, bei Sozialleistungen das aktuelle Einrichtungsjahr
   * @return einkommensjahr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EINKOMMENSJAHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEinkommensjahr() {
    return einkommensjahr;
  }


  @JsonProperty(JSON_PROPERTY_EINKOMMENSJAHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEinkommensjahr(String einkommensjahr) {
    this.einkommensjahr = einkommensjahr;
  }


  public AntragErmMitBelegen unterlagenstatus(Unterlagenstatus unterlagenstatus) {
    
    this.unterlagenstatus = unterlagenstatus;
    return this;
  }

   /**
   * Get unterlagenstatus
   * @return unterlagenstatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNTERLAGENSTATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Unterlagenstatus getUnterlagenstatus() {
    return unterlagenstatus;
  }


  @JsonProperty(JSON_PROPERTY_UNTERLAGENSTATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnterlagenstatus(Unterlagenstatus unterlagenstatus) {
    this.unterlagenstatus = unterlagenstatus;
  }


  public AntragErmMitBelegen bemerkung(String bemerkung) {
    
    this.bemerkung = bemerkung;
    return this;
  }

   /**
   * Get bemerkung
   * @return bemerkung
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEMERKUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBemerkung() {
    return bemerkung;
  }


  @JsonProperty(JSON_PROPERTY_BEMERKUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBemerkung(String bemerkung) {
    this.bemerkung = bemerkung;
  }


  public AntragErmMitBelegen kennzeichenIndividuelleFestsetzung(Boolean kennzeichenIndividuelleFestsetzung) {
    
    this.kennzeichenIndividuelleFestsetzung = kennzeichenIndividuelleFestsetzung;
    return this;
  }

   /**
   * false - automatisch, true - individuelle Festsetzung durch SB in K@RL
   * @return kennzeichenIndividuelleFestsetzung
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KENNZEICHEN_INDIVIDUELLE_FESTSETZUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getKennzeichenIndividuelleFestsetzung() {
    return kennzeichenIndividuelleFestsetzung;
  }


  @JsonProperty(JSON_PROPERTY_KENNZEICHEN_INDIVIDUELLE_FESTSETZUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKennzeichenIndividuelleFestsetzung(Boolean kennzeichenIndividuelleFestsetzung) {
    this.kennzeichenIndividuelleFestsetzung = kennzeichenIndividuelleFestsetzung;
  }


  public AntragErmMitBelegen geschwisterkinder(List<AntragErmMitBelegenGeschwisterkinderInner> geschwisterkinder) {
    
    this.geschwisterkinder = geschwisterkinder;
    return this;
  }

  public AntragErmMitBelegen addGeschwisterkinderItem(AntragErmMitBelegenGeschwisterkinderInner geschwisterkinderItem) {
    if (this.geschwisterkinder == null) {
      this.geschwisterkinder = new ArrayList<>();
    }
    this.geschwisterkinder.add(geschwisterkinderItem);
    return this;
  }

   /**
   * Pflicht bei Antrag auf Geschwisterermäßigung
   * @return geschwisterkinder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GESCHWISTERKINDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AntragErmMitBelegenGeschwisterkinderInner> getGeschwisterkinder() {
    return geschwisterkinder;
  }


  @JsonProperty(JSON_PROPERTY_GESCHWISTERKINDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeschwisterkinder(List<AntragErmMitBelegenGeschwisterkinderInner> geschwisterkinder) {
    this.geschwisterkinder = geschwisterkinder;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AntragErmMitBelegen antragErmMitBelegen = (AntragErmMitBelegen) o;
    return Objects.equals(this.zeitraumVon, antragErmMitBelegen.zeitraumVon) &&
        Objects.equals(this.berechnungsartBesuch, antragErmMitBelegen.berechnungsartBesuch) &&
        Objects.equals(this.berechnungsartVerpflegung, antragErmMitBelegen.berechnungsartVerpflegung) &&
        Objects.equals(this.einkommenInCent, antragErmMitBelegen.einkommenInCent) &&
        Objects.equals(this.einkommensjahr, antragErmMitBelegen.einkommensjahr) &&
        Objects.equals(this.unterlagenstatus, antragErmMitBelegen.unterlagenstatus) &&
        Objects.equals(this.bemerkung, antragErmMitBelegen.bemerkung) &&
        Objects.equals(this.kennzeichenIndividuelleFestsetzung, antragErmMitBelegen.kennzeichenIndividuelleFestsetzung) &&
        Objects.equals(this.geschwisterkinder, antragErmMitBelegen.geschwisterkinder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zeitraumVon, berechnungsartBesuch, berechnungsartVerpflegung, einkommenInCent, einkommensjahr, unterlagenstatus, bemerkung, kennzeichenIndividuelleFestsetzung, geschwisterkinder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AntragErmMitBelegen {\n");
    sb.append("    zeitraumVon: ").append(toIndentedString(zeitraumVon)).append("\n");
    sb.append("    berechnungsartBesuch: ").append(toIndentedString(berechnungsartBesuch)).append("\n");
    sb.append("    berechnungsartVerpflegung: ").append(toIndentedString(berechnungsartVerpflegung)).append("\n");
    sb.append("    einkommenInCent: ").append(toIndentedString(einkommenInCent)).append("\n");
    sb.append("    einkommensjahr: ").append(toIndentedString(einkommensjahr)).append("\n");
    sb.append("    unterlagenstatus: ").append(toIndentedString(unterlagenstatus)).append("\n");
    sb.append("    bemerkung: ").append(toIndentedString(bemerkung)).append("\n");
    sb.append("    kennzeichenIndividuelleFestsetzung: ").append(toIndentedString(kennzeichenIndividuelleFestsetzung)).append("\n");
    sb.append("    geschwisterkinder: ").append(toIndentedString(geschwisterkinder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

