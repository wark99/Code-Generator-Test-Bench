/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Addresses2;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StandardizedAddresses
 */
@JsonPropertyOrder({
  StandardizedAddresses.JSON_PROPERTY_STANDARDIZED_ADDRESSES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StandardizedAddresses {
  public static final String JSON_PROPERTY_STANDARDIZED_ADDRESSES = "standardizedAddresses";
  private List<Addresses2> standardizedAddresses;

  public StandardizedAddresses() {
  }

  public StandardizedAddresses standardizedAddresses(List<Addresses2> standardizedAddresses) {
    
    this.standardizedAddresses = standardizedAddresses;
    return this;
  }

  public StandardizedAddresses addStandardizedAddressesItem(Addresses2 standardizedAddressesItem) {
    if (this.standardizedAddresses == null) {
      this.standardizedAddresses = new ArrayList<>();
    }
    this.standardizedAddresses.add(standardizedAddressesItem);
    return this;
  }

   /**
   * Get standardizedAddresses
   * @return standardizedAddresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STANDARDIZED_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Addresses2> getStandardizedAddresses() {
    return standardizedAddresses;
  }


  @JsonProperty(JSON_PROPERTY_STANDARDIZED_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandardizedAddresses(List<Addresses2> standardizedAddresses) {
    this.standardizedAddresses = standardizedAddresses;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardizedAddresses standardizedAddresses = (StandardizedAddresses) o;
    return Objects.equals(this.standardizedAddresses, standardizedAddresses.standardizedAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(standardizedAddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardizedAddresses {\n");
    sb.append("    standardizedAddresses: ").append(toIndentedString(standardizedAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

