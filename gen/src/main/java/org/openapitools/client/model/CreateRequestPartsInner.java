/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateRequestPartsInner
 */
@JsonPropertyOrder({
  CreateRequestPartsInner.JSON_PROPERTY_BRAND,
  CreateRequestPartsInner.JSON_PROPERTY_PART_NUMBER,
  CreateRequestPartsInner.JSON_PROPERTY_DESCRIPTION,
  CreateRequestPartsInner.JSON_PROPERTY_QUANTITY,
  CreateRequestPartsInner.JSON_PROPERTY_COST_EACH,
  CreateRequestPartsInner.JSON_PROPERTY_HAS_CORE,
  CreateRequestPartsInner.JSON_PROPERTY_CORE_COST_EACH,
  CreateRequestPartsInner.JSON_PROPERTY_SUPPLIER
})
@JsonTypeName("CreateRequest_parts_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateRequestPartsInner {
  public static final String JSON_PROPERTY_BRAND = "brand";
  private String brand;

  public static final String JSON_PROPERTY_PART_NUMBER = "partNumber";
  private String partNumber;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_COST_EACH = "costEach";
  private BigDecimal costEach;

  public static final String JSON_PROPERTY_HAS_CORE = "hasCore";
  private Boolean hasCore;

  public static final String JSON_PROPERTY_CORE_COST_EACH = "coreCostEach";
  private BigDecimal coreCostEach;

  public static final String JSON_PROPERTY_SUPPLIER = "supplier";
  private String supplier;

  public CreateRequestPartsInner() {
  }

  public CreateRequestPartsInner brand(String brand) {
    
    this.brand = brand;
    return this;
  }

   /**
   * Brand of part manufacturer not the brand of the unit. Sometimes they are the same and sometimes they are different.
   * @return brand
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBrand() {
    return brand;
  }


  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrand(String brand) {
    this.brand = brand;
  }


  public CreateRequestPartsInner partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartNumber() {
    return partNumber;
  }


  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public CreateRequestPartsInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateRequestPartsInner quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public CreateRequestPartsInner costEach(BigDecimal costEach) {
    
    this.costEach = costEach;
    return this;
  }

   /**
   * Get costEach
   * @return costEach
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCostEach() {
    return costEach;
  }


  @JsonProperty(JSON_PROPERTY_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCostEach(BigDecimal costEach) {
    this.costEach = costEach;
  }


  public CreateRequestPartsInner hasCore(Boolean hasCore) {
    
    this.hasCore = hasCore;
    return this;
  }

   /**
   * Get hasCore
   * @return hasCore
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HAS_CORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHasCore() {
    return hasCore;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHasCore(Boolean hasCore) {
    this.hasCore = hasCore;
  }


  public CreateRequestPartsInner coreCostEach(BigDecimal coreCostEach) {
    
    this.coreCostEach = coreCostEach;
    return this;
  }

   /**
   * Get coreCostEach
   * @return coreCostEach
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CORE_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCoreCostEach() {
    return coreCostEach;
  }


  @JsonProperty(JSON_PROPERTY_CORE_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoreCostEach(BigDecimal coreCostEach) {
    this.coreCostEach = coreCostEach;
  }


  public CreateRequestPartsInner supplier(String supplier) {
    
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSupplier() {
    return supplier;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSupplier(String supplier) {
    this.supplier = supplier;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRequestPartsInner createRequestPartsInner = (CreateRequestPartsInner) o;
    return Objects.equals(this.brand, createRequestPartsInner.brand) &&
        Objects.equals(this.partNumber, createRequestPartsInner.partNumber) &&
        Objects.equals(this.description, createRequestPartsInner.description) &&
        Objects.equals(this.quantity, createRequestPartsInner.quantity) &&
        Objects.equals(this.costEach, createRequestPartsInner.costEach) &&
        Objects.equals(this.hasCore, createRequestPartsInner.hasCore) &&
        Objects.equals(this.coreCostEach, createRequestPartsInner.coreCostEach) &&
        Objects.equals(this.supplier, createRequestPartsInner.supplier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brand, partNumber, description, quantity, costEach, hasCore, coreCostEach, supplier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRequestPartsInner {\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    costEach: ").append(toIndentedString(costEach)).append("\n");
    sb.append("    hasCore: ").append(toIndentedString(hasCore)).append("\n");
    sb.append("    coreCostEach: ").append(toIndentedString(coreCostEach)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

