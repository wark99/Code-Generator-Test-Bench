/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountOwnerAddress;
import org.openapitools.client.model.AccountOwnerDocumentation;
import org.openapitools.client.model.AccountOwnerEmail;
import org.openapitools.client.model.AccountOwnerIdentityInsights;
import org.openapitools.client.model.AccountOwnerPhone;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Owner of a customer account
 */
@JsonPropertyOrder({
  AccountOwnerDetails.JSON_PROPERTY_RELATIONSHIP,
  AccountOwnerDetails.JSON_PROPERTY_OWNER_NAME,
  AccountOwnerDetails.JSON_PROPERTY_FIRST_NAME,
  AccountOwnerDetails.JSON_PROPERTY_MIDDLE_NAME,
  AccountOwnerDetails.JSON_PROPERTY_LAST_NAME,
  AccountOwnerDetails.JSON_PROPERTY_SUFFIX,
  AccountOwnerDetails.JSON_PROPERTY_NAME_CLASSIFICATION,
  AccountOwnerDetails.JSON_PROPERTY_NAME_CLASSIFICATIONCONFIDENCESCORE,
  AccountOwnerDetails.JSON_PROPERTY_ADDRESSES,
  AccountOwnerDetails.JSON_PROPERTY_EMAILS,
  AccountOwnerDetails.JSON_PROPERTY_PHONES,
  AccountOwnerDetails.JSON_PROPERTY_DOCUMENTATIONS,
  AccountOwnerDetails.JSON_PROPERTY_IDENTITY_INSIGHTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountOwnerDetails {
  public static final String JSON_PROPERTY_RELATIONSHIP = "relationship";
  private String relationship;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public static final String JSON_PROPERTY_NAME_CLASSIFICATION = "nameClassification";
  private String nameClassification;

  public static final String JSON_PROPERTY_NAME_CLASSIFICATIONCONFIDENCESCORE = "nameClassificationconfidencescore";
  private BigDecimal nameClassificationconfidencescore;

  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<AccountOwnerAddress> addresses;

  public static final String JSON_PROPERTY_EMAILS = "emails";
  private List<AccountOwnerEmail> emails;

  public static final String JSON_PROPERTY_PHONES = "phones";
  private List<AccountOwnerPhone> phones;

  public static final String JSON_PROPERTY_DOCUMENTATIONS = "documentations";
  private List<AccountOwnerDocumentation> documentations;

  public static final String JSON_PROPERTY_IDENTITY_INSIGHTS = "identityInsights";
  private AccountOwnerIdentityInsights identityInsights;

  public AccountOwnerDetails() {
  }

  public AccountOwnerDetails relationship(String relationship) {
    
    this.relationship = relationship;
    return this;
  }

   /**
   * The type of relationship to the account: * \&quot;AUTHORIZED_USER\&quot;  * \&quot;BUSINESS\&quot;  * \&quot;FOR_BENEFIT_OF_PRIMARY\&quot;  * \&quot;FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED\&quot;  * \&quot;FOR_BENEFIT_OF_SECONDARY\&quot;  * \&quot;FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED\&quot;  * \&quot;FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED\&quot;  * \&quot;POWER_OF_ATTORNEY\&quot;  * \&quot;PRIMARY_JOINT_TENANTS\&quot;  * \&quot;PRIMARY\&quot;  * \&quot;PRIMARY_BORROWER\&quot;  * \&quot;PRIMARY_JOINT\&quot;  * \&quot;SECONDARY\&quot;  * \&quot;SECONDARY_JOINT_TENANTS\&quot;  * \&quot;SECONDARY_BORROWER\&quot;  * \&quot;SECONDARY_JOINT\&quot;  * \&quot;SOLE_OWNER\&quot;  * \&quot;TRUSTEE\&quot;  * \&quot;UNIFORM_TRANSFER_TO_MINOR\&quot;
   * @return relationship
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRelationship() {
    return relationship;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationship(String relationship) {
    this.relationship = relationship;
  }


  public AccountOwnerDetails ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * The full name of the account owner. Multiple account owners are returned in one string per the source data from the institution.
   * @return ownerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public AccountOwnerDetails firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the account holder
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public AccountOwnerDetails middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * The middle name of the account holder
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public AccountOwnerDetails lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the account holder
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public AccountOwnerDetails suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

   /**
   * A generational or academic suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public AccountOwnerDetails nameClassification(String nameClassification) {
    
    this.nameClassification = nameClassification;
    return this;
  }

   /**
   * The classification of the account holder: * \&quot;person / personal / home\&quot; * \&quot;business\&quot; * \&quot;other\&quot;
   * @return nameClassification
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNameClassification() {
    return nameClassification;
  }


  @JsonProperty(JSON_PROPERTY_NAME_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNameClassification(String nameClassification) {
    this.nameClassification = nameClassification;
  }


  public AccountOwnerDetails nameClassificationconfidencescore(BigDecimal nameClassificationconfidencescore) {
    
    this.nameClassificationconfidencescore = nameClassificationconfidencescore;
    return this;
  }

   /**
   * The confidence score 0 â€“ 1.0 of the name classification.
   * minimum: 0
   * maximum: 1.0
   * @return nameClassificationconfidencescore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME_CLASSIFICATIONCONFIDENCESCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNameClassificationconfidencescore() {
    return nameClassificationconfidencescore;
  }


  @JsonProperty(JSON_PROPERTY_NAME_CLASSIFICATIONCONFIDENCESCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNameClassificationconfidencescore(BigDecimal nameClassificationconfidencescore) {
    this.nameClassificationconfidencescore = nameClassificationconfidencescore;
  }


  public AccountOwnerDetails addresses(List<AccountOwnerAddress> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public AccountOwnerDetails addAddressesItem(AccountOwnerAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * List of addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerAddress> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<AccountOwnerAddress> addresses) {
    this.addresses = addresses;
  }


  public AccountOwnerDetails emails(List<AccountOwnerEmail> emails) {
    
    this.emails = emails;
    return this;
  }

  public AccountOwnerDetails addEmailsItem(AccountOwnerEmail emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * List of emails
   * @return emails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerEmail> getEmails() {
    return emails;
  }


  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmails(List<AccountOwnerEmail> emails) {
    this.emails = emails;
  }


  public AccountOwnerDetails phones(List<AccountOwnerPhone> phones) {
    
    this.phones = phones;
    return this;
  }

  public AccountOwnerDetails addPhonesItem(AccountOwnerPhone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * List of phones
   * @return phones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerPhone> getPhones() {
    return phones;
  }


  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhones(List<AccountOwnerPhone> phones) {
    this.phones = phones;
  }


  public AccountOwnerDetails documentations(List<AccountOwnerDocumentation> documentations) {
    
    this.documentations = documentations;
    return this;
  }

  public AccountOwnerDetails addDocumentationsItem(AccountOwnerDocumentation documentationsItem) {
    if (this.documentations == null) {
      this.documentations = new ArrayList<>();
    }
    this.documentations.add(documentationsItem);
    return this;
  }

   /**
   * List of account owner documentation
   * @return documentations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerDocumentation> getDocumentations() {
    return documentations;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentations(List<AccountOwnerDocumentation> documentations) {
    this.documentations = documentations;
  }


  public AccountOwnerDetails identityInsights(AccountOwnerIdentityInsights identityInsights) {
    
    this.identityInsights = identityInsights;
    return this;
  }

   /**
   * Get identityInsights
   * @return identityInsights
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTITY_INSIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountOwnerIdentityInsights getIdentityInsights() {
    return identityInsights;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_INSIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentityInsights(AccountOwnerIdentityInsights identityInsights) {
    this.identityInsights = identityInsights;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountOwnerDetails accountOwnerDetails = (AccountOwnerDetails) o;
    return Objects.equals(this.relationship, accountOwnerDetails.relationship) &&
        Objects.equals(this.ownerName, accountOwnerDetails.ownerName) &&
        Objects.equals(this.firstName, accountOwnerDetails.firstName) &&
        Objects.equals(this.middleName, accountOwnerDetails.middleName) &&
        Objects.equals(this.lastName, accountOwnerDetails.lastName) &&
        Objects.equals(this.suffix, accountOwnerDetails.suffix) &&
        Objects.equals(this.nameClassification, accountOwnerDetails.nameClassification) &&
        Objects.equals(this.nameClassificationconfidencescore, accountOwnerDetails.nameClassificationconfidencescore) &&
        Objects.equals(this.addresses, accountOwnerDetails.addresses) &&
        Objects.equals(this.emails, accountOwnerDetails.emails) &&
        Objects.equals(this.phones, accountOwnerDetails.phones) &&
        Objects.equals(this.documentations, accountOwnerDetails.documentations) &&
        Objects.equals(this.identityInsights, accountOwnerDetails.identityInsights);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relationship, ownerName, firstName, middleName, lastName, suffix, nameClassification, nameClassificationconfidencescore, addresses, emails, phones, documentations, identityInsights);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountOwnerDetails {\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    nameClassification: ").append(toIndentedString(nameClassification)).append("\n");
    sb.append("    nameClassificationconfidencescore: ").append(toIndentedString(nameClassificationconfidencescore)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    documentations: ").append(toIndentedString(documentations)).append("\n");
    sb.append("    identityInsights: ").append(toIndentedString(identityInsights)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

