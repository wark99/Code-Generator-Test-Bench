/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountAddressYodlee;
import org.openapitools.client.model.EmailYodlee;
import org.openapitools.client.model.IdentifierYodlee;
import org.openapitools.client.model.PhoneNumberYodlee;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountProfileYodlee
 */
@JsonPropertyOrder({
  AccountProfileYodlee.JSON_PROPERTY_IDENTIFIER,
  AccountProfileYodlee.JSON_PROPERTY_ADDRESS,
  AccountProfileYodlee.JSON_PROPERTY_PHONE_NUMBER,
  AccountProfileYodlee.JSON_PROPERTY_EMAIL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountProfileYodlee {
  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private List<IdentifierYodlee> identifier;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private List<AccountAddressYodlee> address;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private List<PhoneNumberYodlee> phoneNumber;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private List<EmailYodlee> email;

  public AccountProfileYodlee() {
  }

  public AccountProfileYodlee identifier(List<IdentifierYodlee> identifier) {
    
    this.identifier = identifier;
    return this;
  }

  public AccountProfileYodlee addIdentifierItem(IdentifierYodlee identifierItem) {
    if (this.identifier == null) {
      this.identifier = new ArrayList<>();
    }
    this.identifier.add(identifierItem);
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentifierYodlee> getIdentifier() {
    return identifier;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(List<IdentifierYodlee> identifier) {
    this.identifier = identifier;
  }


  public AccountProfileYodlee address(List<AccountAddressYodlee> address) {
    
    this.address = address;
    return this;
  }

  public AccountProfileYodlee addAddressItem(AccountAddressYodlee addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountAddressYodlee> getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(List<AccountAddressYodlee> address) {
    this.address = address;
  }


  public AccountProfileYodlee phoneNumber(List<PhoneNumberYodlee> phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  public AccountProfileYodlee addPhoneNumberItem(PhoneNumberYodlee phoneNumberItem) {
    if (this.phoneNumber == null) {
      this.phoneNumber = new ArrayList<>();
    }
    this.phoneNumber.add(phoneNumberItem);
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PhoneNumberYodlee> getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(List<PhoneNumberYodlee> phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public AccountProfileYodlee email(List<EmailYodlee> email) {
    
    this.email = email;
    return this;
  }

  public AccountProfileYodlee addEmailItem(EmailYodlee emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EmailYodlee> getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(List<EmailYodlee> email) {
    this.email = email;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountProfileYodlee accountProfileYodlee = (AccountProfileYodlee) o;
    return Objects.equals(this.identifier, accountProfileYodlee.identifier) &&
        Objects.equals(this.address, accountProfileYodlee.address) &&
        Objects.equals(this.phoneNumber, accountProfileYodlee.phoneNumber) &&
        Objects.equals(this.email, accountProfileYodlee.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, address, phoneNumber, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountProfileYodlee {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

