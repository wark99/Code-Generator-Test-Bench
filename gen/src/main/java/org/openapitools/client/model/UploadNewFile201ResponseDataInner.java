/*
 * Proxy API Adapter
 * Convert standard OpenAPI requests to Internal API s**t show, respond with normalized data and messaging
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UploadNewFile201ResponseDataInner
 */
@JsonPropertyOrder({
  UploadNewFile201ResponseDataInner.JSON_PROPERTY_FILE_NAME,
  UploadNewFile201ResponseDataInner.JSON_PROPERTY_NUID
})
@JsonTypeName("upload_new_file_201_response_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:17:03.349465965Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UploadNewFile201ResponseDataInner {
  public static final String JSON_PROPERTY_FILE_NAME = "file_name";
  private String fileName;

  public static final String JSON_PROPERTY_NUID = "nuid";
  private UUID nuid;

  public UploadNewFile201ResponseDataInner() {
  }

  public UploadNewFile201ResponseDataInner fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public UploadNewFile201ResponseDataInner nuid(UUID nuid) {
    
    this.nuid = nuid;
    return this;
  }

   /**
   * Get nuid
   * @return nuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getNuid() {
    return nuid;
  }


  @JsonProperty(JSON_PROPERTY_NUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNuid(UUID nuid) {
    this.nuid = nuid;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadNewFile201ResponseDataInner uploadNewFile201ResponseDataInner = (UploadNewFile201ResponseDataInner) o;
    return Objects.equals(this.fileName, uploadNewFile201ResponseDataInner.fileName) &&
        Objects.equals(this.nuid, uploadNewFile201ResponseDataInner.nuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileName, nuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadNewFile201ResponseDataInner {\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    nuid: ").append(toIndentedString(nuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

