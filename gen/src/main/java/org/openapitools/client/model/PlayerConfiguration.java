/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PlayerConfiguration
 */
@JsonPropertyOrder({
  PlayerConfiguration.JSON_PROPERTY_ARTIST,
  PlayerConfiguration.JSON_PROPERTY_BACKGROUND_COLOR,
  PlayerConfiguration.JSON_PROPERTY_BUTTON_COLOR,
  PlayerConfiguration.JSON_PROPERTY_COVER,
  PlayerConfiguration.JSON_PROPERTY_DATE,
  PlayerConfiguration.JSON_PROPERTY_DISPLAY_NAME,
  PlayerConfiguration.JSON_PROPERTY_FACEBOOK_LINK,
  PlayerConfiguration.JSON_PROPERTY_HEIGHT,
  PlayerConfiguration.JSON_PROPERTY_ID,
  PlayerConfiguration.JSON_PROPERTY_IS_AUTO_START,
  PlayerConfiguration.JSON_PROPERTY_IS_COVER,
  PlayerConfiguration.JSON_PROPERTY_IS_EMBED,
  PlayerConfiguration.JSON_PROPERTY_IS_FACEBOOK_EMBED,
  PlayerConfiguration.JSON_PROPERTY_IS_LISTENERS,
  PlayerConfiguration.JSON_PROPERTY_IS_LOGO_ENABLE,
  PlayerConfiguration.JSON_PROPERTY_IS_SPECTRUM,
  PlayerConfiguration.JSON_PROPERTY_IS_STATION_THUMBNAIL,
  PlayerConfiguration.JSON_PROPERTY_LANGUAGE,
  PlayerConfiguration.JSON_PROPERTY_LISTENERS,
  PlayerConfiguration.JSON_PROPERTY_LOADING,
  PlayerConfiguration.JSON_PROPERTY_RESTRICTION,
  PlayerConfiguration.JSON_PROPERTY_SECONDARY_COLOR,
  PlayerConfiguration.JSON_PROPERTY_STATIONS,
  PlayerConfiguration.JSON_PROPERTY_TIMELINE,
  PlayerConfiguration.JSON_PROPERTY_TITLE,
  PlayerConfiguration.JSON_PROPERTY_THUMBNAIL,
  PlayerConfiguration.JSON_PROPERTY_TWITTER_ACCOUNT,
  PlayerConfiguration.JSON_PROPERTY_TWITTER_BACKLINK,
  PlayerConfiguration.JSON_PROPERTY_TWITTER_HASHTAG,
  PlayerConfiguration.JSON_PROPERTY_UNAVAILABLE,
  PlayerConfiguration.JSON_PROPERTY_VOLUME,
  PlayerConfiguration.JSON_PROPERTY_WIDTH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PlayerConfiguration {
  public static final String JSON_PROPERTY_ARTIST = "artist";
  private String artist;

  public static final String JSON_PROPERTY_BACKGROUND_COLOR = "background_color";
  private String backgroundColor;

  public static final String JSON_PROPERTY_BUTTON_COLOR = "button_color";
  private String buttonColor;

  public static final String JSON_PROPERTY_COVER = "cover";
  private String cover;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private String displayName;

  public static final String JSON_PROPERTY_FACEBOOK_LINK = "facebook_link";
  private String facebookLink;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private BigDecimal height;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_IS_AUTO_START = "is_auto_start";
  private Boolean isAutoStart;

  public static final String JSON_PROPERTY_IS_COVER = "is_cover";
  private Boolean isCover;

  public static final String JSON_PROPERTY_IS_EMBED = "is_embed";
  private Boolean isEmbed;

  public static final String JSON_PROPERTY_IS_FACEBOOK_EMBED = "is_facebook_embed";
  private Boolean isFacebookEmbed;

  public static final String JSON_PROPERTY_IS_LISTENERS = "is_listeners";
  private Boolean isListeners;

  public static final String JSON_PROPERTY_IS_LOGO_ENABLE = "is_logo_enable";
  private Boolean isLogoEnable;

  public static final String JSON_PROPERTY_IS_SPECTRUM = "is_spectrum";
  private Boolean isSpectrum;

  public static final String JSON_PROPERTY_IS_STATION_THUMBNAIL = "is_station_thumbnail";
  private Boolean isStationThumbnail;

  /**
   * The language used in the &#x60;Player&#x60;
   */
  public enum LanguageEnum {
    DE("de"),
    
    EN("en"),
    
    ES("es"),
    
    FR("fr"),
    
    IT("it");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private LanguageEnum language;

  public static final String JSON_PROPERTY_LISTENERS = "listeners";
  private Integer listeners;

  public static final String JSON_PROPERTY_LOADING = "loading";
  private String loading;

  public static final String JSON_PROPERTY_RESTRICTION = "restriction";
  private String restriction;

  public static final String JSON_PROPERTY_SECONDARY_COLOR = "secondary_color";
  private String secondaryColor;

  public static final String JSON_PROPERTY_STATIONS = "stations";
  private List<String> stations = new ArrayList<>();

  public static final String JSON_PROPERTY_TIMELINE = "timeline";
  private List<String> timeline = new ArrayList<>();

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_THUMBNAIL = "thumbnail";
  private String thumbnail;

  public static final String JSON_PROPERTY_TWITTER_ACCOUNT = "twitter_account";
  private String twitterAccount;

  public static final String JSON_PROPERTY_TWITTER_BACKLINK = "twitter_backlink";
  private String twitterBacklink;

  public static final String JSON_PROPERTY_TWITTER_HASHTAG = "twitter_hashtag";
  private String twitterHashtag;

  public static final String JSON_PROPERTY_UNAVAILABLE = "unavailable";
  private String unavailable;

  public static final String JSON_PROPERTY_VOLUME = "volume";
  private Integer volume;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private BigDecimal width;

  public PlayerConfiguration() {
  }

  public PlayerConfiguration artist(String artist) {
    
    this.artist = artist;
    return this;
  }

   /**
   * The current artist name of the played music
   * @return artist
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ARTIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getArtist() {
    return artist;
  }


  @JsonProperty(JSON_PROPERTY_ARTIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArtist(String artist) {
    this.artist = artist;
  }


  public PlayerConfiguration backgroundColor(String backgroundColor) {
    
    this.backgroundColor = backgroundColor;
    return this;
  }

   /**
   * The background color used in the &#x60;Player&#x60;
   * @return backgroundColor
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBackgroundColor() {
    return backgroundColor;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBackgroundColor(String backgroundColor) {
    this.backgroundColor = backgroundColor;
  }


  public PlayerConfiguration buttonColor(String buttonColor) {
    
    this.buttonColor = buttonColor;
    return this;
  }

   /**
   * The button color used in the &#x60;Player&#x60;
   * @return buttonColor
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BUTTON_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getButtonColor() {
    return buttonColor;
  }


  @JsonProperty(JSON_PROPERTY_BUTTON_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setButtonColor(String buttonColor) {
    this.buttonColor = buttonColor;
  }


  public PlayerConfiguration cover(String cover) {
    
    this.cover = cover;
    return this;
  }

   /**
   * The current cover url of the played music
   * @return cover
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCover() {
    return cover;
  }


  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCover(String cover) {
    this.cover = cover;
  }


  public PlayerConfiguration date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * The date of the last update
   * @return date
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(String date) {
    this.date = date;
  }


  public PlayerConfiguration displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Name of the ressource &#x60;Player&#x60; visible by final customer
   * @return displayName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public PlayerConfiguration facebookLink(String facebookLink) {
    
    this.facebookLink = facebookLink;
    return this;
  }

   /**
   * The Facebook link used to Facebook embed
   * @return facebookLink
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FACEBOOK_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFacebookLink() {
    return facebookLink;
  }


  @JsonProperty(JSON_PROPERTY_FACEBOOK_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFacebookLink(String facebookLink) {
    this.facebookLink = facebookLink;
  }


  public PlayerConfiguration height(BigDecimal height) {
    
    this.height = height;
    return this;
  }

   /**
   * The height used for render the &#x60;Player&#x60; (px)
   * @return height
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public PlayerConfiguration id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the resource &#x60;Player&#x60;
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public PlayerConfiguration isAutoStart(Boolean isAutoStart) {
    
    this.isAutoStart = isAutoStart;
    return this;
  }

   /**
   * Is the auto start enabled?
   * @return isAutoStart
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_AUTO_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAutoStart() {
    return isAutoStart;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTO_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutoStart(Boolean isAutoStart) {
    this.isAutoStart = isAutoStart;
  }


  public PlayerConfiguration isCover(Boolean isCover) {
    
    this.isCover = isCover;
    return this;
  }

   /**
   * Is the cover enabled?
   * @return isCover
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsCover() {
    return isCover;
  }


  @JsonProperty(JSON_PROPERTY_IS_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsCover(Boolean isCover) {
    this.isCover = isCover;
  }


  public PlayerConfiguration isEmbed(Boolean isEmbed) {
    
    this.isEmbed = isEmbed;
    return this;
  }

   /**
   * Is embed link visible?
   * @return isEmbed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_EMBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEmbed() {
    return isEmbed;
  }


  @JsonProperty(JSON_PROPERTY_IS_EMBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEmbed(Boolean isEmbed) {
    this.isEmbed = isEmbed;
  }


  public PlayerConfiguration isFacebookEmbed(Boolean isFacebookEmbed) {
    
    this.isFacebookEmbed = isFacebookEmbed;
    return this;
  }

   /**
   * Is the Facebook embed link visible?
   * @return isFacebookEmbed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_FACEBOOK_EMBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsFacebookEmbed() {
    return isFacebookEmbed;
  }


  @JsonProperty(JSON_PROPERTY_IS_FACEBOOK_EMBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsFacebookEmbed(Boolean isFacebookEmbed) {
    this.isFacebookEmbed = isFacebookEmbed;
  }


  public PlayerConfiguration isListeners(Boolean isListeners) {
    
    this.isListeners = isListeners;
    return this;
  }

   /**
   * Is the listeners informations displayed?
   * @return isListeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsListeners() {
    return isListeners;
  }


  @JsonProperty(JSON_PROPERTY_IS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsListeners(Boolean isListeners) {
    this.isListeners = isListeners;
  }


  public PlayerConfiguration isLogoEnable(Boolean isLogoEnable) {
    
    this.isLogoEnable = isLogoEnable;
    return this;
  }

   /**
   * Is the logo Infomaniak enabled?
   * @return isLogoEnable
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_LOGO_ENABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsLogoEnable() {
    return isLogoEnable;
  }


  @JsonProperty(JSON_PROPERTY_IS_LOGO_ENABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsLogoEnable(Boolean isLogoEnable) {
    this.isLogoEnable = isLogoEnable;
  }


  public PlayerConfiguration isSpectrum(Boolean isSpectrum) {
    
    this.isSpectrum = isSpectrum;
    return this;
  }

   /**
   * Is the spectrum enabled?
   * @return isSpectrum
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SPECTRUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSpectrum() {
    return isSpectrum;
  }


  @JsonProperty(JSON_PROPERTY_IS_SPECTRUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSpectrum(Boolean isSpectrum) {
    this.isSpectrum = isSpectrum;
  }


  public PlayerConfiguration isStationThumbnail(Boolean isStationThumbnail) {
    
    this.isStationThumbnail = isStationThumbnail;
    return this;
  }

   /**
   * Is the station thumbnail we be displayed like cover?
   * @return isStationThumbnail
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_STATION_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsStationThumbnail() {
    return isStationThumbnail;
  }


  @JsonProperty(JSON_PROPERTY_IS_STATION_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsStationThumbnail(Boolean isStationThumbnail) {
    this.isStationThumbnail = isStationThumbnail;
  }


  public PlayerConfiguration language(LanguageEnum language) {
    
    this.language = language;
    return this;
  }

   /**
   * The language used in the &#x60;Player&#x60;
   * @return language
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LanguageEnum getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public PlayerConfiguration listeners(Integer listeners) {
    
    this.listeners = listeners;
    return this;
  }

   /**
   * The current number of listeners on the station
   * @return listeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getListeners() {
    return listeners;
  }


  @JsonProperty(JSON_PROPERTY_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setListeners(Integer listeners) {
    this.listeners = listeners;
  }


  public PlayerConfiguration loading(String loading) {
    
    this.loading = loading;
    return this;
  }

   /**
   * The url of the loading file used in the player
   * @return loading
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOADING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoading() {
    return loading;
  }


  @JsonProperty(JSON_PROPERTY_LOADING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoading(String loading) {
    this.loading = loading;
  }


  public PlayerConfiguration restriction(String restriction) {
    
    this.restriction = restriction;
    return this;
  }

   /**
   * The url of the restriction file used in the player
   * @return restriction
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRestriction() {
    return restriction;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRestriction(String restriction) {
    this.restriction = restriction;
  }


  public PlayerConfiguration secondaryColor(String secondaryColor) {
    
    this.secondaryColor = secondaryColor;
    return this;
  }

   /**
   * The secondary color used in the &#x60;Player&#x60;
   * @return secondaryColor
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECONDARY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecondaryColor() {
    return secondaryColor;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecondaryColor(String secondaryColor) {
    this.secondaryColor = secondaryColor;
  }


  public PlayerConfiguration stations(List<String> stations) {
    
    this.stations = stations;
    return this;
  }

  public PlayerConfiguration addStationsItem(String stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<>();
    }
    this.stations.add(stationsItem);
    return this;
  }

   /**
   * Get stations
   * @return stations
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getStations() {
    return stations;
  }


  @JsonProperty(JSON_PROPERTY_STATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStations(List<String> stations) {
    this.stations = stations;
  }


  public PlayerConfiguration timeline(List<String> timeline) {
    
    this.timeline = timeline;
    return this;
  }

  public PlayerConfiguration addTimelineItem(String timelineItem) {
    if (this.timeline == null) {
      this.timeline = new ArrayList<>();
    }
    this.timeline.add(timelineItem);
    return this;
  }

   /**
   * The list of last songs played on the station
   * @return timeline
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMELINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTimeline() {
    return timeline;
  }


  @JsonProperty(JSON_PROPERTY_TIMELINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeline(List<String> timeline) {
    this.timeline = timeline;
  }


  public PlayerConfiguration title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The current artist title of the played music
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public PlayerConfiguration thumbnail(String thumbnail) {
    
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * The thumbnail url of the &#x60;Player&#x60;
   * @return thumbnail
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getThumbnail() {
    return thumbnail;
  }


  @JsonProperty(JSON_PROPERTY_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }


  public PlayerConfiguration twitterAccount(String twitterAccount) {
    
    this.twitterAccount = twitterAccount;
    return this;
  }

   /**
   * The Twitter account used to Twitter embed
   * @return twitterAccount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TWITTER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTwitterAccount() {
    return twitterAccount;
  }


  @JsonProperty(JSON_PROPERTY_TWITTER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTwitterAccount(String twitterAccount) {
    this.twitterAccount = twitterAccount;
  }


  public PlayerConfiguration twitterBacklink(String twitterBacklink) {
    
    this.twitterBacklink = twitterBacklink;
    return this;
  }

   /**
   * The Twitter backlink used to Twitter embed
   * @return twitterBacklink
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TWITTER_BACKLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTwitterBacklink() {
    return twitterBacklink;
  }


  @JsonProperty(JSON_PROPERTY_TWITTER_BACKLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTwitterBacklink(String twitterBacklink) {
    this.twitterBacklink = twitterBacklink;
  }


  public PlayerConfiguration twitterHashtag(String twitterHashtag) {
    
    this.twitterHashtag = twitterHashtag;
    return this;
  }

   /**
   * The Twitter hashtag used to Twitter embed
   * @return twitterHashtag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TWITTER_HASHTAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTwitterHashtag() {
    return twitterHashtag;
  }


  @JsonProperty(JSON_PROPERTY_TWITTER_HASHTAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTwitterHashtag(String twitterHashtag) {
    this.twitterHashtag = twitterHashtag;
  }


  public PlayerConfiguration unavailable(String unavailable) {
    
    this.unavailable = unavailable;
    return this;
  }

   /**
   * The url of the unavailable file used in the player
   * @return unavailable
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNAVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUnavailable() {
    return unavailable;
  }


  @JsonProperty(JSON_PROPERTY_UNAVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnavailable(String unavailable) {
    this.unavailable = unavailable;
  }


  public PlayerConfiguration volume(Integer volume) {
    
    this.volume = volume;
    return this;
  }

   /**
   * The volume used in the &#x60;Player&#x60;
   * @return volume
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVolume() {
    return volume;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVolume(Integer volume) {
    this.volume = volume;
  }


  public PlayerConfiguration width(BigDecimal width) {
    
    this.width = width;
    return this;
  }

   /**
   * The width used for render the &#x60;Player&#x60; (px)
   * @return width
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWidth(BigDecimal width) {
    this.width = width;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerConfiguration playerConfiguration = (PlayerConfiguration) o;
    return Objects.equals(this.artist, playerConfiguration.artist) &&
        Objects.equals(this.backgroundColor, playerConfiguration.backgroundColor) &&
        Objects.equals(this.buttonColor, playerConfiguration.buttonColor) &&
        Objects.equals(this.cover, playerConfiguration.cover) &&
        Objects.equals(this.date, playerConfiguration.date) &&
        Objects.equals(this.displayName, playerConfiguration.displayName) &&
        Objects.equals(this.facebookLink, playerConfiguration.facebookLink) &&
        Objects.equals(this.height, playerConfiguration.height) &&
        Objects.equals(this.id, playerConfiguration.id) &&
        Objects.equals(this.isAutoStart, playerConfiguration.isAutoStart) &&
        Objects.equals(this.isCover, playerConfiguration.isCover) &&
        Objects.equals(this.isEmbed, playerConfiguration.isEmbed) &&
        Objects.equals(this.isFacebookEmbed, playerConfiguration.isFacebookEmbed) &&
        Objects.equals(this.isListeners, playerConfiguration.isListeners) &&
        Objects.equals(this.isLogoEnable, playerConfiguration.isLogoEnable) &&
        Objects.equals(this.isSpectrum, playerConfiguration.isSpectrum) &&
        Objects.equals(this.isStationThumbnail, playerConfiguration.isStationThumbnail) &&
        Objects.equals(this.language, playerConfiguration.language) &&
        Objects.equals(this.listeners, playerConfiguration.listeners) &&
        Objects.equals(this.loading, playerConfiguration.loading) &&
        Objects.equals(this.restriction, playerConfiguration.restriction) &&
        Objects.equals(this.secondaryColor, playerConfiguration.secondaryColor) &&
        Objects.equals(this.stations, playerConfiguration.stations) &&
        Objects.equals(this.timeline, playerConfiguration.timeline) &&
        Objects.equals(this.title, playerConfiguration.title) &&
        Objects.equals(this.thumbnail, playerConfiguration.thumbnail) &&
        Objects.equals(this.twitterAccount, playerConfiguration.twitterAccount) &&
        Objects.equals(this.twitterBacklink, playerConfiguration.twitterBacklink) &&
        Objects.equals(this.twitterHashtag, playerConfiguration.twitterHashtag) &&
        Objects.equals(this.unavailable, playerConfiguration.unavailable) &&
        Objects.equals(this.volume, playerConfiguration.volume) &&
        Objects.equals(this.width, playerConfiguration.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artist, backgroundColor, buttonColor, cover, date, displayName, facebookLink, height, id, isAutoStart, isCover, isEmbed, isFacebookEmbed, isListeners, isLogoEnable, isSpectrum, isStationThumbnail, language, listeners, loading, restriction, secondaryColor, stations, timeline, title, thumbnail, twitterAccount, twitterBacklink, twitterHashtag, unavailable, volume, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerConfiguration {\n");
    sb.append("    artist: ").append(toIndentedString(artist)).append("\n");
    sb.append("    backgroundColor: ").append(toIndentedString(backgroundColor)).append("\n");
    sb.append("    buttonColor: ").append(toIndentedString(buttonColor)).append("\n");
    sb.append("    cover: ").append(toIndentedString(cover)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    facebookLink: ").append(toIndentedString(facebookLink)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isAutoStart: ").append(toIndentedString(isAutoStart)).append("\n");
    sb.append("    isCover: ").append(toIndentedString(isCover)).append("\n");
    sb.append("    isEmbed: ").append(toIndentedString(isEmbed)).append("\n");
    sb.append("    isFacebookEmbed: ").append(toIndentedString(isFacebookEmbed)).append("\n");
    sb.append("    isListeners: ").append(toIndentedString(isListeners)).append("\n");
    sb.append("    isLogoEnable: ").append(toIndentedString(isLogoEnable)).append("\n");
    sb.append("    isSpectrum: ").append(toIndentedString(isSpectrum)).append("\n");
    sb.append("    isStationThumbnail: ").append(toIndentedString(isStationThumbnail)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    listeners: ").append(toIndentedString(listeners)).append("\n");
    sb.append("    loading: ").append(toIndentedString(loading)).append("\n");
    sb.append("    restriction: ").append(toIndentedString(restriction)).append("\n");
    sb.append("    secondaryColor: ").append(toIndentedString(secondaryColor)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    twitterAccount: ").append(toIndentedString(twitterAccount)).append("\n");
    sb.append("    twitterBacklink: ").append(toIndentedString(twitterBacklink)).append("\n");
    sb.append("    twitterHashtag: ").append(toIndentedString(twitterHashtag)).append("\n");
    sb.append("    unavailable: ").append(toIndentedString(unavailable)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

