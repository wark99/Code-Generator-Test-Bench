/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SearchAllChannelsRequest
 */
@JsonPropertyOrder({
  SearchAllChannelsRequest.JSON_PROPERTY_TERM,
  SearchAllChannelsRequest.JSON_PROPERTY_NOT_ASSOCIATED_TO_GROUP,
  SearchAllChannelsRequest.JSON_PROPERTY_EXCLUDE_DEFAULT_CHANNELS,
  SearchAllChannelsRequest.JSON_PROPERTY_TEAM_IDS,
  SearchAllChannelsRequest.JSON_PROPERTY_GROUP_CONSTRAINED,
  SearchAllChannelsRequest.JSON_PROPERTY_EXCLUDE_GROUP_CONSTRAINED,
  SearchAllChannelsRequest.JSON_PROPERTY_PUBLIC,
  SearchAllChannelsRequest.JSON_PROPERTY_PRIVATE,
  SearchAllChannelsRequest.JSON_PROPERTY_DELETED,
  SearchAllChannelsRequest.JSON_PROPERTY_PAGE,
  SearchAllChannelsRequest.JSON_PROPERTY_PER_PAGE,
  SearchAllChannelsRequest.JSON_PROPERTY_EXCLUDE_POLICY_CONSTRAINED,
  SearchAllChannelsRequest.JSON_PROPERTY_INCLUDE_SEARCH_BY_ID
})
@JsonTypeName("SearchAllChannels_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SearchAllChannelsRequest {
  public static final String JSON_PROPERTY_TERM = "term";
  private String term;

  public static final String JSON_PROPERTY_NOT_ASSOCIATED_TO_GROUP = "not_associated_to_group";
  private String notAssociatedToGroup;

  public static final String JSON_PROPERTY_EXCLUDE_DEFAULT_CHANNELS = "exclude_default_channels";
  private Boolean excludeDefaultChannels;

  public static final String JSON_PROPERTY_TEAM_IDS = "team_ids";
  private List<String> teamIds;

  public static final String JSON_PROPERTY_GROUP_CONSTRAINED = "group_constrained";
  private Boolean groupConstrained;

  public static final String JSON_PROPERTY_EXCLUDE_GROUP_CONSTRAINED = "exclude_group_constrained";
  private Boolean excludeGroupConstrained;

  public static final String JSON_PROPERTY_PUBLIC = "public";
  private Boolean _public;

  public static final String JSON_PROPERTY_PRIVATE = "private";
  private Boolean _private;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  public static final String JSON_PROPERTY_PAGE = "page";
  private String page;

  public static final String JSON_PROPERTY_PER_PAGE = "per_page";
  private String perPage;

  public static final String JSON_PROPERTY_EXCLUDE_POLICY_CONSTRAINED = "exclude_policy_constrained";
  private Boolean excludePolicyConstrained = false;

  public static final String JSON_PROPERTY_INCLUDE_SEARCH_BY_ID = "include_search_by_id";
  private Boolean includeSearchById = false;

  public SearchAllChannelsRequest() {
  }

  public SearchAllChannelsRequest term(String term) {
    
    this.term = term;
    return this;
  }

   /**
   * The string to search in the channel name, display name, and purpose.
   * @return term
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TERM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTerm() {
    return term;
  }


  @JsonProperty(JSON_PROPERTY_TERM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerm(String term) {
    this.term = term;
  }


  public SearchAllChannelsRequest notAssociatedToGroup(String notAssociatedToGroup) {
    
    this.notAssociatedToGroup = notAssociatedToGroup;
    return this;
  }

   /**
   * A group id to exclude channels that are associated to that group via GroupChannel records.
   * @return notAssociatedToGroup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOT_ASSOCIATED_TO_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotAssociatedToGroup() {
    return notAssociatedToGroup;
  }


  @JsonProperty(JSON_PROPERTY_NOT_ASSOCIATED_TO_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotAssociatedToGroup(String notAssociatedToGroup) {
    this.notAssociatedToGroup = notAssociatedToGroup;
  }


  public SearchAllChannelsRequest excludeDefaultChannels(Boolean excludeDefaultChannels) {
    
    this.excludeDefaultChannels = excludeDefaultChannels;
    return this;
  }

   /**
   * Exclude default channels from the results by setting this parameter to true.
   * @return excludeDefaultChannels
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_DEFAULT_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludeDefaultChannels() {
    return excludeDefaultChannels;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_DEFAULT_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeDefaultChannels(Boolean excludeDefaultChannels) {
    this.excludeDefaultChannels = excludeDefaultChannels;
  }


  public SearchAllChannelsRequest teamIds(List<String> teamIds) {
    
    this.teamIds = teamIds;
    return this;
  }

  public SearchAllChannelsRequest addTeamIdsItem(String teamIdsItem) {
    if (this.teamIds == null) {
      this.teamIds = new ArrayList<>();
    }
    this.teamIds.add(teamIdsItem);
    return this;
  }

   /**
   * Filters results to channels belonging to the given team ids  
   * @return teamIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTeamIds() {
    return teamIds;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamIds(List<String> teamIds) {
    this.teamIds = teamIds;
  }


  public SearchAllChannelsRequest groupConstrained(Boolean groupConstrained) {
    
    this.groupConstrained = groupConstrained;
    return this;
  }

   /**
   * Filters results to only return channels constrained to a group  
   * @return groupConstrained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGroupConstrained() {
    return groupConstrained;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupConstrained(Boolean groupConstrained) {
    this.groupConstrained = groupConstrained;
  }


  public SearchAllChannelsRequest excludeGroupConstrained(Boolean excludeGroupConstrained) {
    
    this.excludeGroupConstrained = excludeGroupConstrained;
    return this;
  }

   /**
   * Filters results to exclude channels constrained to a group  
   * @return excludeGroupConstrained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludeGroupConstrained() {
    return excludeGroupConstrained;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeGroupConstrained(Boolean excludeGroupConstrained) {
    this.excludeGroupConstrained = excludeGroupConstrained;
  }


  public SearchAllChannelsRequest _public(Boolean _public) {
    
    this._public = _public;
    return this;
  }

   /**
   * Filters results to only return Public / Open channels, can be used in conjunction with &#x60;private&#x60; to return both &#x60;public&#x60; and &#x60;private&#x60; channels  
   * @return _public
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublic() {
    return _public;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublic(Boolean _public) {
    this._public = _public;
  }


  public SearchAllChannelsRequest _private(Boolean _private) {
    
    this._private = _private;
    return this;
  }

   /**
   * Filters results to only return Private channels, can be used in conjunction with &#x60;public&#x60; to return both &#x60;private&#x60; and &#x60;public&#x60; channels  
   * @return _private
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivate() {
    return _private;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivate(Boolean _private) {
    this._private = _private;
  }


  public SearchAllChannelsRequest deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Filters results to only return deleted / archived channels  
   * @return deleted
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public SearchAllChannelsRequest page(String page) {
    
    this.page = page;
    return this;
  }

   /**
   * The page number to return, if paginated. If this parameter is not present with the &#x60;per_page&#x60; parameter then the results will be returned un-paged.
   * @return page
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPage() {
    return page;
  }


  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPage(String page) {
    this.page = page;
  }


  public SearchAllChannelsRequest perPage(String perPage) {
    
    this.perPage = perPage;
    return this;
  }

   /**
   * The number of entries to return per page, if paginated. If this parameter is not present with the &#x60;page&#x60; parameter then the results will be returned un-paged.
   * @return perPage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPerPage() {
    return perPage;
  }


  @JsonProperty(JSON_PROPERTY_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerPage(String perPage) {
    this.perPage = perPage;
  }


  public SearchAllChannelsRequest excludePolicyConstrained(Boolean excludePolicyConstrained) {
    
    this.excludePolicyConstrained = excludePolicyConstrained;
    return this;
  }

   /**
   * If set to true, only channels which do not have a granular retention policy assigned to them will be returned. The &#x60;sysconsole_read_compliance_data_retention&#x60; permission is required to use this parameter.  
   * @return excludePolicyConstrained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_POLICY_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludePolicyConstrained() {
    return excludePolicyConstrained;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_POLICY_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludePolicyConstrained(Boolean excludePolicyConstrained) {
    this.excludePolicyConstrained = excludePolicyConstrained;
  }


  public SearchAllChannelsRequest includeSearchById(Boolean includeSearchById) {
    
    this.includeSearchById = includeSearchById;
    return this;
  }

   /**
   * If set to true, returns channels where given search &#39;term&#39; matches channel ID.  
   * @return includeSearchById
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_SEARCH_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeSearchById() {
    return includeSearchById;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_SEARCH_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeSearchById(Boolean includeSearchById) {
    this.includeSearchById = includeSearchById;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchAllChannelsRequest searchAllChannelsRequest = (SearchAllChannelsRequest) o;
    return Objects.equals(this.term, searchAllChannelsRequest.term) &&
        Objects.equals(this.notAssociatedToGroup, searchAllChannelsRequest.notAssociatedToGroup) &&
        Objects.equals(this.excludeDefaultChannels, searchAllChannelsRequest.excludeDefaultChannels) &&
        Objects.equals(this.teamIds, searchAllChannelsRequest.teamIds) &&
        Objects.equals(this.groupConstrained, searchAllChannelsRequest.groupConstrained) &&
        Objects.equals(this.excludeGroupConstrained, searchAllChannelsRequest.excludeGroupConstrained) &&
        Objects.equals(this._public, searchAllChannelsRequest._public) &&
        Objects.equals(this._private, searchAllChannelsRequest._private) &&
        Objects.equals(this.deleted, searchAllChannelsRequest.deleted) &&
        Objects.equals(this.page, searchAllChannelsRequest.page) &&
        Objects.equals(this.perPage, searchAllChannelsRequest.perPage) &&
        Objects.equals(this.excludePolicyConstrained, searchAllChannelsRequest.excludePolicyConstrained) &&
        Objects.equals(this.includeSearchById, searchAllChannelsRequest.includeSearchById);
  }

  @Override
  public int hashCode() {
    return Objects.hash(term, notAssociatedToGroup, excludeDefaultChannels, teamIds, groupConstrained, excludeGroupConstrained, _public, _private, deleted, page, perPage, excludePolicyConstrained, includeSearchById);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchAllChannelsRequest {\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    notAssociatedToGroup: ").append(toIndentedString(notAssociatedToGroup)).append("\n");
    sb.append("    excludeDefaultChannels: ").append(toIndentedString(excludeDefaultChannels)).append("\n");
    sb.append("    teamIds: ").append(toIndentedString(teamIds)).append("\n");
    sb.append("    groupConstrained: ").append(toIndentedString(groupConstrained)).append("\n");
    sb.append("    excludeGroupConstrained: ").append(toIndentedString(excludeGroupConstrained)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    _private: ").append(toIndentedString(_private)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    excludePolicyConstrained: ").append(toIndentedString(excludePolicyConstrained)).append("\n");
    sb.append("    includeSearchById: ").append(toIndentedString(includeSearchById)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

