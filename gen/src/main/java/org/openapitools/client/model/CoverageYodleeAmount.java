/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MoneyYodlee;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CoverageYodleeAmount
 */
@JsonPropertyOrder({
  CoverageYodleeAmount.JSON_PROPERTY_COVER,
  CoverageYodleeAmount.JSON_PROPERTY_UNIT_TYPE,
  CoverageYodleeAmount.JSON_PROPERTY_TYPE,
  CoverageYodleeAmount.JSON_PROPERTY_LIMIT_TYPE,
  CoverageYodleeAmount.JSON_PROPERTY_MET
})
@JsonTypeName("CoverageYodlee_amount")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CoverageYodleeAmount {
  public static final String JSON_PROPERTY_COVER = "cover";
  private MoneyYodlee cover;

  public static final String JSON_PROPERTY_UNIT_TYPE = "unitType";
  private String unitType;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_LIMIT_TYPE = "limitType";
  private String limitType;

  public static final String JSON_PROPERTY_MET = "met";
  private MoneyYodlee met;

  public CoverageYodleeAmount() {
  }

  public CoverageYodleeAmount cover(MoneyYodlee cover) {
    
    this.cover = cover;
    return this;
  }

   /**
   * Get cover
   * @return cover
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MoneyYodlee getCover() {
    return cover;
  }


  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCover(MoneyYodlee cover) {
    this.cover = cover;
  }


  public CoverageYodleeAmount unitType(String unitType) {
    
    this.unitType = unitType;
    return this;
  }

   /**
   * Get unitType
   * @return unitType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitType() {
    return unitType;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitType(String unitType) {
    this.unitType = unitType;
  }


  public CoverageYodleeAmount type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public CoverageYodleeAmount limitType(String limitType) {
    
    this.limitType = limitType;
    return this;
  }

   /**
   * Get limitType
   * @return limitType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLimitType() {
    return limitType;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitType(String limitType) {
    this.limitType = limitType;
  }


  public CoverageYodleeAmount met(MoneyYodlee met) {
    
    this.met = met;
    return this;
  }

   /**
   * Get met
   * @return met
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MoneyYodlee getMet() {
    return met;
  }


  @JsonProperty(JSON_PROPERTY_MET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMet(MoneyYodlee met) {
    this.met = met;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoverageYodleeAmount coverageYodleeAmount = (CoverageYodleeAmount) o;
    return Objects.equals(this.cover, coverageYodleeAmount.cover) &&
        Objects.equals(this.unitType, coverageYodleeAmount.unitType) &&
        Objects.equals(this.type, coverageYodleeAmount.type) &&
        Objects.equals(this.limitType, coverageYodleeAmount.limitType) &&
        Objects.equals(this.met, coverageYodleeAmount.met);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cover, unitType, type, limitType, met);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoverageYodleeAmount {\n");
    sb.append("    cover: ").append(toIndentedString(cover)).append("\n");
    sb.append("    unitType: ").append(toIndentedString(unitType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    limitType: ").append(toIndentedString(limitType)).append("\n");
    sb.append("    met: ").append(toIndentedString(met)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

