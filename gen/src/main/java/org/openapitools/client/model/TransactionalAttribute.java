/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TransactionalTimeInterval;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An attribute which represents some categorization/classification of transactions. Enumerates those identified transactions and reports aggregations of them over the requested time interval(s).
 */
@JsonPropertyOrder({
  TransactionalAttribute.JSON_PROPERTY_AGGREGATED_BY_TIME_PERIODS,
  TransactionalAttribute.JSON_PROPERTY_ATTRIBUTE_NAME,
  TransactionalAttribute.JSON_PROPERTY_STREAM_IDS,
  TransactionalAttribute.JSON_PROPERTY_TRANSACTION_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TransactionalAttribute {
  public static final String JSON_PROPERTY_AGGREGATED_BY_TIME_PERIODS = "aggregatedByTimePeriods";
  private List<TransactionalTimeInterval> aggregatedByTimePeriods = new ArrayList<>();

  public static final String JSON_PROPERTY_ATTRIBUTE_NAME = "attributeName";
  private String attributeName;

  public static final String JSON_PROPERTY_STREAM_IDS = "streamIds";
  private List<String> streamIds = new ArrayList<>();

  public static final String JSON_PROPERTY_TRANSACTION_IDS = "transactionIds";
  private List<String> transactionIds = new ArrayList<>();

  public TransactionalAttribute() {
  }

  public TransactionalAttribute aggregatedByTimePeriods(List<TransactionalTimeInterval> aggregatedByTimePeriods) {
    
    this.aggregatedByTimePeriods = aggregatedByTimePeriods;
    return this;
  }

  public TransactionalAttribute addAggregatedByTimePeriodsItem(TransactionalTimeInterval aggregatedByTimePeriodsItem) {
    if (this.aggregatedByTimePeriods == null) {
      this.aggregatedByTimePeriods = new ArrayList<>();
    }
    this.aggregatedByTimePeriods.add(aggregatedByTimePeriodsItem);
    return this;
  }

   /**
   * List of aggregations by specified Time Interval
   * @return aggregatedByTimePeriods
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATED_BY_TIME_PERIODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TransactionalTimeInterval> getAggregatedByTimePeriods() {
    return aggregatedByTimePeriods;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATED_BY_TIME_PERIODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregatedByTimePeriods(List<TransactionalTimeInterval> aggregatedByTimePeriods) {
    this.aggregatedByTimePeriods = aggregatedByTimePeriods;
  }


  public TransactionalAttribute attributeName(String attributeName) {
    
    this.attributeName = attributeName;
    return this;
  }

   /**
   * Name of Attribute as mentioned in Data Dictionary
   * @return attributeName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAttributeName() {
    return attributeName;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public TransactionalAttribute streamIds(List<String> streamIds) {
    
    this.streamIds = streamIds;
    return this;
  }

  public TransactionalAttribute addStreamIdsItem(String streamIdsItem) {
    if (this.streamIds == null) {
      this.streamIds = new ArrayList<>();
    }
    this.streamIds.add(streamIdsItem);
    return this;
  }

   /**
   * List of stream IDs categorized as belonging to this attribute
   * @return streamIds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STREAM_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getStreamIds() {
    return streamIds;
  }


  @JsonProperty(JSON_PROPERTY_STREAM_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreamIds(List<String> streamIds) {
    this.streamIds = streamIds;
  }


  public TransactionalAttribute transactionIds(List<String> transactionIds) {
    
    this.transactionIds = transactionIds;
    return this;
  }

  public TransactionalAttribute addTransactionIdsItem(String transactionIdsItem) {
    if (this.transactionIds == null) {
      this.transactionIds = new ArrayList<>();
    }
    this.transactionIds.add(transactionIdsItem);
    return this;
  }

   /**
   * List of transaction IDs categorized as belonging to this attribute
   * @return transactionIds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTransactionIds() {
    return transactionIds;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionIds(List<String> transactionIds) {
    this.transactionIds = transactionIds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionalAttribute transactionalAttribute = (TransactionalAttribute) o;
    return Objects.equals(this.aggregatedByTimePeriods, transactionalAttribute.aggregatedByTimePeriods) &&
        Objects.equals(this.attributeName, transactionalAttribute.attributeName) &&
        Objects.equals(this.streamIds, transactionalAttribute.streamIds) &&
        Objects.equals(this.transactionIds, transactionalAttribute.transactionIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregatedByTimePeriods, attributeName, streamIds, transactionIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionalAttribute {\n");
    sb.append("    aggregatedByTimePeriods: ").append(toIndentedString(aggregatedByTimePeriods)).append("\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    streamIds: ").append(toIndentedString(streamIds)).append("\n");
    sb.append("    transactionIds: ").append(toIndentedString(transactionIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

