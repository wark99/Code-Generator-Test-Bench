/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import org.openapitools.client.model.RecurringAmountConfig;
import org.openapitools.client.model.ThirdPartyProviderConfig;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyInsuranceConfig
 */
@JsonPropertyOrder({
  PropertyInsuranceConfig.JSON_PROPERTY_ID,
  PropertyInsuranceConfig.JSON_PROPERTY_TYPE,
  PropertyInsuranceConfig.JSON_PROPERTY_PROVIDER,
  PropertyInsuranceConfig.JSON_PROPERTY_REFERENCE_NUMBER,
  PropertyInsuranceConfig.JSON_PROPERTY_PREMIUM_PAYMENT,
  PropertyInsuranceConfig.JSON_PROPERTY_START_DATE,
  PropertyInsuranceConfig.JSON_PROPERTY_END_DATE,
  PropertyInsuranceConfig.JSON_PROPERTY_REINSTATEMENT_VALUE,
  PropertyInsuranceConfig.JSON_PROPERTY_ADDITIONAL_INFORMATION,
  PropertyInsuranceConfig.JSON_PROPERTY_CONTENTS_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyInsuranceConfig {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    BUILDING("Building"),
    
    CONTENTS("Contents"),
    
    BUILDING_AND_CONTENT("Building and content"),
    
    FACTORED("Factored");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private ThirdPartyProviderConfig provider;

  public static final String JSON_PROPERTY_REFERENCE_NUMBER = "reference_number";
  private String referenceNumber;

  public static final String JSON_PROPERTY_PREMIUM_PAYMENT = "premium_payment";
  private RecurringAmountConfig premiumPayment;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  private MaintenancePost200ResponseValueCreatedDate startDate;

  public static final String JSON_PROPERTY_END_DATE = "end_date";
  private MaintenancePost200ResponseValueCreatedDate endDate;

  public static final String JSON_PROPERTY_REINSTATEMENT_VALUE = "reinstatement_value";
  private Double reinstatementValue;

  public static final String JSON_PROPERTY_ADDITIONAL_INFORMATION = "additional_information";
  private String additionalInformation;

  public static final String JSON_PROPERTY_CONTENTS_VALUE = "contents_value";
  private Double contentsValue;

  public PropertyInsuranceConfig() {
  }

  public PropertyInsuranceConfig id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public PropertyInsuranceConfig type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PropertyInsuranceConfig provider(ThirdPartyProviderConfig provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ThirdPartyProviderConfig getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvider(ThirdPartyProviderConfig provider) {
    this.provider = provider;
  }


  public PropertyInsuranceConfig referenceNumber(String referenceNumber) {
    
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceNumber() {
    return referenceNumber;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  public PropertyInsuranceConfig premiumPayment(RecurringAmountConfig premiumPayment) {
    
    this.premiumPayment = premiumPayment;
    return this;
  }

   /**
   * Get premiumPayment
   * @return premiumPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREMIUM_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecurringAmountConfig getPremiumPayment() {
    return premiumPayment;
  }


  @JsonProperty(JSON_PROPERTY_PREMIUM_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPremiumPayment(RecurringAmountConfig premiumPayment) {
    this.premiumPayment = premiumPayment;
  }


  public PropertyInsuranceConfig startDate(MaintenancePost200ResponseValueCreatedDate startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(MaintenancePost200ResponseValueCreatedDate startDate) {
    this.startDate = startDate;
  }


  public PropertyInsuranceConfig endDate(MaintenancePost200ResponseValueCreatedDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(MaintenancePost200ResponseValueCreatedDate endDate) {
    this.endDate = endDate;
  }


  public PropertyInsuranceConfig reinstatementValue(Double reinstatementValue) {
    
    this.reinstatementValue = reinstatementValue;
    return this;
  }

   /**
   * Get reinstatementValue
   * @return reinstatementValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REINSTATEMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReinstatementValue() {
    return reinstatementValue;
  }


  @JsonProperty(JSON_PROPERTY_REINSTATEMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReinstatementValue(Double reinstatementValue) {
    this.reinstatementValue = reinstatementValue;
  }


  public PropertyInsuranceConfig additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public PropertyInsuranceConfig contentsValue(Double contentsValue) {
    
    this.contentsValue = contentsValue;
    return this;
  }

   /**
   * Get contentsValue
   * @return contentsValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENTS_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getContentsValue() {
    return contentsValue;
  }


  @JsonProperty(JSON_PROPERTY_CONTENTS_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentsValue(Double contentsValue) {
    this.contentsValue = contentsValue;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyInsuranceConfig propertyInsuranceConfig = (PropertyInsuranceConfig) o;
    return Objects.equals(this.id, propertyInsuranceConfig.id) &&
        Objects.equals(this.type, propertyInsuranceConfig.type) &&
        Objects.equals(this.provider, propertyInsuranceConfig.provider) &&
        Objects.equals(this.referenceNumber, propertyInsuranceConfig.referenceNumber) &&
        Objects.equals(this.premiumPayment, propertyInsuranceConfig.premiumPayment) &&
        Objects.equals(this.startDate, propertyInsuranceConfig.startDate) &&
        Objects.equals(this.endDate, propertyInsuranceConfig.endDate) &&
        Objects.equals(this.reinstatementValue, propertyInsuranceConfig.reinstatementValue) &&
        Objects.equals(this.additionalInformation, propertyInsuranceConfig.additionalInformation) &&
        Objects.equals(this.contentsValue, propertyInsuranceConfig.contentsValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, provider, referenceNumber, premiumPayment, startDate, endDate, reinstatementValue, additionalInformation, contentsValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyInsuranceConfig {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    premiumPayment: ").append(toIndentedString(premiumPayment)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    reinstatementValue: ").append(toIndentedString(reinstatementValue)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    contentsValue: ").append(toIndentedString(contentsValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

