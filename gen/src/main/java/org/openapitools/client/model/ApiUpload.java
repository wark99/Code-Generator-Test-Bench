/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.UUID;
import org.openapitools.client.model.ApiUploadMeta;
import org.openapitools.client.model.Datetime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Upload
 */
@JsonPropertyOrder({
  ApiUpload.JSON_PROPERTY_ID,
  ApiUpload.JSON_PROPERTY_INDEX,
  ApiUpload.JSON_PROPERTY_PROGRESS,
  ApiUpload.JSON_PROPERTY_URL,
  ApiUpload.JSON_PROPERTY_READY_AT,
  ApiUpload.JSON_PROPERTY_CREATED_AT,
  ApiUpload.JSON_PROPERTY_META
})
@JsonTypeName("Api_Upload")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ApiUpload {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_INDEX = "index";
  private BigDecimal index;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private BigDecimal progress;

  public static final String JSON_PROPERTY_URL = "url";
  private JsonNullable<Object> url = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_READY_AT = "ready_at";
  private Datetime readyAt = null;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Datetime createdAt = null;

  public static final String JSON_PROPERTY_META = "meta";
  private ApiUploadMeta meta;

  public ApiUpload() {
  }

  public ApiUpload id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ApiUpload index(BigDecimal index) {
    
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndex(BigDecimal index) {
    this.index = index;
  }


  public ApiUpload progress(BigDecimal progress) {
    
    this.progress = progress;
    return this;
  }

   /**
   * percentage
   * @return progress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProgress() {
    return progress;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgress(BigDecimal progress) {
    this.progress = progress;
  }


  public ApiUpload url(Object url) {
    this.url = JsonNullable.<Object>of(url);
    
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUrl() {
        return url.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUrl_JsonNullable() {
    return url;
  }
  
  @JsonProperty(JSON_PROPERTY_URL)
  public void setUrl_JsonNullable(JsonNullable<Object> url) {
    this.url = url;
  }

  public void setUrl(Object url) {
    this.url = JsonNullable.<Object>of(url);
  }


  public ApiUpload readyAt(Datetime readyAt) {
    
    this.readyAt = readyAt;
    return this;
  }

   /**
   * Get readyAt
   * @return readyAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READY_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getReadyAt() {
    return readyAt;
  }


  @JsonProperty(JSON_PROPERTY_READY_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadyAt(Datetime readyAt) {
    this.readyAt = readyAt;
  }


  public ApiUpload createdAt(Datetime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(Datetime createdAt) {
    this.createdAt = createdAt;
  }


  public ApiUpload meta(ApiUploadMeta meta) {
    
    this.meta = meta;
    return this;
  }

   /**
   * 
   * @return meta
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiUploadMeta getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(ApiUploadMeta meta) {
    this.meta = meta;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiUpload apiUpload = (ApiUpload) o;
    return Objects.equals(this.id, apiUpload.id) &&
        Objects.equals(this.index, apiUpload.index) &&
        Objects.equals(this.progress, apiUpload.progress) &&
        equalsNullable(this.url, apiUpload.url) &&
        Objects.equals(this.readyAt, apiUpload.readyAt) &&
        Objects.equals(this.createdAt, apiUpload.createdAt) &&
        Objects.equals(this.meta, apiUpload.meta);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, index, progress, hashCodeNullable(url), readyAt, createdAt, meta);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiUpload {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    readyAt: ").append(toIndentedString(readyAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

