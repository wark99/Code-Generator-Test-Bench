/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CashFlowMonthlyCashFlowCredits
 */
@JsonPropertyOrder({
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_MONTH,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_NUMBER_OF_CREDITS,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_TOTAL_CREDITS_AMOUNT,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_LARGEST_CREDIT,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_NUMBER_OF_CREDITS_LESS_TRANSFERS,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_TOTAL_CREDITS_AMOUNT_LESS_TRANSFERS,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_AVERAGE_CREDIT_AMOUNT,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_ESTIMATED_NUMBER_OF_LOAN_DEPOSITS,
  CashFlowMonthlyCashFlowCredits.JSON_PROPERTY_ESTIMATED_LOAN_DEPOSIT_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CashFlowMonthlyCashFlowCredits {
  public static final String JSON_PROPERTY_MONTH = "month";
  private Long month;

  public static final String JSON_PROPERTY_NUMBER_OF_CREDITS = "numberOfCredits";
  private String numberOfCredits;

  public static final String JSON_PROPERTY_TOTAL_CREDITS_AMOUNT = "totalCreditsAmount";
  private BigDecimal totalCreditsAmount;

  public static final String JSON_PROPERTY_LARGEST_CREDIT = "largestCredit";
  private BigDecimal largestCredit;

  public static final String JSON_PROPERTY_NUMBER_OF_CREDITS_LESS_TRANSFERS = "numberOfCreditsLessTransfers";
  private String numberOfCreditsLessTransfers;

  public static final String JSON_PROPERTY_TOTAL_CREDITS_AMOUNT_LESS_TRANSFERS = "totalCreditsAmountLessTransfers";
  private BigDecimal totalCreditsAmountLessTransfers;

  public static final String JSON_PROPERTY_AVERAGE_CREDIT_AMOUNT = "averageCreditAmount";
  private BigDecimal averageCreditAmount;

  public static final String JSON_PROPERTY_ESTIMATED_NUMBER_OF_LOAN_DEPOSITS = "estimatedNumberOfLoanDeposits";
  private String estimatedNumberOfLoanDeposits;

  public static final String JSON_PROPERTY_ESTIMATED_LOAN_DEPOSIT_AMOUNT = "estimatedLoanDepositAmount";
  private BigDecimal estimatedLoanDepositAmount;

  public CashFlowMonthlyCashFlowCredits() {
  }

  public CashFlowMonthlyCashFlowCredits month(Long month) {
    
    this.month = month;
    return this;
  }

   /**
   * One instance for each complete calendar month in the report
   * @return month
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonth(Long month) {
    this.month = month;
  }


  public CashFlowMonthlyCashFlowCredits numberOfCredits(String numberOfCredits) {
    
    this.numberOfCredits = numberOfCredits;
    return this;
  }

   /**
   * Number of credits by month
   * @return numberOfCredits
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CREDITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNumberOfCredits() {
    return numberOfCredits;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CREDITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfCredits(String numberOfCredits) {
    this.numberOfCredits = numberOfCredits;
  }


  public CashFlowMonthlyCashFlowCredits totalCreditsAmount(BigDecimal totalCreditsAmount) {
    
    this.totalCreditsAmount = totalCreditsAmount;
    return this;
  }

   /**
   * Total amount of credits by month
   * @return totalCreditsAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalCreditsAmount() {
    return totalCreditsAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCreditsAmount(BigDecimal totalCreditsAmount) {
    this.totalCreditsAmount = totalCreditsAmount;
  }


  public CashFlowMonthlyCashFlowCredits largestCredit(BigDecimal largestCredit) {
    
    this.largestCredit = largestCredit;
    return this;
  }

   /**
   * Largest credit by month
   * @return largestCredit
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LARGEST_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getLargestCredit() {
    return largestCredit;
  }


  @JsonProperty(JSON_PROPERTY_LARGEST_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLargestCredit(BigDecimal largestCredit) {
    this.largestCredit = largestCredit;
  }


  public CashFlowMonthlyCashFlowCredits numberOfCreditsLessTransfers(String numberOfCreditsLessTransfers) {
    
    this.numberOfCreditsLessTransfers = numberOfCreditsLessTransfers;
    return this;
  }

   /**
   * Number of credits by month (less transfers)
   * @return numberOfCreditsLessTransfers
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CREDITS_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNumberOfCreditsLessTransfers() {
    return numberOfCreditsLessTransfers;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CREDITS_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfCreditsLessTransfers(String numberOfCreditsLessTransfers) {
    this.numberOfCreditsLessTransfers = numberOfCreditsLessTransfers;
  }


  public CashFlowMonthlyCashFlowCredits totalCreditsAmountLessTransfers(BigDecimal totalCreditsAmountLessTransfers) {
    
    this.totalCreditsAmountLessTransfers = totalCreditsAmountLessTransfers;
    return this;
  }

   /**
   * Total amount of credits by month (less transfers)
   * @return totalCreditsAmountLessTransfers
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_AMOUNT_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalCreditsAmountLessTransfers() {
    return totalCreditsAmountLessTransfers;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CREDITS_AMOUNT_LESS_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCreditsAmountLessTransfers(BigDecimal totalCreditsAmountLessTransfers) {
    this.totalCreditsAmountLessTransfers = totalCreditsAmountLessTransfers;
  }


  public CashFlowMonthlyCashFlowCredits averageCreditAmount(BigDecimal averageCreditAmount) {
    
    this.averageCreditAmount = averageCreditAmount;
    return this;
  }

   /**
   * The average credit amount
   * @return averageCreditAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_CREDIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageCreditAmount() {
    return averageCreditAmount;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_CREDIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageCreditAmount(BigDecimal averageCreditAmount) {
    this.averageCreditAmount = averageCreditAmount;
  }


  public CashFlowMonthlyCashFlowCredits estimatedNumberOfLoanDeposits(String estimatedNumberOfLoanDeposits) {
    
    this.estimatedNumberOfLoanDeposits = estimatedNumberOfLoanDeposits;
    return this;
  }

   /**
   * The estimated number of loan deposits
   * @return estimatedNumberOfLoanDeposits
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATED_NUMBER_OF_LOAN_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEstimatedNumberOfLoanDeposits() {
    return estimatedNumberOfLoanDeposits;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_NUMBER_OF_LOAN_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimatedNumberOfLoanDeposits(String estimatedNumberOfLoanDeposits) {
    this.estimatedNumberOfLoanDeposits = estimatedNumberOfLoanDeposits;
  }


  public CashFlowMonthlyCashFlowCredits estimatedLoanDepositAmount(BigDecimal estimatedLoanDepositAmount) {
    
    this.estimatedLoanDepositAmount = estimatedLoanDepositAmount;
    return this;
  }

   /**
   * The estimated loan deposit amount
   * @return estimatedLoanDepositAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATED_LOAN_DEPOSIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getEstimatedLoanDepositAmount() {
    return estimatedLoanDepositAmount;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_LOAN_DEPOSIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimatedLoanDepositAmount(BigDecimal estimatedLoanDepositAmount) {
    this.estimatedLoanDepositAmount = estimatedLoanDepositAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowMonthlyCashFlowCredits cashFlowMonthlyCashFlowCredits = (CashFlowMonthlyCashFlowCredits) o;
    return Objects.equals(this.month, cashFlowMonthlyCashFlowCredits.month) &&
        Objects.equals(this.numberOfCredits, cashFlowMonthlyCashFlowCredits.numberOfCredits) &&
        Objects.equals(this.totalCreditsAmount, cashFlowMonthlyCashFlowCredits.totalCreditsAmount) &&
        Objects.equals(this.largestCredit, cashFlowMonthlyCashFlowCredits.largestCredit) &&
        Objects.equals(this.numberOfCreditsLessTransfers, cashFlowMonthlyCashFlowCredits.numberOfCreditsLessTransfers) &&
        Objects.equals(this.totalCreditsAmountLessTransfers, cashFlowMonthlyCashFlowCredits.totalCreditsAmountLessTransfers) &&
        Objects.equals(this.averageCreditAmount, cashFlowMonthlyCashFlowCredits.averageCreditAmount) &&
        Objects.equals(this.estimatedNumberOfLoanDeposits, cashFlowMonthlyCashFlowCredits.estimatedNumberOfLoanDeposits) &&
        Objects.equals(this.estimatedLoanDepositAmount, cashFlowMonthlyCashFlowCredits.estimatedLoanDepositAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, numberOfCredits, totalCreditsAmount, largestCredit, numberOfCreditsLessTransfers, totalCreditsAmountLessTransfers, averageCreditAmount, estimatedNumberOfLoanDeposits, estimatedLoanDepositAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowMonthlyCashFlowCredits {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    numberOfCredits: ").append(toIndentedString(numberOfCredits)).append("\n");
    sb.append("    totalCreditsAmount: ").append(toIndentedString(totalCreditsAmount)).append("\n");
    sb.append("    largestCredit: ").append(toIndentedString(largestCredit)).append("\n");
    sb.append("    numberOfCreditsLessTransfers: ").append(toIndentedString(numberOfCreditsLessTransfers)).append("\n");
    sb.append("    totalCreditsAmountLessTransfers: ").append(toIndentedString(totalCreditsAmountLessTransfers)).append("\n");
    sb.append("    averageCreditAmount: ").append(toIndentedString(averageCreditAmount)).append("\n");
    sb.append("    estimatedNumberOfLoanDeposits: ").append(toIndentedString(estimatedNumberOfLoanDeposits)).append("\n");
    sb.append("    estimatedLoanDepositAmount: ").append(toIndentedString(estimatedLoanDepositAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

