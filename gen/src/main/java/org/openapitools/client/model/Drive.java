/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Capabilities;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.Categorypermission;
import org.openapitools.client.model.KSuite;
import org.openapitools.client.model.MaintenanceType;
import org.openapitools.client.model.Preferences1;
import org.openapitools.client.model.PricingPlan;
import org.openapitools.client.model.Rewind;
import org.openapitools.client.model.Right;
import org.openapitools.client.model.Settings;
import org.openapitools.client.model.Tag;
import org.openapitools.client.model.Teams;
import org.openapitools.client.model.Users;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Drive
 */
@JsonPropertyOrder({
  Drive.JSON_PROPERTY_ID,
  Drive.JSON_PROPERTY_NAME,
  Drive.JSON_PROPERTY_SIZE,
  Drive.JSON_PROPERTY_USED_SIZE,
  Drive.JSON_PROPERTY_CREATED_AT,
  Drive.JSON_PROPERTY_UPDATED_AT,
  Drive.JSON_PROPERTY_IN_MAINTENANCE,
  Drive.JSON_PROPERTY_MAINTENANCE_REASON,
  Drive.JSON_PROPERTY_MAINTENANCE_AT,
  Drive.JSON_PROPERTY_MAINTENANCE_TYPES,
  Drive.JSON_PROPERTY_VERSION,
  Drive.JSON_PROPERTY_USERS_COUNT,
  Drive.JSON_PROPERTY_USERS_QUOTA,
  Drive.JSON_PROPERTY_PRODUCT_ID,
  Drive.JSON_PROPERTY_ACCOUNT_ID,
  Drive.JSON_PROPERTY_ACCOUNT,
  Drive.JSON_PROPERTY_EXPIRED_AT,
  Drive.JSON_PROPERTY_IS_LOCKED,
  Drive.JSON_PROPERTY_DESCRIPTION,
  Drive.JSON_PROPERTY_BILL_REFERENCE,
  Drive.JSON_PROPERTY_IS_DEMO,
  Drive.JSON_PROPERTY_ROLE,
  Drive.JSON_PROPERTY_ACCOUNT_ADMIN,
  Drive.JSON_PROPERTY_IS_IN_APP_SUBSCRIPTION,
  Drive.JSON_PROPERTY_REWIND,
  Drive.JSON_PROPERTY_INVITATIONS_COUNT,
  Drive.JSON_PROPERTY_CATEGORIES,
  Drive.JSON_PROPERTY_CATEGORIES_PERMISSIONS,
  Drive.JSON_PROPERTY_USERS,
  Drive.JSON_PROPERTY_TEAMS,
  Drive.JSON_PROPERTY_RIGHTS,
  Drive.JSON_PROPERTY_TAGS,
  Drive.JSON_PROPERTY_K_SUITE,
  Drive.JSON_PROPERTY_CAPABILITIES,
  Drive.JSON_PROPERTY_SETTINGS,
  Drive.JSON_PROPERTY_PREFERENCES,
  Drive.JSON_PROPERTY_PACK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Drive {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  public static final String JSON_PROPERTY_USED_SIZE = "used_size";
  private Integer usedSize;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Integer updatedAt;

  public static final String JSON_PROPERTY_IN_MAINTENANCE = "in_maintenance";
  private Boolean inMaintenance;

  /**
   * Reason of Drive maintenance.&lt;note&gt;&lt;strong&gt;demo_end&lt;/strong&gt;: The demonstration period of the Drive has come to an end.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;invoice_overdue&lt;/strong&gt;: An invoice for this Drive is currently unpaid.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;not_renew&lt;/strong&gt;: This Drive has expired and must be renewed.&lt;/note&gt;
   */
  public enum MaintenanceReasonEnum {
    DEMO_END("demo_end"),
    
    INVOICE_OVERDUE("invoice_overdue"),
    
    NOT_RENEW("not_renew"),
    
    TECHNICAL("technical");

    private String value;

    MaintenanceReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MaintenanceReasonEnum fromValue(String value) {
      for (MaintenanceReasonEnum b : MaintenanceReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MAINTENANCE_REASON = "maintenance_reason";
  private MaintenanceReasonEnum maintenanceReason;

  public static final String JSON_PROPERTY_MAINTENANCE_AT = "maintenance_at";
  private Integer maintenanceAt;

  public static final String JSON_PROPERTY_MAINTENANCE_TYPES = "maintenance_types";
  private List<MaintenanceType> maintenanceTypes;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_USERS_COUNT = "users_count";
  private Integer usersCount;

  public static final String JSON_PROPERTY_USERS_QUOTA = "users_quota";
  private Integer usersQuota;

  public static final String JSON_PROPERTY_PRODUCT_ID = "product_id";
  private Integer productId;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private Integer accountId;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private String account;

  public static final String JSON_PROPERTY_EXPIRED_AT = "expired_at";
  private Integer expiredAt;

  public static final String JSON_PROPERTY_IS_LOCKED = "is_locked";
  private Boolean isLocked;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_BILL_REFERENCE = "bill_reference";
  private String billReference;

  public static final String JSON_PROPERTY_IS_DEMO = "is_demo";
  private Boolean isDemo;

  /**
   * Role of the current user within this kDrive
   */
  public enum RoleEnum {
    ADMIN("admin"),
    
    EXTERNAL("external"),
    
    NONE("none"),
    
    USER("user");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleEnum role;

  public static final String JSON_PROPERTY_ACCOUNT_ADMIN = "account_admin";
  private Boolean accountAdmin;

  public static final String JSON_PROPERTY_IS_IN_APP_SUBSCRIPTION = "is_in_app_subscription";
  private Boolean isInAppSubscription;

  public static final String JSON_PROPERTY_REWIND = "rewind";
  private Rewind rewind;

  public static final String JSON_PROPERTY_INVITATIONS_COUNT = "invitations_count";
  private Integer invitationsCount;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private List<Category> categories;

  public static final String JSON_PROPERTY_CATEGORIES_PERMISSIONS = "categories_permissions";
  private Categorypermission categoriesPermissions;

  public static final String JSON_PROPERTY_USERS = "users";
  private Users users;

  public static final String JSON_PROPERTY_TEAMS = "teams";
  private Teams teams;

  public static final String JSON_PROPERTY_RIGHTS = "rights";
  private Right rights;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<Tag> tags;

  public static final String JSON_PROPERTY_K_SUITE = "k_suite";
  private KSuite kSuite;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private Capabilities capabilities;

  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private Settings settings;

  public static final String JSON_PROPERTY_PREFERENCES = "preferences";
  private Preferences1 preferences;

  public static final String JSON_PROPERTY_PACK = "pack";
  private PricingPlan pack;

  public Drive() {
  }

  public Drive id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the kDrive
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public Drive name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the kDrive
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Drive size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Maximum space (in bytes)
   * @return size
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Integer size) {
    this.size = size;
  }


  public Drive usedSize(Integer usedSize) {
    
    this.usedSize = usedSize;
    return this;
  }

   /**
   * Used space (in bytes)
   * @return usedSize
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USED_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUsedSize() {
    return usedSize;
  }


  @JsonProperty(JSON_PROPERTY_USED_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsedSize(Integer usedSize) {
    this.usedSize = usedSize;
  }


  public Drive createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Creation timestamp
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public Drive updatedAt(Integer updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Last update timestamp
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Drive inMaintenance(Boolean inMaintenance) {
    
    this.inMaintenance = inMaintenance;
    return this;
  }

   /**
   * When maintenance is activated
   * @return inMaintenance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IN_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInMaintenance() {
    return inMaintenance;
  }


  @JsonProperty(JSON_PROPERTY_IN_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInMaintenance(Boolean inMaintenance) {
    this.inMaintenance = inMaintenance;
  }


  public Drive maintenanceReason(MaintenanceReasonEnum maintenanceReason) {
    
    this.maintenanceReason = maintenanceReason;
    return this;
  }

   /**
   * Reason of Drive maintenance.&lt;note&gt;&lt;strong&gt;demo_end&lt;/strong&gt;: The demonstration period of the Drive has come to an end.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;invoice_overdue&lt;/strong&gt;: An invoice for this Drive is currently unpaid.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;not_renew&lt;/strong&gt;: This Drive has expired and must be renewed.&lt;/note&gt;
   * @return maintenanceReason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenanceReasonEnum getMaintenanceReason() {
    return maintenanceReason;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaintenanceReason(MaintenanceReasonEnum maintenanceReason) {
    this.maintenanceReason = maintenanceReason;
  }


  public Drive maintenanceAt(Integer maintenanceAt) {
    
    this.maintenanceAt = maintenanceAt;
    return this;
  }

   /**
   * When maintenance was activated at
   * @return maintenanceAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaintenanceAt() {
    return maintenanceAt;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaintenanceAt(Integer maintenanceAt) {
    this.maintenanceAt = maintenanceAt;
  }


  public Drive maintenanceTypes(List<MaintenanceType> maintenanceTypes) {
    
    this.maintenanceTypes = maintenanceTypes;
    return this;
  }

  public Drive addMaintenanceTypesItem(MaintenanceType maintenanceTypesItem) {
    if (this.maintenanceTypes == null) {
      this.maintenanceTypes = new ArrayList<>();
    }
    this.maintenanceTypes.add(maintenanceTypesItem);
    return this;
  }

   /**
   * Get maintenanceTypes
   * @return maintenanceTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MaintenanceType> getMaintenanceTypes() {
    return maintenanceTypes;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaintenanceTypes(List<MaintenanceType> maintenanceTypes) {
    this.maintenanceTypes = maintenanceTypes;
  }


  public Drive version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Backend version
   * @return version
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(String version) {
    this.version = version;
  }


  public Drive usersCount(Integer usersCount) {
    
    this.usersCount = usersCount;
    return this;
  }

   /**
   * Number of user slots used
   * @return usersCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUsersCount() {
    return usersCount;
  }


  @JsonProperty(JSON_PROPERTY_USERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsersCount(Integer usersCount) {
    this.usersCount = usersCount;
  }


  public Drive usersQuota(Integer usersQuota) {
    
    this.usersQuota = usersQuota;
    return this;
  }

   /**
   * Maximum number of users for this kdrive
   * @return usersQuota
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERS_QUOTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUsersQuota() {
    return usersQuota;
  }


  @JsonProperty(JSON_PROPERTY_USERS_QUOTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsersQuota(Integer usersQuota) {
    this.usersQuota = usersQuota;
  }


  public Drive productId(Integer productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Unique id of the kDrive product
   * @return productId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductId(Integer productId) {
    this.productId = productId;
  }


  public Drive accountId(Integer accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Id of the account in which the kDrive is
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }


  public Drive account(String account) {
    
    this.account = account;
    return this;
  }

   /**
   * Account the Drive belongs to.
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(String account) {
    this.account = account;
  }


  public Drive expiredAt(Integer expiredAt) {
    
    this.expiredAt = expiredAt;
    return this;
  }

   /**
   * Product expiration timestamp
   * @return expiredAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExpiredAt() {
    return expiredAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiredAt(Integer expiredAt) {
    this.expiredAt = expiredAt;
  }


  public Drive isLocked(Boolean isLocked) {
    
    this.isLocked = isLocked;
    return this;
  }

   /**
   * If the product is locked
   * @return isLocked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsLocked() {
    return isLocked;
  }


  @JsonProperty(JSON_PROPERTY_IS_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public Drive description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Custom description of this kDrive
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Drive billReference(String billReference) {
    
    this.billReference = billReference;
    return this;
  }

   /**
   * Reference used for billing
   * @return billReference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBillReference() {
    return billReference;
  }


  @JsonProperty(JSON_PROPERTY_BILL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillReference(String billReference) {
    this.billReference = billReference;
  }


  public Drive isDemo(Boolean isDemo) {
    
    this.isDemo = isDemo;
    return this;
  }

   /**
   * If the product is in free trial period
   * @return isDemo
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DEMO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDemo() {
    return isDemo;
  }


  @JsonProperty(JSON_PROPERTY_IS_DEMO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDemo(Boolean isDemo) {
    this.isDemo = isDemo;
  }


  public Drive role(RoleEnum role) {
    
    this.role = role;
    return this;
  }

   /**
   * Role of the current user within this kDrive
   * @return role
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public Drive accountAdmin(Boolean accountAdmin) {
    
    this.accountAdmin = accountAdmin;
    return this;
  }

   /**
   * Can be managed as admin
   * @return accountAdmin
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAccountAdmin() {
    return accountAdmin;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountAdmin(Boolean accountAdmin) {
    this.accountAdmin = accountAdmin;
  }


  public Drive isInAppSubscription(Boolean isInAppSubscription) {
    
    this.isInAppSubscription = isInAppSubscription;
    return this;
  }

   /**
   * Whether this drive has been purchased within an app store
   * @return isInAppSubscription
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_IN_APP_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsInAppSubscription() {
    return isInAppSubscription;
  }


  @JsonProperty(JSON_PROPERTY_IS_IN_APP_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsInAppSubscription(Boolean isInAppSubscription) {
    this.isInAppSubscription = isInAppSubscription;
  }


  public Drive rewind(Rewind rewind) {
    
    this.rewind = rewind;
    return this;
  }

   /**
   * Get rewind
   * @return rewind
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REWIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Rewind getRewind() {
    return rewind;
  }


  @JsonProperty(JSON_PROPERTY_REWIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRewind(Rewind rewind) {
    this.rewind = rewind;
  }


  public Drive invitationsCount(Integer invitationsCount) {
    
    this.invitationsCount = invitationsCount;
    return this;
  }

   /**
   * Number of pending invitation.
   * @return invitationsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVITATIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInvitationsCount() {
    return invitationsCount;
  }


  @JsonProperty(JSON_PROPERTY_INVITATIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvitationsCount(Integer invitationsCount) {
    this.invitationsCount = invitationsCount;
  }


  public Drive categories(List<Category> categories) {
    
    this.categories = categories;
    return this;
  }

  public Drive addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Category> getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(List<Category> categories) {
    this.categories = categories;
  }


  public Drive categoriesPermissions(Categorypermission categoriesPermissions) {
    
    this.categoriesPermissions = categoriesPermissions;
    return this;
  }

   /**
   * Get categoriesPermissions
   * @return categoriesPermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Categorypermission getCategoriesPermissions() {
    return categoriesPermissions;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoriesPermissions(Categorypermission categoriesPermissions) {
    this.categoriesPermissions = categoriesPermissions;
  }


  public Drive users(Users users) {
    
    this.users = users;
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Users getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsers(Users users) {
    this.users = users;
  }


  public Drive teams(Teams teams) {
    
    this.teams = teams;
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Teams getTeams() {
    return teams;
  }


  @JsonProperty(JSON_PROPERTY_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeams(Teams teams) {
    this.teams = teams;
  }


  public Drive rights(Right rights) {
    
    this.rights = rights;
    return this;
  }

   /**
   * Get rights
   * @return rights
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Right getRights() {
    return rights;
  }


  @JsonProperty(JSON_PROPERTY_RIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRights(Right rights) {
    this.rights = rights;
  }


  public Drive tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Drive addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Tag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public Drive kSuite(KSuite kSuite) {
    
    this.kSuite = kSuite;
    return this;
  }

   /**
   * Get kSuite
   * @return kSuite
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_K_SUITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KSuite getkSuite() {
    return kSuite;
  }


  @JsonProperty(JSON_PROPERTY_K_SUITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setkSuite(KSuite kSuite) {
    this.kSuite = kSuite;
  }


  public Drive capabilities(Capabilities capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Capabilities getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapabilities(Capabilities capabilities) {
    this.capabilities = capabilities;
  }


  public Drive settings(Settings settings) {
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Settings getSettings() {
    return settings;
  }


  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettings(Settings settings) {
    this.settings = settings;
  }


  public Drive preferences(Preferences1 preferences) {
    
    this.preferences = preferences;
    return this;
  }

   /**
   * Get preferences
   * @return preferences
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Preferences1 getPreferences() {
    return preferences;
  }


  @JsonProperty(JSON_PROPERTY_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferences(Preferences1 preferences) {
    this.preferences = preferences;
  }


  public Drive pack(PricingPlan pack) {
    
    this.pack = pack;
    return this;
  }

   /**
   * Get pack
   * @return pack
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PricingPlan getPack() {
    return pack;
  }


  @JsonProperty(JSON_PROPERTY_PACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPack(PricingPlan pack) {
    this.pack = pack;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Drive drive = (Drive) o;
    return Objects.equals(this.id, drive.id) &&
        Objects.equals(this.name, drive.name) &&
        Objects.equals(this.size, drive.size) &&
        Objects.equals(this.usedSize, drive.usedSize) &&
        Objects.equals(this.createdAt, drive.createdAt) &&
        Objects.equals(this.updatedAt, drive.updatedAt) &&
        Objects.equals(this.inMaintenance, drive.inMaintenance) &&
        Objects.equals(this.maintenanceReason, drive.maintenanceReason) &&
        Objects.equals(this.maintenanceAt, drive.maintenanceAt) &&
        Objects.equals(this.maintenanceTypes, drive.maintenanceTypes) &&
        Objects.equals(this.version, drive.version) &&
        Objects.equals(this.usersCount, drive.usersCount) &&
        Objects.equals(this.usersQuota, drive.usersQuota) &&
        Objects.equals(this.productId, drive.productId) &&
        Objects.equals(this.accountId, drive.accountId) &&
        Objects.equals(this.account, drive.account) &&
        Objects.equals(this.expiredAt, drive.expiredAt) &&
        Objects.equals(this.isLocked, drive.isLocked) &&
        Objects.equals(this.description, drive.description) &&
        Objects.equals(this.billReference, drive.billReference) &&
        Objects.equals(this.isDemo, drive.isDemo) &&
        Objects.equals(this.role, drive.role) &&
        Objects.equals(this.accountAdmin, drive.accountAdmin) &&
        Objects.equals(this.isInAppSubscription, drive.isInAppSubscription) &&
        Objects.equals(this.rewind, drive.rewind) &&
        Objects.equals(this.invitationsCount, drive.invitationsCount) &&
        Objects.equals(this.categories, drive.categories) &&
        Objects.equals(this.categoriesPermissions, drive.categoriesPermissions) &&
        Objects.equals(this.users, drive.users) &&
        Objects.equals(this.teams, drive.teams) &&
        Objects.equals(this.rights, drive.rights) &&
        Objects.equals(this.tags, drive.tags) &&
        Objects.equals(this.kSuite, drive.kSuite) &&
        Objects.equals(this.capabilities, drive.capabilities) &&
        Objects.equals(this.settings, drive.settings) &&
        Objects.equals(this.preferences, drive.preferences) &&
        Objects.equals(this.pack, drive.pack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, size, usedSize, createdAt, updatedAt, inMaintenance, maintenanceReason, maintenanceAt, maintenanceTypes, version, usersCount, usersQuota, productId, accountId, account, expiredAt, isLocked, description, billReference, isDemo, role, accountAdmin, isInAppSubscription, rewind, invitationsCount, categories, categoriesPermissions, users, teams, rights, tags, kSuite, capabilities, settings, preferences, pack);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Drive {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    usedSize: ").append(toIndentedString(usedSize)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    inMaintenance: ").append(toIndentedString(inMaintenance)).append("\n");
    sb.append("    maintenanceReason: ").append(toIndentedString(maintenanceReason)).append("\n");
    sb.append("    maintenanceAt: ").append(toIndentedString(maintenanceAt)).append("\n");
    sb.append("    maintenanceTypes: ").append(toIndentedString(maintenanceTypes)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    usersCount: ").append(toIndentedString(usersCount)).append("\n");
    sb.append("    usersQuota: ").append(toIndentedString(usersQuota)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    expiredAt: ").append(toIndentedString(expiredAt)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    billReference: ").append(toIndentedString(billReference)).append("\n");
    sb.append("    isDemo: ").append(toIndentedString(isDemo)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    accountAdmin: ").append(toIndentedString(accountAdmin)).append("\n");
    sb.append("    isInAppSubscription: ").append(toIndentedString(isInAppSubscription)).append("\n");
    sb.append("    rewind: ").append(toIndentedString(rewind)).append("\n");
    sb.append("    invitationsCount: ").append(toIndentedString(invitationsCount)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoriesPermissions: ").append(toIndentedString(categoriesPermissions)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    rights: ").append(toIndentedString(rights)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    kSuite: ").append(toIndentedString(kSuite)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    preferences: ").append(toIndentedString(preferences)).append("\n");
    sb.append("    pack: ").append(toIndentedString(pack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

