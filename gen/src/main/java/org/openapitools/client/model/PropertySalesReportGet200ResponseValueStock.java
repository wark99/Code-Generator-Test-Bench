/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertySalesReportGet200ResponseValueStock
 */
@JsonPropertyOrder({
  PropertySalesReportGet200ResponseValueStock.JSON_PROPERTY_COUNT,
  PropertySalesReportGet200ResponseValueStock.JSON_PROPERTY_TOTAL_FEES,
  PropertySalesReportGet200ResponseValueStock.JSON_PROPERTY_AVERAGE_FEE,
  PropertySalesReportGet200ResponseValueStock.JSON_PROPERTY_TOTAL_SALE_PRICE
})
@JsonTypeName("_property_sales_report_get_200_response_value_stock")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertySalesReportGet200ResponseValueStock {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_TOTAL_FEES = "total_fees";
  private Double totalFees;

  public static final String JSON_PROPERTY_AVERAGE_FEE = "average_fee";
  private Double averageFee;

  public static final String JSON_PROPERTY_TOTAL_SALE_PRICE = "total_sale_price";
  private Double totalSalePrice;

  public PropertySalesReportGet200ResponseValueStock() {
  }

  public PropertySalesReportGet200ResponseValueStock count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Number of properties in stock
   * @return count
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public PropertySalesReportGet200ResponseValueStock totalFees(Double totalFees) {
    
    this.totalFees = totalFees;
    return this;
  }

   /**
   * Total fees of stock properties
   * @return totalFees
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalFees() {
    return totalFees;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalFees(Double totalFees) {
    this.totalFees = totalFees;
  }


  public PropertySalesReportGet200ResponseValueStock averageFee(Double averageFee) {
    
    this.averageFee = averageFee;
    return this;
  }

   /**
   * Average fee for stock properties
   * @return averageFee
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVERAGE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAverageFee() {
    return averageFee;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageFee(Double averageFee) {
    this.averageFee = averageFee;
  }


  public PropertySalesReportGet200ResponseValueStock totalSalePrice(Double totalSalePrice) {
    
    this.totalSalePrice = totalSalePrice;
    return this;
  }

   /**
   * Total sale price for stock properties
   * @return totalSalePrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalSalePrice() {
    return totalSalePrice;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalSalePrice(Double totalSalePrice) {
    this.totalSalePrice = totalSalePrice;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertySalesReportGet200ResponseValueStock propertySalesReportGet200ResponseValueStock = (PropertySalesReportGet200ResponseValueStock) o;
    return Objects.equals(this.count, propertySalesReportGet200ResponseValueStock.count) &&
        Objects.equals(this.totalFees, propertySalesReportGet200ResponseValueStock.totalFees) &&
        Objects.equals(this.averageFee, propertySalesReportGet200ResponseValueStock.averageFee) &&
        Objects.equals(this.totalSalePrice, propertySalesReportGet200ResponseValueStock.totalSalePrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, totalFees, averageFee, totalSalePrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertySalesReportGet200ResponseValueStock {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    totalFees: ").append(toIndentedString(totalFees)).append("\n");
    sb.append("    averageFee: ").append(toIndentedString(averageFee)).append("\n");
    sb.append("    totalSalePrice: ").append(toIndentedString(totalSalePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

