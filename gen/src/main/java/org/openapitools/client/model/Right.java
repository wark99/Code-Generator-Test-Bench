/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Right
 */
@JsonPropertyOrder({
  Right.JSON_PROPERTY_TECHNICAL,
  Right.JSON_PROPERTY_STATISTIC,
  Right.JSON_PROPERTY_CHECK,
  Right.JSON_PROPERTY_SALE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Right {
  public static final String JSON_PROPERTY_TECHNICAL = "technical";
  private Boolean technical;

  public static final String JSON_PROPERTY_STATISTIC = "statistic";
  private Boolean statistic;

  public static final String JSON_PROPERTY_CHECK = "check";
  private Boolean check;

  public static final String JSON_PROPERTY_SALE = "sale";
  private Boolean sale;

  public Right() {
  }

  public Right technical(Boolean technical) {
    
    this.technical = technical;
    return this;
  }

   /**
   * Get technical
   * @return technical
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTechnical() {
    return technical;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnical(Boolean technical) {
    this.technical = technical;
  }


  public Right statistic(Boolean statistic) {
    
    this.statistic = statistic;
    return this;
  }

   /**
   * Get statistic
   * @return statistic
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStatistic() {
    return statistic;
  }


  @JsonProperty(JSON_PROPERTY_STATISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatistic(Boolean statistic) {
    this.statistic = statistic;
  }


  public Right check(Boolean check) {
    
    this.check = check;
    return this;
  }

   /**
   * Get check
   * @return check
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCheck() {
    return check;
  }


  @JsonProperty(JSON_PROPERTY_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheck(Boolean check) {
    this.check = check;
  }


  public Right sale(Boolean sale) {
    
    this.sale = sale;
    return this;
  }

   /**
   * Get sale
   * @return sale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSale() {
    return sale;
  }


  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSale(Boolean sale) {
    this.sale = sale;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Right right = (Right) o;
    return Objects.equals(this.technical, right.technical) &&
        Objects.equals(this.statistic, right.statistic) &&
        Objects.equals(this.check, right.check) &&
        Objects.equals(this.sale, right.sale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(technical, statistic, check, sale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Right {\n");
    sb.append("    technical: ").append(toIndentedString(technical)).append("\n");
    sb.append("    statistic: ").append(toIndentedString(statistic)).append("\n");
    sb.append("    check: ").append(toIndentedString(check)).append("\n");
    sb.append("    sale: ").append(toIndentedString(sale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

