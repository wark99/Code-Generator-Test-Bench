/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePostRequest
 */
@JsonPropertyOrder({
  CreatePostRequest.JSON_PROPERTY_CHANNEL_ID,
  CreatePostRequest.JSON_PROPERTY_MESSAGE,
  CreatePostRequest.JSON_PROPERTY_ROOT_ID,
  CreatePostRequest.JSON_PROPERTY_FILE_IDS,
  CreatePostRequest.JSON_PROPERTY_PROPS
})
@JsonTypeName("CreatePost_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreatePostRequest {
  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_ROOT_ID = "root_id";
  private String rootId;

  public static final String JSON_PROPERTY_FILE_IDS = "file_ids";
  private List<String> fileIds;

  public static final String JSON_PROPERTY_PROPS = "props";
  private Object props;

  public CreatePostRequest() {
  }

  public CreatePostRequest channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The channel ID to post in
   * @return channelId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public CreatePostRequest message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * The message contents, can be formatted with Markdown
   * @return message
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(String message) {
    this.message = message;
  }


  public CreatePostRequest rootId(String rootId) {
    
    this.rootId = rootId;
    return this;
  }

   /**
   * The post ID to comment on
   * @return rootId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRootId() {
    return rootId;
  }


  @JsonProperty(JSON_PROPERTY_ROOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootId(String rootId) {
    this.rootId = rootId;
  }


  public CreatePostRequest fileIds(List<String> fileIds) {
    
    this.fileIds = fileIds;
    return this;
  }

  public CreatePostRequest addFileIdsItem(String fileIdsItem) {
    if (this.fileIds == null) {
      this.fileIds = new ArrayList<>();
    }
    this.fileIds.add(fileIdsItem);
    return this;
  }

   /**
   * A list of file IDs to associate with the post. Note that posts are limited to 5 files maximum. Please use additional posts for more files.
   * @return fileIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFileIds() {
    return fileIds;
  }


  @JsonProperty(JSON_PROPERTY_FILE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileIds(List<String> fileIds) {
    this.fileIds = fileIds;
  }


  public CreatePostRequest props(Object props) {
    
    this.props = props;
    return this;
  }

   /**
   * A general JSON property bag to attach to the post
   * @return props
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getProps() {
    return props;
  }


  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProps(Object props) {
    this.props = props;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePostRequest createPostRequest = (CreatePostRequest) o;
    return Objects.equals(this.channelId, createPostRequest.channelId) &&
        Objects.equals(this.message, createPostRequest.message) &&
        Objects.equals(this.rootId, createPostRequest.rootId) &&
        Objects.equals(this.fileIds, createPostRequest.fileIds) &&
        Objects.equals(this.props, createPostRequest.props);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, message, rootId, fileIds, props);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePostRequest {\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    rootId: ").append(toIndentedString(rootId)).append("\n");
    sb.append("    fileIds: ").append(toIndentedString(fileIds)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

