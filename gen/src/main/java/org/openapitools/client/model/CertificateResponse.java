/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExtendedLinkedPropertyResponse;
import org.openapitools.client.model.LinkedContractorResponse;
import org.openapitools.client.model.LinkedOwnerResponse;
import org.openapitools.client.model.LinkedTenantResponse;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CertificateResponse
 */
@JsonPropertyOrder({
  CertificateResponse.JSON_PROPERTY_ID,
  CertificateResponse.JSON_PROPERTY_NEW_CERTIFICATE_INSTRUCTED,
  CertificateResponse.JSON_PROPERTY_DATE,
  CertificateResponse.JSON_PROPERTY_EXPIRY_DATE,
  CertificateResponse.JSON_PROPERTY_AGENCY_TO_DO,
  CertificateResponse.JSON_PROPERTY_PROPERTY,
  CertificateResponse.JSON_PROPERTY_COMMENTS,
  CertificateResponse.JSON_PROPERTY_CONTRACTOR,
  CertificateResponse.JSON_PROPERTY_TYPE,
  CertificateResponse.JSON_PROPERTY_LANDLORD_AGREED_TO_RENEW,
  CertificateResponse.JSON_PROPERTY_LANDLORD_INFORMED_TO_RENEW,
  CertificateResponse.JSON_PROPERTY_INVOICE_RECEIVED,
  CertificateResponse.JSON_PROPERTY_INVOICE_RECEIVED_REFERENCE,
  CertificateResponse.JSON_PROPERTY_OWNERS,
  CertificateResponse.JSON_PROPERTY_TENANTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CertificateResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NEW_CERTIFICATE_INSTRUCTED = "new_certificate_instructed";
  private MaintenancePost200ResponseValueCreatedDate newCertificateInstructed;

  public static final String JSON_PROPERTY_DATE = "date";
  private MaintenancePost200ResponseValueCreatedDate date;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private MaintenancePost200ResponseValueCreatedDate expiryDate;

  /**
   * Gets or Sets agencyToDo
   */
  public enum AgencyToDoEnum {
    YES("Yes"),
    
    NO("No"),
    
    UNKNOWN("Unknown"),
    
    NOT_APPLICABLE("Not applicable");

    private String value;

    AgencyToDoEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgencyToDoEnum fromValue(String value) {
      for (AgencyToDoEnum b : AgencyToDoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGENCY_TO_DO = "agency_to_do";
  private AgencyToDoEnum agencyToDo;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  private ExtendedLinkedPropertyResponse property;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private String comments;

  public static final String JSON_PROPERTY_CONTRACTOR = "contractor";
  private LinkedContractorResponse contractor;

  /**
   * 1 &#x3D; Gas safety, 2 &#x3D; EICR, 3 &#x3D; PAT, 4 &#x3D; EPC, 5 &#x3D; Fire fighting, 6 &#x3D; Smoke alarm, 7 &#x3D; Oil safety, 8 &#x3D; HMO, 9 &#x3D; Insurance, 10 &#x3D; Landlord registration, 11 &#x3D; Legionella, 12 &#x3D; Fire risk assessment, 13 &#x3D; Emergency lighting, 14 &#x3D; Carbon monoxide certificate, 15 &#x3D; Sprinkler system, 18 &#x3D; Service agreement, 20 &#x3D; Other, 21 &#x3D; Landlord gas boiler service, 22 &#x3D; Water system review, 23 &#x3D; Chimney sweep, 24 &#x3D; Smoke detector, 25 &#x3D; Heat detector, 26 &#x3D; Carbon monoxide detector, 27 &#x3D; Selective licensing, 28 &#x3D; Additional licensing
   */
  public enum TypeEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14),
    
    NUMBER_15(15),
    
    NUMBER_18(18),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_23(23),
    
    NUMBER_24(24),
    
    NUMBER_25(25),
    
    NUMBER_26(26),
    
    NUMBER_27(27),
    
    NUMBER_28(28);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_LANDLORD_AGREED_TO_RENEW = "landlord_agreed_to_renew";
  private MaintenancePost200ResponseValueCreatedDate landlordAgreedToRenew;

  public static final String JSON_PROPERTY_LANDLORD_INFORMED_TO_RENEW = "landlord_informed_to_renew";
  private MaintenancePost200ResponseValueCreatedDate landlordInformedToRenew;

  public static final String JSON_PROPERTY_INVOICE_RECEIVED = "invoice_received";
  private MaintenancePost200ResponseValueCreatedDate invoiceReceived;

  public static final String JSON_PROPERTY_INVOICE_RECEIVED_REFERENCE = "invoice_received_reference";
  private String invoiceReceivedReference;

  public static final String JSON_PROPERTY_OWNERS = "owners";
  private List<LinkedOwnerResponse> owners;

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  private List<LinkedTenantResponse> tenants;

  public CertificateResponse() {
  }

  public CertificateResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public CertificateResponse newCertificateInstructed(MaintenancePost200ResponseValueCreatedDate newCertificateInstructed) {
    
    this.newCertificateInstructed = newCertificateInstructed;
    return this;
  }

   /**
   * Get newCertificateInstructed
   * @return newCertificateInstructed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_CERTIFICATE_INSTRUCTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getNewCertificateInstructed() {
    return newCertificateInstructed;
  }


  @JsonProperty(JSON_PROPERTY_NEW_CERTIFICATE_INSTRUCTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewCertificateInstructed(MaintenancePost200ResponseValueCreatedDate newCertificateInstructed) {
    this.newCertificateInstructed = newCertificateInstructed;
  }


  public CertificateResponse date(MaintenancePost200ResponseValueCreatedDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(MaintenancePost200ResponseValueCreatedDate date) {
    this.date = date;
  }


  public CertificateResponse expiryDate(MaintenancePost200ResponseValueCreatedDate expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(MaintenancePost200ResponseValueCreatedDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  public CertificateResponse agencyToDo(AgencyToDoEnum agencyToDo) {
    
    this.agencyToDo = agencyToDo;
    return this;
  }

   /**
   * Get agencyToDo
   * @return agencyToDo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGENCY_TO_DO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgencyToDoEnum getAgencyToDo() {
    return agencyToDo;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_TO_DO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgencyToDo(AgencyToDoEnum agencyToDo) {
    this.agencyToDo = agencyToDo;
  }


  public CertificateResponse property(ExtendedLinkedPropertyResponse property) {
    
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExtendedLinkedPropertyResponse getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(ExtendedLinkedPropertyResponse property) {
    this.property = property;
  }


  public CertificateResponse comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(String comments) {
    this.comments = comments;
  }


  public CertificateResponse contractor(LinkedContractorResponse contractor) {
    
    this.contractor = contractor;
    return this;
  }

   /**
   * Get contractor
   * @return contractor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTRACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkedContractorResponse getContractor() {
    return contractor;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContractor(LinkedContractorResponse contractor) {
    this.contractor = contractor;
  }


  public CertificateResponse type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * 1 &#x3D; Gas safety, 2 &#x3D; EICR, 3 &#x3D; PAT, 4 &#x3D; EPC, 5 &#x3D; Fire fighting, 6 &#x3D; Smoke alarm, 7 &#x3D; Oil safety, 8 &#x3D; HMO, 9 &#x3D; Insurance, 10 &#x3D; Landlord registration, 11 &#x3D; Legionella, 12 &#x3D; Fire risk assessment, 13 &#x3D; Emergency lighting, 14 &#x3D; Carbon monoxide certificate, 15 &#x3D; Sprinkler system, 18 &#x3D; Service agreement, 20 &#x3D; Other, 21 &#x3D; Landlord gas boiler service, 22 &#x3D; Water system review, 23 &#x3D; Chimney sweep, 24 &#x3D; Smoke detector, 25 &#x3D; Heat detector, 26 &#x3D; Carbon monoxide detector, 27 &#x3D; Selective licensing, 28 &#x3D; Additional licensing
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CertificateResponse landlordAgreedToRenew(MaintenancePost200ResponseValueCreatedDate landlordAgreedToRenew) {
    
    this.landlordAgreedToRenew = landlordAgreedToRenew;
    return this;
  }

   /**
   * Get landlordAgreedToRenew
   * @return landlordAgreedToRenew
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANDLORD_AGREED_TO_RENEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getLandlordAgreedToRenew() {
    return landlordAgreedToRenew;
  }


  @JsonProperty(JSON_PROPERTY_LANDLORD_AGREED_TO_RENEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLandlordAgreedToRenew(MaintenancePost200ResponseValueCreatedDate landlordAgreedToRenew) {
    this.landlordAgreedToRenew = landlordAgreedToRenew;
  }


  public CertificateResponse landlordInformedToRenew(MaintenancePost200ResponseValueCreatedDate landlordInformedToRenew) {
    
    this.landlordInformedToRenew = landlordInformedToRenew;
    return this;
  }

   /**
   * Get landlordInformedToRenew
   * @return landlordInformedToRenew
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANDLORD_INFORMED_TO_RENEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getLandlordInformedToRenew() {
    return landlordInformedToRenew;
  }


  @JsonProperty(JSON_PROPERTY_LANDLORD_INFORMED_TO_RENEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLandlordInformedToRenew(MaintenancePost200ResponseValueCreatedDate landlordInformedToRenew) {
    this.landlordInformedToRenew = landlordInformedToRenew;
  }


  public CertificateResponse invoiceReceived(MaintenancePost200ResponseValueCreatedDate invoiceReceived) {
    
    this.invoiceReceived = invoiceReceived;
    return this;
  }

   /**
   * Get invoiceReceived
   * @return invoiceReceived
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getInvoiceReceived() {
    return invoiceReceived;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceReceived(MaintenancePost200ResponseValueCreatedDate invoiceReceived) {
    this.invoiceReceived = invoiceReceived;
  }


  public CertificateResponse invoiceReceivedReference(String invoiceReceivedReference) {
    
    this.invoiceReceivedReference = invoiceReceivedReference;
    return this;
  }

   /**
   * Get invoiceReceivedReference
   * @return invoiceReceivedReference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_RECEIVED_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceReceivedReference() {
    return invoiceReceivedReference;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_RECEIVED_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceReceivedReference(String invoiceReceivedReference) {
    this.invoiceReceivedReference = invoiceReceivedReference;
  }


  public CertificateResponse owners(List<LinkedOwnerResponse> owners) {
    
    this.owners = owners;
    return this;
  }

  public CertificateResponse addOwnersItem(LinkedOwnerResponse ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedOwnerResponse> getOwners() {
    return owners;
  }


  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwners(List<LinkedOwnerResponse> owners) {
    this.owners = owners;
  }


  public CertificateResponse tenants(List<LinkedTenantResponse> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public CertificateResponse addTenantsItem(LinkedTenantResponse tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Get tenants
   * @return tenants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedTenantResponse> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenants(List<LinkedTenantResponse> tenants) {
    this.tenants = tenants;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateResponse certificateResponse = (CertificateResponse) o;
    return Objects.equals(this.id, certificateResponse.id) &&
        Objects.equals(this.newCertificateInstructed, certificateResponse.newCertificateInstructed) &&
        Objects.equals(this.date, certificateResponse.date) &&
        Objects.equals(this.expiryDate, certificateResponse.expiryDate) &&
        Objects.equals(this.agencyToDo, certificateResponse.agencyToDo) &&
        Objects.equals(this.property, certificateResponse.property) &&
        Objects.equals(this.comments, certificateResponse.comments) &&
        Objects.equals(this.contractor, certificateResponse.contractor) &&
        Objects.equals(this.type, certificateResponse.type) &&
        Objects.equals(this.landlordAgreedToRenew, certificateResponse.landlordAgreedToRenew) &&
        Objects.equals(this.landlordInformedToRenew, certificateResponse.landlordInformedToRenew) &&
        Objects.equals(this.invoiceReceived, certificateResponse.invoiceReceived) &&
        Objects.equals(this.invoiceReceivedReference, certificateResponse.invoiceReceivedReference) &&
        Objects.equals(this.owners, certificateResponse.owners) &&
        Objects.equals(this.tenants, certificateResponse.tenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, newCertificateInstructed, date, expiryDate, agencyToDo, property, comments, contractor, type, landlordAgreedToRenew, landlordInformedToRenew, invoiceReceived, invoiceReceivedReference, owners, tenants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    newCertificateInstructed: ").append(toIndentedString(newCertificateInstructed)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    agencyToDo: ").append(toIndentedString(agencyToDo)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    contractor: ").append(toIndentedString(contractor)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    landlordAgreedToRenew: ").append(toIndentedString(landlordAgreedToRenew)).append("\n");
    sb.append("    landlordInformedToRenew: ").append(toIndentedString(landlordInformedToRenew)).append("\n");
    sb.append("    invoiceReceived: ").append(toIndentedString(invoiceReceived)).append("\n");
    sb.append("    invoiceReceivedReference: ").append(toIndentedString(invoiceReceivedReference)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

