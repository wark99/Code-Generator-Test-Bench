/*
 * ClosedNetwork-DEV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateStoryRequest
 */
@JsonPropertyOrder({
  CreateStoryRequest.JSON_PROPERTY_VISIBILITY,
  CreateStoryRequest.JSON_PROPERTY_CONTENT_TYPE,
  CreateStoryRequest.JSON_PROPERTY_CONTENT_URL,
  CreateStoryRequest.JSON_PROPERTY_CAPTION,
  CreateStoryRequest.JSON_PROPERTY_TAGS,
  CreateStoryRequest.JSON_PROPERTY_COLLEGE,
  CreateStoryRequest.JSON_PROPERTY_EXPIRES_IN
})
@JsonTypeName("createStoryRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:50.441407861Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateStoryRequest {
  /**
   * Gets or Sets visibility
   */
  public enum VisibilityEnum {
    PUBLIC("Public"),
    
    FRIENDS_ONLY("Friends-Only");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility;

  /**
   * Gets or Sets contentType
   */
  public enum ContentTypeEnum {
    IMAGE("Image"),
    
    VIDEO("Video");

    private String value;

    ContentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ContentTypeEnum fromValue(String value) {
      for (ContentTypeEnum b : ContentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
  private ContentTypeEnum contentType;

  public static final String JSON_PROPERTY_CONTENT_URL = "contentUrl";
  private String contentUrl;

  public static final String JSON_PROPERTY_CAPTION = "caption";
  private String caption;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_COLLEGE = "college";
  private List<String> college = new ArrayList<>();

  public static final String JSON_PROPERTY_EXPIRES_IN = "expiresIn";
  private Integer expiresIn;

  public CreateStoryRequest() {
  }

  public CreateStoryRequest visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public CreateStoryRequest contentType(ContentTypeEnum contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ContentTypeEnum getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentType(ContentTypeEnum contentType) {
    this.contentType = contentType;
  }


  public CreateStoryRequest contentUrl(String contentUrl) {
    
    this.contentUrl = contentUrl;
    return this;
  }

   /**
   * Get contentUrl
   * @return contentUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContentUrl() {
    return contentUrl;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
  }


  public CreateStoryRequest caption(String caption) {
    
    this.caption = caption;
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCaption() {
    return caption;
  }


  @JsonProperty(JSON_PROPERTY_CAPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaption(String caption) {
    this.caption = caption;
  }


  public CreateStoryRequest tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CreateStoryRequest addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Description :- Array of Tag Ids
   * @return tags
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CreateStoryRequest college(List<String> college) {
    
    this.college = college;
    return this;
  }

  public CreateStoryRequest addCollegeItem(String collegeItem) {
    if (this.college == null) {
      this.college = new ArrayList<>();
    }
    this.college.add(collegeItem);
    return this;
  }

   /**
   * Description :- Array of College Ids
   * @return college
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COLLEGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getCollege() {
    return college;
  }


  @JsonProperty(JSON_PROPERTY_COLLEGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCollege(List<String> college) {
    this.college = college;
  }


  public CreateStoryRequest expiresIn(Integer expiresIn) {
    
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Description :- Number of Hours
   * @return expiresIn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExpiresIn() {
    return expiresIn;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStoryRequest createStoryRequest = (CreateStoryRequest) o;
    return Objects.equals(this.visibility, createStoryRequest.visibility) &&
        Objects.equals(this.contentType, createStoryRequest.contentType) &&
        Objects.equals(this.contentUrl, createStoryRequest.contentUrl) &&
        Objects.equals(this.caption, createStoryRequest.caption) &&
        Objects.equals(this.tags, createStoryRequest.tags) &&
        Objects.equals(this.college, createStoryRequest.college) &&
        Objects.equals(this.expiresIn, createStoryRequest.expiresIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(visibility, contentType, contentUrl, caption, tags, college, expiresIn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStoryRequest {\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    college: ").append(toIndentedString(college)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

