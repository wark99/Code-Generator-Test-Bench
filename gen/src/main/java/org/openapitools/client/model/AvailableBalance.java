/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AvailableBalance
 */
@JsonPropertyOrder({
  AvailableBalance.JSON_PROPERTY_ID,
  AvailableBalance.JSON_PROPERTY_REAL_ACCOUNT_NUMBER_LAST4,
  AvailableBalance.JSON_PROPERTY_AVAILABLE_BALANCE,
  AvailableBalance.JSON_PROPERTY_AVAILABLE_BALANCE_DATE,
  AvailableBalance.JSON_PROPERTY_CLEARED_BALANCE,
  AvailableBalance.JSON_PROPERTY_CLEARED_BALANCE_DATE,
  AvailableBalance.JSON_PROPERTY_AGGREGATION_STATUS_CODE,
  AvailableBalance.JSON_PROPERTY_CURRENCY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AvailableBalance {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_REAL_ACCOUNT_NUMBER_LAST4 = "realAccountNumberLast4";
  private String realAccountNumberLast4;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE_DATE = "availableBalanceDate";
  private Long availableBalanceDate;

  public static final String JSON_PROPERTY_CLEARED_BALANCE = "clearedBalance";
  private BigDecimal clearedBalance;

  public static final String JSON_PROPERTY_CLEARED_BALANCE_DATE = "clearedBalanceDate";
  private Long clearedBalanceDate;

  public static final String JSON_PROPERTY_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  private Integer aggregationStatusCode;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public AvailableBalance() {
  }

  public AvailableBalance id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * A customer ID represented as a number. See Add Customer API for how to create a customer ID.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public AvailableBalance realAccountNumberLast4(String realAccountNumberLast4) {
    
    this.realAccountNumberLast4 = realAccountNumberLast4;
    return this;
  }

   /**
   * The last 4 digits of the ACH account number
   * @return realAccountNumberLast4
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REAL_ACCOUNT_NUMBER_LAST4)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRealAccountNumberLast4() {
    return realAccountNumberLast4;
  }


  @JsonProperty(JSON_PROPERTY_REAL_ACCOUNT_NUMBER_LAST4)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRealAccountNumberLast4(String realAccountNumberLast4) {
    this.realAccountNumberLast4 = realAccountNumberLast4;
  }


  public AvailableBalance availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * The available balance of the account
   * @return availableBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public AvailableBalance availableBalanceDate(Long availableBalanceDate) {
    
    this.availableBalanceDate = availableBalanceDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return availableBalanceDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAvailableBalanceDate() {
    return availableBalanceDate;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailableBalanceDate(Long availableBalanceDate) {
    this.availableBalanceDate = availableBalanceDate;
  }


  public AvailableBalance clearedBalance(BigDecimal clearedBalance) {
    
    this.clearedBalance = clearedBalance;
    return this;
  }

   /**
   * The cleared balance of the account. Also referred as posted balance, current balance, ledger balance
   * @return clearedBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLEARED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getClearedBalance() {
    return clearedBalance;
  }


  @JsonProperty(JSON_PROPERTY_CLEARED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClearedBalance(BigDecimal clearedBalance) {
    this.clearedBalance = clearedBalance;
  }


  public AvailableBalance clearedBalanceDate(Long clearedBalanceDate) {
    
    this.clearedBalanceDate = clearedBalanceDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return clearedBalanceDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLEARED_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getClearedBalanceDate() {
    return clearedBalanceDate;
  }


  @JsonProperty(JSON_PROPERTY_CLEARED_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClearedBalanceDate(Long clearedBalanceDate) {
    this.clearedBalanceDate = clearedBalanceDate;
  }


  public AvailableBalance aggregationStatusCode(Integer aggregationStatusCode) {
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt (see [Aggregation Status Codes](https://developer.mastercard.com/open-banking-us/documentation/products/manage/account-aggregation/#aggregation-status-codes)). Won&#39;t be present until you have run your first aggregation for the account.
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public AvailableBalance currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailableBalance availableBalance = (AvailableBalance) o;
    return Objects.equals(this.id, availableBalance.id) &&
        Objects.equals(this.realAccountNumberLast4, availableBalance.realAccountNumberLast4) &&
        Objects.equals(this.availableBalance, availableBalance.availableBalance) &&
        Objects.equals(this.availableBalanceDate, availableBalance.availableBalanceDate) &&
        Objects.equals(this.clearedBalance, availableBalance.clearedBalance) &&
        Objects.equals(this.clearedBalanceDate, availableBalance.clearedBalanceDate) &&
        Objects.equals(this.aggregationStatusCode, availableBalance.aggregationStatusCode) &&
        Objects.equals(this.currency, availableBalance.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realAccountNumberLast4, availableBalance, availableBalanceDate, clearedBalance, clearedBalanceDate, aggregationStatusCode, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailableBalance {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realAccountNumberLast4: ").append(toIndentedString(realAccountNumberLast4)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    availableBalanceDate: ").append(toIndentedString(availableBalanceDate)).append("\n");
    sb.append("    clearedBalance: ").append(toIndentedString(clearedBalance)).append("\n");
    sb.append("    clearedBalanceDate: ").append(toIndentedString(clearedBalanceDate)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

