/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.LinkedBuyerResponse;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import org.openapitools.client.model.PropertyInvoiceOwnerBalancePostRequestProperty;
import org.openapitools.client.model.RelatedOfferResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AcceptedOfferResponse
 */
@JsonPropertyOrder({
  AcceptedOfferResponse.JSON_PROPERTY_PROPERTY,
  AcceptedOfferResponse.JSON_PROPERTY_PRICE,
  AcceptedOfferResponse.JSON_PROPERTY_OFFER_DATE,
  AcceptedOfferResponse.JSON_PROPERTY_STATUS,
  AcceptedOfferResponse.JSON_PROPERTY_ID,
  AcceptedOfferResponse.JSON_PROPERTY_BUYER,
  AcceptedOfferResponse.JSON_PROPERTY_ACCEPTED_DATE,
  AcceptedOfferResponse.JSON_PROPERTY_REJECTED_DATE,
  AcceptedOfferResponse.JSON_PROPERTY_WITHDRAWN_DATE,
  AcceptedOfferResponse.JSON_PROPERTY_INCLUDE_REQUIREMENTS,
  AcceptedOfferResponse.JSON_PROPERTY_EXCLUDE_REQUIREMENTS,
  AcceptedOfferResponse.JSON_PROPERTY_COMMENTS,
  AcceptedOfferResponse.JSON_PROPERTY_PROPOSED_EXCHANGED_DATE,
  AcceptedOfferResponse.JSON_PROPERTY_CREATED,
  AcceptedOfferResponse.JSON_PROPERTY_UPDATED,
  AcceptedOfferResponse.JSON_PROPERTY_FEES_EXCLUDING_VAT,
  AcceptedOfferResponse.JSON_PROPERTY_BUYER_PROCESS_STATUS,
  AcceptedOfferResponse.JSON_PROPERTY_RENEGOTIATED_FROM_OFFER,
  AcceptedOfferResponse.JSON_PROPERTY_RENEGOTIATED_TO_OFFER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AcceptedOfferResponse {
  public static final String JSON_PROPERTY_PROPERTY = "property";
  private PropertyInvoiceOwnerBalancePostRequestProperty property;

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_OFFER_DATE = "offer_date";
  private MaintenancePost200ResponseValueCreatedDate offerDate;

  /**
   * 1 &#x3D; Pending, 2 &#x3D; Withdrawn, 3 &#x3D; Rejected, 4 &#x3D; Accepted
   */
  public enum StatusEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_BUYER = "buyer";
  private LinkedBuyerResponse buyer;

  public static final String JSON_PROPERTY_ACCEPTED_DATE = "accepted_date";
  private MaintenancePost200ResponseValueCreatedDate acceptedDate;

  public static final String JSON_PROPERTY_REJECTED_DATE = "rejected_date";
  private MaintenancePost200ResponseValueCreatedDate rejectedDate;

  public static final String JSON_PROPERTY_WITHDRAWN_DATE = "withdrawn_date";
  private MaintenancePost200ResponseValueCreatedDate withdrawnDate;

  public static final String JSON_PROPERTY_INCLUDE_REQUIREMENTS = "include_requirements";
  private String includeRequirements;

  public static final String JSON_PROPERTY_EXCLUDE_REQUIREMENTS = "exclude_requirements";
  private String excludeRequirements;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private String comments;

  public static final String JSON_PROPERTY_PROPOSED_EXCHANGED_DATE = "proposed_exchanged_date";
  private MaintenancePost200ResponseValueCreatedDate proposedExchangedDate;

  public static final String JSON_PROPERTY_CREATED = "created";
  private MaintenancePost200ResponseValueCreatedDate created;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private MaintenancePost200ResponseValueCreatedDate updated;

  public static final String JSON_PROPERTY_FEES_EXCLUDING_VAT = "fees_excluding_vat";
  private Double feesExcludingVat;

  /**
   * Gets or Sets buyerProcessStatus
   */
  public enum BuyerProcessStatusEnum {
    COMPLETE("complete"),
    
    CURRENT("current");

    private String value;

    BuyerProcessStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BuyerProcessStatusEnum fromValue(String value) {
      for (BuyerProcessStatusEnum b : BuyerProcessStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BUYER_PROCESS_STATUS = "buyer_process_status";
  private BuyerProcessStatusEnum buyerProcessStatus;

  public static final String JSON_PROPERTY_RENEGOTIATED_FROM_OFFER = "renegotiated_from_offer";
  private RelatedOfferResponse renegotiatedFromOffer;

  public static final String JSON_PROPERTY_RENEGOTIATED_TO_OFFER = "renegotiated_to_offer";
  private RelatedOfferResponse renegotiatedToOffer;

  public AcceptedOfferResponse() {
  }

  public AcceptedOfferResponse property(PropertyInvoiceOwnerBalancePostRequestProperty property) {
    
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyInvoiceOwnerBalancePostRequestProperty getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(PropertyInvoiceOwnerBalancePostRequestProperty property) {
    this.property = property;
  }


  public AcceptedOfferResponse price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public AcceptedOfferResponse offerDate(MaintenancePost200ResponseValueCreatedDate offerDate) {
    
    this.offerDate = offerDate;
    return this;
  }

   /**
   * Get offerDate
   * @return offerDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getOfferDate() {
    return offerDate;
  }


  @JsonProperty(JSON_PROPERTY_OFFER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfferDate(MaintenancePost200ResponseValueCreatedDate offerDate) {
    this.offerDate = offerDate;
  }


  public AcceptedOfferResponse status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * 1 &#x3D; Pending, 2 &#x3D; Withdrawn, 3 &#x3D; Rejected, 4 &#x3D; Accepted
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public AcceptedOfferResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public AcceptedOfferResponse buyer(LinkedBuyerResponse buyer) {
    
    this.buyer = buyer;
    return this;
  }

   /**
   * Get buyer
   * @return buyer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkedBuyerResponse getBuyer() {
    return buyer;
  }


  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyer(LinkedBuyerResponse buyer) {
    this.buyer = buyer;
  }


  public AcceptedOfferResponse acceptedDate(MaintenancePost200ResponseValueCreatedDate acceptedDate) {
    
    this.acceptedDate = acceptedDate;
    return this;
  }

   /**
   * Get acceptedDate
   * @return acceptedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCEPTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getAcceptedDate() {
    return acceptedDate;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptedDate(MaintenancePost200ResponseValueCreatedDate acceptedDate) {
    this.acceptedDate = acceptedDate;
  }


  public AcceptedOfferResponse rejectedDate(MaintenancePost200ResponseValueCreatedDate rejectedDate) {
    
    this.rejectedDate = rejectedDate;
    return this;
  }

   /**
   * Get rejectedDate
   * @return rejectedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REJECTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getRejectedDate() {
    return rejectedDate;
  }


  @JsonProperty(JSON_PROPERTY_REJECTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRejectedDate(MaintenancePost200ResponseValueCreatedDate rejectedDate) {
    this.rejectedDate = rejectedDate;
  }


  public AcceptedOfferResponse withdrawnDate(MaintenancePost200ResponseValueCreatedDate withdrawnDate) {
    
    this.withdrawnDate = withdrawnDate;
    return this;
  }

   /**
   * Get withdrawnDate
   * @return withdrawnDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WITHDRAWN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getWithdrawnDate() {
    return withdrawnDate;
  }


  @JsonProperty(JSON_PROPERTY_WITHDRAWN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWithdrawnDate(MaintenancePost200ResponseValueCreatedDate withdrawnDate) {
    this.withdrawnDate = withdrawnDate;
  }


  public AcceptedOfferResponse includeRequirements(String includeRequirements) {
    
    this.includeRequirements = includeRequirements;
    return this;
  }

   /**
   * Get includeRequirements
   * @return includeRequirements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncludeRequirements() {
    return includeRequirements;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeRequirements(String includeRequirements) {
    this.includeRequirements = includeRequirements;
  }


  public AcceptedOfferResponse excludeRequirements(String excludeRequirements) {
    
    this.excludeRequirements = excludeRequirements;
    return this;
  }

   /**
   * Get excludeRequirements
   * @return excludeRequirements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExcludeRequirements() {
    return excludeRequirements;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeRequirements(String excludeRequirements) {
    this.excludeRequirements = excludeRequirements;
  }


  public AcceptedOfferResponse comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(String comments) {
    this.comments = comments;
  }


  public AcceptedOfferResponse proposedExchangedDate(MaintenancePost200ResponseValueCreatedDate proposedExchangedDate) {
    
    this.proposedExchangedDate = proposedExchangedDate;
    return this;
  }

   /**
   * Get proposedExchangedDate
   * @return proposedExchangedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPOSED_EXCHANGED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getProposedExchangedDate() {
    return proposedExchangedDate;
  }


  @JsonProperty(JSON_PROPERTY_PROPOSED_EXCHANGED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProposedExchangedDate(MaintenancePost200ResponseValueCreatedDate proposedExchangedDate) {
    this.proposedExchangedDate = proposedExchangedDate;
  }


  public AcceptedOfferResponse created(MaintenancePost200ResponseValueCreatedDate created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(MaintenancePost200ResponseValueCreatedDate created) {
    this.created = created;
  }


  public AcceptedOfferResponse updated(MaintenancePost200ResponseValueCreatedDate updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdated(MaintenancePost200ResponseValueCreatedDate updated) {
    this.updated = updated;
  }


  public AcceptedOfferResponse feesExcludingVat(Double feesExcludingVat) {
    
    this.feesExcludingVat = feesExcludingVat;
    return this;
  }

   /**
   * Get feesExcludingVat
   * @return feesExcludingVat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEES_EXCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFeesExcludingVat() {
    return feesExcludingVat;
  }


  @JsonProperty(JSON_PROPERTY_FEES_EXCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeesExcludingVat(Double feesExcludingVat) {
    this.feesExcludingVat = feesExcludingVat;
  }


  public AcceptedOfferResponse buyerProcessStatus(BuyerProcessStatusEnum buyerProcessStatus) {
    
    this.buyerProcessStatus = buyerProcessStatus;
    return this;
  }

   /**
   * Get buyerProcessStatus
   * @return buyerProcessStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUYER_PROCESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuyerProcessStatusEnum getBuyerProcessStatus() {
    return buyerProcessStatus;
  }


  @JsonProperty(JSON_PROPERTY_BUYER_PROCESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyerProcessStatus(BuyerProcessStatusEnum buyerProcessStatus) {
    this.buyerProcessStatus = buyerProcessStatus;
  }


  public AcceptedOfferResponse renegotiatedFromOffer(RelatedOfferResponse renegotiatedFromOffer) {
    
    this.renegotiatedFromOffer = renegotiatedFromOffer;
    return this;
  }

   /**
   * Get renegotiatedFromOffer
   * @return renegotiatedFromOffer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RENEGOTIATED_FROM_OFFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelatedOfferResponse getRenegotiatedFromOffer() {
    return renegotiatedFromOffer;
  }


  @JsonProperty(JSON_PROPERTY_RENEGOTIATED_FROM_OFFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRenegotiatedFromOffer(RelatedOfferResponse renegotiatedFromOffer) {
    this.renegotiatedFromOffer = renegotiatedFromOffer;
  }


  public AcceptedOfferResponse renegotiatedToOffer(RelatedOfferResponse renegotiatedToOffer) {
    
    this.renegotiatedToOffer = renegotiatedToOffer;
    return this;
  }

   /**
   * Get renegotiatedToOffer
   * @return renegotiatedToOffer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RENEGOTIATED_TO_OFFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelatedOfferResponse getRenegotiatedToOffer() {
    return renegotiatedToOffer;
  }


  @JsonProperty(JSON_PROPERTY_RENEGOTIATED_TO_OFFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRenegotiatedToOffer(RelatedOfferResponse renegotiatedToOffer) {
    this.renegotiatedToOffer = renegotiatedToOffer;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AcceptedOfferResponse acceptedOfferResponse = (AcceptedOfferResponse) o;
    return Objects.equals(this.property, acceptedOfferResponse.property) &&
        Objects.equals(this.price, acceptedOfferResponse.price) &&
        Objects.equals(this.offerDate, acceptedOfferResponse.offerDate) &&
        Objects.equals(this.status, acceptedOfferResponse.status) &&
        Objects.equals(this.id, acceptedOfferResponse.id) &&
        Objects.equals(this.buyer, acceptedOfferResponse.buyer) &&
        Objects.equals(this.acceptedDate, acceptedOfferResponse.acceptedDate) &&
        Objects.equals(this.rejectedDate, acceptedOfferResponse.rejectedDate) &&
        Objects.equals(this.withdrawnDate, acceptedOfferResponse.withdrawnDate) &&
        Objects.equals(this.includeRequirements, acceptedOfferResponse.includeRequirements) &&
        Objects.equals(this.excludeRequirements, acceptedOfferResponse.excludeRequirements) &&
        Objects.equals(this.comments, acceptedOfferResponse.comments) &&
        Objects.equals(this.proposedExchangedDate, acceptedOfferResponse.proposedExchangedDate) &&
        Objects.equals(this.created, acceptedOfferResponse.created) &&
        Objects.equals(this.updated, acceptedOfferResponse.updated) &&
        Objects.equals(this.feesExcludingVat, acceptedOfferResponse.feesExcludingVat) &&
        Objects.equals(this.buyerProcessStatus, acceptedOfferResponse.buyerProcessStatus) &&
        Objects.equals(this.renegotiatedFromOffer, acceptedOfferResponse.renegotiatedFromOffer) &&
        Objects.equals(this.renegotiatedToOffer, acceptedOfferResponse.renegotiatedToOffer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(property, price, offerDate, status, id, buyer, acceptedDate, rejectedDate, withdrawnDate, includeRequirements, excludeRequirements, comments, proposedExchangedDate, created, updated, feesExcludingVat, buyerProcessStatus, renegotiatedFromOffer, renegotiatedToOffer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AcceptedOfferResponse {\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    offerDate: ").append(toIndentedString(offerDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    acceptedDate: ").append(toIndentedString(acceptedDate)).append("\n");
    sb.append("    rejectedDate: ").append(toIndentedString(rejectedDate)).append("\n");
    sb.append("    withdrawnDate: ").append(toIndentedString(withdrawnDate)).append("\n");
    sb.append("    includeRequirements: ").append(toIndentedString(includeRequirements)).append("\n");
    sb.append("    excludeRequirements: ").append(toIndentedString(excludeRequirements)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    proposedExchangedDate: ").append(toIndentedString(proposedExchangedDate)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    feesExcludingVat: ").append(toIndentedString(feesExcludingVat)).append("\n");
    sb.append("    buyerProcessStatus: ").append(toIndentedString(buyerProcessStatus)).append("\n");
    sb.append("    renegotiatedFromOffer: ").append(toIndentedString(renegotiatedFromOffer)).append("\n");
    sb.append("    renegotiatedToOffer: ").append(toIndentedString(renegotiatedToOffer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

