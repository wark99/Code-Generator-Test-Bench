/*
 * AIRBIT Device Auto-registration REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CompanyId;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConfigCreateScheme
 */
@JsonPropertyOrder({
  ConfigCreateScheme.JSON_PROPERTY_COMPANY_ID,
  ConfigCreateScheme.JSON_PROPERTY_NAME,
  ConfigCreateScheme.JSON_PROPERTY_MODEL_ID,
  ConfigCreateScheme.JSON_PROPERTY_FIRMWARE,
  ConfigCreateScheme.JSON_PROPERTY_CONFIG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:58.353940352Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ConfigCreateScheme {
  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private CompanyId companyId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MODEL_ID = "model_id";
  private Integer modelId;

  public static final String JSON_PROPERTY_FIRMWARE = "firmware";
  private String firmware;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private String config;

  public ConfigCreateScheme() {
  }

  public ConfigCreateScheme companyId(CompanyId companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyId getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(CompanyId companyId) {
    this.companyId = companyId;
  }


  public ConfigCreateScheme name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ConfigCreateScheme modelId(Integer modelId) {
    
    this.modelId = modelId;
    return this;
  }

   /**
   * the device model identifier
   * @return modelId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getModelId() {
    return modelId;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModelId(Integer modelId) {
    this.modelId = modelId;
  }


  public ConfigCreateScheme firmware(String firmware) {
    
    this.firmware = firmware;
    return this;
  }

   /**
   * the device firmware version
   * @return firmware
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirmware() {
    return firmware;
  }


  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirmware(String firmware) {
    this.firmware = firmware;
  }


  public ConfigCreateScheme config(String config) {
    
    this.config = config;
    return this;
  }

   /**
   * the device base64 encoded configuration
   * @return config
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(String config) {
    this.config = config;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigCreateScheme configCreateScheme = (ConfigCreateScheme) o;
    return Objects.equals(this.companyId, configCreateScheme.companyId) &&
        Objects.equals(this.name, configCreateScheme.name) &&
        Objects.equals(this.modelId, configCreateScheme.modelId) &&
        Objects.equals(this.firmware, configCreateScheme.firmware) &&
        Objects.equals(this.config, configCreateScheme.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, name, modelId, firmware, config);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigCreateScheme {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

