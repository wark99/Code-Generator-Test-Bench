/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountGet200ResponseOneOfAllOfReferenceChecksInner
 */
@JsonPropertyOrder({
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_ID,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_FIRSTNAME,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_LASTNAME,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_RELATIONSHIP,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_INVITATION_MESSAGE,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_APPROVED,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_SENT_DATE,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_RESPONSE_DATE,
  AccountGet200ResponseOneOfAllOfReferenceChecksInner.JSON_PROPERTY_APPROVAL_DATE
})
@JsonTypeName("_account_get_200_response_oneOf_allOf_reference_checks_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountGet200ResponseOneOfAllOfReferenceChecksInner {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_FIRSTNAME = "firstname";
  private String firstname;

  public static final String JSON_PROPERTY_LASTNAME = "lastname";
  private String lastname;

  /**
   * Gets or Sets relationship
   */
  public enum RelationshipEnum {
    FRIEND("friend"),
    
    PROFESSIONAL("professional");

    private String value;

    RelationshipEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RelationshipEnum fromValue(String value) {
      for (RelationshipEnum b : RelationshipEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RELATIONSHIP = "relationship";
  private RelationshipEnum relationship;

  public static final String JSON_PROPERTY_INVITATION_MESSAGE = "invitation_message";
  private String invitationMessage;

  public static final String JSON_PROPERTY_APPROVED = "approved";
  private Integer approved;

  public static final String JSON_PROPERTY_SENT_DATE = "sent_date";
  private String sentDate;

  public static final String JSON_PROPERTY_RESPONSE_DATE = "response_date";
  private String responseDate;

  public static final String JSON_PROPERTY_APPROVAL_DATE = "approval_date";
  private String approvalDate;

  public AccountGet200ResponseOneOfAllOfReferenceChecksInner() {
  }

  public AccountGet200ResponseOneOfAllOfReferenceChecksInner id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner firstname(String firstname) {
    
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstname() {
    return firstname;
  }


  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner lastname(String lastname) {
    
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastname() {
    return lastname;
  }


  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner relationship(RelationshipEnum relationship) {
    
    this.relationship = relationship;
    return this;
  }

   /**
   * Get relationship
   * @return relationship
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelationshipEnum getRelationship() {
    return relationship;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationship(RelationshipEnum relationship) {
    this.relationship = relationship;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner invitationMessage(String invitationMessage) {
    
    this.invitationMessage = invitationMessage;
    return this;
  }

   /**
   * Get invitationMessage
   * @return invitationMessage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVITATION_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvitationMessage() {
    return invitationMessage;
  }


  @JsonProperty(JSON_PROPERTY_INVITATION_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvitationMessage(String invitationMessage) {
    this.invitationMessage = invitationMessage;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner approved(Integer approved) {
    
    this.approved = approved;
    return this;
  }

   /**
   * Get approved
   * @return approved
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getApproved() {
    return approved;
  }


  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproved(Integer approved) {
    this.approved = approved;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner sentDate(String sentDate) {
    
    this.sentDate = sentDate;
    return this;
  }

   /**
   * Get sentDate
   * @return sentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSentDate() {
    return sentDate;
  }


  @JsonProperty(JSON_PROPERTY_SENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSentDate(String sentDate) {
    this.sentDate = sentDate;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner responseDate(String responseDate) {
    
    this.responseDate = responseDate;
    return this;
  }

   /**
   * Get responseDate
   * @return responseDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseDate() {
    return responseDate;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseDate(String responseDate) {
    this.responseDate = responseDate;
  }


  public AccountGet200ResponseOneOfAllOfReferenceChecksInner approvalDate(String approvalDate) {
    
    this.approvalDate = approvalDate;
    return this;
  }

   /**
   * Get approvalDate
   * @return approvalDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApprovalDate() {
    return approvalDate;
  }


  @JsonProperty(JSON_PROPERTY_APPROVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovalDate(String approvalDate) {
    this.approvalDate = approvalDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountGet200ResponseOneOfAllOfReferenceChecksInner accountGet200ResponseOneOfAllOfReferenceChecksInner = (AccountGet200ResponseOneOfAllOfReferenceChecksInner) o;
    return Objects.equals(this.id, accountGet200ResponseOneOfAllOfReferenceChecksInner.id) &&
        Objects.equals(this.firstname, accountGet200ResponseOneOfAllOfReferenceChecksInner.firstname) &&
        Objects.equals(this.lastname, accountGet200ResponseOneOfAllOfReferenceChecksInner.lastname) &&
        Objects.equals(this.relationship, accountGet200ResponseOneOfAllOfReferenceChecksInner.relationship) &&
        Objects.equals(this.invitationMessage, accountGet200ResponseOneOfAllOfReferenceChecksInner.invitationMessage) &&
        Objects.equals(this.approved, accountGet200ResponseOneOfAllOfReferenceChecksInner.approved) &&
        Objects.equals(this.sentDate, accountGet200ResponseOneOfAllOfReferenceChecksInner.sentDate) &&
        Objects.equals(this.responseDate, accountGet200ResponseOneOfAllOfReferenceChecksInner.responseDate) &&
        Objects.equals(this.approvalDate, accountGet200ResponseOneOfAllOfReferenceChecksInner.approvalDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstname, lastname, relationship, invitationMessage, approved, sentDate, responseDate, approvalDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountGet200ResponseOneOfAllOfReferenceChecksInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("    invitationMessage: ").append(toIndentedString(invitationMessage)).append("\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    sentDate: ").append(toIndentedString(sentDate)).append("\n");
    sb.append("    responseDate: ").append(toIndentedString(responseDate)).append("\n");
    sb.append("    approvalDate: ").append(toIndentedString(approvalDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

