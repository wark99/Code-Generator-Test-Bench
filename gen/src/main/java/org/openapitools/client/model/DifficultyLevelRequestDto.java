/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DifficultyLevelRequestDto
 */
@JsonPropertyOrder({
  DifficultyLevelRequestDto.JSON_PROPERTY_DIFFICULTY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class DifficultyLevelRequestDto {
  /**
   * Gets or Sets difficulty
   */
  public enum DifficultyEnum {
    EASY("EASY"),
    
    MEDIUM("MEDIUM"),
    
    HARD("HARD");

    private String value;

    DifficultyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DifficultyEnum fromValue(String value) {
      for (DifficultyEnum b : DifficultyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIFFICULTY = "difficulty";
  private DifficultyEnum difficulty;

  public DifficultyLevelRequestDto() {
  }

  public DifficultyLevelRequestDto difficulty(DifficultyEnum difficulty) {
    
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Get difficulty
   * @return difficulty
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DifficultyEnum getDifficulty() {
    return difficulty;
  }


  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDifficulty(DifficultyEnum difficulty) {
    this.difficulty = difficulty;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DifficultyLevelRequestDto difficultyLevelRequestDto = (DifficultyLevelRequestDto) o;
    return Objects.equals(this.difficulty, difficultyLevelRequestDto.difficulty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(difficulty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DifficultyLevelRequestDto {\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

