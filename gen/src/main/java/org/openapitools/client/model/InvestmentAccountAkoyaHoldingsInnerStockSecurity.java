/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InvestmentAccountAkoyaHoldingsInnerStockSecurity
 */
@JsonPropertyOrder({
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_UNITS_STREET,
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_UNITS_USER,
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_REINVEST_DIVIDENDS,
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_STOCK_TYPE,
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_YIELD,
  InvestmentAccountAkoyaHoldingsInnerStockSecurity.JSON_PROPERTY_YIELD_AS_OF_DATE
})
@JsonTypeName("InvestmentAccountAkoya_holdings_inner_stockSecurity")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InvestmentAccountAkoyaHoldingsInnerStockSecurity {
  public static final String JSON_PROPERTY_UNITS_STREET = "unitsStreet";
  private BigDecimal unitsStreet;

  public static final String JSON_PROPERTY_UNITS_USER = "unitsUser";
  private BigDecimal unitsUser;

  public static final String JSON_PROPERTY_REINVEST_DIVIDENDS = "reinvestDividends";
  private Boolean reinvestDividends;

  public static final String JSON_PROPERTY_STOCK_TYPE = "stockType";
  private String stockType;

  public static final String JSON_PROPERTY_YIELD = "yield_";
  private BigDecimal yield;

  public static final String JSON_PROPERTY_YIELD_AS_OF_DATE = "yieldAsOfDate";
  private String yieldAsOfDate;

  public InvestmentAccountAkoyaHoldingsInnerStockSecurity() {
  }

  public InvestmentAccountAkoyaHoldingsInnerStockSecurity unitsStreet(BigDecimal unitsStreet) {
    
    this.unitsStreet = unitsStreet;
    return this;
  }

   /**
   * Get unitsStreet
   * @return unitsStreet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNITS_STREET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnitsStreet() {
    return unitsStreet;
  }


  @JsonProperty(JSON_PROPERTY_UNITS_STREET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitsStreet(BigDecimal unitsStreet) {
    this.unitsStreet = unitsStreet;
  }


  public InvestmentAccountAkoyaHoldingsInnerStockSecurity unitsUser(BigDecimal unitsUser) {
    
    this.unitsUser = unitsUser;
    return this;
  }

   /**
   * Get unitsUser
   * @return unitsUser
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNITS_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnitsUser() {
    return unitsUser;
  }


  @JsonProperty(JSON_PROPERTY_UNITS_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitsUser(BigDecimal unitsUser) {
    this.unitsUser = unitsUser;
  }


  public InvestmentAccountAkoyaHoldingsInnerStockSecurity reinvestDividends(Boolean reinvestDividends) {
    
    this.reinvestDividends = reinvestDividends;
    return this;
  }

   /**
   * Get reinvestDividends
   * @return reinvestDividends
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REINVEST_DIVIDENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReinvestDividends() {
    return reinvestDividends;
  }


  @JsonProperty(JSON_PROPERTY_REINVEST_DIVIDENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReinvestDividends(Boolean reinvestDividends) {
    this.reinvestDividends = reinvestDividends;
  }


  public InvestmentAccountAkoyaHoldingsInnerStockSecurity stockType(String stockType) {
    
    this.stockType = stockType;
    return this;
  }

   /**
   * Get stockType
   * @return stockType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStockType() {
    return stockType;
  }


  @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStockType(String stockType) {
    this.stockType = stockType;
  }


  public InvestmentAccountAkoyaHoldingsInnerStockSecurity yield(BigDecimal yield) {
    
    this.yield = yield;
    return this;
  }

   /**
   * Get yield
   * @return yield
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYield() {
    return yield;
  }


  @JsonProperty(JSON_PROPERTY_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYield(BigDecimal yield) {
    this.yield = yield;
  }


  public InvestmentAccountAkoyaHoldingsInnerStockSecurity yieldAsOfDate(String yieldAsOfDate) {
    
    this.yieldAsOfDate = yieldAsOfDate;
    return this;
  }

   /**
   * Get yieldAsOfDate
   * @return yieldAsOfDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YIELD_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYieldAsOfDate() {
    return yieldAsOfDate;
  }


  @JsonProperty(JSON_PROPERTY_YIELD_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYieldAsOfDate(String yieldAsOfDate) {
    this.yieldAsOfDate = yieldAsOfDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestmentAccountAkoyaHoldingsInnerStockSecurity investmentAccountAkoyaHoldingsInnerStockSecurity = (InvestmentAccountAkoyaHoldingsInnerStockSecurity) o;
    return Objects.equals(this.unitsStreet, investmentAccountAkoyaHoldingsInnerStockSecurity.unitsStreet) &&
        Objects.equals(this.unitsUser, investmentAccountAkoyaHoldingsInnerStockSecurity.unitsUser) &&
        Objects.equals(this.reinvestDividends, investmentAccountAkoyaHoldingsInnerStockSecurity.reinvestDividends) &&
        Objects.equals(this.stockType, investmentAccountAkoyaHoldingsInnerStockSecurity.stockType) &&
        Objects.equals(this.yield, investmentAccountAkoyaHoldingsInnerStockSecurity.yield) &&
        Objects.equals(this.yieldAsOfDate, investmentAccountAkoyaHoldingsInnerStockSecurity.yieldAsOfDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitsStreet, unitsUser, reinvestDividends, stockType, yield, yieldAsOfDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestmentAccountAkoyaHoldingsInnerStockSecurity {\n");
    sb.append("    unitsStreet: ").append(toIndentedString(unitsStreet)).append("\n");
    sb.append("    unitsUser: ").append(toIndentedString(unitsUser)).append("\n");
    sb.append("    reinvestDividends: ").append(toIndentedString(reinvestDividends)).append("\n");
    sb.append("    stockType: ").append(toIndentedString(stockType)).append("\n");
    sb.append("    yield: ").append(toIndentedString(yield)).append("\n");
    sb.append("    yieldAsOfDate: ").append(toIndentedString(yieldAsOfDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

