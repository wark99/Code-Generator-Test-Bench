/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TopReaction
 */
@JsonPropertyOrder({
  TopReaction.JSON_PROPERTY_EMOJI_NAME,
  TopReaction.JSON_PROPERTY_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TopReaction {
  public static final String JSON_PROPERTY_EMOJI_NAME = "emoji_name";
  private String emojiName;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Long count;

  public TopReaction() {
  }

  public TopReaction emojiName(String emojiName) {
    
    this.emojiName = emojiName;
    return this;
  }

   /**
   * The name of the emoji used for this reaction.
   * @return emojiName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMOJI_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmojiName() {
    return emojiName;
  }


  @JsonProperty(JSON_PROPERTY_EMOJI_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmojiName(String emojiName) {
    this.emojiName = emojiName;
  }


  public TopReaction count(Long count) {
    
    this.count = count;
    return this;
  }

   /**
   * The number of the times this emoji has been used.
   * @return count
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Long count) {
    this.count = count;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopReaction topReaction = (TopReaction) o;
    return Objects.equals(this.emojiName, topReaction.emojiName) &&
        Objects.equals(this.count, topReaction.count);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emojiName, count);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopReaction {\n");
    sb.append("    emojiName: ").append(toIndentedString(emojiName)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

