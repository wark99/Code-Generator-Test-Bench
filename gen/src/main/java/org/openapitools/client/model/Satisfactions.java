/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Addresses3;
import org.openapitools.client.model.ConsumerStatements;
import org.openapitools.client.model.Employments;
import org.openapitools.client.model.InquiryRecords;
import org.openapitools.client.model.PublicRecords;
import org.openapitools.client.model.TradeAccount;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Satisfactions
 */
@JsonPropertyOrder({
  Satisfactions.JSON_PROPERTY_ADDRESS,
  Satisfactions.JSON_PROPERTY_CONSUMER_STATEMENT,
  Satisfactions.JSON_PROPERTY_EMPLOYMENT,
  Satisfactions.JSON_PROPERTY_INQUIRY_RECORD,
  Satisfactions.JSON_PROPERTY_PUBLIC_RECORD,
  Satisfactions.JSON_PROPERTY_TRADE_ACCOUNT,
  Satisfactions.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Satisfactions {
  public static final String JSON_PROPERTY_ADDRESS = "address";
  private Addresses3 address;

  public static final String JSON_PROPERTY_CONSUMER_STATEMENT = "consumerStatement";
  private ConsumerStatements consumerStatement;

  public static final String JSON_PROPERTY_EMPLOYMENT = "employment";
  private Employments employment;

  public static final String JSON_PROPERTY_INQUIRY_RECORD = "inquiryRecord";
  private InquiryRecords inquiryRecord;

  public static final String JSON_PROPERTY_PUBLIC_RECORD = "publicRecord";
  private PublicRecords publicRecord;

  public static final String JSON_PROPERTY_TRADE_ACCOUNT = "tradeAccount";
  private TradeAccount tradeAccount;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public Satisfactions() {
  }

  public Satisfactions address(Addresses3 address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Addresses3 getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(Addresses3 address) {
    this.address = address;
  }


  public Satisfactions consumerStatement(ConsumerStatements consumerStatement) {
    
    this.consumerStatement = consumerStatement;
    return this;
  }

   /**
   * Get consumerStatement
   * @return consumerStatement
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsumerStatements getConsumerStatement() {
    return consumerStatement;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerStatement(ConsumerStatements consumerStatement) {
    this.consumerStatement = consumerStatement;
  }


  public Satisfactions employment(Employments employment) {
    
    this.employment = employment;
    return this;
  }

   /**
   * Get employment
   * @return employment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Employments getEmployment() {
    return employment;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployment(Employments employment) {
    this.employment = employment;
  }


  public Satisfactions inquiryRecord(InquiryRecords inquiryRecord) {
    
    this.inquiryRecord = inquiryRecord;
    return this;
  }

   /**
   * Get inquiryRecord
   * @return inquiryRecord
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INQUIRY_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InquiryRecords getInquiryRecord() {
    return inquiryRecord;
  }


  @JsonProperty(JSON_PROPERTY_INQUIRY_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInquiryRecord(InquiryRecords inquiryRecord) {
    this.inquiryRecord = inquiryRecord;
  }


  public Satisfactions publicRecord(PublicRecords publicRecord) {
    
    this.publicRecord = publicRecord;
    return this;
  }

   /**
   * Get publicRecord
   * @return publicRecord
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PublicRecords getPublicRecord() {
    return publicRecord;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicRecord(PublicRecords publicRecord) {
    this.publicRecord = publicRecord;
  }


  public Satisfactions tradeAccount(TradeAccount tradeAccount) {
    
    this.tradeAccount = tradeAccount;
    return this;
  }

   /**
   * Get tradeAccount
   * @return tradeAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TradeAccount getTradeAccount() {
    return tradeAccount;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradeAccount(TradeAccount tradeAccount) {
    this.tradeAccount = tradeAccount;
  }


  public Satisfactions type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Satisfactions satisfactions = (Satisfactions) o;
    return Objects.equals(this.address, satisfactions.address) &&
        Objects.equals(this.consumerStatement, satisfactions.consumerStatement) &&
        Objects.equals(this.employment, satisfactions.employment) &&
        Objects.equals(this.inquiryRecord, satisfactions.inquiryRecord) &&
        Objects.equals(this.publicRecord, satisfactions.publicRecord) &&
        Objects.equals(this.tradeAccount, satisfactions.tradeAccount) &&
        Objects.equals(this.type, satisfactions.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, consumerStatement, employment, inquiryRecord, publicRecord, tradeAccount, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Satisfactions {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    consumerStatement: ").append(toIndentedString(consumerStatement)).append("\n");
    sb.append("    employment: ").append(toIndentedString(employment)).append("\n");
    sb.append("    inquiryRecord: ").append(toIndentedString(inquiryRecord)).append("\n");
    sb.append("    publicRecord: ").append(toIndentedString(publicRecord)).append("\n");
    sb.append("    tradeAccount: ").append(toIndentedString(tradeAccount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

