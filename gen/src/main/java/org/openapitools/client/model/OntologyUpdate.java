/*
 * Euboul - Studio Backend
 * listing of all APIs of studio backend 
 *
 * The version of the OpenAPI document: 0.1.25
 * Contact: admin@cognitivegarage.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OntologyUpdateLibraryInner;
import org.openapitools.client.model.OntologyUpdateSource;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OntologyUpdate
 */
@JsonPropertyOrder({
  OntologyUpdate.JSON_PROPERTY_STATUS,
  OntologyUpdate.JSON_PROPERTY_LOCKED_BY,
  OntologyUpdate.JSON_PROPERTY_LOCKED_AT,
  OntologyUpdate.JSON_PROPERTY_DISPLAY_NAME,
  OntologyUpdate.JSON_PROPERTY_DATA_TYPE,
  OntologyUpdate.JSON_PROPERTY_NODE_TYPE,
  OntologyUpdate.JSON_PROPERTY_SOURCE,
  OntologyUpdate.JSON_PROPERTY_LIBRARY,
  OntologyUpdate.JSON_PROPERTY_CANVAS_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:21.073249278Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class OntologyUpdate {
  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_LOCKED_BY = "lockedBy";
  private String lockedBy;

  public static final String JSON_PROPERTY_LOCKED_AT = "lockedAt";
  private String lockedAt;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
  private String dataType;

  public static final String JSON_PROPERTY_NODE_TYPE = "nodeType";
  private String nodeType;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private OntologyUpdateSource source;

  public static final String JSON_PROPERTY_LIBRARY = "library";
  private List<OntologyUpdateLibraryInner> library;

  public static final String JSON_PROPERTY_CANVAS_DATA = "canvasData";
  private Object canvasData;

  public OntologyUpdate() {
  }

  public OntologyUpdate status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public OntologyUpdate lockedBy(String lockedBy) {
    
    this.lockedBy = lockedBy;
    return this;
  }

   /**
   * Get lockedBy
   * @return lockedBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLockedBy() {
    return lockedBy;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockedBy(String lockedBy) {
    this.lockedBy = lockedBy;
  }


  public OntologyUpdate lockedAt(String lockedAt) {
    
    this.lockedAt = lockedAt;
    return this;
  }

   /**
   * Get lockedAt
   * @return lockedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLockedAt() {
    return lockedAt;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockedAt(String lockedAt) {
    this.lockedAt = lockedAt;
  }


  public OntologyUpdate displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public OntologyUpdate dataType(String dataType) {
    
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataType() {
    return dataType;
  }


  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataType(String dataType) {
    this.dataType = dataType;
  }


  public OntologyUpdate nodeType(String nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeType() {
    return nodeType;
  }


  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public OntologyUpdate source(OntologyUpdateSource source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OntologyUpdateSource getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(OntologyUpdateSource source) {
    this.source = source;
  }


  public OntologyUpdate library(List<OntologyUpdateLibraryInner> library) {
    
    this.library = library;
    return this;
  }

  public OntologyUpdate addLibraryItem(OntologyUpdateLibraryInner libraryItem) {
    if (this.library == null) {
      this.library = new ArrayList<>();
    }
    this.library.add(libraryItem);
    return this;
  }

   /**
   * Get library
   * @return library
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OntologyUpdateLibraryInner> getLibrary() {
    return library;
  }


  @JsonProperty(JSON_PROPERTY_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibrary(List<OntologyUpdateLibraryInner> library) {
    this.library = library;
  }


  public OntologyUpdate canvasData(Object canvasData) {
    
    this.canvasData = canvasData;
    return this;
  }

   /**
   * Get canvasData
   * @return canvasData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCanvasData() {
    return canvasData;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasData(Object canvasData) {
    this.canvasData = canvasData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OntologyUpdate ontologyUpdate = (OntologyUpdate) o;
    return Objects.equals(this.status, ontologyUpdate.status) &&
        Objects.equals(this.lockedBy, ontologyUpdate.lockedBy) &&
        Objects.equals(this.lockedAt, ontologyUpdate.lockedAt) &&
        Objects.equals(this.displayName, ontologyUpdate.displayName) &&
        Objects.equals(this.dataType, ontologyUpdate.dataType) &&
        Objects.equals(this.nodeType, ontologyUpdate.nodeType) &&
        Objects.equals(this.source, ontologyUpdate.source) &&
        Objects.equals(this.library, ontologyUpdate.library) &&
        Objects.equals(this.canvasData, ontologyUpdate.canvasData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, lockedBy, lockedAt, displayName, dataType, nodeType, source, library, canvasData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OntologyUpdate {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lockedBy: ").append(toIndentedString(lockedBy)).append("\n");
    sb.append("    lockedAt: ").append(toIndentedString(lockedAt)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    library: ").append(toIndentedString(library)).append("\n");
    sb.append("    canvasData: ").append(toIndentedString(canvasData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

