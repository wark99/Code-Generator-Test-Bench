/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FileInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UploadFile201Response
 */
@JsonPropertyOrder({
  UploadFile201Response.JSON_PROPERTY_FILE_INFOS,
  UploadFile201Response.JSON_PROPERTY_CLIENT_IDS
})
@JsonTypeName("UploadFile_201_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UploadFile201Response {
  public static final String JSON_PROPERTY_FILE_INFOS = "file_infos";
  private List<FileInfo> fileInfos;

  public static final String JSON_PROPERTY_CLIENT_IDS = "client_ids";
  private List<String> clientIds;

  public UploadFile201Response() {
  }

  public UploadFile201Response fileInfos(List<FileInfo> fileInfos) {
    
    this.fileInfos = fileInfos;
    return this;
  }

  public UploadFile201Response addFileInfosItem(FileInfo fileInfosItem) {
    if (this.fileInfos == null) {
      this.fileInfos = new ArrayList<>();
    }
    this.fileInfos.add(fileInfosItem);
    return this;
  }

   /**
   * A list of file metadata that has been stored in the database
   * @return fileInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FileInfo> getFileInfos() {
    return fileInfos;
  }


  @JsonProperty(JSON_PROPERTY_FILE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileInfos(List<FileInfo> fileInfos) {
    this.fileInfos = fileInfos;
  }


  public UploadFile201Response clientIds(List<String> clientIds) {
    
    this.clientIds = clientIds;
    return this;
  }

  public UploadFile201Response addClientIdsItem(String clientIdsItem) {
    if (this.clientIds == null) {
      this.clientIds = new ArrayList<>();
    }
    this.clientIds.add(clientIdsItem);
    return this;
  }

   /**
   * A list of the client_ids that were provided in the request
   * @return clientIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getClientIds() {
    return clientIds;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientIds(List<String> clientIds) {
    this.clientIds = clientIds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadFile201Response uploadFile201Response = (UploadFile201Response) o;
    return Objects.equals(this.fileInfos, uploadFile201Response.fileInfos) &&
        Objects.equals(this.clientIds, uploadFile201Response.clientIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileInfos, clientIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadFile201Response {\n");
    sb.append("    fileInfos: ").append(toIndentedString(fileInfos)).append("\n");
    sb.append("    clientIds: ").append(toIndentedString(clientIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

