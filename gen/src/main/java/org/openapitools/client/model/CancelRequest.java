/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CancelRequest
 */
@JsonPropertyOrder({
  CancelRequest.JSON_PROPERTY_DISPATCH_NUMBER,
  CancelRequest.JSON_PROPERTY_CANCEL_REASON,
  CancelRequest.JSON_PROPERTY_NOTES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CancelRequest {
  public static final String JSON_PROPERTY_DISPATCH_NUMBER = "dispatchNumber";
  private String dispatchNumber;

  /**
   * Gets or Sets cancelReason
   */
  public enum CancelReasonEnum {
    CLIENT("Cancelled by Client"),
    
    CUSTOMER("Cancelled by Customer"),
    
    NSA("Cancelled by NSA");

    private String value;

    CancelReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CancelReasonEnum fromValue(String value) {
      for (CancelReasonEnum b : CancelReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CANCEL_REASON = "cancelReason";
  private CancelReasonEnum cancelReason;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public CancelRequest() {
  }

  public CancelRequest dispatchNumber(String dispatchNumber) {
    
    this.dispatchNumber = dispatchNumber;
    return this;
  }

   /**
   * This is NSA&#39;s unique reference id. It is returned as part of the create response body
   * @return dispatchNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDispatchNumber() {
    return dispatchNumber;
  }


  @JsonProperty(JSON_PROPERTY_DISPATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDispatchNumber(String dispatchNumber) {
    this.dispatchNumber = dispatchNumber;
  }


  public CancelRequest cancelReason(CancelReasonEnum cancelReason) {
    
    this.cancelReason = cancelReason;
    return this;
  }

   /**
   * Get cancelReason
   * @return cancelReason
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CANCEL_REASON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CancelReasonEnum getCancelReason() {
    return cancelReason;
  }


  @JsonProperty(JSON_PROPERTY_CANCEL_REASON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCancelReason(CancelReasonEnum cancelReason) {
    this.cancelReason = cancelReason;
  }


  public CancelRequest notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotes(String notes) {
    this.notes = notes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CancelRequest cancelRequest = (CancelRequest) o;
    return Objects.equals(this.dispatchNumber, cancelRequest.dispatchNumber) &&
        Objects.equals(this.cancelReason, cancelRequest.cancelReason) &&
        Objects.equals(this.notes, cancelRequest.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dispatchNumber, cancelReason, notes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CancelRequest {\n");
    sb.append("    dispatchNumber: ").append(toIndentedString(dispatchNumber)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

