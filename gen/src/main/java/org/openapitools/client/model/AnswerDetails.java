/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.client.model.QuestionSummary;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AnswerDetails
 */
@JsonPropertyOrder({
  AnswerDetails.JSON_PROPERTY_ID,
  AnswerDetails.JSON_PROPERTY_CONTENT,
  AnswerDetails.JSON_PROPERTY_AUTHOR,
  AnswerDetails.JSON_PROPERTY_CREATED_AT,
  AnswerDetails.JSON_PROPERTY_UPDATED_AT,
  AnswerDetails.JSON_PROPERTY_RATING,
  AnswerDetails.JSON_PROPERTY_SELF_VOTED,
  AnswerDetails.JSON_PROPERTY_UPVOTE_COUNT,
  AnswerDetails.JSON_PROPERTY_DOWNVOTE_COUNT,
  AnswerDetails.JSON_PROPERTY_QUESTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class AnswerDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_RATING = "rating";
  private Integer rating;

  public static final String JSON_PROPERTY_SELF_VOTED = "selfVoted";
  private Integer selfVoted;

  public static final String JSON_PROPERTY_UPVOTE_COUNT = "upvoteCount";
  private Integer upvoteCount;

  public static final String JSON_PROPERTY_DOWNVOTE_COUNT = "downvoteCount";
  private Integer downvoteCount;

  public static final String JSON_PROPERTY_QUESTION = "question";
  private QuestionSummary question;

  public AnswerDetails() {
  }

  public AnswerDetails id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public AnswerDetails content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(String content) {
    this.content = content;
  }


  public AnswerDetails author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }


  public AnswerDetails createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public AnswerDetails updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public AnswerDetails rating(Integer rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public AnswerDetails selfVoted(Integer selfVoted) {
    
    this.selfVoted = selfVoted;
    return this;
  }

   /**
   * Get selfVoted
   * minimum: -1
   * maximum: 1
   * @return selfVoted
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF_VOTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSelfVoted() {
    return selfVoted;
  }


  @JsonProperty(JSON_PROPERTY_SELF_VOTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfVoted(Integer selfVoted) {
    this.selfVoted = selfVoted;
  }


  public AnswerDetails upvoteCount(Integer upvoteCount) {
    
    this.upvoteCount = upvoteCount;
    return this;
  }

   /**
   * Get upvoteCount
   * @return upvoteCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpvoteCount() {
    return upvoteCount;
  }


  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpvoteCount(Integer upvoteCount) {
    this.upvoteCount = upvoteCount;
  }


  public AnswerDetails downvoteCount(Integer downvoteCount) {
    
    this.downvoteCount = downvoteCount;
    return this;
  }

   /**
   * Get downvoteCount
   * @return downvoteCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOWNVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDownvoteCount() {
    return downvoteCount;
  }


  @JsonProperty(JSON_PROPERTY_DOWNVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDownvoteCount(Integer downvoteCount) {
    this.downvoteCount = downvoteCount;
  }


  public AnswerDetails question(QuestionSummary question) {
    
    this.question = question;
    return this;
  }

   /**
   * Get question
   * @return question
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUESTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public QuestionSummary getQuestion() {
    return question;
  }


  @JsonProperty(JSON_PROPERTY_QUESTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuestion(QuestionSummary question) {
    this.question = question;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnswerDetails answerDetails = (AnswerDetails) o;
    return Objects.equals(this.id, answerDetails.id) &&
        Objects.equals(this.content, answerDetails.content) &&
        Objects.equals(this.author, answerDetails.author) &&
        Objects.equals(this.createdAt, answerDetails.createdAt) &&
        Objects.equals(this.updatedAt, answerDetails.updatedAt) &&
        Objects.equals(this.rating, answerDetails.rating) &&
        Objects.equals(this.selfVoted, answerDetails.selfVoted) &&
        Objects.equals(this.upvoteCount, answerDetails.upvoteCount) &&
        Objects.equals(this.downvoteCount, answerDetails.downvoteCount) &&
        Objects.equals(this.question, answerDetails.question);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, content, author, createdAt, updatedAt, rating, selfVoted, upvoteCount, downvoteCount, question);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnswerDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    selfVoted: ").append(toIndentedString(selfVoted)).append("\n");
    sb.append("    upvoteCount: ").append(toIndentedString(upvoteCount)).append("\n");
    sb.append("    downvoteCount: ").append(toIndentedString(downvoteCount)).append("\n");
    sb.append("    question: ").append(toIndentedString(question)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

