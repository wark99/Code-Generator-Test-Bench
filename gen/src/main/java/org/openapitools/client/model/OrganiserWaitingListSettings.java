/*
 * Reference
 * The DoDays API reference.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@dodays.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OrganiserWaitingListSettings
 */
@JsonPropertyOrder({
  OrganiserWaitingListSettings.JSON_PROPERTY_ENABLED,
  OrganiserWaitingListSettings.JSON_PROPERTY_LIMIT_DAYS,
  OrganiserWaitingListSettings.JSON_PROPERTY_NOTES
})
@JsonTypeName("Organiser_waiting_list_settings")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:35.686627593Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class OrganiserWaitingListSettings {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_LIMIT_DAYS = "limit_days";
  private Boolean limitDays;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private Boolean notes;

  public OrganiserWaitingListSettings() {
  }

  public OrganiserWaitingListSettings enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public OrganiserWaitingListSettings limitDays(Boolean limitDays) {
    
    this.limitDays = limitDays;
    return this;
  }

   /**
   * Get limitDays
   * @return limitDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLimitDays() {
    return limitDays;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitDays(Boolean limitDays) {
    this.limitDays = limitDays;
  }


  public OrganiserWaitingListSettings notes(Boolean notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(Boolean notes) {
    this.notes = notes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganiserWaitingListSettings organiserWaitingListSettings = (OrganiserWaitingListSettings) o;
    return Objects.equals(this.enabled, organiserWaitingListSettings.enabled) &&
        Objects.equals(this.limitDays, organiserWaitingListSettings.limitDays) &&
        Objects.equals(this.notes, organiserWaitingListSettings.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, limitDays, notes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganiserWaitingListSettings {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    limitDays: ").append(toIndentedString(limitDays)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

