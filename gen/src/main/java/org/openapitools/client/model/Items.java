/*
 * GosuMailAPI
 * <img src=\"https://i.imgur.com/ddJowmh.jpeg\" width=\"100\"/> <br/> # API лучшего сервиса отправки писем во входящие! <br/> ## Удачного использования! <br/> <br/> **Во всех запросах указывайте параметр** key <br/> **Пример:** POST /api/send?key=ВАШ_ТОКЕН <br/> <br/> **Пример отправки на пару популярных языках:** > **NodeJs** ``` const axios = require('axios');   let data = JSON.stringify([     {       \"url\": \"https://url.com\",       \"to\": \"mail@mail.com\",       \"country_code\": \"cz\",       \"service_code\": \"post\",       \"product\": \"test\",       \"is_delay\": false,       \"notify_id\": 1234 // Telegram ID user      }   ]);    let config = {     method: 'post',     maxBodyLength: Infinity,     url: 'https://azmail.link/api/send?key=TOKEN',     headers: {        'Content-Type': 'application/json',        'Accept': 'application/json'     },     data : data   };    axios.request(config)   .then((response) => {     console.log(JSON.stringify(response.data));   })   .catch((error) => {     console.log(error);   }); ``` > **Python** ``` import requests import json  url = \"https://azmail.link/api/send?key=TOKEN\"  payload = json.dumps([     {       \"url\": \"https://url.com\",       \"to\": \"mail@mail.com\",       \"country_code\": \"cz\",       \"service_code\": \"post\",       \"product\": \"test\",       \"is_delay\": false,       \"notify_id\": 1234 // Telegram ID user      } ]) headers = {   'Content-Type': 'application/json',   'Accept': 'application/json' }  response = requests.request(\"POST\", url, headers=headers, data=payload)  print(response.json()) ```  
 *
 * The version of the OpenAPI document: 2.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SendParams;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Items
 */
@JsonPropertyOrder({
  Items.JSON_PROPERTY_URL,
  Items.JSON_PROPERTY_TO,
  Items.JSON_PROPERTY_COUNTRY_CODE,
  Items.JSON_PROPERTY_SERVICE_CODE,
  Items.JSON_PROPERTY_PRODUCT,
  Items.JSON_PROPERTY_IS_DELAY,
  Items.JSON_PROPERTY_NOTIFY_ID,
  Items.JSON_PROPERTY_URL_IMG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:50.833453606Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Items {
  public static final String JSON_PROPERTY_URL = "url";
  private Object url = null;

  public static final String JSON_PROPERTY_TO = "to";
  private Object to = null;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  private Object countryCode = null;

  public static final String JSON_PROPERTY_SERVICE_CODE = "service_code";
  private Object serviceCode = null;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private JsonNullable<Object> product = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_DELAY = "is_delay";
  private JsonNullable<Object> isDelay = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_NOTIFY_ID = "notify_id";
  private JsonNullable<Object> notifyId = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_URL_IMG = "url_img";
  private JsonNullable<Object> urlImg = JsonNullable.<Object>of(null);

  public Items() {
  }

  public Items url(Object url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(Object url) {
    this.url = url;
  }


  public Items to(Object to) {
    
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTo(Object to) {
    this.to = to;
  }


  public Items countryCode(Object countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(Object countryCode) {
    this.countryCode = countryCode;
  }


  public Items serviceCode(Object serviceCode) {
    
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * Get serviceCode
   * @return serviceCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getServiceCode() {
    return serviceCode;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceCode(Object serviceCode) {
    this.serviceCode = serviceCode;
  }


  public Items product(Object product) {
    this.product = JsonNullable.<Object>of(product);
    
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getProduct() {
        return product.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getProduct_JsonNullable() {
    return product;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  public void setProduct_JsonNullable(JsonNullable<Object> product) {
    this.product = product;
  }

  public void setProduct(Object product) {
    this.product = JsonNullable.<Object>of(product);
  }


  public Items isDelay(Object isDelay) {
    this.isDelay = JsonNullable.<Object>of(isDelay);
    
    return this;
  }

   /**
   * Get isDelay
   * @return isDelay
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsDelay() {
        return isDelay.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsDelay_JsonNullable() {
    return isDelay;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_DELAY)
  public void setIsDelay_JsonNullable(JsonNullable<Object> isDelay) {
    this.isDelay = isDelay;
  }

  public void setIsDelay(Object isDelay) {
    this.isDelay = JsonNullable.<Object>of(isDelay);
  }


  public Items notifyId(Object notifyId) {
    this.notifyId = JsonNullable.<Object>of(notifyId);
    
    return this;
  }

   /**
   * Get notifyId
   * @return notifyId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNotifyId() {
        return notifyId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTIFY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNotifyId_JsonNullable() {
    return notifyId;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTIFY_ID)
  public void setNotifyId_JsonNullable(JsonNullable<Object> notifyId) {
    this.notifyId = notifyId;
  }

  public void setNotifyId(Object notifyId) {
    this.notifyId = JsonNullable.<Object>of(notifyId);
  }


  public Items urlImg(Object urlImg) {
    this.urlImg = JsonNullable.<Object>of(urlImg);
    
    return this;
  }

   /**
   * Get urlImg
   * @return urlImg
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUrlImg() {
        return urlImg.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_URL_IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUrlImg_JsonNullable() {
    return urlImg;
  }
  
  @JsonProperty(JSON_PROPERTY_URL_IMG)
  public void setUrlImg_JsonNullable(JsonNullable<Object> urlImg) {
    this.urlImg = urlImg;
  }

  public void setUrlImg(Object urlImg) {
    this.urlImg = JsonNullable.<Object>of(urlImg);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Items items = (Items) o;
    return Objects.equals(this.url, items.url) &&
        Objects.equals(this.to, items.to) &&
        Objects.equals(this.countryCode, items.countryCode) &&
        Objects.equals(this.serviceCode, items.serviceCode) &&
        equalsNullable(this.product, items.product) &&
        equalsNullable(this.isDelay, items.isDelay) &&
        equalsNullable(this.notifyId, items.notifyId) &&
        equalsNullable(this.urlImg, items.urlImg);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, to, countryCode, serviceCode, hashCodeNullable(product), hashCodeNullable(isDelay), hashCodeNullable(notifyId), hashCodeNullable(urlImg));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Items {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    isDelay: ").append(toIndentedString(isDelay)).append("\n");
    sb.append("    notifyId: ").append(toIndentedString(notifyId)).append("\n");
    sb.append("    urlImg: ").append(toIndentedString(urlImg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

