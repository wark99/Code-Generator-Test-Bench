/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QuestionSummary;
import org.openapitools.client.model.TagType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TagDetails
 */
@JsonPropertyOrder({
  TagDetails.JSON_PROPERTY_TAG_ID,
  TagDetails.JSON_PROPERTY_NAME,
  TagDetails.JSON_PROPERTY_TAG_TYPE,
  TagDetails.JSON_PROPERTY_DESCRIPTION,
  TagDetails.JSON_PROPERTY_QUESTION_COUNT,
  TagDetails.JSON_PROPERTY_FOLLOWER_COUNT,
  TagDetails.JSON_PROPERTY_FOLLOWING,
  TagDetails.JSON_PROPERTY_HIGHLIGHTED_QUESTIONS,
  TagDetails.JSON_PROPERTY_LOGO_IMAGE,
  TagDetails.JSON_PROPERTY_AUTHOR,
  TagDetails.JSON_PROPERTY_INCEPTION_YEAR,
  TagDetails.JSON_PROPERTY_FILE_EXTENSION,
  TagDetails.JSON_PROPERTY_OFFICIAL_WEBSITE,
  TagDetails.JSON_PROPERTY_STACK_EXCHANGE_TAG,
  TagDetails.JSON_PROPERTY_RELATED_QUESTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class TagDetails {
  public static final String JSON_PROPERTY_TAG_ID = "tagId";
  private Integer tagId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TAG_TYPE = "tagType";
  private TagType tagType;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_QUESTION_COUNT = "questionCount";
  private Integer questionCount;

  public static final String JSON_PROPERTY_FOLLOWER_COUNT = "followerCount";
  private Integer followerCount;

  public static final String JSON_PROPERTY_FOLLOWING = "following";
  private Boolean following;

  public static final String JSON_PROPERTY_HIGHLIGHTED_QUESTIONS = "highlightedQuestions";
  private List<QuestionSummary> highlightedQuestions;

  public static final String JSON_PROPERTY_LOGO_IMAGE = "logoImage";
  private String logoImage;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private String author;

  public static final String JSON_PROPERTY_INCEPTION_YEAR = "inceptionYear";
  private String inceptionYear;

  public static final String JSON_PROPERTY_FILE_EXTENSION = "fileExtension";
  private String fileExtension;

  public static final String JSON_PROPERTY_OFFICIAL_WEBSITE = "officialWebsite";
  private String officialWebsite;

  public static final String JSON_PROPERTY_STACK_EXCHANGE_TAG = "stackExchangeTag";
  private String stackExchangeTag;

  public static final String JSON_PROPERTY_RELATED_QUESTIONS = "relatedQuestions";
  private JsonNullable<Object> relatedQuestions = JsonNullable.<Object>of(null);

  public TagDetails() {
  }

  public TagDetails tagId(Integer tagId) {
    
    this.tagId = tagId;
    return this;
  }

   /**
   * Get tagId
   * @return tagId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTagId() {
    return tagId;
  }


  @JsonProperty(JSON_PROPERTY_TAG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTagId(Integer tagId) {
    this.tagId = tagId;
  }


  public TagDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public TagDetails tagType(TagType tagType) {
    
    this.tagType = tagType;
    return this;
  }

   /**
   * Get tagType
   * @return tagType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TagType getTagType() {
    return tagType;
  }


  @JsonProperty(JSON_PROPERTY_TAG_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagType(TagType tagType) {
    this.tagType = tagType;
  }


  public TagDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public TagDetails questionCount(Integer questionCount) {
    
    this.questionCount = questionCount;
    return this;
  }

   /**
   * Get questionCount
   * @return questionCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUESTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuestionCount() {
    return questionCount;
  }


  @JsonProperty(JSON_PROPERTY_QUESTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuestionCount(Integer questionCount) {
    this.questionCount = questionCount;
  }


  public TagDetails followerCount(Integer followerCount) {
    
    this.followerCount = followerCount;
    return this;
  }

   /**
   * Get followerCount
   * @return followerCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLLOWER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFollowerCount() {
    return followerCount;
  }


  @JsonProperty(JSON_PROPERTY_FOLLOWER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFollowerCount(Integer followerCount) {
    this.followerCount = followerCount;
  }


  public TagDetails following(Boolean following) {
    
    this.following = following;
    return this;
  }

   /**
   * Get following
   * @return following
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFollowing() {
    return following;
  }


  @JsonProperty(JSON_PROPERTY_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFollowing(Boolean following) {
    this.following = following;
  }


  public TagDetails highlightedQuestions(List<QuestionSummary> highlightedQuestions) {
    
    this.highlightedQuestions = highlightedQuestions;
    return this;
  }

  public TagDetails addHighlightedQuestionsItem(QuestionSummary highlightedQuestionsItem) {
    if (this.highlightedQuestions == null) {
      this.highlightedQuestions = new ArrayList<>();
    }
    this.highlightedQuestions.add(highlightedQuestionsItem);
    return this;
  }

   /**
   * Get highlightedQuestions
   * @return highlightedQuestions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIGHLIGHTED_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<QuestionSummary> getHighlightedQuestions() {
    return highlightedQuestions;
  }


  @JsonProperty(JSON_PROPERTY_HIGHLIGHTED_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighlightedQuestions(List<QuestionSummary> highlightedQuestions) {
    this.highlightedQuestions = highlightedQuestions;
  }


  public TagDetails logoImage(String logoImage) {
    
    this.logoImage = logoImage;
    return this;
  }

   /**
   * For Programming Language tags
   * @return logoImage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGO_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogoImage() {
    return logoImage;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogoImage(String logoImage) {
    this.logoImage = logoImage;
  }


  public TagDetails author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * For Programming Language tags
   * @return author
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(String author) {
    this.author = author;
  }


  public TagDetails inceptionYear(String inceptionYear) {
    
    this.inceptionYear = inceptionYear;
    return this;
  }

   /**
   * For Programming Language tags
   * @return inceptionYear
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCEPTION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInceptionYear() {
    return inceptionYear;
  }


  @JsonProperty(JSON_PROPERTY_INCEPTION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInceptionYear(String inceptionYear) {
    this.inceptionYear = inceptionYear;
  }


  public TagDetails fileExtension(String fileExtension) {
    
    this.fileExtension = fileExtension;
    return this;
  }

   /**
   * For Programming Language tags
   * @return fileExtension
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileExtension() {
    return fileExtension;
  }


  @JsonProperty(JSON_PROPERTY_FILE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileExtension(String fileExtension) {
    this.fileExtension = fileExtension;
  }


  public TagDetails officialWebsite(String officialWebsite) {
    
    this.officialWebsite = officialWebsite;
    return this;
  }

   /**
   * For Programming Language tags
   * @return officialWebsite
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OFFICIAL_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOfficialWebsite() {
    return officialWebsite;
  }


  @JsonProperty(JSON_PROPERTY_OFFICIAL_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOfficialWebsite(String officialWebsite) {
    this.officialWebsite = officialWebsite;
  }


  public TagDetails stackExchangeTag(String stackExchangeTag) {
    
    this.stackExchangeTag = stackExchangeTag;
    return this;
  }

   /**
   * Available for Programming Language, Programming Paradigm and Computer Science Term tags
   * @return stackExchangeTag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STACK_EXCHANGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStackExchangeTag() {
    return stackExchangeTag;
  }


  @JsonProperty(JSON_PROPERTY_STACK_EXCHANGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStackExchangeTag(String stackExchangeTag) {
    this.stackExchangeTag = stackExchangeTag;
  }


  public TagDetails relatedQuestions(Object relatedQuestions) {
    this.relatedQuestions = JsonNullable.<Object>of(relatedQuestions);
    
    return this;
  }

   /**
   * Get relatedQuestions
   * @return relatedQuestions
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getRelatedQuestions() {
        return relatedQuestions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRelatedQuestions_JsonNullable() {
    return relatedQuestions;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_QUESTIONS)
  public void setRelatedQuestions_JsonNullable(JsonNullable<Object> relatedQuestions) {
    this.relatedQuestions = relatedQuestions;
  }

  public void setRelatedQuestions(Object relatedQuestions) {
    this.relatedQuestions = JsonNullable.<Object>of(relatedQuestions);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagDetails tagDetails = (TagDetails) o;
    return Objects.equals(this.tagId, tagDetails.tagId) &&
        Objects.equals(this.name, tagDetails.name) &&
        Objects.equals(this.tagType, tagDetails.tagType) &&
        Objects.equals(this.description, tagDetails.description) &&
        Objects.equals(this.questionCount, tagDetails.questionCount) &&
        Objects.equals(this.followerCount, tagDetails.followerCount) &&
        Objects.equals(this.following, tagDetails.following) &&
        Objects.equals(this.highlightedQuestions, tagDetails.highlightedQuestions) &&
        Objects.equals(this.logoImage, tagDetails.logoImage) &&
        Objects.equals(this.author, tagDetails.author) &&
        Objects.equals(this.inceptionYear, tagDetails.inceptionYear) &&
        Objects.equals(this.fileExtension, tagDetails.fileExtension) &&
        Objects.equals(this.officialWebsite, tagDetails.officialWebsite) &&
        Objects.equals(this.stackExchangeTag, tagDetails.stackExchangeTag) &&
        equalsNullable(this.relatedQuestions, tagDetails.relatedQuestions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tagId, name, tagType, description, questionCount, followerCount, following, highlightedQuestions, logoImage, author, inceptionYear, fileExtension, officialWebsite, stackExchangeTag, hashCodeNullable(relatedQuestions));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagDetails {\n");
    sb.append("    tagId: ").append(toIndentedString(tagId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tagType: ").append(toIndentedString(tagType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    questionCount: ").append(toIndentedString(questionCount)).append("\n");
    sb.append("    followerCount: ").append(toIndentedString(followerCount)).append("\n");
    sb.append("    following: ").append(toIndentedString(following)).append("\n");
    sb.append("    highlightedQuestions: ").append(toIndentedString(highlightedQuestions)).append("\n");
    sb.append("    logoImage: ").append(toIndentedString(logoImage)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    inceptionYear: ").append(toIndentedString(inceptionYear)).append("\n");
    sb.append("    fileExtension: ").append(toIndentedString(fileExtension)).append("\n");
    sb.append("    officialWebsite: ").append(toIndentedString(officialWebsite)).append("\n");
    sb.append("    stackExchangeTag: ").append(toIndentedString(stackExchangeTag)).append("\n");
    sb.append("    relatedQuestions: ").append(toIndentedString(relatedQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

