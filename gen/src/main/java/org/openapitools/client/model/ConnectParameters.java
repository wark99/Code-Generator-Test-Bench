/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConsumerInfo;
import org.openapitools.client.model.ReportCustomField;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConnectParameters
 */
@JsonPropertyOrder({
  ConnectParameters.JSON_PROPERTY_LANGUAGE,
  ConnectParameters.JSON_PROPERTY_PARTNER_ID,
  ConnectParameters.JSON_PROPERTY_CUSTOMER_ID,
  ConnectParameters.JSON_PROPERTY_CONSUMER_ID,
  ConnectParameters.JSON_PROPERTY_REDIRECT_URI,
  ConnectParameters.JSON_PROPERTY_WEBHOOK,
  ConnectParameters.JSON_PROPERTY_WEBHOOK_CONTENT_TYPE,
  ConnectParameters.JSON_PROPERTY_WEBHOOK_DATA,
  ConnectParameters.JSON_PROPERTY_WEBHOOK_HEADERS,
  ConnectParameters.JSON_PROPERTY_OPTIONAL_CONSUMER_INFO,
  ConnectParameters.JSON_PROPERTY_SINGLE_USE_URL,
  ConnectParameters.JSON_PROPERTY_EXPERIENCE,
  ConnectParameters.JSON_PROPERTY_INSTITUTION_SETTINGS,
  ConnectParameters.JSON_PROPERTY_FROM_DATE,
  ConnectParameters.JSON_PROPERTY_REPORT_CUSTOM_FIELDS,
  ConnectParameters.JSON_PROPERTY_IS_WEB_VIEW
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:15:37.937249550Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ConnectParameters {
  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  public static final String JSON_PROPERTY_PARTNER_ID = "partnerId";
  private String partnerId;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_CONSUMER_ID = "consumerId";
  private String consumerId;

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirectUri";
  private String redirectUri;

  public static final String JSON_PROPERTY_WEBHOOK = "webhook";
  private String webhook;

  public static final String JSON_PROPERTY_WEBHOOK_CONTENT_TYPE = "webhookContentType";
  private String webhookContentType = "application/json";

  public static final String JSON_PROPERTY_WEBHOOK_DATA = "webhookData";
  private Object webhookData;

  public static final String JSON_PROPERTY_WEBHOOK_HEADERS = "webhookHeaders";
  private Object webhookHeaders;

  public static final String JSON_PROPERTY_OPTIONAL_CONSUMER_INFO = "optionalConsumerInfo";
  private ConsumerInfo optionalConsumerInfo;

  public static final String JSON_PROPERTY_SINGLE_USE_URL = "singleUseUrl";
  private Boolean singleUseUrl;

  public static final String JSON_PROPERTY_EXPERIENCE = "experience";
  private String experience;

  public static final String JSON_PROPERTY_INSTITUTION_SETTINGS = "institutionSettings";
  private Object institutionSettings;

  public static final String JSON_PROPERTY_FROM_DATE = "fromDate";
  private Long fromDate;

  public static final String JSON_PROPERTY_REPORT_CUSTOM_FIELDS = "reportCustomFields";
  private List<ReportCustomField> reportCustomFields;

  public static final String JSON_PROPERTY_IS_WEB_VIEW = "isWebView";
  private Boolean isWebView;

  public ConnectParameters() {
  }

  public ConnectParameters language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * By default, the Connect application is in English. You don&#39;t need to pass this parameter unless you want to translate Connect into one of our supported languages.  * Spanish (United States): &#x60;es&#x60; * French (Canada): &#x60;fr&#x60; 
   * @return language
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(String language) {
    this.language = language;
  }


  public ConnectParameters partnerId(String partnerId) {
    
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Your Partner ID displayed in the [Developer Dashboard](https://developer.mastercard.com/account/log-in)
   * @return partnerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartnerId() {
    return partnerId;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public ConnectParameters customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID. See Add Customer API for how to create a customer ID.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ConnectParameters consumerId(String consumerId) {
    
    this.consumerId = consumerId;
    return this;
  }

   /**
   * A consumer ID. See Create Consumer API for how to create a consumer ID.
   * @return consumerId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConsumerId() {
    return consumerId;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerId(String consumerId) {
    this.consumerId = consumerId;
  }


  public ConnectParameters redirectUri(String redirectUri) {
    
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * The URL that customers will be redirected to after completing Finicity Connect. Required unless Connect is embedded inside our application (iframe).
   * @return redirectUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedirectUri() {
    return redirectUri;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }


  public ConnectParameters webhook(String webhook) {
    
    this.webhook = webhook;
    return this;
  }

   /**
   * The publicly available URL you want to be notified with events as the user progresses through the application. See [Connect Webhook Event](https://developer.mastercard.com/open-banking-us/documentation/webhooks/webhooks-connect/) for event details.
   * @return webhook
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhook() {
    return webhook;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }


  public ConnectParameters webhookContentType(String webhookContentType) {
    
    this.webhookContentType = webhookContentType;
    return this;
  }

   /**
   * The content type the webhook events will be sent in. Supported types: \&quot;application/json\&quot; and \&quot;application/xml\&quot;.
   * @return webhookContentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookContentType() {
    return webhookContentType;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookContentType(String webhookContentType) {
    this.webhookContentType = webhookContentType;
  }


  public ConnectParameters webhookData(Object webhookData) {
    
    this.webhookData = webhookData;
    return this;
  }

   /**
   * Allows additional identifiable information to be inserted into the payload of connect webhook events. See: [Custom Webhooks](https://developer.mastercard.com/open-banking-us/documentation/webhooks/webhooks-custom/).
   * @return webhookData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getWebhookData() {
    return webhookData;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookData(Object webhookData) {
    this.webhookData = webhookData;
  }


  public ConnectParameters webhookHeaders(Object webhookHeaders) {
    
    this.webhookHeaders = webhookHeaders;
    return this;
  }

   /**
   * Allows additional identifiable information to be included as headers of connect webhook event. See: [Custom Webhooks](https://developer.mastercard.com/open-banking-us/documentation/webhooks/webhooks-custom/).
   * @return webhookHeaders
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getWebhookHeaders() {
    return webhookHeaders;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookHeaders(Object webhookHeaders) {
    this.webhookHeaders = webhookHeaders;
  }


  public ConnectParameters optionalConsumerInfo(ConsumerInfo optionalConsumerInfo) {
    
    this.optionalConsumerInfo = optionalConsumerInfo;
    return this;
  }

   /**
   * Get optionalConsumerInfo
   * @return optionalConsumerInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONAL_CONSUMER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsumerInfo getOptionalConsumerInfo() {
    return optionalConsumerInfo;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONAL_CONSUMER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionalConsumerInfo(ConsumerInfo optionalConsumerInfo) {
    this.optionalConsumerInfo = optionalConsumerInfo;
  }


  public ConnectParameters singleUseUrl(Boolean singleUseUrl) {
    
    this.singleUseUrl = singleUseUrl;
    return this;
  }

   /**
   * \&quot;true\&quot;: The URL link expires after a Connect session successfully completes.  Note: when the &#x60;singleUseUrl&#x60; and the &#x60;experience&#x60; parameters are passed in the same call, the &#x60;singleUseUrl&#x60; value overrides the &#x60;singleUseUrl&#x60; value configured in the &#x60;experience&#x60; parameter.
   * @return singleUseUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLE_USE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSingleUseUrl() {
    return singleUseUrl;
  }


  @JsonProperty(JSON_PROPERTY_SINGLE_USE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSingleUseUrl(Boolean singleUseUrl) {
    this.singleUseUrl = singleUseUrl;
  }


  public ConnectParameters experience(String experience) {
    
    this.experience = experience;
    return this;
  }

   /**
   * The &#x60;experience&#x60; field allows you to customize: * Brand: color and logo * Icon: displayed on the \&quot;Share your data\&quot; page * Popular institutions: displayed on the Bank Search page * Report: the credit decisioning report to send when Connect completes. * MVS modules: financial, payroll, paystub  Note: the Finicity sales engineers (SE) help you set up a default experience for your company. For each additional experience you create thereafter, they&#39;ll give you a unique ID. See [Configure the Connect Experience](https://developer.mastercard.com/open-banking-us/documentation/connect/configure-connect-experience/).  Experience values options: * \&quot;default\&quot;: your default experience (must be defined) * GUID: the code for a different experience * Not defined: If you don&#39;t pass the experience parameter, then Connect&#39;s out of the box default experience (add accounts but no branding) is used, and the MVS modules will not run.
   * @return experience
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExperience() {
    return experience;
  }


  @JsonProperty(JSON_PROPERTY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperience(String experience) {
    this.experience = experience;
  }


  public ConnectParameters institutionSettings(Object institutionSettings) {
    
    this.institutionSettings = institutionSettings;
    return this;
  }

   /**
   * Advanced options for configuration of which institutions to display in. See [Institution Settings](https://developer.mastercard.com/open-banking-us/documentation/connect/connect-institutions-settings/).
   * @return institutionSettings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getInstitutionSettings() {
    return institutionSettings;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionSettings(Object institutionSettings) {
    this.institutionSettings = institutionSettings;
  }


  public ConnectParameters fromDate(Long fromDate) {
    
    this.fromDate = fromDate;
    return this;
  }

   /**
   * The &#x60;fromDate&#x60; parameter is used when experiences are associated with a credit decisioning report and any other reports with transaction data. The value is in epoch time and must be 10 digits. Example: 1494449017. If it&#39;s greater than 10 digits, then the &#x60;fromDate&#x60; is set to the credit decisioning report&#39;s default &#x60;fromDate&#x60;.  For an experience that generates multiple reports, the &#x60;fromDate&#x60; gets passed to the reports that support it.  However, Connect doesn&#39;t pass this parameter to the following reports: * Pay Statement Extraction Report * VOIE - Paystub (with TXVerify) Report * Statement Report * Verification of Income Report * VOIE - Payroll Report  Note: this field isn&#39;t used if you&#39;re only collecting transaction data without a report.
   * @return fromDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFromDate() {
    return fromDate;
  }


  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromDate(Long fromDate) {
    this.fromDate = fromDate;
  }


  public ConnectParameters reportCustomFields(List<ReportCustomField> reportCustomFields) {
    
    this.reportCustomFields = reportCustomFields;
    return this;
  }

  public ConnectParameters addReportCustomFieldsItem(ReportCustomField reportCustomFieldsItem) {
    if (this.reportCustomFields == null) {
      this.reportCustomFields = new ArrayList<>();
    }
    this.reportCustomFields.add(reportCustomFieldsItem);
    return this;
  }

   /**
   * The &#x60;reportCustomFields&#x60; parameter is used when experiences are associated with a credit decisioning report.  Designate up to 5 custom fields that you&#39;d like associated with the report when it&#39;s generated. Every custom field consists of three variables: &#x60;label&#x60;, &#x60;value&#x60;, and &#x60;shown&#x60;. The &#x60;shown&#x60; variable is \&quot;true\&quot; or \&quot;false\&quot;. * \&quot;true\&quot;: (default) display the custom field in the PDF report * \&quot;false\&quot;: don&#39;t display the custom field in the PDF report  For an experience that generates multiple reports, the &#x60;reportCustomFields&#x60; parameter gets passed to all reports.  All custom fields display in the Reseller Billing API.
   * @return reportCustomFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportCustomField> getReportCustomFields() {
    return reportCustomFields;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportCustomFields(List<ReportCustomField> reportCustomFields) {
    this.reportCustomFields = reportCustomFields;
  }


  public ConnectParameters isWebView(Boolean isWebView) {
    
    this.isWebView = isWebView;
    return this;
  }

   /**
   * \&quot;true\&quot;: Indicates that the Connect Session will be displayed within a WebView. When the &#x60;isWebView&#x60; parameter is &#x60;true&#x60; the &#x60;redirectUri&#x60; parameter is required.  Note: This parameter is no longer recommended. We instead recommend specifying a &#x60;redirectUrl&#x60; through our WebSDK. Please refer to the following documentation:  - [iOS](https://developer.mastercard.com/open-banking-us/documentation/connect/integrating/webviews/ios-webviews/)  - [Android](https://developer.mastercard.com/open-banking-us/documentation/connect/integrating/webviews/android-webviews/)
   * @return isWebView
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_WEB_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsWebView() {
    return isWebView;
  }


  @JsonProperty(JSON_PROPERTY_IS_WEB_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsWebView(Boolean isWebView) {
    this.isWebView = isWebView;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectParameters connectParameters = (ConnectParameters) o;
    return Objects.equals(this.language, connectParameters.language) &&
        Objects.equals(this.partnerId, connectParameters.partnerId) &&
        Objects.equals(this.customerId, connectParameters.customerId) &&
        Objects.equals(this.consumerId, connectParameters.consumerId) &&
        Objects.equals(this.redirectUri, connectParameters.redirectUri) &&
        Objects.equals(this.webhook, connectParameters.webhook) &&
        Objects.equals(this.webhookContentType, connectParameters.webhookContentType) &&
        Objects.equals(this.webhookData, connectParameters.webhookData) &&
        Objects.equals(this.webhookHeaders, connectParameters.webhookHeaders) &&
        Objects.equals(this.optionalConsumerInfo, connectParameters.optionalConsumerInfo) &&
        Objects.equals(this.singleUseUrl, connectParameters.singleUseUrl) &&
        Objects.equals(this.experience, connectParameters.experience) &&
        Objects.equals(this.institutionSettings, connectParameters.institutionSettings) &&
        Objects.equals(this.fromDate, connectParameters.fromDate) &&
        Objects.equals(this.reportCustomFields, connectParameters.reportCustomFields) &&
        Objects.equals(this.isWebView, connectParameters.isWebView);
  }

  @Override
  public int hashCode() {
    return Objects.hash(language, partnerId, customerId, consumerId, redirectUri, webhook, webhookContentType, webhookData, webhookHeaders, optionalConsumerInfo, singleUseUrl, experience, institutionSettings, fromDate, reportCustomFields, isWebView);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectParameters {\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    webhookContentType: ").append(toIndentedString(webhookContentType)).append("\n");
    sb.append("    webhookData: ").append(toIndentedString(webhookData)).append("\n");
    sb.append("    webhookHeaders: ").append(toIndentedString(webhookHeaders)).append("\n");
    sb.append("    optionalConsumerInfo: ").append(toIndentedString(optionalConsumerInfo)).append("\n");
    sb.append("    singleUseUrl: ").append(toIndentedString(singleUseUrl)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    institutionSettings: ").append(toIndentedString(institutionSettings)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    reportCustomFields: ").append(toIndentedString(reportCustomFields)).append("\n");
    sb.append("    isWebView: ").append(toIndentedString(isWebView)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

