/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DateOfExpiration;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DriversLicenses
 */
@JsonPropertyOrder({
  DriversLicenses.JSON_PROPERTY_DATE_REPORTED,
  DriversLicenses.JSON_PROPERTY_ENDORSEMENTS,
  DriversLicenses.JSON_PROPERTY_EXPIRATION_DATE,
  DriversLicenses.JSON_PROPERTY_ISSUE_DATE,
  DriversLicenses.JSON_PROPERTY_MOTORCYCLE_CODE,
  DriversLicenses.JSON_PROPERTY_NEW_NUMBER,
  DriversLicenses.JSON_PROPERTY_NUMBER,
  DriversLicenses.JSON_PROPERTY_ORIGINAL_ISSUE_DATE,
  DriversLicenses.JSON_PROPERTY_RESTRICTIONS,
  DriversLicenses.JSON_PROPERTY_SOURCE,
  DriversLicenses.JSON_PROPERTY_STATE,
  DriversLicenses.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DriversLicenses {
  public static final String JSON_PROPERTY_DATE_REPORTED = "dateReported";
  private DateOfExpiration dateReported;

  public static final String JSON_PROPERTY_ENDORSEMENTS = "endorsements";
  private String endorsements;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private DateOfExpiration expirationDate;

  public static final String JSON_PROPERTY_ISSUE_DATE = "issueDate";
  private DateOfExpiration issueDate;

  public static final String JSON_PROPERTY_MOTORCYCLE_CODE = "motorcycleCode";
  private String motorcycleCode;

  public static final String JSON_PROPERTY_NEW_NUMBER = "newNumber";
  private String newNumber;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_ORIGINAL_ISSUE_DATE = "originalIssueDate";
  private DateOfExpiration originalIssueDate;

  public static final String JSON_PROPERTY_RESTRICTIONS = "restrictions";
  private String restrictions;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public DriversLicenses() {
  }

  public DriversLicenses dateReported(DateOfExpiration dateReported) {
    
    this.dateReported = dateReported;
    return this;
  }

   /**
   * Get dateReported
   * @return dateReported
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateReported() {
    return dateReported;
  }


  @JsonProperty(JSON_PROPERTY_DATE_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateReported(DateOfExpiration dateReported) {
    this.dateReported = dateReported;
  }


  public DriversLicenses endorsements(String endorsements) {
    
    this.endorsements = endorsements;
    return this;
  }

   /**
   * Get endorsements
   * @return endorsements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDORSEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndorsements() {
    return endorsements;
  }


  @JsonProperty(JSON_PROPERTY_ENDORSEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndorsements(String endorsements) {
    this.endorsements = endorsements;
  }


  public DriversLicenses expirationDate(DateOfExpiration expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(DateOfExpiration expirationDate) {
    this.expirationDate = expirationDate;
  }


  public DriversLicenses issueDate(DateOfExpiration issueDate) {
    
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getIssueDate() {
    return issueDate;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueDate(DateOfExpiration issueDate) {
    this.issueDate = issueDate;
  }


  public DriversLicenses motorcycleCode(String motorcycleCode) {
    
    this.motorcycleCode = motorcycleCode;
    return this;
  }

   /**
   * Get motorcycleCode
   * @return motorcycleCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOTORCYCLE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMotorcycleCode() {
    return motorcycleCode;
  }


  @JsonProperty(JSON_PROPERTY_MOTORCYCLE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMotorcycleCode(String motorcycleCode) {
    this.motorcycleCode = motorcycleCode;
  }


  public DriversLicenses newNumber(String newNumber) {
    
    this.newNumber = newNumber;
    return this;
  }

   /**
   * Get newNumber
   * @return newNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewNumber() {
    return newNumber;
  }


  @JsonProperty(JSON_PROPERTY_NEW_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewNumber(String newNumber) {
    this.newNumber = newNumber;
  }


  public DriversLicenses number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }


  public DriversLicenses originalIssueDate(DateOfExpiration originalIssueDate) {
    
    this.originalIssueDate = originalIssueDate;
    return this;
  }

   /**
   * Get originalIssueDate
   * @return originalIssueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getOriginalIssueDate() {
    return originalIssueDate;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalIssueDate(DateOfExpiration originalIssueDate) {
    this.originalIssueDate = originalIssueDate;
  }


  public DriversLicenses restrictions(String restrictions) {
    
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESTRICTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRestrictions() {
    return restrictions;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestrictions(String restrictions) {
    this.restrictions = restrictions;
  }


  public DriversLicenses source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public DriversLicenses state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  public DriversLicenses type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DriversLicenses driversLicenses = (DriversLicenses) o;
    return Objects.equals(this.dateReported, driversLicenses.dateReported) &&
        Objects.equals(this.endorsements, driversLicenses.endorsements) &&
        Objects.equals(this.expirationDate, driversLicenses.expirationDate) &&
        Objects.equals(this.issueDate, driversLicenses.issueDate) &&
        Objects.equals(this.motorcycleCode, driversLicenses.motorcycleCode) &&
        Objects.equals(this.newNumber, driversLicenses.newNumber) &&
        Objects.equals(this.number, driversLicenses.number) &&
        Objects.equals(this.originalIssueDate, driversLicenses.originalIssueDate) &&
        Objects.equals(this.restrictions, driversLicenses.restrictions) &&
        Objects.equals(this.source, driversLicenses.source) &&
        Objects.equals(this.state, driversLicenses.state) &&
        Objects.equals(this.type, driversLicenses.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateReported, endorsements, expirationDate, issueDate, motorcycleCode, newNumber, number, originalIssueDate, restrictions, source, state, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DriversLicenses {\n");
    sb.append("    dateReported: ").append(toIndentedString(dateReported)).append("\n");
    sb.append("    endorsements: ").append(toIndentedString(endorsements)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    motorcycleCode: ").append(toIndentedString(motorcycleCode)).append("\n");
    sb.append("    newNumber: ").append(toIndentedString(newNumber)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    originalIssueDate: ").append(toIndentedString(originalIssueDate)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

