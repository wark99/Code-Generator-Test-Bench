/*
 * kita-app - kinddatenEAI Schnittstellenspezifikation
 * Schnittstellenspezifikation für die Übertragung von Kinddaten aus dem kf+ über eine kinddatenEAI an die kita-app.
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: itm.km23@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Group;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Institute
 */
@JsonPropertyOrder({
  Institute.JSON_PROPERTY_INSTITUTE_ID,
  Institute.JSON_PROPERTY_INTITUTE_NAME,
  Institute.JSON_PROPERTY_GROUPS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:34.786677241Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Institute {
  public static final String JSON_PROPERTY_INSTITUTE_ID = "instituteId";
  private String instituteId;

  public static final String JSON_PROPERTY_INTITUTE_NAME = "intituteName";
  private String intituteName;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<Group> groups;

  public Institute() {
  }

  public Institute instituteId(String instituteId) {
    
    this.instituteId = instituteId;
    return this;
  }

   /**
   * kibigWebId der Einrichtung [KITA_ID_EXTERN]
   * @return instituteId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstituteId() {
    return instituteId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstituteId(String instituteId) {
    this.instituteId = instituteId;
  }


  public Institute intituteName(String intituteName) {
    
    this.intituteName = intituteName;
    return this;
  }

   /**
   * Name der Einrichtung [KITA_KITANAME]
   * @return intituteName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTITUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIntituteName() {
    return intituteName;
  }


  @JsonProperty(JSON_PROPERTY_INTITUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIntituteName(String intituteName) {
    this.intituteName = intituteName;
  }


  public Institute groups(List<Group> groups) {
    
    this.groups = groups;
    return this;
  }

  public Institute addGroupsItem(Group groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Group> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(List<Group> groups) {
    this.groups = groups;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Institute institute = (Institute) o;
    return Objects.equals(this.instituteId, institute.instituteId) &&
        Objects.equals(this.intituteName, institute.intituteName) &&
        Objects.equals(this.groups, institute.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instituteId, intituteName, groups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Institute {\n");
    sb.append("    instituteId: ").append(toIndentedString(instituteId)).append("\n");
    sb.append("    intituteName: ").append(toIndentedString(intituteName)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

