/*
 * Hudini Elevate
 * Explore reference documentation for Hudini Elevate - A collection of APIs that application developers can utilize to extend hospitality functions on their experiences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developers@hudini.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Country;
import org.openapitools.client.model.EmailAddress;
import org.openapitools.client.model.GuestAllOfIdentity;
import org.openapitools.client.model.GuestAllOfVerification;
import org.openapitools.client.model.PhoneNumber;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Guest
 */
@JsonPropertyOrder({
  Guest.JSON_PROPERTY_ID,
  Guest.JSON_PROPERTY_TITLE,
  Guest.JSON_PROPERTY_FIRST_NAME,
  Guest.JSON_PROPERTY_LAST_NAME,
  Guest.JSON_PROPERTY_MIDDLE_NAME,
  Guest.JSON_PROPERTY_IS_ADULT,
  Guest.JSON_PROPERTY_IS_VERIFIED,
  Guest.JSON_PROPERTY_IS_PRIMARY,
  Guest.JSON_PROPERTY_GENDER,
  Guest.JSON_PROPERTY_EMAIL_ADDRESSES,
  Guest.JSON_PROPERTY_PHONE_NUMBERS,
  Guest.JSON_PROPERTY_ADDRESSES,
  Guest.JSON_PROPERTY_NATIONALITY,
  Guest.JSON_PROPERTY_IDENTITY,
  Guest.JSON_PROPERTY_VERIFICATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:57.602746427Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Guest {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<Object> id = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<Object> title = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private JsonNullable<Object> firstName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private JsonNullable<Object> lastName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private JsonNullable<Object> middleName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_ADULT = "isAdult";
  private JsonNullable<Object> isAdult = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_VERIFIED = "isVerified";
  private JsonNullable<Object> isVerified = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_PRIMARY = "isPrimary";
  private JsonNullable<Object> isPrimary = JsonNullable.<Object>of(null);

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("MALE"),
    
    FEMALE("FEMALE"),
    
    OTHER("OTHER"),
    
    NA("NA");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_EMAIL_ADDRESSES = "emailAddresses";
  private List<EmailAddress> emailAddresses;

  public static final String JSON_PROPERTY_PHONE_NUMBERS = "phoneNumbers";
  private List<PhoneNumber> phoneNumbers;

  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<Address> addresses;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private Country nationality;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private GuestAllOfIdentity identity;

  public static final String JSON_PROPERTY_VERIFICATION = "verification";
  private GuestAllOfVerification verification;

  public Guest() {
  }

  public Guest id(Object id) {
    this.id = JsonNullable.<Object>of(id);
    
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<Object> id) {
    this.id = id;
  }

  public void setId(Object id) {
    this.id = JsonNullable.<Object>of(id);
  }


  public Guest title(Object title) {
    this.title = JsonNullable.<Object>of(title);
    
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<Object> title) {
    this.title = title;
  }

  public void setTitle(Object title) {
    this.title = JsonNullable.<Object>of(title);
  }


  public Guest firstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);
    
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFirstName() {
        return firstName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFirstName_JsonNullable() {
    return firstName;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  public void setFirstName_JsonNullable(JsonNullable<Object> firstName) {
    this.firstName = firstName;
  }

  public void setFirstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);
  }


  public Guest lastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);
    
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLastName() {
        return lastName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLastName_JsonNullable() {
    return lastName;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  public void setLastName_JsonNullable(JsonNullable<Object> lastName) {
    this.lastName = lastName;
  }

  public void setLastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);
  }


  public Guest middleName(Object middleName) {
    this.middleName = JsonNullable.<Object>of(middleName);
    
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMiddleName() {
        return middleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMiddleName_JsonNullable() {
    return middleName;
  }
  
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  public void setMiddleName_JsonNullable(JsonNullable<Object> middleName) {
    this.middleName = middleName;
  }

  public void setMiddleName(Object middleName) {
    this.middleName = JsonNullable.<Object>of(middleName);
  }


  public Guest isAdult(Object isAdult) {
    this.isAdult = JsonNullable.<Object>of(isAdult);
    
    return this;
  }

   /**
   * Set to true when a guest is considered an adult as per hotel rules
   * @return isAdult
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsAdult() {
        return isAdult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_ADULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsAdult_JsonNullable() {
    return isAdult;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_ADULT)
  public void setIsAdult_JsonNullable(JsonNullable<Object> isAdult) {
    this.isAdult = isAdult;
  }

  public void setIsAdult(Object isAdult) {
    this.isAdult = JsonNullable.<Object>of(isAdult);
  }


  public Guest isVerified(Object isVerified) {
    this.isVerified = JsonNullable.<Object>of(isVerified);
    
    return this;
  }

   /**
   * Set to true when a guest has been verified against an ID Docuemnt
   * @return isVerified
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsVerified() {
        return isVerified.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsVerified_JsonNullable() {
    return isVerified;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
  public void setIsVerified_JsonNullable(JsonNullable<Object> isVerified) {
    this.isVerified = isVerified;
  }

  public void setIsVerified(Object isVerified) {
    this.isVerified = JsonNullable.<Object>of(isVerified);
  }


  public Guest isPrimary(Object isPrimary) {
    this.isPrimary = JsonNullable.<Object>of(isPrimary);
    
    return this;
  }

   /**
   * Set to true if this is a primary guest
   * @return isPrimary
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsPrimary() {
        return isPrimary.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_PRIMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsPrimary_JsonNullable() {
    return isPrimary;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_PRIMARY)
  public void setIsPrimary_JsonNullable(JsonNullable<Object> isPrimary) {
    this.isPrimary = isPrimary;
  }

  public void setIsPrimary(Object isPrimary) {
    this.isPrimary = JsonNullable.<Object>of(isPrimary);
  }


  public Guest gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public Guest emailAddresses(List<EmailAddress> emailAddresses) {
    
    this.emailAddresses = emailAddresses;
    return this;
  }

  public Guest addEmailAddressesItem(EmailAddress emailAddressesItem) {
    if (this.emailAddresses == null) {
      this.emailAddresses = new ArrayList<>();
    }
    this.emailAddresses.add(emailAddressesItem);
    return this;
  }

   /**
   * Get emailAddresses
   * @return emailAddresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EmailAddress> getEmailAddresses() {
    return emailAddresses;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailAddresses(List<EmailAddress> emailAddresses) {
    this.emailAddresses = emailAddresses;
  }


  public Guest phoneNumbers(List<PhoneNumber> phoneNumbers) {
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public Guest addPhoneNumbersItem(PhoneNumber phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PhoneNumber> getPhoneNumbers() {
    return phoneNumbers;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumbers(List<PhoneNumber> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public Guest addresses(List<Address> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public Guest addAddressesItem(Address addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Address> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<Address> addresses) {
    this.addresses = addresses;
  }


  public Guest nationality(Country nationality) {
    
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Country getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(Country nationality) {
    this.nationality = nationality;
  }


  public Guest identity(GuestAllOfIdentity identity) {
    
    this.identity = identity;
    return this;
  }

   /**
   * Get identity
   * @return identity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GuestAllOfIdentity getIdentity() {
    return identity;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentity(GuestAllOfIdentity identity) {
    this.identity = identity;
  }


  public Guest verification(GuestAllOfVerification verification) {
    
    this.verification = verification;
    return this;
  }

   /**
   * Get verification
   * @return verification
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GuestAllOfVerification getVerification() {
    return verification;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerification(GuestAllOfVerification verification) {
    this.verification = verification;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Guest guest = (Guest) o;
    return equalsNullable(this.id, guest.id) &&
        equalsNullable(this.title, guest.title) &&
        equalsNullable(this.firstName, guest.firstName) &&
        equalsNullable(this.lastName, guest.lastName) &&
        equalsNullable(this.middleName, guest.middleName) &&
        equalsNullable(this.isAdult, guest.isAdult) &&
        equalsNullable(this.isVerified, guest.isVerified) &&
        equalsNullable(this.isPrimary, guest.isPrimary) &&
        Objects.equals(this.gender, guest.gender) &&
        Objects.equals(this.emailAddresses, guest.emailAddresses) &&
        Objects.equals(this.phoneNumbers, guest.phoneNumbers) &&
        Objects.equals(this.addresses, guest.addresses) &&
        Objects.equals(this.nationality, guest.nationality) &&
        Objects.equals(this.identity, guest.identity) &&
        Objects.equals(this.verification, guest.verification);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(title), hashCodeNullable(firstName), hashCodeNullable(lastName), hashCodeNullable(middleName), hashCodeNullable(isAdult), hashCodeNullable(isVerified), hashCodeNullable(isPrimary), gender, emailAddresses, phoneNumbers, addresses, nationality, identity, verification);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Guest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    isAdult: ").append(toIndentedString(isAdult)).append("\n");
    sb.append("    isVerified: ").append(toIndentedString(isVerified)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    verification: ").append(toIndentedString(verification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

