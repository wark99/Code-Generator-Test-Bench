/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Security
 */
@JsonPropertyOrder({
  Security.JSON_PROPERTY_ASSISTANT_AT,
  Security.JSON_PROPERTY_DOUBLE_AUTH_METHOD,
  Security.JSON_PROPERTY_HAS_DOUBLE_AUTH,
  Security.JSON_PROPERTY_LAST_PASSWORD_AT,
  Security.JSON_PROPERTY_SCORE,
  Security.JSON_PROPERTY_HAS_VALID_EMAIL,
  Security.JSON_PROPERTY_HAS_RECOVERY_EMAIL,
  Security.JSON_PROPERTY_HAS_VALID_PHONE,
  Security.JSON_PROPERTY_HAS_PRIVATE_FOLDER
})
@JsonTypeName("security")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Security {
  public static final String JSON_PROPERTY_ASSISTANT_AT = "assistant_at";
  private Integer assistantAt;

  public static final String JSON_PROPERTY_DOUBLE_AUTH_METHOD = "double_auth_method";
  private String doubleAuthMethod;

  public static final String JSON_PROPERTY_HAS_DOUBLE_AUTH = "has_double_auth";
  private Boolean hasDoubleAuth;

  public static final String JSON_PROPERTY_LAST_PASSWORD_AT = "last_password_at";
  private Integer lastPasswordAt;

  public static final String JSON_PROPERTY_SCORE = "score";
  private Integer score;

  public static final String JSON_PROPERTY_HAS_VALID_EMAIL = "has_valid_email";
  private Integer hasValidEmail;

  public static final String JSON_PROPERTY_HAS_RECOVERY_EMAIL = "has_recovery_email";
  private Boolean hasRecoveryEmail;

  public static final String JSON_PROPERTY_HAS_VALID_PHONE = "has_valid_phone";
  private Boolean hasValidPhone;

  public static final String JSON_PROPERTY_HAS_PRIVATE_FOLDER = "has_private_folder";
  private Boolean hasPrivateFolder;

  public Security() {
  }

  public Security assistantAt(Integer assistantAt) {
    
    this.assistantAt = assistantAt;
    return this;
  }

   /**
   * The last date the assistant was used
   * @return assistantAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSISTANT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAssistantAt() {
    return assistantAt;
  }


  @JsonProperty(JSON_PROPERTY_ASSISTANT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssistantAt(Integer assistantAt) {
    this.assistantAt = assistantAt;
  }


  public Security doubleAuthMethod(String doubleAuthMethod) {
    
    this.doubleAuthMethod = doubleAuthMethod;
    return this;
  }

   /**
   * Double authentication method used to log in
   * @return doubleAuthMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOUBLE_AUTH_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDoubleAuthMethod() {
    return doubleAuthMethod;
  }


  @JsonProperty(JSON_PROPERTY_DOUBLE_AUTH_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoubleAuthMethod(String doubleAuthMethod) {
    this.doubleAuthMethod = doubleAuthMethod;
  }


  public Security hasDoubleAuth(Boolean hasDoubleAuth) {
    
    this.hasDoubleAuth = hasDoubleAuth;
    return this;
  }

   /**
   * Whether the &#x60;User&#x60; has double authentication enabled
   * @return hasDoubleAuth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_DOUBLE_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasDoubleAuth() {
    return hasDoubleAuth;
  }


  @JsonProperty(JSON_PROPERTY_HAS_DOUBLE_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasDoubleAuth(Boolean hasDoubleAuth) {
    this.hasDoubleAuth = hasDoubleAuth;
  }


  public Security lastPasswordAt(Integer lastPasswordAt) {
    
    this.lastPasswordAt = lastPasswordAt;
    return this;
  }

   /**
   * Last time &#x60;User&#x60;&#39;s password was changed
   * @return lastPasswordAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_PASSWORD_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLastPasswordAt() {
    return lastPasswordAt;
  }


  @JsonProperty(JSON_PROPERTY_LAST_PASSWORD_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPasswordAt(Integer lastPasswordAt) {
    this.lastPasswordAt = lastPasswordAt;
  }


  public Security score(Integer score) {
    
    this.score = score;
    return this;
  }

   /**
   * Security score of the &#x60;User&#x60;
   * @return score
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(Integer score) {
    this.score = score;
  }


  public Security hasValidEmail(Integer hasValidEmail) {
    
    this.hasValidEmail = hasValidEmail;
    return this;
  }

   /**
   * Whether the &#x60;User&#x60; has a valid email
   * @return hasValidEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_VALID_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHasValidEmail() {
    return hasValidEmail;
  }


  @JsonProperty(JSON_PROPERTY_HAS_VALID_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasValidEmail(Integer hasValidEmail) {
    this.hasValidEmail = hasValidEmail;
  }


  public Security hasRecoveryEmail(Boolean hasRecoveryEmail) {
    
    this.hasRecoveryEmail = hasRecoveryEmail;
    return this;
  }

   /**
   * Whether the &#x60;User&#x60; has a recovery email
   * @return hasRecoveryEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_RECOVERY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasRecoveryEmail() {
    return hasRecoveryEmail;
  }


  @JsonProperty(JSON_PROPERTY_HAS_RECOVERY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasRecoveryEmail(Boolean hasRecoveryEmail) {
    this.hasRecoveryEmail = hasRecoveryEmail;
  }


  public Security hasValidPhone(Boolean hasValidPhone) {
    
    this.hasValidPhone = hasValidPhone;
    return this;
  }

   /**
   * Whether the &#x60;User&#x60; has a valid phone number
   * @return hasValidPhone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_VALID_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasValidPhone() {
    return hasValidPhone;
  }


  @JsonProperty(JSON_PROPERTY_HAS_VALID_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasValidPhone(Boolean hasValidPhone) {
    this.hasValidPhone = hasValidPhone;
  }


  public Security hasPrivateFolder(Boolean hasPrivateFolder) {
    
    this.hasPrivateFolder = hasPrivateFolder;
    return this;
  }

   /**
   * Whether the &#x60;User&#x60; has a private folder
   * @return hasPrivateFolder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_PRIVATE_FOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasPrivateFolder() {
    return hasPrivateFolder;
  }


  @JsonProperty(JSON_PROPERTY_HAS_PRIVATE_FOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasPrivateFolder(Boolean hasPrivateFolder) {
    this.hasPrivateFolder = hasPrivateFolder;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Security security = (Security) o;
    return Objects.equals(this.assistantAt, security.assistantAt) &&
        Objects.equals(this.doubleAuthMethod, security.doubleAuthMethod) &&
        Objects.equals(this.hasDoubleAuth, security.hasDoubleAuth) &&
        Objects.equals(this.lastPasswordAt, security.lastPasswordAt) &&
        Objects.equals(this.score, security.score) &&
        Objects.equals(this.hasValidEmail, security.hasValidEmail) &&
        Objects.equals(this.hasRecoveryEmail, security.hasRecoveryEmail) &&
        Objects.equals(this.hasValidPhone, security.hasValidPhone) &&
        Objects.equals(this.hasPrivateFolder, security.hasPrivateFolder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistantAt, doubleAuthMethod, hasDoubleAuth, lastPasswordAt, score, hasValidEmail, hasRecoveryEmail, hasValidPhone, hasPrivateFolder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Security {\n");
    sb.append("    assistantAt: ").append(toIndentedString(assistantAt)).append("\n");
    sb.append("    doubleAuthMethod: ").append(toIndentedString(doubleAuthMethod)).append("\n");
    sb.append("    hasDoubleAuth: ").append(toIndentedString(hasDoubleAuth)).append("\n");
    sb.append("    lastPasswordAt: ").append(toIndentedString(lastPasswordAt)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    hasValidEmail: ").append(toIndentedString(hasValidEmail)).append("\n");
    sb.append("    hasRecoveryEmail: ").append(toIndentedString(hasRecoveryEmail)).append("\n");
    sb.append("    hasValidPhone: ").append(toIndentedString(hasValidPhone)).append("\n");
    sb.append("    hasPrivateFolder: ").append(toIndentedString(hasPrivateFolder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

