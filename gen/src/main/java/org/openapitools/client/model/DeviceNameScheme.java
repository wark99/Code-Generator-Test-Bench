/*
 * AIRBIT Device Auto-registration REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.joda.time.*;
import org.openapitools.client.model.Force;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceNameScheme
 */
@JsonPropertyOrder({
  DeviceNameScheme.JSON_PROPERTY_DATE_TIME,
  DeviceNameScheme.JSON_PROPERTY_SERIAL,
  DeviceNameScheme.JSON_PROPERTY_NAME,
  DeviceNameScheme.JSON_PROPERTY_FORCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:58.353940352Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DeviceNameScheme {
  public static final String JSON_PROPERTY_DATE_TIME = "date_time";
  private OffsetDateTime dateTime;

  public static final String JSON_PROPERTY_SERIAL = "serial";
  private String serial;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FORCE = "force";
  private Force force;

  public DeviceNameScheme() {
  }

  public DeviceNameScheme dateTime(OffsetDateTime dateTime) {
    
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDateTime() {
    return dateTime;
  }


  @JsonProperty(JSON_PROPERTY_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }


  public DeviceNameScheme serial(String serial) {
    
    this.serial = serial;
    return this;
  }

   /**
   * the device serial number
   * @return serial
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSerial() {
    return serial;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSerial(String serial) {
    this.serial = serial;
  }


  public DeviceNameScheme name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * the device firmware version
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public DeviceNameScheme force(Force force) {
    
    this.force = force;
    return this;
  }

   /**
   * Get force
   * @return force
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FORCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Force getForce() {
    return force;
  }


  @JsonProperty(JSON_PROPERTY_FORCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForce(Force force) {
    this.force = force;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceNameScheme deviceNameScheme = (DeviceNameScheme) o;
    return Objects.equals(this.dateTime, deviceNameScheme.dateTime) &&
        Objects.equals(this.serial, deviceNameScheme.serial) &&
        Objects.equals(this.name, deviceNameScheme.name) &&
        Objects.equals(this.force, deviceNameScheme.force);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTime, serial, name, force);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceNameScheme {\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    force: ").append(toIndentedString(force)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

