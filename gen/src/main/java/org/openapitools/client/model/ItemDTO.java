/*
 * UEX Corp API
 * Created by [@thekronny](https://discord.com/users/224580858432978944). ## Downloads [Secification file](https://app.swaggerhub.com/apiproxy/registry/dolejska-daniel/UEX-API/v2.0?resolved=true&flatten=true&pretty=true) ## Other Resources
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ItemDTO
 */
@JsonPropertyOrder({
  ItemDTO.JSON_PROPERTY_ATTRIBUTES,
  ItemDTO.JSON_PROPERTY_CATEGORY,
  ItemDTO.JSON_PROPERTY_DATE_ADDED,
  ItemDTO.JSON_PROPERTY_DATE_MODIFIED,
  ItemDTO.JSON_PROPERTY_ID,
  ItemDTO.JSON_PROPERTY_ID_CATEGORY,
  ItemDTO.JSON_PROPERTY_NAME,
  ItemDTO.JSON_PROPERTY_SCREENSHOT,
  ItemDTO.JSON_PROPERTY_SECTION,
  ItemDTO.JSON_PROPERTY_SLUG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:46.594754675Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ItemDTO {
  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Object attributes;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_DATE_ADDED = "date_added";
  private BigDecimal dateAdded;

  public static final String JSON_PROPERTY_DATE_MODIFIED = "date_modified";
  private BigDecimal dateModified;

  public static final String JSON_PROPERTY_ID = "id";
  private BigDecimal id;

  public static final String JSON_PROPERTY_ID_CATEGORY = "id_category";
  private BigDecimal idCategory;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SCREENSHOT = "screenshot";
  private Object screenshot;

  public static final String JSON_PROPERTY_SECTION = "section";
  private String section;

  public static final String JSON_PROPERTY_SLUG = "slug";
  private String slug;

  public ItemDTO() {
  }

  public ItemDTO attributes(Object attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  public ItemDTO category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public ItemDTO dateAdded(BigDecimal dateAdded) {
    
    this.dateAdded = dateAdded;
    return this;
  }

   /**
   * Get dateAdded
   * @return dateAdded
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDateAdded() {
    return dateAdded;
  }


  @JsonProperty(JSON_PROPERTY_DATE_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAdded(BigDecimal dateAdded) {
    this.dateAdded = dateAdded;
  }


  public ItemDTO dateModified(BigDecimal dateModified) {
    
    this.dateModified = dateModified;
    return this;
  }

   /**
   * Get dateModified
   * @return dateModified
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDateModified() {
    return dateModified;
  }


  @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateModified(BigDecimal dateModified) {
    this.dateModified = dateModified;
  }


  public ItemDTO id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(BigDecimal id) {
    this.id = id;
  }


  public ItemDTO idCategory(BigDecimal idCategory) {
    
    this.idCategory = idCategory;
    return this;
  }

   /**
   * Get idCategory
   * @return idCategory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIdCategory() {
    return idCategory;
  }


  @JsonProperty(JSON_PROPERTY_ID_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdCategory(BigDecimal idCategory) {
    this.idCategory = idCategory;
  }


  public ItemDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ItemDTO screenshot(Object screenshot) {
    
    this.screenshot = screenshot;
    return this;
  }

   /**
   * Get screenshot
   * @return screenshot
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCREENSHOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getScreenshot() {
    return screenshot;
  }


  @JsonProperty(JSON_PROPERTY_SCREENSHOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScreenshot(Object screenshot) {
    this.screenshot = screenshot;
  }


  public ItemDTO section(String section) {
    
    this.section = section;
    return this;
  }

   /**
   * Get section
   * @return section
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSection() {
    return section;
  }


  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSection(String section) {
    this.section = section;
  }


  public ItemDTO slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlug() {
    return slug;
  }


  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlug(String slug) {
    this.slug = slug;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemDTO itemDTO = (ItemDTO) o;
    return Objects.equals(this.attributes, itemDTO.attributes) &&
        Objects.equals(this.category, itemDTO.category) &&
        Objects.equals(this.dateAdded, itemDTO.dateAdded) &&
        Objects.equals(this.dateModified, itemDTO.dateModified) &&
        Objects.equals(this.id, itemDTO.id) &&
        Objects.equals(this.idCategory, itemDTO.idCategory) &&
        Objects.equals(this.name, itemDTO.name) &&
        Objects.equals(this.screenshot, itemDTO.screenshot) &&
        Objects.equals(this.section, itemDTO.section) &&
        Objects.equals(this.slug, itemDTO.slug);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, category, dateAdded, dateModified, id, idCategory, name, screenshot, section, slug);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemDTO {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    dateAdded: ").append(toIndentedString(dateAdded)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idCategory: ").append(toIndentedString(idCategory)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    screenshot: ").append(toIndentedString(screenshot)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

