/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnnualIncome;
import org.openapitools.client.model.DirectPayStatements;
import org.openapitools.client.model.MonthlyIncome;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayrollVOIEIncomeRecord
 */
@JsonPropertyOrder({
  PayrollVOIEIncomeRecord.JSON_PROPERTY_PAY_FREQUENCY,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_PAY_TYPE,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_BASE_PAY_RATE,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_BASE_PAY_RATE_UNIT,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_OLDEST_PAY_STATEMENT_AVAILABLE,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_ANNUAL_INCOME,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_MONTHLY_INCOME,
  PayrollVOIEIncomeRecord.JSON_PROPERTY_DIRECT_PAY_STATEMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:34:32.874275138Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PayrollVOIEIncomeRecord {
  public static final String JSON_PROPERTY_PAY_FREQUENCY = "payFrequency";
  private String payFrequency;

  public static final String JSON_PROPERTY_PAY_TYPE = "payType";
  private String payType;

  public static final String JSON_PROPERTY_BASE_PAY_RATE = "basePayRate";
  private BigDecimal basePayRate;

  public static final String JSON_PROPERTY_BASE_PAY_RATE_UNIT = "basePayRateUnit";
  private String basePayRateUnit;

  public static final String JSON_PROPERTY_OLDEST_PAY_STATEMENT_AVAILABLE = "oldestPayStatementAvailable";
  private String oldestPayStatementAvailable;

  public static final String JSON_PROPERTY_ANNUAL_INCOME = "annualIncome";
  private List<AnnualIncome> annualIncome;

  public static final String JSON_PROPERTY_MONTHLY_INCOME = "monthlyIncome";
  private MonthlyIncome monthlyIncome;

  public static final String JSON_PROPERTY_DIRECT_PAY_STATEMENTS = "directPayStatements";
  private List<DirectPayStatements> directPayStatements;

  public PayrollVOIEIncomeRecord() {
  }

  public PayrollVOIEIncomeRecord payFrequency(String payFrequency) {
    
    this.payFrequency = payFrequency;
    return this;
  }

   /**
   * The current pay frequency or how often a regular pay check is:  * &#x60;Daily&#x60;  * &#x60;Weekly&#x60;  * &#x60;Bi-Weekly&#x60;  * &#x60;Semi-Monthly&#x60;  * &#x60;Monthly&#x60;  * &#x60;Quarterly&#x60;  * &#x60;Semi-Annual&#x60;  * &#x60;Annual&#x60;  * &#x60;Every 2.6 wks&#x60;  * &#x60;Every 4 wks&#x60;  * &#x60;Every 5.2 wks&#x60;  * &#x60;Other&#x60;  * &#x60;Unknown&#x60; 
   * @return payFrequency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayFrequency() {
    return payFrequency;
  }


  @JsonProperty(JSON_PROPERTY_PAY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayFrequency(String payFrequency) {
    this.payFrequency = payFrequency;
  }


  public PayrollVOIEIncomeRecord payType(String payType) {
    
    this.payType = payType;
    return this;
  }

   /**
   * The current pay type:  * &#x60;Salary&#x60;  * &#x60;Hourly&#x60;  * &#x60;Daily&#x60; 
   * @return payType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayType() {
    return payType;
  }


  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayType(String payType) {
    this.payType = payType;
  }


  public PayrollVOIEIncomeRecord basePayRate(BigDecimal basePayRate) {
    
    this.basePayRate = basePayRate;
    return this;
  }

   /**
   * The current base or regular pay rate. Please use in conjunction with the &#x60;basePayRateUnit&#x60; field.
   * @return basePayRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_PAY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBasePayRate() {
    return basePayRate;
  }


  @JsonProperty(JSON_PROPERTY_BASE_PAY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBasePayRate(BigDecimal basePayRate) {
    this.basePayRate = basePayRate;
  }


  public PayrollVOIEIncomeRecord basePayRateUnit(String basePayRateUnit) {
    
    this.basePayRateUnit = basePayRateUnit;
    return this;
  }

   /**
   * Unit for the base pay rate:  * &#x60;Hourly&#x60;  * &#x60;Daily&#x60;  * &#x60;Weekly&#x60;  * &#x60;Bi-Weekly&#x60;  * &#x60;Semi-Monthly&#x60;  * &#x60;Monthly&#x60;  * &#x60;Quarterly&#x60;  * &#x60;Semi-Annual&#x60;  * &#x60;Annual&#x60;  * &#x60;Every 2.6 wks&#x60;  * &#x60;Every 5.2 wks&#x60;  * &#x60;Other&#x60; 
   * @return basePayRateUnit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_PAY_RATE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBasePayRateUnit() {
    return basePayRateUnit;
  }


  @JsonProperty(JSON_PROPERTY_BASE_PAY_RATE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBasePayRateUnit(String basePayRateUnit) {
    this.basePayRateUnit = basePayRateUnit;
  }


  public PayrollVOIEIncomeRecord oldestPayStatementAvailable(String oldestPayStatementAvailable) {
    
    this.oldestPayStatementAvailable = oldestPayStatementAvailable;
    return this;
  }

   /**
   * The date of the oldest direct pay statement available from the payroll source, as measured by the oldest &#x60;payDate&#x60; from all the pay statements delivered.
   * @return oldestPayStatementAvailable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OLDEST_PAY_STATEMENT_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOldestPayStatementAvailable() {
    return oldestPayStatementAvailable;
  }


  @JsonProperty(JSON_PROPERTY_OLDEST_PAY_STATEMENT_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOldestPayStatementAvailable(String oldestPayStatementAvailable) {
    this.oldestPayStatementAvailable = oldestPayStatementAvailable;
  }


  public PayrollVOIEIncomeRecord annualIncome(List<AnnualIncome> annualIncome) {
    
    this.annualIncome = annualIncome;
    return this;
  }

  public PayrollVOIEIncomeRecord addAnnualIncomeItem(AnnualIncome annualIncomeItem) {
    if (this.annualIncome == null) {
      this.annualIncome = new ArrayList<>();
    }
    this.annualIncome.add(annualIncomeItem);
    return this;
  }

   /**
   * The annual pay for the current year, through prior year 2 (as available)  This is a mandatory field only for VOIE-payroll report type.
   * @return annualIncome
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNUAL_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AnnualIncome> getAnnualIncome() {
    return annualIncome;
  }


  @JsonProperty(JSON_PROPERTY_ANNUAL_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnualIncome(List<AnnualIncome> annualIncome) {
    this.annualIncome = annualIncome;
  }


  public PayrollVOIEIncomeRecord monthlyIncome(MonthlyIncome monthlyIncome) {
    
    this.monthlyIncome = monthlyIncome;
    return this;
  }

   /**
   * Get monthlyIncome
   * @return monthlyIncome
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTHLY_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MonthlyIncome getMonthlyIncome() {
    return monthlyIncome;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthlyIncome(MonthlyIncome monthlyIncome) {
    this.monthlyIncome = monthlyIncome;
  }


  public PayrollVOIEIncomeRecord directPayStatements(List<DirectPayStatements> directPayStatements) {
    
    this.directPayStatements = directPayStatements;
    return this;
  }

  public PayrollVOIEIncomeRecord addDirectPayStatementsItem(DirectPayStatements directPayStatementsItem) {
    if (this.directPayStatements == null) {
      this.directPayStatements = new ArrayList<>();
    }
    this.directPayStatements.add(directPayStatementsItem);
    return this;
  }

   /**
   * An array of payment histories for each available paycheck
   * @return directPayStatements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_PAY_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DirectPayStatements> getDirectPayStatements() {
    return directPayStatements;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_PAY_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectPayStatements(List<DirectPayStatements> directPayStatements) {
    this.directPayStatements = directPayStatements;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollVOIEIncomeRecord payrollVOIEIncomeRecord = (PayrollVOIEIncomeRecord) o;
    return Objects.equals(this.payFrequency, payrollVOIEIncomeRecord.payFrequency) &&
        Objects.equals(this.payType, payrollVOIEIncomeRecord.payType) &&
        Objects.equals(this.basePayRate, payrollVOIEIncomeRecord.basePayRate) &&
        Objects.equals(this.basePayRateUnit, payrollVOIEIncomeRecord.basePayRateUnit) &&
        Objects.equals(this.oldestPayStatementAvailable, payrollVOIEIncomeRecord.oldestPayStatementAvailable) &&
        Objects.equals(this.annualIncome, payrollVOIEIncomeRecord.annualIncome) &&
        Objects.equals(this.monthlyIncome, payrollVOIEIncomeRecord.monthlyIncome) &&
        Objects.equals(this.directPayStatements, payrollVOIEIncomeRecord.directPayStatements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payFrequency, payType, basePayRate, basePayRateUnit, oldestPayStatementAvailable, annualIncome, monthlyIncome, directPayStatements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollVOIEIncomeRecord {\n");
    sb.append("    payFrequency: ").append(toIndentedString(payFrequency)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    basePayRate: ").append(toIndentedString(basePayRate)).append("\n");
    sb.append("    basePayRateUnit: ").append(toIndentedString(basePayRateUnit)).append("\n");
    sb.append("    oldestPayStatementAvailable: ").append(toIndentedString(oldestPayStatementAvailable)).append("\n");
    sb.append("    annualIncome: ").append(toIndentedString(annualIncome)).append("\n");
    sb.append("    monthlyIncome: ").append(toIndentedString(monthlyIncome)).append("\n");
    sb.append("    directPayStatements: ").append(toIndentedString(directPayStatements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

