/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CountFile;
import org.openapitools.client.model.Me1;
import org.openapitools.client.model.Team1;
import org.openapitools.client.model.Total1;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Rewind resume, returned only when the rewind is finished
 */
@JsonPropertyOrder({
  Summary.JSON_PROPERTY_TOTAL,
  Summary.JSON_PROPERTY_TEAM,
  Summary.JSON_PROPERTY_ME,
  Summary.JSON_PROPERTY_OTHERS
})
@JsonTypeName("summary")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Summary {
  public static final String JSON_PROPERTY_TOTAL = "total";
  private Total1 total;

  public static final String JSON_PROPERTY_TEAM = "team";
  private Team1 team;

  public static final String JSON_PROPERTY_ME = "me";
  private Me1 me;

  public static final String JSON_PROPERTY_OTHERS = "others";
  private List<CountFile> others;

  public Summary() {
  }

  public Summary total(Total1 total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Total1 getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Total1 total) {
    this.total = total;
  }


  public Summary team(Team1 team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Team1 getTeam() {
    return team;
  }


  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeam(Team1 team) {
    this.team = team;
  }


  public Summary me(Me1 me) {
    
    this.me = me;
    return this;
  }

   /**
   * Get me
   * @return me
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Me1 getMe() {
    return me;
  }


  @JsonProperty(JSON_PROPERTY_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMe(Me1 me) {
    this.me = me;
  }


  public Summary others(List<CountFile> others) {
    
    this.others = others;
    return this;
  }

  public Summary addOthersItem(CountFile othersItem) {
    if (this.others == null) {
      this.others = new ArrayList<>();
    }
    this.others.add(othersItem);
    return this;
  }

   /**
   * Get others
   * @return others
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CountFile> getOthers() {
    return others;
  }


  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOthers(List<CountFile> others) {
    this.others = others;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Summary summary = (Summary) o;
    return Objects.equals(this.total, summary.total) &&
        Objects.equals(this.team, summary.team) &&
        Objects.equals(this.me, summary.me) &&
        Objects.equals(this.others, summary.others);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, team, me, others);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Summary {\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    me: ").append(toIndentedString(me)).append("\n");
    sb.append("    others: ").append(toIndentedString(others)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

