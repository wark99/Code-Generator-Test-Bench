/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NumberRange;
import org.openapitools.client.model.Unit;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Street
 */
@JsonPropertyOrder({
  Street.JSON_PROPERTY_NAME,
  Street.JSON_PROPERTY_NUMBER,
  Street.JSON_PROPERTY_NUMBER_RANGE,
  Street.JSON_PROPERTY_PO_BOX,
  Street.JSON_PROPERTY_POST_DIRECTIONAL,
  Street.JSON_PROPERTY_PRE_DIRECTIONAL,
  Street.JSON_PROPERTY_RURAL_ROUTE,
  Street.JSON_PROPERTY_TYPE,
  Street.JSON_PROPERTY_UNIT,
  Street.JSON_PROPERTY_UNPARSEDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Street {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_NUMBER_RANGE = "numberRange";
  private NumberRange numberRange;

  public static final String JSON_PROPERTY_PO_BOX = "poBox";
  private String poBox;

  public static final String JSON_PROPERTY_POST_DIRECTIONAL = "postDirectional";
  private String postDirectional;

  public static final String JSON_PROPERTY_PRE_DIRECTIONAL = "preDirectional";
  private String preDirectional;

  public static final String JSON_PROPERTY_RURAL_ROUTE = "ruralRoute";
  private String ruralRoute;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private Unit unit;

  public static final String JSON_PROPERTY_UNPARSEDS = "unparseds";
  private List<String> unparseds;

  public Street() {
  }

  public Street name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Street number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }


  public Street numberRange(NumberRange numberRange) {
    
    this.numberRange = numberRange;
    return this;
  }

   /**
   * Get numberRange
   * @return numberRange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NumberRange getNumberRange() {
    return numberRange;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberRange(NumberRange numberRange) {
    this.numberRange = numberRange;
  }


  public Street poBox(String poBox) {
    
    this.poBox = poBox;
    return this;
  }

   /**
   * Get poBox
   * @return poBox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PO_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPoBox() {
    return poBox;
  }


  @JsonProperty(JSON_PROPERTY_PO_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoBox(String poBox) {
    this.poBox = poBox;
  }


  public Street postDirectional(String postDirectional) {
    
    this.postDirectional = postDirectional;
    return this;
  }

   /**
   * Get postDirectional
   * @return postDirectional
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POST_DIRECTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostDirectional() {
    return postDirectional;
  }


  @JsonProperty(JSON_PROPERTY_POST_DIRECTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostDirectional(String postDirectional) {
    this.postDirectional = postDirectional;
  }


  public Street preDirectional(String preDirectional) {
    
    this.preDirectional = preDirectional;
    return this;
  }

   /**
   * Get preDirectional
   * @return preDirectional
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_DIRECTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreDirectional() {
    return preDirectional;
  }


  @JsonProperty(JSON_PROPERTY_PRE_DIRECTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreDirectional(String preDirectional) {
    this.preDirectional = preDirectional;
  }


  public Street ruralRoute(String ruralRoute) {
    
    this.ruralRoute = ruralRoute;
    return this;
  }

   /**
   * Get ruralRoute
   * @return ruralRoute
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RURAL_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRuralRoute() {
    return ruralRoute;
  }


  @JsonProperty(JSON_PROPERTY_RURAL_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuralRoute(String ruralRoute) {
    this.ruralRoute = ruralRoute;
  }


  public Street type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public Street unit(Unit unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Unit getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(Unit unit) {
    this.unit = unit;
  }


  public Street unparseds(List<String> unparseds) {
    
    this.unparseds = unparseds;
    return this;
  }

  public Street addUnparsedsItem(String unparsedsItem) {
    if (this.unparseds == null) {
      this.unparseds = new ArrayList<>();
    }
    this.unparseds.add(unparsedsItem);
    return this;
  }

   /**
   * Get unparseds
   * @return unparseds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNPARSEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUnparseds() {
    return unparseds;
  }


  @JsonProperty(JSON_PROPERTY_UNPARSEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnparseds(List<String> unparseds) {
    this.unparseds = unparseds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Street street = (Street) o;
    return Objects.equals(this.name, street.name) &&
        Objects.equals(this.number, street.number) &&
        Objects.equals(this.numberRange, street.numberRange) &&
        Objects.equals(this.poBox, street.poBox) &&
        Objects.equals(this.postDirectional, street.postDirectional) &&
        Objects.equals(this.preDirectional, street.preDirectional) &&
        Objects.equals(this.ruralRoute, street.ruralRoute) &&
        Objects.equals(this.type, street.type) &&
        Objects.equals(this.unit, street.unit) &&
        Objects.equals(this.unparseds, street.unparseds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, number, numberRange, poBox, postDirectional, preDirectional, ruralRoute, type, unit, unparseds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Street {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    numberRange: ").append(toIndentedString(numberRange)).append("\n");
    sb.append("    poBox: ").append(toIndentedString(poBox)).append("\n");
    sb.append("    postDirectional: ").append(toIndentedString(postDirectional)).append("\n");
    sb.append("    preDirectional: ").append(toIndentedString(preDirectional)).append("\n");
    sb.append("    ruralRoute: ").append(toIndentedString(ruralRoute)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    unparseds: ").append(toIndentedString(unparseds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

