/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MostRecentPayment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Revolving1Month
 */
@JsonPropertyOrder({
  Revolving1Month.JSON_PROPERTY_ACTIVE_ACCOUNTS_COUNT,
  Revolving1Month.JSON_PROPERTY_AGGREGATE_EXCESS_PAYMENT,
  Revolving1Month.JSON_PROPERTY_CREDIT_LIMIT,
  Revolving1Month.JSON_PROPERTY_ENDING_BALANCE,
  Revolving1Month.JSON_PROPERTY_ESTIMATED_SPEND,
  Revolving1Month.JSON_PROPERTY_MOST_RECENT_PAYMENT,
  Revolving1Month.JSON_PROPERTY_OPEN_ACCOUNTS_COUNT,
  Revolving1Month.JSON_PROPERTY_PAYMENT_DUE,
  Revolving1Month.JSON_PROPERTY_PRIOR_BALANCE,
  Revolving1Month.JSON_PROPERTY_TOTAL_PAYMENT_RATIO,
  Revolving1Month.JSON_PROPERTY_TRANS_REV_INDICATOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Revolving1Month {
  public static final String JSON_PROPERTY_ACTIVE_ACCOUNTS_COUNT = "activeAccountsCount";
  private String activeAccountsCount;

  public static final String JSON_PROPERTY_AGGREGATE_EXCESS_PAYMENT = "aggregateExcessPayment";
  private String aggregateExcessPayment;

  public static final String JSON_PROPERTY_CREDIT_LIMIT = "creditLimit";
  private String creditLimit;

  public static final String JSON_PROPERTY_ENDING_BALANCE = "endingBalance";
  private String endingBalance;

  public static final String JSON_PROPERTY_ESTIMATED_SPEND = "estimatedSpend";
  private String estimatedSpend;

  public static final String JSON_PROPERTY_MOST_RECENT_PAYMENT = "mostRecentPayment";
  private MostRecentPayment mostRecentPayment;

  public static final String JSON_PROPERTY_OPEN_ACCOUNTS_COUNT = "openAccountsCount";
  private String openAccountsCount;

  public static final String JSON_PROPERTY_PAYMENT_DUE = "paymentDue";
  private String paymentDue;

  public static final String JSON_PROPERTY_PRIOR_BALANCE = "priorBalance";
  private String priorBalance;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_RATIO = "totalPaymentRatio";
  private String totalPaymentRatio;

  public static final String JSON_PROPERTY_TRANS_REV_INDICATOR = "transRevIndicator";
  private String transRevIndicator;

  public Revolving1Month() {
  }

  public Revolving1Month activeAccountsCount(String activeAccountsCount) {
    
    this.activeAccountsCount = activeAccountsCount;
    return this;
  }

   /**
   * Get activeAccountsCount
   * @return activeAccountsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_ACCOUNTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActiveAccountsCount() {
    return activeAccountsCount;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_ACCOUNTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveAccountsCount(String activeAccountsCount) {
    this.activeAccountsCount = activeAccountsCount;
  }


  public Revolving1Month aggregateExcessPayment(String aggregateExcessPayment) {
    
    this.aggregateExcessPayment = aggregateExcessPayment;
    return this;
  }

   /**
   * Get aggregateExcessPayment
   * @return aggregateExcessPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATE_EXCESS_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAggregateExcessPayment() {
    return aggregateExcessPayment;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATE_EXCESS_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregateExcessPayment(String aggregateExcessPayment) {
    this.aggregateExcessPayment = aggregateExcessPayment;
  }


  public Revolving1Month creditLimit(String creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditLimit() {
    return creditLimit;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditLimit(String creditLimit) {
    this.creditLimit = creditLimit;
  }


  public Revolving1Month endingBalance(String endingBalance) {
    
    this.endingBalance = endingBalance;
    return this;
  }

   /**
   * Get endingBalance
   * @return endingBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndingBalance() {
    return endingBalance;
  }


  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndingBalance(String endingBalance) {
    this.endingBalance = endingBalance;
  }


  public Revolving1Month estimatedSpend(String estimatedSpend) {
    
    this.estimatedSpend = estimatedSpend;
    return this;
  }

   /**
   * Get estimatedSpend
   * @return estimatedSpend
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATED_SPEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEstimatedSpend() {
    return estimatedSpend;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_SPEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedSpend(String estimatedSpend) {
    this.estimatedSpend = estimatedSpend;
  }


  public Revolving1Month mostRecentPayment(MostRecentPayment mostRecentPayment) {
    
    this.mostRecentPayment = mostRecentPayment;
    return this;
  }

   /**
   * Get mostRecentPayment
   * @return mostRecentPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MostRecentPayment getMostRecentPayment() {
    return mostRecentPayment;
  }


  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMostRecentPayment(MostRecentPayment mostRecentPayment) {
    this.mostRecentPayment = mostRecentPayment;
  }


  public Revolving1Month openAccountsCount(String openAccountsCount) {
    
    this.openAccountsCount = openAccountsCount;
    return this;
  }

   /**
   * Get openAccountsCount
   * @return openAccountsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_ACCOUNTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOpenAccountsCount() {
    return openAccountsCount;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_ACCOUNTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenAccountsCount(String openAccountsCount) {
    this.openAccountsCount = openAccountsCount;
  }


  public Revolving1Month paymentDue(String paymentDue) {
    
    this.paymentDue = paymentDue;
    return this;
  }

   /**
   * Get paymentDue
   * @return paymentDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentDue() {
    return paymentDue;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDue(String paymentDue) {
    this.paymentDue = paymentDue;
  }


  public Revolving1Month priorBalance(String priorBalance) {
    
    this.priorBalance = priorBalance;
    return this;
  }

   /**
   * Get priorBalance
   * @return priorBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIOR_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriorBalance() {
    return priorBalance;
  }


  @JsonProperty(JSON_PROPERTY_PRIOR_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriorBalance(String priorBalance) {
    this.priorBalance = priorBalance;
  }


  public Revolving1Month totalPaymentRatio(String totalPaymentRatio) {
    
    this.totalPaymentRatio = totalPaymentRatio;
    return this;
  }

   /**
   * Get totalPaymentRatio
   * @return totalPaymentRatio
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalPaymentRatio() {
    return totalPaymentRatio;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentRatio(String totalPaymentRatio) {
    this.totalPaymentRatio = totalPaymentRatio;
  }


  public Revolving1Month transRevIndicator(String transRevIndicator) {
    
    this.transRevIndicator = transRevIndicator;
    return this;
  }

   /**
   * Get transRevIndicator
   * @return transRevIndicator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANS_REV_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransRevIndicator() {
    return transRevIndicator;
  }


  @JsonProperty(JSON_PROPERTY_TRANS_REV_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransRevIndicator(String transRevIndicator) {
    this.transRevIndicator = transRevIndicator;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Revolving1Month revolving1Month = (Revolving1Month) o;
    return Objects.equals(this.activeAccountsCount, revolving1Month.activeAccountsCount) &&
        Objects.equals(this.aggregateExcessPayment, revolving1Month.aggregateExcessPayment) &&
        Objects.equals(this.creditLimit, revolving1Month.creditLimit) &&
        Objects.equals(this.endingBalance, revolving1Month.endingBalance) &&
        Objects.equals(this.estimatedSpend, revolving1Month.estimatedSpend) &&
        Objects.equals(this.mostRecentPayment, revolving1Month.mostRecentPayment) &&
        Objects.equals(this.openAccountsCount, revolving1Month.openAccountsCount) &&
        Objects.equals(this.paymentDue, revolving1Month.paymentDue) &&
        Objects.equals(this.priorBalance, revolving1Month.priorBalance) &&
        Objects.equals(this.totalPaymentRatio, revolving1Month.totalPaymentRatio) &&
        Objects.equals(this.transRevIndicator, revolving1Month.transRevIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeAccountsCount, aggregateExcessPayment, creditLimit, endingBalance, estimatedSpend, mostRecentPayment, openAccountsCount, paymentDue, priorBalance, totalPaymentRatio, transRevIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Revolving1Month {\n");
    sb.append("    activeAccountsCount: ").append(toIndentedString(activeAccountsCount)).append("\n");
    sb.append("    aggregateExcessPayment: ").append(toIndentedString(aggregateExcessPayment)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    endingBalance: ").append(toIndentedString(endingBalance)).append("\n");
    sb.append("    estimatedSpend: ").append(toIndentedString(estimatedSpend)).append("\n");
    sb.append("    mostRecentPayment: ").append(toIndentedString(mostRecentPayment)).append("\n");
    sb.append("    openAccountsCount: ").append(toIndentedString(openAccountsCount)).append("\n");
    sb.append("    paymentDue: ").append(toIndentedString(paymentDue)).append("\n");
    sb.append("    priorBalance: ").append(toIndentedString(priorBalance)).append("\n");
    sb.append("    totalPaymentRatio: ").append(toIndentedString(totalPaymentRatio)).append("\n");
    sb.append("    transRevIndicator: ").append(toIndentedString(transRevIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

