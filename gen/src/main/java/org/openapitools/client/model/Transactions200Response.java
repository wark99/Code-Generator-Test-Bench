/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AccountOwnerMxPagination;
import org.openapitools.client.model.DepositTransactionAkoya;
import org.openapitools.client.model.InsuranceTransactionAkoya;
import org.openapitools.client.model.InvestmentTransactionAkoya;
import org.openapitools.client.model.LoanTransactionAkoya;
import org.openapitools.client.model.LocTransactionAkoya;
import org.openapitools.client.model.TransactionsDataAkoya;
import org.openapitools.client.model.TransactionsDataFinicity;
import org.openapitools.client.model.TransactionsDataMx;
import org.openapitools.client.model.TransactionsDataYodlee;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Transactions200Response
 */
@JsonPropertyOrder({
  Transactions200Response.JSON_PROPERTY_FOUND,
  Transactions200Response.JSON_PROPERTY_DISPLAYING,
  Transactions200Response.JSON_PROPERTY_MORE_AVAILABLE,
  Transactions200Response.JSON_PROPERTY_FROM_DATE,
  Transactions200Response.JSON_PROPERTY_TO_DATE,
  Transactions200Response.JSON_PROPERTY_SORT,
  Transactions200Response.JSON_PROPERTY_TRANSACTIONS,
  Transactions200Response.JSON_PROPERTY_PAGINATION,
  Transactions200Response.JSON_PROPERTY_TRANSACTION,
  Transactions200Response.JSON_PROPERTY_DEPOSIT_TRANSACTION,
  Transactions200Response.JSON_PROPERTY_INVESTMENT_TRANSACTION,
  Transactions200Response.JSON_PROPERTY_LOAN_TRANSACTION,
  Transactions200Response.JSON_PROPERTY_LOC_TRANSACTION,
  Transactions200Response.JSON_PROPERTY_INSURANCE_TRANSACTION
})
@JsonTypeName("transactions_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Transactions200Response {
  public static final String JSON_PROPERTY_FOUND = "found";
  private JsonNullable<Object> found = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_DISPLAYING = "displaying";
  private JsonNullable<Object> displaying = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_MORE_AVAILABLE = "moreAvailable";
  private JsonNullable<Object> moreAvailable = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FROM_DATE = "fromDate";
  private JsonNullable<Object> fromDate = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TO_DATE = "toDate";
  private JsonNullable<Object> toDate = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SORT = "sort";
  private JsonNullable<Object> sort = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private JsonNullable<Object> transactions = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PAGINATION = "pagination";
  private AccountOwnerMxPagination pagination;

  public static final String JSON_PROPERTY_TRANSACTION = "transaction";
  private JsonNullable<Object> transaction = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_DEPOSIT_TRANSACTION = "depositTransaction";
  private DepositTransactionAkoya depositTransaction;

  public static final String JSON_PROPERTY_INVESTMENT_TRANSACTION = "investmentTransaction";
  private InvestmentTransactionAkoya investmentTransaction;

  public static final String JSON_PROPERTY_LOAN_TRANSACTION = "loanTransaction";
  private LoanTransactionAkoya loanTransaction;

  public static final String JSON_PROPERTY_LOC_TRANSACTION = "locTransaction";
  private LocTransactionAkoya locTransaction;

  public static final String JSON_PROPERTY_INSURANCE_TRANSACTION = "insuranceTransaction";
  private InsuranceTransactionAkoya insuranceTransaction;

  public Transactions200Response() {
  }

  public Transactions200Response found(Object found) {
    this.found = JsonNullable.<Object>of(found);
    
    return this;
  }

   /**
   * Get found
   * @return found
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFound() {
        return found.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFound_JsonNullable() {
    return found;
  }
  
  @JsonProperty(JSON_PROPERTY_FOUND)
  public void setFound_JsonNullable(JsonNullable<Object> found) {
    this.found = found;
  }

  public void setFound(Object found) {
    this.found = JsonNullable.<Object>of(found);
  }


  public Transactions200Response displaying(Object displaying) {
    this.displaying = JsonNullable.<Object>of(displaying);
    
    return this;
  }

   /**
   * Get displaying
   * @return displaying
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDisplaying() {
        return displaying.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISPLAYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDisplaying_JsonNullable() {
    return displaying;
  }
  
  @JsonProperty(JSON_PROPERTY_DISPLAYING)
  public void setDisplaying_JsonNullable(JsonNullable<Object> displaying) {
    this.displaying = displaying;
  }

  public void setDisplaying(Object displaying) {
    this.displaying = JsonNullable.<Object>of(displaying);
  }


  public Transactions200Response moreAvailable(Object moreAvailable) {
    this.moreAvailable = JsonNullable.<Object>of(moreAvailable);
    
    return this;
  }

   /**
   * Get moreAvailable
   * @return moreAvailable
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMoreAvailable() {
        return moreAvailable.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MORE_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMoreAvailable_JsonNullable() {
    return moreAvailable;
  }
  
  @JsonProperty(JSON_PROPERTY_MORE_AVAILABLE)
  public void setMoreAvailable_JsonNullable(JsonNullable<Object> moreAvailable) {
    this.moreAvailable = moreAvailable;
  }

  public void setMoreAvailable(Object moreAvailable) {
    this.moreAvailable = JsonNullable.<Object>of(moreAvailable);
  }


  public Transactions200Response fromDate(Object fromDate) {
    this.fromDate = JsonNullable.<Object>of(fromDate);
    
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFromDate() {
        return fromDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFromDate_JsonNullable() {
    return fromDate;
  }
  
  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  public void setFromDate_JsonNullable(JsonNullable<Object> fromDate) {
    this.fromDate = fromDate;
  }

  public void setFromDate(Object fromDate) {
    this.fromDate = JsonNullable.<Object>of(fromDate);
  }


  public Transactions200Response toDate(Object toDate) {
    this.toDate = JsonNullable.<Object>of(toDate);
    
    return this;
  }

   /**
   * Get toDate
   * @return toDate
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getToDate() {
        return toDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getToDate_JsonNullable() {
    return toDate;
  }
  
  @JsonProperty(JSON_PROPERTY_TO_DATE)
  public void setToDate_JsonNullable(JsonNullable<Object> toDate) {
    this.toDate = toDate;
  }

  public void setToDate(Object toDate) {
    this.toDate = JsonNullable.<Object>of(toDate);
  }


  public Transactions200Response sort(Object sort) {
    this.sort = JsonNullable.<Object>of(sort);
    
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSort() {
        return sort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSort_JsonNullable() {
    return sort;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT)
  public void setSort_JsonNullable(JsonNullable<Object> sort) {
    this.sort = sort;
  }

  public void setSort(Object sort) {
    this.sort = JsonNullable.<Object>of(sort);
  }


  public Transactions200Response transactions(Object transactions) {
    this.transactions = JsonNullable.<Object>of(transactions);
    
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTransactions() {
        return transactions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTransactions_JsonNullable() {
    return transactions;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  public void setTransactions_JsonNullable(JsonNullable<Object> transactions) {
    this.transactions = transactions;
  }

  public void setTransactions(Object transactions) {
    this.transactions = JsonNullable.<Object>of(transactions);
  }


  public Transactions200Response pagination(AccountOwnerMxPagination pagination) {
    
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountOwnerMxPagination getPagination() {
    return pagination;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPagination(AccountOwnerMxPagination pagination) {
    this.pagination = pagination;
  }


  public Transactions200Response transaction(Object transaction) {
    this.transaction = JsonNullable.<Object>of(transaction);
    
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTransaction() {
        return transaction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTransaction_JsonNullable() {
    return transaction;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  public void setTransaction_JsonNullable(JsonNullable<Object> transaction) {
    this.transaction = transaction;
  }

  public void setTransaction(Object transaction) {
    this.transaction = JsonNullable.<Object>of(transaction);
  }


  public Transactions200Response depositTransaction(DepositTransactionAkoya depositTransaction) {
    
    this.depositTransaction = depositTransaction;
    return this;
  }

   /**
   * Get depositTransaction
   * @return depositTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPOSIT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DepositTransactionAkoya getDepositTransaction() {
    return depositTransaction;
  }


  @JsonProperty(JSON_PROPERTY_DEPOSIT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDepositTransaction(DepositTransactionAkoya depositTransaction) {
    this.depositTransaction = depositTransaction;
  }


  public Transactions200Response investmentTransaction(InvestmentTransactionAkoya investmentTransaction) {
    
    this.investmentTransaction = investmentTransaction;
    return this;
  }

   /**
   * Get investmentTransaction
   * @return investmentTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvestmentTransactionAkoya getInvestmentTransaction() {
    return investmentTransaction;
  }


  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestmentTransaction(InvestmentTransactionAkoya investmentTransaction) {
    this.investmentTransaction = investmentTransaction;
  }


  public Transactions200Response loanTransaction(LoanTransactionAkoya loanTransaction) {
    
    this.loanTransaction = loanTransaction;
    return this;
  }

   /**
   * Get loanTransaction
   * @return loanTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoanTransactionAkoya getLoanTransaction() {
    return loanTransaction;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanTransaction(LoanTransactionAkoya loanTransaction) {
    this.loanTransaction = loanTransaction;
  }


  public Transactions200Response locTransaction(LocTransactionAkoya locTransaction) {
    
    this.locTransaction = locTransaction;
    return this;
  }

   /**
   * Get locTransaction
   * @return locTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOC_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocTransactionAkoya getLocTransaction() {
    return locTransaction;
  }


  @JsonProperty(JSON_PROPERTY_LOC_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocTransaction(LocTransactionAkoya locTransaction) {
    this.locTransaction = locTransaction;
  }


  public Transactions200Response insuranceTransaction(InsuranceTransactionAkoya insuranceTransaction) {
    
    this.insuranceTransaction = insuranceTransaction;
    return this;
  }

   /**
   * Get insuranceTransaction
   * @return insuranceTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSURANCE_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InsuranceTransactionAkoya getInsuranceTransaction() {
    return insuranceTransaction;
  }


  @JsonProperty(JSON_PROPERTY_INSURANCE_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsuranceTransaction(InsuranceTransactionAkoya insuranceTransaction) {
    this.insuranceTransaction = insuranceTransaction;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transactions200Response transactions200Response = (Transactions200Response) o;
    return equalsNullable(this.found, transactions200Response.found) &&
        equalsNullable(this.displaying, transactions200Response.displaying) &&
        equalsNullable(this.moreAvailable, transactions200Response.moreAvailable) &&
        equalsNullable(this.fromDate, transactions200Response.fromDate) &&
        equalsNullable(this.toDate, transactions200Response.toDate) &&
        equalsNullable(this.sort, transactions200Response.sort) &&
        equalsNullable(this.transactions, transactions200Response.transactions) &&
        Objects.equals(this.pagination, transactions200Response.pagination) &&
        equalsNullable(this.transaction, transactions200Response.transaction) &&
        Objects.equals(this.depositTransaction, transactions200Response.depositTransaction) &&
        Objects.equals(this.investmentTransaction, transactions200Response.investmentTransaction) &&
        Objects.equals(this.loanTransaction, transactions200Response.loanTransaction) &&
        Objects.equals(this.locTransaction, transactions200Response.locTransaction) &&
        Objects.equals(this.insuranceTransaction, transactions200Response.insuranceTransaction);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(found), hashCodeNullable(displaying), hashCodeNullable(moreAvailable), hashCodeNullable(fromDate), hashCodeNullable(toDate), hashCodeNullable(sort), hashCodeNullable(transactions), pagination, hashCodeNullable(transaction), depositTransaction, investmentTransaction, loanTransaction, locTransaction, insuranceTransaction);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transactions200Response {\n");
    sb.append("    found: ").append(toIndentedString(found)).append("\n");
    sb.append("    displaying: ").append(toIndentedString(displaying)).append("\n");
    sb.append("    moreAvailable: ").append(toIndentedString(moreAvailable)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    depositTransaction: ").append(toIndentedString(depositTransaction)).append("\n");
    sb.append("    investmentTransaction: ").append(toIndentedString(investmentTransaction)).append("\n");
    sb.append("    loanTransaction: ").append(toIndentedString(loanTransaction)).append("\n");
    sb.append("    locTransaction: ").append(toIndentedString(locTransaction)).append("\n");
    sb.append("    insuranceTransaction: ").append(toIndentedString(insuranceTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

