/*
 * ClosedNetwork-DEV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.client.model.StoryUser;
import org.openapitools.client.model.ViewersStory;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Viewers
 */
@JsonPropertyOrder({
  Viewers.JSON_PROPERTY_ID,
  Viewers.JSON_PROPERTY_STORY,
  Viewers.JSON_PROPERTY_USER,
  Viewers.JSON_PROPERTY_CREATED_AT,
  Viewers.JSON_PROPERTY_UPDATED_AT,
  Viewers.JSON_PROPERTY_V
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:50.441407861Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Viewers {
  public static final String JSON_PROPERTY_ID = "_id";
  private String id;

  public static final String JSON_PROPERTY_STORY = "story";
  private ViewersStory story;

  public static final String JSON_PROPERTY_USER = "user";
  private StoryUser user;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_V = "__v";
  private Integer v;

  public Viewers() {
  }

  public Viewers id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Viewers story(ViewersStory story) {
    
    this.story = story;
    return this;
  }

   /**
   * Get story
   * @return story
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ViewersStory getStory() {
    return story;
  }


  @JsonProperty(JSON_PROPERTY_STORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStory(ViewersStory story) {
    this.story = story;
  }


  public Viewers user(StoryUser user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StoryUser getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUser(StoryUser user) {
    this.user = user;
  }


  public Viewers createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Viewers updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Viewers v(Integer v) {
    
    this.v = v;
    return this;
  }

   /**
   * Get v
   * @return v
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getV() {
    return v;
  }


  @JsonProperty(JSON_PROPERTY_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setV(Integer v) {
    this.v = v;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Viewers viewers = (Viewers) o;
    return Objects.equals(this.id, viewers.id) &&
        Objects.equals(this.story, viewers.story) &&
        Objects.equals(this.user, viewers.user) &&
        Objects.equals(this.createdAt, viewers.createdAt) &&
        Objects.equals(this.updatedAt, viewers.updatedAt) &&
        Objects.equals(this.v, viewers.v);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, story, user, createdAt, updatedAt, v);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Viewers {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    story: ").append(toIndentedString(story)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    v: ").append(toIndentedString(v)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

