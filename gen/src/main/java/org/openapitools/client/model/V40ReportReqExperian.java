/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * V40ReportReqExperian
 */
@JsonPropertyOrder({
  V40ReportReqExperian.JSON_PROPERTY_CONSUMER_ID,
  V40ReportReqExperian.JSON_PROPERTY_FIRST_NAME,
  V40ReportReqExperian.JSON_PROPERTY_MIDDLE_NAME,
  V40ReportReqExperian.JSON_PROPERTY_LAST_NAME,
  V40ReportReqExperian.JSON_PROPERTY_SUFFIX_NAME,
  V40ReportReqExperian.JSON_PROPERTY_STREET1,
  V40ReportReqExperian.JSON_PROPERTY_STREET2,
  V40ReportReqExperian.JSON_PROPERTY_CITY,
  V40ReportReqExperian.JSON_PROPERTY_POSTAL_CODE,
  V40ReportReqExperian.JSON_PROPERTY_STATE,
  V40ReportReqExperian.JSON_PROPERTY_DOB,
  V40ReportReqExperian.JSON_PROPERTY_SSN,
  V40ReportReqExperian.JSON_PROPERTY_PHONE
})
@JsonTypeName("V4.0_Report_ReqExperian")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class V40ReportReqExperian {
  public static final String JSON_PROPERTY_CONSUMER_ID = "consumer_id";
  private String consumerId;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middle_name";
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private String lastName;

  /**
   * Gets or Sets suffixName
   */
  public enum SuffixNameEnum {
    JR("Jr"),
    
    SR("Sr"),
    
    III("III"),
    
    V("V"),
    
    VI("VI"),
    
    VII("VII"),
    
    VIII("VIII"),
    
    IX("IX"),
    
    X("X");

    private String value;

    SuffixNameEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SuffixNameEnum fromValue(String value) {
      for (SuffixNameEnum b : SuffixNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SUFFIX_NAME = "suffixName";
  private SuffixNameEnum suffixName;

  public static final String JSON_PROPERTY_STREET1 = "street1";
  private String street1;

  public static final String JSON_PROPERTY_STREET2 = "street2";
  private String street2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postal_code";
  private String postalCode;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_DOB = "dob";
  private LocalDate dob;

  public static final String JSON_PROPERTY_SSN = "ssn";
  private String ssn;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public V40ReportReqExperian() {
  }

  public V40ReportReqExperian consumerId(String consumerId) {
    
    this.consumerId = consumerId;
    return this;
  }

   /**
   * Get consumerId
   * @return consumerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumerId() {
    return consumerId;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerId(String consumerId) {
    this.consumerId = consumerId;
  }


  public V40ReportReqExperian firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public V40ReportReqExperian middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public V40ReportReqExperian lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public V40ReportReqExperian suffixName(SuffixNameEnum suffixName) {
    
    this.suffixName = suffixName;
    return this;
  }

   /**
   * Get suffixName
   * @return suffixName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SuffixNameEnum getSuffixName() {
    return suffixName;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffixName(SuffixNameEnum suffixName) {
    this.suffixName = suffixName;
  }


  public V40ReportReqExperian street1(String street1) {
    
    this.street1 = street1;
    return this;
  }

   /**
   * Get street1
   * @return street1
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStreet1() {
    return street1;
  }


  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreet1(String street1) {
    this.street1 = street1;
  }


  public V40ReportReqExperian street2(String street2) {
    
    this.street2 = street2;
    return this;
  }

   /**
   * Get street2
   * @return street2
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreet2() {
    return street2;
  }


  @JsonProperty(JSON_PROPERTY_STREET2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreet2(String street2) {
    this.street2 = street2;
  }


  public V40ReportReqExperian city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCity(String city) {
    this.city = city;
  }


  public V40ReportReqExperian postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public V40ReportReqExperian state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(String state) {
    this.state = state;
  }


  public V40ReportReqExperian dob(LocalDate dob) {
    
    this.dob = dob;
    return this;
  }

   /**
   * Get dob
   * @return dob
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDob() {
    return dob;
  }


  @JsonProperty(JSON_PROPERTY_DOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDob(LocalDate dob) {
    this.dob = dob;
  }


  public V40ReportReqExperian ssn(String ssn) {
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSsn() {
    return ssn;
  }


  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSsn(String ssn) {
    this.ssn = ssn;
  }


  public V40ReportReqExperian phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V40ReportReqExperian v40ReportReqExperian = (V40ReportReqExperian) o;
    return Objects.equals(this.consumerId, v40ReportReqExperian.consumerId) &&
        Objects.equals(this.firstName, v40ReportReqExperian.firstName) &&
        Objects.equals(this.middleName, v40ReportReqExperian.middleName) &&
        Objects.equals(this.lastName, v40ReportReqExperian.lastName) &&
        Objects.equals(this.suffixName, v40ReportReqExperian.suffixName) &&
        Objects.equals(this.street1, v40ReportReqExperian.street1) &&
        Objects.equals(this.street2, v40ReportReqExperian.street2) &&
        Objects.equals(this.city, v40ReportReqExperian.city) &&
        Objects.equals(this.postalCode, v40ReportReqExperian.postalCode) &&
        Objects.equals(this.state, v40ReportReqExperian.state) &&
        Objects.equals(this.dob, v40ReportReqExperian.dob) &&
        Objects.equals(this.ssn, v40ReportReqExperian.ssn) &&
        Objects.equals(this.phone, v40ReportReqExperian.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerId, firstName, middleName, lastName, suffixName, street1, street2, city, postalCode, state, dob, ssn, phone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V40ReportReqExperian {\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    suffixName: ").append(toIndentedString(suffixName)).append("\n");
    sb.append("    street1: ").append(toIndentedString(street1)).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

