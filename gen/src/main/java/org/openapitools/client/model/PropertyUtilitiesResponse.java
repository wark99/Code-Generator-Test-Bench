/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LinkedOwnerResponse;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import org.openapitools.client.model.MeterReadingResponse;
import org.openapitools.client.model.UtilitiesExtendedLinkedPropertyResponse;
import org.openapitools.client.model.UtilitiesLinkedTenantResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyUtilitiesResponse
 */
@JsonPropertyOrder({
  PropertyUtilitiesResponse.JSON_PROPERTY_DATE,
  PropertyUtilitiesResponse.JSON_PROPERTY_BRANCH,
  PropertyUtilitiesResponse.JSON_PROPERTY_BRANCH_ADDRESS,
  PropertyUtilitiesResponse.JSON_PROPERTY_EXCLUDE_FROM_UTILITIES_CHANGE,
  PropertyUtilitiesResponse.JSON_PROPERTY_METER_READINGS,
  PropertyUtilitiesResponse.JSON_PROPERTY_PROPERTY,
  PropertyUtilitiesResponse.JSON_PROPERTY_LEAD_TENANT,
  PropertyUtilitiesResponse.JSON_PROPERTY_TENANTS,
  PropertyUtilitiesResponse.JSON_PROPERTY_OWNERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyUtilitiesResponse {
  public static final String JSON_PROPERTY_DATE = "date";
  private MaintenancePost200ResponseValueCreatedDate date;

  public static final String JSON_PROPERTY_BRANCH = "branch";
  private String branch;

  public static final String JSON_PROPERTY_BRANCH_ADDRESS = "branch_address";
  private String branchAddress;

  public static final String JSON_PROPERTY_EXCLUDE_FROM_UTILITIES_CHANGE = "exclude_from_utilities_change";
  private Boolean excludeFromUtilitiesChange;

  public static final String JSON_PROPERTY_METER_READINGS = "meter_readings";
  private List<MeterReadingResponse> meterReadings;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  private UtilitiesExtendedLinkedPropertyResponse property;

  public static final String JSON_PROPERTY_LEAD_TENANT = "lead_tenant";
  private Integer leadTenant;

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  private List<UtilitiesLinkedTenantResponse> tenants;

  public static final String JSON_PROPERTY_OWNERS = "owners";
  private List<LinkedOwnerResponse> owners;

  public PropertyUtilitiesResponse() {
  }

  public PropertyUtilitiesResponse date(MaintenancePost200ResponseValueCreatedDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(MaintenancePost200ResponseValueCreatedDate date) {
    this.date = date;
  }


  public PropertyUtilitiesResponse branch(String branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBranch() {
    return branch;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranch(String branch) {
    this.branch = branch;
  }


  public PropertyUtilitiesResponse branchAddress(String branchAddress) {
    
    this.branchAddress = branchAddress;
    return this;
  }

   /**
   * Get branchAddress
   * @return branchAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBranchAddress() {
    return branchAddress;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchAddress(String branchAddress) {
    this.branchAddress = branchAddress;
  }


  public PropertyUtilitiesResponse excludeFromUtilitiesChange(Boolean excludeFromUtilitiesChange) {
    
    this.excludeFromUtilitiesChange = excludeFromUtilitiesChange;
    return this;
  }

   /**
   * If the value is true, this record is not to be processed.
   * @return excludeFromUtilitiesChange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_UTILITIES_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludeFromUtilitiesChange() {
    return excludeFromUtilitiesChange;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_UTILITIES_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeFromUtilitiesChange(Boolean excludeFromUtilitiesChange) {
    this.excludeFromUtilitiesChange = excludeFromUtilitiesChange;
  }


  public PropertyUtilitiesResponse meterReadings(List<MeterReadingResponse> meterReadings) {
    
    this.meterReadings = meterReadings;
    return this;
  }

  public PropertyUtilitiesResponse addMeterReadingsItem(MeterReadingResponse meterReadingsItem) {
    if (this.meterReadings == null) {
      this.meterReadings = new ArrayList<>();
    }
    this.meterReadings.add(meterReadingsItem);
    return this;
  }

   /**
   * Get meterReadings
   * @return meterReadings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METER_READINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MeterReadingResponse> getMeterReadings() {
    return meterReadings;
  }


  @JsonProperty(JSON_PROPERTY_METER_READINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeterReadings(List<MeterReadingResponse> meterReadings) {
    this.meterReadings = meterReadings;
  }


  public PropertyUtilitiesResponse property(UtilitiesExtendedLinkedPropertyResponse property) {
    
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UtilitiesExtendedLinkedPropertyResponse getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(UtilitiesExtendedLinkedPropertyResponse property) {
    this.property = property;
  }


  public PropertyUtilitiesResponse leadTenant(Integer leadTenant) {
    
    this.leadTenant = leadTenant;
    return this;
  }

   /**
   * Get leadTenant
   * @return leadTenant
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEAD_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLeadTenant() {
    return leadTenant;
  }


  @JsonProperty(JSON_PROPERTY_LEAD_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeadTenant(Integer leadTenant) {
    this.leadTenant = leadTenant;
  }


  public PropertyUtilitiesResponse tenants(List<UtilitiesLinkedTenantResponse> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public PropertyUtilitiesResponse addTenantsItem(UtilitiesLinkedTenantResponse tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Get tenants
   * @return tenants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UtilitiesLinkedTenantResponse> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenants(List<UtilitiesLinkedTenantResponse> tenants) {
    this.tenants = tenants;
  }


  public PropertyUtilitiesResponse owners(List<LinkedOwnerResponse> owners) {
    
    this.owners = owners;
    return this;
  }

  public PropertyUtilitiesResponse addOwnersItem(LinkedOwnerResponse ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedOwnerResponse> getOwners() {
    return owners;
  }


  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwners(List<LinkedOwnerResponse> owners) {
    this.owners = owners;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyUtilitiesResponse propertyUtilitiesResponse = (PropertyUtilitiesResponse) o;
    return Objects.equals(this.date, propertyUtilitiesResponse.date) &&
        Objects.equals(this.branch, propertyUtilitiesResponse.branch) &&
        Objects.equals(this.branchAddress, propertyUtilitiesResponse.branchAddress) &&
        Objects.equals(this.excludeFromUtilitiesChange, propertyUtilitiesResponse.excludeFromUtilitiesChange) &&
        Objects.equals(this.meterReadings, propertyUtilitiesResponse.meterReadings) &&
        Objects.equals(this.property, propertyUtilitiesResponse.property) &&
        Objects.equals(this.leadTenant, propertyUtilitiesResponse.leadTenant) &&
        Objects.equals(this.tenants, propertyUtilitiesResponse.tenants) &&
        Objects.equals(this.owners, propertyUtilitiesResponse.owners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, branch, branchAddress, excludeFromUtilitiesChange, meterReadings, property, leadTenant, tenants, owners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyUtilitiesResponse {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    branchAddress: ").append(toIndentedString(branchAddress)).append("\n");
    sb.append("    excludeFromUtilitiesChange: ").append(toIndentedString(excludeFromUtilitiesChange)).append("\n");
    sb.append("    meterReadings: ").append(toIndentedString(meterReadings)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    leadTenant: ").append(toIndentedString(leadTenant)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

