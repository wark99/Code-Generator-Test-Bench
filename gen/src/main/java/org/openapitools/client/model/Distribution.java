/*
 * IBM Cloud Video - Distributions API
 *   Some useful links: - [Distribution API Wiki](https://github.com/wiki) - [Distribution API Source](https://github.com/distribution-api/)
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: kendrick@us.ibm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.Asset;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.Transfer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Distribution
 */
@JsonPropertyOrder({
  Distribution.JSON_PROPERTY_ID,
  Distribution.JSON_PROPERTY_ASSET,
  Distribution.JSON_PROPERTY_SCHEDULE_ID,
  Distribution.JSON_PROPERTY_CHANNEL,
  Distribution.JSON_PROPERTY_ACCOUNT,
  Distribution.JSON_PROPERTY_PRIORITY,
  Distribution.JSON_PROPERTY_CREATED,
  Distribution.JSON_PROPERTY_UPDATED,
  Distribution.JSON_PROPERTY_REQUIRED_BY,
  Distribution.JSON_PROPERTY_SLA_DATE,
  Distribution.JSON_PROPERTY_STATE,
  Distribution.JSON_PROPERTY_FILE_TRANSFERS,
  Distribution.JSON_PROPERTY_MESSAGE,
  Distribution.JSON_PROPERTY_RETRIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:21.806739296Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Distribution {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ASSET = "asset";
  private Asset asset;

  public static final String JSON_PROPERTY_SCHEDULE_ID = "scheduleId";
  private Long scheduleId;

  public static final String JSON_PROPERTY_CHANNEL = "channel";
  private Channel channel;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private Account account;

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private BigDecimal priority;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private String updated;

  public static final String JSON_PROPERTY_REQUIRED_BY = "requiredBy";
  private OffsetDateTime requiredBy;

  public static final String JSON_PROPERTY_SLA_DATE = "slaDate";
  private OffsetDateTime slaDate;

  /**
   * Distribution Status
   */
  public enum StateEnum {
    UNKNOWN("UNKNOWN"),
    
    INITIATING("INITIATING"),
    
    WAITING_FOR_FILE_TRANSFER("WAITING_FOR_FILE_TRANSFER"),
    
    CONTENT_ERROR("CONTENT_ERROR"),
    
    TRANSFER_ERROR("TRANSFER_ERROR"),
    
    SCHEDULED_FOR_TRANSFER("SCHEDULED_FOR_TRANSFER"),
    
    TRANSFERRING("TRANSFERRING"),
    
    TRANSFERRED("TRANSFERRED"),
    
    EXPORT_ERROR("EXPORT_ERROR"),
    
    SCHEDULED_FOR_EXPORT("SCHEDULED_FOR_EXPORT"),
    
    EXPORTING("EXPORTING"),
    
    EXPORTED("EXPORTED"),
    
    SCHEDULED_FOR_DELETE("SCHEDULED_FOR_DELETE"),
    
    DELETING("DELETING"),
    
    DELETED("DELETED"),
    
    DELETE_ERROR("DELETE_ERROR"),
    
    API_ERROR("API_ERROR"),
    
    MDU_HOLD("MDU_HOLD"),
    
    MDU_HOLD_REJECT("MDU_HOLD_REJECT"),
    
    MDU_HOLD_APPROVED("MDU_HOLD_APPROVED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_FILE_TRANSFERS = "fileTransfers";
  private List<Transfer> fileTransfers;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_RETRIES = "retries";
  private Integer retries;

  public Distribution() {
  }

  public Distribution id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Distribution asset(Asset asset) {
    
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Asset getAsset() {
    return asset;
  }


  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsset(Asset asset) {
    this.asset = asset;
  }


  public Distribution scheduleId(Long scheduleId) {
    
    this.scheduleId = scheduleId;
    return this;
  }

   /**
   * Get scheduleId
   * @return scheduleId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getScheduleId() {
    return scheduleId;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduleId(Long scheduleId) {
    this.scheduleId = scheduleId;
  }


  public Distribution channel(Channel channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Channel getChannel() {
    return channel;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannel(Channel channel) {
    this.channel = channel;
  }


  public Distribution account(Account account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Account getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(Account account) {
    this.account = account;
  }


  public Distribution priority(BigDecimal priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority(BigDecimal priority) {
    this.priority = priority;
  }


  public Distribution created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Distribution updated(String updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public Distribution requiredBy(OffsetDateTime requiredBy) {
    
    this.requiredBy = requiredBy;
    return this;
  }

   /**
   * Get requiredBy
   * @return requiredBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUIRED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRequiredBy() {
    return requiredBy;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequiredBy(OffsetDateTime requiredBy) {
    this.requiredBy = requiredBy;
  }


  public Distribution slaDate(OffsetDateTime slaDate) {
    
    this.slaDate = slaDate;
    return this;
  }

   /**
   * Get slaDate
   * @return slaDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLA_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSlaDate() {
    return slaDate;
  }


  @JsonProperty(JSON_PROPERTY_SLA_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlaDate(OffsetDateTime slaDate) {
    this.slaDate = slaDate;
  }


  public Distribution state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Distribution Status
   * @return state
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public Distribution fileTransfers(List<Transfer> fileTransfers) {
    
    this.fileTransfers = fileTransfers;
    return this;
  }

  public Distribution addFileTransfersItem(Transfer fileTransfersItem) {
    if (this.fileTransfers == null) {
      this.fileTransfers = new ArrayList<>();
    }
    this.fileTransfers.add(fileTransfersItem);
    return this;
  }

   /**
   * Get fileTransfers
   * @return fileTransfers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Transfer> getFileTransfers() {
    return fileTransfers;
  }


  @JsonProperty(JSON_PROPERTY_FILE_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileTransfers(List<Transfer> fileTransfers) {
    this.fileTransfers = fileTransfers;
  }


  public Distribution message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public Distribution retries(Integer retries) {
    
    this.retries = retries;
    return this;
  }

   /**
   * Get retries
   * @return retries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRetries() {
    return retries;
  }


  @JsonProperty(JSON_PROPERTY_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetries(Integer retries) {
    this.retries = retries;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Distribution distribution = (Distribution) o;
    return Objects.equals(this.id, distribution.id) &&
        Objects.equals(this.asset, distribution.asset) &&
        Objects.equals(this.scheduleId, distribution.scheduleId) &&
        Objects.equals(this.channel, distribution.channel) &&
        Objects.equals(this.account, distribution.account) &&
        Objects.equals(this.priority, distribution.priority) &&
        Objects.equals(this.created, distribution.created) &&
        Objects.equals(this.updated, distribution.updated) &&
        Objects.equals(this.requiredBy, distribution.requiredBy) &&
        Objects.equals(this.slaDate, distribution.slaDate) &&
        Objects.equals(this.state, distribution.state) &&
        Objects.equals(this.fileTransfers, distribution.fileTransfers) &&
        Objects.equals(this.message, distribution.message) &&
        Objects.equals(this.retries, distribution.retries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, asset, scheduleId, channel, account, priority, created, updated, requiredBy, slaDate, state, fileTransfers, message, retries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Distribution {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    scheduleId: ").append(toIndentedString(scheduleId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    requiredBy: ").append(toIndentedString(requiredBy)).append("\n");
    sb.append("    slaDate: ").append(toIndentedString(slaDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    fileTransfers: ").append(toIndentedString(fileTransfers)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

