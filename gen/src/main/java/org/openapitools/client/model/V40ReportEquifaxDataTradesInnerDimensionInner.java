/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.V40EquifaxScoreNumberOrMaxIndustryCode;
import org.openapitools.client.model.V40ReportEquifaxDataFileSinceDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * V40ReportEquifaxDataTradesInnerDimensionInner
 */
@JsonPropertyOrder({
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_BALANCE,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_ACTUAL_PAYMENT_AMOUNT,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_SCHEDULED_PAYMENT_AMOUNT,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_LAST_PAYMENT_DATE,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_HIGH_CREDIT,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_CREDIT_LIMIT,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_PAST_DUE_AMOUNT,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_NARRATIVE_CODES,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_RAW_NARRATIVE_CODES,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_ACCOUNT_DESIGNATOR_CODE,
  V40ReportEquifaxDataTradesInnerDimensionInner.JSON_PROPERTY_DIMENSIONS_ACCOUNT_TYPE_CODE
})
@JsonTypeName("V4_0_ReportEquifax_data_trades_inner_dimension_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class V40ReportEquifaxDataTradesInnerDimensionInner {
  public static final String JSON_PROPERTY_DIMENSIONS_BALANCE = "dimensionsBalance";
  private Integer dimensionsBalance;

  public static final String JSON_PROPERTY_DIMENSIONS_ACTUAL_PAYMENT_AMOUNT = "dimensionsActualPaymentAmount";
  private Integer dimensionsActualPaymentAmount;

  public static final String JSON_PROPERTY_DIMENSIONS_SCHEDULED_PAYMENT_AMOUNT = "dimensionsScheduledPaymentAmount";
  private Integer dimensionsScheduledPaymentAmount;

  public static final String JSON_PROPERTY_DIMENSIONS_LAST_PAYMENT_DATE = "dimensionsLastPaymentDate";
  private V40ReportEquifaxDataFileSinceDate dimensionsLastPaymentDate;

  public static final String JSON_PROPERTY_DIMENSIONS_HIGH_CREDIT = "dimensionsHighCredit";
  private Integer dimensionsHighCredit;

  public static final String JSON_PROPERTY_DIMENSIONS_CREDIT_LIMIT = "dimensionsCreditLimit";
  private Integer dimensionsCreditLimit;

  public static final String JSON_PROPERTY_DIMENSIONS_PAST_DUE_AMOUNT = "dimensionsPastDueAmount";
  private Integer dimensionsPastDueAmount;

  public static final String JSON_PROPERTY_DIMENSIONS_NARRATIVE_CODES = "dimensionsNarrativeCodes";
  private List<Object> dimensionsNarrativeCodes;

  public static final String JSON_PROPERTY_DIMENSIONS_RAW_NARRATIVE_CODES = "dimensionsRawNarrativeCodes";
  private List<String> dimensionsRawNarrativeCodes;

  public static final String JSON_PROPERTY_DIMENSIONS_ACCOUNT_DESIGNATOR_CODE = "dimensionsAccountDesignatorCode";
  private V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountDesignatorCode;

  public static final String JSON_PROPERTY_DIMENSIONS_ACCOUNT_TYPE_CODE = "dimensionsAccountTypeCode";
  private V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountTypeCode;

  public V40ReportEquifaxDataTradesInnerDimensionInner() {
  }

  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsBalance(Integer dimensionsBalance) {
    
    this.dimensionsBalance = dimensionsBalance;
    return this;
  }

   /**
   * Get dimensionsBalance
   * @return dimensionsBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsBalance() {
    return dimensionsBalance;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsBalance(Integer dimensionsBalance) {
    this.dimensionsBalance = dimensionsBalance;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsActualPaymentAmount(Integer dimensionsActualPaymentAmount) {
    
    this.dimensionsActualPaymentAmount = dimensionsActualPaymentAmount;
    return this;
  }

   /**
   * Get dimensionsActualPaymentAmount
   * @return dimensionsActualPaymentAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACTUAL_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsActualPaymentAmount() {
    return dimensionsActualPaymentAmount;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACTUAL_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsActualPaymentAmount(Integer dimensionsActualPaymentAmount) {
    this.dimensionsActualPaymentAmount = dimensionsActualPaymentAmount;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsScheduledPaymentAmount(Integer dimensionsScheduledPaymentAmount) {
    
    this.dimensionsScheduledPaymentAmount = dimensionsScheduledPaymentAmount;
    return this;
  }

   /**
   * Get dimensionsScheduledPaymentAmount
   * @return dimensionsScheduledPaymentAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_SCHEDULED_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsScheduledPaymentAmount() {
    return dimensionsScheduledPaymentAmount;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_SCHEDULED_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsScheduledPaymentAmount(Integer dimensionsScheduledPaymentAmount) {
    this.dimensionsScheduledPaymentAmount = dimensionsScheduledPaymentAmount;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsLastPaymentDate(V40ReportEquifaxDataFileSinceDate dimensionsLastPaymentDate) {
    
    this.dimensionsLastPaymentDate = dimensionsLastPaymentDate;
    return this;
  }

   /**
   * Get dimensionsLastPaymentDate
   * @return dimensionsLastPaymentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_LAST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40ReportEquifaxDataFileSinceDate getDimensionsLastPaymentDate() {
    return dimensionsLastPaymentDate;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_LAST_PAYMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsLastPaymentDate(V40ReportEquifaxDataFileSinceDate dimensionsLastPaymentDate) {
    this.dimensionsLastPaymentDate = dimensionsLastPaymentDate;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsHighCredit(Integer dimensionsHighCredit) {
    
    this.dimensionsHighCredit = dimensionsHighCredit;
    return this;
  }

   /**
   * Get dimensionsHighCredit
   * @return dimensionsHighCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsHighCredit() {
    return dimensionsHighCredit;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsHighCredit(Integer dimensionsHighCredit) {
    this.dimensionsHighCredit = dimensionsHighCredit;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsCreditLimit(Integer dimensionsCreditLimit) {
    
    this.dimensionsCreditLimit = dimensionsCreditLimit;
    return this;
  }

   /**
   * Get dimensionsCreditLimit
   * @return dimensionsCreditLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsCreditLimit() {
    return dimensionsCreditLimit;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsCreditLimit(Integer dimensionsCreditLimit) {
    this.dimensionsCreditLimit = dimensionsCreditLimit;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsPastDueAmount(Integer dimensionsPastDueAmount) {
    
    this.dimensionsPastDueAmount = dimensionsPastDueAmount;
    return this;
  }

   /**
   * Get dimensionsPastDueAmount
   * @return dimensionsPastDueAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_PAST_DUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDimensionsPastDueAmount() {
    return dimensionsPastDueAmount;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_PAST_DUE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsPastDueAmount(Integer dimensionsPastDueAmount) {
    this.dimensionsPastDueAmount = dimensionsPastDueAmount;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsNarrativeCodes(List<Object> dimensionsNarrativeCodes) {
    
    this.dimensionsNarrativeCodes = dimensionsNarrativeCodes;
    return this;
  }

  public V40ReportEquifaxDataTradesInnerDimensionInner addDimensionsNarrativeCodesItem(Object dimensionsNarrativeCodesItem) {
    if (this.dimensionsNarrativeCodes == null) {
      this.dimensionsNarrativeCodes = new ArrayList<>();
    }
    this.dimensionsNarrativeCodes.add(dimensionsNarrativeCodesItem);
    return this;
  }

   /**
   * Get dimensionsNarrativeCodes
   * @return dimensionsNarrativeCodes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_NARRATIVE_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getDimensionsNarrativeCodes() {
    return dimensionsNarrativeCodes;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_NARRATIVE_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsNarrativeCodes(List<Object> dimensionsNarrativeCodes) {
    this.dimensionsNarrativeCodes = dimensionsNarrativeCodes;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsRawNarrativeCodes(List<String> dimensionsRawNarrativeCodes) {
    
    this.dimensionsRawNarrativeCodes = dimensionsRawNarrativeCodes;
    return this;
  }

  public V40ReportEquifaxDataTradesInnerDimensionInner addDimensionsRawNarrativeCodesItem(String dimensionsRawNarrativeCodesItem) {
    if (this.dimensionsRawNarrativeCodes == null) {
      this.dimensionsRawNarrativeCodes = new ArrayList<>();
    }
    this.dimensionsRawNarrativeCodes.add(dimensionsRawNarrativeCodesItem);
    return this;
  }

   /**
   * Get dimensionsRawNarrativeCodes
   * @return dimensionsRawNarrativeCodes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_RAW_NARRATIVE_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDimensionsRawNarrativeCodes() {
    return dimensionsRawNarrativeCodes;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_RAW_NARRATIVE_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsRawNarrativeCodes(List<String> dimensionsRawNarrativeCodes) {
    this.dimensionsRawNarrativeCodes = dimensionsRawNarrativeCodes;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsAccountDesignatorCode(V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountDesignatorCode) {
    
    this.dimensionsAccountDesignatorCode = dimensionsAccountDesignatorCode;
    return this;
  }

   /**
   * Get dimensionsAccountDesignatorCode
   * @return dimensionsAccountDesignatorCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACCOUNT_DESIGNATOR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40EquifaxScoreNumberOrMaxIndustryCode getDimensionsAccountDesignatorCode() {
    return dimensionsAccountDesignatorCode;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACCOUNT_DESIGNATOR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsAccountDesignatorCode(V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountDesignatorCode) {
    this.dimensionsAccountDesignatorCode = dimensionsAccountDesignatorCode;
  }


  public V40ReportEquifaxDataTradesInnerDimensionInner dimensionsAccountTypeCode(V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountTypeCode) {
    
    this.dimensionsAccountTypeCode = dimensionsAccountTypeCode;
    return this;
  }

   /**
   * Get dimensionsAccountTypeCode
   * @return dimensionsAccountTypeCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACCOUNT_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40EquifaxScoreNumberOrMaxIndustryCode getDimensionsAccountTypeCode() {
    return dimensionsAccountTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_ACCOUNT_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsAccountTypeCode(V40EquifaxScoreNumberOrMaxIndustryCode dimensionsAccountTypeCode) {
    this.dimensionsAccountTypeCode = dimensionsAccountTypeCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V40ReportEquifaxDataTradesInnerDimensionInner v40ReportEquifaxDataTradesInnerDimensionInner = (V40ReportEquifaxDataTradesInnerDimensionInner) o;
    return Objects.equals(this.dimensionsBalance, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsBalance) &&
        Objects.equals(this.dimensionsActualPaymentAmount, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsActualPaymentAmount) &&
        Objects.equals(this.dimensionsScheduledPaymentAmount, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsScheduledPaymentAmount) &&
        Objects.equals(this.dimensionsLastPaymentDate, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsLastPaymentDate) &&
        Objects.equals(this.dimensionsHighCredit, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsHighCredit) &&
        Objects.equals(this.dimensionsCreditLimit, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsCreditLimit) &&
        Objects.equals(this.dimensionsPastDueAmount, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsPastDueAmount) &&
        Objects.equals(this.dimensionsNarrativeCodes, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsNarrativeCodes) &&
        Objects.equals(this.dimensionsRawNarrativeCodes, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsRawNarrativeCodes) &&
        Objects.equals(this.dimensionsAccountDesignatorCode, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsAccountDesignatorCode) &&
        Objects.equals(this.dimensionsAccountTypeCode, v40ReportEquifaxDataTradesInnerDimensionInner.dimensionsAccountTypeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimensionsBalance, dimensionsActualPaymentAmount, dimensionsScheduledPaymentAmount, dimensionsLastPaymentDate, dimensionsHighCredit, dimensionsCreditLimit, dimensionsPastDueAmount, dimensionsNarrativeCodes, dimensionsRawNarrativeCodes, dimensionsAccountDesignatorCode, dimensionsAccountTypeCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V40ReportEquifaxDataTradesInnerDimensionInner {\n");
    sb.append("    dimensionsBalance: ").append(toIndentedString(dimensionsBalance)).append("\n");
    sb.append("    dimensionsActualPaymentAmount: ").append(toIndentedString(dimensionsActualPaymentAmount)).append("\n");
    sb.append("    dimensionsScheduledPaymentAmount: ").append(toIndentedString(dimensionsScheduledPaymentAmount)).append("\n");
    sb.append("    dimensionsLastPaymentDate: ").append(toIndentedString(dimensionsLastPaymentDate)).append("\n");
    sb.append("    dimensionsHighCredit: ").append(toIndentedString(dimensionsHighCredit)).append("\n");
    sb.append("    dimensionsCreditLimit: ").append(toIndentedString(dimensionsCreditLimit)).append("\n");
    sb.append("    dimensionsPastDueAmount: ").append(toIndentedString(dimensionsPastDueAmount)).append("\n");
    sb.append("    dimensionsNarrativeCodes: ").append(toIndentedString(dimensionsNarrativeCodes)).append("\n");
    sb.append("    dimensionsRawNarrativeCodes: ").append(toIndentedString(dimensionsRawNarrativeCodes)).append("\n");
    sb.append("    dimensionsAccountDesignatorCode: ").append(toIndentedString(dimensionsAccountDesignatorCode)).append("\n");
    sb.append("    dimensionsAccountTypeCode: ").append(toIndentedString(dimensionsAccountTypeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

