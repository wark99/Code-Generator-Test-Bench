/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Remarks2;
import org.openapitools.client.model.Subscriber;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TradeAccount
 */
@JsonPropertyOrder({
  TradeAccount.JSON_PROPERTY_ACCOUNT_NUMBER,
  TradeAccount.JSON_PROPERTY_ACCOUNT_RATING,
  TradeAccount.JSON_PROPERTY_CURRENT_BALANCE,
  TradeAccount.JSON_PROPERTY_PAST_DUE,
  TradeAccount.JSON_PROPERTY_PORTFOLIO_TYPE,
  TradeAccount.JSON_PROPERTY_PREVIOUS_ACCOUNT_RATING,
  TradeAccount.JSON_PROPERTY_PREVIOUS_PAST_DUE,
  TradeAccount.JSON_PROPERTY_REMARKS,
  TradeAccount.JSON_PROPERTY_SUBSCRIBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TradeAccount {
  public static final String JSON_PROPERTY_ACCOUNT_NUMBER = "accountNumber";
  private String accountNumber;

  public static final String JSON_PROPERTY_ACCOUNT_RATING = "accountRating";
  private String accountRating;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private String currentBalance;

  public static final String JSON_PROPERTY_PAST_DUE = "pastDue";
  private String pastDue;

  public static final String JSON_PROPERTY_PORTFOLIO_TYPE = "portfolioType";
  private String portfolioType;

  public static final String JSON_PROPERTY_PREVIOUS_ACCOUNT_RATING = "previousAccountRating";
  private String previousAccountRating;

  public static final String JSON_PROPERTY_PREVIOUS_PAST_DUE = "previousPastDue";
  private String previousPastDue;

  public static final String JSON_PROPERTY_REMARKS = "remarks";
  private List<Remarks2> remarks;

  public static final String JSON_PROPERTY_SUBSCRIBER = "subscriber";
  private Subscriber subscriber;

  public TradeAccount() {
  }

  public TradeAccount accountNumber(String accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountNumber() {
    return accountNumber;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public TradeAccount accountRating(String accountRating) {
    
    this.accountRating = accountRating;
    return this;
  }

   /**
   * Get accountRating
   * @return accountRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountRating() {
    return accountRating;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountRating(String accountRating) {
    this.accountRating = accountRating;
  }


  public TradeAccount currentBalance(String currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(String currentBalance) {
    this.currentBalance = currentBalance;
  }


  public TradeAccount pastDue(String pastDue) {
    
    this.pastDue = pastDue;
    return this;
  }

   /**
   * Get pastDue
   * @return pastDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPastDue() {
    return pastDue;
  }


  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPastDue(String pastDue) {
    this.pastDue = pastDue;
  }


  public TradeAccount portfolioType(String portfolioType) {
    
    this.portfolioType = portfolioType;
    return this;
  }

   /**
   * Get portfolioType
   * @return portfolioType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortfolioType() {
    return portfolioType;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortfolioType(String portfolioType) {
    this.portfolioType = portfolioType;
  }


  public TradeAccount previousAccountRating(String previousAccountRating) {
    
    this.previousAccountRating = previousAccountRating;
    return this;
  }

   /**
   * Get previousAccountRating
   * @return previousAccountRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIOUS_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviousAccountRating() {
    return previousAccountRating;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousAccountRating(String previousAccountRating) {
    this.previousAccountRating = previousAccountRating;
  }


  public TradeAccount previousPastDue(String previousPastDue) {
    
    this.previousPastDue = previousPastDue;
    return this;
  }

   /**
   * Get previousPastDue
   * @return previousPastDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIOUS_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviousPastDue() {
    return previousPastDue;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousPastDue(String previousPastDue) {
    this.previousPastDue = previousPastDue;
  }


  public TradeAccount remarks(List<Remarks2> remarks) {
    
    this.remarks = remarks;
    return this;
  }

  public TradeAccount addRemarksItem(Remarks2 remarksItem) {
    if (this.remarks == null) {
      this.remarks = new ArrayList<>();
    }
    this.remarks.add(remarksItem);
    return this;
  }

   /**
   * Get remarks
   * @return remarks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Remarks2> getRemarks() {
    return remarks;
  }


  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemarks(List<Remarks2> remarks) {
    this.remarks = remarks;
  }


  public TradeAccount subscriber(Subscriber subscriber) {
    
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subscriber getSubscriber() {
    return subscriber;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriber(Subscriber subscriber) {
    this.subscriber = subscriber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradeAccount tradeAccount = (TradeAccount) o;
    return Objects.equals(this.accountNumber, tradeAccount.accountNumber) &&
        Objects.equals(this.accountRating, tradeAccount.accountRating) &&
        Objects.equals(this.currentBalance, tradeAccount.currentBalance) &&
        Objects.equals(this.pastDue, tradeAccount.pastDue) &&
        Objects.equals(this.portfolioType, tradeAccount.portfolioType) &&
        Objects.equals(this.previousAccountRating, tradeAccount.previousAccountRating) &&
        Objects.equals(this.previousPastDue, tradeAccount.previousPastDue) &&
        Objects.equals(this.remarks, tradeAccount.remarks) &&
        Objects.equals(this.subscriber, tradeAccount.subscriber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, accountRating, currentBalance, pastDue, portfolioType, previousAccountRating, previousPastDue, remarks, subscriber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradeAccount {\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountRating: ").append(toIndentedString(accountRating)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    pastDue: ").append(toIndentedString(pastDue)).append("\n");
    sb.append("    portfolioType: ").append(toIndentedString(portfolioType)).append("\n");
    sb.append("    previousAccountRating: ").append(toIndentedString(previousAccountRating)).append("\n");
    sb.append("    previousPastDue: ").append(toIndentedString(previousPastDue)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

