/*
 * Reference
 * The DoDays API reference.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@dodays.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostPaymentIntentRequestOverrides
 */
@JsonPropertyOrder({
  PostPaymentIntentRequestOverrides.JSON_PROPERTY_PAYMENT_METHOD_TYPES,
  PostPaymentIntentRequestOverrides.JSON_PROPERTY_SETUP_FUTURE_USAGE,
  PostPaymentIntentRequestOverrides.JSON_PROPERTY_CAPTURE_METHOD
})
@JsonTypeName("post_payment_intent_request_overrides")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:35.686627593Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PostPaymentIntentRequestOverrides {
  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPES = "payment_method_types";
  private List<String> paymentMethodTypes;

  public static final String JSON_PROPERTY_SETUP_FUTURE_USAGE = "setup_future_usage";
  private String setupFutureUsage;

  public static final String JSON_PROPERTY_CAPTURE_METHOD = "capture_method";
  private String captureMethod;

  public PostPaymentIntentRequestOverrides() {
  }

  public PostPaymentIntentRequestOverrides paymentMethodTypes(List<String> paymentMethodTypes) {
    
    this.paymentMethodTypes = paymentMethodTypes;
    return this;
  }

  public PostPaymentIntentRequestOverrides addPaymentMethodTypesItem(String paymentMethodTypesItem) {
    if (this.paymentMethodTypes == null) {
      this.paymentMethodTypes = new ArrayList<>();
    }
    this.paymentMethodTypes.add(paymentMethodTypesItem);
    return this;
  }

   /**
   * Get paymentMethodTypes
   * @return paymentMethodTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getPaymentMethodTypes() {
    return paymentMethodTypes;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodTypes(List<String> paymentMethodTypes) {
    this.paymentMethodTypes = paymentMethodTypes;
  }


  public PostPaymentIntentRequestOverrides setupFutureUsage(String setupFutureUsage) {
    
    this.setupFutureUsage = setupFutureUsage;
    return this;
  }

   /**
   * Get setupFutureUsage
   * @return setupFutureUsage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSetupFutureUsage() {
    return setupFutureUsage;
  }


  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetupFutureUsage(String setupFutureUsage) {
    this.setupFutureUsage = setupFutureUsage;
  }


  public PostPaymentIntentRequestOverrides captureMethod(String captureMethod) {
    
    this.captureMethod = captureMethod;
    return this;
  }

   /**
   * Get captureMethod
   * @return captureMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCaptureMethod() {
    return captureMethod;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptureMethod(String captureMethod) {
    this.captureMethod = captureMethod;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPaymentIntentRequestOverrides postPaymentIntentRequestOverrides = (PostPaymentIntentRequestOverrides) o;
    return Objects.equals(this.paymentMethodTypes, postPaymentIntentRequestOverrides.paymentMethodTypes) &&
        Objects.equals(this.setupFutureUsage, postPaymentIntentRequestOverrides.setupFutureUsage) &&
        Objects.equals(this.captureMethod, postPaymentIntentRequestOverrides.captureMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodTypes, setupFutureUsage, captureMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPaymentIntentRequestOverrides {\n");
    sb.append("    paymentMethodTypes: ").append(toIndentedString(paymentMethodTypes)).append("\n");
    sb.append("    setupFutureUsage: ").append(toIndentedString(setupFutureUsage)).append("\n");
    sb.append("    captureMethod: ").append(toIndentedString(captureMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

