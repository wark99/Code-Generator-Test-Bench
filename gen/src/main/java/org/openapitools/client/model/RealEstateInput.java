/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AgeOfProperty;
import org.openapitools.client.model.ProximityToImportantLocations;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RealEstateInput
 */
@JsonPropertyOrder({
  RealEstateInput.JSON_PROPERTY_PROPERTY_TYPE,
  RealEstateInput.JSON_PROPERTY_PROPERTY_SIZE,
  RealEstateInput.JSON_PROPERTY_BEDROOMS,
  RealEstateInput.JSON_PROPERTY_BATHROOMS,
  RealEstateInput.JSON_PROPERTY_LOCATION,
  RealEstateInput.JSON_PROPERTY_FURNISHING,
  RealEstateInput.JSON_PROPERTY_AGE_OF_PROPERTY,
  RealEstateInput.JSON_PROPERTY_AMENITIES,
  RealEstateInput.JSON_PROPERTY_PROXIMITY_TO_IMPORTANT_LOCATIONS,
  RealEstateInput.JSON_PROPERTY_FLOOR_LEVEL,
  RealEstateInput.JSON_PROPERTY_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:57.940656521Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RealEstateInput {
  public static final String JSON_PROPERTY_PROPERTY_TYPE = "Property_Type";
  private String propertyType;

  public static final String JSON_PROPERTY_PROPERTY_SIZE = "Property_Size";
  private Integer propertySize;

  public static final String JSON_PROPERTY_BEDROOMS = "Bedrooms";
  private Integer bedrooms;

  public static final String JSON_PROPERTY_BATHROOMS = "Bathrooms";
  private Integer bathrooms;

  public static final String JSON_PROPERTY_LOCATION = "Location";
  private String location;

  public static final String JSON_PROPERTY_FURNISHING = "Furnishing";
  private String furnishing;

  public static final String JSON_PROPERTY_AGE_OF_PROPERTY = "Age_of_Property";
  private AgeOfProperty ageOfProperty;

  public static final String JSON_PROPERTY_AMENITIES = "Amenities";
  private String amenities;

  public static final String JSON_PROPERTY_PROXIMITY_TO_IMPORTANT_LOCATIONS = "Proximity_to_Important_Locations";
  private ProximityToImportantLocations proximityToImportantLocations;

  public static final String JSON_PROPERTY_FLOOR_LEVEL = "Floor_Level";
  private Integer floorLevel;

  public static final String JSON_PROPERTY_PROPERTY_STATUS = "Property_Status";
  private String propertyStatus;

  public RealEstateInput() {
  }

  public RealEstateInput propertyType(String propertyType) {
    
    this.propertyType = propertyType;
    return this;
  }

   /**
   * Get propertyType
   * @return propertyType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPropertyType() {
    return propertyType;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPropertyType(String propertyType) {
    this.propertyType = propertyType;
  }


  public RealEstateInput propertySize(Integer propertySize) {
    
    this.propertySize = propertySize;
    return this;
  }

   /**
   * Get propertySize
   * @return propertySize
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPropertySize() {
    return propertySize;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPropertySize(Integer propertySize) {
    this.propertySize = propertySize;
  }


  public RealEstateInput bedrooms(Integer bedrooms) {
    
    this.bedrooms = bedrooms;
    return this;
  }

   /**
   * Get bedrooms
   * @return bedrooms
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEDROOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBedrooms() {
    return bedrooms;
  }


  @JsonProperty(JSON_PROPERTY_BEDROOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBedrooms(Integer bedrooms) {
    this.bedrooms = bedrooms;
  }


  public RealEstateInput bathrooms(Integer bathrooms) {
    
    this.bathrooms = bathrooms;
    return this;
  }

   /**
   * Get bathrooms
   * @return bathrooms
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BATHROOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBathrooms() {
    return bathrooms;
  }


  @JsonProperty(JSON_PROPERTY_BATHROOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBathrooms(Integer bathrooms) {
    this.bathrooms = bathrooms;
  }


  public RealEstateInput location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocation(String location) {
    this.location = location;
  }


  public RealEstateInput furnishing(String furnishing) {
    
    this.furnishing = furnishing;
    return this;
  }

   /**
   * Get furnishing
   * @return furnishing
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FURNISHING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFurnishing() {
    return furnishing;
  }


  @JsonProperty(JSON_PROPERTY_FURNISHING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFurnishing(String furnishing) {
    this.furnishing = furnishing;
  }


  public RealEstateInput ageOfProperty(AgeOfProperty ageOfProperty) {
    
    this.ageOfProperty = ageOfProperty;
    return this;
  }

   /**
   * Get ageOfProperty
   * @return ageOfProperty
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE_OF_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgeOfProperty getAgeOfProperty() {
    return ageOfProperty;
  }


  @JsonProperty(JSON_PROPERTY_AGE_OF_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgeOfProperty(AgeOfProperty ageOfProperty) {
    this.ageOfProperty = ageOfProperty;
  }


  public RealEstateInput amenities(String amenities) {
    
    this.amenities = amenities;
    return this;
  }

   /**
   * Get amenities
   * @return amenities
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMENITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAmenities() {
    return amenities;
  }


  @JsonProperty(JSON_PROPERTY_AMENITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmenities(String amenities) {
    this.amenities = amenities;
  }


  public RealEstateInput proximityToImportantLocations(ProximityToImportantLocations proximityToImportantLocations) {
    
    this.proximityToImportantLocations = proximityToImportantLocations;
    return this;
  }

   /**
   * Get proximityToImportantLocations
   * @return proximityToImportantLocations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROXIMITY_TO_IMPORTANT_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProximityToImportantLocations getProximityToImportantLocations() {
    return proximityToImportantLocations;
  }


  @JsonProperty(JSON_PROPERTY_PROXIMITY_TO_IMPORTANT_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProximityToImportantLocations(ProximityToImportantLocations proximityToImportantLocations) {
    this.proximityToImportantLocations = proximityToImportantLocations;
  }


  public RealEstateInput floorLevel(Integer floorLevel) {
    
    this.floorLevel = floorLevel;
    return this;
  }

   /**
   * Get floorLevel
   * @return floorLevel
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FLOOR_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFloorLevel() {
    return floorLevel;
  }


  @JsonProperty(JSON_PROPERTY_FLOOR_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFloorLevel(Integer floorLevel) {
    this.floorLevel = floorLevel;
  }


  public RealEstateInput propertyStatus(String propertyStatus) {
    
    this.propertyStatus = propertyStatus;
    return this;
  }

   /**
   * Get propertyStatus
   * @return propertyStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPropertyStatus() {
    return propertyStatus;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPropertyStatus(String propertyStatus) {
    this.propertyStatus = propertyStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealEstateInput realEstateInput = (RealEstateInput) o;
    return Objects.equals(this.propertyType, realEstateInput.propertyType) &&
        Objects.equals(this.propertySize, realEstateInput.propertySize) &&
        Objects.equals(this.bedrooms, realEstateInput.bedrooms) &&
        Objects.equals(this.bathrooms, realEstateInput.bathrooms) &&
        Objects.equals(this.location, realEstateInput.location) &&
        Objects.equals(this.furnishing, realEstateInput.furnishing) &&
        Objects.equals(this.ageOfProperty, realEstateInput.ageOfProperty) &&
        Objects.equals(this.amenities, realEstateInput.amenities) &&
        Objects.equals(this.proximityToImportantLocations, realEstateInput.proximityToImportantLocations) &&
        Objects.equals(this.floorLevel, realEstateInput.floorLevel) &&
        Objects.equals(this.propertyStatus, realEstateInput.propertyStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyType, propertySize, bedrooms, bathrooms, location, furnishing, ageOfProperty, amenities, proximityToImportantLocations, floorLevel, propertyStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealEstateInput {\n");
    sb.append("    propertyType: ").append(toIndentedString(propertyType)).append("\n");
    sb.append("    propertySize: ").append(toIndentedString(propertySize)).append("\n");
    sb.append("    bedrooms: ").append(toIndentedString(bedrooms)).append("\n");
    sb.append("    bathrooms: ").append(toIndentedString(bathrooms)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    furnishing: ").append(toIndentedString(furnishing)).append("\n");
    sb.append("    ageOfProperty: ").append(toIndentedString(ageOfProperty)).append("\n");
    sb.append("    amenities: ").append(toIndentedString(amenities)).append("\n");
    sb.append("    proximityToImportantLocations: ").append(toIndentedString(proximityToImportantLocations)).append("\n");
    sb.append("    floorLevel: ").append(toIndentedString(floorLevel)).append("\n");
    sb.append("    propertyStatus: ").append(toIndentedString(propertyStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

