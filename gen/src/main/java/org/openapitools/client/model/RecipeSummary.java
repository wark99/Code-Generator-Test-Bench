/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DishSummary;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RecipeSummary
 */
@JsonPropertyOrder({
  RecipeSummary.JSON_PROPERTY_ID,
  RecipeSummary.JSON_PROPERTY_NAME,
  RecipeSummary.JSON_PROPERTY_DESCRIPTION,
  RecipeSummary.JSON_PROPERTY_COOK_TIME,
  RecipeSummary.JSON_PROPERTY_IMAGES,
  RecipeSummary.JSON_PROPERTY_SELF_BOOKMARKED,
  RecipeSummary.JSON_PROPERTY_AVG_RATING,
  RecipeSummary.JSON_PROPERTY_RATINGS_COUNT,
  RecipeSummary.JSON_PROPERTY_SELF_RATING,
  RecipeSummary.JSON_PROPERTY_DISH,
  RecipeSummary.JSON_PROPERTY_AUTHOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:11.863990102Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RecipeSummary {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_COOK_TIME = "cookTime";
  private Integer cookTime;

  public static final String JSON_PROPERTY_IMAGES = "images";
  private List<URI> images = new ArrayList<>();

  public static final String JSON_PROPERTY_SELF_BOOKMARKED = "selfBookmarked";
  private Boolean selfBookmarked;

  public static final String JSON_PROPERTY_AVG_RATING = "avgRating";
  private Float avgRating;

  public static final String JSON_PROPERTY_RATINGS_COUNT = "ratingsCount";
  private Integer ratingsCount;

  public static final String JSON_PROPERTY_SELF_RATING = "selfRating";
  private Integer selfRating;

  public static final String JSON_PROPERTY_DISH = "dish";
  private DishSummary dish;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public RecipeSummary() {
  }

  public RecipeSummary id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public RecipeSummary name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public RecipeSummary description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RecipeSummary cookTime(Integer cookTime) {
    
    this.cookTime = cookTime;
    return this;
  }

   /**
   * Cook time in minutes
   * @return cookTime
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COOK_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCookTime() {
    return cookTime;
  }


  @JsonProperty(JSON_PROPERTY_COOK_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCookTime(Integer cookTime) {
    this.cookTime = cookTime;
  }


  public RecipeSummary images(List<URI> images) {
    
    this.images = images;
    return this;
  }

  public RecipeSummary addImagesItem(URI imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<URI> getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImages(List<URI> images) {
    this.images = images;
  }


  public RecipeSummary selfBookmarked(Boolean selfBookmarked) {
    
    this.selfBookmarked = selfBookmarked;
    return this;
  }

   /**
   * Get selfBookmarked
   * @return selfBookmarked
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSelfBookmarked() {
    return selfBookmarked;
  }


  @JsonProperty(JSON_PROPERTY_SELF_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfBookmarked(Boolean selfBookmarked) {
    this.selfBookmarked = selfBookmarked;
  }


  public RecipeSummary avgRating(Float avgRating) {
    
    this.avgRating = avgRating;
    return this;
  }

   /**
   * Get avgRating
   * @return avgRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAvgRating() {
    return avgRating;
  }


  @JsonProperty(JSON_PROPERTY_AVG_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvgRating(Float avgRating) {
    this.avgRating = avgRating;
  }


  public RecipeSummary ratingsCount(Integer ratingsCount) {
    
    this.ratingsCount = ratingsCount;
    return this;
  }

   /**
   * Get ratingsCount
   * @return ratingsCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RATINGS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRatingsCount() {
    return ratingsCount;
  }


  @JsonProperty(JSON_PROPERTY_RATINGS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRatingsCount(Integer ratingsCount) {
    this.ratingsCount = ratingsCount;
  }


  public RecipeSummary selfRating(Integer selfRating) {
    
    this.selfRating = selfRating;
    return this;
  }

   /**
   * Get selfRating
   * @return selfRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSelfRating() {
    return selfRating;
  }


  @JsonProperty(JSON_PROPERTY_SELF_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfRating(Integer selfRating) {
    this.selfRating = selfRating;
  }


  public RecipeSummary dish(DishSummary dish) {
    
    this.dish = dish;
    return this;
  }

   /**
   * Get dish
   * @return dish
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DishSummary getDish() {
    return dish;
  }


  @JsonProperty(JSON_PROPERTY_DISH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDish(DishSummary dish) {
    this.dish = dish;
  }


  public RecipeSummary author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipeSummary recipeSummary = (RecipeSummary) o;
    return Objects.equals(this.id, recipeSummary.id) &&
        Objects.equals(this.name, recipeSummary.name) &&
        Objects.equals(this.description, recipeSummary.description) &&
        Objects.equals(this.cookTime, recipeSummary.cookTime) &&
        Objects.equals(this.images, recipeSummary.images) &&
        Objects.equals(this.selfBookmarked, recipeSummary.selfBookmarked) &&
        Objects.equals(this.avgRating, recipeSummary.avgRating) &&
        Objects.equals(this.ratingsCount, recipeSummary.ratingsCount) &&
        Objects.equals(this.selfRating, recipeSummary.selfRating) &&
        Objects.equals(this.dish, recipeSummary.dish) &&
        Objects.equals(this.author, recipeSummary.author);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, cookTime, images, selfBookmarked, avgRating, ratingsCount, selfRating, dish, author);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipeSummary {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cookTime: ").append(toIndentedString(cookTime)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    selfBookmarked: ").append(toIndentedString(selfBookmarked)).append("\n");
    sb.append("    avgRating: ").append(toIndentedString(avgRating)).append("\n");
    sb.append("    ratingsCount: ").append(toIndentedString(ratingsCount)).append("\n");
    sb.append("    selfRating: ").append(toIndentedString(selfRating)).append("\n");
    sb.append("    dish: ").append(toIndentedString(dish)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

