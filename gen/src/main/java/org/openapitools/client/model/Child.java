/*
 * kita-app - kinddatenEAI Schnittstellenspezifikation
 * Schnittstellenspezifikation für die Übertragung von Kinddaten aus dem kf+ über eine kinddatenEAI an die kita-app.
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: itm.km23@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChildAddress;
import org.openapitools.client.model.ChildParentsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Child
 */
@JsonPropertyOrder({
  Child.JSON_PROPERTY_CHILD_ID,
  Child.JSON_PROPERTY_FIRST_NAME,
  Child.JSON_PROPERTY_LAST_NAME,
  Child.JSON_PROPERTY_BIRTHDAY,
  Child.JSON_PROPERTY_CARE_START,
  Child.JSON_PROPERTY_CARE_END,
  Child.JSON_PROPERTY_ADDRESS,
  Child.JSON_PROPERTY_PARENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:34.786677241Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Child {
  public static final String JSON_PROPERTY_CHILD_ID = "childId";
  private String childId;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_BIRTHDAY = "birthday";
  private LocalDate birthday;

  public static final String JSON_PROPERTY_CARE_START = "careStart";
  private LocalDate careStart;

  public static final String JSON_PROPERTY_CARE_END = "careEnd";
  private LocalDate careEnd;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private ChildAddress address;

  public static final String JSON_PROPERTY_PARENTS = "parents";
  private List<ChildParentsInner> parents;

  public Child() {
  }

  public Child childId(String childId) {
    
    this.childId = childId;
    return this;
  }

   /**
   * Dieses Feld wird bei Bewerbungen vom erfassenden System, also vom Kita-Planer 2 selbst, vergeben und zur eindeutigen Identifizierung der Bewerbung/des Vertrags genutzt. Es handelt sich NICHT um eine ID des physischen Kindes. Die KIND_ID_EXTERN ist eindeutig für das Tripel: Kind, Bewerbungsprozess, Kita. Pro Kita und Bewerbungsprozess (z.B. andere Altersgruppe) gibt es also für das gleiche physische Kind eine unterschiedliche externe ID. [KITA_ID_EXTERN]
   * @return childId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHILD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChildId() {
    return childId;
  }


  @JsonProperty(JSON_PROPERTY_CHILD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildId(String childId) {
    this.childId = childId;
  }


  public Child firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Vorname des Kindes [KIND_VORNAME]
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Child lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Nachname des Kindes [KIND_NACHNAME]
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Child birthday(LocalDate birthday) {
    
    this.birthday = birthday;
    return this;
  }

   /**
   * Geburtstag des Kindes [KIND_GEBURTSDATUM]
   * @return birthday
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getBirthday() {
    return birthday;
  }


  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthday(LocalDate birthday) {
    this.birthday = birthday;
  }


  public Child careStart(LocalDate careStart) {
    
    this.careStart = careStart;
    return this;
  }

   /**
   * Datum des Vertragsbeginns bzw. der aktuellen Vertragsänderung [VER_VERTRAG_AB]
   * @return careStart
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getCareStart() {
    return careStart;
  }


  @JsonProperty(JSON_PROPERTY_CARE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCareStart(LocalDate careStart) {
    this.careStart = careStart;
  }


  public Child careEnd(LocalDate careEnd) {
    
    this.careEnd = careEnd;
    return this;
  }

   /**
   * Datum zu dem der Vertrag gekündigt ist (wenn explizit gekündigt wurde) [VER_KUENDIGUNG_ZUM]
   * @return careEnd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getCareEnd() {
    return careEnd;
  }


  @JsonProperty(JSON_PROPERTY_CARE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCareEnd(LocalDate careEnd) {
    this.careEnd = careEnd;
  }


  public Child address(ChildAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChildAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(ChildAddress address) {
    this.address = address;
  }


  public Child parents(List<ChildParentsInner> parents) {
    
    this.parents = parents;
    return this;
  }

  public Child addParentsItem(ChildParentsInner parentsItem) {
    if (this.parents == null) {
      this.parents = new ArrayList<>();
    }
    this.parents.add(parentsItem);
    return this;
  }

   /**
   * Array mit Sorgeberechtigten für das Kind. Liste wird aus SB1, SB2 und ABW berechnet.
   * @return parents
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChildParentsInner> getParents() {
    return parents;
  }


  @JsonProperty(JSON_PROPERTY_PARENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParents(List<ChildParentsInner> parents) {
    this.parents = parents;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Child child = (Child) o;
    return Objects.equals(this.childId, child.childId) &&
        Objects.equals(this.firstName, child.firstName) &&
        Objects.equals(this.lastName, child.lastName) &&
        Objects.equals(this.birthday, child.birthday) &&
        Objects.equals(this.careStart, child.careStart) &&
        Objects.equals(this.careEnd, child.careEnd) &&
        Objects.equals(this.address, child.address) &&
        Objects.equals(this.parents, child.parents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childId, firstName, lastName, birthday, careStart, careEnd, address, parents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Child {\n");
    sb.append("    childId: ").append(toIndentedString(childId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    careStart: ").append(toIndentedString(careStart)).append("\n");
    sb.append("    careEnd: ").append(toIndentedString(careEnd)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

