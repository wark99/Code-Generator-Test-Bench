/*
 * Euboul - Studio Backend
 * listing of all APIs of studio backend 
 *
 * The version of the OpenAPI document: 0.1.25
 * Contact: admin@cognitivegarage.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ChoreographUpdate
 */
@JsonPropertyOrder({
  ChoreographUpdate.JSON_PROPERTY_STATUS,
  ChoreographUpdate.JSON_PROPERTY_LOCKED_BY,
  ChoreographUpdate.JSON_PROPERTY_LOCKED_AT,
  ChoreographUpdate.JSON_PROPERTY_DATA,
  ChoreographUpdate.JSON_PROPERTY_CANVAS_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:21.073249278Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ChoreographUpdate {
  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_LOCKED_BY = "lockedBy";
  private String lockedBy;

  public static final String JSON_PROPERTY_LOCKED_AT = "lockedAt";
  private OffsetDateTime lockedAt;

  public static final String JSON_PROPERTY_DATA = "data";
  private Object data;

  public static final String JSON_PROPERTY_CANVAS_DATA = "canvasData";
  private Object canvasData;

  public ChoreographUpdate() {
  }

  public ChoreographUpdate status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the choreograph.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public ChoreographUpdate lockedBy(String lockedBy) {
    
    this.lockedBy = lockedBy;
    return this;
  }

   /**
   * The user who locked the choreograph.
   * @return lockedBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLockedBy() {
    return lockedBy;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockedBy(String lockedBy) {
    this.lockedBy = lockedBy;
  }


  public ChoreographUpdate lockedAt(OffsetDateTime lockedAt) {
    
    this.lockedAt = lockedAt;
    return this;
  }

   /**
   * The date and time when the choreograph was locked.
   * @return lockedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLockedAt() {
    return lockedAt;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockedAt(OffsetDateTime lockedAt) {
    this.lockedAt = lockedAt;
  }


  public ChoreographUpdate data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Additional data for the choreograph.
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Object data) {
    this.data = data;
  }


  public ChoreographUpdate canvasData(Object canvasData) {
    
    this.canvasData = canvasData;
    return this;
  }

   /**
   * Data related to the choreograph&#39;s canvas.
   * @return canvasData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCanvasData() {
    return canvasData;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasData(Object canvasData) {
    this.canvasData = canvasData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChoreographUpdate choreographUpdate = (ChoreographUpdate) o;
    return Objects.equals(this.status, choreographUpdate.status) &&
        Objects.equals(this.lockedBy, choreographUpdate.lockedBy) &&
        Objects.equals(this.lockedAt, choreographUpdate.lockedAt) &&
        Objects.equals(this.data, choreographUpdate.data) &&
        Objects.equals(this.canvasData, choreographUpdate.canvasData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, lockedBy, lockedAt, data, canvasData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChoreographUpdate {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lockedBy: ").append(toIndentedString(lockedBy)).append("\n");
    sb.append("    lockedAt: ").append(toIndentedString(lockedAt)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    canvasData: ").append(toIndentedString(canvasData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

