/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DepositSwitchDetailsDistributionsInner;
import org.openapitools.client.model.DepositSwitchDetailsProvider;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DepositSwitchDetails
 */
@JsonPropertyOrder({
  DepositSwitchDetails.JSON_PROPERTY_CUSTOMER_ID,
  DepositSwitchDetails.JSON_PROPERTY_CUSTOMER_TYPE,
  DepositSwitchDetails.JSON_PROPERTY_SWITCH_ID,
  DepositSwitchDetails.JSON_PROPERTY_SWITCH_STATUS,
  DepositSwitchDetails.JSON_PROPERTY_FAILURE_REASON,
  DepositSwitchDetails.JSON_PROPERTY_CREATED_DATE,
  DepositSwitchDetails.JSON_PROPERTY_UPDATED_DATE,
  DepositSwitchDetails.JSON_PROPERTY_AUTHENTICATED,
  DepositSwitchDetails.JSON_PROPERTY_PROVIDER,
  DepositSwitchDetails.JSON_PROPERTY_DISTRIBUTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:26:42.703698393Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DepositSwitchDetails {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_CUSTOMER_TYPE = "customerType";
  private String customerType;

  public static final String JSON_PROPERTY_SWITCH_ID = "switchId";
  private String switchId;

  public static final String JSON_PROPERTY_SWITCH_STATUS = "switchStatus";
  private String switchStatus;

  public static final String JSON_PROPERTY_FAILURE_REASON = "failureReason";
  private String failureReason;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private String createdDate;

  public static final String JSON_PROPERTY_UPDATED_DATE = "updatedDate";
  private String updatedDate;

  public static final String JSON_PROPERTY_AUTHENTICATED = "authenticated";
  private Boolean authenticated;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private DepositSwitchDetailsProvider provider;

  public static final String JSON_PROPERTY_DISTRIBUTIONS = "distributions";
  private List<DepositSwitchDetailsDistributionsInner> distributions = new ArrayList<>();

  public DepositSwitchDetails() {
  }

  public DepositSwitchDetails customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public DepositSwitchDetails customerType(String customerType) {
    
    this.customerType = customerType;
    return this;
  }

   /**
   * The type of Mastercard Open Banking customer (&#x60;active&#x60; or &#x60;testing&#x60;)
   * @return customerType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerType() {
    return customerType;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerType(String customerType) {
    this.customerType = customerType;
  }


  public DepositSwitchDetails switchId(String switchId) {
    
    this.switchId = switchId;
    return this;
  }

   /**
   * Deposit switch ID
   * @return switchId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SWITCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSwitchId() {
    return switchId;
  }


  @JsonProperty(JSON_PROPERTY_SWITCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSwitchId(String switchId) {
    this.switchId = switchId;
  }


  public DepositSwitchDetails switchStatus(String switchStatus) {
    
    this.switchStatus = switchStatus;
    return this;
  }

   /**
   * Deposit switch status. Possible values include &#x60;processing&#x60;, &#x60;completed&#x60;, or &#x60;failed&#x60;.  * processing - The deposit switch is currently being processed. * completed - The deposit switch has been completed successfully. * failed - The deposit switch has failed. Refer to failureReason for more details. 
   * @return switchStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SWITCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSwitchStatus() {
    return switchStatus;
  }


  @JsonProperty(JSON_PROPERTY_SWITCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSwitchStatus(String switchStatus) {
    this.switchStatus = switchStatus;
  }


  public DepositSwitchDetails failureReason(String failureReason) {
    
    this.failureReason = failureReason;
    return this;
  }

   /**
   * Deposit switch failure reason
   * @return failureReason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILURE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFailureReason() {
    return failureReason;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DepositSwitchDetails createdDate(String createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Date and time in ISO 8601 format (YYYY-MM-DDThh:mm:ssZ) when deposit switch was performed
   * @return createdDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(String createdDate) {
    this.createdDate = createdDate;
  }


  public DepositSwitchDetails updatedDate(String updatedDate) {
    
    this.updatedDate = updatedDate;
    return this;
  }

   /**
   * Date and time in ISO 8601 format (YYYY-MM-DDThh:mm:ssZ) when deposit switch status was updated
   * @return updatedDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUpdatedDate() {
    return updatedDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedDate(String updatedDate) {
    this.updatedDate = updatedDate;
  }


  public DepositSwitchDetails authenticated(Boolean authenticated) {
    
    this.authenticated = authenticated;
    return this;
  }

   /**
   * Indicates whether or not the deposit switch task has successfully authenticated against the payroll system
   * @return authenticated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAuthenticated() {
    return authenticated;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticated(Boolean authenticated) {
    this.authenticated = authenticated;
  }


  public DepositSwitchDetails provider(DepositSwitchDetailsProvider provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DepositSwitchDetailsProvider getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProvider(DepositSwitchDetailsProvider provider) {
    this.provider = provider;
  }


  public DepositSwitchDetails distributions(List<DepositSwitchDetailsDistributionsInner> distributions) {
    
    this.distributions = distributions;
    return this;
  }

  public DepositSwitchDetails addDistributionsItem(DepositSwitchDetailsDistributionsInner distributionsItem) {
    if (this.distributions == null) {
      this.distributions = new ArrayList<>();
    }
    this.distributions.add(distributionsItem);
    return this;
  }

   /**
   * Deposit switch distribution details
   * @return distributions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISTRIBUTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<DepositSwitchDetailsDistributionsInner> getDistributions() {
    return distributions;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDistributions(List<DepositSwitchDetailsDistributionsInner> distributions) {
    this.distributions = distributions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositSwitchDetails depositSwitchDetails = (DepositSwitchDetails) o;
    return Objects.equals(this.customerId, depositSwitchDetails.customerId) &&
        Objects.equals(this.customerType, depositSwitchDetails.customerType) &&
        Objects.equals(this.switchId, depositSwitchDetails.switchId) &&
        Objects.equals(this.switchStatus, depositSwitchDetails.switchStatus) &&
        Objects.equals(this.failureReason, depositSwitchDetails.failureReason) &&
        Objects.equals(this.createdDate, depositSwitchDetails.createdDate) &&
        Objects.equals(this.updatedDate, depositSwitchDetails.updatedDate) &&
        Objects.equals(this.authenticated, depositSwitchDetails.authenticated) &&
        Objects.equals(this.provider, depositSwitchDetails.provider) &&
        Objects.equals(this.distributions, depositSwitchDetails.distributions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, customerType, switchId, switchStatus, failureReason, createdDate, updatedDate, authenticated, provider, distributions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositSwitchDetails {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("    switchId: ").append(toIndentedString(switchId)).append("\n");
    sb.append("    switchStatus: ").append(toIndentedString(switchStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("    authenticated: ").append(toIndentedString(authenticated)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    distributions: ").append(toIndentedString(distributions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

