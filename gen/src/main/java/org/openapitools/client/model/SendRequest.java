/*
 * concreateAI-test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SendRequest
 */
@JsonPropertyOrder({
  SendRequest.JSON_PROPERTY_AMOUNT_TRANSFER,
  SendRequest.JSON_PROPERTY_CURRENCY,
  SendRequest.JSON_PROPERTY_FROM_ACCOUNT_CODE,
  SendRequest.JSON_PROPERTY_TARGET_ACCOUNT_CODE
})
@JsonTypeName("send_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:12.335744348Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SendRequest {
  public static final String JSON_PROPERTY_AMOUNT_TRANSFER = "amount_transfer";
  private BigDecimal amountTransfer;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_FROM_ACCOUNT_CODE = "from_account_code";
  private String fromAccountCode;

  public static final String JSON_PROPERTY_TARGET_ACCOUNT_CODE = "target_account_code";
  private String targetAccountCode;

  public SendRequest() {
  }

  public SendRequest amountTransfer(BigDecimal amountTransfer) {
    
    this.amountTransfer = amountTransfer;
    return this;
  }

   /**
   * Get amountTransfer
   * @return amountTransfer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmountTransfer() {
    return amountTransfer;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountTransfer(BigDecimal amountTransfer) {
    this.amountTransfer = amountTransfer;
  }


  public SendRequest currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public SendRequest fromAccountCode(String fromAccountCode) {
    
    this.fromAccountCode = fromAccountCode;
    return this;
  }

   /**
   * Get fromAccountCode
   * @return fromAccountCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromAccountCode() {
    return fromAccountCode;
  }


  @JsonProperty(JSON_PROPERTY_FROM_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromAccountCode(String fromAccountCode) {
    this.fromAccountCode = fromAccountCode;
  }


  public SendRequest targetAccountCode(String targetAccountCode) {
    
    this.targetAccountCode = targetAccountCode;
    return this;
  }

   /**
   * Get targetAccountCode
   * @return targetAccountCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetAccountCode() {
    return targetAccountCode;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetAccountCode(String targetAccountCode) {
    this.targetAccountCode = targetAccountCode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendRequest sendRequest = (SendRequest) o;
    return Objects.equals(this.amountTransfer, sendRequest.amountTransfer) &&
        Objects.equals(this.currency, sendRequest.currency) &&
        Objects.equals(this.fromAccountCode, sendRequest.fromAccountCode) &&
        Objects.equals(this.targetAccountCode, sendRequest.targetAccountCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountTransfer, currency, fromAccountCode, targetAccountCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendRequest {\n");
    sb.append("    amountTransfer: ").append(toIndentedString(amountTransfer)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fromAccountCode: ").append(toIndentedString(fromAccountCode)).append("\n");
    sb.append("    targetAccountCode: ").append(toIndentedString(targetAccountCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

