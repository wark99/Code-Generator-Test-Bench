/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Collections;
import org.openapitools.client.model.Trades;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountReportingReview
 */
@JsonPropertyOrder({
  AccountReportingReview.JSON_PROPERTY_COLLECTIONS,
  AccountReportingReview.JSON_PROPERTY_TRADES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountReportingReview {
  public static final String JSON_PROPERTY_COLLECTIONS = "collections";
  private List<Collections> collections;

  public static final String JSON_PROPERTY_TRADES = "trades";
  private List<Trades> trades;

  public AccountReportingReview() {
  }

  public AccountReportingReview collections(List<Collections> collections) {
    
    this.collections = collections;
    return this;
  }

  public AccountReportingReview addCollectionsItem(Collections collectionsItem) {
    if (this.collections == null) {
      this.collections = new ArrayList<>();
    }
    this.collections.add(collectionsItem);
    return this;
  }

   /**
   * Get collections
   * @return collections
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Collections> getCollections() {
    return collections;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollections(List<Collections> collections) {
    this.collections = collections;
  }


  public AccountReportingReview trades(List<Trades> trades) {
    
    this.trades = trades;
    return this;
  }

  public AccountReportingReview addTradesItem(Trades tradesItem) {
    if (this.trades == null) {
      this.trades = new ArrayList<>();
    }
    this.trades.add(tradesItem);
    return this;
  }

   /**
   * Get trades
   * @return trades
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Trades> getTrades() {
    return trades;
  }


  @JsonProperty(JSON_PROPERTY_TRADES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrades(List<Trades> trades) {
    this.trades = trades;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountReportingReview accountReportingReview = (AccountReportingReview) o;
    return Objects.equals(this.collections, accountReportingReview.collections) &&
        Objects.equals(this.trades, accountReportingReview.trades);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collections, trades);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountReportingReview {\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    trades: ").append(toIndentedString(trades)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

