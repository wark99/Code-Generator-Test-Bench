/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.FileInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FileInfoList
 */
@JsonPropertyOrder({
  FileInfoList.JSON_PROPERTY_ORDER,
  FileInfoList.JSON_PROPERTY_FILE_INFOS,
  FileInfoList.JSON_PROPERTY_NEXT_FILE_ID,
  FileInfoList.JSON_PROPERTY_PREV_FILE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FileInfoList {
  public static final String JSON_PROPERTY_ORDER = "order";
  private List<String> order;

  public static final String JSON_PROPERTY_FILE_INFOS = "file_infos";
  private Map<String, FileInfo> fileInfos = new HashMap<>();

  public static final String JSON_PROPERTY_NEXT_FILE_ID = "next_file_id";
  private String nextFileId;

  public static final String JSON_PROPERTY_PREV_FILE_ID = "prev_file_id";
  private String prevFileId;

  public FileInfoList() {
  }

  public FileInfoList order(List<String> order) {
    
    this.order = order;
    return this;
  }

  public FileInfoList addOrderItem(String orderItem) {
    if (this.order == null) {
      this.order = new ArrayList<>();
    }
    this.order.add(orderItem);
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(List<String> order) {
    this.order = order;
  }


  public FileInfoList fileInfos(Map<String, FileInfo> fileInfos) {
    
    this.fileInfos = fileInfos;
    return this;
  }

   /**
   * Get fileInfos
   * @return fileInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, FileInfo> getFileInfos() {
    return fileInfos;
  }


  @JsonProperty(JSON_PROPERTY_FILE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileInfos(Map<String, FileInfo> fileInfos) {
    this.fileInfos = fileInfos;
  }


  public FileInfoList nextFileId(String nextFileId) {
    
    this.nextFileId = nextFileId;
    return this;
  }

   /**
   * The ID of next file info. Not omitted when empty or not relevant.
   * @return nextFileId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNextFileId() {
    return nextFileId;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextFileId(String nextFileId) {
    this.nextFileId = nextFileId;
  }


  public FileInfoList prevFileId(String prevFileId) {
    
    this.prevFileId = prevFileId;
    return this;
  }

   /**
   * The ID of previous file info. Not omitted when empty or not relevant.
   * @return prevFileId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREV_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrevFileId() {
    return prevFileId;
  }


  @JsonProperty(JSON_PROPERTY_PREV_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrevFileId(String prevFileId) {
    this.prevFileId = prevFileId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileInfoList fileInfoList = (FileInfoList) o;
    return Objects.equals(this.order, fileInfoList.order) &&
        Objects.equals(this.fileInfos, fileInfoList.fileInfos) &&
        Objects.equals(this.nextFileId, fileInfoList.nextFileId) &&
        Objects.equals(this.prevFileId, fileInfoList.prevFileId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, fileInfos, nextFileId, prevFileId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileInfoList {\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    fileInfos: ").append(toIndentedString(fileInfos)).append("\n");
    sb.append("    nextFileId: ").append(toIndentedString(nextFileId)).append("\n");
    sb.append("    prevFileId: ").append(toIndentedString(prevFileId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

