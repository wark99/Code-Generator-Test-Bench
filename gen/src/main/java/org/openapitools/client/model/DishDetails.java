/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CuisineSummary;
import org.openapitools.client.model.RecipeSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DishDetails
 */
@JsonPropertyOrder({
  DishDetails.JSON_PROPERTY_ID,
  DishDetails.JSON_PROPERTY_NAME,
  DishDetails.JSON_PROPERTY_DESCRIPTION,
  DishDetails.JSON_PROPERTY_IMAGE,
  DishDetails.JSON_PROPERTY_COUNTRIES,
  DishDetails.JSON_PROPERTY_CUISINES,
  DishDetails.JSON_PROPERTY_INGREDIENTS,
  DishDetails.JSON_PROPERTY_FOOD_TYPES,
  DishDetails.JSON_PROPERTY_CUISINE,
  DishDetails.JSON_PROPERTY_RECIPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:02.893796858Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DishDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private URI image;

  public static final String JSON_PROPERTY_COUNTRIES = "countries";
  private String countries;

  public static final String JSON_PROPERTY_CUISINES = "cuisines";
  private String cuisines;

  public static final String JSON_PROPERTY_INGREDIENTS = "ingredients";
  private String ingredients;

  public static final String JSON_PROPERTY_FOOD_TYPES = "foodTypes";
  private String foodTypes;

  public static final String JSON_PROPERTY_CUISINE = "cuisine";
  private CuisineSummary cuisine;

  public static final String JSON_PROPERTY_RECIPES = "recipes";
  private List<RecipeSummary> recipes;

  public DishDetails() {
  }

  public DishDetails id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public DishDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public DishDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public DishDetails image(URI image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImage(URI image) {
    this.image = image;
  }


  public DishDetails countries(String countries) {
    
    this.countries = countries;
    return this;
  }

   /**
   * Get countries
   * @return countries
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCountries() {
    return countries;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountries(String countries) {
    this.countries = countries;
  }


  public DishDetails cuisines(String cuisines) {
    
    this.cuisines = cuisines;
    return this;
  }

   /**
   * Get cuisines
   * @return cuisines
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUISINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCuisines() {
    return cuisines;
  }


  @JsonProperty(JSON_PROPERTY_CUISINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCuisines(String cuisines) {
    this.cuisines = cuisines;
  }


  public DishDetails ingredients(String ingredients) {
    
    this.ingredients = ingredients;
    return this;
  }

   /**
   * Get ingredients
   * @return ingredients
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INGREDIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIngredients() {
    return ingredients;
  }


  @JsonProperty(JSON_PROPERTY_INGREDIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIngredients(String ingredients) {
    this.ingredients = ingredients;
  }


  public DishDetails foodTypes(String foodTypes) {
    
    this.foodTypes = foodTypes;
    return this;
  }

   /**
   * Get foodTypes
   * @return foodTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFoodTypes() {
    return foodTypes;
  }


  @JsonProperty(JSON_PROPERTY_FOOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFoodTypes(String foodTypes) {
    this.foodTypes = foodTypes;
  }


  public DishDetails cuisine(CuisineSummary cuisine) {
    
    this.cuisine = cuisine;
    return this;
  }

   /**
   * Get cuisine
   * @return cuisine
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUISINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CuisineSummary getCuisine() {
    return cuisine;
  }


  @JsonProperty(JSON_PROPERTY_CUISINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCuisine(CuisineSummary cuisine) {
    this.cuisine = cuisine;
  }


  public DishDetails recipes(List<RecipeSummary> recipes) {
    
    this.recipes = recipes;
    return this;
  }

  public DishDetails addRecipesItem(RecipeSummary recipesItem) {
    if (this.recipes == null) {
      this.recipes = new ArrayList<>();
    }
    this.recipes.add(recipesItem);
    return this;
  }

   /**
   * Only returned when directly querying a dish.
   * @return recipes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RecipeSummary> getRecipes() {
    return recipes;
  }


  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipes(List<RecipeSummary> recipes) {
    this.recipes = recipes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DishDetails dishDetails = (DishDetails) o;
    return Objects.equals(this.id, dishDetails.id) &&
        Objects.equals(this.name, dishDetails.name) &&
        Objects.equals(this.description, dishDetails.description) &&
        Objects.equals(this.image, dishDetails.image) &&
        Objects.equals(this.countries, dishDetails.countries) &&
        Objects.equals(this.cuisines, dishDetails.cuisines) &&
        Objects.equals(this.ingredients, dishDetails.ingredients) &&
        Objects.equals(this.foodTypes, dishDetails.foodTypes) &&
        Objects.equals(this.cuisine, dishDetails.cuisine) &&
        Objects.equals(this.recipes, dishDetails.recipes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, image, countries, cuisines, ingredients, foodTypes, cuisine, recipes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DishDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    cuisines: ").append(toIndentedString(cuisines)).append("\n");
    sb.append("    ingredients: ").append(toIndentedString(ingredients)).append("\n");
    sb.append("    foodTypes: ").append(toIndentedString(foodTypes)).append("\n");
    sb.append("    cuisine: ").append(toIndentedString(cuisine)).append("\n");
    sb.append("    recipes: ").append(toIndentedString(recipes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

