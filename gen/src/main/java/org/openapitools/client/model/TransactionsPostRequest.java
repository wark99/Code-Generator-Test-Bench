/*
 * Inventory Management System Rest API
 * Welcome to the API documentation for the Inventory Management System API. This API provides a set of endpoints to efficiently track and manage inventory. The system focuses on four core resources: User, Address, Item, and Transaction. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransactionsPostRequest
 */
@JsonPropertyOrder({
  TransactionsPostRequest.JSON_PROPERTY_USER_INVOLVED_ID,
  TransactionsPostRequest.JSON_PROPERTY_ITEM_AFFECTED_ID,
  TransactionsPostRequest.JSON_PROPERTY_QUANTITY,
  TransactionsPostRequest.JSON_PROPERTY_DATE,
  TransactionsPostRequest.JSON_PROPERTY_ADDRESS_ID
})
@JsonTypeName("_transactions_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:19:45.736611184Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TransactionsPostRequest {
  public static final String JSON_PROPERTY_USER_INVOLVED_ID = "user_involved_id";
  private Integer userInvolvedId;

  public static final String JSON_PROPERTY_ITEM_AFFECTED_ID = "item_affected_id";
  private Integer itemAffectedId;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_DATE = "date";
  private OffsetDateTime date;

  public static final String JSON_PROPERTY_ADDRESS_ID = "address_id";
  private Integer addressId;

  public TransactionsPostRequest() {
  }

  public TransactionsPostRequest userInvolvedId(Integer userInvolvedId) {
    
    this.userInvolvedId = userInvolvedId;
    return this;
  }

   /**
   * Get userInvolvedId
   * @return userInvolvedId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_INVOLVED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserInvolvedId() {
    return userInvolvedId;
  }


  @JsonProperty(JSON_PROPERTY_USER_INVOLVED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserInvolvedId(Integer userInvolvedId) {
    this.userInvolvedId = userInvolvedId;
  }


  public TransactionsPostRequest itemAffectedId(Integer itemAffectedId) {
    
    this.itemAffectedId = itemAffectedId;
    return this;
  }

   /**
   * Get itemAffectedId
   * @return itemAffectedId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM_AFFECTED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getItemAffectedId() {
    return itemAffectedId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_AFFECTED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemAffectedId(Integer itemAffectedId) {
    this.itemAffectedId = itemAffectedId;
  }


  public TransactionsPostRequest quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public TransactionsPostRequest date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public TransactionsPostRequest addressId(Integer addressId) {
    
    this.addressId = addressId;
    return this;
  }

   /**
   * Get addressId
   * @return addressId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAddressId() {
    return addressId;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressId(Integer addressId) {
    this.addressId = addressId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsPostRequest transactionsPostRequest = (TransactionsPostRequest) o;
    return Objects.equals(this.userInvolvedId, transactionsPostRequest.userInvolvedId) &&
        Objects.equals(this.itemAffectedId, transactionsPostRequest.itemAffectedId) &&
        Objects.equals(this.quantity, transactionsPostRequest.quantity) &&
        Objects.equals(this.date, transactionsPostRequest.date) &&
        Objects.equals(this.addressId, transactionsPostRequest.addressId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userInvolvedId, itemAffectedId, quantity, date, addressId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsPostRequest {\n");
    sb.append("    userInvolvedId: ").append(toIndentedString(userInvolvedId)).append("\n");
    sb.append("    itemAffectedId: ").append(toIndentedString(itemAffectedId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

