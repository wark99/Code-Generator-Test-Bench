/*
 * connect-api
 * # API Rules * Null values are not sent / received. * Object IDs are **always** sent in list methods, but are **ignored** in create / update methods. * All request and response objects are at the root of the returned structure, if they contain only one entity. * Response of multiple entities is returned as an object that contains the list of entities and a structure `pager`, if necessary. ### Additional documentation: * [Camera registration](../camera_registration/) * [Camera communication](../camera_communication/) ### HTTP Status * 200 - OK, response contains data (usually the entire entity) * 201 - OK, entry created; response contains data as required * 204 - OK, no response * 304 - Response has not been modified * 400 - Invalid request / invalid input (SDK error) * 401 - Endpoint is being accessed without credentials (SDK error) * 403 - Request can't be served, usually due to insufficient rights (user error) * 404 - Entity not found (user error or outdated data) * 409 - Conflict with the state of target resource (user error) * 50x - Server side error
 *
 * The version of the OpenAPI document: 0.22.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CameraConfig;
import org.openapitools.client.model.CameraOptions;
import org.openapitools.client.model.CameraOrigin;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CameraResponse
 */
@JsonPropertyOrder({
  CameraResponse.JSON_PROPERTY_ID,
  CameraResponse.JSON_PROPERTY_NAME,
  CameraResponse.JSON_PROPERTY_CONFIG,
  CameraResponse.JSON_PROPERTY_OPTIONS,
  CameraResponse.JSON_PROPERTY_CAPABILITIES,
  CameraResponse.JSON_PROPERTY_TEAM_ID,
  CameraResponse.JSON_PROPERTY_PRINTER_UUID,
  CameraResponse.JSON_PROPERTY_TOKEN,
  CameraResponse.JSON_PROPERTY_ORIGIN,
  CameraResponse.JSON_PROPERTY_DELETED,
  CameraResponse.JSON_PROPERTY_REGISTERED,
  CameraResponse.JSON_PROPERTY_SORT_ORDER
})
@JsonTypeName("camera_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:13.609131704Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CameraResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private CameraConfig config;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private CameraOptions options;

  /**
   * Gets or Sets capabilities
   */
  public enum CapabilitiesEnum {
    TRIGGER_SCHEME("trigger_scheme"),
    
    IMAGING("imaging"),
    
    RESOLUTION("resolution"),
    
    FOCUS("focus");

    private String value;

    CapabilitiesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CapabilitiesEnum fromValue(String value) {
      for (CapabilitiesEnum b : CapabilitiesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private List<CapabilitiesEnum> capabilities;

  public static final String JSON_PROPERTY_TEAM_ID = "team_id";
  private Integer teamId;

  public static final String JSON_PROPERTY_PRINTER_UUID = "printer_uuid";
  private String printerUuid;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  private CameraOrigin origin;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Integer deleted;

  public static final String JSON_PROPERTY_REGISTERED = "registered";
  private Boolean registered;

  public static final String JSON_PROPERTY_SORT_ORDER = "sort_order";
  private Integer sortOrder;

  public CameraResponse() {
  }

  public CameraResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public CameraResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name defined by user
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CameraResponse config(CameraConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CameraConfig getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(CameraConfig config) {
    this.config = config;
  }


  public CameraResponse options(CameraOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CameraOptions getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(CameraOptions options) {
    this.options = options;
  }


  public CameraResponse capabilities(List<CapabilitiesEnum> capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

  public CameraResponse addCapabilitiesItem(CapabilitiesEnum capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CapabilitiesEnum> getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapabilities(List<CapabilitiesEnum> capabilities) {
    this.capabilities = capabilities;
  }


  public CameraResponse teamId(Integer teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Team id. 0 is reserved for anonymous.
   * minimum: 0
   * @return teamId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }


  public CameraResponse printerUuid(String printerUuid) {
    
    this.printerUuid = printerUuid;
    return this;
  }

   /**
   * Printer UUID - can be found in the url in printer detail or in the printer settings tab
   * @return printerUuid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRINTER_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPrinterUuid() {
    return printerUuid;
  }


  @JsonProperty(JSON_PROPERTY_PRINTER_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrinterUuid(String printerUuid) {
    this.printerUuid = printerUuid;
  }


  public CameraResponse token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }


  public CameraResponse origin(CameraOrigin origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CameraOrigin getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrigin(CameraOrigin origin) {
    this.origin = origin;
  }


  public CameraResponse deleted(Integer deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Timestamp of camera deletion. Deleted cameras are listed only in job detail!
   * @return deleted
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(Integer deleted) {
    this.deleted = deleted;
  }


  public CameraResponse registered(Boolean registered) {
    
    this.registered = registered;
    return this;
  }

   /**
   * True if the registration process of camera is finished
   * @return registered
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGISTERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRegistered() {
    return registered;
  }


  @JsonProperty(JSON_PROPERTY_REGISTERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegistered(Boolean registered) {
    this.registered = registered;
  }


  public CameraResponse sortOrder(Integer sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Sort order of the cameras per printer! For now it is not possible to change the camera&#39;s sort order
   * @return sortOrder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSortOrder() {
    return sortOrder;
  }


  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CameraResponse cameraResponse = (CameraResponse) o;
    return Objects.equals(this.id, cameraResponse.id) &&
        Objects.equals(this.name, cameraResponse.name) &&
        Objects.equals(this.config, cameraResponse.config) &&
        Objects.equals(this.options, cameraResponse.options) &&
        Objects.equals(this.capabilities, cameraResponse.capabilities) &&
        Objects.equals(this.teamId, cameraResponse.teamId) &&
        Objects.equals(this.printerUuid, cameraResponse.printerUuid) &&
        Objects.equals(this.token, cameraResponse.token) &&
        Objects.equals(this.origin, cameraResponse.origin) &&
        Objects.equals(this.deleted, cameraResponse.deleted) &&
        Objects.equals(this.registered, cameraResponse.registered) &&
        Objects.equals(this.sortOrder, cameraResponse.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, config, options, capabilities, teamId, printerUuid, token, origin, deleted, registered, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CameraResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    printerUuid: ").append(toIndentedString(printerUuid)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    registered: ").append(toIndentedString(registered)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

