/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountAnalytics;
import org.openapitools.client.model.AccountDetailsTxBased;
import org.openapitools.client.model.AnalyticsReportsAccount;
import org.openapitools.client.model.CashFlowCashFlowBalance;
import org.openapitools.client.model.CashFlowCashFlowCharacteristic;
import org.openapitools.client.model.CashFlowCashFlowCredit;
import org.openapitools.client.model.CashFlowCashFlowDebit;
import org.openapitools.client.model.CashFlowReportAccount;
import org.openapitools.client.model.PrequalificationReportAccount;
import org.openapitools.client.model.PrequalificationReportAssetSummary;
import org.openapitools.client.model.ReportAccountPosition;
import org.openapitools.client.model.ReportTransaction;
import org.openapitools.client.model.ReportTransactionNewTxBased;
import org.openapitools.client.model.TransactionsReportAccount;
import org.openapitools.client.model.VOAReportAccount;
import org.openapitools.client.model.VOAWithIncomeReportAccount;
import org.openapitools.client.model.VOETransactionsReportAccount;
import org.openapitools.client.model.VOIETXVerifyReportAccount;
import org.openapitools.client.model.VOIETXVerifyReportIncomeStream;
import org.openapitools.client.model.VOIReportAccount;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An account record
 */
@JsonPropertyOrder({
  ReportInstitutionAccount.JSON_PROPERTY_ID,
  ReportInstitutionAccount.JSON_PROPERTY_OWNER_NAME,
  ReportInstitutionAccount.JSON_PROPERTY_OWNER_ADDRESS,
  ReportInstitutionAccount.JSON_PROPERTY_NAME,
  ReportInstitutionAccount.JSON_PROPERTY_NUMBER,
  ReportInstitutionAccount.JSON_PROPERTY_TYPE,
  ReportInstitutionAccount.JSON_PROPERTY_CURRENCY,
  ReportInstitutionAccount.JSON_PROPERTY_AGGREGATION_STATUS_CODE,
  ReportInstitutionAccount.JSON_PROPERTY_CURRENT_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_AVAILABLE_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_BALANCE_DATE,
  ReportInstitutionAccount.JSON_PROPERTY_TRANSACTIONS,
  ReportInstitutionAccount.JSON_PROPERTY_DETAILS,
  ReportInstitutionAccount.JSON_PROPERTY_ACCOUNT_ANALYTICS,
  ReportInstitutionAccount.JSON_PROPERTY_CASH_FLOW_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_CASH_FLOW_CREDIT,
  ReportInstitutionAccount.JSON_PROPERTY_CASH_FLOW_DEBIT,
  ReportInstitutionAccount.JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC,
  ReportInstitutionAccount.JSON_PROPERTY_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT,
  ReportInstitutionAccount.JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT,
  ReportInstitutionAccount.JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT,
  ReportInstitutionAccount.JSON_PROPERTY_ASSET,
  ReportInstitutionAccount.JSON_PROPERTY_OLDEST_TRANSACTION_DATE,
  ReportInstitutionAccount.JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER2_MONTHS_ACCOUNT,
  ReportInstitutionAccount.JSON_PROPERTY_POSITION,
  ReportInstitutionAccount.JSON_PROPERTY_INCOME_STREAMS,
  ReportInstitutionAccount.JSON_PROPERTY_BEGINNING_BALANCE,
  ReportInstitutionAccount.JSON_PROPERTY_MISC_DEPOSITS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:35.632313798Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ReportInstitutionAccount {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_OWNER_ADDRESS = "ownerAddress";
  private String ownerAddress;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  private Integer aggregationStatusCode;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_BALANCE_DATE = "balanceDate";
  private Long balanceDate;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<ReportTransactionNewTxBased> transactions = new ArrayList<>();

  public static final String JSON_PROPERTY_DETAILS = "details";
  private AccountDetailsTxBased details;

  public static final String JSON_PROPERTY_ACCOUNT_ANALYTICS = "accountAnalytics";
  private AccountAnalytics accountAnalytics;

  public static final String JSON_PROPERTY_CASH_FLOW_BALANCE = "cashFlowBalance";
  private CashFlowCashFlowBalance cashFlowBalance;

  public static final String JSON_PROPERTY_CASH_FLOW_CREDIT = "cashFlowCredit";
  private CashFlowCashFlowCredit cashFlowCredit;

  public static final String JSON_PROPERTY_CASH_FLOW_DEBIT = "cashFlowDebit";
  private CashFlowCashFlowDebit cashFlowDebit;

  public static final String JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC = "cashFlowCharacteristic";
  private CashFlowCashFlowCharacteristic cashFlowCharacteristic;

  public static final String JSON_PROPERTY_BALANCE = "balance";
  private BigDecimal balance;

  public static final String JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE = "averageMonthlyBalance";
  private BigDecimal averageMonthlyBalance;

  public static final String JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT = "totNumberInsufficientFundsFeeDebitTxAccount";
  private Long totNumberInsufficientFundsFeeDebitTxAccount;

  public static final String JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT = "totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount";
  private Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;

  public static final String JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT = "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount";
  private Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;

  public static final String JSON_PROPERTY_ASSET = "asset";
  private PrequalificationReportAssetSummary asset;

  public static final String JSON_PROPERTY_OLDEST_TRANSACTION_DATE = "oldestTransactionDate";
  private Long oldestTransactionDate;

  public static final String JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER2_MONTHS_ACCOUNT = "totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount";
  private Long totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount;

  public static final String JSON_PROPERTY_POSITION = "position";
  private ReportAccountPosition position;

  public static final String JSON_PROPERTY_INCOME_STREAMS = "incomeStreams";
  private List<VOIETXVerifyReportIncomeStream> incomeStreams;

  public static final String JSON_PROPERTY_BEGINNING_BALANCE = "beginningBalance";
  private BigDecimal beginningBalance;

  public static final String JSON_PROPERTY_MISC_DEPOSITS = "miscDeposits";
  private List<ReportTransaction> miscDeposits;

  public ReportInstitutionAccount() {
  }

  public ReportInstitutionAccount id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the account
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ReportInstitutionAccount ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * The name(s) of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then all owners will be listed separated by |.
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public ReportInstitutionAccount ownerAddress(String ownerAddress) {
    
    this.ownerAddress = ownerAddress;
    return this;
  }

   /**
   * The mailing address of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then the address of the primary owner will be listed.
   * @return ownerAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerAddress() {
    return ownerAddress;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerAddress(String ownerAddress) {
    this.ownerAddress = ownerAddress;
  }


  public ReportInstitutionAccount name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The account name from the institution
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ReportInstitutionAccount number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * The account number from the institution (all digits except the last four are obfuscated)
   * @return number
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumber(String number) {
    this.number = number;
  }


  public ReportInstitutionAccount type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The list of supported account types. * &#x60;checking&#x60; * &#x60;savings&#x60; * &#x60;moneyMarket&#x60; * &#x60;cd&#x60; * &#x60;investment&#x60; * &#x60;investmentTaxDeferred&#x60; * &#x60;employeeStockPurchasePlan&#x60; * &#x60;ira&#x60; * &#x60;401k&#x60; * &#x60;roth&#x60; * &#x60;403b&#x60; * &#x60;529&#x60; * &#x60;rollover&#x60; * &#x60;ugma&#x60; * &#x60;utma&#x60; * &#x60;keogh&#x60; * &#x60;457&#x60; * &#x60;401a&#x60; * &#x60;unknown&#x60; * &#x60;mortgage&#x60; * &#x60;loan&#x60; * &#x60;creditCard&#x60; * &#x60;lineOfCredit&#x60; * &#x60;payroll&#x60; * &#x60;studentLoan&#x60; * &#x60;brokerageAccount&#x60; * &#x60;educationSavings&#x60; * &#x60;healthSavingsAccount&#x60; * &#x60;nonTaxableBrokerageAccount&#x60; * &#x60;pension&#x60; * &#x60;profitSharingPlan&#x60; * &#x60;roth401k&#x60; * &#x60;sepIRA&#x60; * &#x60;simpleIRA&#x60; * &#x60;thriftSavingsPlan&#x60; * &#x60;variableAnnuity&#x60;
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public ReportInstitutionAccount currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code for account
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public ReportInstitutionAccount aggregationStatusCode(Integer aggregationStatusCode) {
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public ReportInstitutionAccount currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Current balance of the account
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public ReportInstitutionAccount availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * The available balance for the account
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public ReportInstitutionAccount balanceDate(Long balanceDate) {
    
    this.balanceDate = balanceDate;
    return this;
  }

   /**
   * A timestamp showing when the balance was captured by the FI
   * @return balanceDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBalanceDate() {
    return balanceDate;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceDate(Long balanceDate) {
    this.balanceDate = balanceDate;
  }


  public ReportInstitutionAccount transactions(List<ReportTransactionNewTxBased> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public ReportInstitutionAccount addTransactionsItem(ReportTransactionNewTxBased transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * a list of transaction records
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ReportTransactionNewTxBased> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactions(List<ReportTransactionNewTxBased> transactions) {
    this.transactions = transactions;
  }


  public ReportInstitutionAccount details(AccountDetailsTxBased details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountDetailsTxBased getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(AccountDetailsTxBased details) {
    this.details = details;
  }


  public ReportInstitutionAccount accountAnalytics(AccountAnalytics accountAnalytics) {
    
    this.accountAnalytics = accountAnalytics;
    return this;
  }

   /**
   * Get accountAnalytics
   * @return accountAnalytics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountAnalytics getAccountAnalytics() {
    return accountAnalytics;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountAnalytics(AccountAnalytics accountAnalytics) {
    this.accountAnalytics = accountAnalytics;
  }


  public ReportInstitutionAccount cashFlowBalance(CashFlowCashFlowBalance cashFlowBalance) {
    
    this.cashFlowBalance = cashFlowBalance;
    return this;
  }

   /**
   * Get cashFlowBalance
   * @return cashFlowBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowBalance getCashFlowBalance() {
    return cashFlowBalance;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowBalance(CashFlowCashFlowBalance cashFlowBalance) {
    this.cashFlowBalance = cashFlowBalance;
  }


  public ReportInstitutionAccount cashFlowCredit(CashFlowCashFlowCredit cashFlowCredit) {
    
    this.cashFlowCredit = cashFlowCredit;
    return this;
  }

   /**
   * Get cashFlowCredit
   * @return cashFlowCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowCredit getCashFlowCredit() {
    return cashFlowCredit;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowCredit(CashFlowCashFlowCredit cashFlowCredit) {
    this.cashFlowCredit = cashFlowCredit;
  }


  public ReportInstitutionAccount cashFlowDebit(CashFlowCashFlowDebit cashFlowDebit) {
    
    this.cashFlowDebit = cashFlowDebit;
    return this;
  }

   /**
   * Get cashFlowDebit
   * @return cashFlowDebit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowDebit getCashFlowDebit() {
    return cashFlowDebit;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowDebit(CashFlowCashFlowDebit cashFlowDebit) {
    this.cashFlowDebit = cashFlowDebit;
  }


  public ReportInstitutionAccount cashFlowCharacteristic(CashFlowCashFlowCharacteristic cashFlowCharacteristic) {
    
    this.cashFlowCharacteristic = cashFlowCharacteristic;
    return this;
  }

   /**
   * Get cashFlowCharacteristic
   * @return cashFlowCharacteristic
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowCharacteristic getCashFlowCharacteristic() {
    return cashFlowCharacteristic;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowCharacteristic(CashFlowCashFlowCharacteristic cashFlowCharacteristic) {
    this.cashFlowCharacteristic = cashFlowCharacteristic;
  }


  public ReportInstitutionAccount balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * The cleared balance of the account as-of &#x60;balanceDate&#x60;
   * @return balance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBalance() {
    return balance;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public ReportInstitutionAccount averageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    
    this.averageMonthlyBalance = averageMonthlyBalance;
    return this;
  }

   /**
   * The average monthly balance of this account
   * @return averageMonthlyBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAverageMonthlyBalance() {
    return averageMonthlyBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    this.averageMonthlyBalance = averageMonthlyBalance;
  }


  public ReportInstitutionAccount totNumberInsufficientFundsFeeDebitTxAccount(Long totNumberInsufficientFundsFeeDebitTxAccount) {
    
    this.totNumberInsufficientFundsFeeDebitTxAccount = totNumberInsufficientFundsFeeDebitTxAccount;
    return this;
  }

   /**
   * The count for the total number of insufficient funds transactions, based on the &#x60;fromDate&#x60; of the report.
   * @return totNumberInsufficientFundsFeeDebitTxAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotNumberInsufficientFundsFeeDebitTxAccount() {
    return totNumberInsufficientFundsFeeDebitTxAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberInsufficientFundsFeeDebitTxAccount(Long totNumberInsufficientFundsFeeDebitTxAccount) {
    this.totNumberInsufficientFundsFeeDebitTxAccount = totNumberInsufficientFundsFeeDebitTxAccount;
  }


  public ReportInstitutionAccount totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount(Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) {
    
    this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
    return this;
  }

   /**
   * The total number of  insufficient funds fees for the account over six months
   * @return totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotNumberInsufficientFundsFeeDebitTxOver6MonthsAccount() {
    return totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberInsufficientFundsFeeDebitTxOver6MonthsAccount(Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) {
    this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
  }


  public ReportInstitutionAccount totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount(Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) {
    
    this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount = totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
    return this;
  }

   /**
   * The number of days since the most recent insufficient funds transaction, based on the &#x60;fromDate&#x60; of the report.
   * @return totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount() {
    return totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount(Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) {
    this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount = totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
  }


  public ReportInstitutionAccount asset(PrequalificationReportAssetSummary asset) {
    
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrequalificationReportAssetSummary getAsset() {
    return asset;
  }


  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsset(PrequalificationReportAssetSummary asset) {
    this.asset = asset;
  }


  public ReportInstitutionAccount oldestTransactionDate(Long oldestTransactionDate) {
    
    this.oldestTransactionDate = oldestTransactionDate;
    return this;
  }

   /**
   * The oldest transaction date of this account.
   * minimum: 0
   * maximum: 2147483647
   * @return oldestTransactionDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OLDEST_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOldestTransactionDate() {
    return oldestTransactionDate;
  }


  @JsonProperty(JSON_PROPERTY_OLDEST_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOldestTransactionDate(Long oldestTransactionDate) {
    this.oldestTransactionDate = oldestTransactionDate;
  }


  public ReportInstitutionAccount totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount(Long totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount) {
    
    this.totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount;
    return this;
  }

   /**
   * The count for the total number of insufficient funds transactions for the last two months, based on the &#x60;fromDate&#x60; of the report.
   * @return totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER2_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotNumberInsufficientFundsFeeDebitTxOver2MonthsAccount() {
    return totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER2_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberInsufficientFundsFeeDebitTxOver2MonthsAccount(Long totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount) {
    this.totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount;
  }


  public ReportInstitutionAccount position(ReportAccountPosition position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReportAccountPosition getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(ReportAccountPosition position) {
    this.position = position;
  }


  public ReportInstitutionAccount incomeStreams(List<VOIETXVerifyReportIncomeStream> incomeStreams) {
    
    this.incomeStreams = incomeStreams;
    return this;
  }

  public ReportInstitutionAccount addIncomeStreamsItem(VOIETXVerifyReportIncomeStream incomeStreamsItem) {
    if (this.incomeStreams == null) {
      this.incomeStreams = new ArrayList<>();
    }
    this.incomeStreams.add(incomeStreamsItem);
    return this;
  }

   /**
   * A list of income stream records
   * @return incomeStreams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VOIETXVerifyReportIncomeStream> getIncomeStreams() {
    return incomeStreams;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStreams(List<VOIETXVerifyReportIncomeStream> incomeStreams) {
    this.incomeStreams = incomeStreams;
  }


  public ReportInstitutionAccount beginningBalance(BigDecimal beginningBalance) {
    
    this.beginningBalance = beginningBalance;
    return this;
  }

   /**
   * Beginning balance of account per the time period in the report
   * @return beginningBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBeginningBalance() {
    return beginningBalance;
  }


  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeginningBalance(BigDecimal beginningBalance) {
    this.beginningBalance = beginningBalance;
  }


  public ReportInstitutionAccount miscDeposits(List<ReportTransaction> miscDeposits) {
    
    this.miscDeposits = miscDeposits;
    return this;
  }

  public ReportInstitutionAccount addMiscDepositsItem(ReportTransaction miscDepositsItem) {
    if (this.miscDeposits == null) {
      this.miscDeposits = new ArrayList<>();
    }
    this.miscDeposits.add(miscDepositsItem);
    return this;
  }

   /**
   * A list of miscellaneous deposits
   * @return miscDeposits
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MISC_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportTransaction> getMiscDeposits() {
    return miscDeposits;
  }


  @JsonProperty(JSON_PROPERTY_MISC_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiscDeposits(List<ReportTransaction> miscDeposits) {
    this.miscDeposits = miscDeposits;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportInstitutionAccount reportInstitutionAccount = (ReportInstitutionAccount) o;
    return Objects.equals(this.id, reportInstitutionAccount.id) &&
        Objects.equals(this.ownerName, reportInstitutionAccount.ownerName) &&
        Objects.equals(this.ownerAddress, reportInstitutionAccount.ownerAddress) &&
        Objects.equals(this.name, reportInstitutionAccount.name) &&
        Objects.equals(this.number, reportInstitutionAccount.number) &&
        Objects.equals(this.type, reportInstitutionAccount.type) &&
        Objects.equals(this.currency, reportInstitutionAccount.currency) &&
        Objects.equals(this.aggregationStatusCode, reportInstitutionAccount.aggregationStatusCode) &&
        Objects.equals(this.currentBalance, reportInstitutionAccount.currentBalance) &&
        Objects.equals(this.availableBalance, reportInstitutionAccount.availableBalance) &&
        Objects.equals(this.balanceDate, reportInstitutionAccount.balanceDate) &&
        Objects.equals(this.transactions, reportInstitutionAccount.transactions) &&
        Objects.equals(this.details, reportInstitutionAccount.details) &&
        Objects.equals(this.accountAnalytics, reportInstitutionAccount.accountAnalytics) &&
        Objects.equals(this.cashFlowBalance, reportInstitutionAccount.cashFlowBalance) &&
        Objects.equals(this.cashFlowCredit, reportInstitutionAccount.cashFlowCredit) &&
        Objects.equals(this.cashFlowDebit, reportInstitutionAccount.cashFlowDebit) &&
        Objects.equals(this.cashFlowCharacteristic, reportInstitutionAccount.cashFlowCharacteristic) &&
        Objects.equals(this.balance, reportInstitutionAccount.balance) &&
        Objects.equals(this.averageMonthlyBalance, reportInstitutionAccount.averageMonthlyBalance) &&
        Objects.equals(this.totNumberInsufficientFundsFeeDebitTxAccount, reportInstitutionAccount.totNumberInsufficientFundsFeeDebitTxAccount) &&
        Objects.equals(this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount, reportInstitutionAccount.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) &&
        Objects.equals(this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount, reportInstitutionAccount.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) &&
        Objects.equals(this.asset, reportInstitutionAccount.asset) &&
        Objects.equals(this.oldestTransactionDate, reportInstitutionAccount.oldestTransactionDate) &&
        Objects.equals(this.totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount, reportInstitutionAccount.totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount) &&
        Objects.equals(this.position, reportInstitutionAccount.position) &&
        Objects.equals(this.incomeStreams, reportInstitutionAccount.incomeStreams) &&
        Objects.equals(this.beginningBalance, reportInstitutionAccount.beginningBalance) &&
        Objects.equals(this.miscDeposits, reportInstitutionAccount.miscDeposits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ownerName, ownerAddress, name, number, type, currency, aggregationStatusCode, currentBalance, availableBalance, balanceDate, transactions, details, accountAnalytics, cashFlowBalance, cashFlowCredit, cashFlowDebit, cashFlowCharacteristic, balance, averageMonthlyBalance, totNumberInsufficientFundsFeeDebitTxAccount, totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount, totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount, asset, oldestTransactionDate, totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount, position, incomeStreams, beginningBalance, miscDeposits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportInstitutionAccount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    balanceDate: ").append(toIndentedString(balanceDate)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    accountAnalytics: ").append(toIndentedString(accountAnalytics)).append("\n");
    sb.append("    cashFlowBalance: ").append(toIndentedString(cashFlowBalance)).append("\n");
    sb.append("    cashFlowCredit: ").append(toIndentedString(cashFlowCredit)).append("\n");
    sb.append("    cashFlowDebit: ").append(toIndentedString(cashFlowDebit)).append("\n");
    sb.append("    cashFlowCharacteristic: ").append(toIndentedString(cashFlowCharacteristic)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    averageMonthlyBalance: ").append(toIndentedString(averageMonthlyBalance)).append("\n");
    sb.append("    totNumberInsufficientFundsFeeDebitTxAccount: ").append(toIndentedString(totNumberInsufficientFundsFeeDebitTxAccount)).append("\n");
    sb.append("    totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: ").append(toIndentedString(totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount)).append("\n");
    sb.append("    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: ").append(toIndentedString(totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    oldestTransactionDate: ").append(toIndentedString(oldestTransactionDate)).append("\n");
    sb.append("    totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: ").append(toIndentedString(totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    incomeStreams: ").append(toIndentedString(incomeStreams)).append("\n");
    sb.append("    beginningBalance: ").append(toIndentedString(beginningBalance)).append("\n");
    sb.append("    miscDeposits: ").append(toIndentedString(miscDeposits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

