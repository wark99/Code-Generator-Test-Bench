/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QuestionRateResponseDto
 */
@JsonPropertyOrder({
  QuestionRateResponseDto.JSON_PROPERTY_QUESTION_ID,
  QuestionRateResponseDto.JSON_PROPERTY_EASY_COUNT,
  QuestionRateResponseDto.JSON_PROPERTY_MEDIUM_COUNT,
  QuestionRateResponseDto.JSON_PROPERTY_HARD_COUNT,
  QuestionRateResponseDto.JSON_PROPERTY_TOTAL_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class QuestionRateResponseDto {
  public static final String JSON_PROPERTY_QUESTION_ID = "questionId";
  private Long questionId;

  public static final String JSON_PROPERTY_EASY_COUNT = "easyCount";
  private Long easyCount;

  public static final String JSON_PROPERTY_MEDIUM_COUNT = "mediumCount";
  private Long mediumCount;

  public static final String JSON_PROPERTY_HARD_COUNT = "hardCount";
  private Long hardCount;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Long totalCount;

  public QuestionRateResponseDto() {
  }

  public QuestionRateResponseDto questionId(Long questionId) {
    
    this.questionId = questionId;
    return this;
  }

   /**
   * Get questionId
   * @return questionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUESTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQuestionId() {
    return questionId;
  }


  @JsonProperty(JSON_PROPERTY_QUESTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuestionId(Long questionId) {
    this.questionId = questionId;
  }


  public QuestionRateResponseDto easyCount(Long easyCount) {
    
    this.easyCount = easyCount;
    return this;
  }

   /**
   * Get easyCount
   * @return easyCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EASY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEasyCount() {
    return easyCount;
  }


  @JsonProperty(JSON_PROPERTY_EASY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEasyCount(Long easyCount) {
    this.easyCount = easyCount;
  }


  public QuestionRateResponseDto mediumCount(Long mediumCount) {
    
    this.mediumCount = mediumCount;
    return this;
  }

   /**
   * Get mediumCount
   * @return mediumCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIUM_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMediumCount() {
    return mediumCount;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediumCount(Long mediumCount) {
    this.mediumCount = mediumCount;
  }


  public QuestionRateResponseDto hardCount(Long hardCount) {
    
    this.hardCount = hardCount;
    return this;
  }

   /**
   * Get hardCount
   * @return hardCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HARD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getHardCount() {
    return hardCount;
  }


  @JsonProperty(JSON_PROPERTY_HARD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHardCount(Long hardCount) {
    this.hardCount = hardCount;
  }


  public QuestionRateResponseDto totalCount(Long totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuestionRateResponseDto questionRateResponseDto = (QuestionRateResponseDto) o;
    return Objects.equals(this.questionId, questionRateResponseDto.questionId) &&
        Objects.equals(this.easyCount, questionRateResponseDto.easyCount) &&
        Objects.equals(this.mediumCount, questionRateResponseDto.mediumCount) &&
        Objects.equals(this.hardCount, questionRateResponseDto.hardCount) &&
        Objects.equals(this.totalCount, questionRateResponseDto.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(questionId, easyCount, mediumCount, hardCount, totalCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionRateResponseDto {\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    easyCount: ").append(toIndentedString(easyCount)).append("\n");
    sb.append("    mediumCount: ").append(toIndentedString(mediumCount)).append("\n");
    sb.append("    hardCount: ").append(toIndentedString(hardCount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

