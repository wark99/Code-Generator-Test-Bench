/*
 * ClosedNetwork-DEV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VerifySmsOtpRequest
 */
@JsonPropertyOrder({
  VerifySmsOtpRequest.JSON_PROPERTY_COUNTRY_CODE,
  VerifySmsOtpRequest.JSON_PROPERTY_PHONE_NUMBER,
  VerifySmsOtpRequest.JSON_PROPERTY_OTP
})
@JsonTypeName("verify_sms_otp_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:50.441407861Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class VerifySmsOtpRequest {
  public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
  private Object countryCode = null;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private Object phoneNumber = null;

  public static final String JSON_PROPERTY_OTP = "otp";
  private Object otp = null;

  public VerifySmsOtpRequest() {
  }

  public VerifySmsOtpRequest countryCode(Object countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(Object countryCode) {
    this.countryCode = countryCode;
  }


  public VerifySmsOtpRequest phoneNumber(Object phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhoneNumber(Object phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public VerifySmsOtpRequest otp(Object otp) {
    
    this.otp = otp;
    return this;
  }

   /**
   * Get otp
   * @return otp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getOtp() {
    return otp;
  }


  @JsonProperty(JSON_PROPERTY_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOtp(Object otp) {
    this.otp = otp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifySmsOtpRequest verifySmsOtpRequest = (VerifySmsOtpRequest) o;
    return Objects.equals(this.countryCode, verifySmsOtpRequest.countryCode) &&
        Objects.equals(this.phoneNumber, verifySmsOtpRequest.phoneNumber) &&
        Objects.equals(this.otp, verifySmsOtpRequest.otp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, phoneNumber, otp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifySmsOtpRequest {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    otp: ").append(toIndentedString(otp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

