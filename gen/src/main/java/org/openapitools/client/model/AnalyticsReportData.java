/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Parameters supplied by the client requesting the analytics.
 */
@JsonPropertyOrder({
  AnalyticsReportData.JSON_PROPERTY_FOR_CRA_PURPOSE,
  AnalyticsReportData.JSON_PROPERTY_APPLICANT_IS_PERSONAL_GUARANTOR,
  AnalyticsReportData.JSON_PROPERTY_TIME_INTERVAL_TYPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:15:37.937249550Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AnalyticsReportData {
  public static final String JSON_PROPERTY_FOR_CRA_PURPOSE = "forCraPurpose";
  private Boolean forCraPurpose;

  public static final String JSON_PROPERTY_APPLICANT_IS_PERSONAL_GUARANTOR = "applicantIsPersonalGuarantor";
  private Boolean applicantIsPersonalGuarantor;

  public static final String JSON_PROPERTY_TIME_INTERVAL_TYPES = "timeIntervalTypes";
  private List<String> timeIntervalTypes;

  public AnalyticsReportData() {
  }

  public AnalyticsReportData forCraPurpose(Boolean forCraPurpose) {
    
    this.forCraPurpose = forCraPurpose;
    return this;
  }

   /**
   * Field to indicate if the requested report is for CRA or NONCRA. For small business lending or other similar business use cases, pass the value as “true” for purposes of this field.
   * @return forCraPurpose
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FOR_CRA_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getForCraPurpose() {
    return forCraPurpose;
  }


  @JsonProperty(JSON_PROPERTY_FOR_CRA_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForCraPurpose(Boolean forCraPurpose) {
    this.forCraPurpose = forCraPurpose;
  }


  public AnalyticsReportData applicantIsPersonalGuarantor(Boolean applicantIsPersonalGuarantor) {
    
    this.applicantIsPersonalGuarantor = applicantIsPersonalGuarantor;
    return this;
  }

   /**
   * Field to indicate if the business owner will personally guarantee the loan. If true, a consumer record will be required.
   * @return applicantIsPersonalGuarantor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICANT_IS_PERSONAL_GUARANTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApplicantIsPersonalGuarantor() {
    return applicantIsPersonalGuarantor;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_IS_PERSONAL_GUARANTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicantIsPersonalGuarantor(Boolean applicantIsPersonalGuarantor) {
    this.applicantIsPersonalGuarantor = applicantIsPersonalGuarantor;
  }


  public AnalyticsReportData timeIntervalTypes(List<String> timeIntervalTypes) {
    
    this.timeIntervalTypes = timeIntervalTypes;
    return this;
  }

  public AnalyticsReportData addTimeIntervalTypesItem(String timeIntervalTypesItem) {
    if (this.timeIntervalTypes == null) {
      this.timeIntervalTypes = new ArrayList<>();
    }
    this.timeIntervalTypes.add(timeIntervalTypesItem);
    return this;
  }

   /**
   * Requested time interval for attribute values.
   * @return timeIntervalTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_INTERVAL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTimeIntervalTypes() {
    return timeIntervalTypes;
  }


  @JsonProperty(JSON_PROPERTY_TIME_INTERVAL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeIntervalTypes(List<String> timeIntervalTypes) {
    this.timeIntervalTypes = timeIntervalTypes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalyticsReportData analyticsReportData = (AnalyticsReportData) o;
    return Objects.equals(this.forCraPurpose, analyticsReportData.forCraPurpose) &&
        Objects.equals(this.applicantIsPersonalGuarantor, analyticsReportData.applicantIsPersonalGuarantor) &&
        Objects.equals(this.timeIntervalTypes, analyticsReportData.timeIntervalTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forCraPurpose, applicantIsPersonalGuarantor, timeIntervalTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalyticsReportData {\n");
    sb.append("    forCraPurpose: ").append(toIndentedString(forCraPurpose)).append("\n");
    sb.append("    applicantIsPersonalGuarantor: ").append(toIndentedString(applicantIsPersonalGuarantor)).append("\n");
    sb.append("    timeIntervalTypes: ").append(toIndentedString(timeIntervalTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

