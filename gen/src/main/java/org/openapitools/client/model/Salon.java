/*
 * IRCI SCSE
 * API privée permettant de récupérer les fiches contacts scannées par les commerciaux de votre entreprise sur les salons.  L'authentification au service se fait par token, envoyé sur demande.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mathieu@welkom.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Salon
 */
@JsonPropertyOrder({
  Salon.JSON_PROPERTY_ID,
  Salon.JSON_PROPERTY_CITY,
  Salon.JSON_PROPERTY_YEAR,
  Salon.JSON_PROPERTY_SEMESTER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:25.486395919Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Salon {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_YEAR = "year";
  private String year;

  /**
   * Gets or Sets semester
   */
  public enum SemesterEnum {
    S1("S1"),
    
    S2("S2");

    private String value;

    SemesterEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SemesterEnum fromValue(String value) {
      for (SemesterEnum b : SemesterEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEMESTER = "semester";
  private SemesterEnum semester;

  public Salon() {
  }

  public Salon id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Salon city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public Salon year(String year) {
    
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear(String year) {
    this.year = year;
  }


  public Salon semester(SemesterEnum semester) {
    
    this.semester = semester;
    return this;
  }

   /**
   * Get semester
   * @return semester
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEMESTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SemesterEnum getSemester() {
    return semester;
  }


  @JsonProperty(JSON_PROPERTY_SEMESTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSemester(SemesterEnum semester) {
    this.semester = semester;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Salon salon = (Salon) o;
    return Objects.equals(this.id, salon.id) &&
        Objects.equals(this.city, salon.city) &&
        Objects.equals(this.year, salon.year) &&
        Objects.equals(this.semester, salon.semester);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, city, year, semester);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Salon {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    semester: ").append(toIndentedString(semester)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

