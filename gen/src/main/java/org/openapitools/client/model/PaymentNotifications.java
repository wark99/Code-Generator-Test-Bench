/*
 * Customer Payment Domain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Notification;
import org.openapitools.client.model.NotificationTerminal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentNotifications
 */
@JsonPropertyOrder({
  PaymentNotifications.JSON_PROPERTY_NOTIFICATION_TERMINAL,
  PaymentNotifications.JSON_PROPERTY_NOTIFICATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:54.275857511Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentNotifications {
  public static final String JSON_PROPERTY_NOTIFICATION_TERMINAL = "notificationTerminal";
  private NotificationTerminal notificationTerminal;

  public static final String JSON_PROPERTY_NOTIFICATION = "notification";
  private Notification notification;

  public PaymentNotifications() {
  }

  public PaymentNotifications notificationTerminal(NotificationTerminal notificationTerminal) {
    
    this.notificationTerminal = notificationTerminal;
    return this;
  }

   /**
   * Get notificationTerminal
   * @return notificationTerminal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotificationTerminal getNotificationTerminal() {
    return notificationTerminal;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationTerminal(NotificationTerminal notificationTerminal) {
    this.notificationTerminal = notificationTerminal;
  }


  public PaymentNotifications notification(Notification notification) {
    
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Notification getNotification() {
    return notification;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotification(Notification notification) {
    this.notification = notification;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentNotifications paymentNotifications = (PaymentNotifications) o;
    return Objects.equals(this.notificationTerminal, paymentNotifications.notificationTerminal) &&
        Objects.equals(this.notification, paymentNotifications.notification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notificationTerminal, notification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentNotifications {\n");
    sb.append("    notificationTerminal: ").append(toIndentedString(notificationTerminal)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

