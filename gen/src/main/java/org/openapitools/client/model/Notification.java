/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Notification
 */
@JsonPropertyOrder({
  Notification.JSON_PROPERTY_IS_MONDAY,
  Notification.JSON_PROPERTY_IS_TUESDAY,
  Notification.JSON_PROPERTY_IS_WEDNESDAY,
  Notification.JSON_PROPERTY_IS_THURSDAY,
  Notification.JSON_PROPERTY_IS_FRIDAY,
  Notification.JSON_PROPERTY_IS_SATURDAY,
  Notification.JSON_PROPERTY_IS_SUNDAY,
  Notification.JSON_PROPERTY_START_HOUR,
  Notification.JSON_PROPERTY_END_HOUR,
  Notification.JSON_PROPERTY_IS_MAIL,
  Notification.JSON_PROPERTY_IS_SMS,
  Notification.JSON_PROPERTY_IS_ENABLED,
  Notification.JSON_PROPERTY_USERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Notification {
  public static final String JSON_PROPERTY_IS_MONDAY = "is_monday";
  private Boolean isMonday;

  public static final String JSON_PROPERTY_IS_TUESDAY = "is_tuesday";
  private Boolean isTuesday;

  public static final String JSON_PROPERTY_IS_WEDNESDAY = "is_wednesday";
  private Boolean isWednesday;

  public static final String JSON_PROPERTY_IS_THURSDAY = "is_thursday";
  private Boolean isThursday;

  public static final String JSON_PROPERTY_IS_FRIDAY = "is_friday";
  private Boolean isFriday;

  public static final String JSON_PROPERTY_IS_SATURDAY = "is_saturday";
  private Boolean isSaturday;

  public static final String JSON_PROPERTY_IS_SUNDAY = "is_sunday";
  private Boolean isSunday;

  public static final String JSON_PROPERTY_START_HOUR = "start_hour";
  private String startHour;

  public static final String JSON_PROPERTY_END_HOUR = "end_hour";
  private String endHour;

  public static final String JSON_PROPERTY_IS_MAIL = "is_mail";
  private Boolean isMail;

  public static final String JSON_PROPERTY_IS_SMS = "is_sms";
  private Boolean isSms;

  public static final String JSON_PROPERTY_IS_ENABLED = "is_enabled";
  private Boolean isEnabled;

  public static final String JSON_PROPERTY_USERS = "users";
  private List<String> users = new ArrayList<>();

  public Notification() {
  }

  public Notification isMonday(Boolean isMonday) {
    
    this.isMonday = isMonday;
    return this;
  }

   /**
   * Is the users can be notified the monday ?
   * @return isMonday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_MONDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsMonday() {
    return isMonday;
  }


  @JsonProperty(JSON_PROPERTY_IS_MONDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsMonday(Boolean isMonday) {
    this.isMonday = isMonday;
  }


  public Notification isTuesday(Boolean isTuesday) {
    
    this.isTuesday = isTuesday;
    return this;
  }

   /**
   * Is the users can be notified the tuesday ?
   * @return isTuesday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_TUESDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsTuesday() {
    return isTuesday;
  }


  @JsonProperty(JSON_PROPERTY_IS_TUESDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsTuesday(Boolean isTuesday) {
    this.isTuesday = isTuesday;
  }


  public Notification isWednesday(Boolean isWednesday) {
    
    this.isWednesday = isWednesday;
    return this;
  }

   /**
   * Is the users can be notified the wednesday ?
   * @return isWednesday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_WEDNESDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsWednesday() {
    return isWednesday;
  }


  @JsonProperty(JSON_PROPERTY_IS_WEDNESDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsWednesday(Boolean isWednesday) {
    this.isWednesday = isWednesday;
  }


  public Notification isThursday(Boolean isThursday) {
    
    this.isThursday = isThursday;
    return this;
  }

   /**
   * Is the users can be notified the thursday ?
   * @return isThursday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_THURSDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsThursday() {
    return isThursday;
  }


  @JsonProperty(JSON_PROPERTY_IS_THURSDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsThursday(Boolean isThursday) {
    this.isThursday = isThursday;
  }


  public Notification isFriday(Boolean isFriday) {
    
    this.isFriday = isFriday;
    return this;
  }

   /**
   * Is the users can be notified the friday ?
   * @return isFriday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_FRIDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsFriday() {
    return isFriday;
  }


  @JsonProperty(JSON_PROPERTY_IS_FRIDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsFriday(Boolean isFriday) {
    this.isFriday = isFriday;
  }


  public Notification isSaturday(Boolean isSaturday) {
    
    this.isSaturday = isSaturday;
    return this;
  }

   /**
   * Is the users can be notified the saturday ?
   * @return isSaturday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SATURDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSaturday() {
    return isSaturday;
  }


  @JsonProperty(JSON_PROPERTY_IS_SATURDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSaturday(Boolean isSaturday) {
    this.isSaturday = isSaturday;
  }


  public Notification isSunday(Boolean isSunday) {
    
    this.isSunday = isSunday;
    return this;
  }

   /**
   * Is the users can be notified the sunday ?
   * @return isSunday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SUNDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSunday() {
    return isSunday;
  }


  @JsonProperty(JSON_PROPERTY_IS_SUNDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSunday(Boolean isSunday) {
    this.isSunday = isSunday;
  }


  public Notification startHour(String startHour) {
    
    this.startHour = startHour;
    return this;
  }

   /**
   * The time to use for daily restart
   * @return startHour
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_HOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStartHour() {
    return startHour;
  }


  @JsonProperty(JSON_PROPERTY_START_HOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartHour(String startHour) {
    this.startHour = startHour;
  }


  public Notification endHour(String endHour) {
    
    this.endHour = endHour;
    return this;
  }

   /**
   * The time to use for daily restart
   * @return endHour
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END_HOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEndHour() {
    return endHour;
  }


  @JsonProperty(JSON_PROPERTY_END_HOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndHour(String endHour) {
    this.endHour = endHour;
  }


  public Notification isMail(Boolean isMail) {
    
    this.isMail = isMail;
    return this;
  }

   /**
   * Is the users can be notified by mail ?
   * @return isMail
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_MAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsMail() {
    return isMail;
  }


  @JsonProperty(JSON_PROPERTY_IS_MAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsMail(Boolean isMail) {
    this.isMail = isMail;
  }


  public Notification isSms(Boolean isSms) {
    
    this.isSms = isSms;
    return this;
  }

   /**
   * Is the users can be notified by sms ?
   * @return isSms
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSms() {
    return isSms;
  }


  @JsonProperty(JSON_PROPERTY_IS_SMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSms(Boolean isSms) {
    this.isSms = isSms;
  }


  public Notification isEnabled(Boolean isEnabled) {
    
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Is the resource &#x60;Notification&#x60; enabled?
   * @return isEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public Notification users(List<String> users) {
    
    this.users = users;
    return this;
  }

  public Notification addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * List of users ID will notified
   * @return users
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsers(List<String> users) {
    this.users = users;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.isMonday, notification.isMonday) &&
        Objects.equals(this.isTuesday, notification.isTuesday) &&
        Objects.equals(this.isWednesday, notification.isWednesday) &&
        Objects.equals(this.isThursday, notification.isThursday) &&
        Objects.equals(this.isFriday, notification.isFriday) &&
        Objects.equals(this.isSaturday, notification.isSaturday) &&
        Objects.equals(this.isSunday, notification.isSunday) &&
        Objects.equals(this.startHour, notification.startHour) &&
        Objects.equals(this.endHour, notification.endHour) &&
        Objects.equals(this.isMail, notification.isMail) &&
        Objects.equals(this.isSms, notification.isSms) &&
        Objects.equals(this.isEnabled, notification.isEnabled) &&
        Objects.equals(this.users, notification.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isMonday, isTuesday, isWednesday, isThursday, isFriday, isSaturday, isSunday, startHour, endHour, isMail, isSms, isEnabled, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    sb.append("    isMonday: ").append(toIndentedString(isMonday)).append("\n");
    sb.append("    isTuesday: ").append(toIndentedString(isTuesday)).append("\n");
    sb.append("    isWednesday: ").append(toIndentedString(isWednesday)).append("\n");
    sb.append("    isThursday: ").append(toIndentedString(isThursday)).append("\n");
    sb.append("    isFriday: ").append(toIndentedString(isFriday)).append("\n");
    sb.append("    isSaturday: ").append(toIndentedString(isSaturday)).append("\n");
    sb.append("    isSunday: ").append(toIndentedString(isSunday)).append("\n");
    sb.append("    startHour: ").append(toIndentedString(startHour)).append("\n");
    sb.append("    endHour: ").append(toIndentedString(endHour)).append("\n");
    sb.append("    isMail: ").append(toIndentedString(isMail)).append("\n");
    sb.append("    isSms: ").append(toIndentedString(isSms)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

