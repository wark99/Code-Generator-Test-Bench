/*
 * Formuesgrunnlag for eiendomsskatt API
 * Tjenesten leverer fastsatte formuesgrunnlag for fast eiendom som grunnlag for eiendomsskatt, og inneholder informasjon om eiendomsopplysninger, adresseopplysninger og eiendomsrelasjoner for fast eiendom, samt beregnede markedsverdier med tilhørende grunnlag for boliger
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Boligegenskaper;
import org.openapitools.client.model.GrunnlagForBeregnetMarkedsverdi;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Opplysninger som har betydning for beregning av formuesverdi spesifikt for bolig og boenhet i boligselskap
 */
@JsonPropertyOrder({
  FormuespesifikasjonForBolig.JSON_PROPERTY_BOLIGEGENSKAPER,
  FormuespesifikasjonForBolig.JSON_PROPERTY_BELIGGENHETSKODE,
  FormuespesifikasjonForBolig.JSON_PROPERTY_BEREGNET_MARKEDSVERDI,
  FormuespesifikasjonForBolig.JSON_PROPERTY_BEREGNINGSTYPE,
  FormuespesifikasjonForBolig.JSON_PROPERTY_GRUNNLAG_FOR_BEREGNET_MARKEDSVERDI
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:25:17.794277948Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FormuespesifikasjonForBolig {
  public static final String JSON_PROPERTY_BOLIGEGENSKAPER = "boligegenskaper";
  private Boligegenskaper boligegenskaper;

  public static final String JSON_PROPERTY_BELIGGENHETSKODE = "beliggenhetskode";
  private String beliggenhetskode;

  public static final String JSON_PROPERTY_BEREGNET_MARKEDSVERDI = "beregnetMarkedsverdi";
  private Long beregnetMarkedsverdi;

  public static final String JSON_PROPERTY_BEREGNINGSTYPE = "beregningstype";
  private String beregningstype;

  public static final String JSON_PROPERTY_GRUNNLAG_FOR_BEREGNET_MARKEDSVERDI = "grunnlagForBeregnetMarkedsverdi";
  private GrunnlagForBeregnetMarkedsverdi grunnlagForBeregnetMarkedsverdi;

  public FormuespesifikasjonForBolig() {
  }

  public FormuespesifikasjonForBolig boligegenskaper(Boligegenskaper boligegenskaper) {
    
    this.boligegenskaper = boligegenskaper;
    return this;
  }

   /**
   * Get boligegenskaper
   * @return boligegenskaper
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOLIGEGENSKAPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boligegenskaper getBoligegenskaper() {
    return boligegenskaper;
  }


  @JsonProperty(JSON_PROPERTY_BOLIGEGENSKAPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBoligegenskaper(Boligegenskaper boligegenskaper) {
    this.boligegenskaper = boligegenskaper;
  }


  public FormuespesifikasjonForBolig beliggenhetskode(String beliggenhetskode) {
    
    this.beliggenhetskode = beliggenhetskode;
    return this;
  }

   /**
   * En verdi mellom 1-7 som angir hvor tettbygd området boligen ligger i er, basert på antall innbyggere (&lt;a href&#x3D;&#39;https://data.skatteetaten.no/web/datakatalog/kodeliste/20b4d3dc-2d8d-443e-ac66-6154dd92ad49&#39;&gt;Kodelistereferanse&lt;/a&gt;)
   * @return beliggenhetskode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BELIGGENHETSKODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeliggenhetskode() {
    return beliggenhetskode;
  }


  @JsonProperty(JSON_PROPERTY_BELIGGENHETSKODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeliggenhetskode(String beliggenhetskode) {
    this.beliggenhetskode = beliggenhetskode;
  }


  public FormuespesifikasjonForBolig beregnetMarkedsverdi(Long beregnetMarkedsverdi) {
    
    this.beregnetMarkedsverdi = beregnetMarkedsverdi;
    return this;
  }

   /**
   * en sum av penger i hele kroner brukt i en kontekst. Dette kan være en transaksjon, saldo o.l. (&lt;a href&#x3D;&#39;https://data.skatteetaten.no/web/datakatalog/begrep/20b2e146-9fe1-11e5-a9f8-e4115b280940&#39;&gt;Begrepsreferanse&lt;/a&gt;)
   * @return beregnetMarkedsverdi
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEREGNET_MARKEDSVERDI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBeregnetMarkedsverdi() {
    return beregnetMarkedsverdi;
  }


  @JsonProperty(JSON_PROPERTY_BEREGNET_MARKEDSVERDI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeregnetMarkedsverdi(Long beregnetMarkedsverdi) {
    this.beregnetMarkedsverdi = beregnetMarkedsverdi;
  }


  public FormuespesifikasjonForBolig beregningstype(String beregningstype) {
    
    this.beregningstype = beregningstype;
    return this;
  }

   /**
   * Kodeliste som angir om en beregnet markedsverdi er basert på maskinell beregning eller dokumentert markedsverdi (&lt;a href&#x3D;&#39;https://data.skatteetaten.no/web/datakatalog/kodeliste/210836b0-a125-4b2e-b37c-40aa08636eed&#39;&gt;Kodelistereferanse&lt;/a&gt;)
   * @return beregningstype
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEREGNINGSTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeregningstype() {
    return beregningstype;
  }


  @JsonProperty(JSON_PROPERTY_BEREGNINGSTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeregningstype(String beregningstype) {
    this.beregningstype = beregningstype;
  }


  public FormuespesifikasjonForBolig grunnlagForBeregnetMarkedsverdi(GrunnlagForBeregnetMarkedsverdi grunnlagForBeregnetMarkedsverdi) {
    
    this.grunnlagForBeregnetMarkedsverdi = grunnlagForBeregnetMarkedsverdi;
    return this;
  }

   /**
   * Get grunnlagForBeregnetMarkedsverdi
   * @return grunnlagForBeregnetMarkedsverdi
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRUNNLAG_FOR_BEREGNET_MARKEDSVERDI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GrunnlagForBeregnetMarkedsverdi getGrunnlagForBeregnetMarkedsverdi() {
    return grunnlagForBeregnetMarkedsverdi;
  }


  @JsonProperty(JSON_PROPERTY_GRUNNLAG_FOR_BEREGNET_MARKEDSVERDI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrunnlagForBeregnetMarkedsverdi(GrunnlagForBeregnetMarkedsverdi grunnlagForBeregnetMarkedsverdi) {
    this.grunnlagForBeregnetMarkedsverdi = grunnlagForBeregnetMarkedsverdi;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormuespesifikasjonForBolig formuespesifikasjonForBolig = (FormuespesifikasjonForBolig) o;
    return Objects.equals(this.boligegenskaper, formuespesifikasjonForBolig.boligegenskaper) &&
        Objects.equals(this.beliggenhetskode, formuespesifikasjonForBolig.beliggenhetskode) &&
        Objects.equals(this.beregnetMarkedsverdi, formuespesifikasjonForBolig.beregnetMarkedsverdi) &&
        Objects.equals(this.beregningstype, formuespesifikasjonForBolig.beregningstype) &&
        Objects.equals(this.grunnlagForBeregnetMarkedsverdi, formuespesifikasjonForBolig.grunnlagForBeregnetMarkedsverdi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boligegenskaper, beliggenhetskode, beregnetMarkedsverdi, beregningstype, grunnlagForBeregnetMarkedsverdi);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormuespesifikasjonForBolig {\n");
    sb.append("    boligegenskaper: ").append(toIndentedString(boligegenskaper)).append("\n");
    sb.append("    beliggenhetskode: ").append(toIndentedString(beliggenhetskode)).append("\n");
    sb.append("    beregnetMarkedsverdi: ").append(toIndentedString(beregnetMarkedsverdi)).append("\n");
    sb.append("    beregningstype: ").append(toIndentedString(beregningstype)).append("\n");
    sb.append("    grunnlagForBeregnetMarkedsverdi: ").append(toIndentedString(grunnlagForBeregnetMarkedsverdi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

