/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Remarks2;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountHistories
 */
@JsonPropertyOrder({
  AccountHistories.JSON_PROPERTY_ACTUAL_PAYMENT,
  AccountHistories.JSON_PROPERTY_CREDIT_LIMIT,
  AccountHistories.JSON_PROPERTY_CURRENT_BALANCE,
  AccountHistories.JSON_PROPERTY_HIGH_CREDIT,
  AccountHistories.JSON_PROPERTY_HISTORY_AVAILABLE,
  AccountHistories.JSON_PROPERTY_MONTH_EFFECTIVE,
  AccountHistories.JSON_PROPERTY_PAST_DUE,
  AccountHistories.JSON_PROPERTY_REMARKS,
  AccountHistories.JSON_PROPERTY_SCHEDULED_MONTHLY_PAYMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountHistories {
  public static final String JSON_PROPERTY_ACTUAL_PAYMENT = "actualPayment";
  private String actualPayment;

  public static final String JSON_PROPERTY_CREDIT_LIMIT = "creditLimit";
  private String creditLimit;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private String currentBalance;

  public static final String JSON_PROPERTY_HIGH_CREDIT = "highCredit";
  private String highCredit;

  public static final String JSON_PROPERTY_HISTORY_AVAILABLE = "historyAvailable";
  private String historyAvailable;

  public static final String JSON_PROPERTY_MONTH_EFFECTIVE = "monthEffective";
  private String monthEffective;

  public static final String JSON_PROPERTY_PAST_DUE = "pastDue";
  private String pastDue;

  public static final String JSON_PROPERTY_REMARKS = "remarks";
  private List<Remarks2> remarks;

  public static final String JSON_PROPERTY_SCHEDULED_MONTHLY_PAYMENT = "scheduledMonthlyPayment";
  private String scheduledMonthlyPayment;

  public AccountHistories() {
  }

  public AccountHistories actualPayment(String actualPayment) {
    
    this.actualPayment = actualPayment;
    return this;
  }

   /**
   * Get actualPayment
   * @return actualPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActualPayment() {
    return actualPayment;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualPayment(String actualPayment) {
    this.actualPayment = actualPayment;
  }


  public AccountHistories creditLimit(String creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditLimit() {
    return creditLimit;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditLimit(String creditLimit) {
    this.creditLimit = creditLimit;
  }


  public AccountHistories currentBalance(String currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(String currentBalance) {
    this.currentBalance = currentBalance;
  }


  public AccountHistories highCredit(String highCredit) {
    
    this.highCredit = highCredit;
    return this;
  }

   /**
   * Get highCredit
   * @return highCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHighCredit() {
    return highCredit;
  }


  @JsonProperty(JSON_PROPERTY_HIGH_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighCredit(String highCredit) {
    this.highCredit = highCredit;
  }


  public AccountHistories historyAvailable(String historyAvailable) {
    
    this.historyAvailable = historyAvailable;
    return this;
  }

   /**
   * Get historyAvailable
   * @return historyAvailable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HISTORY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHistoryAvailable() {
    return historyAvailable;
  }


  @JsonProperty(JSON_PROPERTY_HISTORY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryAvailable(String historyAvailable) {
    this.historyAvailable = historyAvailable;
  }


  public AccountHistories monthEffective(String monthEffective) {
    
    this.monthEffective = monthEffective;
    return this;
  }

   /**
   * Get monthEffective
   * @return monthEffective
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTH_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMonthEffective() {
    return monthEffective;
  }


  @JsonProperty(JSON_PROPERTY_MONTH_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthEffective(String monthEffective) {
    this.monthEffective = monthEffective;
  }


  public AccountHistories pastDue(String pastDue) {
    
    this.pastDue = pastDue;
    return this;
  }

   /**
   * Get pastDue
   * @return pastDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPastDue() {
    return pastDue;
  }


  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPastDue(String pastDue) {
    this.pastDue = pastDue;
  }


  public AccountHistories remarks(List<Remarks2> remarks) {
    
    this.remarks = remarks;
    return this;
  }

  public AccountHistories addRemarksItem(Remarks2 remarksItem) {
    if (this.remarks == null) {
      this.remarks = new ArrayList<>();
    }
    this.remarks.add(remarksItem);
    return this;
  }

   /**
   * Get remarks
   * @return remarks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Remarks2> getRemarks() {
    return remarks;
  }


  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemarks(List<Remarks2> remarks) {
    this.remarks = remarks;
  }


  public AccountHistories scheduledMonthlyPayment(String scheduledMonthlyPayment) {
    
    this.scheduledMonthlyPayment = scheduledMonthlyPayment;
    return this;
  }

   /**
   * Get scheduledMonthlyPayment
   * @return scheduledMonthlyPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_MONTHLY_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScheduledMonthlyPayment() {
    return scheduledMonthlyPayment;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_MONTHLY_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledMonthlyPayment(String scheduledMonthlyPayment) {
    this.scheduledMonthlyPayment = scheduledMonthlyPayment;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountHistories accountHistories = (AccountHistories) o;
    return Objects.equals(this.actualPayment, accountHistories.actualPayment) &&
        Objects.equals(this.creditLimit, accountHistories.creditLimit) &&
        Objects.equals(this.currentBalance, accountHistories.currentBalance) &&
        Objects.equals(this.highCredit, accountHistories.highCredit) &&
        Objects.equals(this.historyAvailable, accountHistories.historyAvailable) &&
        Objects.equals(this.monthEffective, accountHistories.monthEffective) &&
        Objects.equals(this.pastDue, accountHistories.pastDue) &&
        Objects.equals(this.remarks, accountHistories.remarks) &&
        Objects.equals(this.scheduledMonthlyPayment, accountHistories.scheduledMonthlyPayment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualPayment, creditLimit, currentBalance, highCredit, historyAvailable, monthEffective, pastDue, remarks, scheduledMonthlyPayment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountHistories {\n");
    sb.append("    actualPayment: ").append(toIndentedString(actualPayment)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    highCredit: ").append(toIndentedString(highCredit)).append("\n");
    sb.append("    historyAvailable: ").append(toIndentedString(historyAvailable)).append("\n");
    sb.append("    monthEffective: ").append(toIndentedString(monthEffective)).append("\n");
    sb.append("    pastDue: ").append(toIndentedString(pastDue)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    scheduledMonthlyPayment: ").append(toIndentedString(scheduledMonthlyPayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

