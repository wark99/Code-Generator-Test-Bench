/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.LoanPaymentDetailsAccount;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Loan payment details for a customer account
 */
@JsonPropertyOrder({
  LoanPaymentDetails.JSON_PROPERTY_LOAN_NUMBER,
  LoanPaymentDetails.JSON_PROPERTY_LOAN_PAYMENT_NUMBER,
  LoanPaymentDetails.JSON_PROPERTY_LOAN_PAYMENT_ADDRESS,
  LoanPaymentDetails.JSON_PROPERTY_ACCOUNT_DETAIL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T11:16:07.490346735Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class LoanPaymentDetails {
  public static final String JSON_PROPERTY_LOAN_NUMBER = "loanNumber";
  private String loanNumber;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_NUMBER = "loanPaymentNumber";
  private String loanPaymentNumber;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_ADDRESS = "loanPaymentAddress";
  private String loanPaymentAddress;

  public static final String JSON_PROPERTY_ACCOUNT_DETAIL = "accountDetail";
  private LoanPaymentDetailsAccount accountDetail;

  public LoanPaymentDetails() {
  }

  public LoanPaymentDetails loanNumber(String loanNumber) {
    
    this.loanNumber = loanNumber;
    return this;
  }

   /**
   * The number of the specific loan under the account.
   * @return loanNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanNumber() {
    return loanNumber;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanNumber(String loanNumber) {
    this.loanNumber = loanNumber;
  }


  public LoanPaymentDetails loanPaymentNumber(String loanPaymentNumber) {
    
    this.loanPaymentNumber = loanPaymentNumber;
    return this;
  }

   /**
   * The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.
   * @return loanPaymentNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanPaymentNumber() {
    return loanPaymentNumber;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanPaymentNumber(String loanPaymentNumber) {
    this.loanPaymentNumber = loanPaymentNumber;
  }


  public LoanPaymentDetails loanPaymentAddress(String loanPaymentAddress) {
    
    this.loanPaymentAddress = loanPaymentAddress;
    return this;
  }

   /**
   * The payment address to send manual payments to
   * @return loanPaymentAddress
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanPaymentAddress() {
    return loanPaymentAddress;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanPaymentAddress(String loanPaymentAddress) {
    this.loanPaymentAddress = loanPaymentAddress;
  }


  public LoanPaymentDetails accountDetail(LoanPaymentDetailsAccount accountDetail) {
    
    this.accountDetail = accountDetail;
    return this;
  }

   /**
   * Get accountDetail
   * @return accountDetail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoanPaymentDetailsAccount getAccountDetail() {
    return accountDetail;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountDetail(LoanPaymentDetailsAccount accountDetail) {
    this.accountDetail = accountDetail;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanPaymentDetails loanPaymentDetails = (LoanPaymentDetails) o;
    return Objects.equals(this.loanNumber, loanPaymentDetails.loanNumber) &&
        Objects.equals(this.loanPaymentNumber, loanPaymentDetails.loanPaymentNumber) &&
        Objects.equals(this.loanPaymentAddress, loanPaymentDetails.loanPaymentAddress) &&
        Objects.equals(this.accountDetail, loanPaymentDetails.accountDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanNumber, loanPaymentNumber, loanPaymentAddress, accountDetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanPaymentDetails {\n");
    sb.append("    loanNumber: ").append(toIndentedString(loanNumber)).append("\n");
    sb.append("    loanPaymentNumber: ").append(toIndentedString(loanPaymentNumber)).append("\n");
    sb.append("    loanPaymentAddress: ").append(toIndentedString(loanPaymentAddress)).append("\n");
    sb.append("    accountDetail: ").append(toIndentedString(accountDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

