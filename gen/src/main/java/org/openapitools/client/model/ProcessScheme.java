/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AddressNodeNormSchemeCreator;
import org.openapitools.client.model.Created;
import org.openapitools.client.model.Name1;
import org.openapitools.client.model.Prio;
import org.openapitools.client.model.Status;
import org.openapitools.client.model.Updated;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProcessScheme
 */
@JsonPropertyOrder({
  ProcessScheme.JSON_PROPERTY_STATUS,
  ProcessScheme.JSON_PROPERTY_CREATED,
  ProcessScheme.JSON_PROPERTY_CREATOR,
  ProcessScheme.JSON_PROPERTY_UPDATED,
  ProcessScheme.JSON_PROPERTY_UPDATER,
  ProcessScheme.JSON_PROPERTY_ID,
  ProcessScheme.JSON_PROPERTY_PRIO,
  ProcessScheme.JSON_PROPERTY_NAME,
  ProcessScheme.JSON_PROPERTY_PROCESS_CLASS,
  ProcessScheme.JSON_PROPERTY_PROCESS_PARAMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ProcessScheme {
  public static final String JSON_PROPERTY_STATUS = "status";
  private Status status;

  public static final String JSON_PROPERTY_CREATED = "created";
  private Created created;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private AddressNodeNormSchemeCreator creator;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private Updated updated;

  public static final String JSON_PROPERTY_UPDATER = "updater";
  private AddressNodeNormSchemeCreator updater;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_PRIO = "prio";
  private Prio prio;

  public static final String JSON_PROPERTY_NAME = "name";
  private Name1 name;

  public static final String JSON_PROPERTY_PROCESS_CLASS = "process_class";
  private String processClass;

  public static final String JSON_PROPERTY_PROCESS_PARAMS = "process_params";
  private Object processParams;

  public ProcessScheme() {
  }

  public ProcessScheme status(Status status) {
    
    this.status = status;
    return this;
  }

   /**
   * status (1 - Inactive, 2 - Active)
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Status getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(Status status) {
    this.status = status;
  }


  public ProcessScheme created(Created created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Created getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(Created created) {
    this.created = created;
  }


  public ProcessScheme creator(AddressNodeNormSchemeCreator creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreator(AddressNodeNormSchemeCreator creator) {
    this.creator = creator;
  }


  public ProcessScheme updated(Updated updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Updated getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdated(Updated updated) {
    this.updated = updated;
  }


  public ProcessScheme updater(AddressNodeNormSchemeCreator updater) {
    
    this.updater = updater;
    return this;
  }

   /**
   * Get updater
   * @return updater
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getUpdater() {
    return updater;
  }


  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdater(AddressNodeNormSchemeCreator updater) {
    this.updater = updater;
  }


  public ProcessScheme id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * process id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ProcessScheme prio(Prio prio) {
    
    this.prio = prio;
    return this;
  }

   /**
   * Get prio
   * @return prio
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Prio getPrio() {
    return prio;
  }


  @JsonProperty(JSON_PROPERTY_PRIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrio(Prio prio) {
    this.prio = prio;
  }


  public ProcessScheme name(Name1 name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Name1 getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(Name1 name) {
    this.name = name;
  }


  public ProcessScheme processClass(String processClass) {
    
    this.processClass = processClass;
    return this;
  }

   /**
   * path to process class
   * @return processClass
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessClass() {
    return processClass;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessClass(String processClass) {
    this.processClass = processClass;
  }


  public ProcessScheme processParams(Object processParams) {
    
    this.processParams = processParams;
    return this;
  }

   /**
   * process params
   * @return processParams
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESS_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getProcessParams() {
    return processParams;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessParams(Object processParams) {
    this.processParams = processParams;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessScheme processScheme = (ProcessScheme) o;
    return Objects.equals(this.status, processScheme.status) &&
        Objects.equals(this.created, processScheme.created) &&
        Objects.equals(this.creator, processScheme.creator) &&
        Objects.equals(this.updated, processScheme.updated) &&
        Objects.equals(this.updater, processScheme.updater) &&
        Objects.equals(this.id, processScheme.id) &&
        Objects.equals(this.prio, processScheme.prio) &&
        Objects.equals(this.name, processScheme.name) &&
        Objects.equals(this.processClass, processScheme.processClass) &&
        Objects.equals(this.processParams, processScheme.processParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, created, creator, updated, updater, id, prio, name, processClass, processParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessScheme {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    prio: ").append(toIndentedString(prio)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    processClass: ").append(toIndentedString(processClass)).append("\n");
    sb.append("    processParams: ").append(toIndentedString(processParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

