/*
 * 의류 보관 서비스 API
 * 의류 보관 서비스를 위한 API 명세서
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ClothesStorePostRequest
 */
@JsonPropertyOrder({
  ClothesStorePostRequest.JSON_PROPERTY_USER_ID,
  ClothesStorePostRequest.JSON_PROPERTY_ORDER_ID,
  ClothesStorePostRequest.JSON_PROPERTY_DESCRIPTION,
  ClothesStorePostRequest.JSON_PROPERTY_CLOTHES_CATEGORY_ID,
  ClothesStorePostRequest.JSON_PROPERTY_ORDER_DATE,
  ClothesStorePostRequest.JSON_PROPERTY_STORAGE_DURATION_MONTHS,
  ClothesStorePostRequest.JSON_PROPERTY_TOKEN
})
@JsonTypeName("_clothes_store_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:17:22.823821767Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ClothesStorePostRequest {
  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_ORDER_ID = "order_id";
  private Integer orderId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CLOTHES_CATEGORY_ID = "clothes_category_id";
  private Integer clothesCategoryId;

  public static final String JSON_PROPERTY_ORDER_DATE = "order_date";
  private LocalDate orderDate;

  public static final String JSON_PROPERTY_STORAGE_DURATION_MONTHS = "storage_duration_months";
  private Integer storageDurationMonths;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public ClothesStorePostRequest() {
  }

  public ClothesStorePostRequest userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public ClothesStorePostRequest orderId(Integer orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrderId() {
    return orderId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }


  public ClothesStorePostRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ClothesStorePostRequest clothesCategoryId(Integer clothesCategoryId) {
    
    this.clothesCategoryId = clothesCategoryId;
    return this;
  }

   /**
   * Get clothesCategoryId
   * @return clothesCategoryId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLOTHES_CATEGORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getClothesCategoryId() {
    return clothesCategoryId;
  }


  @JsonProperty(JSON_PROPERTY_CLOTHES_CATEGORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClothesCategoryId(Integer clothesCategoryId) {
    this.clothesCategoryId = clothesCategoryId;
  }


  public ClothesStorePostRequest orderDate(LocalDate orderDate) {
    
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Get orderDate
   * @return orderDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getOrderDate() {
    return orderDate;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderDate(LocalDate orderDate) {
    this.orderDate = orderDate;
  }


  public ClothesStorePostRequest storageDurationMonths(Integer storageDurationMonths) {
    
    this.storageDurationMonths = storageDurationMonths;
    return this;
  }

   /**
   * Get storageDurationMonths
   * @return storageDurationMonths
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_DURATION_MONTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStorageDurationMonths() {
    return storageDurationMonths;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_DURATION_MONTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageDurationMonths(Integer storageDurationMonths) {
    this.storageDurationMonths = storageDurationMonths;
  }


  public ClothesStorePostRequest token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * 사용자의 인증 토큰
   * @return token
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToken(String token) {
    this.token = token;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClothesStorePostRequest clothesStorePostRequest = (ClothesStorePostRequest) o;
    return Objects.equals(this.userId, clothesStorePostRequest.userId) &&
        Objects.equals(this.orderId, clothesStorePostRequest.orderId) &&
        Objects.equals(this.description, clothesStorePostRequest.description) &&
        Objects.equals(this.clothesCategoryId, clothesStorePostRequest.clothesCategoryId) &&
        Objects.equals(this.orderDate, clothesStorePostRequest.orderDate) &&
        Objects.equals(this.storageDurationMonths, clothesStorePostRequest.storageDurationMonths) &&
        Objects.equals(this.token, clothesStorePostRequest.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, orderId, description, clothesCategoryId, orderDate, storageDurationMonths, token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClothesStorePostRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    clothesCategoryId: ").append(toIndentedString(clothesCategoryId)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    storageDurationMonths: ").append(toIndentedString(storageDurationMonths)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

