/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InvestmentAccountAkoyaHoldingsInnerOptionSecurity
 */
@JsonPropertyOrder({
  InvestmentAccountAkoyaHoldingsInnerOptionSecurity.JSON_PROPERTY_SECURED,
  InvestmentAccountAkoyaHoldingsInnerOptionSecurity.JSON_PROPERTY_OPTION_TYPE,
  InvestmentAccountAkoyaHoldingsInnerOptionSecurity.JSON_PROPERTY_STRIKE_PRICE,
  InvestmentAccountAkoyaHoldingsInnerOptionSecurity.JSON_PROPERTY_EXPIRE_DATE,
  InvestmentAccountAkoyaHoldingsInnerOptionSecurity.JSON_PROPERTY_SHARES_PER_CONTRACT
})
@JsonTypeName("InvestmentAccountAkoya_holdings_inner_optionSecurity")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InvestmentAccountAkoyaHoldingsInnerOptionSecurity {
  public static final String JSON_PROPERTY_SECURED = "secured";
  private String secured;

  public static final String JSON_PROPERTY_OPTION_TYPE = "optionType";
  private String optionType;

  public static final String JSON_PROPERTY_STRIKE_PRICE = "strikePrice";
  private BigDecimal strikePrice;

  public static final String JSON_PROPERTY_EXPIRE_DATE = "expireDate";
  private String expireDate;

  public static final String JSON_PROPERTY_SHARES_PER_CONTRACT = "sharesPerContract";
  private BigDecimal sharesPerContract;

  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity() {
  }

  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity secured(String secured) {
    
    this.secured = secured;
    return this;
  }

   /**
   * Get secured
   * @return secured
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecured() {
    return secured;
  }


  @JsonProperty(JSON_PROPERTY_SECURED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecured(String secured) {
    this.secured = secured;
  }


  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity optionType(String optionType) {
    
    this.optionType = optionType;
    return this;
  }

   /**
   * Get optionType
   * @return optionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOptionType() {
    return optionType;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionType(String optionType) {
    this.optionType = optionType;
  }


  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity strikePrice(BigDecimal strikePrice) {
    
    this.strikePrice = strikePrice;
    return this;
  }

   /**
   * Get strikePrice
   * @return strikePrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStrikePrice() {
    return strikePrice;
  }


  @JsonProperty(JSON_PROPERTY_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrikePrice(BigDecimal strikePrice) {
    this.strikePrice = strikePrice;
  }


  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity expireDate(String expireDate) {
    
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Get expireDate
   * @return expireDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpireDate() {
    return expireDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpireDate(String expireDate) {
    this.expireDate = expireDate;
  }


  public InvestmentAccountAkoyaHoldingsInnerOptionSecurity sharesPerContract(BigDecimal sharesPerContract) {
    
    this.sharesPerContract = sharesPerContract;
    return this;
  }

   /**
   * Get sharesPerContract
   * @return sharesPerContract
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSharesPerContract() {
    return sharesPerContract;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesPerContract(BigDecimal sharesPerContract) {
    this.sharesPerContract = sharesPerContract;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestmentAccountAkoyaHoldingsInnerOptionSecurity investmentAccountAkoyaHoldingsInnerOptionSecurity = (InvestmentAccountAkoyaHoldingsInnerOptionSecurity) o;
    return Objects.equals(this.secured, investmentAccountAkoyaHoldingsInnerOptionSecurity.secured) &&
        Objects.equals(this.optionType, investmentAccountAkoyaHoldingsInnerOptionSecurity.optionType) &&
        Objects.equals(this.strikePrice, investmentAccountAkoyaHoldingsInnerOptionSecurity.strikePrice) &&
        Objects.equals(this.expireDate, investmentAccountAkoyaHoldingsInnerOptionSecurity.expireDate) &&
        Objects.equals(this.sharesPerContract, investmentAccountAkoyaHoldingsInnerOptionSecurity.sharesPerContract);
  }

  @Override
  public int hashCode() {
    return Objects.hash(secured, optionType, strikePrice, expireDate, sharesPerContract);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestmentAccountAkoyaHoldingsInnerOptionSecurity {\n");
    sb.append("    secured: ").append(toIndentedString(secured)).append("\n");
    sb.append("    optionType: ").append(toIndentedString(optionType)).append("\n");
    sb.append("    strikePrice: ").append(toIndentedString(strikePrice)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    sharesPerContract: ").append(toIndentedString(sharesPerContract)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

