/*
 * Proxy API Adapter
 * Convert standard OpenAPI requests to Internal API s**t show, respond with normalized data and messaging
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ResponseErrors;
import org.openapitools.client.model.ResponseInformation;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ResponseAuthFailMixed
 */
@JsonPropertyOrder({
  ResponseAuthFailMixed.JSON_PROPERTY_SUCCESS,
  ResponseAuthFailMixed.JSON_PROPERTY_MESSAGE,
  ResponseAuthFailMixed.JSON_PROPERTY_ERRORS
})
@JsonTypeName("Response.Auth.Fail.Mixed")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:17:03.349465965Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ResponseAuthFailMixed {
  public static final String JSON_PROPERTY_SUCCESS = "success";
  private JsonNullable<Object> success = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<Object> message = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private JsonNullable<Object> errors = JsonNullable.<Object>of(null);

  public ResponseAuthFailMixed() {
  }

  public ResponseAuthFailMixed success(Object success) {
    this.success = JsonNullable.<Object>of(success);
    
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSuccess() {
        return success.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSuccess_JsonNullable() {
    return success;
  }
  
  @JsonProperty(JSON_PROPERTY_SUCCESS)
  public void setSuccess_JsonNullable(JsonNullable<Object> success) {
    this.success = success;
  }

  public void setSuccess(Object success) {
    this.success = JsonNullable.<Object>of(success);
  }


  public ResponseAuthFailMixed message(Object message) {
    this.message = JsonNullable.<Object>of(message);
    
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<Object> message) {
    this.message = message;
  }

  public void setMessage(Object message) {
    this.message = JsonNullable.<Object>of(message);
  }


  public ResponseAuthFailMixed errors(Object errors) {
    this.errors = JsonNullable.<Object>of(errors);
    
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getErrors() {
        return errors.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getErrors_JsonNullable() {
    return errors;
  }
  
  @JsonProperty(JSON_PROPERTY_ERRORS)
  public void setErrors_JsonNullable(JsonNullable<Object> errors) {
    this.errors = errors;
  }

  public void setErrors(Object errors) {
    this.errors = JsonNullable.<Object>of(errors);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseAuthFailMixed responseAuthFailMixed = (ResponseAuthFailMixed) o;
    return equalsNullable(this.success, responseAuthFailMixed.success) &&
        equalsNullable(this.message, responseAuthFailMixed.message) &&
        equalsNullable(this.errors, responseAuthFailMixed.errors);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(success), hashCodeNullable(message), hashCodeNullable(errors));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseAuthFailMixed {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

