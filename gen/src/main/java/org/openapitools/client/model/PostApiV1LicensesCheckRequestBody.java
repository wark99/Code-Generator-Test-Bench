/*
 * SDefender License Server
 * Just one end point to check licenses.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostApiV1LicensesCheckRequestBody
 */
@JsonPropertyOrder({
  PostApiV1LicensesCheckRequestBody.JSON_PROPERTY_KEY,
  PostApiV1LicensesCheckRequestBody.JSON_PROPERTY_ADDRESS,
  PostApiV1LicensesCheckRequestBody.JSON_PROPERTY_DEVICES,
  PostApiV1LicensesCheckRequestBody.JSON_PROPERTY_PROCESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:53.528488476Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PostApiV1LicensesCheckRequestBody {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_DEVICES = "devices";
  private BigDecimal devices;

  public static final String JSON_PROPERTY_PROCESS = "process";
  private BigDecimal process;

  public PostApiV1LicensesCheckRequestBody() {
  }

  public PostApiV1LicensesCheckRequestBody key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKey(String key) {
    this.key = key;
  }


  public PostApiV1LicensesCheckRequestBody address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(String address) {
    this.address = address;
  }


  public PostApiV1LicensesCheckRequestBody devices(BigDecimal devices) {
    
    this.devices = devices;
    return this;
  }

   /**
   * Get devices
   * @return devices
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDevices() {
    return devices;
  }


  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevices(BigDecimal devices) {
    this.devices = devices;
  }


  public PostApiV1LicensesCheckRequestBody process(BigDecimal process) {
    
    this.process = process;
    return this;
  }

   /**
   * Get process
   * @return process
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getProcess() {
    return process;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcess(BigDecimal process) {
    this.process = process;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostApiV1LicensesCheckRequestBody postApiV1LicensesCheckRequestBody = (PostApiV1LicensesCheckRequestBody) o;
    return Objects.equals(this.key, postApiV1LicensesCheckRequestBody.key) &&
        Objects.equals(this.address, postApiV1LicensesCheckRequestBody.address) &&
        Objects.equals(this.devices, postApiV1LicensesCheckRequestBody.devices) &&
        Objects.equals(this.process, postApiV1LicensesCheckRequestBody.process);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, address, devices, process);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostApiV1LicensesCheckRequestBody {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    process: ").append(toIndentedString(process)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

