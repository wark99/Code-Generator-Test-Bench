/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AddressNodeNormSchemeCreator;
import org.openapitools.client.model.CompanyId;
import org.openapitools.client.model.Created;
import org.openapitools.client.model.Updated;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ModbusRegisterBaseScheme
 */
@JsonPropertyOrder({
  ModbusRegisterBaseScheme.JSON_PROPERTY_STATUS,
  ModbusRegisterBaseScheme.JSON_PROPERTY_CREATED,
  ModbusRegisterBaseScheme.JSON_PROPERTY_CREATOR,
  ModbusRegisterBaseScheme.JSON_PROPERTY_UPDATED,
  ModbusRegisterBaseScheme.JSON_PROPERTY_UPDATER,
  ModbusRegisterBaseScheme.JSON_PROPERTY_COMPANY_ID,
  ModbusRegisterBaseScheme.JSON_PROPERTY_ID,
  ModbusRegisterBaseScheme.JSON_PROPERTY_SLAVE_ID,
  ModbusRegisterBaseScheme.JSON_PROPERTY_TYPE,
  ModbusRegisterBaseScheme.JSON_PROPERTY_ADDRESS,
  ModbusRegisterBaseScheme.JSON_PROPERTY_COUNT,
  ModbusRegisterBaseScheme.JSON_PROPERTY_BYTE_ORDER,
  ModbusRegisterBaseScheme.JSON_PROPERTY_WORD_ORDER,
  ModbusRegisterBaseScheme.JSON_PROPERTY_DEV_ID,
  ModbusRegisterBaseScheme.JSON_PROPERTY_PARAM_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ModbusRegisterBaseScheme {
  public static final String JSON_PROPERTY_STATUS = "status";
  private Integer status;

  public static final String JSON_PROPERTY_CREATED = "created";
  private Created created;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private AddressNodeNormSchemeCreator creator;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private Updated updated;

  public static final String JSON_PROPERTY_UPDATER = "updater";
  private AddressNodeNormSchemeCreator updater;

  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private CompanyId companyId;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_SLAVE_ID = "slave_id";
  private Integer slaveId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private Integer address;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_BYTE_ORDER = "byte_order";
  private Integer byteOrder;

  public static final String JSON_PROPERTY_WORD_ORDER = "word_order";
  private Integer wordOrder;

  public static final String JSON_PROPERTY_DEV_ID = "dev_id";
  private Integer devId;

  public static final String JSON_PROPERTY_PARAM_ID = "param_id";
  private Integer paramId;

  public ModbusRegisterBaseScheme() {
  }

  public ModbusRegisterBaseScheme status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(Integer status) {
    this.status = status;
  }


  public ModbusRegisterBaseScheme created(Created created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Created getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(Created created) {
    this.created = created;
  }


  public ModbusRegisterBaseScheme creator(AddressNodeNormSchemeCreator creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreator(AddressNodeNormSchemeCreator creator) {
    this.creator = creator;
  }


  public ModbusRegisterBaseScheme updated(Updated updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Updated getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdated(Updated updated) {
    this.updated = updated;
  }


  public ModbusRegisterBaseScheme updater(AddressNodeNormSchemeCreator updater) {
    
    this.updater = updater;
    return this;
  }

   /**
   * Get updater
   * @return updater
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getUpdater() {
    return updater;
  }


  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdater(AddressNodeNormSchemeCreator updater) {
    this.updater = updater;
  }


  public ModbusRegisterBaseScheme companyId(CompanyId companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyId getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyId(CompanyId companyId) {
    this.companyId = companyId;
  }


  public ModbusRegisterBaseScheme id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * modbus register id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ModbusRegisterBaseScheme slaveId(Integer slaveId) {
    
    this.slaveId = slaveId;
    return this;
  }

   /**
   * Slave/Unit ID
   * @return slaveId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLAVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSlaveId() {
    return slaveId;
  }


  @JsonProperty(JSON_PROPERTY_SLAVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlaveId(Integer slaveId) {
    this.slaveId = slaveId;
  }


  public ModbusRegisterBaseScheme type(Integer type) {
    
    this.type = type;
    return this;
  }

   /**
   * Register type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(Integer type) {
    this.type = type;
  }


  public ModbusRegisterBaseScheme address(Integer address) {
    
    this.address = address;
    return this;
  }

   /**
   * Address
   * @return address
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(Integer address) {
    this.address = address;
  }


  public ModbusRegisterBaseScheme count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Registers count
   * @return count
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public ModbusRegisterBaseScheme byteOrder(Integer byteOrder) {
    
    this.byteOrder = byteOrder;
    return this;
  }

   /**
   * Byte order
   * @return byteOrder
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BYTE_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getByteOrder() {
    return byteOrder;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setByteOrder(Integer byteOrder) {
    this.byteOrder = byteOrder;
  }


  public ModbusRegisterBaseScheme wordOrder(Integer wordOrder) {
    
    this.wordOrder = wordOrder;
    return this;
  }

   /**
   * Word order
   * @return wordOrder
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORD_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWordOrder() {
    return wordOrder;
  }


  @JsonProperty(JSON_PROPERTY_WORD_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWordOrder(Integer wordOrder) {
    this.wordOrder = wordOrder;
  }


  public ModbusRegisterBaseScheme devId(Integer devId) {
    
    this.devId = devId;
    return this;
  }

   /**
   * Device
   * @return devId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEV_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDevId() {
    return devId;
  }


  @JsonProperty(JSON_PROPERTY_DEV_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevId(Integer devId) {
    this.devId = devId;
  }


  public ModbusRegisterBaseScheme paramId(Integer paramId) {
    
    this.paramId = paramId;
    return this;
  }

   /**
   * Parameter
   * @return paramId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getParamId() {
    return paramId;
  }


  @JsonProperty(JSON_PROPERTY_PARAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParamId(Integer paramId) {
    this.paramId = paramId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModbusRegisterBaseScheme modbusRegisterBaseScheme = (ModbusRegisterBaseScheme) o;
    return Objects.equals(this.status, modbusRegisterBaseScheme.status) &&
        Objects.equals(this.created, modbusRegisterBaseScheme.created) &&
        Objects.equals(this.creator, modbusRegisterBaseScheme.creator) &&
        Objects.equals(this.updated, modbusRegisterBaseScheme.updated) &&
        Objects.equals(this.updater, modbusRegisterBaseScheme.updater) &&
        Objects.equals(this.companyId, modbusRegisterBaseScheme.companyId) &&
        Objects.equals(this.id, modbusRegisterBaseScheme.id) &&
        Objects.equals(this.slaveId, modbusRegisterBaseScheme.slaveId) &&
        Objects.equals(this.type, modbusRegisterBaseScheme.type) &&
        Objects.equals(this.address, modbusRegisterBaseScheme.address) &&
        Objects.equals(this.count, modbusRegisterBaseScheme.count) &&
        Objects.equals(this.byteOrder, modbusRegisterBaseScheme.byteOrder) &&
        Objects.equals(this.wordOrder, modbusRegisterBaseScheme.wordOrder) &&
        Objects.equals(this.devId, modbusRegisterBaseScheme.devId) &&
        Objects.equals(this.paramId, modbusRegisterBaseScheme.paramId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, created, creator, updated, updater, companyId, id, slaveId, type, address, count, byteOrder, wordOrder, devId, paramId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModbusRegisterBaseScheme {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    slaveId: ").append(toIndentedString(slaveId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    byteOrder: ").append(toIndentedString(byteOrder)).append("\n");
    sb.append("    wordOrder: ").append(toIndentedString(wordOrder)).append("\n");
    sb.append("    devId: ").append(toIndentedString(devId)).append("\n");
    sb.append("    paramId: ").append(toIndentedString(paramId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

