/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Categorypermission
 */
@JsonPropertyOrder({
  Categorypermission.JSON_PROPERTY_CAN_CREATE,
  Categorypermission.JSON_PROPERTY_CAN_EDIT,
  Categorypermission.JSON_PROPERTY_CAN_DELETE,
  Categorypermission.JSON_PROPERTY_CAN_READ_ON_FILE,
  Categorypermission.JSON_PROPERTY_CAN_PUT_ON_FILE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Categorypermission {
  public static final String JSON_PROPERTY_CAN_CREATE = "can_create";
  private Boolean canCreate;

  public static final String JSON_PROPERTY_CAN_EDIT = "can_edit";
  private Boolean canEdit;

  public static final String JSON_PROPERTY_CAN_DELETE = "can_delete";
  private Boolean canDelete;

  public static final String JSON_PROPERTY_CAN_READ_ON_FILE = "can_read_on_file";
  private Boolean canReadOnFile;

  public static final String JSON_PROPERTY_CAN_PUT_ON_FILE = "can_put_on_file";
  private Boolean canPutOnFile;

  public Categorypermission() {
  }

  public Categorypermission canCreate(Boolean canCreate) {
    
    this.canCreate = canCreate;
    return this;
  }

   /**
   * User can create new categories
   * @return canCreate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_CREATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanCreate() {
    return canCreate;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CREATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanCreate(Boolean canCreate) {
    this.canCreate = canCreate;
  }


  public Categorypermission canEdit(Boolean canEdit) {
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * User can edit existing categories
   * @return canEdit
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_EDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanEdit() {
    return canEdit;
  }


  @JsonProperty(JSON_PROPERTY_CAN_EDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }


  public Categorypermission canDelete(Boolean canDelete) {
    
    this.canDelete = canDelete;
    return this;
  }

   /**
   * User can delete categories and remove them from files
   * @return canDelete
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_DELETE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanDelete() {
    return canDelete;
  }


  @JsonProperty(JSON_PROPERTY_CAN_DELETE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }


  public Categorypermission canReadOnFile(Boolean canReadOnFile) {
    
    this.canReadOnFile = canReadOnFile;
    return this;
  }

   /**
   * User can read the categories that are present on files
   * @return canReadOnFile
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_READ_ON_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanReadOnFile() {
    return canReadOnFile;
  }


  @JsonProperty(JSON_PROPERTY_CAN_READ_ON_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanReadOnFile(Boolean canReadOnFile) {
    this.canReadOnFile = canReadOnFile;
  }


  public Categorypermission canPutOnFile(Boolean canPutOnFile) {
    
    this.canPutOnFile = canPutOnFile;
    return this;
  }

   /**
   * User can add categories to files
   * @return canPutOnFile
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_PUT_ON_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanPutOnFile() {
    return canPutOnFile;
  }


  @JsonProperty(JSON_PROPERTY_CAN_PUT_ON_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanPutOnFile(Boolean canPutOnFile) {
    this.canPutOnFile = canPutOnFile;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Categorypermission categorypermission = (Categorypermission) o;
    return Objects.equals(this.canCreate, categorypermission.canCreate) &&
        Objects.equals(this.canEdit, categorypermission.canEdit) &&
        Objects.equals(this.canDelete, categorypermission.canDelete) &&
        Objects.equals(this.canReadOnFile, categorypermission.canReadOnFile) &&
        Objects.equals(this.canPutOnFile, categorypermission.canPutOnFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canCreate, canEdit, canDelete, canReadOnFile, canPutOnFile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Categorypermission {\n");
    sb.append("    canCreate: ").append(toIndentedString(canCreate)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canReadOnFile: ").append(toIndentedString(canReadOnFile)).append("\n");
    sb.append("    canPutOnFile: ").append(toIndentedString(canPutOnFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

