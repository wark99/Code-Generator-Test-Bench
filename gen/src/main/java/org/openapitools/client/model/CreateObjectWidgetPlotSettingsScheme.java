/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ParamName;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateObjectWidgetPlotSettingsScheme
 */
@JsonPropertyOrder({
  CreateObjectWidgetPlotSettingsScheme.JSON_PROPERTY_OBJ_ID,
  CreateObjectWidgetPlotSettingsScheme.JSON_PROPERTY_OBJ_PARAM_ID,
  CreateObjectWidgetPlotSettingsScheme.JSON_PROPERTY_PARAM_NAME,
  CreateObjectWidgetPlotSettingsScheme.JSON_PROPERTY_PLOT_TYPE_ID,
  CreateObjectWidgetPlotSettingsScheme.JSON_PROPERTY_COLOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateObjectWidgetPlotSettingsScheme {
  public static final String JSON_PROPERTY_OBJ_ID = "obj_id";
  private Integer objId;

  public static final String JSON_PROPERTY_OBJ_PARAM_ID = "obj_param_id";
  private Integer objParamId;

  public static final String JSON_PROPERTY_PARAM_NAME = "param_name";
  private ParamName paramName;

  public static final String JSON_PROPERTY_PLOT_TYPE_ID = "plot_type_id";
  private Integer plotTypeId;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color = "#2770bf";

  public CreateObjectWidgetPlotSettingsScheme() {
  }

  public CreateObjectWidgetPlotSettingsScheme objId(Integer objId) {
    
    this.objId = objId;
    return this;
  }

   /**
   * object id
   * @return objId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJ_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getObjId() {
    return objId;
  }


  @JsonProperty(JSON_PROPERTY_OBJ_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjId(Integer objId) {
    this.objId = objId;
  }


  public CreateObjectWidgetPlotSettingsScheme objParamId(Integer objParamId) {
    
    this.objParamId = objParamId;
    return this;
  }

   /**
   * object id
   * @return objParamId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJ_PARAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getObjParamId() {
    return objParamId;
  }


  @JsonProperty(JSON_PROPERTY_OBJ_PARAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjParamId(Integer objParamId) {
    this.objParamId = objParamId;
  }


  public CreateObjectWidgetPlotSettingsScheme paramName(ParamName paramName) {
    
    this.paramName = paramName;
    return this;
  }

   /**
   * Get paramName
   * @return paramName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ParamName getParamName() {
    return paramName;
  }


  @JsonProperty(JSON_PROPERTY_PARAM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParamName(ParamName paramName) {
    this.paramName = paramName;
  }


  public CreateObjectWidgetPlotSettingsScheme plotTypeId(Integer plotTypeId) {
    
    this.plotTypeId = plotTypeId;
    return this;
  }

   /**
   * plot type
   * @return plotTypeId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLOT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPlotTypeId() {
    return plotTypeId;
  }


  @JsonProperty(JSON_PROPERTY_PLOT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlotTypeId(Integer plotTypeId) {
    this.plotTypeId = plotTypeId;
  }


  public CreateObjectWidgetPlotSettingsScheme color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * plot color
   * @return color
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateObjectWidgetPlotSettingsScheme createObjectWidgetPlotSettingsScheme = (CreateObjectWidgetPlotSettingsScheme) o;
    return Objects.equals(this.objId, createObjectWidgetPlotSettingsScheme.objId) &&
        Objects.equals(this.objParamId, createObjectWidgetPlotSettingsScheme.objParamId) &&
        Objects.equals(this.paramName, createObjectWidgetPlotSettingsScheme.paramName) &&
        Objects.equals(this.plotTypeId, createObjectWidgetPlotSettingsScheme.plotTypeId) &&
        Objects.equals(this.color, createObjectWidgetPlotSettingsScheme.color);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objId, objParamId, paramName, plotTypeId, color);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateObjectWidgetPlotSettingsScheme {\n");
    sb.append("    objId: ").append(toIndentedString(objId)).append("\n");
    sb.append("    objParamId: ").append(toIndentedString(objParamId)).append("\n");
    sb.append("    paramName: ").append(toIndentedString(paramName)).append("\n");
    sb.append("    plotTypeId: ").append(toIndentedString(plotTypeId)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

