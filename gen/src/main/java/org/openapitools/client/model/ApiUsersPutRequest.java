/*
 * Youtube Music
 * Require authentication for all route except /auth and /auth/new.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiUsersPutRequest
 */
@JsonPropertyOrder({
  ApiUsersPutRequest.JSON_PROPERTY_USERNAME,
  ApiUsersPutRequest.JSON_PROPERTY_PASSWORD,
  ApiUsersPutRequest.JSON_PROPERTY_NAME,
  ApiUsersPutRequest.JSON_PROPERTY_IMAGE
})
@JsonTypeName("_api_users_put_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:03.133651353Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ApiUsersPutRequest {
  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<Object> username = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<Object> password = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public ApiUsersPutRequest() {
  }

  public ApiUsersPutRequest username(Object username) {
    this.username = JsonNullable.<Object>of(username);
    
    return this;
  }

   /**
   * From 5 to 32 characters, no white space
   * @return username
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<Object> username) {
    this.username = username;
  }

  public void setUsername(Object username) {
    this.username = JsonNullable.<Object>of(username);
  }


  public ApiUsersPutRequest password(Object password) {
    this.password = JsonNullable.<Object>of(password);
    
    return this;
  }

   /**
   * 1 number, 1 lowercase, 1 uppercase,8 to 32 character,contain 1 of [# @ $ %]
   * @return password
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<Object> password) {
    this.password = password;
  }

  public void setPassword(Object password) {
    this.password = JsonNullable.<Object>of(password);
  }


  public ApiUsersPutRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApiUsersPutRequest image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiUsersPutRequest apiUsersPutRequest = (ApiUsersPutRequest) o;
    return equalsNullable(this.username, apiUsersPutRequest.username) &&
        equalsNullable(this.password, apiUsersPutRequest.password) &&
        Objects.equals(this.name, apiUsersPutRequest.name) &&
        Objects.equals(this.image, apiUsersPutRequest.image);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(username), hashCodeNullable(password), name, image);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiUsersPutRequest {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

