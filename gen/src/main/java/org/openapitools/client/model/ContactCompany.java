/*
 * IRCI SCSE
 * API privée permettant de récupérer les fiches contacts scannées par les commerciaux de votre entreprise sur les salons.  L'authentification au service se fait par token, envoyé sur demande.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mathieu@welkom.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ContactCompanyAddress;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContactCompany
 */
@JsonPropertyOrder({
  ContactCompany.JSON_PROPERTY_NAME,
  ContactCompany.JSON_PROPERTY_ADDRESS,
  ContactCompany.JSON_PROPERTY_WORKFORCE,
  ContactCompany.JSON_PROPERTY_TYPE,
  ContactCompany.JSON_PROPERTY_PHONE
})
@JsonTypeName("Contact_company")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:25.486395919Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ContactCompany {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private ContactCompanyAddress address;

  public static final String JSON_PROPERTY_WORKFORCE = "workforce";
  private String workforce;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public ContactCompany() {
  }

  public ContactCompany name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ContactCompany address(ContactCompanyAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactCompanyAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(ContactCompanyAddress address) {
    this.address = address;
  }


  public ContactCompany workforce(String workforce) {
    
    this.workforce = workforce;
    return this;
  }

   /**
   * Get workforce
   * @return workforce
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKFORCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkforce() {
    return workforce;
  }


  @JsonProperty(JSON_PROPERTY_WORKFORCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkforce(String workforce) {
    this.workforce = workforce;
  }


  public ContactCompany type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ContactCompany phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactCompany contactCompany = (ContactCompany) o;
    return Objects.equals(this.name, contactCompany.name) &&
        Objects.equals(this.address, contactCompany.address) &&
        Objects.equals(this.workforce, contactCompany.workforce) &&
        Objects.equals(this.type, contactCompany.type) &&
        Objects.equals(this.phone, contactCompany.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, address, workforce, type, phone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactCompany {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    workforce: ").append(toIndentedString(workforce)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

