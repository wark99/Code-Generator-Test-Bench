/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SuccessResponseDataData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaginatedSuccessResponse
 */
@JsonPropertyOrder({
  PaginatedSuccessResponse.JSON_PROPERTY_RESULT,
  PaginatedSuccessResponse.JSON_PROPERTY_DATA,
  PaginatedSuccessResponse.JSON_PROPERTY_TOTAL,
  PaginatedSuccessResponse.JSON_PROPERTY_PAGES,
  PaginatedSuccessResponse.JSON_PROPERTY_PAGE,
  PaginatedSuccessResponse.JSON_PROPERTY_ITEMS_PER_PAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaginatedSuccessResponse {
  /**
   * Result of the HTTP request
   */
  public enum ResultEnum {
    SUCCESS("success"),
    
    ERROR("error"),
    
    ASYNCHRONOUS("asynchronous");

    private Object value;

    ResultEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(Object value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  private ResultEnum result = null;

  public static final String JSON_PROPERTY_DATA = "data";
  private SuccessResponseDataData data;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Object total = null;

  public static final String JSON_PROPERTY_PAGES = "pages";
  private Object pages = null;

  public static final String JSON_PROPERTY_PAGE = "page";
  private Object page = null;

  public static final String JSON_PROPERTY_ITEMS_PER_PAGE = "items_per_page";
  private Object itemsPerPage = null;

  public PaginatedSuccessResponse() {
  }

  public PaginatedSuccessResponse result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * Result of the HTTP request
   * @return result
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResultEnum getResult() {
    return result;
  }


  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public PaginatedSuccessResponse data(SuccessResponseDataData data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SuccessResponseDataData getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(SuccessResponseDataData data) {
    this.data = data;
  }


  public PaginatedSuccessResponse total(Object total) {
    
    this.total = total;
    return this;
  }

   /**
   * Total number of results
   * @return total
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(Object total) {
    this.total = total;
  }


  public PaginatedSuccessResponse pages(Object pages) {
    
    this.pages = pages;
    return this;
  }

   /**
   * Total number of pages
   * @return pages
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPages() {
    return pages;
  }


  @JsonProperty(JSON_PROPERTY_PAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPages(Object pages) {
    this.pages = pages;
  }


  public PaginatedSuccessResponse page(Object page) {
    
    this.page = page;
    return this;
  }

   /**
   * The current page
   * @return page
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPage() {
    return page;
  }


  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPage(Object page) {
    this.page = page;
  }


  public PaginatedSuccessResponse itemsPerPage(Object itemsPerPage) {
    
    this.itemsPerPage = itemsPerPage;
    return this;
  }

   /**
   * Number of results per page
   * @return itemsPerPage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEMS_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getItemsPerPage() {
    return itemsPerPage;
  }


  @JsonProperty(JSON_PROPERTY_ITEMS_PER_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setItemsPerPage(Object itemsPerPage) {
    this.itemsPerPage = itemsPerPage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaginatedSuccessResponse paginatedSuccessResponse = (PaginatedSuccessResponse) o;
    return Objects.equals(this.result, paginatedSuccessResponse.result) &&
        Objects.equals(this.data, paginatedSuccessResponse.data) &&
        Objects.equals(this.total, paginatedSuccessResponse.total) &&
        Objects.equals(this.pages, paginatedSuccessResponse.pages) &&
        Objects.equals(this.page, paginatedSuccessResponse.page) &&
        Objects.equals(this.itemsPerPage, paginatedSuccessResponse.itemsPerPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, data, total, pages, page, itemsPerPage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaginatedSuccessResponse {\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    itemsPerPage: ").append(toIndentedString(itemsPerPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

