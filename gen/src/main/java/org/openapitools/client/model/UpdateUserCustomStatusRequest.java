/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateUserCustomStatusRequest
 */
@JsonPropertyOrder({
  UpdateUserCustomStatusRequest.JSON_PROPERTY_EMOJI,
  UpdateUserCustomStatusRequest.JSON_PROPERTY_TEXT,
  UpdateUserCustomStatusRequest.JSON_PROPERTY_DURATION,
  UpdateUserCustomStatusRequest.JSON_PROPERTY_EXPIRES_AT
})
@JsonTypeName("UpdateUserCustomStatus_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UpdateUserCustomStatusRequest {
  public static final String JSON_PROPERTY_EMOJI = "emoji";
  private String emoji;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private String duration;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
  private String expiresAt;

  public UpdateUserCustomStatusRequest() {
  }

  public UpdateUserCustomStatusRequest emoji(String emoji) {
    
    this.emoji = emoji;
    return this;
  }

   /**
   * Any emoji
   * @return emoji
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMOJI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmoji() {
    return emoji;
  }


  @JsonProperty(JSON_PROPERTY_EMOJI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmoji(String emoji) {
    this.emoji = emoji;
  }


  public UpdateUserCustomStatusRequest text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Any custom status text
   * @return text
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setText(String text) {
    this.text = text;
  }


  public UpdateUserCustomStatusRequest duration(String duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Duration of custom status, can be &#x60;thirty_minutes&#x60;, &#x60;one_hour&#x60;, &#x60;four_hours&#x60;, &#x60;today&#x60;, &#x60;this_week&#x60; or &#x60;date_and_time&#x60;
   * @return duration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(String duration) {
    this.duration = duration;
  }


  public UpdateUserCustomStatusRequest expiresAt(String expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * The time at which custom status should be expired. It should be in ISO format.
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresAt(String expiresAt) {
    this.expiresAt = expiresAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateUserCustomStatusRequest updateUserCustomStatusRequest = (UpdateUserCustomStatusRequest) o;
    return Objects.equals(this.emoji, updateUserCustomStatusRequest.emoji) &&
        Objects.equals(this.text, updateUserCustomStatusRequest.text) &&
        Objects.equals(this.duration, updateUserCustomStatusRequest.duration) &&
        Objects.equals(this.expiresAt, updateUserCustomStatusRequest.expiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emoji, text, duration, expiresAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateUserCustomStatusRequest {\n");
    sb.append("    emoji: ").append(toIndentedString(emoji)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

