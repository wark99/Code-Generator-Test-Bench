/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InsufficientFundsTransaction
 */
@JsonPropertyOrder({
  InsufficientFundsTransaction.JSON_PROPERTY_AMOUNT,
  InsufficientFundsTransaction.JSON_PROPERTY_DESCRIPTION,
  InsufficientFundsTransaction.JSON_PROPERTY_MEMO,
  InsufficientFundsTransaction.JSON_PROPERTY_POSTED_DATE,
  InsufficientFundsTransaction.JSON_PROPERTY_TRANSACTION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:48:08.238993781Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InsufficientFundsTransaction {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private String memo;

  public static final String JSON_PROPERTY_POSTED_DATE = "postedDate";
  private String postedDate;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private Integer transactionId;

  public InsufficientFundsTransaction() {
  }

  public InsufficientFundsTransaction amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount of the NSF transaction
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public InsufficientFundsTransaction description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the transaction
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public InsufficientFundsTransaction memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Transaction memo
   * @return memo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemo() {
    return memo;
  }


  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemo(String memo) {
    this.memo = memo;
  }


  public InsufficientFundsTransaction postedDate(String postedDate) {
    
    this.postedDate = postedDate;
    return this;
  }

   /**
   * Posted date of the NSF transaction
   * @return postedDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPostedDate() {
    return postedDate;
  }


  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostedDate(String postedDate) {
    this.postedDate = postedDate;
  }


  public InsufficientFundsTransaction transactionId(Integer transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Finicity transaction ID
   * @return transactionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionId(Integer transactionId) {
    this.transactionId = transactionId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsufficientFundsTransaction insufficientFundsTransaction = (InsufficientFundsTransaction) o;
    return Objects.equals(this.amount, insufficientFundsTransaction.amount) &&
        Objects.equals(this.description, insufficientFundsTransaction.description) &&
        Objects.equals(this.memo, insufficientFundsTransaction.memo) &&
        Objects.equals(this.postedDate, insufficientFundsTransaction.postedDate) &&
        Objects.equals(this.transactionId, insufficientFundsTransaction.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, description, memo, postedDate, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsufficientFundsTransaction {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    postedDate: ").append(toIndentedString(postedDate)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

