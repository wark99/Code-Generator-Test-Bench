/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Provenance regarding the calling client like &#x60;clientFingerprint&#x60;, &#x60;ipAddress&#x60; and &#x60;token&#x60;.
 */
@JsonPropertyOrder({
  ThirdPartyAccessProvenance.JSON_PROPERTY_CLIENT_FINGERPRINT,
  ThirdPartyAccessProvenance.JSON_PROPERTY_IP_ADDRESS,
  ThirdPartyAccessProvenance.JSON_PROPERTY_TOKEN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:50:32.834459740Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ThirdPartyAccessProvenance {
  public static final String JSON_PROPERTY_CLIENT_FINGERPRINT = "clientFingerprint";
  private String clientFingerprint;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ipAddress";
  private String ipAddress;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public ThirdPartyAccessProvenance() {
  }

  public ThirdPartyAccessProvenance clientFingerprint(String clientFingerprint) {
    
    this.clientFingerprint = clientFingerprint;
    return this;
  }

   /**
   * Calling client identifier
   * @return clientFingerprint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientFingerprint() {
    return clientFingerprint;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientFingerprint(String clientFingerprint) {
    this.clientFingerprint = clientFingerprint;
  }


  public ThirdPartyAccessProvenance ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Calling client IP address
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public ThirdPartyAccessProvenance token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Calling client cookie
   * @return token
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThirdPartyAccessProvenance thirdPartyAccessProvenance = (ThirdPartyAccessProvenance) o;
    return Objects.equals(this.clientFingerprint, thirdPartyAccessProvenance.clientFingerprint) &&
        Objects.equals(this.ipAddress, thirdPartyAccessProvenance.ipAddress) &&
        Objects.equals(this.token, thirdPartyAccessProvenance.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientFingerprint, ipAddress, token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThirdPartyAccessProvenance {\n");
    sb.append("    clientFingerprint: ").append(toIndentedString(clientFingerprint)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

