/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.client.model.TransactionsDataFinicityTransactionsInnerCategorization;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransactionsDataFinicityTransactionsInner
 */
@JsonPropertyOrder({
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_ID,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_CUSTOMER_ID,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_STATUS,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_DESCRIPTION,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_MEMO,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_TYPE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_TRANSACTION_DATE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_POSTED_DATE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_CREATED_DATE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_FIRST_EFFECTIVE_DATE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_OPTION_EXPIRE_DATE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_CHECK_NUM,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_ESCROW_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SUSPENSE_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_INTEREST_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_PRINCIPAL_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_OPTION_STRIKE_PRICE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_UNIT_QUANTITY,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_UNIT_PRICE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_CATEGORIZATION,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_RUNNING_BALANCE_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SUB_ACCOUNT_SECURITY_TYPE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_COMMISSION_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_TICKER,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_TAXES_AMOUNT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_CURRENCY_SYMBOL,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_INCOME_TYPE,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SPLIT_DENOMINATOR,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SPLIT_NUMERATOR,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SHARES_PER_CONTRACT,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SUB_ACCOUNT_FUND,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SECURITY_ID,
  TransactionsDataFinicityTransactionsInner.JSON_PROPERTY_SECURITY_TYPE
})
@JsonTypeName("TransactionsDataFinicity_transactions_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TransactionsDataFinicityTransactionsInner {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Float amount;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private Integer customerId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private String memo;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_TRANSACTION_DATE = "transactionDate";
  private Long transactionDate;

  public static final String JSON_PROPERTY_POSTED_DATE = "postedDate";
  private Long postedDate;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private Long createdDate;

  public static final String JSON_PROPERTY_FIRST_EFFECTIVE_DATE = "firstEffectiveDate";
  private Long firstEffectiveDate;

  public static final String JSON_PROPERTY_OPTION_EXPIRE_DATE = "optionExpireDate";
  private Long optionExpireDate;

  public static final String JSON_PROPERTY_CHECK_NUM = "checkNum";
  private Integer checkNum;

  public static final String JSON_PROPERTY_ESCROW_AMOUNT = "escrowAmount";
  private Float escrowAmount;

  public static final String JSON_PROPERTY_SUSPENSE_AMOUNT = "suspenseAmount";
  private Float suspenseAmount;

  public static final String JSON_PROPERTY_INTEREST_AMOUNT = "interestAmount";
  private Float interestAmount;

  public static final String JSON_PROPERTY_PRINCIPAL_AMOUNT = "principalAmount";
  private Float principalAmount;

  public static final String JSON_PROPERTY_OPTION_STRIKE_PRICE = "optionStrikePrice";
  private Float optionStrikePrice;

  public static final String JSON_PROPERTY_UNIT_QUANTITY = "unitQuantity";
  private Integer unitQuantity;

  public static final String JSON_PROPERTY_UNIT_PRICE = "unitPrice";
  private Float unitPrice;

  public static final String JSON_PROPERTY_CATEGORIZATION = "categorization";
  private TransactionsDataFinicityTransactionsInnerCategorization categorization;

  public static final String JSON_PROPERTY_RUNNING_BALANCE_AMOUNT = "runningBalanceAmount";
  private BigDecimal runningBalanceAmount;

  public static final String JSON_PROPERTY_SUB_ACCOUNT_SECURITY_TYPE = "subAccountSecurityType";
  private String subAccountSecurityType;

  public static final String JSON_PROPERTY_COMMISSION_AMOUNT = "commissionAmount";
  private Integer commissionAmount;

  public static final String JSON_PROPERTY_TICKER = "ticker";
  private String ticker;

  public static final String JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE = "investmentTransactionType";
  private String investmentTransactionType;

  public static final String JSON_PROPERTY_TAXES_AMOUNT = "taxesAmount";
  private Float taxesAmount;

  public static final String JSON_PROPERTY_CURRENCY_SYMBOL = "currencySymbol";
  private String currencySymbol;

  public static final String JSON_PROPERTY_INCOME_TYPE = "incomeType";
  private String incomeType;

  public static final String JSON_PROPERTY_SPLIT_DENOMINATOR = "splitDenominator";
  private Float splitDenominator;

  public static final String JSON_PROPERTY_SPLIT_NUMERATOR = "splitNumerator";
  private Float splitNumerator;

  public static final String JSON_PROPERTY_SHARES_PER_CONTRACT = "sharesPerContract";
  private Float sharesPerContract;

  public static final String JSON_PROPERTY_SUB_ACCOUNT_FUND = "subAccountFund";
  private String subAccountFund;

  public static final String JSON_PROPERTY_SECURITY_ID = "securityId";
  private String securityId;

  public static final String JSON_PROPERTY_SECURITY_TYPE = "securityType";
  private String securityType;

  public TransactionsDataFinicityTransactionsInner() {
  }

  public TransactionsDataFinicityTransactionsInner id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public TransactionsDataFinicityTransactionsInner amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public TransactionsDataFinicityTransactionsInner customerId(Integer customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }


  public TransactionsDataFinicityTransactionsInner status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public TransactionsDataFinicityTransactionsInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public TransactionsDataFinicityTransactionsInner memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemo() {
    return memo;
  }


  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemo(String memo) {
    this.memo = memo;
  }


  public TransactionsDataFinicityTransactionsInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public TransactionsDataFinicityTransactionsInner transactionDate(Long transactionDate) {
    
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTransactionDate() {
    return transactionDate;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionDate(Long transactionDate) {
    this.transactionDate = transactionDate;
  }


  public TransactionsDataFinicityTransactionsInner postedDate(Long postedDate) {
    
    this.postedDate = postedDate;
    return this;
  }

   /**
   * Get postedDate
   * @return postedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPostedDate() {
    return postedDate;
  }


  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostedDate(Long postedDate) {
    this.postedDate = postedDate;
  }


  public TransactionsDataFinicityTransactionsInner createdDate(Long createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }


  public TransactionsDataFinicityTransactionsInner firstEffectiveDate(Long firstEffectiveDate) {
    
    this.firstEffectiveDate = firstEffectiveDate;
    return this;
  }

   /**
   * Get firstEffectiveDate
   * @return firstEffectiveDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstEffectiveDate() {
    return firstEffectiveDate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstEffectiveDate(Long firstEffectiveDate) {
    this.firstEffectiveDate = firstEffectiveDate;
  }


  public TransactionsDataFinicityTransactionsInner optionExpireDate(Long optionExpireDate) {
    
    this.optionExpireDate = optionExpireDate;
    return this;
  }

   /**
   * Get optionExpireDate
   * @return optionExpireDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOptionExpireDate() {
    return optionExpireDate;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionExpireDate(Long optionExpireDate) {
    this.optionExpireDate = optionExpireDate;
  }


  public TransactionsDataFinicityTransactionsInner checkNum(Integer checkNum) {
    
    this.checkNum = checkNum;
    return this;
  }

   /**
   * Get checkNum
   * @return checkNum
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCheckNum() {
    return checkNum;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckNum(Integer checkNum) {
    this.checkNum = checkNum;
  }


  public TransactionsDataFinicityTransactionsInner escrowAmount(Float escrowAmount) {
    
    this.escrowAmount = escrowAmount;
    return this;
  }

   /**
   * Get escrowAmount
   * @return escrowAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESCROW_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getEscrowAmount() {
    return escrowAmount;
  }


  @JsonProperty(JSON_PROPERTY_ESCROW_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEscrowAmount(Float escrowAmount) {
    this.escrowAmount = escrowAmount;
  }


  public TransactionsDataFinicityTransactionsInner suspenseAmount(Float suspenseAmount) {
    
    this.suspenseAmount = suspenseAmount;
    return this;
  }

   /**
   * Get suspenseAmount
   * @return suspenseAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUSPENSE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSuspenseAmount() {
    return suspenseAmount;
  }


  @JsonProperty(JSON_PROPERTY_SUSPENSE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspenseAmount(Float suspenseAmount) {
    this.suspenseAmount = suspenseAmount;
  }


  public TransactionsDataFinicityTransactionsInner interestAmount(Float interestAmount) {
    
    this.interestAmount = interestAmount;
    return this;
  }

   /**
   * Get interestAmount
   * @return interestAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getInterestAmount() {
    return interestAmount;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestAmount(Float interestAmount) {
    this.interestAmount = interestAmount;
  }


  public TransactionsDataFinicityTransactionsInner principalAmount(Float principalAmount) {
    
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * Get principalAmount
   * @return principalAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getPrincipalAmount() {
    return principalAmount;
  }


  @JsonProperty(JSON_PROPERTY_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrincipalAmount(Float principalAmount) {
    this.principalAmount = principalAmount;
  }


  public TransactionsDataFinicityTransactionsInner optionStrikePrice(Float optionStrikePrice) {
    
    this.optionStrikePrice = optionStrikePrice;
    return this;
  }

   /**
   * Get optionStrikePrice
   * @return optionStrikePrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getOptionStrikePrice() {
    return optionStrikePrice;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionStrikePrice(Float optionStrikePrice) {
    this.optionStrikePrice = optionStrikePrice;
  }


  public TransactionsDataFinicityTransactionsInner unitQuantity(Integer unitQuantity) {
    
    this.unitQuantity = unitQuantity;
    return this;
  }

   /**
   * Get unitQuantity
   * @return unitQuantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUnitQuantity() {
    return unitQuantity;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitQuantity(Integer unitQuantity) {
    this.unitQuantity = unitQuantity;
  }


  public TransactionsDataFinicityTransactionsInner unitPrice(Float unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getUnitPrice() {
    return unitPrice;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitPrice(Float unitPrice) {
    this.unitPrice = unitPrice;
  }


  public TransactionsDataFinicityTransactionsInner categorization(TransactionsDataFinicityTransactionsInnerCategorization categorization) {
    
    this.categorization = categorization;
    return this;
  }

   /**
   * Get categorization
   * @return categorization
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionsDataFinicityTransactionsInnerCategorization getCategorization() {
    return categorization;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategorization(TransactionsDataFinicityTransactionsInnerCategorization categorization) {
    this.categorization = categorization;
  }


  public TransactionsDataFinicityTransactionsInner runningBalanceAmount(BigDecimal runningBalanceAmount) {
    
    this.runningBalanceAmount = runningBalanceAmount;
    return this;
  }

   /**
   * Get runningBalanceAmount
   * @return runningBalanceAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUNNING_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRunningBalanceAmount() {
    return runningBalanceAmount;
  }


  @JsonProperty(JSON_PROPERTY_RUNNING_BALANCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunningBalanceAmount(BigDecimal runningBalanceAmount) {
    this.runningBalanceAmount = runningBalanceAmount;
  }


  public TransactionsDataFinicityTransactionsInner subAccountSecurityType(String subAccountSecurityType) {
    
    this.subAccountSecurityType = subAccountSecurityType;
    return this;
  }

   /**
   * Get subAccountSecurityType
   * @return subAccountSecurityType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubAccountSecurityType() {
    return subAccountSecurityType;
  }


  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubAccountSecurityType(String subAccountSecurityType) {
    this.subAccountSecurityType = subAccountSecurityType;
  }


  public TransactionsDataFinicityTransactionsInner commissionAmount(Integer commissionAmount) {
    
    this.commissionAmount = commissionAmount;
    return this;
  }

   /**
   * Get commissionAmount
   * @return commissionAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMISSION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCommissionAmount() {
    return commissionAmount;
  }


  @JsonProperty(JSON_PROPERTY_COMMISSION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommissionAmount(Integer commissionAmount) {
    this.commissionAmount = commissionAmount;
  }


  public TransactionsDataFinicityTransactionsInner ticker(String ticker) {
    
    this.ticker = ticker;
    return this;
  }

   /**
   * Get ticker
   * @return ticker
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TICKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTicker() {
    return ticker;
  }


  @JsonProperty(JSON_PROPERTY_TICKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTicker(String ticker) {
    this.ticker = ticker;
  }


  public TransactionsDataFinicityTransactionsInner investmentTransactionType(String investmentTransactionType) {
    
    this.investmentTransactionType = investmentTransactionType;
    return this;
  }

   /**
   * Get investmentTransactionType
   * @return investmentTransactionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvestmentTransactionType() {
    return investmentTransactionType;
  }


  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestmentTransactionType(String investmentTransactionType) {
    this.investmentTransactionType = investmentTransactionType;
  }


  public TransactionsDataFinicityTransactionsInner taxesAmount(Float taxesAmount) {
    
    this.taxesAmount = taxesAmount;
    return this;
  }

   /**
   * Get taxesAmount
   * @return taxesAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXES_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTaxesAmount() {
    return taxesAmount;
  }


  @JsonProperty(JSON_PROPERTY_TAXES_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxesAmount(Float taxesAmount) {
    this.taxesAmount = taxesAmount;
  }


  public TransactionsDataFinicityTransactionsInner currencySymbol(String currencySymbol) {
    
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencySymbol() {
    return currencySymbol;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }


  public TransactionsDataFinicityTransactionsInner incomeType(String incomeType) {
    
    this.incomeType = incomeType;
    return this;
  }

   /**
   * Get incomeType
   * @return incomeType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncomeType() {
    return incomeType;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeType(String incomeType) {
    this.incomeType = incomeType;
  }


  public TransactionsDataFinicityTransactionsInner splitDenominator(Float splitDenominator) {
    
    this.splitDenominator = splitDenominator;
    return this;
  }

   /**
   * Get splitDenominator
   * @return splitDenominator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPLIT_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSplitDenominator() {
    return splitDenominator;
  }


  @JsonProperty(JSON_PROPERTY_SPLIT_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSplitDenominator(Float splitDenominator) {
    this.splitDenominator = splitDenominator;
  }


  public TransactionsDataFinicityTransactionsInner splitNumerator(Float splitNumerator) {
    
    this.splitNumerator = splitNumerator;
    return this;
  }

   /**
   * Get splitNumerator
   * @return splitNumerator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPLIT_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSplitNumerator() {
    return splitNumerator;
  }


  @JsonProperty(JSON_PROPERTY_SPLIT_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSplitNumerator(Float splitNumerator) {
    this.splitNumerator = splitNumerator;
  }


  public TransactionsDataFinicityTransactionsInner sharesPerContract(Float sharesPerContract) {
    
    this.sharesPerContract = sharesPerContract;
    return this;
  }

   /**
   * Get sharesPerContract
   * @return sharesPerContract
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getSharesPerContract() {
    return sharesPerContract;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesPerContract(Float sharesPerContract) {
    this.sharesPerContract = sharesPerContract;
  }


  public TransactionsDataFinicityTransactionsInner subAccountFund(String subAccountFund) {
    
    this.subAccountFund = subAccountFund;
    return this;
  }

   /**
   * Get subAccountFund
   * @return subAccountFund
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubAccountFund() {
    return subAccountFund;
  }


  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubAccountFund(String subAccountFund) {
    this.subAccountFund = subAccountFund;
  }


  public TransactionsDataFinicityTransactionsInner securityId(String securityId) {
    
    this.securityId = securityId;
    return this;
  }

   /**
   * Get securityId
   * @return securityId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityId() {
    return securityId;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityId(String securityId) {
    this.securityId = securityId;
  }


  public TransactionsDataFinicityTransactionsInner securityType(String securityType) {
    
    this.securityType = securityType;
    return this;
  }

   /**
   * Get securityType
   * @return securityType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityType() {
    return securityType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityType(String securityType) {
    this.securityType = securityType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsDataFinicityTransactionsInner transactionsDataFinicityTransactionsInner = (TransactionsDataFinicityTransactionsInner) o;
    return Objects.equals(this.id, transactionsDataFinicityTransactionsInner.id) &&
        Objects.equals(this.amount, transactionsDataFinicityTransactionsInner.amount) &&
        Objects.equals(this.customerId, transactionsDataFinicityTransactionsInner.customerId) &&
        Objects.equals(this.status, transactionsDataFinicityTransactionsInner.status) &&
        Objects.equals(this.description, transactionsDataFinicityTransactionsInner.description) &&
        Objects.equals(this.memo, transactionsDataFinicityTransactionsInner.memo) &&
        Objects.equals(this.type, transactionsDataFinicityTransactionsInner.type) &&
        Objects.equals(this.transactionDate, transactionsDataFinicityTransactionsInner.transactionDate) &&
        Objects.equals(this.postedDate, transactionsDataFinicityTransactionsInner.postedDate) &&
        Objects.equals(this.createdDate, transactionsDataFinicityTransactionsInner.createdDate) &&
        Objects.equals(this.firstEffectiveDate, transactionsDataFinicityTransactionsInner.firstEffectiveDate) &&
        Objects.equals(this.optionExpireDate, transactionsDataFinicityTransactionsInner.optionExpireDate) &&
        Objects.equals(this.checkNum, transactionsDataFinicityTransactionsInner.checkNum) &&
        Objects.equals(this.escrowAmount, transactionsDataFinicityTransactionsInner.escrowAmount) &&
        Objects.equals(this.suspenseAmount, transactionsDataFinicityTransactionsInner.suspenseAmount) &&
        Objects.equals(this.interestAmount, transactionsDataFinicityTransactionsInner.interestAmount) &&
        Objects.equals(this.principalAmount, transactionsDataFinicityTransactionsInner.principalAmount) &&
        Objects.equals(this.optionStrikePrice, transactionsDataFinicityTransactionsInner.optionStrikePrice) &&
        Objects.equals(this.unitQuantity, transactionsDataFinicityTransactionsInner.unitQuantity) &&
        Objects.equals(this.unitPrice, transactionsDataFinicityTransactionsInner.unitPrice) &&
        Objects.equals(this.categorization, transactionsDataFinicityTransactionsInner.categorization) &&
        Objects.equals(this.runningBalanceAmount, transactionsDataFinicityTransactionsInner.runningBalanceAmount) &&
        Objects.equals(this.subAccountSecurityType, transactionsDataFinicityTransactionsInner.subAccountSecurityType) &&
        Objects.equals(this.commissionAmount, transactionsDataFinicityTransactionsInner.commissionAmount) &&
        Objects.equals(this.ticker, transactionsDataFinicityTransactionsInner.ticker) &&
        Objects.equals(this.investmentTransactionType, transactionsDataFinicityTransactionsInner.investmentTransactionType) &&
        Objects.equals(this.taxesAmount, transactionsDataFinicityTransactionsInner.taxesAmount) &&
        Objects.equals(this.currencySymbol, transactionsDataFinicityTransactionsInner.currencySymbol) &&
        Objects.equals(this.incomeType, transactionsDataFinicityTransactionsInner.incomeType) &&
        Objects.equals(this.splitDenominator, transactionsDataFinicityTransactionsInner.splitDenominator) &&
        Objects.equals(this.splitNumerator, transactionsDataFinicityTransactionsInner.splitNumerator) &&
        Objects.equals(this.sharesPerContract, transactionsDataFinicityTransactionsInner.sharesPerContract) &&
        Objects.equals(this.subAccountFund, transactionsDataFinicityTransactionsInner.subAccountFund) &&
        Objects.equals(this.securityId, transactionsDataFinicityTransactionsInner.securityId) &&
        Objects.equals(this.securityType, transactionsDataFinicityTransactionsInner.securityType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, customerId, status, description, memo, type, transactionDate, postedDate, createdDate, firstEffectiveDate, optionExpireDate, checkNum, escrowAmount, suspenseAmount, interestAmount, principalAmount, optionStrikePrice, unitQuantity, unitPrice, categorization, runningBalanceAmount, subAccountSecurityType, commissionAmount, ticker, investmentTransactionType, taxesAmount, currencySymbol, incomeType, splitDenominator, splitNumerator, sharesPerContract, subAccountFund, securityId, securityType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsDataFinicityTransactionsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    postedDate: ").append(toIndentedString(postedDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    firstEffectiveDate: ").append(toIndentedString(firstEffectiveDate)).append("\n");
    sb.append("    optionExpireDate: ").append(toIndentedString(optionExpireDate)).append("\n");
    sb.append("    checkNum: ").append(toIndentedString(checkNum)).append("\n");
    sb.append("    escrowAmount: ").append(toIndentedString(escrowAmount)).append("\n");
    sb.append("    suspenseAmount: ").append(toIndentedString(suspenseAmount)).append("\n");
    sb.append("    interestAmount: ").append(toIndentedString(interestAmount)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    optionStrikePrice: ").append(toIndentedString(optionStrikePrice)).append("\n");
    sb.append("    unitQuantity: ").append(toIndentedString(unitQuantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    categorization: ").append(toIndentedString(categorization)).append("\n");
    sb.append("    runningBalanceAmount: ").append(toIndentedString(runningBalanceAmount)).append("\n");
    sb.append("    subAccountSecurityType: ").append(toIndentedString(subAccountSecurityType)).append("\n");
    sb.append("    commissionAmount: ").append(toIndentedString(commissionAmount)).append("\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    investmentTransactionType: ").append(toIndentedString(investmentTransactionType)).append("\n");
    sb.append("    taxesAmount: ").append(toIndentedString(taxesAmount)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    incomeType: ").append(toIndentedString(incomeType)).append("\n");
    sb.append("    splitDenominator: ").append(toIndentedString(splitDenominator)).append("\n");
    sb.append("    splitNumerator: ").append(toIndentedString(splitNumerator)).append("\n");
    sb.append("    sharesPerContract: ").append(toIndentedString(sharesPerContract)).append("\n");
    sb.append("    subAccountFund: ").append(toIndentedString(subAccountFund)).append("\n");
    sb.append("    securityId: ").append(toIndentedString(securityId)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

