/*
 * Hudini Elevate
 * Explore reference documentation for Hudini Elevate - A collection of APIs that application developers can utilize to extend hospitality functions on their experiences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developers@hudini.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RoomTypeAllOfAddOnsInner;
import org.openapitools.client.model.RoomTypeAllOfPreferencesInner;
import org.openapitools.client.model.RoomTypeAllOfRatePlan;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RoomType
 */
@JsonPropertyOrder({
  RoomType.JSON_PROPERTY_CODE,
  RoomType.JSON_PROPERTY_NAME,
  RoomType.JSON_PROPERTY_IS_ASSIGNED,
  RoomType.JSON_PROPERTY_ROOM_NO,
  RoomType.JSON_PROPERTY_RATE_PLAN,
  RoomType.JSON_PROPERTY_ADD_ONS,
  RoomType.JSON_PROPERTY_PREFERENCES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:57.602746427Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RoomType {
  public static final String JSON_PROPERTY_CODE = "code";
  private JsonNullable<Object> code = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<Object> name = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IS_ASSIGNED = "isAssigned";
  private JsonNullable<Object> isAssigned = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ROOM_NO = "roomNo";
  private JsonNullable<Object> roomNo = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_RATE_PLAN = "ratePlan";
  private RoomTypeAllOfRatePlan ratePlan;

  public static final String JSON_PROPERTY_ADD_ONS = "addOns";
  private List<RoomTypeAllOfAddOnsInner> addOns;

  public static final String JSON_PROPERTY_PREFERENCES = "preferences";
  private List<RoomTypeAllOfPreferencesInner> preferences;

  public RoomType() {
  }

  public RoomType code(Object code) {
    this.code = JsonNullable.<Object>of(code);
    
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCode() {
        return code.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCode_JsonNullable() {
    return code;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE)
  public void setCode_JsonNullable(JsonNullable<Object> code) {
    this.code = code;
  }

  public void setCode(Object code) {
    this.code = JsonNullable.<Object>of(code);
  }


  public RoomType name(Object name) {
    this.name = JsonNullable.<Object>of(name);
    
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<Object> name) {
    this.name = name;
  }

  public void setName(Object name) {
    this.name = JsonNullable.<Object>of(name);
  }


  public RoomType isAssigned(Object isAssigned) {
    this.isAssigned = JsonNullable.<Object>of(isAssigned);
    
    return this;
  }

   /**
   * Is set to true is a room is assigned
   * @return isAssigned
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIsAssigned() {
        return isAssigned.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_ASSIGNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIsAssigned_JsonNullable() {
    return isAssigned;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_ASSIGNED)
  public void setIsAssigned_JsonNullable(JsonNullable<Object> isAssigned) {
    this.isAssigned = isAssigned;
  }

  public void setIsAssigned(Object isAssigned) {
    this.isAssigned = JsonNullable.<Object>of(isAssigned);
  }


  public RoomType roomNo(Object roomNo) {
    this.roomNo = JsonNullable.<Object>of(roomNo);
    
    return this;
  }

   /**
   * Assigned room number, when isAssigned is true
   * @return roomNo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getRoomNo() {
        return roomNo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROOM_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRoomNo_JsonNullable() {
    return roomNo;
  }
  
  @JsonProperty(JSON_PROPERTY_ROOM_NO)
  public void setRoomNo_JsonNullable(JsonNullable<Object> roomNo) {
    this.roomNo = roomNo;
  }

  public void setRoomNo(Object roomNo) {
    this.roomNo = JsonNullable.<Object>of(roomNo);
  }


  public RoomType ratePlan(RoomTypeAllOfRatePlan ratePlan) {
    
    this.ratePlan = ratePlan;
    return this;
  }

   /**
   * Get ratePlan
   * @return ratePlan
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoomTypeAllOfRatePlan getRatePlan() {
    return ratePlan;
  }


  @JsonProperty(JSON_PROPERTY_RATE_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRatePlan(RoomTypeAllOfRatePlan ratePlan) {
    this.ratePlan = ratePlan;
  }


  public RoomType addOns(List<RoomTypeAllOfAddOnsInner> addOns) {
    
    this.addOns = addOns;
    return this;
  }

  public RoomType addAddOnsItem(RoomTypeAllOfAddOnsInner addOnsItem) {
    if (this.addOns == null) {
      this.addOns = new ArrayList<>();
    }
    this.addOns.add(addOnsItem);
    return this;
  }

   /**
   * Get addOns
   * @return addOns
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_ONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RoomTypeAllOfAddOnsInner> getAddOns() {
    return addOns;
  }


  @JsonProperty(JSON_PROPERTY_ADD_ONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddOns(List<RoomTypeAllOfAddOnsInner> addOns) {
    this.addOns = addOns;
  }


  public RoomType preferences(List<RoomTypeAllOfPreferencesInner> preferences) {
    
    this.preferences = preferences;
    return this;
  }

  public RoomType addPreferencesItem(RoomTypeAllOfPreferencesInner preferencesItem) {
    if (this.preferences == null) {
      this.preferences = new ArrayList<>();
    }
    this.preferences.add(preferencesItem);
    return this;
  }

   /**
   * Get preferences
   * @return preferences
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RoomTypeAllOfPreferencesInner> getPreferences() {
    return preferences;
  }


  @JsonProperty(JSON_PROPERTY_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferences(List<RoomTypeAllOfPreferencesInner> preferences) {
    this.preferences = preferences;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoomType roomType = (RoomType) o;
    return equalsNullable(this.code, roomType.code) &&
        equalsNullable(this.name, roomType.name) &&
        equalsNullable(this.isAssigned, roomType.isAssigned) &&
        equalsNullable(this.roomNo, roomType.roomNo) &&
        Objects.equals(this.ratePlan, roomType.ratePlan) &&
        Objects.equals(this.addOns, roomType.addOns) &&
        Objects.equals(this.preferences, roomType.preferences);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(code), hashCodeNullable(name), hashCodeNullable(isAssigned), hashCodeNullable(roomNo), ratePlan, addOns, preferences);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoomType {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isAssigned: ").append(toIndentedString(isAssigned)).append("\n");
    sb.append("    roomNo: ").append(toIndentedString(roomNo)).append("\n");
    sb.append("    ratePlan: ").append(toIndentedString(ratePlan)).append("\n");
    sb.append("    addOns: ").append(toIndentedString(addOns)).append("\n");
    sb.append("    preferences: ").append(toIndentedString(preferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

