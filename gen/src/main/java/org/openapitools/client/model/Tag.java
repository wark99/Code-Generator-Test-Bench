/*
 * Beakon API
 * Access the Beakon incident feed.
 *
 * The version of the OpenAPI document: 1.0.6
 * Contact: apiteam@beakon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets Tag
 */
public enum Tag {
  
  DEADLYASSAULT("deadlyassault"),
  
  BOMB("bomb"),
  
  HOSTAGE("hostage"),
  
  ROBBERY("robbery"),
  
  SHOTS("shots"),
  
  SHOOTING("shooting"),
  
  STABBING("stabbing"),
  
  SUSPICIOUS("suspicious"),
  
  THREAT("threat"),
  
  TRESPASS("trespass"),
  
  VANDALISM("vandalism"),
  
  EXPLOSION("explosion"),
  
  HAZMAT("hazmat"),
  
  OUTDOORFIRE("outdoorfire"),
  
  RESCUE("rescue"),
  
  STRUCTUREFIRE("structurefire"),
  
  COLLISION("collision"),
  
  HAZARD("hazard"),
  
  CLOSURE("closure"),
  
  TRANSIT("transit"),
  
  LOOTING("looting"),
  
  PEACEFULASSEMBLY("peacefulassembly"),
  
  DANGEROUSASSEMBLY("dangerousassembly"),
  
  GAS("gas"),
  
  POWER("power"),
  
  UTILITYDAMAGE("utilitydamage"),
  
  DEADLY("deadly"),
  
  HATE("hate"),
  
  INJURY("injury"),
  
  MASSINJURY("massinjury"),
  
  OFFICERINVOLVED("officerinvolved"),
  
  CORRECTION("correction");

  private String value;

  Tag(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Tag fromValue(String value) {
    for (Tag b : Tag.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

