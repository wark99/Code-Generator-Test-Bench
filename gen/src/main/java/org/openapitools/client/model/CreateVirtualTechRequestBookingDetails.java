/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateVirtualTechRequestBookingDetails
 */
@JsonPropertyOrder({
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_CASE_NUMBER,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_COMPLAINT_CODE,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_COMPLAINT,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_SPECIAL_INSTRUCTION,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_SCHEDULE_DATE,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_SLOT,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_PRE_AUTHORIZATION_LIMIT,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_DEDUCTIBLE_AMOUNT,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_PLAN_CODE,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_AUTHORIZATION_NUMBER,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_SUSPECTED_RECALL,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_EXCLUSIONS,
  CreateVirtualTechRequestBookingDetails.JSON_PROPERTY_VIRTUAL_BOOKING_TYPE
})
@JsonTypeName("CreateVirtualTechRequest_bookingDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateVirtualTechRequestBookingDetails {
  public static final String JSON_PROPERTY_CASE_NUMBER = "caseNumber";
  private String caseNumber;

  public static final String JSON_PROPERTY_COMPLAINT_CODE = "complaintCode";
  private String complaintCode;

  public static final String JSON_PROPERTY_COMPLAINT = "complaint";
  private String complaint;

  public static final String JSON_PROPERTY_SPECIAL_INSTRUCTION = "specialInstruction";
  private String specialInstruction;

  public static final String JSON_PROPERTY_SCHEDULE_DATE = "scheduleDate";
  private String scheduleDate;

  public static final String JSON_PROPERTY_SLOT = "slot";
  private String slot;

  public static final String JSON_PROPERTY_PRE_AUTHORIZATION_LIMIT = "preAuthorizationLimit";
  private BigDecimal preAuthorizationLimit;

  public static final String JSON_PROPERTY_DEDUCTIBLE_AMOUNT = "deductibleAmount";
  private BigDecimal deductibleAmount;

  public static final String JSON_PROPERTY_PLAN_CODE = "planCode";
  private String planCode;

  public static final String JSON_PROPERTY_AUTHORIZATION_NUMBER = "authorizationNumber";
  private String authorizationNumber;

  public static final String JSON_PROPERTY_SUSPECTED_RECALL = "suspectedRecall";
  private Boolean suspectedRecall;

  public static final String JSON_PROPERTY_EXCLUSIONS = "exclusions";
  private String exclusions;

  /**
   * Indicates virtual booking type. I not provided, it defaults to diagnosisOnly
   */
  public enum VirtualBookingTypeEnum {
    DIAGNOSISONLY("diagnosisOnly"),
    
    DIAGNOSISANDREPAIRWALKTHROUGH("diagnosisAndRepairWalkthrough");

    private String value;

    VirtualBookingTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VirtualBookingTypeEnum fromValue(String value) {
      for (VirtualBookingTypeEnum b : VirtualBookingTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VIRTUAL_BOOKING_TYPE = "virtualBookingType";
  private VirtualBookingTypeEnum virtualBookingType;

  public CreateVirtualTechRequestBookingDetails() {
  }

  public CreateVirtualTechRequestBookingDetails caseNumber(String caseNumber) {
    
    this.caseNumber = caseNumber;
    return this;
  }

   /**
   * This is the clients unique case number
   * @return caseNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CASE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCaseNumber() {
    return caseNumber;
  }


  @JsonProperty(JSON_PROPERTY_CASE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaseNumber(String caseNumber) {
    this.caseNumber = caseNumber;
  }


  public CreateVirtualTechRequestBookingDetails complaintCode(String complaintCode) {
    
    this.complaintCode = complaintCode;
    return this;
  }

   /**
   * Standardized codes for the complaint
   * @return complaintCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLAINT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComplaintCode() {
    return complaintCode;
  }


  @JsonProperty(JSON_PROPERTY_COMPLAINT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComplaintCode(String complaintCode) {
    this.complaintCode = complaintCode;
  }


  public CreateVirtualTechRequestBookingDetails complaint(String complaint) {
    
    this.complaint = complaint;
    return this;
  }

   /**
   * Explaination of the problem
   * @return complaint
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComplaint() {
    return complaint;
  }


  @JsonProperty(JSON_PROPERTY_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComplaint(String complaint) {
    this.complaint = complaint;
  }


  public CreateVirtualTechRequestBookingDetails specialInstruction(String specialInstruction) {
    
    this.specialInstruction = specialInstruction;
    return this;
  }

   /**
   * Get specialInstruction
   * @return specialInstruction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIAL_INSTRUCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpecialInstruction() {
    return specialInstruction;
  }


  @JsonProperty(JSON_PROPERTY_SPECIAL_INSTRUCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecialInstruction(String specialInstruction) {
    this.specialInstruction = specialInstruction;
  }


  public CreateVirtualTechRequestBookingDetails scheduleDate(String scheduleDate) {
    
    this.scheduleDate = scheduleDate;
    return this;
  }

   /**
   * Date provided from availabilityVirtualTech
   * @return scheduleDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getScheduleDate() {
    return scheduleDate;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduleDate(String scheduleDate) {
    this.scheduleDate = scheduleDate;
  }


  public CreateVirtualTechRequestBookingDetails slot(String slot) {
    
    this.slot = slot;
    return this;
  }

   /**
   * Slot provided from availabilityVirtualTech
   * @return slot
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSlot() {
    return slot;
  }


  @JsonProperty(JSON_PROPERTY_SLOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlot(String slot) {
    this.slot = slot;
  }


  public CreateVirtualTechRequestBookingDetails preAuthorizationLimit(BigDecimal preAuthorizationLimit) {
    
    this.preAuthorizationLimit = preAuthorizationLimit;
    return this;
  }

   /**
   * Amount that is pre-approved for the repair (parts and labor) before requiring an estimate
   * @return preAuthorizationLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_AUTHORIZATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPreAuthorizationLimit() {
    return preAuthorizationLimit;
  }


  @JsonProperty(JSON_PROPERTY_PRE_AUTHORIZATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreAuthorizationLimit(BigDecimal preAuthorizationLimit) {
    this.preAuthorizationLimit = preAuthorizationLimit;
  }


  public CreateVirtualTechRequestBookingDetails deductibleAmount(BigDecimal deductibleAmount) {
    
    this.deductibleAmount = deductibleAmount;
    return this;
  }

   /**
   * Some cirumstances require the consumer to pay a trip/deductible/service call fee directly to the service provider. That amount would be included here.
   * @return deductibleAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDeductibleAmount() {
    return deductibleAmount;
  }


  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeductibleAmount(BigDecimal deductibleAmount) {
    this.deductibleAmount = deductibleAmount;
  }


  public CreateVirtualTechRequestBookingDetails planCode(String planCode) {
    
    this.planCode = planCode;
    return this;
  }

   /**
   * For contact work, the consumer is usually part of a specific plan that comes with certain terms and conditions
   * @return planCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanCode() {
    return planCode;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanCode(String planCode) {
    this.planCode = planCode;
  }


  public CreateVirtualTechRequestBookingDetails authorizationNumber(String authorizationNumber) {
    
    this.authorizationNumber = authorizationNumber;
    return this;
  }

   /**
   * Some clients require a special authorization number to be provided at billing time. Please provide if required.
   * @return authorizationNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorizationNumber() {
    return authorizationNumber;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationNumber(String authorizationNumber) {
    this.authorizationNumber = authorizationNumber;
  }


  public CreateVirtualTechRequestBookingDetails suspectedRecall(Boolean suspectedRecall) {
    
    this.suspectedRecall = suspectedRecall;
    return this;
  }

   /**
   * If there is concern that this dispatch should be covered under the workmanship guarantee
   * @return suspectedRecall
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUSPECTED_RECALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuspectedRecall() {
    return suspectedRecall;
  }


  @JsonProperty(JSON_PROPERTY_SUSPECTED_RECALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspectedRecall(Boolean suspectedRecall) {
    this.suspectedRecall = suspectedRecall;
  }


  public CreateVirtualTechRequestBookingDetails exclusions(String exclusions) {
    
    this.exclusions = exclusions;
    return this;
  }

   /**
   * Delimited list of things not covered by the contract
   * @return exclusions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExclusions() {
    return exclusions;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExclusions(String exclusions) {
    this.exclusions = exclusions;
  }


  public CreateVirtualTechRequestBookingDetails virtualBookingType(VirtualBookingTypeEnum virtualBookingType) {
    
    this.virtualBookingType = virtualBookingType;
    return this;
  }

   /**
   * Indicates virtual booking type. I not provided, it defaults to diagnosisOnly
   * @return virtualBookingType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_BOOKING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualBookingTypeEnum getVirtualBookingType() {
    return virtualBookingType;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_BOOKING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualBookingType(VirtualBookingTypeEnum virtualBookingType) {
    this.virtualBookingType = virtualBookingType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVirtualTechRequestBookingDetails createVirtualTechRequestBookingDetails = (CreateVirtualTechRequestBookingDetails) o;
    return Objects.equals(this.caseNumber, createVirtualTechRequestBookingDetails.caseNumber) &&
        Objects.equals(this.complaintCode, createVirtualTechRequestBookingDetails.complaintCode) &&
        Objects.equals(this.complaint, createVirtualTechRequestBookingDetails.complaint) &&
        Objects.equals(this.specialInstruction, createVirtualTechRequestBookingDetails.specialInstruction) &&
        Objects.equals(this.scheduleDate, createVirtualTechRequestBookingDetails.scheduleDate) &&
        Objects.equals(this.slot, createVirtualTechRequestBookingDetails.slot) &&
        Objects.equals(this.preAuthorizationLimit, createVirtualTechRequestBookingDetails.preAuthorizationLimit) &&
        Objects.equals(this.deductibleAmount, createVirtualTechRequestBookingDetails.deductibleAmount) &&
        Objects.equals(this.planCode, createVirtualTechRequestBookingDetails.planCode) &&
        Objects.equals(this.authorizationNumber, createVirtualTechRequestBookingDetails.authorizationNumber) &&
        Objects.equals(this.suspectedRecall, createVirtualTechRequestBookingDetails.suspectedRecall) &&
        Objects.equals(this.exclusions, createVirtualTechRequestBookingDetails.exclusions) &&
        Objects.equals(this.virtualBookingType, createVirtualTechRequestBookingDetails.virtualBookingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseNumber, complaintCode, complaint, specialInstruction, scheduleDate, slot, preAuthorizationLimit, deductibleAmount, planCode, authorizationNumber, suspectedRecall, exclusions, virtualBookingType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVirtualTechRequestBookingDetails {\n");
    sb.append("    caseNumber: ").append(toIndentedString(caseNumber)).append("\n");
    sb.append("    complaintCode: ").append(toIndentedString(complaintCode)).append("\n");
    sb.append("    complaint: ").append(toIndentedString(complaint)).append("\n");
    sb.append("    specialInstruction: ").append(toIndentedString(specialInstruction)).append("\n");
    sb.append("    scheduleDate: ").append(toIndentedString(scheduleDate)).append("\n");
    sb.append("    slot: ").append(toIndentedString(slot)).append("\n");
    sb.append("    preAuthorizationLimit: ").append(toIndentedString(preAuthorizationLimit)).append("\n");
    sb.append("    deductibleAmount: ").append(toIndentedString(deductibleAmount)).append("\n");
    sb.append("    planCode: ").append(toIndentedString(planCode)).append("\n");
    sb.append("    authorizationNumber: ").append(toIndentedString(authorizationNumber)).append("\n");
    sb.append("    suspectedRecall: ").append(toIndentedString(suspectedRecall)).append("\n");
    sb.append("    exclusions: ").append(toIndentedString(exclusions)).append("\n");
    sb.append("    virtualBookingType: ").append(toIndentedString(virtualBookingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

