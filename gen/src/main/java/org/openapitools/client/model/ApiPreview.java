/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ApiLink;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Preview
 */
@JsonPropertyOrder({
  ApiPreview.JSON_PROPERTY_AUDIO,
  ApiPreview.JSON_PROPERTY_AUDIO_RAW,
  ApiPreview.JSON_PROPERTY_VIDEO
})
@JsonTypeName("Api_Preview")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ApiPreview {
  public static final String JSON_PROPERTY_AUDIO = "audio";
  private ApiLink audio;

  public static final String JSON_PROPERTY_AUDIO_RAW = "audio_raw";
  private ApiLink audioRaw;

  public static final String JSON_PROPERTY_VIDEO = "video";
  private ApiLink video;

  public ApiPreview() {
  }

  public ApiPreview audio(ApiLink audio) {
    
    this.audio = audio;
    return this;
  }

   /**
   * Get audio
   * @return audio
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiLink getAudio() {
    return audio;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudio(ApiLink audio) {
    this.audio = audio;
  }


  public ApiPreview audioRaw(ApiLink audioRaw) {
    
    this.audioRaw = audioRaw;
    return this;
  }

   /**
   * Get audioRaw
   * @return audioRaw
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIO_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiLink getAudioRaw() {
    return audioRaw;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudioRaw(ApiLink audioRaw) {
    this.audioRaw = audioRaw;
  }


  public ApiPreview video(ApiLink video) {
    
    this.video = video;
    return this;
  }

   /**
   * Get video
   * @return video
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIDEO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiLink getVideo() {
    return video;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideo(ApiLink video) {
    this.video = video;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiPreview apiPreview = (ApiPreview) o;
    return Objects.equals(this.audio, apiPreview.audio) &&
        Objects.equals(this.audioRaw, apiPreview.audioRaw) &&
        Objects.equals(this.video, apiPreview.video);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audio, audioRaw, video);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiPreview {\n");
    sb.append("    audio: ").append(toIndentedString(audio)).append("\n");
    sb.append("    audioRaw: ").append(toIndentedString(audioRaw)).append("\n");
    sb.append("    video: ").append(toIndentedString(video)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

