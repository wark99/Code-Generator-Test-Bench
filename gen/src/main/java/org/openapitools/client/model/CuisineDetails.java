/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DishSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CuisineDetails
 */
@JsonPropertyOrder({
  CuisineDetails.JSON_PROPERTY_ID,
  CuisineDetails.JSON_PROPERTY_NAME,
  CuisineDetails.JSON_PROPERTY_DESCRIPTION,
  CuisineDetails.JSON_PROPERTY_IMAGE,
  CuisineDetails.JSON_PROPERTY_IS_SELF_FOLLOWING,
  CuisineDetails.JSON_PROPERTY_DISHES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:24.039139870Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CuisineDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private URI image;

  public static final String JSON_PROPERTY_IS_SELF_FOLLOWING = "isSelfFollowing";
  private Boolean isSelfFollowing;

  public static final String JSON_PROPERTY_DISHES = "dishes";
  private List<DishSummary> dishes;

  public CuisineDetails() {
  }

  public CuisineDetails id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public CuisineDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CuisineDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CuisineDetails image(URI image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImage(URI image) {
    this.image = image;
  }


  public CuisineDetails isSelfFollowing(Boolean isSelfFollowing) {
    
    this.isSelfFollowing = isSelfFollowing;
    return this;
  }

   /**
   * Get isSelfFollowing
   * @return isSelfFollowing
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SELF_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSelfFollowing() {
    return isSelfFollowing;
  }


  @JsonProperty(JSON_PROPERTY_IS_SELF_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSelfFollowing(Boolean isSelfFollowing) {
    this.isSelfFollowing = isSelfFollowing;
  }


  public CuisineDetails dishes(List<DishSummary> dishes) {
    
    this.dishes = dishes;
    return this;
  }

  public CuisineDetails addDishesItem(DishSummary dishesItem) {
    if (this.dishes == null) {
      this.dishes = new ArrayList<>();
    }
    this.dishes.add(dishesItem);
    return this;
  }

   /**
   * Get dishes
   * @return dishes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DishSummary> getDishes() {
    return dishes;
  }


  @JsonProperty(JSON_PROPERTY_DISHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDishes(List<DishSummary> dishes) {
    this.dishes = dishes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CuisineDetails cuisineDetails = (CuisineDetails) o;
    return Objects.equals(this.id, cuisineDetails.id) &&
        Objects.equals(this.name, cuisineDetails.name) &&
        Objects.equals(this.description, cuisineDetails.description) &&
        Objects.equals(this.image, cuisineDetails.image) &&
        Objects.equals(this.isSelfFollowing, cuisineDetails.isSelfFollowing) &&
        Objects.equals(this.dishes, cuisineDetails.dishes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, image, isSelfFollowing, dishes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CuisineDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    isSelfFollowing: ").append(toIndentedString(isSelfFollowing)).append("\n");
    sb.append("    dishes: ").append(toIndentedString(dishes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

