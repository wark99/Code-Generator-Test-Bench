/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OriginalInputs
 */
@JsonPropertyOrder({
  OriginalInputs.JSON_PROPERTY_EDIT_CODE,
  OriginalInputs.JSON_PROPERTY_EDITED_ELEMENT,
  OriginalInputs.JSON_PROPERTY_RETURN_EDITS,
  OriginalInputs.JSON_PROPERTY_TEXT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class OriginalInputs {
  public static final String JSON_PROPERTY_EDIT_CODE = "editCode";
  private String editCode;

  public static final String JSON_PROPERTY_EDITED_ELEMENT = "editedElement";
  private String editedElement;

  public static final String JSON_PROPERTY_RETURN_EDITS = "returnEdits";
  private Boolean returnEdits;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public OriginalInputs() {
  }

  public OriginalInputs editCode(String editCode) {
    
    this.editCode = editCode;
    return this;
  }

   /**
   * Get editCode
   * @return editCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EDIT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditCode() {
    return editCode;
  }


  @JsonProperty(JSON_PROPERTY_EDIT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditCode(String editCode) {
    this.editCode = editCode;
  }


  public OriginalInputs editedElement(String editedElement) {
    
    this.editedElement = editedElement;
    return this;
  }

   /**
   * Get editedElement
   * @return editedElement
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EDITED_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditedElement() {
    return editedElement;
  }


  @JsonProperty(JSON_PROPERTY_EDITED_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditedElement(String editedElement) {
    this.editedElement = editedElement;
  }


  public OriginalInputs returnEdits(Boolean returnEdits) {
    
    this.returnEdits = returnEdits;
    return this;
  }

   /**
   * Get returnEdits
   * @return returnEdits
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_EDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReturnEdits() {
    return returnEdits;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_EDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnEdits(Boolean returnEdits) {
    this.returnEdits = returnEdits;
  }


  public OriginalInputs text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginalInputs originalInputs = (OriginalInputs) o;
    return Objects.equals(this.editCode, originalInputs.editCode) &&
        Objects.equals(this.editedElement, originalInputs.editedElement) &&
        Objects.equals(this.returnEdits, originalInputs.returnEdits) &&
        Objects.equals(this.text, originalInputs.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(editCode, editedElement, returnEdits, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginalInputs {\n");
    sb.append("    editCode: ").append(toIndentedString(editCode)).append("\n");
    sb.append("    editedElement: ").append(toIndentedString(editedElement)).append("\n");
    sb.append("    returnEdits: ").append(toIndentedString(returnEdits)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

