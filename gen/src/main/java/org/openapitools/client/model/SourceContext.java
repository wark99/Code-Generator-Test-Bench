/*
 * Standard Message Envelope
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SourceContext
 */
@JsonPropertyOrder({
  SourceContext.JSON_PROPERTY_SOURCE_ID,
  SourceContext.JSON_PROPERTY_APPLICATION_ID,
  SourceContext.JSON_PROPERTY_TRANSACTION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:27.354224883Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SourceContext {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
  private String applicationId;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public SourceContext() {
  }

  public SourceContext sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Meta information providing context about the client of this message. A client context represents the absolute originator of a distributed business transaction (e.g. sales channel in context of payment services transaction processing.)
   * @return sourceId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public SourceContext applicationId(String applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Provides the information about the application that created the message.
   * @return applicationId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApplicationId() {
    return applicationId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public SourceContext transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Unique transaction identifier generated and provided by the absolute client. If the absolute client did not provide a transaction Id then the first intermediate processing node might produce on client&#39;s behalf. Various uses include - track, correlate, idempotency and troubleshoot transaction instances.
   * @return transactionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceContext sourceContext = (SourceContext) o;
    return Objects.equals(this.sourceId, sourceContext.sourceId) &&
        Objects.equals(this.applicationId, sourceContext.applicationId) &&
        Objects.equals(this.transactionId, sourceContext.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, applicationId, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceContext {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

