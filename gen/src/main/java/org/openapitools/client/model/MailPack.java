/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Pack
 */
@JsonPropertyOrder({
  MailPack.JSON_PROPERTY_ID,
  MailPack.JSON_PROPERTY_DESCRIPTION,
  MailPack.JSON_PROPERTY_IS_STARTER,
  MailPack.JSON_PROPERTY_HAS_LIST_TOOL,
  MailPack.JSON_PROPERTY_HAS_NEWSLETTER_TOOL,
  MailPack.JSON_PROPERTY_ADDITIONAL_PAID_EMAIL,
  MailPack.JSON_PROPERTY_FREE_ADDITIONAL_EMAIL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MailPack {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_IS_STARTER = "is_starter";
  private Boolean isStarter;

  public static final String JSON_PROPERTY_HAS_LIST_TOOL = "has_list_tool";
  private Boolean hasListTool;

  public static final String JSON_PROPERTY_HAS_NEWSLETTER_TOOL = "has_newsletter_tool";
  private Boolean hasNewsletterTool;

  public static final String JSON_PROPERTY_ADDITIONAL_PAID_EMAIL = "additional_paid_email";
  private Integer additionalPaidEmail;

  public static final String JSON_PROPERTY_FREE_ADDITIONAL_EMAIL = "free_additional_email";
  private Integer freeAdditionalEmail;

  public MailPack() {
  }

  public MailPack id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Ressource identifier  
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public MailPack description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description  
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public MailPack isStarter(Boolean isStarter) {
    
    this.isStarter = isStarter;
    return this;
  }

   /**
   * Is starter  
   * @return isStarter
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STARTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsStarter() {
    return isStarter;
  }


  @JsonProperty(JSON_PROPERTY_IS_STARTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStarter(Boolean isStarter) {
    this.isStarter = isStarter;
  }


  public MailPack hasListTool(Boolean hasListTool) {
    
    this.hasListTool = hasListTool;
    return this;
  }

   /**
   * Has list tool  
   * @return hasListTool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_LIST_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasListTool() {
    return hasListTool;
  }


  @JsonProperty(JSON_PROPERTY_HAS_LIST_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasListTool(Boolean hasListTool) {
    this.hasListTool = hasListTool;
  }


  public MailPack hasNewsletterTool(Boolean hasNewsletterTool) {
    
    this.hasNewsletterTool = hasNewsletterTool;
    return this;
  }

   /**
   * Has newsletter tool  
   * @return hasNewsletterTool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_NEWSLETTER_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasNewsletterTool() {
    return hasNewsletterTool;
  }


  @JsonProperty(JSON_PROPERTY_HAS_NEWSLETTER_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasNewsletterTool(Boolean hasNewsletterTool) {
    this.hasNewsletterTool = hasNewsletterTool;
  }


  public MailPack additionalPaidEmail(Integer additionalPaidEmail) {
    
    this.additionalPaidEmail = additionalPaidEmail;
    return this;
  }

   /**
   * Additional paid email  
   * @return additionalPaidEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PAID_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAdditionalPaidEmail() {
    return additionalPaidEmail;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PAID_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalPaidEmail(Integer additionalPaidEmail) {
    this.additionalPaidEmail = additionalPaidEmail;
  }


  public MailPack freeAdditionalEmail(Integer freeAdditionalEmail) {
    
    this.freeAdditionalEmail = freeAdditionalEmail;
    return this;
  }

   /**
   * Free additional email  
   * @return freeAdditionalEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREE_ADDITIONAL_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFreeAdditionalEmail() {
    return freeAdditionalEmail;
  }


  @JsonProperty(JSON_PROPERTY_FREE_ADDITIONAL_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreeAdditionalEmail(Integer freeAdditionalEmail) {
    this.freeAdditionalEmail = freeAdditionalEmail;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailPack mailPack = (MailPack) o;
    return Objects.equals(this.id, mailPack.id) &&
        Objects.equals(this.description, mailPack.description) &&
        Objects.equals(this.isStarter, mailPack.isStarter) &&
        Objects.equals(this.hasListTool, mailPack.hasListTool) &&
        Objects.equals(this.hasNewsletterTool, mailPack.hasNewsletterTool) &&
        Objects.equals(this.additionalPaidEmail, mailPack.additionalPaidEmail) &&
        Objects.equals(this.freeAdditionalEmail, mailPack.freeAdditionalEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, isStarter, hasListTool, hasNewsletterTool, additionalPaidEmail, freeAdditionalEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailPack {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isStarter: ").append(toIndentedString(isStarter)).append("\n");
    sb.append("    hasListTool: ").append(toIndentedString(hasListTool)).append("\n");
    sb.append("    hasNewsletterTool: ").append(toIndentedString(hasNewsletterTool)).append("\n");
    sb.append("    additionalPaidEmail: ").append(toIndentedString(additionalPaidEmail)).append("\n");
    sb.append("    freeAdditionalEmail: ").append(toIndentedString(freeAdditionalEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

