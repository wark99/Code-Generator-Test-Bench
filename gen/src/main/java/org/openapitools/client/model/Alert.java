/*
 * Beakon API
 * Access the Beakon incident feed.
 *
 * The version of the OpenAPI document: 1.0.6
 * Contact: apiteam@beakon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Tag;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Alert
 */
@JsonPropertyOrder({
  Alert.JSON_PROPERTY_ID,
  Alert.JSON_PROPERTY_TAGS,
  Alert.JSON_PROPERTY_DATE_CREATED,
  Alert.JSON_PROPERTY_LOCATION,
  Alert.JSON_PROPERTY_GEOMETRY,
  Alert.JSON_PROPERTY_TITLE,
  Alert.JSON_PROPERTY_DESCRIPTION,
  Alert.JSON_PROPERTY_CERTAINTY,
  Alert.JSON_PROPERTY_URGENCY,
  Alert.JSON_PROPERTY_SEVERITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:49.334490151Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Alert {
  public static final String JSON_PROPERTY_ID = "_id";
  private UUID id;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<Tag> tags;

  public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
  private LocalDate dateCreated;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private String location;

  public static final String JSON_PROPERTY_GEOMETRY = "geometry";
  private JsonNullable<Object> geometry = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * Gets or Sets certainty
   */
  public enum CertaintyEnum {
    REPORTED("reported"),
    
    RESPONDED("responded"),
    
    DEBUNKED("debunked");

    private String value;

    CertaintyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CertaintyEnum fromValue(String value) {
      for (CertaintyEnum b : CertaintyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CERTAINTY = "certainty";
  private CertaintyEnum certainty;

  /**
   * Gets or Sets urgency
   */
  public enum UrgencyEnum {
    ACTIVE("active");

    private String value;

    UrgencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UrgencyEnum fromValue(String value) {
      for (UrgencyEnum b : UrgencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_URGENCY = "urgency";
  private UrgencyEnum urgency;

  /**
   * Gets or Sets severity
   */
  public enum SeverityEnum {
    LOW("low"),
    
    MEDIUM("medium"),
    
    HIGH("high");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEVERITY = "severity";
  private SeverityEnum severity;

  public Alert() {
  }

  public Alert id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * UUID
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public Alert tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Alert addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Tag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public Alert dateCreated(LocalDate dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDateCreated() {
    return dateCreated;
  }


  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateCreated(LocalDate dateCreated) {
    this.dateCreated = dateCreated;
  }


  public Alert location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(String location) {
    this.location = location;
  }


  public Alert geometry(Object geometry) {
    this.geometry = JsonNullable.<Object>of(geometry);
    
    return this;
  }

   /**
   * Get geometry
   * @return geometry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getGeometry() {
        return geometry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GEOMETRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getGeometry_JsonNullable() {
    return geometry;
  }
  
  @JsonProperty(JSON_PROPERTY_GEOMETRY)
  public void setGeometry_JsonNullable(JsonNullable<Object> geometry) {
    this.geometry = geometry;
  }

  public void setGeometry(Object geometry) {
    this.geometry = JsonNullable.<Object>of(geometry);
  }


  public Alert title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Alert description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Alert certainty(CertaintyEnum certainty) {
    
    this.certainty = certainty;
    return this;
  }

   /**
   * Get certainty
   * @return certainty
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERTAINTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CertaintyEnum getCertainty() {
    return certainty;
  }


  @JsonProperty(JSON_PROPERTY_CERTAINTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertainty(CertaintyEnum certainty) {
    this.certainty = certainty;
  }


  public Alert urgency(UrgencyEnum urgency) {
    
    this.urgency = urgency;
    return this;
  }

   /**
   * Get urgency
   * @return urgency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URGENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UrgencyEnum getUrgency() {
    return urgency;
  }


  @JsonProperty(JSON_PROPERTY_URGENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrgency(UrgencyEnum urgency) {
    this.urgency = urgency;
  }


  public Alert severity(SeverityEnum severity) {
    
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SeverityEnum getSeverity() {
    return severity;
  }


  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Alert alert = (Alert) o;
    return Objects.equals(this.id, alert.id) &&
        Objects.equals(this.tags, alert.tags) &&
        Objects.equals(this.dateCreated, alert.dateCreated) &&
        Objects.equals(this.location, alert.location) &&
        equalsNullable(this.geometry, alert.geometry) &&
        Objects.equals(this.title, alert.title) &&
        Objects.equals(this.description, alert.description) &&
        Objects.equals(this.certainty, alert.certainty) &&
        Objects.equals(this.urgency, alert.urgency) &&
        Objects.equals(this.severity, alert.severity);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tags, dateCreated, location, hashCodeNullable(geometry), title, description, certainty, urgency, severity);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Alert {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    certainty: ").append(toIndentedString(certainty)).append("\n");
    sb.append("    urgency: ").append(toIndentedString(urgency)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

