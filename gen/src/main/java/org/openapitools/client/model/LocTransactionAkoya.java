/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FiAttributeAkoya;
import org.openapitools.client.model.HateosLinkAkoya;
import org.openapitools.client.model.LineItemAkoya;
import org.openapitools.client.model.PaymentDetailAkoya;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LocTransactionAkoya
 */
@JsonPropertyOrder({
  LocTransactionAkoya.JSON_PROPERTY_ACCOUNT_ID,
  LocTransactionAkoya.JSON_PROPERTY_AMOUNT,
  LocTransactionAkoya.JSON_PROPERTY_CATEGORY,
  LocTransactionAkoya.JSON_PROPERTY_DEBIT_CREDIT_MEMO,
  LocTransactionAkoya.JSON_PROPERTY_DESCRIPTION,
  LocTransactionAkoya.JSON_PROPERTY_IMAGE_IDS,
  LocTransactionAkoya.JSON_PROPERTY_FI_ATTRIBUTES,
  LocTransactionAkoya.JSON_PROPERTY_FOREIGN_AMOUNT,
  LocTransactionAkoya.JSON_PROPERTY_FOREIGN_CURRENCY,
  LocTransactionAkoya.JSON_PROPERTY_LINE_ITEM,
  LocTransactionAkoya.JSON_PROPERTY_LINKS,
  LocTransactionAkoya.JSON_PROPERTY_MEMO,
  LocTransactionAkoya.JSON_PROPERTY_POSTED_TIMESTAMP,
  LocTransactionAkoya.JSON_PROPERTY_REFERENCE,
  LocTransactionAkoya.JSON_PROPERTY_REFERENCE_TRANSACTION_ID,
  LocTransactionAkoya.JSON_PROPERTY_STATUS,
  LocTransactionAkoya.JSON_PROPERTY_SUB_CATEGORY,
  LocTransactionAkoya.JSON_PROPERTY_TRANSACTION_ID,
  LocTransactionAkoya.JSON_PROPERTY_TRANSACTION_TIMESTAMP,
  LocTransactionAkoya.JSON_PROPERTY_PAYMENT_DETAILS,
  LocTransactionAkoya.JSON_PROPERTY_TRANSACTION_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class LocTransactionAkoya {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_DEBIT_CREDIT_MEMO = "debitCreditMemo";
  private String debitCreditMemo;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_IMAGE_IDS = "imageIds";
  private List<String> imageIds;

  public static final String JSON_PROPERTY_FI_ATTRIBUTES = "fiAttributes";
  private List<FiAttributeAkoya> fiAttributes;

  public static final String JSON_PROPERTY_FOREIGN_AMOUNT = "foreignAmount";
  private BigDecimal foreignAmount;

  public static final String JSON_PROPERTY_FOREIGN_CURRENCY = "foreignCurrency";
  private String foreignCurrency;

  public static final String JSON_PROPERTY_LINE_ITEM = "lineItem";
  private List<LineItemAkoya> lineItem;

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<HateosLinkAkoya> links;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private String memo;

  public static final String JSON_PROPERTY_POSTED_TIMESTAMP = "postedTimestamp";
  private String postedTimestamp;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public static final String JSON_PROPERTY_REFERENCE_TRANSACTION_ID = "referenceTransactionId";
  private String referenceTransactionId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_SUB_CATEGORY = "subCategory";
  private String subCategory;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_TRANSACTION_TIMESTAMP = "transactionTimestamp";
  private String transactionTimestamp;

  public static final String JSON_PROPERTY_PAYMENT_DETAILS = "paymentDetails";
  private PaymentDetailAkoya paymentDetails;

  public static final String JSON_PROPERTY_TRANSACTION_TYPE = "transactionType";
  private String transactionType;

  public LocTransactionAkoya() {
  }

  public LocTransactionAkoya accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public LocTransactionAkoya amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public LocTransactionAkoya category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public LocTransactionAkoya debitCreditMemo(String debitCreditMemo) {
    
    this.debitCreditMemo = debitCreditMemo;
    return this;
  }

   /**
   * Get debitCreditMemo
   * @return debitCreditMemo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBIT_CREDIT_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebitCreditMemo() {
    return debitCreditMemo;
  }


  @JsonProperty(JSON_PROPERTY_DEBIT_CREDIT_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebitCreditMemo(String debitCreditMemo) {
    this.debitCreditMemo = debitCreditMemo;
  }


  public LocTransactionAkoya description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public LocTransactionAkoya imageIds(List<String> imageIds) {
    
    this.imageIds = imageIds;
    return this;
  }

  public LocTransactionAkoya addImageIdsItem(String imageIdsItem) {
    if (this.imageIds == null) {
      this.imageIds = new ArrayList<>();
    }
    this.imageIds.add(imageIdsItem);
    return this;
  }

   /**
   * Get imageIds
   * @return imageIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getImageIds() {
    return imageIds;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageIds(List<String> imageIds) {
    this.imageIds = imageIds;
  }


  public LocTransactionAkoya fiAttributes(List<FiAttributeAkoya> fiAttributes) {
    
    this.fiAttributes = fiAttributes;
    return this;
  }

  public LocTransactionAkoya addFiAttributesItem(FiAttributeAkoya fiAttributesItem) {
    if (this.fiAttributes == null) {
      this.fiAttributes = new ArrayList<>();
    }
    this.fiAttributes.add(fiAttributesItem);
    return this;
  }

   /**
   * Get fiAttributes
   * @return fiAttributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FI_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FiAttributeAkoya> getFiAttributes() {
    return fiAttributes;
  }


  @JsonProperty(JSON_PROPERTY_FI_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiAttributes(List<FiAttributeAkoya> fiAttributes) {
    this.fiAttributes = fiAttributes;
  }


  public LocTransactionAkoya foreignAmount(BigDecimal foreignAmount) {
    
    this.foreignAmount = foreignAmount;
    return this;
  }

   /**
   * Get foreignAmount
   * @return foreignAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getForeignAmount() {
    return foreignAmount;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignAmount(BigDecimal foreignAmount) {
    this.foreignAmount = foreignAmount;
  }


  public LocTransactionAkoya foreignCurrency(String foreignCurrency) {
    
    this.foreignCurrency = foreignCurrency;
    return this;
  }

   /**
   * Get foreignCurrency
   * @return foreignCurrency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignCurrency() {
    return foreignCurrency;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignCurrency(String foreignCurrency) {
    this.foreignCurrency = foreignCurrency;
  }


  public LocTransactionAkoya lineItem(List<LineItemAkoya> lineItem) {
    
    this.lineItem = lineItem;
    return this;
  }

  public LocTransactionAkoya addLineItemItem(LineItemAkoya lineItemItem) {
    if (this.lineItem == null) {
      this.lineItem = new ArrayList<>();
    }
    this.lineItem.add(lineItemItem);
    return this;
  }

   /**
   * Get lineItem
   * @return lineItem
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINE_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LineItemAkoya> getLineItem() {
    return lineItem;
  }


  @JsonProperty(JSON_PROPERTY_LINE_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineItem(List<LineItemAkoya> lineItem) {
    this.lineItem = lineItem;
  }


  public LocTransactionAkoya links(List<HateosLinkAkoya> links) {
    
    this.links = links;
    return this;
  }

  public LocTransactionAkoya addLinksItem(HateosLinkAkoya linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<HateosLinkAkoya> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(List<HateosLinkAkoya> links) {
    this.links = links;
  }


  public LocTransactionAkoya memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemo() {
    return memo;
  }


  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemo(String memo) {
    this.memo = memo;
  }


  public LocTransactionAkoya postedTimestamp(String postedTimestamp) {
    
    this.postedTimestamp = postedTimestamp;
    return this;
  }

   /**
   * Get postedTimestamp
   * @return postedTimestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostedTimestamp() {
    return postedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_POSTED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostedTimestamp(String postedTimestamp) {
    this.postedTimestamp = postedTimestamp;
  }


  public LocTransactionAkoya reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  public LocTransactionAkoya referenceTransactionId(String referenceTransactionId) {
    
    this.referenceTransactionId = referenceTransactionId;
    return this;
  }

   /**
   * Get referenceTransactionId
   * @return referenceTransactionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceTransactionId() {
    return referenceTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceTransactionId(String referenceTransactionId) {
    this.referenceTransactionId = referenceTransactionId;
  }


  public LocTransactionAkoya status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public LocTransactionAkoya subCategory(String subCategory) {
    
    this.subCategory = subCategory;
    return this;
  }

   /**
   * Get subCategory
   * @return subCategory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubCategory() {
    return subCategory;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCategory(String subCategory) {
    this.subCategory = subCategory;
  }


  public LocTransactionAkoya transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public LocTransactionAkoya transactionTimestamp(String transactionTimestamp) {
    
    this.transactionTimestamp = transactionTimestamp;
    return this;
  }

   /**
   * Get transactionTimestamp
   * @return transactionTimestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionTimestamp() {
    return transactionTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionTimestamp(String transactionTimestamp) {
    this.transactionTimestamp = transactionTimestamp;
  }


  public LocTransactionAkoya paymentDetails(PaymentDetailAkoya paymentDetails) {
    
    this.paymentDetails = paymentDetails;
    return this;
  }

   /**
   * Get paymentDetails
   * @return paymentDetails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentDetailAkoya getPaymentDetails() {
    return paymentDetails;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDetails(PaymentDetailAkoya paymentDetails) {
    this.paymentDetails = paymentDetails;
  }


  public LocTransactionAkoya transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionType() {
    return transactionType;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocTransactionAkoya locTransactionAkoya = (LocTransactionAkoya) o;
    return Objects.equals(this.accountId, locTransactionAkoya.accountId) &&
        Objects.equals(this.amount, locTransactionAkoya.amount) &&
        Objects.equals(this.category, locTransactionAkoya.category) &&
        Objects.equals(this.debitCreditMemo, locTransactionAkoya.debitCreditMemo) &&
        Objects.equals(this.description, locTransactionAkoya.description) &&
        Objects.equals(this.imageIds, locTransactionAkoya.imageIds) &&
        Objects.equals(this.fiAttributes, locTransactionAkoya.fiAttributes) &&
        Objects.equals(this.foreignAmount, locTransactionAkoya.foreignAmount) &&
        Objects.equals(this.foreignCurrency, locTransactionAkoya.foreignCurrency) &&
        Objects.equals(this.lineItem, locTransactionAkoya.lineItem) &&
        Objects.equals(this.links, locTransactionAkoya.links) &&
        Objects.equals(this.memo, locTransactionAkoya.memo) &&
        Objects.equals(this.postedTimestamp, locTransactionAkoya.postedTimestamp) &&
        Objects.equals(this.reference, locTransactionAkoya.reference) &&
        Objects.equals(this.referenceTransactionId, locTransactionAkoya.referenceTransactionId) &&
        Objects.equals(this.status, locTransactionAkoya.status) &&
        Objects.equals(this.subCategory, locTransactionAkoya.subCategory) &&
        Objects.equals(this.transactionId, locTransactionAkoya.transactionId) &&
        Objects.equals(this.transactionTimestamp, locTransactionAkoya.transactionTimestamp) &&
        Objects.equals(this.paymentDetails, locTransactionAkoya.paymentDetails) &&
        Objects.equals(this.transactionType, locTransactionAkoya.transactionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, amount, category, debitCreditMemo, description, imageIds, fiAttributes, foreignAmount, foreignCurrency, lineItem, links, memo, postedTimestamp, reference, referenceTransactionId, status, subCategory, transactionId, transactionTimestamp, paymentDetails, transactionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocTransactionAkoya {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    debitCreditMemo: ").append(toIndentedString(debitCreditMemo)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageIds: ").append(toIndentedString(imageIds)).append("\n");
    sb.append("    fiAttributes: ").append(toIndentedString(fiAttributes)).append("\n");
    sb.append("    foreignAmount: ").append(toIndentedString(foreignAmount)).append("\n");
    sb.append("    foreignCurrency: ").append(toIndentedString(foreignCurrency)).append("\n");
    sb.append("    lineItem: ").append(toIndentedString(lineItem)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    postedTimestamp: ").append(toIndentedString(postedTimestamp)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    referenceTransactionId: ").append(toIndentedString(referenceTransactionId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subCategory: ").append(toIndentedString(subCategory)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    transactionTimestamp: ").append(toIndentedString(transactionTimestamp)).append("\n");
    sb.append("    paymentDetails: ").append(toIndentedString(paymentDetails)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

