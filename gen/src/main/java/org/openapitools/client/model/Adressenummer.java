/*
 * Formuesgrunnlag for eiendomsskatt API
 * Tjenesten leverer fastsatte formuesgrunnlag for fast eiendom som grunnlag for eiendomsskatt, og inneholder informasjon om eiendomsopplysninger, adresseopplysninger og eiendomsrelasjoner for fast eiendom, samt beregnede markedsverdier med tilhørende grunnlag for boliger
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Et nummer og en eventuell bokstav som entydig identifiserer eiendommer, anlegg, bygninger eller innganger til bygninger innenfor en adresserbar gate, veg, sti, plass eller område (&lt;a href&#x3D;&#39;http://begrepskatalog/begrep/20b2e0fa-9fe1-11e5-a9f8-e4115b280940&#39;&gt;Begrepsreferanse&lt;/a&gt;)
 */
@JsonPropertyOrder({
  Adressenummer.JSON_PROPERTY_HUSNUMMER,
  Adressenummer.JSON_PROPERTY_HUSBOKSTAV
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:25:17.794277948Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Adressenummer {
  public static final String JSON_PROPERTY_HUSNUMMER = "husnummer";
  private Long husnummer;

  public static final String JSON_PROPERTY_HUSBOKSTAV = "husbokstav";
  private String husbokstav;

  public Adressenummer() {
  }

  public Adressenummer husnummer(Long husnummer) {
    
    this.husnummer = husnummer;
    return this;
  }

   /**
   * hele tall, dvs. hele tall i mengden {..., -2, -1, 0, 1, 2, ...} (&lt;a href&#x3D;&#39;https://data.skatteetaten.no/web/datakatalog/begrep/20b52af0-9fe1-11e5-a9f8-e4115b280940&#39;&gt;Begrepsreferanse&lt;/a&gt;)
   * @return husnummer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HUSNUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getHusnummer() {
    return husnummer;
  }


  @JsonProperty(JSON_PROPERTY_HUSNUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHusnummer(Long husnummer) {
    this.husnummer = husnummer;
  }


  public Adressenummer husbokstav(String husbokstav) {
    
    this.husbokstav = husbokstav;
    return this;
  }

   /**
   * vilkårlig lang sekvens av tegn inkludert aksenter og spesielle tegn fra standardiserte tegnsett (&lt;a href&#x3D;&#39;https://data.skatteetaten.no/web/datakatalog/begrep/20b52af3-9fe1-11e5-a9f8-e4115b280940&#39;&gt;Begrepsreferanse&lt;/a&gt;)
   * @return husbokstav
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HUSBOKSTAV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHusbokstav() {
    return husbokstav;
  }


  @JsonProperty(JSON_PROPERTY_HUSBOKSTAV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHusbokstav(String husbokstav) {
    this.husbokstav = husbokstav;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Adressenummer adressenummer = (Adressenummer) o;
    return Objects.equals(this.husnummer, adressenummer.husnummer) &&
        Objects.equals(this.husbokstav, adressenummer.husbokstav);
  }

  @Override
  public int hashCode() {
    return Objects.hash(husnummer, husbokstav);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Adressenummer {\n");
    sb.append("    husnummer: ").append(toIndentedString(husnummer)).append("\n");
    sb.append("    husbokstav: ").append(toIndentedString(husbokstav)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

