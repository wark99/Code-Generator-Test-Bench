/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.V40ReportReqEquifax;
import org.openapitools.client.model.V40ReportReqExperian;
import org.openapitools.client.model.V40ReportReqTransUnion;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * V40reportRequest
 */
@JsonPropertyOrder({
  V40reportRequest.JSON_PROPERTY_CONSUMER_ID,
  V40reportRequest.JSON_PROPERTY_FIRST_NAME,
  V40reportRequest.JSON_PROPERTY_MIDDLE_NAME,
  V40reportRequest.JSON_PROPERTY_LAST_NAME,
  V40reportRequest.JSON_PROPERTY_SUFFIX_NAME,
  V40reportRequest.JSON_PROPERTY_STREET1,
  V40reportRequest.JSON_PROPERTY_CITY,
  V40reportRequest.JSON_PROPERTY_POSTAL_CODE,
  V40reportRequest.JSON_PROPERTY_STATE,
  V40reportRequest.JSON_PROPERTY_DOB,
  V40reportRequest.JSON_PROPERTY_SSN,
  V40reportRequest.JSON_PROPERTY_PHONE,
  V40reportRequest.JSON_PROPERTY_STREET_NAME,
  V40reportRequest.JSON_PROPERTY_STREET_TYPE,
  V40reportRequest.JSON_PROPERTY_HOUSE_NUMBER,
  V40reportRequest.JSON_PROPERTY_APARTMENT_NUMBER,
  V40reportRequest.JSON_PROPERTY_QUADRANT,
  V40reportRequest.JSON_PROPERTY_STREET2
})
@JsonTypeName("v40report_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class V40reportRequest {
  public static final String JSON_PROPERTY_CONSUMER_ID = "consumer_id";
  private Object consumerId = null;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private Object firstName = null;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middle_name";
  private JsonNullable<Object> middleName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private Object lastName = null;

  /**
   * Gets or Sets suffixName
   */
  public enum SuffixNameEnum {
    JR("Jr"),
    
    SR("Sr"),
    
    III("III"),
    
    V("V"),
    
    VI("VI"),
    
    VII("VII"),
    
    VIII("VIII"),
    
    IX("IX"),
    
    X("X");

    private Object value;

    SuffixNameEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SuffixNameEnum fromValue(Object value) {
      for (SuffixNameEnum b : SuffixNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SUFFIX_NAME = "suffixName";
  private JsonNullable<SuffixNameEnum> suffixName = JsonNullable.<SuffixNameEnum>of(null);

  public static final String JSON_PROPERTY_STREET1 = "street1";
  private Object street1 = null;

  public static final String JSON_PROPERTY_CITY = "city";
  private Object city = null;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postal_code";
  private Object postalCode = null;

  public static final String JSON_PROPERTY_STATE = "state";
  private Object state = null;

  public static final String JSON_PROPERTY_DOB = "dob";
  private JsonNullable<Object> dob = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SSN = "ssn";
  private Object ssn = null;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<Object> phone = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_STREET_NAME = "streetName";
  private Object streetName = null;

  public static final String JSON_PROPERTY_STREET_TYPE = "streetType";
  private Object streetType = null;

  public static final String JSON_PROPERTY_HOUSE_NUMBER = "houseNumber";
  private Object houseNumber = null;

  public static final String JSON_PROPERTY_APARTMENT_NUMBER = "apartmentNumber";
  private JsonNullable<Object> apartmentNumber = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_QUADRANT = "quadrant";
  private JsonNullable<Object> quadrant = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_STREET2 = "street2";
  private JsonNullable<Object> street2 = JsonNullable.<Object>of(null);

  public V40reportRequest() {
  }

  public V40reportRequest consumerId(Object consumerId) {
    
    this.consumerId = consumerId;
    return this;
  }

   /**
   * Get consumerId
   * @return consumerId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getConsumerId() {
    return consumerId;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerId(Object consumerId) {
    this.consumerId = consumerId;
  }


  public V40reportRequest firstName(Object firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(Object firstName) {
    this.firstName = firstName;
  }


  public V40reportRequest middleName(Object middleName) {
    this.middleName = JsonNullable.<Object>of(middleName);
    
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMiddleName() {
        return middleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMiddleName_JsonNullable() {
    return middleName;
  }
  
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  public void setMiddleName_JsonNullable(JsonNullable<Object> middleName) {
    this.middleName = middleName;
  }

  public void setMiddleName(Object middleName) {
    this.middleName = JsonNullable.<Object>of(middleName);
  }


  public V40reportRequest lastName(Object lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(Object lastName) {
    this.lastName = lastName;
  }


  public V40reportRequest suffixName(SuffixNameEnum suffixName) {
    this.suffixName = JsonNullable.<SuffixNameEnum>of(suffixName);
    
    return this;
  }

   /**
   * Get suffixName
   * @return suffixName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public SuffixNameEnum getSuffixName() {
        return suffixName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUFFIX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SuffixNameEnum> getSuffixName_JsonNullable() {
    return suffixName;
  }
  
  @JsonProperty(JSON_PROPERTY_SUFFIX_NAME)
  public void setSuffixName_JsonNullable(JsonNullable<SuffixNameEnum> suffixName) {
    this.suffixName = suffixName;
  }

  public void setSuffixName(SuffixNameEnum suffixName) {
    this.suffixName = JsonNullable.<SuffixNameEnum>of(suffixName);
  }


  public V40reportRequest street1(Object street1) {
    
    this.street1 = street1;
    return this;
  }

   /**
   * Get street1
   * @return street1
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getStreet1() {
    return street1;
  }


  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreet1(Object street1) {
    this.street1 = street1;
  }


  public V40reportRequest city(Object city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCity(Object city) {
    this.city = city;
  }


  public V40reportRequest postalCode(Object postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostalCode(Object postalCode) {
    this.postalCode = postalCode;
  }


  public V40reportRequest state(Object state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(Object state) {
    this.state = state;
  }


  public V40reportRequest dob(Object dob) {
    this.dob = JsonNullable.<Object>of(dob);
    
    return this;
  }

   /**
   * Get dob
   * @return dob
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDob() {
        return dob.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDob_JsonNullable() {
    return dob;
  }
  
  @JsonProperty(JSON_PROPERTY_DOB)
  public void setDob_JsonNullable(JsonNullable<Object> dob) {
    this.dob = dob;
  }

  public void setDob(Object dob) {
    this.dob = JsonNullable.<Object>of(dob);
  }


  public V40reportRequest ssn(Object ssn) {
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSsn() {
    return ssn;
  }


  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSsn(Object ssn) {
    this.ssn = ssn;
  }


  public V40reportRequest phone(Object phone) {
    this.phone = JsonNullable.<Object>of(phone);
    
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<Object> phone) {
    this.phone = phone;
  }

  public void setPhone(Object phone) {
    this.phone = JsonNullable.<Object>of(phone);
  }


  public V40reportRequest streetName(Object streetName) {
    
    this.streetName = streetName;
    return this;
  }

   /**
   * Get streetName
   * @return streetName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getStreetName() {
    return streetName;
  }


  @JsonProperty(JSON_PROPERTY_STREET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreetName(Object streetName) {
    this.streetName = streetName;
  }


  public V40reportRequest streetType(Object streetType) {
    
    this.streetType = streetType;
    return this;
  }

   /**
   * Get streetType
   * @return streetType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getStreetType() {
    return streetType;
  }


  @JsonProperty(JSON_PROPERTY_STREET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreetType(Object streetType) {
    this.streetType = streetType;
  }


  public V40reportRequest houseNumber(Object houseNumber) {
    
    this.houseNumber = houseNumber;
    return this;
  }

   /**
   * Get houseNumber
   * @return houseNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOUSE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getHouseNumber() {
    return houseNumber;
  }


  @JsonProperty(JSON_PROPERTY_HOUSE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHouseNumber(Object houseNumber) {
    this.houseNumber = houseNumber;
  }


  public V40reportRequest apartmentNumber(Object apartmentNumber) {
    this.apartmentNumber = JsonNullable.<Object>of(apartmentNumber);
    
    return this;
  }

   /**
   * Get apartmentNumber
   * @return apartmentNumber
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getApartmentNumber() {
        return apartmentNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APARTMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getApartmentNumber_JsonNullable() {
    return apartmentNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_APARTMENT_NUMBER)
  public void setApartmentNumber_JsonNullable(JsonNullable<Object> apartmentNumber) {
    this.apartmentNumber = apartmentNumber;
  }

  public void setApartmentNumber(Object apartmentNumber) {
    this.apartmentNumber = JsonNullable.<Object>of(apartmentNumber);
  }


  public V40reportRequest quadrant(Object quadrant) {
    this.quadrant = JsonNullable.<Object>of(quadrant);
    
    return this;
  }

   /**
   * Get quadrant
   * @return quadrant
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getQuadrant() {
        return quadrant.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUADRANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getQuadrant_JsonNullable() {
    return quadrant;
  }
  
  @JsonProperty(JSON_PROPERTY_QUADRANT)
  public void setQuadrant_JsonNullable(JsonNullable<Object> quadrant) {
    this.quadrant = quadrant;
  }

  public void setQuadrant(Object quadrant) {
    this.quadrant = JsonNullable.<Object>of(quadrant);
  }


  public V40reportRequest street2(Object street2) {
    this.street2 = JsonNullable.<Object>of(street2);
    
    return this;
  }

   /**
   * Get street2
   * @return street2
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getStreet2() {
        return street2.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STREET2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getStreet2_JsonNullable() {
    return street2;
  }
  
  @JsonProperty(JSON_PROPERTY_STREET2)
  public void setStreet2_JsonNullable(JsonNullable<Object> street2) {
    this.street2 = street2;
  }

  public void setStreet2(Object street2) {
    this.street2 = JsonNullable.<Object>of(street2);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V40reportRequest v40reportRequest = (V40reportRequest) o;
    return Objects.equals(this.consumerId, v40reportRequest.consumerId) &&
        Objects.equals(this.firstName, v40reportRequest.firstName) &&
        equalsNullable(this.middleName, v40reportRequest.middleName) &&
        Objects.equals(this.lastName, v40reportRequest.lastName) &&
        equalsNullable(this.suffixName, v40reportRequest.suffixName) &&
        Objects.equals(this.street1, v40reportRequest.street1) &&
        Objects.equals(this.city, v40reportRequest.city) &&
        Objects.equals(this.postalCode, v40reportRequest.postalCode) &&
        Objects.equals(this.state, v40reportRequest.state) &&
        equalsNullable(this.dob, v40reportRequest.dob) &&
        Objects.equals(this.ssn, v40reportRequest.ssn) &&
        equalsNullable(this.phone, v40reportRequest.phone) &&
        Objects.equals(this.streetName, v40reportRequest.streetName) &&
        Objects.equals(this.streetType, v40reportRequest.streetType) &&
        Objects.equals(this.houseNumber, v40reportRequest.houseNumber) &&
        equalsNullable(this.apartmentNumber, v40reportRequest.apartmentNumber) &&
        equalsNullable(this.quadrant, v40reportRequest.quadrant) &&
        equalsNullable(this.street2, v40reportRequest.street2);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerId, firstName, hashCodeNullable(middleName), lastName, hashCodeNullable(suffixName), street1, city, postalCode, state, hashCodeNullable(dob), ssn, hashCodeNullable(phone), streetName, streetType, houseNumber, hashCodeNullable(apartmentNumber), hashCodeNullable(quadrant), hashCodeNullable(street2));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V40reportRequest {\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    suffixName: ").append(toIndentedString(suffixName)).append("\n");
    sb.append("    street1: ").append(toIndentedString(street1)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    streetType: ").append(toIndentedString(streetType)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    apartmentNumber: ").append(toIndentedString(apartmentNumber)).append("\n");
    sb.append("    quadrant: ").append(toIndentedString(quadrant)).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

