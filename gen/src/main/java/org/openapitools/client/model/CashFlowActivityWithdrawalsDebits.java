/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CashFlowActivityWithdrawalsDebits
 */
@JsonPropertyOrder({
  CashFlowActivityWithdrawalsDebits.JSON_PROPERTY_DATE,
  CashFlowActivityWithdrawalsDebits.JSON_PROPERTY_TRANSACTION_DESCRIPTION,
  CashFlowActivityWithdrawalsDebits.JSON_PROPERTY_WITHDRAWALS_DEBITS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:34:32.874275138Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CashFlowActivityWithdrawalsDebits {
  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_TRANSACTION_DESCRIPTION = "transactionDescription";
  private String transactionDescription;

  public static final String JSON_PROPERTY_WITHDRAWALS_DEBITS = "withdrawalsDebits";
  private BigDecimal withdrawalsDebits;

  public CashFlowActivityWithdrawalsDebits() {
  }

  public CashFlowActivityWithdrawalsDebits date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Date the withdrawal transaction was posted
   * @return date
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(String date) {
    this.date = date;
  }


  public CashFlowActivityWithdrawalsDebits transactionDescription(String transactionDescription) {
    
    this.transactionDescription = transactionDescription;
    return this;
  }

   /**
   * Description of transaction
   * @return transactionDescription
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionDescription() {
    return transactionDescription;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionDescription(String transactionDescription) {
    this.transactionDescription = transactionDescription;
  }


  public CashFlowActivityWithdrawalsDebits withdrawalsDebits(BigDecimal withdrawalsDebits) {
    
    this.withdrawalsDebits = withdrawalsDebits;
    return this;
  }

   /**
   * Amount of the withdrawal
   * @return withdrawalsDebits
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WITHDRAWALS_DEBITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getWithdrawalsDebits() {
    return withdrawalsDebits;
  }


  @JsonProperty(JSON_PROPERTY_WITHDRAWALS_DEBITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWithdrawalsDebits(BigDecimal withdrawalsDebits) {
    this.withdrawalsDebits = withdrawalsDebits;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowActivityWithdrawalsDebits cashFlowActivityWithdrawalsDebits = (CashFlowActivityWithdrawalsDebits) o;
    return Objects.equals(this.date, cashFlowActivityWithdrawalsDebits.date) &&
        Objects.equals(this.transactionDescription, cashFlowActivityWithdrawalsDebits.transactionDescription) &&
        Objects.equals(this.withdrawalsDebits, cashFlowActivityWithdrawalsDebits.withdrawalsDebits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, transactionDescription, withdrawalsDebits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowActivityWithdrawalsDebits {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    transactionDescription: ").append(toIndentedString(transactionDescription)).append("\n");
    sb.append("    withdrawalsDebits: ").append(toIndentedString(withdrawalsDebits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

