/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StatusResponseStatusEstimatesInnerAdditionalQuestionsInner;
import org.openapitools.client.model.StatusResponseStatusEstimatesInnerLinesInner;
import org.openapitools.client.model.StatusResponseStatusEstimatesInnerNotesInner;
import org.openapitools.client.model.StatusResponseStatusEstimatesInnerPartsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatusResponseStatusEstimatesInner
 */
@JsonPropertyOrder({
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_ESTIMATE_I_D,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_SUBMISSION_STATUS_CODE,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_PROCESSED_STATUS_CODE,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_TOTAL_AMOUNT,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_DEDUCTIBLE,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_CREATE_TIMESTAMP,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_SUBMISSION_TIMESTAMP,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_DECLINE_REASON,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_PROCESSED_TIMESTAMP,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_LINES,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_PARTS,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_NOTES,
  StatusResponseStatusEstimatesInner.JSON_PROPERTY_ADDITIONAL_QUESTIONS
})
@JsonTypeName("StatusResponse_status_estimates_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatusResponseStatusEstimatesInner {
  public static final String JSON_PROPERTY_ESTIMATE_I_D = "estimateID";
  private String estimateID;

  public static final String JSON_PROPERTY_SUBMISSION_STATUS_CODE = "submissionStatusCode";
  private String submissionStatusCode;

  public static final String JSON_PROPERTY_PROCESSED_STATUS_CODE = "processedStatusCode";
  private String processedStatusCode;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private String totalAmount;

  public static final String JSON_PROPERTY_DEDUCTIBLE = "deductible";
  private String deductible;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE = "totalAmountLessDeductible";
  private String totalAmountLessDeductible;

  public static final String JSON_PROPERTY_CREATE_TIMESTAMP = "createTimestamp";
  private String createTimestamp;

  public static final String JSON_PROPERTY_SUBMISSION_TIMESTAMP = "submissionTimestamp";
  private String submissionTimestamp;

  public static final String JSON_PROPERTY_DECLINE_REASON = "declineReason";
  private Object declineReason = null;

  public static final String JSON_PROPERTY_PROCESSED_TIMESTAMP = "processedTimestamp";
  private String processedTimestamp;

  public static final String JSON_PROPERTY_LINES = "lines";
  private List<StatusResponseStatusEstimatesInnerLinesInner> lines = new ArrayList<>();

  public static final String JSON_PROPERTY_PARTS = "parts";
  private List<StatusResponseStatusEstimatesInnerPartsInner> parts = new ArrayList<>();

  public static final String JSON_PROPERTY_NOTES = "notes";
  private List<StatusResponseStatusEstimatesInnerNotesInner> notes = new ArrayList<>();

  public static final String JSON_PROPERTY_ADDITIONAL_QUESTIONS = "additionalQuestions";
  private List<StatusResponseStatusEstimatesInnerAdditionalQuestionsInner> additionalQuestions = new ArrayList<>();

  public StatusResponseStatusEstimatesInner() {
  }

  public StatusResponseStatusEstimatesInner estimateID(String estimateID) {
    
    this.estimateID = estimateID;
    return this;
  }

   /**
   * Get estimateID
   * @return estimateID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEstimateID() {
    return estimateID;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimateID(String estimateID) {
    this.estimateID = estimateID;
  }


  public StatusResponseStatusEstimatesInner submissionStatusCode(String submissionStatusCode) {
    
    this.submissionStatusCode = submissionStatusCode;
    return this;
  }

   /**
   * Get submissionStatusCode
   * @return submissionStatusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubmissionStatusCode() {
    return submissionStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionStatusCode(String submissionStatusCode) {
    this.submissionStatusCode = submissionStatusCode;
  }


  public StatusResponseStatusEstimatesInner processedStatusCode(String processedStatusCode) {
    
    this.processedStatusCode = processedStatusCode;
    return this;
  }

   /**
   * Get processedStatusCode
   * @return processedStatusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSED_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessedStatusCode() {
    return processedStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedStatusCode(String processedStatusCode) {
    this.processedStatusCode = processedStatusCode;
  }


  public StatusResponseStatusEstimatesInner totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }


  public StatusResponseStatusEstimatesInner deductible(String deductible) {
    
    this.deductible = deductible;
    return this;
  }

   /**
   * Get deductible
   * @return deductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeductible() {
    return deductible;
  }


  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeductible(String deductible) {
    this.deductible = deductible;
  }


  public StatusResponseStatusEstimatesInner totalAmountLessDeductible(String totalAmountLessDeductible) {
    
    this.totalAmountLessDeductible = totalAmountLessDeductible;
    return this;
  }

   /**
   * Get totalAmountLessDeductible
   * @return totalAmountLessDeductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalAmountLessDeductible() {
    return totalAmountLessDeductible;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmountLessDeductible(String totalAmountLessDeductible) {
    this.totalAmountLessDeductible = totalAmountLessDeductible;
  }


  public StatusResponseStatusEstimatesInner createTimestamp(String createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * Get createTimestamp
   * @return createTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreateTimestamp() {
    return createTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateTimestamp(String createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public StatusResponseStatusEstimatesInner submissionTimestamp(String submissionTimestamp) {
    
    this.submissionTimestamp = submissionTimestamp;
    return this;
  }

   /**
   * Get submissionTimestamp
   * @return submissionTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubmissionTimestamp() {
    return submissionTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionTimestamp(String submissionTimestamp) {
    this.submissionTimestamp = submissionTimestamp;
  }


  public StatusResponseStatusEstimatesInner declineReason(Object declineReason) {
    
    this.declineReason = declineReason;
    return this;
  }

   /**
   * Get declineReason
   * @return declineReason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDeclineReason() {
    return declineReason;
  }


  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeclineReason(Object declineReason) {
    this.declineReason = declineReason;
  }


  public StatusResponseStatusEstimatesInner processedTimestamp(String processedTimestamp) {
    
    this.processedTimestamp = processedTimestamp;
    return this;
  }

   /**
   * Get processedTimestamp
   * @return processedTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessedTimestamp() {
    return processedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedTimestamp(String processedTimestamp) {
    this.processedTimestamp = processedTimestamp;
  }


  public StatusResponseStatusEstimatesInner lines(List<StatusResponseStatusEstimatesInnerLinesInner> lines) {
    
    this.lines = lines;
    return this;
  }

  public StatusResponseStatusEstimatesInner addLinesItem(StatusResponseStatusEstimatesInnerLinesInner linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StatusResponseStatusEstimatesInnerLinesInner> getLines() {
    return lines;
  }


  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLines(List<StatusResponseStatusEstimatesInnerLinesInner> lines) {
    this.lines = lines;
  }


  public StatusResponseStatusEstimatesInner parts(List<StatusResponseStatusEstimatesInnerPartsInner> parts) {
    
    this.parts = parts;
    return this;
  }

  public StatusResponseStatusEstimatesInner addPartsItem(StatusResponseStatusEstimatesInnerPartsInner partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<>();
    }
    this.parts.add(partsItem);
    return this;
  }

   /**
   * Get parts
   * @return parts
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StatusResponseStatusEstimatesInnerPartsInner> getParts() {
    return parts;
  }


  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParts(List<StatusResponseStatusEstimatesInnerPartsInner> parts) {
    this.parts = parts;
  }


  public StatusResponseStatusEstimatesInner notes(List<StatusResponseStatusEstimatesInnerNotesInner> notes) {
    
    this.notes = notes;
    return this;
  }

  public StatusResponseStatusEstimatesInner addNotesItem(StatusResponseStatusEstimatesInnerNotesInner notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StatusResponseStatusEstimatesInnerNotesInner> getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotes(List<StatusResponseStatusEstimatesInnerNotesInner> notes) {
    this.notes = notes;
  }


  public StatusResponseStatusEstimatesInner additionalQuestions(List<StatusResponseStatusEstimatesInnerAdditionalQuestionsInner> additionalQuestions) {
    
    this.additionalQuestions = additionalQuestions;
    return this;
  }

  public StatusResponseStatusEstimatesInner addAdditionalQuestionsItem(StatusResponseStatusEstimatesInnerAdditionalQuestionsInner additionalQuestionsItem) {
    if (this.additionalQuestions == null) {
      this.additionalQuestions = new ArrayList<>();
    }
    this.additionalQuestions.add(additionalQuestionsItem);
    return this;
  }

   /**
   * Get additionalQuestions
   * @return additionalQuestions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StatusResponseStatusEstimatesInnerAdditionalQuestionsInner> getAdditionalQuestions() {
    return additionalQuestions;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalQuestions(List<StatusResponseStatusEstimatesInnerAdditionalQuestionsInner> additionalQuestions) {
    this.additionalQuestions = additionalQuestions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusResponseStatusEstimatesInner statusResponseStatusEstimatesInner = (StatusResponseStatusEstimatesInner) o;
    return Objects.equals(this.estimateID, statusResponseStatusEstimatesInner.estimateID) &&
        Objects.equals(this.submissionStatusCode, statusResponseStatusEstimatesInner.submissionStatusCode) &&
        Objects.equals(this.processedStatusCode, statusResponseStatusEstimatesInner.processedStatusCode) &&
        Objects.equals(this.totalAmount, statusResponseStatusEstimatesInner.totalAmount) &&
        Objects.equals(this.deductible, statusResponseStatusEstimatesInner.deductible) &&
        Objects.equals(this.totalAmountLessDeductible, statusResponseStatusEstimatesInner.totalAmountLessDeductible) &&
        Objects.equals(this.createTimestamp, statusResponseStatusEstimatesInner.createTimestamp) &&
        Objects.equals(this.submissionTimestamp, statusResponseStatusEstimatesInner.submissionTimestamp) &&
        Objects.equals(this.declineReason, statusResponseStatusEstimatesInner.declineReason) &&
        Objects.equals(this.processedTimestamp, statusResponseStatusEstimatesInner.processedTimestamp) &&
        Objects.equals(this.lines, statusResponseStatusEstimatesInner.lines) &&
        Objects.equals(this.parts, statusResponseStatusEstimatesInner.parts) &&
        Objects.equals(this.notes, statusResponseStatusEstimatesInner.notes) &&
        Objects.equals(this.additionalQuestions, statusResponseStatusEstimatesInner.additionalQuestions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimateID, submissionStatusCode, processedStatusCode, totalAmount, deductible, totalAmountLessDeductible, createTimestamp, submissionTimestamp, declineReason, processedTimestamp, lines, parts, notes, additionalQuestions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusResponseStatusEstimatesInner {\n");
    sb.append("    estimateID: ").append(toIndentedString(estimateID)).append("\n");
    sb.append("    submissionStatusCode: ").append(toIndentedString(submissionStatusCode)).append("\n");
    sb.append("    processedStatusCode: ").append(toIndentedString(processedStatusCode)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    deductible: ").append(toIndentedString(deductible)).append("\n");
    sb.append("    totalAmountLessDeductible: ").append(toIndentedString(totalAmountLessDeductible)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    submissionTimestamp: ").append(toIndentedString(submissionTimestamp)).append("\n");
    sb.append("    declineReason: ").append(toIndentedString(declineReason)).append("\n");
    sb.append("    processedTimestamp: ").append(toIndentedString(processedTimestamp)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    additionalQuestions: ").append(toIndentedString(additionalQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

