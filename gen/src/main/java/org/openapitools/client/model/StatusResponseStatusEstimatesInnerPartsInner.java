/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatusResponseStatusEstimatesInnerPartsInner
 */
@JsonPropertyOrder({
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_ESTIMATE_PART_I_D,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_BRAND,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_PART_NUMBER,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_DESCRIPTION,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_QUANTITY,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_COST_EACH,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_EXTENDED_COST,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_ALREADY_USED,
  StatusResponseStatusEstimatesInnerPartsInner.JSON_PROPERTY_ALREADY_ORDERED
})
@JsonTypeName("StatusResponse_status_estimates_inner_parts_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatusResponseStatusEstimatesInnerPartsInner {
  public static final String JSON_PROPERTY_ESTIMATE_PART_I_D = "estimatePartID";
  private String estimatePartID;

  public static final String JSON_PROPERTY_BRAND = "brand";
  private String brand;

  public static final String JSON_PROPERTY_PART_NUMBER = "partNumber";
  private String partNumber;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private String quantity;

  public static final String JSON_PROPERTY_COST_EACH = "costEach";
  private String costEach;

  public static final String JSON_PROPERTY_EXTENDED_COST = "extendedCost";
  private String extendedCost;

  public static final String JSON_PROPERTY_ALREADY_USED = "alreadyUsed";
  private Boolean alreadyUsed;

  public static final String JSON_PROPERTY_ALREADY_ORDERED = "alreadyOrdered";
  private Boolean alreadyOrdered;

  public StatusResponseStatusEstimatesInnerPartsInner() {
  }

  public StatusResponseStatusEstimatesInnerPartsInner estimatePartID(String estimatePartID) {
    
    this.estimatePartID = estimatePartID;
    return this;
  }

   /**
   * Get estimatePartID
   * @return estimatePartID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_PART_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEstimatePartID() {
    return estimatePartID;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_PART_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimatePartID(String estimatePartID) {
    this.estimatePartID = estimatePartID;
  }


  public StatusResponseStatusEstimatesInnerPartsInner brand(String brand) {
    
    this.brand = brand;
    return this;
  }

   /**
   * Get brand
   * @return brand
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBrand() {
    return brand;
  }


  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrand(String brand) {
    this.brand = brand;
  }


  public StatusResponseStatusEstimatesInnerPartsInner partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartNumber() {
    return partNumber;
  }


  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public StatusResponseStatusEstimatesInnerPartsInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public StatusResponseStatusEstimatesInnerPartsInner quantity(String quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }


  public StatusResponseStatusEstimatesInnerPartsInner costEach(String costEach) {
    
    this.costEach = costEach;
    return this;
  }

   /**
   * Get costEach
   * @return costEach
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCostEach() {
    return costEach;
  }


  @JsonProperty(JSON_PROPERTY_COST_EACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCostEach(String costEach) {
    this.costEach = costEach;
  }


  public StatusResponseStatusEstimatesInnerPartsInner extendedCost(String extendedCost) {
    
    this.extendedCost = extendedCost;
    return this;
  }

   /**
   * Get extendedCost
   * @return extendedCost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXTENDED_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExtendedCost() {
    return extendedCost;
  }


  @JsonProperty(JSON_PROPERTY_EXTENDED_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtendedCost(String extendedCost) {
    this.extendedCost = extendedCost;
  }


  public StatusResponseStatusEstimatesInnerPartsInner alreadyUsed(Boolean alreadyUsed) {
    
    this.alreadyUsed = alreadyUsed;
    return this;
  }

   /**
   * Get alreadyUsed
   * @return alreadyUsed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALREADY_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAlreadyUsed() {
    return alreadyUsed;
  }


  @JsonProperty(JSON_PROPERTY_ALREADY_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlreadyUsed(Boolean alreadyUsed) {
    this.alreadyUsed = alreadyUsed;
  }


  public StatusResponseStatusEstimatesInnerPartsInner alreadyOrdered(Boolean alreadyOrdered) {
    
    this.alreadyOrdered = alreadyOrdered;
    return this;
  }

   /**
   * Get alreadyOrdered
   * @return alreadyOrdered
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALREADY_ORDERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAlreadyOrdered() {
    return alreadyOrdered;
  }


  @JsonProperty(JSON_PROPERTY_ALREADY_ORDERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlreadyOrdered(Boolean alreadyOrdered) {
    this.alreadyOrdered = alreadyOrdered;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusResponseStatusEstimatesInnerPartsInner statusResponseStatusEstimatesInnerPartsInner = (StatusResponseStatusEstimatesInnerPartsInner) o;
    return Objects.equals(this.estimatePartID, statusResponseStatusEstimatesInnerPartsInner.estimatePartID) &&
        Objects.equals(this.brand, statusResponseStatusEstimatesInnerPartsInner.brand) &&
        Objects.equals(this.partNumber, statusResponseStatusEstimatesInnerPartsInner.partNumber) &&
        Objects.equals(this.description, statusResponseStatusEstimatesInnerPartsInner.description) &&
        Objects.equals(this.quantity, statusResponseStatusEstimatesInnerPartsInner.quantity) &&
        Objects.equals(this.costEach, statusResponseStatusEstimatesInnerPartsInner.costEach) &&
        Objects.equals(this.extendedCost, statusResponseStatusEstimatesInnerPartsInner.extendedCost) &&
        Objects.equals(this.alreadyUsed, statusResponseStatusEstimatesInnerPartsInner.alreadyUsed) &&
        Objects.equals(this.alreadyOrdered, statusResponseStatusEstimatesInnerPartsInner.alreadyOrdered);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimatePartID, brand, partNumber, description, quantity, costEach, extendedCost, alreadyUsed, alreadyOrdered);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusResponseStatusEstimatesInnerPartsInner {\n");
    sb.append("    estimatePartID: ").append(toIndentedString(estimatePartID)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    costEach: ").append(toIndentedString(costEach)).append("\n");
    sb.append("    extendedCost: ").append(toIndentedString(extendedCost)).append("\n");
    sb.append("    alreadyUsed: ").append(toIndentedString(alreadyUsed)).append("\n");
    sb.append("    alreadyOrdered: ").append(toIndentedString(alreadyOrdered)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

