/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CadenceDetails;
import org.openapitools.client.model.ReportTransaction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VOETransactionsReportIncomeStream
 */
@JsonPropertyOrder({
  VOETransactionsReportIncomeStream.JSON_PROPERTY_ID,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_NAME,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_STATUS,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_ESTIMATE_INCLUSION,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_CONFIDENCE,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_CADENCE,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_DAYS_SINCE_LAST_TRANSACTION,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_NEXT_EXPECTED_TRANSACTION_DATE,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_INCOME_STREAM_MONTHS,
  VOETransactionsReportIncomeStream.JSON_PROPERTY_TRANSACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:50:32.834459740Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class VOETransactionsReportIncomeStream {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_ESTIMATE_INCLUSION = "estimateInclusion";
  private String estimateInclusion;

  public static final String JSON_PROPERTY_CONFIDENCE = "confidence";
  private Integer confidence;

  public static final String JSON_PROPERTY_CADENCE = "cadence";
  private CadenceDetails cadence;

  public static final String JSON_PROPERTY_DAYS_SINCE_LAST_TRANSACTION = "daysSinceLastTransaction";
  private Integer daysSinceLastTransaction;

  public static final String JSON_PROPERTY_NEXT_EXPECTED_TRANSACTION_DATE = "nextExpectedTransactionDate";
  private Long nextExpectedTransactionDate;

  public static final String JSON_PROPERTY_INCOME_STREAM_MONTHS = "incomeStreamMonths";
  private Integer incomeStreamMonths;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<ReportTransaction> transactions = new ArrayList<>();

  public VOETransactionsReportIncomeStream() {
  }

  public VOETransactionsReportIncomeStream id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Income stream ID
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public VOETransactionsReportIncomeStream name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A human-readable name based on the &#x60;normalizedPayee&#x60; name of the transactions for this income stream
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public VOETransactionsReportIncomeStream status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Possible values: \&quot;ACTIVE\&quot;, \&quot;INACTIVE\&quot;
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public VOETransactionsReportIncomeStream estimateInclusion(String estimateInclusion) {
    
    this.estimateInclusion = estimateInclusion;
    return this;
  }

   /**
   * Possible values: \&quot;HIGH\&quot;, \&quot;MODERATE\&quot;, \&quot;LOW\&quot;, \&quot;NO\&quot;
   * @return estimateInclusion
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_INCLUSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEstimateInclusion() {
    return estimateInclusion;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_INCLUSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimateInclusion(String estimateInclusion) {
    this.estimateInclusion = estimateInclusion;
  }


  public VOETransactionsReportIncomeStream confidence(Integer confidence) {
    
    this.confidence = confidence;
    return this;
  }

   /**
   * Level of confidence that the deposit stream represents income (example: 85%)
   * @return confidence
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIDENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getConfidence() {
    return confidence;
  }


  @JsonProperty(JSON_PROPERTY_CONFIDENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfidence(Integer confidence) {
    this.confidence = confidence;
  }


  public VOETransactionsReportIncomeStream cadence(CadenceDetails cadence) {
    
    this.cadence = cadence;
    return this;
  }

   /**
   * Get cadence
   * @return cadence
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CADENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CadenceDetails getCadence() {
    return cadence;
  }


  @JsonProperty(JSON_PROPERTY_CADENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCadence(CadenceDetails cadence) {
    this.cadence = cadence;
  }


  public VOETransactionsReportIncomeStream daysSinceLastTransaction(Integer daysSinceLastTransaction) {
    
    this.daysSinceLastTransaction = daysSinceLastTransaction;
    return this;
  }

   /**
   * The number of days since the last credit transaction for the particular income stream
   * @return daysSinceLastTransaction
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAYS_SINCE_LAST_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDaysSinceLastTransaction() {
    return daysSinceLastTransaction;
  }


  @JsonProperty(JSON_PROPERTY_DAYS_SINCE_LAST_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDaysSinceLastTransaction(Integer daysSinceLastTransaction) {
    this.daysSinceLastTransaction = daysSinceLastTransaction;
  }


  public VOETransactionsReportIncomeStream nextExpectedTransactionDate(Long nextExpectedTransactionDate) {
    
    this.nextExpectedTransactionDate = nextExpectedTransactionDate;
    return this;
  }

   /**
   * The next expected credit transaction date for the particular income stream, based on the cadence
   * @return nextExpectedTransactionDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEXT_EXPECTED_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getNextExpectedTransactionDate() {
    return nextExpectedTransactionDate;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_EXPECTED_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNextExpectedTransactionDate(Long nextExpectedTransactionDate) {
    this.nextExpectedTransactionDate = nextExpectedTransactionDate;
  }


  public VOETransactionsReportIncomeStream incomeStreamMonths(Integer incomeStreamMonths) {
    
    this.incomeStreamMonths = incomeStreamMonths;
    return this;
  }

   /**
   * The number of months the income transactions are observed
   * @return incomeStreamMonths
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIncomeStreamMonths() {
    return incomeStreamMonths;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStreamMonths(Integer incomeStreamMonths) {
    this.incomeStreamMonths = incomeStreamMonths;
  }


  public VOETransactionsReportIncomeStream transactions(List<ReportTransaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public VOETransactionsReportIncomeStream addTransactionsItem(ReportTransaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * A list of transaction records
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ReportTransaction> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactions(List<ReportTransaction> transactions) {
    this.transactions = transactions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VOETransactionsReportIncomeStream voETransactionsReportIncomeStream = (VOETransactionsReportIncomeStream) o;
    return Objects.equals(this.id, voETransactionsReportIncomeStream.id) &&
        Objects.equals(this.name, voETransactionsReportIncomeStream.name) &&
        Objects.equals(this.status, voETransactionsReportIncomeStream.status) &&
        Objects.equals(this.estimateInclusion, voETransactionsReportIncomeStream.estimateInclusion) &&
        Objects.equals(this.confidence, voETransactionsReportIncomeStream.confidence) &&
        Objects.equals(this.cadence, voETransactionsReportIncomeStream.cadence) &&
        Objects.equals(this.daysSinceLastTransaction, voETransactionsReportIncomeStream.daysSinceLastTransaction) &&
        Objects.equals(this.nextExpectedTransactionDate, voETransactionsReportIncomeStream.nextExpectedTransactionDate) &&
        Objects.equals(this.incomeStreamMonths, voETransactionsReportIncomeStream.incomeStreamMonths) &&
        Objects.equals(this.transactions, voETransactionsReportIncomeStream.transactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, status, estimateInclusion, confidence, cadence, daysSinceLastTransaction, nextExpectedTransactionDate, incomeStreamMonths, transactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VOETransactionsReportIncomeStream {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    estimateInclusion: ").append(toIndentedString(estimateInclusion)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    cadence: ").append(toIndentedString(cadence)).append("\n");
    sb.append("    daysSinceLastTransaction: ").append(toIndentedString(daysSinceLastTransaction)).append("\n");
    sb.append("    nextExpectedTransactionDate: ").append(toIndentedString(nextExpectedTransactionDate)).append("\n");
    sb.append("    incomeStreamMonths: ").append(toIndentedString(incomeStreamMonths)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

