/*
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Specialty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A veterinarian.
 */
@JsonPropertyOrder({
  Vet.JSON_PROPERTY_FIRST_NAME,
  Vet.JSON_PROPERTY_LAST_NAME,
  Vet.JSON_PROPERTY_SPECIALTIES,
  Vet.JSON_PROPERTY_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:34:52.144008770Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Vet {
  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_SPECIALTIES = "specialties";
  private List<Specialty> specialties = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public Vet() {
  }

  @JsonCreator
  public Vet(
    @JsonProperty(JSON_PROPERTY_ID) Integer id
  ) {
    this();
    this.id = id;
  }

  public Vet firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the vet.
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Vet lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the vet.
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Vet specialties(List<Specialty> specialties) {
    
    this.specialties = specialties;
    return this;
  }

  public Vet addSpecialtiesItem(Specialty specialtiesItem) {
    if (this.specialties == null) {
      this.specialties = new ArrayList<>();
    }
    this.specialties.add(specialtiesItem);
    return this;
  }

   /**
   * The specialties of the vet.
   * @return specialties
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SPECIALTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Specialty> getSpecialties() {
    return specialties;
  }


  @JsonProperty(JSON_PROPERTY_SPECIALTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpecialties(List<Specialty> specialties) {
    this.specialties = specialties;
  }


   /**
   * The ID of the vet.
   * minimum: 0
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vet vet = (Vet) o;
    return Objects.equals(this.firstName, vet.firstName) &&
        Objects.equals(this.lastName, vet.lastName) &&
        Objects.equals(this.specialties, vet.specialties) &&
        Objects.equals(this.id, vet.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, specialties, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vet {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    specialties: ").append(toIndentedString(specialties)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

