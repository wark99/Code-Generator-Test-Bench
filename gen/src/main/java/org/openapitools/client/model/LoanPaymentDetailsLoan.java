/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Loan details
 */
@JsonPropertyOrder({
  LoanPaymentDetailsLoan.JSON_PROPERTY_ACCOUNT_ID,
  LoanPaymentDetailsLoan.JSON_PROPERTY_LOAN_NUMBER,
  LoanPaymentDetailsLoan.JSON_PROPERTY_LOAN_PAYMENT_NUMBER,
  LoanPaymentDetailsLoan.JSON_PROPERTY_LOAN_PAYMENT_ADDRESS,
  LoanPaymentDetailsLoan.JSON_PROPERTY_LOAN_FUTURE_PAYOFF_AMOUNT,
  LoanPaymentDetailsLoan.JSON_PROPERTY_LOAN_FUTURE_PAYOFF_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:05:40.878624261Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class LoanPaymentDetailsLoan {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_LOAN_NUMBER = "loanNumber";
  private String loanNumber;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_NUMBER = "loanPaymentNumber";
  private String loanPaymentNumber;

  public static final String JSON_PROPERTY_LOAN_PAYMENT_ADDRESS = "loanPaymentAddress";
  private String loanPaymentAddress;

  public static final String JSON_PROPERTY_LOAN_FUTURE_PAYOFF_AMOUNT = "loanFuturePayoffAmount";
  private BigDecimal loanFuturePayoffAmount;

  public static final String JSON_PROPERTY_LOAN_FUTURE_PAYOFF_DATE = "loanFuturePayoffDate";
  private OffsetDateTime loanFuturePayoffDate;

  public LoanPaymentDetailsLoan() {
  }

  public LoanPaymentDetailsLoan accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * An account ID
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public LoanPaymentDetailsLoan loanNumber(String loanNumber) {
    
    this.loanNumber = loanNumber;
    return this;
  }

   /**
   * Institution&#39;s ID of the Student Loan
   * @return loanNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanNumber() {
    return loanNumber;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanNumber(String loanNumber) {
    this.loanNumber = loanNumber;
  }


  public LoanPaymentDetailsLoan loanPaymentNumber(String loanPaymentNumber) {
    
    this.loanPaymentNumber = loanPaymentNumber;
    return this;
  }

   /**
   * The payment number given by the institution. This number is typically for manual payments. This is not an ACH payment number.
   * @return loanPaymentNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanPaymentNumber() {
    return loanPaymentNumber;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanPaymentNumber(String loanPaymentNumber) {
    this.loanPaymentNumber = loanPaymentNumber;
  }


  public LoanPaymentDetailsLoan loanPaymentAddress(String loanPaymentAddress) {
    
    this.loanPaymentAddress = loanPaymentAddress;
    return this;
  }

   /**
   * The payment address to which send manual payments should be sent
   * @return loanPaymentAddress
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanPaymentAddress() {
    return loanPaymentAddress;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_PAYMENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanPaymentAddress(String loanPaymentAddress) {
    this.loanPaymentAddress = loanPaymentAddress;
  }


  public LoanPaymentDetailsLoan loanFuturePayoffAmount(BigDecimal loanFuturePayoffAmount) {
    
    this.loanFuturePayoffAmount = loanFuturePayoffAmount;
    return this;
  }

   /**
   * The payoff amount for the loan
   * @return loanFuturePayoffAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_FUTURE_PAYOFF_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoanFuturePayoffAmount() {
    return loanFuturePayoffAmount;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_FUTURE_PAYOFF_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanFuturePayoffAmount(BigDecimal loanFuturePayoffAmount) {
    this.loanFuturePayoffAmount = loanFuturePayoffAmount;
  }


  public LoanPaymentDetailsLoan loanFuturePayoffDate(OffsetDateTime loanFuturePayoffDate) {
    
    this.loanFuturePayoffDate = loanFuturePayoffDate;
    return this;
  }

   /**
   * The date to which the \&quot;Future Payoff Amount\&quot; applies
   * @return loanFuturePayoffDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOAN_FUTURE_PAYOFF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLoanFuturePayoffDate() {
    return loanFuturePayoffDate;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_FUTURE_PAYOFF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanFuturePayoffDate(OffsetDateTime loanFuturePayoffDate) {
    this.loanFuturePayoffDate = loanFuturePayoffDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanPaymentDetailsLoan loanPaymentDetailsLoan = (LoanPaymentDetailsLoan) o;
    return Objects.equals(this.accountId, loanPaymentDetailsLoan.accountId) &&
        Objects.equals(this.loanNumber, loanPaymentDetailsLoan.loanNumber) &&
        Objects.equals(this.loanPaymentNumber, loanPaymentDetailsLoan.loanPaymentNumber) &&
        Objects.equals(this.loanPaymentAddress, loanPaymentDetailsLoan.loanPaymentAddress) &&
        Objects.equals(this.loanFuturePayoffAmount, loanPaymentDetailsLoan.loanFuturePayoffAmount) &&
        Objects.equals(this.loanFuturePayoffDate, loanPaymentDetailsLoan.loanFuturePayoffDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, loanNumber, loanPaymentNumber, loanPaymentAddress, loanFuturePayoffAmount, loanFuturePayoffDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanPaymentDetailsLoan {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    loanNumber: ").append(toIndentedString(loanNumber)).append("\n");
    sb.append("    loanPaymentNumber: ").append(toIndentedString(loanPaymentNumber)).append("\n");
    sb.append("    loanPaymentAddress: ").append(toIndentedString(loanPaymentAddress)).append("\n");
    sb.append("    loanFuturePayoffAmount: ").append(toIndentedString(loanFuturePayoffAmount)).append("\n");
    sb.append("    loanFuturePayoffDate: ").append(toIndentedString(loanFuturePayoffDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

