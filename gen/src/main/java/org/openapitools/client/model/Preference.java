/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Preference
 */
@JsonPropertyOrder({
  Preference.JSON_PROPERTY_COLOR,
  Preference.JSON_PROPERTY_HIDE,
  Preference.JSON_PROPERTY_DEFAULT,
  Preference.JSON_PROPERTY_DEFAULT_PAGE
})
@JsonTypeName("preference")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Preference {
  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_HIDE = "hide";
  private Boolean hide;

  public static final String JSON_PROPERTY_DEFAULT = "default";
  private Boolean _default;

  public static final String JSON_PROPERTY_DEFAULT_PAGE = "default_page";
  private String defaultPage;

  public Preference() {
  }

  public Preference color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Default color for drive
   * @return color
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public Preference hide(Boolean hide) {
    
    this.hide = hide;
    return this;
  }

   /**
   * Is the drive hidden for the current user
   * @return hide
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHide() {
    return hide;
  }


  @JsonProperty(JSON_PROPERTY_HIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHide(Boolean hide) {
    this.hide = hide;
  }


  public Preference _default(Boolean _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * The default drive chosen by the user, if none the first drive in the list should be considered the default. There should only be one default drive.
   * @return _default
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefault() {
    return _default;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefault(Boolean _default) {
    this._default = _default;
  }


  public Preference defaultPage(String defaultPage) {
    
    this.defaultPage = defaultPage;
    return this;
  }

   /**
   * User&#39;s default landing page
   * @return defaultPage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultPage() {
    return defaultPage;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultPage(String defaultPage) {
    this.defaultPage = defaultPage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Preference preference = (Preference) o;
    return Objects.equals(this.color, preference.color) &&
        Objects.equals(this.hide, preference.hide) &&
        Objects.equals(this._default, preference._default) &&
        Objects.equals(this.defaultPage, preference.defaultPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, hide, _default, defaultPage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Preference {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    hide: ").append(toIndentedString(hide)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    defaultPage: ").append(toIndentedString(defaultPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

