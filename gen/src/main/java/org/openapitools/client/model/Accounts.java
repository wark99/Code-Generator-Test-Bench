/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.LastActivity;
import org.openapitools.client.model.Subscriber;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Accounts
 */
@JsonPropertyOrder({
  Accounts.JSON_PROPERTY_ACCOUNT_STATUS,
  Accounts.JSON_PROPERTY_ACCOUNTNUMBER,
  Accounts.JSON_PROPERTY_AVAILABLE_CREDIT,
  Accounts.JSON_PROPERTY_DEBT_COUNSELING_INDICATOR,
  Accounts.JSON_PROPERTY_LAST_ACTIVITY,
  Accounts.JSON_PROPERTY_NEW,
  Accounts.JSON_PROPERTY_PORTFOLIO_TYPE,
  Accounts.JSON_PROPERTY_SUBSCRIBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Accounts {
  public static final String JSON_PROPERTY_ACCOUNT_STATUS = "accountStatus";
  private String accountStatus;

  public static final String JSON_PROPERTY_ACCOUNTNUMBER = "accountnumber";
  private String accountnumber;

  public static final String JSON_PROPERTY_AVAILABLE_CREDIT = "availableCredit";
  private String availableCredit;

  public static final String JSON_PROPERTY_DEBT_COUNSELING_INDICATOR = "debtCounselingIndicator";
  private String debtCounselingIndicator;

  public static final String JSON_PROPERTY_LAST_ACTIVITY = "lastActivity";
  private LastActivity lastActivity;

  public static final String JSON_PROPERTY_NEW = "new";
  private Boolean _new;

  public static final String JSON_PROPERTY_PORTFOLIO_TYPE = "portfolioType";
  private String portfolioType;

  public static final String JSON_PROPERTY_SUBSCRIBER = "subscriber";
  private Subscriber subscriber;

  public Accounts() {
  }

  public Accounts accountStatus(String accountStatus) {
    
    this.accountStatus = accountStatus;
    return this;
  }

   /**
   * Get accountStatus
   * @return accountStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountStatus() {
    return accountStatus;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountStatus(String accountStatus) {
    this.accountStatus = accountStatus;
  }


  public Accounts accountnumber(String accountnumber) {
    
    this.accountnumber = accountnumber;
    return this;
  }

   /**
   * Get accountnumber
   * @return accountnumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTNUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountnumber() {
    return accountnumber;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTNUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountnumber(String accountnumber) {
    this.accountnumber = accountnumber;
  }


  public Accounts availableCredit(String availableCredit) {
    
    this.availableCredit = availableCredit;
    return this;
  }

   /**
   * Get availableCredit
   * @return availableCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvailableCredit() {
    return availableCredit;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableCredit(String availableCredit) {
    this.availableCredit = availableCredit;
  }


  public Accounts debtCounselingIndicator(String debtCounselingIndicator) {
    
    this.debtCounselingIndicator = debtCounselingIndicator;
    return this;
  }

   /**
   * Get debtCounselingIndicator
   * @return debtCounselingIndicator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBT_COUNSELING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtCounselingIndicator() {
    return debtCounselingIndicator;
  }


  @JsonProperty(JSON_PROPERTY_DEBT_COUNSELING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtCounselingIndicator(String debtCounselingIndicator) {
    this.debtCounselingIndicator = debtCounselingIndicator;
  }


  public Accounts lastActivity(LastActivity lastActivity) {
    
    this.lastActivity = lastActivity;
    return this;
  }

   /**
   * Get lastActivity
   * @return lastActivity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LastActivity getLastActivity() {
    return lastActivity;
  }


  @JsonProperty(JSON_PROPERTY_LAST_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastActivity(LastActivity lastActivity) {
    this.lastActivity = lastActivity;
  }


  public Accounts _new(Boolean _new) {
    
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNew() {
    return _new;
  }


  @JsonProperty(JSON_PROPERTY_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNew(Boolean _new) {
    this._new = _new;
  }


  public Accounts portfolioType(String portfolioType) {
    
    this.portfolioType = portfolioType;
    return this;
  }

   /**
   * Get portfolioType
   * @return portfolioType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortfolioType() {
    return portfolioType;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortfolioType(String portfolioType) {
    this.portfolioType = portfolioType;
  }


  public Accounts subscriber(Subscriber subscriber) {
    
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subscriber getSubscriber() {
    return subscriber;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriber(Subscriber subscriber) {
    this.subscriber = subscriber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Accounts accounts = (Accounts) o;
    return Objects.equals(this.accountStatus, accounts.accountStatus) &&
        Objects.equals(this.accountnumber, accounts.accountnumber) &&
        Objects.equals(this.availableCredit, accounts.availableCredit) &&
        Objects.equals(this.debtCounselingIndicator, accounts.debtCounselingIndicator) &&
        Objects.equals(this.lastActivity, accounts.lastActivity) &&
        Objects.equals(this._new, accounts._new) &&
        Objects.equals(this.portfolioType, accounts.portfolioType) &&
        Objects.equals(this.subscriber, accounts.subscriber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountStatus, accountnumber, availableCredit, debtCounselingIndicator, lastActivity, _new, portfolioType, subscriber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Accounts {\n");
    sb.append("    accountStatus: ").append(toIndentedString(accountStatus)).append("\n");
    sb.append("    accountnumber: ").append(toIndentedString(accountnumber)).append("\n");
    sb.append("    availableCredit: ").append(toIndentedString(availableCredit)).append("\n");
    sb.append("    debtCounselingIndicator: ").append(toIndentedString(debtCounselingIndicator)).append("\n");
    sb.append("    lastActivity: ").append(toIndentedString(lastActivity)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("    portfolioType: ").append(toIndentedString(portfolioType)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

