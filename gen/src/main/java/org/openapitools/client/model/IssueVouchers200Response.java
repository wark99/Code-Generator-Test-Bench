/*
 * UNIQREWARDS Client API v3
 * The UNIQREWARDS Client API v3 enables our clients to issue digital vouchers. Retrieval of product details, catalogues, and vouchers status and details is also supported by this API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support.api@uniqrewards.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Voucher;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IssueVouchers200Response
 */
@JsonPropertyOrder({
  IssueVouchers200Response.JSON_PROPERTY_REQUEST_ID,
  IssueVouchers200Response.JSON_PROPERTY_VOUCHERS
})
@JsonTypeName("issue_vouchers_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:16.719976364Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IssueVouchers200Response {
  public static final String JSON_PROPERTY_REQUEST_ID = "request_id";
  private UUID requestId;

  public static final String JSON_PROPERTY_VOUCHERS = "vouchers";
  private List<Voucher> vouchers;

  public IssueVouchers200Response() {
  }

  public IssueVouchers200Response requestId(UUID requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * The request ID in UUID v4 format, assigned by the API to the request.
   * @return requestId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(UUID requestId) {
    this.requestId = requestId;
  }


  public IssueVouchers200Response vouchers(List<Voucher> vouchers) {
    
    this.vouchers = vouchers;
    return this;
  }

  public IssueVouchers200Response addVouchersItem(Voucher vouchersItem) {
    if (this.vouchers == null) {
      this.vouchers = new ArrayList<>();
    }
    this.vouchers.add(vouchersItem);
    return this;
  }

   /**
   * Get vouchers
   * @return vouchers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOUCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Voucher> getVouchers() {
    return vouchers;
  }


  @JsonProperty(JSON_PROPERTY_VOUCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVouchers(List<Voucher> vouchers) {
    this.vouchers = vouchers;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueVouchers200Response issueVouchers200Response = (IssueVouchers200Response) o;
    return Objects.equals(this.requestId, issueVouchers200Response.requestId) &&
        Objects.equals(this.vouchers, issueVouchers200Response.vouchers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, vouchers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueVouchers200Response {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    vouchers: ").append(toIndentedString(vouchers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

