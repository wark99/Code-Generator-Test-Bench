/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Customer-level summary of transactions in a month
 */
@JsonPropertyOrder({
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_MONTH,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_AVERAGE_BALANCE,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_CLOSING_BALANCE,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_OPENING_BALANCE,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_TOTAL_DEPOSITS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_TOTAL_WITHDRAWALS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_NON_SUFFICIENT_FUNDS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_INSURANCE_PAYMENTS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_TAX_PAYMENTS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_RECURRING_EXPENSE_PAYMENTS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_MISSED_RECURRING_EXPENSE_PAYMENTS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_RECURRING_LOAN_PAYMENTS,
  PaymentHistoryCustomerMonthlySummary.JSON_PROPERTY_MISSED_RECURRING_LOAN_PAYMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:48:08.238993781Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentHistoryCustomerMonthlySummary {
  public static final String JSON_PROPERTY_MONTH = "month";
  private String month;

  public static final String JSON_PROPERTY_AVERAGE_BALANCE = "averageBalance";
  private BigDecimal averageBalance;

  public static final String JSON_PROPERTY_CLOSING_BALANCE = "closingBalance";
  private BigDecimal closingBalance;

  public static final String JSON_PROPERTY_OPENING_BALANCE = "openingBalance";
  private BigDecimal openingBalance;

  public static final String JSON_PROPERTY_TOTAL_DEPOSITS = "totalDeposits";
  private BigDecimal totalDeposits;

  public static final String JSON_PROPERTY_TOTAL_WITHDRAWALS = "totalWithdrawals";
  private BigDecimal totalWithdrawals;

  public static final String JSON_PROPERTY_NON_SUFFICIENT_FUNDS = "nonSufficientFunds";
  private BigDecimal nonSufficientFunds;

  public static final String JSON_PROPERTY_INSURANCE_PAYMENTS = "insurancePayments";
  private BigDecimal insurancePayments;

  public static final String JSON_PROPERTY_TAX_PAYMENTS = "taxPayments";
  private BigDecimal taxPayments;

  public static final String JSON_PROPERTY_RECURRING_EXPENSE_PAYMENTS = "recurringExpensePayments";
  private BigDecimal recurringExpensePayments;

  public static final String JSON_PROPERTY_MISSED_RECURRING_EXPENSE_PAYMENTS = "missedRecurringExpensePayments";
  private BigDecimal missedRecurringExpensePayments;

  public static final String JSON_PROPERTY_RECURRING_LOAN_PAYMENTS = "recurringLoanPayments";
  private BigDecimal recurringLoanPayments;

  public static final String JSON_PROPERTY_MISSED_RECURRING_LOAN_PAYMENTS = "missedRecurringLoanPayments";
  private BigDecimal missedRecurringLoanPayments;

  public PaymentHistoryCustomerMonthlySummary() {
  }

  public PaymentHistoryCustomerMonthlySummary month(String month) {
    
    this.month = month;
    return this;
  }

   /**
   * Date of the month
   * @return month
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonth(String month) {
    this.month = month;
  }


  public PaymentHistoryCustomerMonthlySummary averageBalance(BigDecimal averageBalance) {
    
    this.averageBalance = averageBalance;
    return this;
  }

   /**
   * Average balance for the month
   * @return averageBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageBalance() {
    return averageBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageBalance(BigDecimal averageBalance) {
    this.averageBalance = averageBalance;
  }


  public PaymentHistoryCustomerMonthlySummary closingBalance(BigDecimal closingBalance) {
    
    this.closingBalance = closingBalance;
    return this;
  }

   /**
   * Closing balance for the month
   * @return closingBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLOSING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getClosingBalance() {
    return closingBalance;
  }


  @JsonProperty(JSON_PROPERTY_CLOSING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClosingBalance(BigDecimal closingBalance) {
    this.closingBalance = closingBalance;
  }


  public PaymentHistoryCustomerMonthlySummary openingBalance(BigDecimal openingBalance) {
    
    this.openingBalance = openingBalance;
    return this;
  }

   /**
   * Opening balance for the month
   * @return openingBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPENING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getOpeningBalance() {
    return openingBalance;
  }


  @JsonProperty(JSON_PROPERTY_OPENING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpeningBalance(BigDecimal openingBalance) {
    this.openingBalance = openingBalance;
  }


  public PaymentHistoryCustomerMonthlySummary totalDeposits(BigDecimal totalDeposits) {
    
    this.totalDeposits = totalDeposits;
    return this;
  }

   /**
   * Total of deposit transactions for the month
   * @return totalDeposits
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalDeposits() {
    return totalDeposits;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalDeposits(BigDecimal totalDeposits) {
    this.totalDeposits = totalDeposits;
  }


  public PaymentHistoryCustomerMonthlySummary totalWithdrawals(BigDecimal totalWithdrawals) {
    
    this.totalWithdrawals = totalWithdrawals;
    return this;
  }

   /**
   * Total of withdrawal transactions for the month
   * @return totalWithdrawals
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHDRAWALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalWithdrawals() {
    return totalWithdrawals;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHDRAWALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalWithdrawals(BigDecimal totalWithdrawals) {
    this.totalWithdrawals = totalWithdrawals;
  }


  public PaymentHistoryCustomerMonthlySummary nonSufficientFunds(BigDecimal nonSufficientFunds) {
    
    this.nonSufficientFunds = nonSufficientFunds;
    return this;
  }

   /**
   * Total of NSF transactions for the month
   * @return nonSufficientFunds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NON_SUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getNonSufficientFunds() {
    return nonSufficientFunds;
  }


  @JsonProperty(JSON_PROPERTY_NON_SUFFICIENT_FUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNonSufficientFunds(BigDecimal nonSufficientFunds) {
    this.nonSufficientFunds = nonSufficientFunds;
  }


  public PaymentHistoryCustomerMonthlySummary insurancePayments(BigDecimal insurancePayments) {
    
    this.insurancePayments = insurancePayments;
    return this;
  }

   /**
   * Total of insurance payment transactions for the month
   * @return insurancePayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSURANCE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getInsurancePayments() {
    return insurancePayments;
  }


  @JsonProperty(JSON_PROPERTY_INSURANCE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInsurancePayments(BigDecimal insurancePayments) {
    this.insurancePayments = insurancePayments;
  }


  public PaymentHistoryCustomerMonthlySummary taxPayments(BigDecimal taxPayments) {
    
    this.taxPayments = taxPayments;
    return this;
  }

   /**
   * Total of tax payment transactions for the month
   * @return taxPayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAX_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTaxPayments() {
    return taxPayments;
  }


  @JsonProperty(JSON_PROPERTY_TAX_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaxPayments(BigDecimal taxPayments) {
    this.taxPayments = taxPayments;
  }


  public PaymentHistoryCustomerMonthlySummary recurringExpensePayments(BigDecimal recurringExpensePayments) {
    
    this.recurringExpensePayments = recurringExpensePayments;
    return this;
  }

   /**
   * Total of recurring expense payment transactions for the month
   * @return recurringExpensePayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECURRING_EXPENSE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getRecurringExpensePayments() {
    return recurringExpensePayments;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_EXPENSE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecurringExpensePayments(BigDecimal recurringExpensePayments) {
    this.recurringExpensePayments = recurringExpensePayments;
  }


  public PaymentHistoryCustomerMonthlySummary missedRecurringExpensePayments(BigDecimal missedRecurringExpensePayments) {
    
    this.missedRecurringExpensePayments = missedRecurringExpensePayments;
    return this;
  }

   /**
   * Total of missed recurring expense payment transactions for the month
   * @return missedRecurringExpensePayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MISSED_RECURRING_EXPENSE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMissedRecurringExpensePayments() {
    return missedRecurringExpensePayments;
  }


  @JsonProperty(JSON_PROPERTY_MISSED_RECURRING_EXPENSE_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMissedRecurringExpensePayments(BigDecimal missedRecurringExpensePayments) {
    this.missedRecurringExpensePayments = missedRecurringExpensePayments;
  }


  public PaymentHistoryCustomerMonthlySummary recurringLoanPayments(BigDecimal recurringLoanPayments) {
    
    this.recurringLoanPayments = recurringLoanPayments;
    return this;
  }

   /**
   * Total of recurring loan payment transactions for the month
   * @return recurringLoanPayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECURRING_LOAN_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getRecurringLoanPayments() {
    return recurringLoanPayments;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_LOAN_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecurringLoanPayments(BigDecimal recurringLoanPayments) {
    this.recurringLoanPayments = recurringLoanPayments;
  }


  public PaymentHistoryCustomerMonthlySummary missedRecurringLoanPayments(BigDecimal missedRecurringLoanPayments) {
    
    this.missedRecurringLoanPayments = missedRecurringLoanPayments;
    return this;
  }

   /**
   * Total of missed recurring loan payment transactions for the month
   * @return missedRecurringLoanPayments
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MISSED_RECURRING_LOAN_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMissedRecurringLoanPayments() {
    return missedRecurringLoanPayments;
  }


  @JsonProperty(JSON_PROPERTY_MISSED_RECURRING_LOAN_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMissedRecurringLoanPayments(BigDecimal missedRecurringLoanPayments) {
    this.missedRecurringLoanPayments = missedRecurringLoanPayments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentHistoryCustomerMonthlySummary paymentHistoryCustomerMonthlySummary = (PaymentHistoryCustomerMonthlySummary) o;
    return Objects.equals(this.month, paymentHistoryCustomerMonthlySummary.month) &&
        Objects.equals(this.averageBalance, paymentHistoryCustomerMonthlySummary.averageBalance) &&
        Objects.equals(this.closingBalance, paymentHistoryCustomerMonthlySummary.closingBalance) &&
        Objects.equals(this.openingBalance, paymentHistoryCustomerMonthlySummary.openingBalance) &&
        Objects.equals(this.totalDeposits, paymentHistoryCustomerMonthlySummary.totalDeposits) &&
        Objects.equals(this.totalWithdrawals, paymentHistoryCustomerMonthlySummary.totalWithdrawals) &&
        Objects.equals(this.nonSufficientFunds, paymentHistoryCustomerMonthlySummary.nonSufficientFunds) &&
        Objects.equals(this.insurancePayments, paymentHistoryCustomerMonthlySummary.insurancePayments) &&
        Objects.equals(this.taxPayments, paymentHistoryCustomerMonthlySummary.taxPayments) &&
        Objects.equals(this.recurringExpensePayments, paymentHistoryCustomerMonthlySummary.recurringExpensePayments) &&
        Objects.equals(this.missedRecurringExpensePayments, paymentHistoryCustomerMonthlySummary.missedRecurringExpensePayments) &&
        Objects.equals(this.recurringLoanPayments, paymentHistoryCustomerMonthlySummary.recurringLoanPayments) &&
        Objects.equals(this.missedRecurringLoanPayments, paymentHistoryCustomerMonthlySummary.missedRecurringLoanPayments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, averageBalance, closingBalance, openingBalance, totalDeposits, totalWithdrawals, nonSufficientFunds, insurancePayments, taxPayments, recurringExpensePayments, missedRecurringExpensePayments, recurringLoanPayments, missedRecurringLoanPayments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentHistoryCustomerMonthlySummary {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    averageBalance: ").append(toIndentedString(averageBalance)).append("\n");
    sb.append("    closingBalance: ").append(toIndentedString(closingBalance)).append("\n");
    sb.append("    openingBalance: ").append(toIndentedString(openingBalance)).append("\n");
    sb.append("    totalDeposits: ").append(toIndentedString(totalDeposits)).append("\n");
    sb.append("    totalWithdrawals: ").append(toIndentedString(totalWithdrawals)).append("\n");
    sb.append("    nonSufficientFunds: ").append(toIndentedString(nonSufficientFunds)).append("\n");
    sb.append("    insurancePayments: ").append(toIndentedString(insurancePayments)).append("\n");
    sb.append("    taxPayments: ").append(toIndentedString(taxPayments)).append("\n");
    sb.append("    recurringExpensePayments: ").append(toIndentedString(recurringExpensePayments)).append("\n");
    sb.append("    missedRecurringExpensePayments: ").append(toIndentedString(missedRecurringExpensePayments)).append("\n");
    sb.append("    recurringLoanPayments: ").append(toIndentedString(recurringLoanPayments)).append("\n");
    sb.append("    missedRecurringLoanPayments: ").append(toIndentedString(missedRecurringLoanPayments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

