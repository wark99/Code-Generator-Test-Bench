/*
 * ClosedNetwork-DEV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Story;
import org.openapitools.client.model.StoryUser;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ViewersStory
 */
@JsonPropertyOrder({
  ViewersStory.JSON_PROPERTY_ID,
  ViewersStory.JSON_PROPERTY_USER,
  ViewersStory.JSON_PROPERTY_VISIBILITY,
  ViewersStory.JSON_PROPERTY_CONTENT_TYPE,
  ViewersStory.JSON_PROPERTY_CONTENT_URL,
  ViewersStory.JSON_PROPERTY_THUBMNAIL_URL,
  ViewersStory.JSON_PROPERTY_CAPTION,
  ViewersStory.JSON_PROPERTY_TAGS,
  ViewersStory.JSON_PROPERTY_COLLEGE,
  ViewersStory.JSON_PROPERTY_EXPIRES_AT,
  ViewersStory.JSON_PROPERTY_CREATED_AT,
  ViewersStory.JSON_PROPERTY_UPDATED_AT,
  ViewersStory.JSON_PROPERTY_V
})
@JsonTypeName("Viewers_story")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:50.441407861Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ViewersStory {
  public static final String JSON_PROPERTY_ID = "_id";
  private Object id = null;

  public static final String JSON_PROPERTY_USER = "user";
  private StoryUser user;

  /**
   * Gets or Sets visibility
   */
  public enum VisibilityEnum {
    PUBLIC("Public"),
    
    FRIENDS_ONLY("Friends-Only");

    private Object value;

    VisibilityEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(Object value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility = null;

  /**
   * Gets or Sets contentType
   */
  public enum ContentTypeEnum {
    IMAGE("Image"),
    
    VIDEO("Video");

    private Object value;

    ContentTypeEnum(Object value) {
      this.value = value;
    }

    @JsonValue
    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ContentTypeEnum fromValue(Object value) {
      for (ContentTypeEnum b : ContentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
  private ContentTypeEnum contentType = null;

  public static final String JSON_PROPERTY_CONTENT_URL = "contentUrl";
  private Object contentUrl = null;

  public static final String JSON_PROPERTY_THUBMNAIL_URL = "thubmnailUrl";
  private Object thubmnailUrl = null;

  public static final String JSON_PROPERTY_CAPTION = "caption";
  private JsonNullable<Object> caption = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Object tags = null;

  public static final String JSON_PROPERTY_COLLEGE = "college";
  private Object college = null;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expiresAt";
  private Object expiresAt = null;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private Object createdAt = null;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private Object updatedAt = null;

  public static final String JSON_PROPERTY_V = "__v";
  private JsonNullable<Object> v = JsonNullable.<Object>of(null);

  public ViewersStory() {
  }

  public ViewersStory id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Object id) {
    this.id = id;
  }


  public ViewersStory user(StoryUser user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StoryUser getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUser(StoryUser user) {
    this.user = user;
  }


  public ViewersStory visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public ViewersStory contentType(ContentTypeEnum contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ContentTypeEnum getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentType(ContentTypeEnum contentType) {
    this.contentType = contentType;
  }


  public ViewersStory contentUrl(Object contentUrl) {
    
    this.contentUrl = contentUrl;
    return this;
  }

   /**
   * Get contentUrl
   * @return contentUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getContentUrl() {
    return contentUrl;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentUrl(Object contentUrl) {
    this.contentUrl = contentUrl;
  }


  public ViewersStory thubmnailUrl(Object thubmnailUrl) {
    
    this.thubmnailUrl = thubmnailUrl;
    return this;
  }

   /**
   * Get thubmnailUrl
   * @return thubmnailUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUBMNAIL_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getThubmnailUrl() {
    return thubmnailUrl;
  }


  @JsonProperty(JSON_PROPERTY_THUBMNAIL_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setThubmnailUrl(Object thubmnailUrl) {
    this.thubmnailUrl = thubmnailUrl;
  }


  public ViewersStory caption(Object caption) {
    this.caption = JsonNullable.<Object>of(caption);
    
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCaption() {
        return caption.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCaption_JsonNullable() {
    return caption;
  }
  
  @JsonProperty(JSON_PROPERTY_CAPTION)
  public void setCaption_JsonNullable(JsonNullable<Object> caption) {
    this.caption = caption;
  }

  public void setCaption(Object caption) {
    this.caption = JsonNullable.<Object>of(caption);
  }


  public ViewersStory tags(Object tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(Object tags) {
    this.tags = tags;
  }


  public ViewersStory college(Object college) {
    
    this.college = college;
    return this;
  }

   /**
   * Get college
   * @return college
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLEGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCollege() {
    return college;
  }


  @JsonProperty(JSON_PROPERTY_COLLEGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCollege(Object college) {
    this.college = college;
  }


  public ViewersStory expiresAt(Object expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresAt(Object expiresAt) {
    this.expiresAt = expiresAt;
  }


  public ViewersStory createdAt(Object createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Object createdAt) {
    this.createdAt = createdAt;
  }


  public ViewersStory updatedAt(Object updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Object updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ViewersStory v(Object v) {
    this.v = JsonNullable.<Object>of(v);
    
    return this;
  }

   /**
   * Get v
   * @return v
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getV() {
        return v.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_V)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getV_JsonNullable() {
    return v;
  }
  
  @JsonProperty(JSON_PROPERTY_V)
  public void setV_JsonNullable(JsonNullable<Object> v) {
    this.v = v;
  }

  public void setV(Object v) {
    this.v = JsonNullable.<Object>of(v);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewersStory viewersStory = (ViewersStory) o;
    return Objects.equals(this.id, viewersStory.id) &&
        Objects.equals(this.user, viewersStory.user) &&
        Objects.equals(this.visibility, viewersStory.visibility) &&
        Objects.equals(this.contentType, viewersStory.contentType) &&
        Objects.equals(this.contentUrl, viewersStory.contentUrl) &&
        Objects.equals(this.thubmnailUrl, viewersStory.thubmnailUrl) &&
        equalsNullable(this.caption, viewersStory.caption) &&
        Objects.equals(this.tags, viewersStory.tags) &&
        Objects.equals(this.college, viewersStory.college) &&
        Objects.equals(this.expiresAt, viewersStory.expiresAt) &&
        Objects.equals(this.createdAt, viewersStory.createdAt) &&
        Objects.equals(this.updatedAt, viewersStory.updatedAt) &&
        equalsNullable(this.v, viewersStory.v);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, user, visibility, contentType, contentUrl, thubmnailUrl, hashCodeNullable(caption), tags, college, expiresAt, createdAt, updatedAt, hashCodeNullable(v));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewersStory {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("    thubmnailUrl: ").append(toIndentedString(thubmnailUrl)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    college: ").append(toIndentedString(college)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    v: ").append(toIndentedString(v)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

