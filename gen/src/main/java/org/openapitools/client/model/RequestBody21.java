/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RequestBody21
 */
@JsonPropertyOrder({
  RequestBody21.JSON_PROPERTY_BITRATE,
  RequestBody21.JSON_PROPERTY_CODEC,
  RequestBody21.JSON_PROPERTY_COUNTRY_LIST,
  RequestBody21.JSON_PROPERTY_FALLBACK_IS_ACTIVE_RELAY,
  RequestBody21.JSON_PROPERTY_FALLBACK_RELAY_MOUNTPOINT,
  RequestBody21.JSON_PROPERTY_FALLBACK_RELAY_PORT,
  RequestBody21.JSON_PROPERTY_FALLBACK_RELAY_SERVER,
  RequestBody21.JSON_PROPERTY_HASH_KEY,
  RequestBody21.JSON_PROPERTY_IP_EXCLUDE_LIST,
  RequestBody21.JSON_PROPERTY_IP_INCLUDE_LIST,
  RequestBody21.JSON_PROPERTY_IS_ACTIVE_RELAY,
  RequestBody21.JSON_PROPERTY_IS_ALLOW_COUNTRY,
  RequestBody21.JSON_PROPERTY_IS_FALLBACK,
  RequestBody21.JSON_PROPERTY_IS_HASH_RESTRICTION,
  RequestBody21.JSON_PROPERTY_MOUNTPOINT,
  RequestBody21.JSON_PROPERTY_PASSWORD,
  RequestBody21.JSON_PROPERTY_RELAY_MOUNTPOINT,
  RequestBody21.JSON_PROPERTY_RELAY_PORT,
  RequestBody21.JSON_PROPERTY_RELAY_SERVER
})
@JsonTypeName("Request_body_21")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RequestBody21 {
  /**
   * Specify the bitrate of the stream
   */
  public enum BitrateEnum {
    NUMBER_24(24),
    
    NUMBER_32(32),
    
    NUMBER_48(48),
    
    NUMBER_64(64),
    
    NUMBER_96(96),
    
    NUMBER_128(128),
    
    NUMBER_192(192),
    
    NUMBER_256(256),
    
    NUMBER_320(320),
    
    NUMBER_512(512);

    private Integer value;

    BitrateEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BitrateEnum fromValue(Integer value) {
      for (BitrateEnum b : BitrateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BITRATE = "bitrate";
  private BitrateEnum bitrate;

  /**
   * Specify the codec of the stream
   */
  public enum CodecEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    CodecEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CodecEnum fromValue(Integer value) {
      for (CodecEnum b : CodecEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CODEC = "codec";
  private CodecEnum codec;

  public static final String JSON_PROPERTY_COUNTRY_LIST = "country_list";
  private String countryList;

  public static final String JSON_PROPERTY_FALLBACK_IS_ACTIVE_RELAY = "fallback_is_active_relay";
  private Boolean fallbackIsActiveRelay;

  public static final String JSON_PROPERTY_FALLBACK_RELAY_MOUNTPOINT = "fallback_relay_mountpoint";
  private String fallbackRelayMountpoint;

  public static final String JSON_PROPERTY_FALLBACK_RELAY_PORT = "fallback_relay_port";
  private Integer fallbackRelayPort;

  public static final String JSON_PROPERTY_FALLBACK_RELAY_SERVER = "fallback_relay_server";
  private String fallbackRelayServer;

  public static final String JSON_PROPERTY_HASH_KEY = "hash_key";
  private String hashKey;

  public static final String JSON_PROPERTY_IP_EXCLUDE_LIST = "ip_exclude_list";
  private String ipExcludeList;

  public static final String JSON_PROPERTY_IP_INCLUDE_LIST = "ip_include_list";
  private String ipIncludeList;

  public static final String JSON_PROPERTY_IS_ACTIVE_RELAY = "is_active_relay";
  private Boolean isActiveRelay;

  public static final String JSON_PROPERTY_IS_ALLOW_COUNTRY = "is_allow_country";
  private Boolean isAllowCountry;

  public static final String JSON_PROPERTY_IS_FALLBACK = "is_fallback";
  private Boolean isFallback;

  public static final String JSON_PROPERTY_IS_HASH_RESTRICTION = "is_hash_restriction";
  private Boolean isHashRestriction;

  public static final String JSON_PROPERTY_MOUNTPOINT = "mountpoint";
  private String mountpoint;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_RELAY_MOUNTPOINT = "relay_mountpoint";
  private String relayMountpoint;

  public static final String JSON_PROPERTY_RELAY_PORT = "relay_port";
  private Integer relayPort;

  public static final String JSON_PROPERTY_RELAY_SERVER = "relay_server";
  private String relayServer;

  public RequestBody21() {
  }

  public RequestBody21 bitrate(BitrateEnum bitrate) {
    
    this.bitrate = bitrate;
    return this;
  }

   /**
   * Specify the bitrate of the stream
   * @return bitrate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BITRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BitrateEnum getBitrate() {
    return bitrate;
  }


  @JsonProperty(JSON_PROPERTY_BITRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitrate(BitrateEnum bitrate) {
    this.bitrate = bitrate;
  }


  public RequestBody21 codec(CodecEnum codec) {
    
    this.codec = codec;
    return this;
  }

   /**
   * Specify the codec of the stream
   * @return codec
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CodecEnum getCodec() {
    return codec;
  }


  @JsonProperty(JSON_PROPERTY_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodec(CodecEnum codec) {
    this.codec = codec;
  }


  public RequestBody21 countryList(String countryList) {
    
    this.countryList = countryList;
    return this;
  }

   /**
   * Specify the country list not allow accessing to the stream
   * @return countryList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryList() {
    return countryList;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryList(String countryList) {
    this.countryList = countryList;
  }


  public RequestBody21 fallbackIsActiveRelay(Boolean fallbackIsActiveRelay) {
    
    this.fallbackIsActiveRelay = fallbackIsActiveRelay;
    return this;
  }

   /**
   * Specify if the fallback is a relay stream
   * @return fallbackIsActiveRelay
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK_IS_ACTIVE_RELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFallbackIsActiveRelay() {
    return fallbackIsActiveRelay;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK_IS_ACTIVE_RELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackIsActiveRelay(Boolean fallbackIsActiveRelay) {
    this.fallbackIsActiveRelay = fallbackIsActiveRelay;
  }


  public RequestBody21 fallbackRelayMountpoint(String fallbackRelayMountpoint) {
    
    this.fallbackRelayMountpoint = fallbackRelayMountpoint;
    return this;
  }

   /**
   * Specify the relay mountpoint for the fallback
   * @return fallbackRelayMountpoint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFallbackRelayMountpoint() {
    return fallbackRelayMountpoint;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackRelayMountpoint(String fallbackRelayMountpoint) {
    this.fallbackRelayMountpoint = fallbackRelayMountpoint;
  }


  public RequestBody21 fallbackRelayPort(Integer fallbackRelayPort) {
    
    this.fallbackRelayPort = fallbackRelayPort;
    return this;
  }

   /**
   * Specify the relay server port for the fallback
   * minimum: 1
   * maximum: 65535
   * @return fallbackRelayPort
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFallbackRelayPort() {
    return fallbackRelayPort;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackRelayPort(Integer fallbackRelayPort) {
    this.fallbackRelayPort = fallbackRelayPort;
  }


  public RequestBody21 fallbackRelayServer(String fallbackRelayServer) {
    
    this.fallbackRelayServer = fallbackRelayServer;
    return this;
  }

   /**
   * Specify the relay server domain for the fallback
   * @return fallbackRelayServer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFallbackRelayServer() {
    return fallbackRelayServer;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK_RELAY_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackRelayServer(String fallbackRelayServer) {
    this.fallbackRelayServer = fallbackRelayServer;
  }


  public RequestBody21 hashKey(String hashKey) {
    
    this.hashKey = hashKey;
    return this;
  }

   /**
   * Specify the token to protect the stream
   * @return hashKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HASH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHashKey() {
    return hashKey;
  }


  @JsonProperty(JSON_PROPERTY_HASH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHashKey(String hashKey) {
    this.hashKey = hashKey;
  }


  public RequestBody21 ipExcludeList(String ipExcludeList) {
    
    this.ipExcludeList = ipExcludeList;
    return this;
  }

   /**
   * Specify the ip list not allow accessing to the stream
   * @return ipExcludeList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_EXCLUDE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpExcludeList() {
    return ipExcludeList;
  }


  @JsonProperty(JSON_PROPERTY_IP_EXCLUDE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpExcludeList(String ipExcludeList) {
    this.ipExcludeList = ipExcludeList;
  }


  public RequestBody21 ipIncludeList(String ipIncludeList) {
    
    this.ipIncludeList = ipIncludeList;
    return this;
  }

   /**
   * Specify the ip list allow accessing to the stream
   * @return ipIncludeList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_INCLUDE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpIncludeList() {
    return ipIncludeList;
  }


  @JsonProperty(JSON_PROPERTY_IP_INCLUDE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpIncludeList(String ipIncludeList) {
    this.ipIncludeList = ipIncludeList;
  }


  public RequestBody21 isActiveRelay(Boolean isActiveRelay) {
    
    this.isActiveRelay = isActiveRelay;
    return this;
  }

   /**
   * Specify if this is a relay stream
   * @return isActiveRelay
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ACTIVE_RELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsActiveRelay() {
    return isActiveRelay;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE_RELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsActiveRelay(Boolean isActiveRelay) {
    this.isActiveRelay = isActiveRelay;
  }


  public RequestBody21 isAllowCountry(Boolean isAllowCountry) {
    
    this.isAllowCountry = isAllowCountry;
    return this;
  }

   /**
   * Specify if the access restriction rules is enabled
   * @return isAllowCountry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ALLOW_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAllowCountry() {
    return isAllowCountry;
  }


  @JsonProperty(JSON_PROPERTY_IS_ALLOW_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAllowCountry(Boolean isAllowCountry) {
    this.isAllowCountry = isAllowCountry;
  }


  public RequestBody21 isFallback(Boolean isFallback) {
    
    this.isFallback = isFallback;
    return this;
  }

   /**
   * Specify is the new stream have a fallback
   * @return isFallback
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFallback() {
    return isFallback;
  }


  @JsonProperty(JSON_PROPERTY_IS_FALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFallback(Boolean isFallback) {
    this.isFallback = isFallback;
  }


  public RequestBody21 isHashRestriction(Boolean isHashRestriction) {
    
    this.isHashRestriction = isHashRestriction;
    return this;
  }

   /**
   * Specify if the access restriction rules is enabled
   * @return isHashRestriction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_HASH_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsHashRestriction() {
    return isHashRestriction;
  }


  @JsonProperty(JSON_PROPERTY_IS_HASH_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHashRestriction(Boolean isHashRestriction) {
    this.isHashRestriction = isHashRestriction;
  }


  public RequestBody21 mountpoint(String mountpoint) {
    
    this.mountpoint = mountpoint;
    return this;
  }

   /**
   * Specify the mountpoint of the stream
   * @return mountpoint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMountpoint() {
    return mountpoint;
  }


  @JsonProperty(JSON_PROPERTY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMountpoint(String mountpoint) {
    this.mountpoint = mountpoint;
  }


  public RequestBody21 password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Specify the password of the stream
   * @return password
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public RequestBody21 relayMountpoint(String relayMountpoint) {
    
    this.relayMountpoint = relayMountpoint;
    return this;
  }

   /**
   * Specify the relay mountpoint
   * @return relayMountpoint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELAY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRelayMountpoint() {
    return relayMountpoint;
  }


  @JsonProperty(JSON_PROPERTY_RELAY_MOUNTPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelayMountpoint(String relayMountpoint) {
    this.relayMountpoint = relayMountpoint;
  }


  public RequestBody21 relayPort(Integer relayPort) {
    
    this.relayPort = relayPort;
    return this;
  }

   /**
   * Specify the relay server port
   * minimum: 1
   * maximum: 65535
   * @return relayPort
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELAY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRelayPort() {
    return relayPort;
  }


  @JsonProperty(JSON_PROPERTY_RELAY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelayPort(Integer relayPort) {
    this.relayPort = relayPort;
  }


  public RequestBody21 relayServer(String relayServer) {
    
    this.relayServer = relayServer;
    return this;
  }

   /**
   * Specify the relay server domain
   * @return relayServer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELAY_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRelayServer() {
    return relayServer;
  }


  @JsonProperty(JSON_PROPERTY_RELAY_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelayServer(String relayServer) {
    this.relayServer = relayServer;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBody21 requestBody21 = (RequestBody21) o;
    return Objects.equals(this.bitrate, requestBody21.bitrate) &&
        Objects.equals(this.codec, requestBody21.codec) &&
        Objects.equals(this.countryList, requestBody21.countryList) &&
        Objects.equals(this.fallbackIsActiveRelay, requestBody21.fallbackIsActiveRelay) &&
        Objects.equals(this.fallbackRelayMountpoint, requestBody21.fallbackRelayMountpoint) &&
        Objects.equals(this.fallbackRelayPort, requestBody21.fallbackRelayPort) &&
        Objects.equals(this.fallbackRelayServer, requestBody21.fallbackRelayServer) &&
        Objects.equals(this.hashKey, requestBody21.hashKey) &&
        Objects.equals(this.ipExcludeList, requestBody21.ipExcludeList) &&
        Objects.equals(this.ipIncludeList, requestBody21.ipIncludeList) &&
        Objects.equals(this.isActiveRelay, requestBody21.isActiveRelay) &&
        Objects.equals(this.isAllowCountry, requestBody21.isAllowCountry) &&
        Objects.equals(this.isFallback, requestBody21.isFallback) &&
        Objects.equals(this.isHashRestriction, requestBody21.isHashRestriction) &&
        Objects.equals(this.mountpoint, requestBody21.mountpoint) &&
        Objects.equals(this.password, requestBody21.password) &&
        Objects.equals(this.relayMountpoint, requestBody21.relayMountpoint) &&
        Objects.equals(this.relayPort, requestBody21.relayPort) &&
        Objects.equals(this.relayServer, requestBody21.relayServer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrate, codec, countryList, fallbackIsActiveRelay, fallbackRelayMountpoint, fallbackRelayPort, fallbackRelayServer, hashKey, ipExcludeList, ipIncludeList, isActiveRelay, isAllowCountry, isFallback, isHashRestriction, mountpoint, password, relayMountpoint, relayPort, relayServer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBody21 {\n");
    sb.append("    bitrate: ").append(toIndentedString(bitrate)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    countryList: ").append(toIndentedString(countryList)).append("\n");
    sb.append("    fallbackIsActiveRelay: ").append(toIndentedString(fallbackIsActiveRelay)).append("\n");
    sb.append("    fallbackRelayMountpoint: ").append(toIndentedString(fallbackRelayMountpoint)).append("\n");
    sb.append("    fallbackRelayPort: ").append(toIndentedString(fallbackRelayPort)).append("\n");
    sb.append("    fallbackRelayServer: ").append(toIndentedString(fallbackRelayServer)).append("\n");
    sb.append("    hashKey: ").append(toIndentedString(hashKey)).append("\n");
    sb.append("    ipExcludeList: ").append(toIndentedString(ipExcludeList)).append("\n");
    sb.append("    ipIncludeList: ").append(toIndentedString(ipIncludeList)).append("\n");
    sb.append("    isActiveRelay: ").append(toIndentedString(isActiveRelay)).append("\n");
    sb.append("    isAllowCountry: ").append(toIndentedString(isAllowCountry)).append("\n");
    sb.append("    isFallback: ").append(toIndentedString(isFallback)).append("\n");
    sb.append("    isHashRestriction: ").append(toIndentedString(isHashRestriction)).append("\n");
    sb.append("    mountpoint: ").append(toIndentedString(mountpoint)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    relayMountpoint: ").append(toIndentedString(relayMountpoint)).append("\n");
    sb.append("    relayPort: ").append(toIndentedString(relayPort)).append("\n");
    sb.append("    relayServer: ").append(toIndentedString(relayServer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

