/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ConsumerInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Borrower
 */
@JsonPropertyOrder({
  Borrower.JSON_PROPERTY_CUSTOMER_ID,
  Borrower.JSON_PROPERTY_CONSUMER_ID,
  Borrower.JSON_PROPERTY_TYPE,
  Borrower.JSON_PROPERTY_OPTIONAL_CONSUMER_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:05:06.990716937Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Borrower {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_CONSUMER_ID = "consumerId";
  private String consumerId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_OPTIONAL_CONSUMER_INFO = "optionalConsumerInfo";
  private ConsumerInfo optionalConsumerInfo;

  public Borrower() {
  }

  public Borrower customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID. See Add Customer API for how to create a customer ID.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public Borrower consumerId(String consumerId) {
    
    this.consumerId = consumerId;
    return this;
  }

   /**
   * A consumer ID. See Create Consumer API for how to create a consumer ID.
   * @return consumerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumerId() {
    return consumerId;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumerId(String consumerId) {
    this.consumerId = consumerId;
  }


  public Borrower type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * \&quot;primary\&quot; or \&quot;jointBorrower\&quot;
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public Borrower optionalConsumerInfo(ConsumerInfo optionalConsumerInfo) {
    
    this.optionalConsumerInfo = optionalConsumerInfo;
    return this;
  }

   /**
   * Get optionalConsumerInfo
   * @return optionalConsumerInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONAL_CONSUMER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsumerInfo getOptionalConsumerInfo() {
    return optionalConsumerInfo;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONAL_CONSUMER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionalConsumerInfo(ConsumerInfo optionalConsumerInfo) {
    this.optionalConsumerInfo = optionalConsumerInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Borrower borrower = (Borrower) o;
    return Objects.equals(this.customerId, borrower.customerId) &&
        Objects.equals(this.consumerId, borrower.consumerId) &&
        Objects.equals(this.type, borrower.type) &&
        Objects.equals(this.optionalConsumerInfo, borrower.optionalConsumerInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, consumerId, type, optionalConsumerInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Borrower {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    optionalConsumerInfo: ").append(toIndentedString(optionalConsumerInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

