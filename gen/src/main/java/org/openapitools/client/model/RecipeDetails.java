/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CuisineSummary;
import org.openapitools.client.model.DishSummary;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RecipeDetails
 */
@JsonPropertyOrder({
  RecipeDetails.JSON_PROPERTY_ID,
  RecipeDetails.JSON_PROPERTY_NAME,
  RecipeDetails.JSON_PROPERTY_DESCRIPTION,
  RecipeDetails.JSON_PROPERTY_INSTRUCTIONS,
  RecipeDetails.JSON_PROPERTY_INGREDIENTS,
  RecipeDetails.JSON_PROPERTY_IMAGES,
  RecipeDetails.JSON_PROPERTY_PREP_TIME,
  RecipeDetails.JSON_PROPERTY_COOK_TIME,
  RecipeDetails.JSON_PROPERTY_SERVING_SIZE,
  RecipeDetails.JSON_PROPERTY_ALLERGENS,
  RecipeDetails.JSON_PROPERTY_CUISINE,
  RecipeDetails.JSON_PROPERTY_DISH,
  RecipeDetails.JSON_PROPERTY_RATING,
  RecipeDetails.JSON_PROPERTY_RATINGS_COUNT,
  RecipeDetails.JSON_PROPERTY_AUTHOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:19:30.095527364Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RecipeDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_INSTRUCTIONS = "instructions";
  private List<String> instructions;

  public static final String JSON_PROPERTY_INGREDIENTS = "ingredients";
  private List<String> ingredients;

  public static final String JSON_PROPERTY_IMAGES = "images";
  private List<URI> images;

  public static final String JSON_PROPERTY_PREP_TIME = "prepTime";
  private String prepTime;

  public static final String JSON_PROPERTY_COOK_TIME = "cookTime";
  private String cookTime;

  public static final String JSON_PROPERTY_SERVING_SIZE = "servingSize";
  private Integer servingSize;

  public static final String JSON_PROPERTY_ALLERGENS = "allergens";
  private List<String> allergens;

  public static final String JSON_PROPERTY_CUISINE = "cuisine";
  private CuisineSummary cuisine;

  public static final String JSON_PROPERTY_DISH = "dish";
  private DishSummary dish;

  public static final String JSON_PROPERTY_RATING = "rating";
  private Float rating;

  public static final String JSON_PROPERTY_RATINGS_COUNT = "ratingsCount";
  private Integer ratingsCount;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public RecipeDetails() {
  }

  public RecipeDetails id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public RecipeDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RecipeDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RecipeDetails instructions(List<String> instructions) {
    
    this.instructions = instructions;
    return this;
  }

  public RecipeDetails addInstructionsItem(String instructionsItem) {
    if (this.instructions == null) {
      this.instructions = new ArrayList<>();
    }
    this.instructions.add(instructionsItem);
    return this;
  }

   /**
   * Get instructions
   * @return instructions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getInstructions() {
    return instructions;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstructions(List<String> instructions) {
    this.instructions = instructions;
  }


  public RecipeDetails ingredients(List<String> ingredients) {
    
    this.ingredients = ingredients;
    return this;
  }

  public RecipeDetails addIngredientsItem(String ingredientsItem) {
    if (this.ingredients == null) {
      this.ingredients = new ArrayList<>();
    }
    this.ingredients.add(ingredientsItem);
    return this;
  }

   /**
   * Get ingredients
   * @return ingredients
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INGREDIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIngredients() {
    return ingredients;
  }


  @JsonProperty(JSON_PROPERTY_INGREDIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIngredients(List<String> ingredients) {
    this.ingredients = ingredients;
  }


  public RecipeDetails images(List<URI> images) {
    
    this.images = images;
    return this;
  }

  public RecipeDetails addImagesItem(URI imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<URI> getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImages(List<URI> images) {
    this.images = images;
  }


  public RecipeDetails prepTime(String prepTime) {
    
    this.prepTime = prepTime;
    return this;
  }

   /**
   * Get prepTime
   * @return prepTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrepTime() {
    return prepTime;
  }


  @JsonProperty(JSON_PROPERTY_PREP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrepTime(String prepTime) {
    this.prepTime = prepTime;
  }


  public RecipeDetails cookTime(String cookTime) {
    
    this.cookTime = cookTime;
    return this;
  }

   /**
   * Get cookTime
   * @return cookTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COOK_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCookTime() {
    return cookTime;
  }


  @JsonProperty(JSON_PROPERTY_COOK_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCookTime(String cookTime) {
    this.cookTime = cookTime;
  }


  public RecipeDetails servingSize(Integer servingSize) {
    
    this.servingSize = servingSize;
    return this;
  }

   /**
   * Get servingSize
   * @return servingSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVING_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServingSize() {
    return servingSize;
  }


  @JsonProperty(JSON_PROPERTY_SERVING_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServingSize(Integer servingSize) {
    this.servingSize = servingSize;
  }


  public RecipeDetails allergens(List<String> allergens) {
    
    this.allergens = allergens;
    return this;
  }

  public RecipeDetails addAllergensItem(String allergensItem) {
    if (this.allergens == null) {
      this.allergens = new ArrayList<>();
    }
    this.allergens.add(allergensItem);
    return this;
  }

   /**
   * Get allergens
   * @return allergens
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLERGENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAllergens() {
    return allergens;
  }


  @JsonProperty(JSON_PROPERTY_ALLERGENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllergens(List<String> allergens) {
    this.allergens = allergens;
  }


  public RecipeDetails cuisine(CuisineSummary cuisine) {
    
    this.cuisine = cuisine;
    return this;
  }

   /**
   * Get cuisine
   * @return cuisine
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUISINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CuisineSummary getCuisine() {
    return cuisine;
  }


  @JsonProperty(JSON_PROPERTY_CUISINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCuisine(CuisineSummary cuisine) {
    this.cuisine = cuisine;
  }


  public RecipeDetails dish(DishSummary dish) {
    
    this.dish = dish;
    return this;
  }

   /**
   * Get dish
   * @return dish
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DishSummary getDish() {
    return dish;
  }


  @JsonProperty(JSON_PROPERTY_DISH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDish(DishSummary dish) {
    this.dish = dish;
  }


  public RecipeDetails rating(Float rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRating(Float rating) {
    this.rating = rating;
  }


  public RecipeDetails ratingsCount(Integer ratingsCount) {
    
    this.ratingsCount = ratingsCount;
    return this;
  }

   /**
   * Get ratingsCount
   * @return ratingsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATINGS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRatingsCount() {
    return ratingsCount;
  }


  @JsonProperty(JSON_PROPERTY_RATINGS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRatingsCount(Integer ratingsCount) {
    this.ratingsCount = ratingsCount;
  }


  public RecipeDetails author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipeDetails recipeDetails = (RecipeDetails) o;
    return Objects.equals(this.id, recipeDetails.id) &&
        Objects.equals(this.name, recipeDetails.name) &&
        Objects.equals(this.description, recipeDetails.description) &&
        Objects.equals(this.instructions, recipeDetails.instructions) &&
        Objects.equals(this.ingredients, recipeDetails.ingredients) &&
        Objects.equals(this.images, recipeDetails.images) &&
        Objects.equals(this.prepTime, recipeDetails.prepTime) &&
        Objects.equals(this.cookTime, recipeDetails.cookTime) &&
        Objects.equals(this.servingSize, recipeDetails.servingSize) &&
        Objects.equals(this.allergens, recipeDetails.allergens) &&
        Objects.equals(this.cuisine, recipeDetails.cuisine) &&
        Objects.equals(this.dish, recipeDetails.dish) &&
        Objects.equals(this.rating, recipeDetails.rating) &&
        Objects.equals(this.ratingsCount, recipeDetails.ratingsCount) &&
        Objects.equals(this.author, recipeDetails.author);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, instructions, ingredients, images, prepTime, cookTime, servingSize, allergens, cuisine, dish, rating, ratingsCount, author);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipeDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    ingredients: ").append(toIndentedString(ingredients)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    prepTime: ").append(toIndentedString(prepTime)).append("\n");
    sb.append("    cookTime: ").append(toIndentedString(cookTime)).append("\n");
    sb.append("    servingSize: ").append(toIndentedString(servingSize)).append("\n");
    sb.append("    allergens: ").append(toIndentedString(allergens)).append("\n");
    sb.append("    cuisine: ").append(toIndentedString(cuisine)).append("\n");
    sb.append("    dish: ").append(toIndentedString(dish)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    ratingsCount: ").append(toIndentedString(ratingsCount)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

