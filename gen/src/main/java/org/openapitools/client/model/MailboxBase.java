/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MailboxBase
 */
@JsonPropertyOrder({
  MailboxBase.JSON_PROPERTY_MAILBOX_NAME,
  MailboxBase.JSON_PROPERTY_MAILBOX,
  MailboxBase.JSON_PROPERTY_MAILBOX_IDN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MailboxBase {
  public static final String JSON_PROPERTY_MAILBOX_NAME = "mailbox_name";
  private String mailboxName;

  public static final String JSON_PROPERTY_MAILBOX = "mailbox";
  private String mailbox;

  public static final String JSON_PROPERTY_MAILBOX_IDN = "mailbox_idn";
  private String mailboxIdn;

  public MailboxBase() {
  }

  public MailboxBase mailboxName(String mailboxName) {
    
    this.mailboxName = mailboxName;
    return this;
  }

   /**
   * The username (that is the part before the @) of the email address  
   * @return mailboxName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAILBOX_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMailboxName() {
    return mailboxName;
  }


  @JsonProperty(JSON_PROPERTY_MAILBOX_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMailboxName(String mailboxName) {
    this.mailboxName = mailboxName;
  }


  public MailboxBase mailbox(String mailbox) {
    
    this.mailbox = mailbox;
    return this;
  }

   /**
   * Full email address  
   * @return mailbox
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAILBOX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMailbox() {
    return mailbox;
  }


  @JsonProperty(JSON_PROPERTY_MAILBOX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMailbox(String mailbox) {
    this.mailbox = mailbox;
  }


  public MailboxBase mailboxIdn(String mailboxIdn) {
    
    this.mailboxIdn = mailboxIdn;
    return this;
  }

   /**
   * Full email address with internationalized domain name (IDN) format  
   * @return mailboxIdn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAILBOX_IDN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMailboxIdn() {
    return mailboxIdn;
  }


  @JsonProperty(JSON_PROPERTY_MAILBOX_IDN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMailboxIdn(String mailboxIdn) {
    this.mailboxIdn = mailboxIdn;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailboxBase mailboxBase = (MailboxBase) o;
    return Objects.equals(this.mailboxName, mailboxBase.mailboxName) &&
        Objects.equals(this.mailbox, mailboxBase.mailbox) &&
        Objects.equals(this.mailboxIdn, mailboxBase.mailboxIdn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mailboxName, mailbox, mailboxIdn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailboxBase {\n");
    sb.append("    mailboxName: ").append(toIndentedString(mailboxName)).append("\n");
    sb.append("    mailbox: ").append(toIndentedString(mailbox)).append("\n");
    sb.append("    mailboxIdn: ").append(toIndentedString(mailboxIdn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

