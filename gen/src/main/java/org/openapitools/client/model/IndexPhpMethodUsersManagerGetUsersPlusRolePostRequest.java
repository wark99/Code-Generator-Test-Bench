/*
 * Matomo API
 * Complete Matomo reporting API documentation
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest
 */
@JsonPropertyOrder({
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_MODULE,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_FORMAT,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_METHOD,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_ID_SITE,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_LIMIT,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_OFFSET,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_FILTER_SEARCH,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_FILTER_ACCESS,
  IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest.JSON_PROPERTY_FILTER_STATUS
})
@JsonTypeName("_index_php_method_UsersManager_getUsersPlusRole_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:01.495468819Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest {
  public static final String JSON_PROPERTY_MODULE = "module";
  private Object module = null;

  public static final String JSON_PROPERTY_FORMAT = "format";
  private Object format = null;

  public static final String JSON_PROPERTY_METHOD = "method";
  private Object method = null;

  public static final String JSON_PROPERTY_ID_SITE = "idSite";
  private JsonNullable<Object> idSite = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private JsonNullable<Object> limit = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private JsonNullable<Object> offset = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FILTER_SEARCH = "filter_search";
  private JsonNullable<Object> filterSearch = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FILTER_ACCESS = "filter_access";
  private JsonNullable<Object> filterAccess = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FILTER_STATUS = "filter_status";
  private JsonNullable<Object> filterStatus = JsonNullable.<Object>of(null);

  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest() {
  }

  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest module(Object module) {
    
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getModule() {
    return module;
  }


  @JsonProperty(JSON_PROPERTY_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModule(Object module) {
    this.module = module;
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest format(Object format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormat(Object format) {
    this.format = format;
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest method(Object method) {
    
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(Object method) {
    this.method = method;
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest idSite(Object idSite) {
    this.idSite = JsonNullable.<Object>of(idSite);
    
    return this;
  }

   /**
   * Get idSite
   * @return idSite
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getIdSite() {
        return idSite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getIdSite_JsonNullable() {
    return idSite;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_SITE)
  public void setIdSite_JsonNullable(JsonNullable<Object> idSite) {
    this.idSite = idSite;
  }

  public void setIdSite(Object idSite) {
    this.idSite = JsonNullable.<Object>of(idSite);
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest limit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
    
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLimit() {
        return limit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLimit_JsonNullable() {
    return limit;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT)
  public void setLimit_JsonNullable(JsonNullable<Object> limit) {
    this.limit = limit;
  }

  public void setLimit(Object limit) {
    this.limit = JsonNullable.<Object>of(limit);
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest offset(Object offset) {
    this.offset = JsonNullable.<Object>of(offset);
    
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOffset() {
        return offset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOffset_JsonNullable() {
    return offset;
  }
  
  @JsonProperty(JSON_PROPERTY_OFFSET)
  public void setOffset_JsonNullable(JsonNullable<Object> offset) {
    this.offset = offset;
  }

  public void setOffset(Object offset) {
    this.offset = JsonNullable.<Object>of(offset);
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest filterSearch(Object filterSearch) {
    this.filterSearch = JsonNullable.<Object>of(filterSearch);
    
    return this;
  }

   /**
   * Get filterSearch
   * @return filterSearch
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFilterSearch() {
        return filterSearch.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFilterSearch_JsonNullable() {
    return filterSearch;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_SEARCH)
  public void setFilterSearch_JsonNullable(JsonNullable<Object> filterSearch) {
    this.filterSearch = filterSearch;
  }

  public void setFilterSearch(Object filterSearch) {
    this.filterSearch = JsonNullable.<Object>of(filterSearch);
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest filterAccess(Object filterAccess) {
    this.filterAccess = JsonNullable.<Object>of(filterAccess);
    
    return this;
  }

   /**
   * Get filterAccess
   * @return filterAccess
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFilterAccess() {
        return filterAccess.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFilterAccess_JsonNullable() {
    return filterAccess;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_ACCESS)
  public void setFilterAccess_JsonNullable(JsonNullable<Object> filterAccess) {
    this.filterAccess = filterAccess;
  }

  public void setFilterAccess(Object filterAccess) {
    this.filterAccess = JsonNullable.<Object>of(filterAccess);
  }


  public IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest filterStatus(Object filterStatus) {
    this.filterStatus = JsonNullable.<Object>of(filterStatus);
    
    return this;
  }

   /**
   * Get filterStatus
   * @return filterStatus
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFilterStatus() {
        return filterStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFilterStatus_JsonNullable() {
    return filterStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_STATUS)
  public void setFilterStatus_JsonNullable(JsonNullable<Object> filterStatus) {
    this.filterStatus = filterStatus;
  }

  public void setFilterStatus(Object filterStatus) {
    this.filterStatus = JsonNullable.<Object>of(filterStatus);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest indexPhpMethodUsersManagerGetUsersPlusRolePostRequest = (IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest) o;
    return Objects.equals(this.module, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.module) &&
        Objects.equals(this.format, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.format) &&
        Objects.equals(this.method, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.method) &&
        equalsNullable(this.idSite, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.idSite) &&
        equalsNullable(this.limit, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.limit) &&
        equalsNullable(this.offset, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.offset) &&
        equalsNullable(this.filterSearch, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.filterSearch) &&
        equalsNullable(this.filterAccess, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.filterAccess) &&
        equalsNullable(this.filterStatus, indexPhpMethodUsersManagerGetUsersPlusRolePostRequest.filterStatus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(module, format, method, hashCodeNullable(idSite), hashCodeNullable(limit), hashCodeNullable(offset), hashCodeNullable(filterSearch), hashCodeNullable(filterAccess), hashCodeNullable(filterStatus));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexPhpMethodUsersManagerGetUsersPlusRolePostRequest {\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    idSite: ").append(toIndentedString(idSite)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    filterSearch: ").append(toIndentedString(filterSearch)).append("\n");
    sb.append("    filterAccess: ").append(toIndentedString(filterAccess)).append("\n");
    sb.append("    filterStatus: ").append(toIndentedString(filterStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

