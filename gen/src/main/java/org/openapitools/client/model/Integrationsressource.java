/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Integrationsressource
 */
@JsonPropertyOrder({
  Integrationsressource.JSON_PROPERTY_TYPE,
  Integrationsressource.JSON_PROPERTY_URL,
  Integrationsressource.JSON_PROPERTY_CONSTANT_URL,
  Integrationsressource.JSON_PROPERTY_STREAM_ID,
  Integrationsressource.JSON_PROPERTY_DVR_AVAILABLE,
  Integrationsressource.JSON_PROPERTY_DVR_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Integrationsressource {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_CONSTANT_URL = "constant_url";
  private Boolean constantUrl;

  public static final String JSON_PROPERTY_STREAM_ID = "stream_id";
  private String streamId;

  public static final String JSON_PROPERTY_DVR_AVAILABLE = "dvr_available";
  private Boolean dvrAvailable;

  public static final String JSON_PROPERTY_DVR_ENABLED = "dvr_enabled";
  private Boolean dvrEnabled;

  public Integrationsressource() {
  }

  public Integrationsressource type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public Integrationsressource url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public Integrationsressource constantUrl(Boolean constantUrl) {
    
    this.constantUrl = constantUrl;
    return this;
  }

   /**
   * Get constantUrl
   * @return constantUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSTANT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getConstantUrl() {
    return constantUrl;
  }


  @JsonProperty(JSON_PROPERTY_CONSTANT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConstantUrl(Boolean constantUrl) {
    this.constantUrl = constantUrl;
  }


  public Integrationsressource streamId(String streamId) {
    
    this.streamId = streamId;
    return this;
  }

   /**
   * Unique identifier of the &#x60;stream&#x60; that is related to the resource &#x60;Integrations ressource&#x60;
   * @return streamId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStreamId() {
    return streamId;
  }


  @JsonProperty(JSON_PROPERTY_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreamId(String streamId) {
    this.streamId = streamId;
  }


  public Integrationsressource dvrAvailable(Boolean dvrAvailable) {
    
    this.dvrAvailable = dvrAvailable;
    return this;
  }

   /**
   * Get dvrAvailable
   * @return dvrAvailable
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DVR_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDvrAvailable() {
    return dvrAvailable;
  }


  @JsonProperty(JSON_PROPERTY_DVR_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDvrAvailable(Boolean dvrAvailable) {
    this.dvrAvailable = dvrAvailable;
  }


  public Integrationsressource dvrEnabled(Boolean dvrEnabled) {
    
    this.dvrEnabled = dvrEnabled;
    return this;
  }

   /**
   * Get dvrEnabled
   * @return dvrEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DVR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDvrEnabled() {
    return dvrEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DVR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDvrEnabled(Boolean dvrEnabled) {
    this.dvrEnabled = dvrEnabled;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Integrationsressource integrationsressource = (Integrationsressource) o;
    return Objects.equals(this.type, integrationsressource.type) &&
        Objects.equals(this.url, integrationsressource.url) &&
        Objects.equals(this.constantUrl, integrationsressource.constantUrl) &&
        Objects.equals(this.streamId, integrationsressource.streamId) &&
        Objects.equals(this.dvrAvailable, integrationsressource.dvrAvailable) &&
        Objects.equals(this.dvrEnabled, integrationsressource.dvrEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, url, constantUrl, streamId, dvrAvailable, dvrEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Integrationsressource {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    constantUrl: ").append(toIndentedString(constantUrl)).append("\n");
    sb.append("    streamId: ").append(toIndentedString(streamId)).append("\n");
    sb.append("    dvrAvailable: ").append(toIndentedString(dvrAvailable)).append("\n");
    sb.append("    dvrEnabled: ").append(toIndentedString(dvrEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

