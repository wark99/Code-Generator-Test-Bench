/*
 * Hudini Elevate
 * Explore reference documentation for Hudini Elevate - A collection of APIs that application developers can utilize to extend hospitality functions on their experiences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developers@hudini.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReservationSummaryPaymentsInner
 */
@JsonPropertyOrder({
  ReservationSummaryPaymentsInner.JSON_PROPERTY_DESCRIPTION,
  ReservationSummaryPaymentsInner.JSON_PROPERTY_UNIT_AMOUNT,
  ReservationSummaryPaymentsInner.JSON_PROPERTY_UNITS,
  ReservationSummaryPaymentsInner.JSON_PROPERTY_CURRENCY,
  ReservationSummaryPaymentsInner.JSON_PROPERTY_STATUS
})
@JsonTypeName("ReservationSummary_payments_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:57.602746427Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ReservationSummaryPaymentsInner {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<Object> description = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_UNIT_AMOUNT = "unitAmount";
  private JsonNullable<Object> unitAmount = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_UNITS = "units";
  private JsonNullable<Object> units = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<Object> currency = JsonNullable.<Object>of(null);

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PAID("PAID"),
    
    HOLD("HOLD"),
    
    PENDING("PENDING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public ReservationSummaryPaymentsInner() {
  }

  public ReservationSummaryPaymentsInner description(Object description) {
    this.description = JsonNullable.<Object>of(description);
    
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<Object> description) {
    this.description = description;
  }

  public void setDescription(Object description) {
    this.description = JsonNullable.<Object>of(description);
  }


  public ReservationSummaryPaymentsInner unitAmount(Object unitAmount) {
    this.unitAmount = JsonNullable.<Object>of(unitAmount);
    
    return this;
  }

   /**
   * Get unitAmount
   * @return unitAmount
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUnitAmount() {
        return unitAmount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUnitAmount_JsonNullable() {
    return unitAmount;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT_AMOUNT)
  public void setUnitAmount_JsonNullable(JsonNullable<Object> unitAmount) {
    this.unitAmount = unitAmount;
  }

  public void setUnitAmount(Object unitAmount) {
    this.unitAmount = JsonNullable.<Object>of(unitAmount);
  }


  public ReservationSummaryPaymentsInner units(Object units) {
    this.units = JsonNullable.<Object>of(units);
    
    return this;
  }

   /**
   * Get units
   * @return units
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUnits() {
        return units.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUnits_JsonNullable() {
    return units;
  }
  
  @JsonProperty(JSON_PROPERTY_UNITS)
  public void setUnits_JsonNullable(JsonNullable<Object> units) {
    this.units = units;
  }

  public void setUnits(Object units) {
    this.units = JsonNullable.<Object>of(units);
  }


  public ReservationSummaryPaymentsInner currency(Object currency) {
    this.currency = JsonNullable.<Object>of(currency);
    
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<Object> currency) {
    this.currency = currency;
  }

  public void setCurrency(Object currency) {
    this.currency = JsonNullable.<Object>of(currency);
  }


  public ReservationSummaryPaymentsInner status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationSummaryPaymentsInner reservationSummaryPaymentsInner = (ReservationSummaryPaymentsInner) o;
    return equalsNullable(this.description, reservationSummaryPaymentsInner.description) &&
        equalsNullable(this.unitAmount, reservationSummaryPaymentsInner.unitAmount) &&
        equalsNullable(this.units, reservationSummaryPaymentsInner.units) &&
        equalsNullable(this.currency, reservationSummaryPaymentsInner.currency) &&
        Objects.equals(this.status, reservationSummaryPaymentsInner.status);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(description), hashCodeNullable(unitAmount), hashCodeNullable(units), hashCodeNullable(currency), status);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationSummaryPaymentsInner {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    unitAmount: ").append(toIndentedString(unitAmount)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

