/*
 * CIC-NEW
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NewBackgroundGetActiveBackgroundCarStockIdGet200Response
 */
@JsonPropertyOrder({
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_ID,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_BACKGROUND_SETTING_ID,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_ADJUST_IMAGE_SETTING,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_CUSTOM_IMAGE_SETTING,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_BACKGROUND_URL,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_BACKGROUND_NAME,
  NewBackgroundGetActiveBackgroundCarStockIdGet200Response.JSON_PROPERTY_CAR_STOCK_SPECIFIC
})
@JsonTypeName("_new_background_getActiveBackground__carStockId__get_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:13:48.943071954Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class NewBackgroundGetActiveBackgroundCarStockIdGet200Response {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_BACKGROUND_SETTING_ID = "background_setting_id";
  private Integer backgroundSettingId;

  /**
   * Gets or Sets adjustImageSetting
   */
  public enum AdjustImageSettingEnum {
    FIRST("FIRST"),
    
    LAST("LAST"),
    
    ALL("ALL"),
    
    SPECIFIC("SPECIFIC");

    private String value;

    AdjustImageSettingEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AdjustImageSettingEnum fromValue(String value) {
      for (AdjustImageSettingEnum b : AdjustImageSettingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ADJUST_IMAGE_SETTING = "adjust_image_setting";
  private AdjustImageSettingEnum adjustImageSetting;

  public static final String JSON_PROPERTY_CUSTOM_IMAGE_SETTING = "custom_image_setting";
  private String customImageSetting;

  public static final String JSON_PROPERTY_BACKGROUND_URL = "background_url";
  private String backgroundUrl;

  public static final String JSON_PROPERTY_BACKGROUND_NAME = "background_name";
  private String backgroundName;

  public static final String JSON_PROPERTY_CAR_STOCK_SPECIFIC = "car_stock_specific";
  private Boolean carStockSpecific;

  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response() {
  }

  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response backgroundSettingId(Integer backgroundSettingId) {
    
    this.backgroundSettingId = backgroundSettingId;
    return this;
  }

   /**
   * Get backgroundSettingId
   * @return backgroundSettingId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BACKGROUND_SETTING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBackgroundSettingId() {
    return backgroundSettingId;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_SETTING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBackgroundSettingId(Integer backgroundSettingId) {
    this.backgroundSettingId = backgroundSettingId;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response adjustImageSetting(AdjustImageSettingEnum adjustImageSetting) {
    
    this.adjustImageSetting = adjustImageSetting;
    return this;
  }

   /**
   * Get adjustImageSetting
   * @return adjustImageSetting
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADJUST_IMAGE_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AdjustImageSettingEnum getAdjustImageSetting() {
    return adjustImageSetting;
  }


  @JsonProperty(JSON_PROPERTY_ADJUST_IMAGE_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdjustImageSetting(AdjustImageSettingEnum adjustImageSetting) {
    this.adjustImageSetting = adjustImageSetting;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response customImageSetting(String customImageSetting) {
    
    this.customImageSetting = customImageSetting;
    return this;
  }

   /**
   * Get customImageSetting
   * @return customImageSetting
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOM_IMAGE_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomImageSetting() {
    return customImageSetting;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_IMAGE_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomImageSetting(String customImageSetting) {
    this.customImageSetting = customImageSetting;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response backgroundUrl(String backgroundUrl) {
    
    this.backgroundUrl = backgroundUrl;
    return this;
  }

   /**
   * Get backgroundUrl
   * @return backgroundUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BACKGROUND_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBackgroundUrl() {
    return backgroundUrl;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBackgroundUrl(String backgroundUrl) {
    this.backgroundUrl = backgroundUrl;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response backgroundName(String backgroundName) {
    
    this.backgroundName = backgroundName;
    return this;
  }

   /**
   * Get backgroundName
   * @return backgroundName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BACKGROUND_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBackgroundName() {
    return backgroundName;
  }


  @JsonProperty(JSON_PROPERTY_BACKGROUND_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBackgroundName(String backgroundName) {
    this.backgroundName = backgroundName;
  }


  public NewBackgroundGetActiveBackgroundCarStockIdGet200Response carStockSpecific(Boolean carStockSpecific) {
    
    this.carStockSpecific = carStockSpecific;
    return this;
  }

   /**
   * Get carStockSpecific
   * @return carStockSpecific
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAR_STOCK_SPECIFIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCarStockSpecific() {
    return carStockSpecific;
  }


  @JsonProperty(JSON_PROPERTY_CAR_STOCK_SPECIFIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCarStockSpecific(Boolean carStockSpecific) {
    this.carStockSpecific = carStockSpecific;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewBackgroundGetActiveBackgroundCarStockIdGet200Response newBackgroundGetActiveBackgroundCarStockIdGet200Response = (NewBackgroundGetActiveBackgroundCarStockIdGet200Response) o;
    return Objects.equals(this.id, newBackgroundGetActiveBackgroundCarStockIdGet200Response.id) &&
        Objects.equals(this.backgroundSettingId, newBackgroundGetActiveBackgroundCarStockIdGet200Response.backgroundSettingId) &&
        Objects.equals(this.adjustImageSetting, newBackgroundGetActiveBackgroundCarStockIdGet200Response.adjustImageSetting) &&
        Objects.equals(this.customImageSetting, newBackgroundGetActiveBackgroundCarStockIdGet200Response.customImageSetting) &&
        Objects.equals(this.backgroundUrl, newBackgroundGetActiveBackgroundCarStockIdGet200Response.backgroundUrl) &&
        Objects.equals(this.backgroundName, newBackgroundGetActiveBackgroundCarStockIdGet200Response.backgroundName) &&
        Objects.equals(this.carStockSpecific, newBackgroundGetActiveBackgroundCarStockIdGet200Response.carStockSpecific);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, backgroundSettingId, adjustImageSetting, customImageSetting, backgroundUrl, backgroundName, carStockSpecific);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewBackgroundGetActiveBackgroundCarStockIdGet200Response {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    backgroundSettingId: ").append(toIndentedString(backgroundSettingId)).append("\n");
    sb.append("    adjustImageSetting: ").append(toIndentedString(adjustImageSetting)).append("\n");
    sb.append("    customImageSetting: ").append(toIndentedString(customImageSetting)).append("\n");
    sb.append("    backgroundUrl: ").append(toIndentedString(backgroundUrl)).append("\n");
    sb.append("    backgroundName: ").append(toIndentedString(backgroundName)).append("\n");
    sb.append("    carStockSpecific: ").append(toIndentedString(carStockSpecific)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

