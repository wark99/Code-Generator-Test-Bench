/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DepositSwitchDetailsDistributionsInner
 */
@JsonPropertyOrder({
  DepositSwitchDetailsDistributionsInner.JSON_PROPERTY_TYPE,
  DepositSwitchDetailsDistributionsInner.JSON_PROPERTY_ALLOCATED_VALUE,
  DepositSwitchDetailsDistributionsInner.JSON_PROPERTY_BANK_IDENTIFIER,
  DepositSwitchDetailsDistributionsInner.JSON_PROPERTY_ACCOUNT_NUMBER_ENDS_WITH
})
@JsonTypeName("DepositSwitchDetails_distributions_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:23.431609925Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DepositSwitchDetailsDistributionsInner {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ALLOCATED_VALUE = "allocatedValue";
  private BigDecimal allocatedValue;

  public static final String JSON_PROPERTY_BANK_IDENTIFIER = "bankIdentifier";
  private String bankIdentifier;

  public static final String JSON_PROPERTY_ACCOUNT_NUMBER_ENDS_WITH = "accountNumberEndsWith";
  private String accountNumberEndsWith;

  public DepositSwitchDetailsDistributionsInner() {
  }

  public DepositSwitchDetailsDistributionsInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of distribution for the account.  Possible values include &#x60;total&#x60;, &#x60;percent&#x60;, or &#x60;fixed&#x60;.
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public DepositSwitchDetailsDistributionsInner allocatedValue(BigDecimal allocatedValue) {
    
    this.allocatedValue = allocatedValue;
    return this;
  }

   /**
   * The amount being distributed to the account. When distribution type is &#x60;percent&#x60;, this number represents a percentage of the total pay. When distribution type is &#x60;fixed&#x60;, this number represents a fixed dollar amount. This value is not set when distribution type is &#x60;total&#x60;.
   * @return allocatedValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOCATED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAllocatedValue() {
    return allocatedValue;
  }


  @JsonProperty(JSON_PROPERTY_ALLOCATED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllocatedValue(BigDecimal allocatedValue) {
    this.allocatedValue = allocatedValue;
  }


  public DepositSwitchDetailsDistributionsInner bankIdentifier(String bankIdentifier) {
    
    this.bankIdentifier = bankIdentifier;
    return this;
  }

   /**
   * The bank routing number
   * @return bankIdentifier
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBankIdentifier() {
    return bankIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_BANK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBankIdentifier(String bankIdentifier) {
    this.bankIdentifier = bankIdentifier;
  }


  public DepositSwitchDetailsDistributionsInner accountNumberEndsWith(String accountNumberEndsWith) {
    
    this.accountNumberEndsWith = accountNumberEndsWith;
    return this;
  }

   /**
   * The trailing portion of customer&#39;s bank account number
   * @return accountNumberEndsWith
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountNumberEndsWith() {
    return accountNumberEndsWith;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountNumberEndsWith(String accountNumberEndsWith) {
    this.accountNumberEndsWith = accountNumberEndsWith;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositSwitchDetailsDistributionsInner depositSwitchDetailsDistributionsInner = (DepositSwitchDetailsDistributionsInner) o;
    return Objects.equals(this.type, depositSwitchDetailsDistributionsInner.type) &&
        Objects.equals(this.allocatedValue, depositSwitchDetailsDistributionsInner.allocatedValue) &&
        Objects.equals(this.bankIdentifier, depositSwitchDetailsDistributionsInner.bankIdentifier) &&
        Objects.equals(this.accountNumberEndsWith, depositSwitchDetailsDistributionsInner.accountNumberEndsWith);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, allocatedValue, bankIdentifier, accountNumberEndsWith);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositSwitchDetailsDistributionsInner {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    allocatedValue: ").append(toIndentedString(allocatedValue)).append("\n");
    sb.append("    bankIdentifier: ").append(toIndentedString(bankIdentifier)).append("\n");
    sb.append("    accountNumberEndsWith: ").append(toIndentedString(accountNumberEndsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

