/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SearchUsersRequest
 */
@JsonPropertyOrder({
  SearchUsersRequest.JSON_PROPERTY_TERM,
  SearchUsersRequest.JSON_PROPERTY_TEAM_ID,
  SearchUsersRequest.JSON_PROPERTY_NOT_IN_TEAM_ID,
  SearchUsersRequest.JSON_PROPERTY_IN_CHANNEL_ID,
  SearchUsersRequest.JSON_PROPERTY_NOT_IN_CHANNEL_ID,
  SearchUsersRequest.JSON_PROPERTY_IN_GROUP_ID,
  SearchUsersRequest.JSON_PROPERTY_GROUP_CONSTRAINED,
  SearchUsersRequest.JSON_PROPERTY_ALLOW_INACTIVE,
  SearchUsersRequest.JSON_PROPERTY_WITHOUT_TEAM,
  SearchUsersRequest.JSON_PROPERTY_LIMIT
})
@JsonTypeName("SearchUsers_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SearchUsersRequest {
  public static final String JSON_PROPERTY_TERM = "term";
  private String term;

  public static final String JSON_PROPERTY_TEAM_ID = "team_id";
  private String teamId;

  public static final String JSON_PROPERTY_NOT_IN_TEAM_ID = "not_in_team_id";
  private String notInTeamId;

  public static final String JSON_PROPERTY_IN_CHANNEL_ID = "in_channel_id";
  private String inChannelId;

  public static final String JSON_PROPERTY_NOT_IN_CHANNEL_ID = "not_in_channel_id";
  private String notInChannelId;

  public static final String JSON_PROPERTY_IN_GROUP_ID = "in_group_id";
  private String inGroupId;

  public static final String JSON_PROPERTY_GROUP_CONSTRAINED = "group_constrained";
  private Boolean groupConstrained;

  public static final String JSON_PROPERTY_ALLOW_INACTIVE = "allow_inactive";
  private Boolean allowInactive;

  public static final String JSON_PROPERTY_WITHOUT_TEAM = "without_team";
  private Boolean withoutTeam;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private Integer limit = 100;

  public SearchUsersRequest() {
  }

  public SearchUsersRequest term(String term) {
    
    this.term = term;
    return this;
  }

   /**
   * The term to match against username, full name, nickname and email
   * @return term
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TERM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTerm() {
    return term;
  }


  @JsonProperty(JSON_PROPERTY_TERM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerm(String term) {
    this.term = term;
  }


  public SearchUsersRequest teamId(String teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * If provided, only search users on this team
   * @return teamId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }


  public SearchUsersRequest notInTeamId(String notInTeamId) {
    
    this.notInTeamId = notInTeamId;
    return this;
  }

   /**
   * If provided, only search users not on this team
   * @return notInTeamId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOT_IN_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotInTeamId() {
    return notInTeamId;
  }


  @JsonProperty(JSON_PROPERTY_NOT_IN_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotInTeamId(String notInTeamId) {
    this.notInTeamId = notInTeamId;
  }


  public SearchUsersRequest inChannelId(String inChannelId) {
    
    this.inChannelId = inChannelId;
    return this;
  }

   /**
   * If provided, only search users in this channel
   * @return inChannelId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IN_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInChannelId() {
    return inChannelId;
  }


  @JsonProperty(JSON_PROPERTY_IN_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInChannelId(String inChannelId) {
    this.inChannelId = inChannelId;
  }


  public SearchUsersRequest notInChannelId(String notInChannelId) {
    
    this.notInChannelId = notInChannelId;
    return this;
  }

   /**
   * If provided, only search users not in this channel. Must specifiy &#x60;team_id&#x60; when using this option
   * @return notInChannelId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOT_IN_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotInChannelId() {
    return notInChannelId;
  }


  @JsonProperty(JSON_PROPERTY_NOT_IN_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotInChannelId(String notInChannelId) {
    this.notInChannelId = notInChannelId;
  }


  public SearchUsersRequest inGroupId(String inGroupId) {
    
    this.inGroupId = inGroupId;
    return this;
  }

   /**
   * If provided, only search users in this group. Must have &#x60;manage_system&#x60; permission.
   * @return inGroupId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IN_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInGroupId() {
    return inGroupId;
  }


  @JsonProperty(JSON_PROPERTY_IN_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInGroupId(String inGroupId) {
    this.inGroupId = inGroupId;
  }


  public SearchUsersRequest groupConstrained(Boolean groupConstrained) {
    
    this.groupConstrained = groupConstrained;
    return this;
  }

   /**
   * When used with &#x60;not_in_channel_id&#x60; or &#x60;not_in_team_id&#x60;, returns only the users that are allowed to join the channel or team based on its group constrains.
   * @return groupConstrained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGroupConstrained() {
    return groupConstrained;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_CONSTRAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupConstrained(Boolean groupConstrained) {
    this.groupConstrained = groupConstrained;
  }


  public SearchUsersRequest allowInactive(Boolean allowInactive) {
    
    this.allowInactive = allowInactive;
    return this;
  }

   /**
   * When &#x60;true&#x60;, include deactivated users in the results
   * @return allowInactive
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_INACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowInactive() {
    return allowInactive;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_INACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowInactive(Boolean allowInactive) {
    this.allowInactive = allowInactive;
  }


  public SearchUsersRequest withoutTeam(Boolean withoutTeam) {
    
    this.withoutTeam = withoutTeam;
    return this;
  }

   /**
   * Set this to &#x60;true&#x60; if you would like to search for users that are not on a team. This option takes precendence over &#x60;team_id&#x60;, &#x60;in_channel_id&#x60;, and &#x60;not_in_channel_id&#x60;.
   * @return withoutTeam
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WITHOUT_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWithoutTeam() {
    return withoutTeam;
  }


  @JsonProperty(JSON_PROPERTY_WITHOUT_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWithoutTeam(Boolean withoutTeam) {
    this.withoutTeam = withoutTeam;
  }


  public SearchUsersRequest limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The maximum number of users to return in the results  __Defaults to &#x60;100&#x60; if not provided.__ 
   * @return limit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchUsersRequest searchUsersRequest = (SearchUsersRequest) o;
    return Objects.equals(this.term, searchUsersRequest.term) &&
        Objects.equals(this.teamId, searchUsersRequest.teamId) &&
        Objects.equals(this.notInTeamId, searchUsersRequest.notInTeamId) &&
        Objects.equals(this.inChannelId, searchUsersRequest.inChannelId) &&
        Objects.equals(this.notInChannelId, searchUsersRequest.notInChannelId) &&
        Objects.equals(this.inGroupId, searchUsersRequest.inGroupId) &&
        Objects.equals(this.groupConstrained, searchUsersRequest.groupConstrained) &&
        Objects.equals(this.allowInactive, searchUsersRequest.allowInactive) &&
        Objects.equals(this.withoutTeam, searchUsersRequest.withoutTeam) &&
        Objects.equals(this.limit, searchUsersRequest.limit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(term, teamId, notInTeamId, inChannelId, notInChannelId, inGroupId, groupConstrained, allowInactive, withoutTeam, limit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchUsersRequest {\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    notInTeamId: ").append(toIndentedString(notInTeamId)).append("\n");
    sb.append("    inChannelId: ").append(toIndentedString(inChannelId)).append("\n");
    sb.append("    notInChannelId: ").append(toIndentedString(notInChannelId)).append("\n");
    sb.append("    inGroupId: ").append(toIndentedString(inGroupId)).append("\n");
    sb.append("    groupConstrained: ").append(toIndentedString(groupConstrained)).append("\n");
    sb.append("    allowInactive: ").append(toIndentedString(allowInactive)).append("\n");
    sb.append("    withoutTeam: ").append(toIndentedString(withoutTeam)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

