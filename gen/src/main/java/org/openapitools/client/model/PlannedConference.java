/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CalendarEventAttendees;
import org.openapitools.client.model.ConferenceOptions;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PlannedConference
 */
@JsonPropertyOrder({
  PlannedConference.JSON_PROPERTY_CALENDAR_ID,
  PlannedConference.JSON_PROPERTY_STARTING_AT,
  PlannedConference.JSON_PROPERTY_ENDING_AT,
  PlannedConference.JSON_PROPERTY_TIMEZONE,
  PlannedConference.JSON_PROPERTY_HOSTNAME,
  PlannedConference.JSON_PROPERTY_TITLE,
  PlannedConference.JSON_PROPERTY_DESCRIPTION,
  PlannedConference.JSON_PROPERTY_ATTENDEES,
  PlannedConference.JSON_PROPERTY_OPTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PlannedConference {
  public static final String JSON_PROPERTY_CALENDAR_ID = "calendar_id";
  private Integer calendarId;

  public static final String JSON_PROPERTY_STARTING_AT = "starting_at";
  private String startingAt;

  public static final String JSON_PROPERTY_ENDING_AT = "ending_at";
  private String endingAt;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  private String timezone;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ATTENDEES = "attendees";
  private List<CalendarEventAttendees> attendees;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private List<ConferenceOptions> options = new ArrayList<>();

  public PlannedConference() {
  }

  public PlannedConference calendarId(Integer calendarId) {
    
    this.calendarId = calendarId;
    return this;
  }

   /**
   * The unique identifier (ID) of the Infomaniak Calendar where you want to plan the meeting. Make a GET request on https://calendar.infomaniak.com/api/pim/calendar
   * @return calendarId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CALENDAR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCalendarId() {
    return calendarId;
  }


  @JsonProperty(JSON_PROPERTY_CALENDAR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCalendarId(Integer calendarId) {
    this.calendarId = calendarId;
  }


  public PlannedConference startingAt(String startingAt) {
    
    this.startingAt = startingAt;
    return this;
  }

   /**
   * Get startingAt
   * @return startingAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARTING_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStartingAt() {
    return startingAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTING_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartingAt(String startingAt) {
    this.startingAt = startingAt;
  }


  public PlannedConference endingAt(String endingAt) {
    
    this.endingAt = endingAt;
    return this;
  }

   /**
   * Room settings can be deleted if this date expires. This field will be updated if event dates change in Infomaniak Calendar.
   * @return endingAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDING_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEndingAt() {
    return endingAt;
  }


  @JsonProperty(JSON_PROPERTY_ENDING_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndingAt(String endingAt) {
    this.endingAt = endingAt;
  }


  public PlannedConference timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public PlannedConference hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Needed for rebuilding room url
   * @return hostname
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public PlannedConference title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public PlannedConference description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PlannedConference attendees(List<CalendarEventAttendees> attendees) {
    
    this.attendees = attendees;
    return this;
  }

  public PlannedConference addAttendeesItem(CalendarEventAttendees attendeesItem) {
    if (this.attendees == null) {
      this.attendees = new ArrayList<>();
    }
    this.attendees.add(attendeesItem);
    return this;
  }

   /**
   * Get attendees
   * @return attendees
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTENDEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CalendarEventAttendees> getAttendees() {
    return attendees;
  }


  @JsonProperty(JSON_PROPERTY_ATTENDEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttendees(List<CalendarEventAttendees> attendees) {
    this.attendees = attendees;
  }


  public PlannedConference options(List<ConferenceOptions> options) {
    
    this.options = options;
    return this;
  }

  public PlannedConference addOptionsItem(ConferenceOptions optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ConferenceOptions> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOptions(List<ConferenceOptions> options) {
    this.options = options;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlannedConference plannedConference = (PlannedConference) o;
    return Objects.equals(this.calendarId, plannedConference.calendarId) &&
        Objects.equals(this.startingAt, plannedConference.startingAt) &&
        Objects.equals(this.endingAt, plannedConference.endingAt) &&
        Objects.equals(this.timezone, plannedConference.timezone) &&
        Objects.equals(this.hostname, plannedConference.hostname) &&
        Objects.equals(this.title, plannedConference.title) &&
        Objects.equals(this.description, plannedConference.description) &&
        Objects.equals(this.attendees, plannedConference.attendees) &&
        Objects.equals(this.options, plannedConference.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calendarId, startingAt, endingAt, timezone, hostname, title, description, attendees, options);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlannedConference {\n");
    sb.append("    calendarId: ").append(toIndentedString(calendarId)).append("\n");
    sb.append("    startingAt: ").append(toIndentedString(startingAt)).append("\n");
    sb.append("    endingAt: ").append(toIndentedString(endingAt)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    attendees: ").append(toIndentedString(attendees)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

