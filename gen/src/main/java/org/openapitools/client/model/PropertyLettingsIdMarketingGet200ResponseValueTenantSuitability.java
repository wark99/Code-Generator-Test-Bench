/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability
 */
@JsonPropertyOrder({
  PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability.JSON_PROPERTY_STUDENTS,
  PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability.JSON_PROPERTY_MATURE_STUDENTS,
  PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability.JSON_PROPERTY_SMOKERS,
  PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability.JSON_PROPERTY_PETS,
  PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability.JSON_PROPERTY_PROFESSIONALS
})
@JsonTypeName("_property_lettings__id__marketing_get_200_response_value_tenant_suitability")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability {
  /**
   * Does the property allow students
   */
  public enum StudentsEnum {
    YES("Yes"),
    
    NO("No"),
    
    CONSIDERED("Considered");

    private String value;

    StudentsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StudentsEnum fromValue(String value) {
      for (StudentsEnum b : StudentsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STUDENTS = "students";
  private StudentsEnum students;

  /**
   * Does the property allow mature students
   */
  public enum MatureStudentsEnum {
    YES("Yes"),
    
    NO("No"),
    
    CONSIDERED("Considered");

    private String value;

    MatureStudentsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MatureStudentsEnum fromValue(String value) {
      for (MatureStudentsEnum b : MatureStudentsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MATURE_STUDENTS = "mature_students";
  private MatureStudentsEnum matureStudents;

  /**
   * Does the property allow smokers
   */
  public enum SmokersEnum {
    YES("Yes"),
    
    NO("No"),
    
    CONSIDERED("Considered");

    private String value;

    SmokersEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SmokersEnum fromValue(String value) {
      for (SmokersEnum b : SmokersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SMOKERS = "smokers";
  private SmokersEnum smokers;

  /**
   * Does the property allow pets
   */
  public enum PetsEnum {
    YES("Yes"),
    
    NO("No"),
    
    CONSIDERED("Considered");

    private String value;

    PetsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PetsEnum fromValue(String value) {
      for (PetsEnum b : PetsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PETS = "pets";
  private PetsEnum pets;

  /**
   * Does the property allow professionals
   */
  public enum ProfessionalsEnum {
    YES("Yes"),
    
    NO("No"),
    
    CONSIDERED("Considered");

    private String value;

    ProfessionalsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProfessionalsEnum fromValue(String value) {
      for (ProfessionalsEnum b : ProfessionalsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROFESSIONALS = "professionals";
  private ProfessionalsEnum professionals;

  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability() {
  }

  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability students(StudentsEnum students) {
    
    this.students = students;
    return this;
  }

   /**
   * Does the property allow students
   * @return students
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StudentsEnum getStudents() {
    return students;
  }


  @JsonProperty(JSON_PROPERTY_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudents(StudentsEnum students) {
    this.students = students;
  }


  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability matureStudents(MatureStudentsEnum matureStudents) {
    
    this.matureStudents = matureStudents;
    return this;
  }

   /**
   * Does the property allow mature students
   * @return matureStudents
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATURE_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MatureStudentsEnum getMatureStudents() {
    return matureStudents;
  }


  @JsonProperty(JSON_PROPERTY_MATURE_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatureStudents(MatureStudentsEnum matureStudents) {
    this.matureStudents = matureStudents;
  }


  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability smokers(SmokersEnum smokers) {
    
    this.smokers = smokers;
    return this;
  }

   /**
   * Does the property allow smokers
   * @return smokers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SMOKERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SmokersEnum getSmokers() {
    return smokers;
  }


  @JsonProperty(JSON_PROPERTY_SMOKERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmokers(SmokersEnum smokers) {
    this.smokers = smokers;
  }


  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability pets(PetsEnum pets) {
    
    this.pets = pets;
    return this;
  }

   /**
   * Does the property allow pets
   * @return pets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PetsEnum getPets() {
    return pets;
  }


  @JsonProperty(JSON_PROPERTY_PETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPets(PetsEnum pets) {
    this.pets = pets;
  }


  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability professionals(ProfessionalsEnum professionals) {
    
    this.professionals = professionals;
    return this;
  }

   /**
   * Does the property allow professionals
   * @return professionals
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFESSIONALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfessionalsEnum getProfessionals() {
    return professionals;
  }


  @JsonProperty(JSON_PROPERTY_PROFESSIONALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfessionals(ProfessionalsEnum professionals) {
    this.professionals = professionals;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability propertyLettingsIdMarketingGet200ResponseValueTenantSuitability = (PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability) o;
    return Objects.equals(this.students, propertyLettingsIdMarketingGet200ResponseValueTenantSuitability.students) &&
        Objects.equals(this.matureStudents, propertyLettingsIdMarketingGet200ResponseValueTenantSuitability.matureStudents) &&
        Objects.equals(this.smokers, propertyLettingsIdMarketingGet200ResponseValueTenantSuitability.smokers) &&
        Objects.equals(this.pets, propertyLettingsIdMarketingGet200ResponseValueTenantSuitability.pets) &&
        Objects.equals(this.professionals, propertyLettingsIdMarketingGet200ResponseValueTenantSuitability.professionals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(students, matureStudents, smokers, pets, professionals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability {\n");
    sb.append("    students: ").append(toIndentedString(students)).append("\n");
    sb.append("    matureStudents: ").append(toIndentedString(matureStudents)).append("\n");
    sb.append("    smokers: ").append(toIndentedString(smokers)).append("\n");
    sb.append("    pets: ").append(toIndentedString(pets)).append("\n");
    sb.append("    professionals: ").append(toIndentedString(professionals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

