/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Birthday;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PortfolioConsumer
 */
@JsonPropertyOrder({
  PortfolioConsumer.JSON_PROPERTY_ID,
  PortfolioConsumer.JSON_PROPERTY_FIRST_NAME,
  PortfolioConsumer.JSON_PROPERTY_LAST_NAME,
  PortfolioConsumer.JSON_PROPERTY_CUSTOMER_ID,
  PortfolioConsumer.JSON_PROPERTY_SSN,
  PortfolioConsumer.JSON_PROPERTY_BIRTHDAY,
  PortfolioConsumer.JSON_PROPERTY_SUFFIX
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:05:40.878624261Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PortfolioConsumer {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private Long customerId;

  public static final String JSON_PROPERTY_SSN = "ssn";
  private String ssn;

  public static final String JSON_PROPERTY_BIRTHDAY = "birthday";
  private Birthday birthday;

  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public PortfolioConsumer() {
  }

  public PortfolioConsumer id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A consumer ID. See Create Consumer API for how to create a consumer ID.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public PortfolioConsumer firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the account holder
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public PortfolioConsumer lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the account holder
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public PortfolioConsumer customerId(Long customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID represented as a number. See Add Customer API for how to create a customer ID.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(Long customerId) {
    this.customerId = customerId;
  }


  public PortfolioConsumer ssn(String ssn) {
    
    this.ssn = ssn;
    return this;
  }

   /**
   * A full SSN with or without hyphens
   * @return ssn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSsn() {
    return ssn;
  }


  @JsonProperty(JSON_PROPERTY_SSN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSsn(String ssn) {
    this.ssn = ssn;
  }


  public PortfolioConsumer birthday(Birthday birthday) {
    
    this.birthday = birthday;
    return this;
  }

   /**
   * Get birthday
   * @return birthday
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Birthday getBirthday() {
    return birthday;
  }


  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBirthday(Birthday birthday) {
    this.birthday = birthday;
  }


  public PortfolioConsumer suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

   /**
   * A generational or academic suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioConsumer portfolioConsumer = (PortfolioConsumer) o;
    return Objects.equals(this.id, portfolioConsumer.id) &&
        Objects.equals(this.firstName, portfolioConsumer.firstName) &&
        Objects.equals(this.lastName, portfolioConsumer.lastName) &&
        Objects.equals(this.customerId, portfolioConsumer.customerId) &&
        Objects.equals(this.ssn, portfolioConsumer.ssn) &&
        Objects.equals(this.birthday, portfolioConsumer.birthday) &&
        Objects.equals(this.suffix, portfolioConsumer.suffix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, customerId, ssn, birthday, suffix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioConsumer {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

