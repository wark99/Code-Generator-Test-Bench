/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceInsightEvent
 */
@JsonPropertyOrder({
  DeviceInsightEvent.JSON_PROPERTY_INSIGHT_EVENT,
  DeviceInsightEvent.JSON_PROPERTY_INSIGHT_LEVEL,
  DeviceInsightEvent.JSON_PROPERTY_INSIGHT_SIGNALS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:05:06.990716937Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class DeviceInsightEvent {
  public static final String JSON_PROPERTY_INSIGHT_EVENT = "insightEvent";
  private String insightEvent;

  public static final String JSON_PROPERTY_INSIGHT_LEVEL = "insightLevel";
  private Integer insightLevel;

  public static final String JSON_PROPERTY_INSIGHT_SIGNALS = "insightSignals";
  private List<String> insightSignals;

  public DeviceInsightEvent() {
  }

  public DeviceInsightEvent insightEvent(String insightEvent) {
    
    this.insightEvent = insightEvent;
    return this;
  }

   /**
   * Event label associated with specific insight, for example: AD.
   * @return insightEvent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSIGHT_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInsightEvent() {
    return insightEvent;
  }


  @JsonProperty(JSON_PROPERTY_INSIGHT_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsightEvent(String insightEvent) {
    this.insightEvent = insightEvent;
  }


  public DeviceInsightEvent insightLevel(Integer insightLevel) {
    
    this.insightLevel = insightLevel;
    return this;
  }

   /**
   * Insight level value between 0-5.
   * @return insightLevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSIGHT_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInsightLevel() {
    return insightLevel;
  }


  @JsonProperty(JSON_PROPERTY_INSIGHT_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsightLevel(Integer insightLevel) {
    this.insightLevel = insightLevel;
  }


  public DeviceInsightEvent insightSignals(List<String> insightSignals) {
    
    this.insightSignals = insightSignals;
    return this;
  }

  public DeviceInsightEvent addInsightSignalsItem(String insightSignalsItem) {
    if (this.insightSignals == null) {
      this.insightSignals = new ArrayList<>();
    }
    this.insightSignals.add(insightSignalsItem);
    return this;
  }

   /**
   * During the insight evaluation, risk signals are generated when a request triggers either the rules or machine learning model. Each risk signal and it&#39;s associated definition is shown below.   * &#x60;account_carrier_unknown&#x60; - Carrier information for account is unknown   * &#x60;account_carrier&#x60; - Carrier velocity attempts count more than or equal to 50 within 4 hours   * &#x60;account_city_unknown&#x60; - City information for account is unknown   * &#x60;account_city&#x60; - Account has not been seen using the City   * &#x60;account_state_unknown&#x60; - State/Province information for account is unknown   * &#x60;account_state&#x60; - Account has not been seen using the State/Province   * &#x60;account_country_unknown&#x60; - Country information for account is unknown   * &#x60;account_country&#x60; - Account has not been seen using the Country   * &#x60;account_ip&#x60; - Account has not been seen using the IP   * &#x60;account_ua&#x60; - Account has not been seen using the UA   * &#x60;device_velocity&#x60; - Device Fingerprint velocity attempts count more than 100   * &#x60;ip_velocity&#x60; - Current IP velocity greater than 50 in the past 4 hours   * &#x60;login_failures&#x60; - High failure rate for account login in the past 30 minutes   * &#x60;login_velocity&#x60; - The account has +30 login attempts in the past 30 minutes (overall login attempts)   * &#x60;account_velocity&#x60; - Account logins have exceeded 10 attempts   * &#x60;ip_blocklist&#x60; - IP is in block list  These risk signals are informational but may be useful for a service provider to understand a detailed view of the associated risk present in a request.
   * @return insightSignals
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSIGHT_SIGNALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getInsightSignals() {
    return insightSignals;
  }


  @JsonProperty(JSON_PROPERTY_INSIGHT_SIGNALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsightSignals(List<String> insightSignals) {
    this.insightSignals = insightSignals;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInsightEvent deviceInsightEvent = (DeviceInsightEvent) o;
    return Objects.equals(this.insightEvent, deviceInsightEvent.insightEvent) &&
        Objects.equals(this.insightLevel, deviceInsightEvent.insightLevel) &&
        Objects.equals(this.insightSignals, deviceInsightEvent.insightSignals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(insightEvent, insightLevel, insightSignals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInsightEvent {\n");
    sb.append("    insightEvent: ").append(toIndentedString(insightEvent)).append("\n");
    sb.append("    insightLevel: ").append(toIndentedString(insightLevel)).append("\n");
    sb.append("    insightSignals: ").append(toIndentedString(insightSignals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

