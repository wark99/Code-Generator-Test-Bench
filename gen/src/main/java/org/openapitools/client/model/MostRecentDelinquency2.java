/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.MostRecentPayment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MostRecentDelinquency2
 */
@JsonPropertyOrder({
  MostRecentDelinquency2.JSON_PROPERTY_ACCOUNT_RATING_CODE,
  MostRecentDelinquency2.JSON_PROPERTY_DATE,
  MostRecentDelinquency2.JSON_PROPERTY_MOST_RECENT_PAYMENT,
  MostRecentDelinquency2.JSON_PROPERTY_PAYMENT_DUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MostRecentDelinquency2 {
  public static final String JSON_PROPERTY_ACCOUNT_RATING_CODE = "accountRatingCode";
  private String accountRatingCode;

  public static final String JSON_PROPERTY_DATE = "date";
  private DateOfExpiration date;

  public static final String JSON_PROPERTY_MOST_RECENT_PAYMENT = "mostRecentPayment";
  private MostRecentPayment mostRecentPayment;

  public static final String JSON_PROPERTY_PAYMENT_DUE = "paymentDue";
  private String paymentDue;

  public MostRecentDelinquency2() {
  }

  public MostRecentDelinquency2 accountRatingCode(String accountRatingCode) {
    
    this.accountRatingCode = accountRatingCode;
    return this;
  }

   /**
   * Get accountRatingCode
   * @return accountRatingCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountRatingCode() {
    return accountRatingCode;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountRatingCode(String accountRatingCode) {
    this.accountRatingCode = accountRatingCode;
  }


  public MostRecentDelinquency2 date(DateOfExpiration date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(DateOfExpiration date) {
    this.date = date;
  }


  public MostRecentDelinquency2 mostRecentPayment(MostRecentPayment mostRecentPayment) {
    
    this.mostRecentPayment = mostRecentPayment;
    return this;
  }

   /**
   * Get mostRecentPayment
   * @return mostRecentPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MostRecentPayment getMostRecentPayment() {
    return mostRecentPayment;
  }


  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMostRecentPayment(MostRecentPayment mostRecentPayment) {
    this.mostRecentPayment = mostRecentPayment;
  }


  public MostRecentDelinquency2 paymentDue(String paymentDue) {
    
    this.paymentDue = paymentDue;
    return this;
  }

   /**
   * Get paymentDue
   * @return paymentDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentDue() {
    return paymentDue;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDue(String paymentDue) {
    this.paymentDue = paymentDue;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MostRecentDelinquency2 mostRecentDelinquency2 = (MostRecentDelinquency2) o;
    return Objects.equals(this.accountRatingCode, mostRecentDelinquency2.accountRatingCode) &&
        Objects.equals(this.date, mostRecentDelinquency2.date) &&
        Objects.equals(this.mostRecentPayment, mostRecentDelinquency2.mostRecentPayment) &&
        Objects.equals(this.paymentDue, mostRecentDelinquency2.paymentDue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountRatingCode, date, mostRecentPayment, paymentDue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MostRecentDelinquency2 {\n");
    sb.append("    accountRatingCode: ").append(toIndentedString(accountRatingCode)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    mostRecentPayment: ").append(toIndentedString(mostRecentPayment)).append("\n");
    sb.append("    paymentDue: ").append(toIndentedString(paymentDue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

