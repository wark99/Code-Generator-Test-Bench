/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RecipeSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UserProfile
 */
@JsonPropertyOrder({
  UserProfile.JSON_PROPERTY_ID,
  UserProfile.JSON_PROPERTY_USERNAME,
  UserProfile.JSON_PROPERTY_NAME,
  UserProfile.JSON_PROPERTY_BIO,
  UserProfile.JSON_PROPERTY_FOLLOWERS_COUNT,
  UserProfile.JSON_PROPERTY_FOLLOWING_COUNT,
  UserProfile.JSON_PROPERTY_GENDER,
  UserProfile.JSON_PROPERTY_PROFILE_PICTURE,
  UserProfile.JSON_PROPERTY_DIETS,
  UserProfile.JSON_PROPERTY_RECIPE_COUNT,
  UserProfile.JSON_PROPERTY_SELF_FOLLOWING,
  UserProfile.JSON_PROPERTY_BOOKMARKS,
  UserProfile.JSON_PROPERTY_RECIPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:25:27.895868589Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UserProfile {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_BIO = "bio";
  private String bio;

  public static final String JSON_PROPERTY_FOLLOWERS_COUNT = "followersCount";
  private Integer followersCount;

  public static final String JSON_PROPERTY_FOLLOWING_COUNT = "followingCount";
  private Integer followingCount;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("male"),
    
    FEMALE("female"),
    
    UNKNOWN("unknown");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_PROFILE_PICTURE = "profilePicture";
  private URI profilePicture;

  public static final String JSON_PROPERTY_DIETS = "diets";
  private List<String> diets;

  public static final String JSON_PROPERTY_RECIPE_COUNT = "recipeCount";
  private Integer recipeCount;

  public static final String JSON_PROPERTY_SELF_FOLLOWING = "selfFollowing";
  private Boolean selfFollowing;

  public static final String JSON_PROPERTY_BOOKMARKS = "bookmarks";
  private List<RecipeSummary> bookmarks;

  public static final String JSON_PROPERTY_RECIPES = "recipes";
  private List<RecipeSummary> recipes;

  public UserProfile() {
  }

  public UserProfile id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public UserProfile username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public UserProfile name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UserProfile bio(String bio) {
    
    this.bio = bio;
    return this;
  }

   /**
   * Get bio
   * @return bio
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBio() {
    return bio;
  }


  @JsonProperty(JSON_PROPERTY_BIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBio(String bio) {
    this.bio = bio;
  }


  public UserProfile followersCount(Integer followersCount) {
    
    this.followersCount = followersCount;
    return this;
  }

   /**
   * Get followersCount
   * @return followersCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FOLLOWERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFollowersCount() {
    return followersCount;
  }


  @JsonProperty(JSON_PROPERTY_FOLLOWERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFollowersCount(Integer followersCount) {
    this.followersCount = followersCount;
  }


  public UserProfile followingCount(Integer followingCount) {
    
    this.followingCount = followingCount;
    return this;
  }

   /**
   * Get followingCount
   * @return followingCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLLOWING_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFollowingCount() {
    return followingCount;
  }


  @JsonProperty(JSON_PROPERTY_FOLLOWING_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFollowingCount(Integer followingCount) {
    this.followingCount = followingCount;
  }


  public UserProfile gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public UserProfile profilePicture(URI profilePicture) {
    
    this.profilePicture = profilePicture;
    return this;
  }

   /**
   * Get profilePicture
   * @return profilePicture
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE_PICTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getProfilePicture() {
    return profilePicture;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_PICTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfilePicture(URI profilePicture) {
    this.profilePicture = profilePicture;
  }


  public UserProfile diets(List<String> diets) {
    
    this.diets = diets;
    return this;
  }

  public UserProfile addDietsItem(String dietsItem) {
    if (this.diets == null) {
      this.diets = new ArrayList<>();
    }
    this.diets.add(dietsItem);
    return this;
  }

   /**
   * Get diets
   * @return diets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDiets() {
    return diets;
  }


  @JsonProperty(JSON_PROPERTY_DIETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiets(List<String> diets) {
    this.diets = diets;
  }


  public UserProfile recipeCount(Integer recipeCount) {
    
    this.recipeCount = recipeCount;
    return this;
  }

   /**
   * Get recipeCount
   * @return recipeCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRecipeCount() {
    return recipeCount;
  }


  @JsonProperty(JSON_PROPERTY_RECIPE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipeCount(Integer recipeCount) {
    this.recipeCount = recipeCount;
  }


  public UserProfile selfFollowing(Boolean selfFollowing) {
    
    this.selfFollowing = selfFollowing;
    return this;
  }

   /**
   * Get selfFollowing
   * @return selfFollowing
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSelfFollowing() {
    return selfFollowing;
  }


  @JsonProperty(JSON_PROPERTY_SELF_FOLLOWING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfFollowing(Boolean selfFollowing) {
    this.selfFollowing = selfFollowing;
  }


  public UserProfile bookmarks(List<RecipeSummary> bookmarks) {
    
    this.bookmarks = bookmarks;
    return this;
  }

  public UserProfile addBookmarksItem(RecipeSummary bookmarksItem) {
    if (this.bookmarks == null) {
      this.bookmarks = new ArrayList<>();
    }
    this.bookmarks.add(bookmarksItem);
    return this;
  }

   /**
   * Only available when querying the current user&#39;s profile.
   * @return bookmarks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOKMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RecipeSummary> getBookmarks() {
    return bookmarks;
  }


  @JsonProperty(JSON_PROPERTY_BOOKMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookmarks(List<RecipeSummary> bookmarks) {
    this.bookmarks = bookmarks;
  }


  public UserProfile recipes(List<RecipeSummary> recipes) {
    
    this.recipes = recipes;
    return this;
  }

  public UserProfile addRecipesItem(RecipeSummary recipesItem) {
    if (this.recipes == null) {
      this.recipes = new ArrayList<>();
    }
    this.recipes.add(recipesItem);
    return this;
  }

   /**
   * Get recipes
   * @return recipes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RecipeSummary> getRecipes() {
    return recipes;
  }


  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipes(List<RecipeSummary> recipes) {
    this.recipes = recipes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProfile userProfile = (UserProfile) o;
    return Objects.equals(this.id, userProfile.id) &&
        Objects.equals(this.username, userProfile.username) &&
        Objects.equals(this.name, userProfile.name) &&
        Objects.equals(this.bio, userProfile.bio) &&
        Objects.equals(this.followersCount, userProfile.followersCount) &&
        Objects.equals(this.followingCount, userProfile.followingCount) &&
        Objects.equals(this.gender, userProfile.gender) &&
        Objects.equals(this.profilePicture, userProfile.profilePicture) &&
        Objects.equals(this.diets, userProfile.diets) &&
        Objects.equals(this.recipeCount, userProfile.recipeCount) &&
        Objects.equals(this.selfFollowing, userProfile.selfFollowing) &&
        Objects.equals(this.bookmarks, userProfile.bookmarks) &&
        Objects.equals(this.recipes, userProfile.recipes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, name, bio, followersCount, followingCount, gender, profilePicture, diets, recipeCount, selfFollowing, bookmarks, recipes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProfile {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bio: ").append(toIndentedString(bio)).append("\n");
    sb.append("    followersCount: ").append(toIndentedString(followersCount)).append("\n");
    sb.append("    followingCount: ").append(toIndentedString(followingCount)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    profilePicture: ").append(toIndentedString(profilePicture)).append("\n");
    sb.append("    diets: ").append(toIndentedString(diets)).append("\n");
    sb.append("    recipeCount: ").append(toIndentedString(recipeCount)).append("\n");
    sb.append("    selfFollowing: ").append(toIndentedString(selfFollowing)).append("\n");
    sb.append("    bookmarks: ").append(toIndentedString(bookmarks)).append("\n");
    sb.append("    recipes: ").append(toIndentedString(recipes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

