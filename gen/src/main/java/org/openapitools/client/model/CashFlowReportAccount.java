/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CashFlowCashFlowBalance;
import org.openapitools.client.model.CashFlowCashFlowCharacteristic;
import org.openapitools.client.model.CashFlowCashFlowCredit;
import org.openapitools.client.model.CashFlowCashFlowDebit;
import org.openapitools.client.model.ReportTransaction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CashFlowReportAccount
 */
@JsonPropertyOrder({
  CashFlowReportAccount.JSON_PROPERTY_ID,
  CashFlowReportAccount.JSON_PROPERTY_OWNER_NAME,
  CashFlowReportAccount.JSON_PROPERTY_OWNER_ADDRESS,
  CashFlowReportAccount.JSON_PROPERTY_NAME,
  CashFlowReportAccount.JSON_PROPERTY_NUMBER,
  CashFlowReportAccount.JSON_PROPERTY_TYPE,
  CashFlowReportAccount.JSON_PROPERTY_CURRENCY,
  CashFlowReportAccount.JSON_PROPERTY_AGGREGATION_STATUS_CODE,
  CashFlowReportAccount.JSON_PROPERTY_CURRENT_BALANCE,
  CashFlowReportAccount.JSON_PROPERTY_AVAILABLE_BALANCE,
  CashFlowReportAccount.JSON_PROPERTY_BALANCE_DATE,
  CashFlowReportAccount.JSON_PROPERTY_TRANSACTIONS,
  CashFlowReportAccount.JSON_PROPERTY_CASH_FLOW_BALANCE,
  CashFlowReportAccount.JSON_PROPERTY_CASH_FLOW_CREDIT,
  CashFlowReportAccount.JSON_PROPERTY_CASH_FLOW_DEBIT,
  CashFlowReportAccount.JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T11:16:07.490346735Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CashFlowReportAccount {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_OWNER_ADDRESS = "ownerAddress";
  private String ownerAddress;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  private Integer aggregationStatusCode;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_BALANCE_DATE = "balanceDate";
  private Long balanceDate;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<ReportTransaction> transactions;

  public static final String JSON_PROPERTY_CASH_FLOW_BALANCE = "cashFlowBalance";
  private CashFlowCashFlowBalance cashFlowBalance;

  public static final String JSON_PROPERTY_CASH_FLOW_CREDIT = "cashFlowCredit";
  private CashFlowCashFlowCredit cashFlowCredit;

  public static final String JSON_PROPERTY_CASH_FLOW_DEBIT = "cashFlowDebit";
  private CashFlowCashFlowDebit cashFlowDebit;

  public static final String JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC = "cashFlowCharacteristic";
  private CashFlowCashFlowCharacteristic cashFlowCharacteristic;

  public CashFlowReportAccount() {
  }

  public CashFlowReportAccount id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Finicity account ID
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public CashFlowReportAccount ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * The name(s) of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then all owners will be listed separated by |.
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public CashFlowReportAccount ownerAddress(String ownerAddress) {
    
    this.ownerAddress = ownerAddress;
    return this;
  }

   /**
   * The mailing address of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then the address of the primary owner will be listed.
   * @return ownerAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerAddress() {
    return ownerAddress;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerAddress(String ownerAddress) {
    this.ownerAddress = ownerAddress;
  }


  public CashFlowReportAccount name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The account name from the institution
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CashFlowReportAccount number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * The account number from the institution (obfuscated)
   * @return number
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }


  public CashFlowReportAccount type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The list of supported account types. * &#x60;checking&#x60; * &#x60;savings&#x60; * &#x60;moneyMarket&#x60; * &#x60;cd&#x60; * &#x60;investment&#x60; * &#x60;investmentTaxDeferred&#x60; * &#x60;employeeStockPurchasePlan&#x60; * &#x60;ira&#x60; * &#x60;401k&#x60; * &#x60;roth&#x60; * &#x60;403b&#x60; * &#x60;529&#x60; * &#x60;rollover&#x60; * &#x60;ugma&#x60; * &#x60;utma&#x60; * &#x60;keogh&#x60; * &#x60;457&#x60; * &#x60;401a&#x60; * &#x60;unknown&#x60; * &#x60;mortgage&#x60; * &#x60;loan&#x60; * &#x60;creditCard&#x60; * &#x60;lineOfCredit&#x60; * &#x60;payroll&#x60; * &#x60;studentLoan&#x60; * &#x60;brokerageAccount&#x60; * &#x60;educationSavings&#x60; * &#x60;healthSavingsAccount&#x60; * &#x60;nonTaxableBrokerageAccount&#x60; * &#x60;pension&#x60; * &#x60;profitSharingPlan&#x60; * &#x60;roth401k&#x60; * &#x60;sepIRA&#x60; * &#x60;simpleIRA&#x60; * &#x60;thriftSavingsPlan&#x60; * &#x60;variableAnnuity&#x60;
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public CashFlowReportAccount currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code for account
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public CashFlowReportAccount aggregationStatusCode(Integer aggregationStatusCode) {
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public CashFlowReportAccount currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * The cleared balance of the account as-of &#x60;balanceDate&#x60;
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public CashFlowReportAccount availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * Available balance
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public CashFlowReportAccount balanceDate(Long balanceDate) {
    
    this.balanceDate = balanceDate;
    return this;
  }

   /**
   * A timestamp showing when the &#x60;balance&#x60; was captured
   * @return balanceDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBalanceDate() {
    return balanceDate;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceDate(Long balanceDate) {
    this.balanceDate = balanceDate;
  }


  public CashFlowReportAccount transactions(List<ReportTransaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public CashFlowReportAccount addTransactionsItem(ReportTransaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * a list of transaction records
   * @return transactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportTransaction> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactions(List<ReportTransaction> transactions) {
    this.transactions = transactions;
  }


  public CashFlowReportAccount cashFlowBalance(CashFlowCashFlowBalance cashFlowBalance) {
    
    this.cashFlowBalance = cashFlowBalance;
    return this;
  }

   /**
   * Get cashFlowBalance
   * @return cashFlowBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowBalance getCashFlowBalance() {
    return cashFlowBalance;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowBalance(CashFlowCashFlowBalance cashFlowBalance) {
    this.cashFlowBalance = cashFlowBalance;
  }


  public CashFlowReportAccount cashFlowCredit(CashFlowCashFlowCredit cashFlowCredit) {
    
    this.cashFlowCredit = cashFlowCredit;
    return this;
  }

   /**
   * Get cashFlowCredit
   * @return cashFlowCredit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowCredit getCashFlowCredit() {
    return cashFlowCredit;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowCredit(CashFlowCashFlowCredit cashFlowCredit) {
    this.cashFlowCredit = cashFlowCredit;
  }


  public CashFlowReportAccount cashFlowDebit(CashFlowCashFlowDebit cashFlowDebit) {
    
    this.cashFlowDebit = cashFlowDebit;
    return this;
  }

   /**
   * Get cashFlowDebit
   * @return cashFlowDebit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowDebit getCashFlowDebit() {
    return cashFlowDebit;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowDebit(CashFlowCashFlowDebit cashFlowDebit) {
    this.cashFlowDebit = cashFlowDebit;
  }


  public CashFlowReportAccount cashFlowCharacteristic(CashFlowCashFlowCharacteristic cashFlowCharacteristic) {
    
    this.cashFlowCharacteristic = cashFlowCharacteristic;
    return this;
  }

   /**
   * Get cashFlowCharacteristic
   * @return cashFlowCharacteristic
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashFlowCashFlowCharacteristic getCashFlowCharacteristic() {
    return cashFlowCharacteristic;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_CHARACTERISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowCharacteristic(CashFlowCashFlowCharacteristic cashFlowCharacteristic) {
    this.cashFlowCharacteristic = cashFlowCharacteristic;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowReportAccount cashFlowReportAccount = (CashFlowReportAccount) o;
    return Objects.equals(this.id, cashFlowReportAccount.id) &&
        Objects.equals(this.ownerName, cashFlowReportAccount.ownerName) &&
        Objects.equals(this.ownerAddress, cashFlowReportAccount.ownerAddress) &&
        Objects.equals(this.name, cashFlowReportAccount.name) &&
        Objects.equals(this.number, cashFlowReportAccount.number) &&
        Objects.equals(this.type, cashFlowReportAccount.type) &&
        Objects.equals(this.currency, cashFlowReportAccount.currency) &&
        Objects.equals(this.aggregationStatusCode, cashFlowReportAccount.aggregationStatusCode) &&
        Objects.equals(this.currentBalance, cashFlowReportAccount.currentBalance) &&
        Objects.equals(this.availableBalance, cashFlowReportAccount.availableBalance) &&
        Objects.equals(this.balanceDate, cashFlowReportAccount.balanceDate) &&
        Objects.equals(this.transactions, cashFlowReportAccount.transactions) &&
        Objects.equals(this.cashFlowBalance, cashFlowReportAccount.cashFlowBalance) &&
        Objects.equals(this.cashFlowCredit, cashFlowReportAccount.cashFlowCredit) &&
        Objects.equals(this.cashFlowDebit, cashFlowReportAccount.cashFlowDebit) &&
        Objects.equals(this.cashFlowCharacteristic, cashFlowReportAccount.cashFlowCharacteristic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ownerName, ownerAddress, name, number, type, currency, aggregationStatusCode, currentBalance, availableBalance, balanceDate, transactions, cashFlowBalance, cashFlowCredit, cashFlowDebit, cashFlowCharacteristic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowReportAccount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    balanceDate: ").append(toIndentedString(balanceDate)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    cashFlowBalance: ").append(toIndentedString(cashFlowBalance)).append("\n");
    sb.append("    cashFlowCredit: ").append(toIndentedString(cashFlowCredit)).append("\n");
    sb.append("    cashFlowDebit: ").append(toIndentedString(cashFlowDebit)).append("\n");
    sb.append("    cashFlowCharacteristic: ").append(toIndentedString(cashFlowCharacteristic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

