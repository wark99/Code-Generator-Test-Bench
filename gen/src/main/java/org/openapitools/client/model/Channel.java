/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Consumptionressource;
import org.openapitools.client.model.Liveressource;
import org.openapitools.client.model.Machine;
import org.openapitools.client.model.Player;
import org.openapitools.client.model.Stream;
import org.openapitools.client.model.ViewersRestrictions;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Channel
 */
@JsonPropertyOrder({
  Channel.JSON_PROPERTY_CHANNEL_ID,
  Channel.JSON_PROPERTY_NAME,
  Channel.JSON_PROPERTY_CREATED_AT,
  Channel.JSON_PROPERTY_UPDATED_AT,
  Channel.JSON_PROPERTY_DELETED_AT,
  Channel.JSON_PROPERTY_DELETED,
  Channel.JSON_PROPERTY_TYPE,
  Channel.JSON_PROPERTY_SOURCE_TYPE,
  Channel.JSON_PROPERTY_REMEMBER_TO_CONFIG,
  Channel.JSON_PROPERTY_FREE,
  Channel.JSON_PROPERTY_BLOCKED,
  Channel.JSON_PROPERTY_MAINTAINED,
  Channel.JSON_PROPERTY_BLOCKED_AT,
  Channel.JSON_PROPERTY_MAINTAINED_AT,
  Channel.JSON_PROPERTY_TAGS,
  Channel.JSON_PROPERTY_RIGHTS,
  Channel.JSON_PROPERTY_LIVE,
  Channel.JSON_PROPERTY_REAL_TYPE,
  Channel.JSON_PROPERTY_STATUS,
  Channel.JSON_PROPERTY_CONSUMPTION,
  Channel.JSON_PROPERTY_RECORDING_STATUS,
  Channel.JSON_PROPERTY_OPTIONS,
  Channel.JSON_PROPERTY_DEFAULT_OPTIONS,
  Channel.JSON_PROPERTY_STREAMS,
  Channel.JSON_PROPERTY_RESTRICTION,
  Channel.JSON_PROPERTY_MACHINES,
  Channel.JSON_PROPERTY_PLAYERS,
  Channel.JSON_PROPERTY_ORDER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Channel {
  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private Integer channelId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Integer updatedAt;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private Integer deletedAt;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ABR("abr"),
    
    MONO("mono");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Gets or Sets sourceType
   */
  public enum SourceTypeEnum {
    CAMIP("camip"),
    
    ENCODER("encoder"),
    
    MANIAK("maniak"),
    
    MOBILE("mobile"),
    
    WEBCAM("webcam");

    private String value;

    SourceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceTypeEnum fromValue(String value) {
      for (SourceTypeEnum b : SourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE_TYPE = "source_type";
  private SourceTypeEnum sourceType;

  public static final String JSON_PROPERTY_REMEMBER_TO_CONFIG = "remember_to_config";
  private Boolean rememberToConfig;

  public static final String JSON_PROPERTY_FREE = "free";
  private Boolean free;

  public static final String JSON_PROPERTY_BLOCKED = "blocked";
  private Boolean blocked;

  public static final String JSON_PROPERTY_MAINTAINED = "maintained";
  private Boolean maintained;

  public static final String JSON_PROPERTY_BLOCKED_AT = "blocked_at";
  private Integer blockedAt;

  public static final String JSON_PROPERTY_MAINTAINED_AT = "maintained_at";
  private Integer maintainedAt;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private String tags;

  public static final String JSON_PROPERTY_RIGHTS = "rights";
  private String rights;

  public static final String JSON_PROPERTY_LIVE = "live";
  private Liveressource live;

  public static final String JSON_PROPERTY_REAL_TYPE = "real_type";
  private String realType;

  public static final String JSON_PROPERTY_STATUS = "status";
  private List<String> status;

  public static final String JSON_PROPERTY_CONSUMPTION = "consumption";
  private Consumptionressource consumption;

  public static final String JSON_PROPERTY_RECORDING_STATUS = "recording_status";
  private String recordingStatus;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private List<String> options;

  public static final String JSON_PROPERTY_DEFAULT_OPTIONS = "default_options";
  private List<String> defaultOptions;

  public static final String JSON_PROPERTY_STREAMS = "streams";
  private List<Stream> streams;

  public static final String JSON_PROPERTY_RESTRICTION = "restriction";
  private ViewersRestrictions restriction;

  public static final String JSON_PROPERTY_MACHINES = "machines";
  private List<Machine> machines;

  public static final String JSON_PROPERTY_PLAYERS = "players";
  private List<Player> players;

  public static final String JSON_PROPERTY_ORDER = "order";
  private String order;

  public Channel() {
  }

  public Channel channelId(Integer channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * Unique identifier of the &#x60;channel&#x60; that is related to the resource &#x60;Channel&#x60;
   * @return channelId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelId(Integer channelId) {
    this.channelId = channelId;
  }


  public Channel name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource &#x60;Channel&#x60;
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Channel createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;Channel&#x60; has been created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public Channel updatedAt(Integer updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp &#x60;Channel&#x60; has been updated
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Channel deletedAt(Integer deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Timestamp &#x60;Channel&#x60; has been deleted
   * @return deletedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeletedAt(Integer deletedAt) {
    this.deletedAt = deletedAt;
  }


  public Channel deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Boolean &#x60;Channel&#x60; has been deleted
   * @return deleted
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public Channel type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Channel sourceType(SourceTypeEnum sourceType) {
    
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SourceTypeEnum getSourceType() {
    return sourceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceType(SourceTypeEnum sourceType) {
    this.sourceType = sourceType;
  }


  public Channel rememberToConfig(Boolean rememberToConfig) {
    
    this.rememberToConfig = rememberToConfig;
    return this;
  }

   /**
   * Get rememberToConfig
   * @return rememberToConfig
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REMEMBER_TO_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRememberToConfig() {
    return rememberToConfig;
  }


  @JsonProperty(JSON_PROPERTY_REMEMBER_TO_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRememberToConfig(Boolean rememberToConfig) {
    this.rememberToConfig = rememberToConfig;
  }


  public Channel free(Boolean free) {
    
    this.free = free;
    return this;
  }

   /**
   * Get free
   * @return free
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FREE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getFree() {
    return free;
  }


  @JsonProperty(JSON_PROPERTY_FREE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFree(Boolean free) {
    this.free = free;
  }


  public Channel blocked(Boolean blocked) {
    
    this.blocked = blocked;
    return this;
  }

   /**
   * Get blocked
   * @return blocked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBlocked() {
    return blocked;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlocked(Boolean blocked) {
    this.blocked = blocked;
  }


  public Channel maintained(Boolean maintained) {
    
    this.maintained = maintained;
    return this;
  }

   /**
   * Get maintained
   * @return maintained
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAINTAINED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMaintained() {
    return maintained;
  }


  @JsonProperty(JSON_PROPERTY_MAINTAINED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaintained(Boolean maintained) {
    this.maintained = maintained;
  }


  public Channel blockedAt(Integer blockedAt) {
    
    this.blockedAt = blockedAt;
    return this;
  }

   /**
   * Get blockedAt
   * @return blockedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBlockedAt() {
    return blockedAt;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockedAt(Integer blockedAt) {
    this.blockedAt = blockedAt;
  }


  public Channel maintainedAt(Integer maintainedAt) {
    
    this.maintainedAt = maintainedAt;
    return this;
  }

   /**
   * Get maintainedAt
   * @return maintainedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAINTAINED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaintainedAt() {
    return maintainedAt;
  }


  @JsonProperty(JSON_PROPERTY_MAINTAINED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaintainedAt(Integer maintainedAt) {
    this.maintainedAt = maintainedAt;
  }


  public Channel tags(String tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(String tags) {
    this.tags = tags;
  }


  public Channel rights(String rights) {
    
    this.rights = rights;
    return this;
  }

   /**
   * Get rights
   * @return rights
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRights() {
    return rights;
  }


  @JsonProperty(JSON_PROPERTY_RIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRights(String rights) {
    this.rights = rights;
  }


  public Channel live(Liveressource live) {
    
    this.live = live;
    return this;
  }

   /**
   * Get live
   * @return live
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Liveressource getLive() {
    return live;
  }


  @JsonProperty(JSON_PROPERTY_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLive(Liveressource live) {
    this.live = live;
  }


  public Channel realType(String realType) {
    
    this.realType = realType;
    return this;
  }

   /**
   * Get realType
   * @return realType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRealType() {
    return realType;
  }


  @JsonProperty(JSON_PROPERTY_REAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRealType(String realType) {
    this.realType = realType;
  }


  public Channel status(List<String> status) {
    
    this.status = status;
    return this;
  }

  public Channel addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Status of the resource &#x60;Channel&#x60;
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(List<String> status) {
    this.status = status;
  }


  public Channel consumption(Consumptionressource consumption) {
    
    this.consumption = consumption;
    return this;
  }

   /**
   * Get consumption
   * @return consumption
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Consumptionressource getConsumption() {
    return consumption;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumption(Consumptionressource consumption) {
    this.consumption = consumption;
  }


  public Channel recordingStatus(String recordingStatus) {
    
    this.recordingStatus = recordingStatus;
    return this;
  }

   /**
   * Get recordingStatus
   * @return recordingStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORDING_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordingStatus() {
    return recordingStatus;
  }


  @JsonProperty(JSON_PROPERTY_RECORDING_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordingStatus(String recordingStatus) {
    this.recordingStatus = recordingStatus;
  }


  public Channel options(List<String> options) {
    
    this.options = options;
    return this;
  }

  public Channel addOptionsItem(String optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(List<String> options) {
    this.options = options;
  }


  public Channel defaultOptions(List<String> defaultOptions) {
    
    this.defaultOptions = defaultOptions;
    return this;
  }

  public Channel addDefaultOptionsItem(String defaultOptionsItem) {
    if (this.defaultOptions == null) {
      this.defaultOptions = new ArrayList<>();
    }
    this.defaultOptions.add(defaultOptionsItem);
    return this;
  }

   /**
   * Get defaultOptions
   * @return defaultOptions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDefaultOptions() {
    return defaultOptions;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultOptions(List<String> defaultOptions) {
    this.defaultOptions = defaultOptions;
  }


  public Channel streams(List<Stream> streams) {
    
    this.streams = streams;
    return this;
  }

  public Channel addStreamsItem(Stream streamsItem) {
    if (this.streams == null) {
      this.streams = new ArrayList<>();
    }
    this.streams.add(streamsItem);
    return this;
  }

   /**
   * Get streams
   * @return streams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Stream> getStreams() {
    return streams;
  }


  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreams(List<Stream> streams) {
    this.streams = streams;
  }


  public Channel restriction(ViewersRestrictions restriction) {
    
    this.restriction = restriction;
    return this;
  }

   /**
   * Get restriction
   * @return restriction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ViewersRestrictions getRestriction() {
    return restriction;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestriction(ViewersRestrictions restriction) {
    this.restriction = restriction;
  }


  public Channel machines(List<Machine> machines) {
    
    this.machines = machines;
    return this;
  }

  public Channel addMachinesItem(Machine machinesItem) {
    if (this.machines == null) {
      this.machines = new ArrayList<>();
    }
    this.machines.add(machinesItem);
    return this;
  }

   /**
   * Get machines
   * @return machines
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MACHINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Machine> getMachines() {
    return machines;
  }


  @JsonProperty(JSON_PROPERTY_MACHINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMachines(List<Machine> machines) {
    this.machines = machines;
  }


  public Channel players(List<Player> players) {
    
    this.players = players;
    return this;
  }

  public Channel addPlayersItem(Player playersItem) {
    if (this.players == null) {
      this.players = new ArrayList<>();
    }
    this.players.add(playersItem);
    return this;
  }

   /**
   * Get players
   * @return players
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Player> getPlayers() {
    return players;
  }


  @JsonProperty(JSON_PROPERTY_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlayers(List<Player> players) {
    this.players = players;
  }


  public Channel order(String order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(String order) {
    this.order = order;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Channel channel = (Channel) o;
    return Objects.equals(this.channelId, channel.channelId) &&
        Objects.equals(this.name, channel.name) &&
        Objects.equals(this.createdAt, channel.createdAt) &&
        Objects.equals(this.updatedAt, channel.updatedAt) &&
        Objects.equals(this.deletedAt, channel.deletedAt) &&
        Objects.equals(this.deleted, channel.deleted) &&
        Objects.equals(this.type, channel.type) &&
        Objects.equals(this.sourceType, channel.sourceType) &&
        Objects.equals(this.rememberToConfig, channel.rememberToConfig) &&
        Objects.equals(this.free, channel.free) &&
        Objects.equals(this.blocked, channel.blocked) &&
        Objects.equals(this.maintained, channel.maintained) &&
        Objects.equals(this.blockedAt, channel.blockedAt) &&
        Objects.equals(this.maintainedAt, channel.maintainedAt) &&
        Objects.equals(this.tags, channel.tags) &&
        Objects.equals(this.rights, channel.rights) &&
        Objects.equals(this.live, channel.live) &&
        Objects.equals(this.realType, channel.realType) &&
        Objects.equals(this.status, channel.status) &&
        Objects.equals(this.consumption, channel.consumption) &&
        Objects.equals(this.recordingStatus, channel.recordingStatus) &&
        Objects.equals(this.options, channel.options) &&
        Objects.equals(this.defaultOptions, channel.defaultOptions) &&
        Objects.equals(this.streams, channel.streams) &&
        Objects.equals(this.restriction, channel.restriction) &&
        Objects.equals(this.machines, channel.machines) &&
        Objects.equals(this.players, channel.players) &&
        Objects.equals(this.order, channel.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, name, createdAt, updatedAt, deletedAt, deleted, type, sourceType, rememberToConfig, free, blocked, maintained, blockedAt, maintainedAt, tags, rights, live, realType, status, consumption, recordingStatus, options, defaultOptions, streams, restriction, machines, players, order);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Channel {\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    rememberToConfig: ").append(toIndentedString(rememberToConfig)).append("\n");
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    blocked: ").append(toIndentedString(blocked)).append("\n");
    sb.append("    maintained: ").append(toIndentedString(maintained)).append("\n");
    sb.append("    blockedAt: ").append(toIndentedString(blockedAt)).append("\n");
    sb.append("    maintainedAt: ").append(toIndentedString(maintainedAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    rights: ").append(toIndentedString(rights)).append("\n");
    sb.append("    live: ").append(toIndentedString(live)).append("\n");
    sb.append("    realType: ").append(toIndentedString(realType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    consumption: ").append(toIndentedString(consumption)).append("\n");
    sb.append("    recordingStatus: ").append(toIndentedString(recordingStatus)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    defaultOptions: ").append(toIndentedString(defaultOptions)).append("\n");
    sb.append("    streams: ").append(toIndentedString(streams)).append("\n");
    sb.append("    restriction: ").append(toIndentedString(restriction)).append("\n");
    sb.append("    machines: ").append(toIndentedString(machines)).append("\n");
    sb.append("    players: ").append(toIndentedString(players)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

