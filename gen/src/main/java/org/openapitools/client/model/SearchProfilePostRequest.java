/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SearchProfilePostRequestFilter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SearchProfilePostRequest
 */
@JsonPropertyOrder({
  SearchProfilePostRequest.JSON_PROPERTY_SEARCH_ID,
  SearchProfilePostRequest.JSON_PROPERTY_SEARCH_TYPE,
  SearchProfilePostRequest.JSON_PROPERTY_SEARCH_TEXT,
  SearchProfilePostRequest.JSON_PROPERTY_SORT,
  SearchProfilePostRequest.JSON_PROPERTY_NEXT_PAGE,
  SearchProfilePostRequest.JSON_PROPERTY_MAX_PAGE_RESULTS,
  SearchProfilePostRequest.JSON_PROPERTY_FILTER
})
@JsonTypeName("_search_profile_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SearchProfilePostRequest {
  public static final String JSON_PROPERTY_SEARCH_ID = "search_id";
  private String searchId;

  /**
   * only need to be supplied for anonymous search
   */
  public enum SearchTypeEnum {
    PARENT("parent"),
    
    PROVIDER("provider");

    private String value;

    SearchTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SearchTypeEnum fromValue(String value) {
      for (SearchTypeEnum b : SearchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEARCH_TYPE = "search_type";
  private SearchTypeEnum searchType;

  public static final String JSON_PROPERTY_SEARCH_TEXT = "search_text";
  private String searchText;

  /**
   * Gets or Sets sort
   */
  public enum SortEnum {
    LAST_SEEN_ASC("last_seen_asc"),
    
    LAST_SEEN_DESC("last_seen_desc"),
    
    AGE_ASC("age_asc"),
    
    AGE_DESC("age_desc"),
    
    HOURLY_RATE_ASC("hourly_rate_asc"),
    
    HOURLY_RATE_DESC("hourly_rate_desc");

    private String value;

    SortEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SortEnum fromValue(String value) {
      for (SortEnum b : SortEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SORT = "sort";
  private SortEnum sort;

  public static final String JSON_PROPERTY_NEXT_PAGE = "next_page";
  private Integer nextPage;

  public static final String JSON_PROPERTY_MAX_PAGE_RESULTS = "max_page_results";
  private Integer maxPageResults;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private SearchProfilePostRequestFilter filter;

  public SearchProfilePostRequest() {
  }

  public SearchProfilePostRequest searchId(String searchId) {
    
    this.searchId = searchId;
    return this;
  }

   /**
   * Get searchId
   * @return searchId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchId() {
    return searchId;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchId(String searchId) {
    this.searchId = searchId;
  }


  public SearchProfilePostRequest searchType(SearchTypeEnum searchType) {
    
    this.searchType = searchType;
    return this;
  }

   /**
   * only need to be supplied for anonymous search
   * @return searchType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SearchTypeEnum getSearchType() {
    return searchType;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchType(SearchTypeEnum searchType) {
    this.searchType = searchType;
  }


  public SearchProfilePostRequest searchText(String searchText) {
    
    this.searchText = searchText;
    return this;
  }

   /**
   * Get searchText
   * @return searchText
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchText() {
    return searchText;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchText(String searchText) {
    this.searchText = searchText;
  }


  public SearchProfilePostRequest sort(SortEnum sort) {
    
    this.sort = sort;
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SortEnum getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(SortEnum sort) {
    this.sort = sort;
  }


  public SearchProfilePostRequest nextPage(Integer nextPage) {
    
    this.nextPage = nextPage;
    return this;
  }

   /**
   * Get nextPage
   * @return nextPage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNextPage() {
    return nextPage;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextPage(Integer nextPage) {
    this.nextPage = nextPage;
  }


  public SearchProfilePostRequest maxPageResults(Integer maxPageResults) {
    
    this.maxPageResults = maxPageResults;
    return this;
  }

   /**
   * Get maxPageResults
   * @return maxPageResults
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_PAGE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxPageResults() {
    return maxPageResults;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PAGE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPageResults(Integer maxPageResults) {
    this.maxPageResults = maxPageResults;
  }


  public SearchProfilePostRequest filter(SearchProfilePostRequestFilter filter) {
    
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SearchProfilePostRequestFilter getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilter(SearchProfilePostRequestFilter filter) {
    this.filter = filter;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchProfilePostRequest searchProfilePostRequest = (SearchProfilePostRequest) o;
    return Objects.equals(this.searchId, searchProfilePostRequest.searchId) &&
        Objects.equals(this.searchType, searchProfilePostRequest.searchType) &&
        Objects.equals(this.searchText, searchProfilePostRequest.searchText) &&
        Objects.equals(this.sort, searchProfilePostRequest.sort) &&
        Objects.equals(this.nextPage, searchProfilePostRequest.nextPage) &&
        Objects.equals(this.maxPageResults, searchProfilePostRequest.maxPageResults) &&
        Objects.equals(this.filter, searchProfilePostRequest.filter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchId, searchType, searchText, sort, nextPage, maxPageResults, filter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchProfilePostRequest {\n");
    sb.append("    searchId: ").append(toIndentedString(searchId)).append("\n");
    sb.append("    searchType: ").append(toIndentedString(searchType)).append("\n");
    sb.append("    searchText: ").append(toIndentedString(searchText)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("    maxPageResults: ").append(toIndentedString(maxPageResults)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

