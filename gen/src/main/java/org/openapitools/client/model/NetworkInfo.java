/*
 * connect-api
 * # API Rules * Null values are not sent / received. * Object IDs are **always** sent in list methods, but are **ignored** in create / update methods. * All request and response objects are at the root of the returned structure, if they contain only one entity. * Response of multiple entities is returned as an object that contains the list of entities and a structure `pager`, if necessary. ### Additional documentation: * [Camera registration](../camera_registration/) * [Camera communication](../camera_communication/) ### HTTP Status * 200 - OK, response contains data (usually the entire entity) * 201 - OK, entry created; response contains data as required * 204 - OK, no response * 304 - Response has not been modified * 400 - Invalid request / invalid input (SDK error) * 401 - Endpoint is being accessed without credentials (SDK error) * 403 - Request can't be served, usually due to insufficient rights (user error) * 404 - Entity not found (user error or outdated data) * 409 - Conflict with the state of target resource (user error) * 50x - Server side error
 *
 * The version of the OpenAPI document: 0.22.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Network information
 */
@JsonPropertyOrder({
  NetworkInfo.JSON_PROPERTY_LAN_MAC,
  NetworkInfo.JSON_PROPERTY_LAN_IPV4,
  NetworkInfo.JSON_PROPERTY_LAN_IPV6,
  NetworkInfo.JSON_PROPERTY_WIFI_MAC,
  NetworkInfo.JSON_PROPERTY_WIFI_IPV4,
  NetworkInfo.JSON_PROPERTY_WIFI_IPV6,
  NetworkInfo.JSON_PROPERTY_WIFI_SSID
})
@JsonTypeName("network_info")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:13.609131704Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class NetworkInfo {
  public static final String JSON_PROPERTY_LAN_MAC = "lan_mac";
  private String lanMac;

  public static final String JSON_PROPERTY_LAN_IPV4 = "lan_ipv4";
  private String lanIpv4;

  public static final String JSON_PROPERTY_LAN_IPV6 = "lan_ipv6";
  private String lanIpv6;

  public static final String JSON_PROPERTY_WIFI_MAC = "wifi_mac";
  private String wifiMac;

  public static final String JSON_PROPERTY_WIFI_IPV4 = "wifi_ipv4";
  private String wifiIpv4;

  public static final String JSON_PROPERTY_WIFI_IPV6 = "wifi_ipv6";
  private String wifiIpv6;

  public static final String JSON_PROPERTY_WIFI_SSID = "wifi_ssid";
  private String wifiSsid;

  public NetworkInfo() {
  }

  public NetworkInfo lanMac(String lanMac) {
    
    this.lanMac = lanMac;
    return this;
  }

   /**
   * Hardware address of ethernet port.
   * @return lanMac
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAN_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanMac() {
    return lanMac;
  }


  @JsonProperty(JSON_PROPERTY_LAN_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanMac(String lanMac) {
    this.lanMac = lanMac;
  }


  public NetworkInfo lanIpv4(String lanIpv4) {
    
    this.lanIpv4 = lanIpv4;
    return this;
  }

   /**
   * IPv4 address of ethernet port.
   * @return lanIpv4
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAN_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanIpv4() {
    return lanIpv4;
  }


  @JsonProperty(JSON_PROPERTY_LAN_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanIpv4(String lanIpv4) {
    this.lanIpv4 = lanIpv4;
  }


  public NetworkInfo lanIpv6(String lanIpv6) {
    
    this.lanIpv6 = lanIpv6;
    return this;
  }

   /**
   * IPv6 address of ethernet port.
   * @return lanIpv6
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAN_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanIpv6() {
    return lanIpv6;
  }


  @JsonProperty(JSON_PROPERTY_LAN_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanIpv6(String lanIpv6) {
    this.lanIpv6 = lanIpv6;
  }


  public NetworkInfo wifiMac(String wifiMac) {
    
    this.wifiMac = wifiMac;
    return this;
  }

   /**
   * Hardware address of Wi-Fi device.
   * @return wifiMac
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIFI_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWifiMac() {
    return wifiMac;
  }


  @JsonProperty(JSON_PROPERTY_WIFI_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWifiMac(String wifiMac) {
    this.wifiMac = wifiMac;
  }


  public NetworkInfo wifiIpv4(String wifiIpv4) {
    
    this.wifiIpv4 = wifiIpv4;
    return this;
  }

   /**
   * IPv4 address of Wi-Fi device.
   * @return wifiIpv4
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIFI_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWifiIpv4() {
    return wifiIpv4;
  }


  @JsonProperty(JSON_PROPERTY_WIFI_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWifiIpv4(String wifiIpv4) {
    this.wifiIpv4 = wifiIpv4;
  }


  public NetworkInfo wifiIpv6(String wifiIpv6) {
    
    this.wifiIpv6 = wifiIpv6;
    return this;
  }

   /**
   * IPv6 address of Wi-Fi device.
   * @return wifiIpv6
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIFI_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWifiIpv6() {
    return wifiIpv6;
  }


  @JsonProperty(JSON_PROPERTY_WIFI_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWifiIpv6(String wifiIpv6) {
    this.wifiIpv6 = wifiIpv6;
  }


  public NetworkInfo wifiSsid(String wifiSsid) {
    
    this.wifiSsid = wifiSsid;
    return this;
  }

   /**
   * SSID of Wi-Fi network which is used by Wi-Fi device.
   * @return wifiSsid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIFI_SSID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWifiSsid() {
    return wifiSsid;
  }


  @JsonProperty(JSON_PROPERTY_WIFI_SSID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWifiSsid(String wifiSsid) {
    this.wifiSsid = wifiSsid;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkInfo networkInfo = (NetworkInfo) o;
    return Objects.equals(this.lanMac, networkInfo.lanMac) &&
        Objects.equals(this.lanIpv4, networkInfo.lanIpv4) &&
        Objects.equals(this.lanIpv6, networkInfo.lanIpv6) &&
        Objects.equals(this.wifiMac, networkInfo.wifiMac) &&
        Objects.equals(this.wifiIpv4, networkInfo.wifiIpv4) &&
        Objects.equals(this.wifiIpv6, networkInfo.wifiIpv6) &&
        Objects.equals(this.wifiSsid, networkInfo.wifiSsid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lanMac, lanIpv4, lanIpv6, wifiMac, wifiIpv4, wifiIpv6, wifiSsid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkInfo {\n");
    sb.append("    lanMac: ").append(toIndentedString(lanMac)).append("\n");
    sb.append("    lanIpv4: ").append(toIndentedString(lanIpv4)).append("\n");
    sb.append("    lanIpv6: ").append(toIndentedString(lanIpv6)).append("\n");
    sb.append("    wifiMac: ").append(toIndentedString(wifiMac)).append("\n");
    sb.append("    wifiIpv4: ").append(toIndentedString(wifiIpv4)).append("\n");
    sb.append("    wifiIpv6: ").append(toIndentedString(wifiIpv6)).append("\n");
    sb.append("    wifiSsid: ").append(toIndentedString(wifiSsid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

