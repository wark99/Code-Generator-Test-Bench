/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BuyerCriteriaResponseBathrooms;
import org.openapitools.client.model.BuyerCriteriaResponseBedrooms;
import org.openapitools.client.model.LocationCriteriaResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BuyerCriteriaResponse
 */
@JsonPropertyOrder({
  BuyerCriteriaResponse.JSON_PROPERTY_LOCATIONS,
  BuyerCriteriaResponse.JSON_PROPERTY_PROPERTY_TYPES,
  BuyerCriteriaResponse.JSON_PROPERTY_BEDROOMS,
  BuyerCriteriaResponse.JSON_PROPERTY_BATHROOMS,
  BuyerCriteriaResponse.JSON_PROPERTY_PRICE,
  BuyerCriteriaResponse.JSON_PROPERTY_MATCHING_NOTES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class BuyerCriteriaResponse {
  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private List<LocationCriteriaResponse> locations;

  /**
   * Gets or Sets propertyTypes
   */
  public enum PropertyTypesEnum {
    ALL("All"),
    
    HOUSE("House"),
    
    FLAT("Flat"),
    
    BUNGALOW("Bungalow");

    private String value;

    PropertyTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PropertyTypesEnum fromValue(String value) {
      for (PropertyTypesEnum b : PropertyTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROPERTY_TYPES = "property_types";
  private List<PropertyTypesEnum> propertyTypes;

  public static final String JSON_PROPERTY_BEDROOMS = "bedrooms";
  private BuyerCriteriaResponseBedrooms bedrooms;

  public static final String JSON_PROPERTY_BATHROOMS = "bathrooms";
  private BuyerCriteriaResponseBathrooms bathrooms;

  public static final String JSON_PROPERTY_PRICE = "price";
  private BuyerCriteriaResponseBedrooms price;

  public static final String JSON_PROPERTY_MATCHING_NOTES = "matching_notes";
  private String matchingNotes;

  public BuyerCriteriaResponse() {
  }

  public BuyerCriteriaResponse locations(List<LocationCriteriaResponse> locations) {
    
    this.locations = locations;
    return this;
  }

  public BuyerCriteriaResponse addLocationsItem(LocationCriteriaResponse locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LocationCriteriaResponse> getLocations() {
    return locations;
  }


  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocations(List<LocationCriteriaResponse> locations) {
    this.locations = locations;
  }


  public BuyerCriteriaResponse propertyTypes(List<PropertyTypesEnum> propertyTypes) {
    
    this.propertyTypes = propertyTypes;
    return this;
  }

  public BuyerCriteriaResponse addPropertyTypesItem(PropertyTypesEnum propertyTypesItem) {
    if (this.propertyTypes == null) {
      this.propertyTypes = new ArrayList<>();
    }
    this.propertyTypes.add(propertyTypesItem);
    return this;
  }

   /**
   * Get propertyTypes
   * @return propertyTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PropertyTypesEnum> getPropertyTypes() {
    return propertyTypes;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyTypes(List<PropertyTypesEnum> propertyTypes) {
    this.propertyTypes = propertyTypes;
  }


  public BuyerCriteriaResponse bedrooms(BuyerCriteriaResponseBedrooms bedrooms) {
    
    this.bedrooms = bedrooms;
    return this;
  }

   /**
   * Get bedrooms
   * @return bedrooms
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEDROOMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuyerCriteriaResponseBedrooms getBedrooms() {
    return bedrooms;
  }


  @JsonProperty(JSON_PROPERTY_BEDROOMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBedrooms(BuyerCriteriaResponseBedrooms bedrooms) {
    this.bedrooms = bedrooms;
  }


  public BuyerCriteriaResponse bathrooms(BuyerCriteriaResponseBathrooms bathrooms) {
    
    this.bathrooms = bathrooms;
    return this;
  }

   /**
   * Get bathrooms
   * @return bathrooms
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BATHROOMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuyerCriteriaResponseBathrooms getBathrooms() {
    return bathrooms;
  }


  @JsonProperty(JSON_PROPERTY_BATHROOMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBathrooms(BuyerCriteriaResponseBathrooms bathrooms) {
    this.bathrooms = bathrooms;
  }


  public BuyerCriteriaResponse price(BuyerCriteriaResponseBedrooms price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuyerCriteriaResponseBedrooms getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(BuyerCriteriaResponseBedrooms price) {
    this.price = price;
  }


  public BuyerCriteriaResponse matchingNotes(String matchingNotes) {
    
    this.matchingNotes = matchingNotes;
    return this;
  }

   /**
   * Get matchingNotes
   * @return matchingNotes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCHING_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMatchingNotes() {
    return matchingNotes;
  }


  @JsonProperty(JSON_PROPERTY_MATCHING_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchingNotes(String matchingNotes) {
    this.matchingNotes = matchingNotes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuyerCriteriaResponse buyerCriteriaResponse = (BuyerCriteriaResponse) o;
    return Objects.equals(this.locations, buyerCriteriaResponse.locations) &&
        Objects.equals(this.propertyTypes, buyerCriteriaResponse.propertyTypes) &&
        Objects.equals(this.bedrooms, buyerCriteriaResponse.bedrooms) &&
        Objects.equals(this.bathrooms, buyerCriteriaResponse.bathrooms) &&
        Objects.equals(this.price, buyerCriteriaResponse.price) &&
        Objects.equals(this.matchingNotes, buyerCriteriaResponse.matchingNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locations, propertyTypes, bedrooms, bathrooms, price, matchingNotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuyerCriteriaResponse {\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    propertyTypes: ").append(toIndentedString(propertyTypes)).append("\n");
    sb.append("    bedrooms: ").append(toIndentedString(bedrooms)).append("\n");
    sb.append("    bathrooms: ").append(toIndentedString(bathrooms)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    matchingNotes: ").append(toIndentedString(matchingNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

