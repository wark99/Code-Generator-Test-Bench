/*
 * Customer Payment Domain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountHolder;
import org.openapitools.client.model.AuthPnr;
import org.openapitools.client.model.AuthResponse;
import org.openapitools.client.model.ClientAuthReceived;
import org.openapitools.client.model.FormOfPayment;
import org.openapitools.client.model.Passenger;
import org.openapitools.client.model.PaymentNotifications;
import org.openapitools.client.model.Segment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Authorization
 */
@JsonPropertyOrder({
  Authorization.JSON_PROPERTY_FORM_OF_PAYMENT,
  Authorization.JSON_PROPERTY_ACCOUNT_HOLDER,
  Authorization.JSON_PROPERTY_AUTH_PNR,
  Authorization.JSON_PROPERTY_SEGMENTS,
  Authorization.JSON_PROPERTY_PASSENGERS,
  Authorization.JSON_PROPERTY_CLIENT_AUTH_RECEIVED,
  Authorization.JSON_PROPERTY_PAYMENT_NOTIFICATIONS,
  Authorization.JSON_PROPERTY_AUTH_RESPONSE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:54.275857511Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Authorization {
  public static final String JSON_PROPERTY_FORM_OF_PAYMENT = "formOfPayment";
  private FormOfPayment formOfPayment;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER = "accountHolder";
  private AccountHolder accountHolder;

  public static final String JSON_PROPERTY_AUTH_PNR = "authPnr";
  private AuthPnr authPnr;

  public static final String JSON_PROPERTY_SEGMENTS = "segments";
  private List<Segment> segments;

  public static final String JSON_PROPERTY_PASSENGERS = "passengers";
  private List<Passenger> passengers;

  public static final String JSON_PROPERTY_CLIENT_AUTH_RECEIVED = "clientAuthReceived";
  private ClientAuthReceived clientAuthReceived;

  public static final String JSON_PROPERTY_PAYMENT_NOTIFICATIONS = "paymentNotifications";
  private PaymentNotifications paymentNotifications;

  public static final String JSON_PROPERTY_AUTH_RESPONSE = "authResponse";
  private AuthResponse authResponse;

  public Authorization() {
  }

  public Authorization formOfPayment(FormOfPayment formOfPayment) {
    
    this.formOfPayment = formOfPayment;
    return this;
  }

   /**
   * Get formOfPayment
   * @return formOfPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORM_OF_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormOfPayment getFormOfPayment() {
    return formOfPayment;
  }


  @JsonProperty(JSON_PROPERTY_FORM_OF_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormOfPayment(FormOfPayment formOfPayment) {
    this.formOfPayment = formOfPayment;
  }


  public Authorization accountHolder(AccountHolder accountHolder) {
    
    this.accountHolder = accountHolder;
    return this;
  }

   /**
   * Get accountHolder
   * @return accountHolder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountHolder getAccountHolder() {
    return accountHolder;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountHolder(AccountHolder accountHolder) {
    this.accountHolder = accountHolder;
  }


  public Authorization authPnr(AuthPnr authPnr) {
    
    this.authPnr = authPnr;
    return this;
  }

   /**
   * Get authPnr
   * @return authPnr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_PNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthPnr getAuthPnr() {
    return authPnr;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_PNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthPnr(AuthPnr authPnr) {
    this.authPnr = authPnr;
  }


  public Authorization segments(List<Segment> segments) {
    
    this.segments = segments;
    return this;
  }

  public Authorization addSegmentsItem(Segment segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

   /**
   * Get segments
   * @return segments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Segment> getSegments() {
    return segments;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegments(List<Segment> segments) {
    this.segments = segments;
  }


  public Authorization passengers(List<Passenger> passengers) {
    
    this.passengers = passengers;
    return this;
  }

  public Authorization addPassengersItem(Passenger passengersItem) {
    if (this.passengers == null) {
      this.passengers = new ArrayList<>();
    }
    this.passengers.add(passengersItem);
    return this;
  }

   /**
   * Get passengers
   * @return passengers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSENGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Passenger> getPassengers() {
    return passengers;
  }


  @JsonProperty(JSON_PROPERTY_PASSENGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassengers(List<Passenger> passengers) {
    this.passengers = passengers;
  }


  public Authorization clientAuthReceived(ClientAuthReceived clientAuthReceived) {
    
    this.clientAuthReceived = clientAuthReceived;
    return this;
  }

   /**
   * Get clientAuthReceived
   * @return clientAuthReceived
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_AUTH_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClientAuthReceived getClientAuthReceived() {
    return clientAuthReceived;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_AUTH_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientAuthReceived(ClientAuthReceived clientAuthReceived) {
    this.clientAuthReceived = clientAuthReceived;
  }


  public Authorization paymentNotifications(PaymentNotifications paymentNotifications) {
    
    this.paymentNotifications = paymentNotifications;
    return this;
  }

   /**
   * Get paymentNotifications
   * @return paymentNotifications
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentNotifications getPaymentNotifications() {
    return paymentNotifications;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentNotifications(PaymentNotifications paymentNotifications) {
    this.paymentNotifications = paymentNotifications;
  }


  public Authorization authResponse(AuthResponse authResponse) {
    
    this.authResponse = authResponse;
    return this;
  }

   /**
   * Get authResponse
   * @return authResponse
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthResponse getAuthResponse() {
    return authResponse;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthResponse(AuthResponse authResponse) {
    this.authResponse = authResponse;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Authorization authorization = (Authorization) o;
    return Objects.equals(this.formOfPayment, authorization.formOfPayment) &&
        Objects.equals(this.accountHolder, authorization.accountHolder) &&
        Objects.equals(this.authPnr, authorization.authPnr) &&
        Objects.equals(this.segments, authorization.segments) &&
        Objects.equals(this.passengers, authorization.passengers) &&
        Objects.equals(this.clientAuthReceived, authorization.clientAuthReceived) &&
        Objects.equals(this.paymentNotifications, authorization.paymentNotifications) &&
        Objects.equals(this.authResponse, authorization.authResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(formOfPayment, accountHolder, authPnr, segments, passengers, clientAuthReceived, paymentNotifications, authResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Authorization {\n");
    sb.append("    formOfPayment: ").append(toIndentedString(formOfPayment)).append("\n");
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    authPnr: ").append(toIndentedString(authPnr)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    passengers: ").append(toIndentedString(passengers)).append("\n");
    sb.append("    clientAuthReceived: ").append(toIndentedString(clientAuthReceived)).append("\n");
    sb.append("    paymentNotifications: ").append(toIndentedString(paymentNotifications)).append("\n");
    sb.append("    authResponse: ").append(toIndentedString(authResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

