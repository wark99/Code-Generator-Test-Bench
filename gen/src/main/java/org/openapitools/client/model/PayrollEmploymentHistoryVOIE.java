/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PayrollEmployeeRecord;
import org.openapitools.client.model.PayrollEmploymentRecord;
import org.openapitools.client.model.PayrollVOIEIncomeRecord;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayrollEmploymentHistoryVOIE
 */
@JsonPropertyOrder({
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_AS_OF_DATE,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_EMPLOYMENT_ID,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_EMPLOYER_NAME,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_PAYROLL_SOURCE,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_PAYROLL_PROVIDER,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_EMPLOYEE,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_EMPLOYMENT,
  PayrollEmploymentHistoryVOIE.JSON_PROPERTY_INCOME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:35.632313798Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PayrollEmploymentHistoryVOIE {
  public static final String JSON_PROPERTY_AS_OF_DATE = "asOfDate";
  private Long asOfDate;

  public static final String JSON_PROPERTY_EMPLOYMENT_ID = "employmentId";
  private String employmentId;

  public static final String JSON_PROPERTY_EMPLOYER_NAME = "employerName";
  private String employerName;

  public static final String JSON_PROPERTY_PAYROLL_SOURCE = "payrollSource";
  private String payrollSource;

  public static final String JSON_PROPERTY_PAYROLL_PROVIDER = "payrollProvider";
  private String payrollProvider;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private PayrollEmployeeRecord employee;

  public static final String JSON_PROPERTY_EMPLOYMENT = "employment";
  private PayrollEmploymentRecord employment;

  public static final String JSON_PROPERTY_INCOME = "income";
  private PayrollVOIEIncomeRecord income;

  public PayrollEmploymentHistoryVOIE() {
  }

  public PayrollEmploymentHistoryVOIE asOfDate(Long asOfDate) {
    
    this.asOfDate = asOfDate;
    return this;
  }

   /**
   * The last time the payroll data was updated in the payroll provider&#39;s system
   * @return asOfDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAsOfDate() {
    return asOfDate;
  }


  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsOfDate(Long asOfDate) {
    this.asOfDate = asOfDate;
  }


  public PayrollEmploymentHistoryVOIE employmentId(String employmentId) {
    
    this.employmentId = employmentId;
    return this;
  }

   /**
   * This is a Mastercard assigned ID to the employment record. It remains consistent for that employment record, even if the report is refreshed. It can be used to limit the employment records that are returned in the report.
   * @return employmentId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmploymentId() {
    return employmentId;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmploymentId(String employmentId) {
    this.employmentId = employmentId;
  }


  public PayrollEmploymentHistoryVOIE employerName(String employerName) {
    
    this.employerName = employerName;
    return this;
  }

   /**
   * Name of the employer as stated by the employer in the payroll system
   * @return employerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmployerName() {
    return employerName;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployerName(String employerName) {
    this.employerName = employerName;
  }


  public PayrollEmploymentHistoryVOIE payrollSource(String payrollSource) {
    
    this.payrollSource = payrollSource;
    return this;
  }

   /**
   * The name of the payroll source where the data was retrieved
   * @return payrollSource
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYROLL_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayrollSource() {
    return payrollSource;
  }


  @JsonProperty(JSON_PROPERTY_PAYROLL_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayrollSource(String payrollSource) {
    this.payrollSource = payrollSource;
  }


  public PayrollEmploymentHistoryVOIE payrollProvider(String payrollProvider) {
    
    this.payrollProvider = payrollProvider;
    return this;
  }

   /**
   * The name of the provider who provides payroll data to payroll source
   * @return payrollProvider
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYROLL_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayrollProvider() {
    return payrollProvider;
  }


  @JsonProperty(JSON_PROPERTY_PAYROLL_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayrollProvider(String payrollProvider) {
    this.payrollProvider = payrollProvider;
  }


  public PayrollEmploymentHistoryVOIE employee(PayrollEmployeeRecord employee) {
    
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayrollEmployeeRecord getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(PayrollEmployeeRecord employee) {
    this.employee = employee;
  }


  public PayrollEmploymentHistoryVOIE employment(PayrollEmploymentRecord employment) {
    
    this.employment = employment;
    return this;
  }

   /**
   * Get employment
   * @return employment
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayrollEmploymentRecord getEmployment() {
    return employment;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployment(PayrollEmploymentRecord employment) {
    this.employment = employment;
  }


  public PayrollEmploymentHistoryVOIE income(PayrollVOIEIncomeRecord income) {
    
    this.income = income;
    return this;
  }

   /**
   * Get income
   * @return income
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayrollVOIEIncomeRecord getIncome() {
    return income;
  }


  @JsonProperty(JSON_PROPERTY_INCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncome(PayrollVOIEIncomeRecord income) {
    this.income = income;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollEmploymentHistoryVOIE payrollEmploymentHistoryVOIE = (PayrollEmploymentHistoryVOIE) o;
    return Objects.equals(this.asOfDate, payrollEmploymentHistoryVOIE.asOfDate) &&
        Objects.equals(this.employmentId, payrollEmploymentHistoryVOIE.employmentId) &&
        Objects.equals(this.employerName, payrollEmploymentHistoryVOIE.employerName) &&
        Objects.equals(this.payrollSource, payrollEmploymentHistoryVOIE.payrollSource) &&
        Objects.equals(this.payrollProvider, payrollEmploymentHistoryVOIE.payrollProvider) &&
        Objects.equals(this.employee, payrollEmploymentHistoryVOIE.employee) &&
        Objects.equals(this.employment, payrollEmploymentHistoryVOIE.employment) &&
        Objects.equals(this.income, payrollEmploymentHistoryVOIE.income);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asOfDate, employmentId, employerName, payrollSource, payrollProvider, employee, employment, income);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollEmploymentHistoryVOIE {\n");
    sb.append("    asOfDate: ").append(toIndentedString(asOfDate)).append("\n");
    sb.append("    employmentId: ").append(toIndentedString(employmentId)).append("\n");
    sb.append("    employerName: ").append(toIndentedString(employerName)).append("\n");
    sb.append("    payrollSource: ").append(toIndentedString(payrollSource)).append("\n");
    sb.append("    payrollProvider: ").append(toIndentedString(payrollProvider)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    employment: ").append(toIndentedString(employment)).append("\n");
    sb.append("    income: ").append(toIndentedString(income)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

