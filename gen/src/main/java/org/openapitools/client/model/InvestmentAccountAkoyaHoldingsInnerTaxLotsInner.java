/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InvestmentAccountAkoyaHoldingsInnerTaxLotsInner
 */
@JsonPropertyOrder({
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_COST_BASIS,
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_CURRENT_VALUE,
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_ORIGINAL_PURCHASE_DATE,
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_POSTION_TYPE,
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_PURCHASED_PRICE,
  InvestmentAccountAkoyaHoldingsInnerTaxLotsInner.JSON_PROPERTY_QUANTITY
})
@JsonTypeName("InvestmentAccountAkoya_holdings_inner_taxLots_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InvestmentAccountAkoyaHoldingsInnerTaxLotsInner {
  public static final String JSON_PROPERTY_COST_BASIS = "costBasis";
  private BigDecimal costBasis;

  public static final String JSON_PROPERTY_CURRENT_VALUE = "currentValue";
  private BigDecimal currentValue;

  public static final String JSON_PROPERTY_ORIGINAL_PURCHASE_DATE = "originalPurchaseDate";
  private String originalPurchaseDate;

  public static final String JSON_PROPERTY_POSTION_TYPE = "postionType";
  private String postionType;

  public static final String JSON_PROPERTY_PURCHASED_PRICE = "purchasedPrice";
  private BigDecimal purchasedPrice;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private BigDecimal quantity;

  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner() {
  }

  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner costBasis(BigDecimal costBasis) {
    
    this.costBasis = costBasis;
    return this;
  }

   /**
   * Get costBasis
   * @return costBasis
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COST_BASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCostBasis() {
    return costBasis;
  }


  @JsonProperty(JSON_PROPERTY_COST_BASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
  }


  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner currentValue(BigDecimal currentValue) {
    
    this.currentValue = currentValue;
    return this;
  }

   /**
   * Get currentValue
   * @return currentValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentValue() {
    return currentValue;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentValue(BigDecimal currentValue) {
    this.currentValue = currentValue;
  }


  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner originalPurchaseDate(String originalPurchaseDate) {
    
    this.originalPurchaseDate = originalPurchaseDate;
    return this;
  }

   /**
   * Get originalPurchaseDate
   * @return originalPurchaseDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_PURCHASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalPurchaseDate() {
    return originalPurchaseDate;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_PURCHASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalPurchaseDate(String originalPurchaseDate) {
    this.originalPurchaseDate = originalPurchaseDate;
  }


  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner postionType(String postionType) {
    
    this.postionType = postionType;
    return this;
  }

   /**
   * Get postionType
   * @return postionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostionType() {
    return postionType;
  }


  @JsonProperty(JSON_PROPERTY_POSTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostionType(String postionType) {
    this.postionType = postionType;
  }


  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner purchasedPrice(BigDecimal purchasedPrice) {
    
    this.purchasedPrice = purchasedPrice;
    return this;
  }

   /**
   * Get purchasedPrice
   * @return purchasedPrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASED_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPurchasedPrice() {
    return purchasedPrice;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASED_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchasedPrice(BigDecimal purchasedPrice) {
    this.purchasedPrice = purchasedPrice;
  }


  public InvestmentAccountAkoyaHoldingsInnerTaxLotsInner quantity(BigDecimal quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestmentAccountAkoyaHoldingsInnerTaxLotsInner investmentAccountAkoyaHoldingsInnerTaxLotsInner = (InvestmentAccountAkoyaHoldingsInnerTaxLotsInner) o;
    return Objects.equals(this.costBasis, investmentAccountAkoyaHoldingsInnerTaxLotsInner.costBasis) &&
        Objects.equals(this.currentValue, investmentAccountAkoyaHoldingsInnerTaxLotsInner.currentValue) &&
        Objects.equals(this.originalPurchaseDate, investmentAccountAkoyaHoldingsInnerTaxLotsInner.originalPurchaseDate) &&
        Objects.equals(this.postionType, investmentAccountAkoyaHoldingsInnerTaxLotsInner.postionType) &&
        Objects.equals(this.purchasedPrice, investmentAccountAkoyaHoldingsInnerTaxLotsInner.purchasedPrice) &&
        Objects.equals(this.quantity, investmentAccountAkoyaHoldingsInnerTaxLotsInner.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costBasis, currentValue, originalPurchaseDate, postionType, purchasedPrice, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestmentAccountAkoyaHoldingsInnerTaxLotsInner {\n");
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
    sb.append("    originalPurchaseDate: ").append(toIndentedString(originalPurchaseDate)).append("\n");
    sb.append("    postionType: ").append(toIndentedString(postionType)).append("\n");
    sb.append("    purchasedPrice: ").append(toIndentedString(purchasedPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

