/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatListLink
 */
@JsonPropertyOrder({
  StatListLink.JSON_PROPERTY_HOSTNAME,
  StatListLink.JSON_PROPERTY_PORT,
  StatListLink.JSON_PROPERTY_USERNAME,
  StatListLink.JSON_PROPERTY_PASSWORD,
  StatListLink.JSON_PROPERTY_STATUS,
  StatListLink.JSON_PROPERTY_STATUS_PER_STREAM,
  StatListLink.JSON_PROPERTY_INSTANT_CUSTOMER,
  StatListLink.JSON_PROPERTY_INSTANT_CUSTOMER_PER_STREAM,
  StatListLink.JSON_PROPERTY_MEDIASTATS_PER_STREAM,
  StatListLink.JSON_PROPERTY_UPDATE_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatListLink {
  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_PORT = "port";
  private Integer port;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_STATUS_PER_STREAM = "status_per_stream";
  private List<String> statusPerStream = new ArrayList<>();

  public static final String JSON_PROPERTY_INSTANT_CUSTOMER = "instant_customer";
  private String instantCustomer;

  public static final String JSON_PROPERTY_INSTANT_CUSTOMER_PER_STREAM = "instant_customer_per_stream";
  private List<String> instantCustomerPerStream = new ArrayList<>();

  public static final String JSON_PROPERTY_MEDIASTATS_PER_STREAM = "mediastats_per_stream";
  private List<String> mediastatsPerStream = new ArrayList<>();

  public static final String JSON_PROPERTY_UPDATE_METADATA = "update_metadata";
  private String updateMetadata;

  public StatListLink() {
  }

  public StatListLink hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * The hostname of the API
   * @return hostname
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public StatListLink port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * The port of the API
   * @return port
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPort(Integer port) {
    this.port = port;
  }


  public StatListLink username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username to use in stat link
   * @return username
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public StatListLink password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * The password to use in stat link
   * @return password
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public StatListLink status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The url link to call to get status on each streams
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public StatListLink statusPerStream(List<String> statusPerStream) {
    
    this.statusPerStream = statusPerStream;
    return this;
  }

  public StatListLink addStatusPerStreamItem(String statusPerStreamItem) {
    if (this.statusPerStream == null) {
      this.statusPerStream = new ArrayList<>();
    }
    this.statusPerStream.add(statusPerStreamItem);
    return this;
  }

   /**
   * The url list to call to get status stream
   * @return statusPerStream
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getStatusPerStream() {
    return statusPerStream;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusPerStream(List<String> statusPerStream) {
    this.statusPerStream = statusPerStream;
  }


  public StatListLink instantCustomer(String instantCustomer) {
    
    this.instantCustomer = instantCustomer;
    return this;
  }

   /**
   * The url link to call to get number of listeners on each streams
   * @return instantCustomer
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTANT_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstantCustomer() {
    return instantCustomer;
  }


  @JsonProperty(JSON_PROPERTY_INSTANT_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstantCustomer(String instantCustomer) {
    this.instantCustomer = instantCustomer;
  }


  public StatListLink instantCustomerPerStream(List<String> instantCustomerPerStream) {
    
    this.instantCustomerPerStream = instantCustomerPerStream;
    return this;
  }

  public StatListLink addInstantCustomerPerStreamItem(String instantCustomerPerStreamItem) {
    if (this.instantCustomerPerStream == null) {
      this.instantCustomerPerStream = new ArrayList<>();
    }
    this.instantCustomerPerStream.add(instantCustomerPerStreamItem);
    return this;
  }

   /**
   * The url list to call to get number of listeners on stream
   * @return instantCustomerPerStream
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTANT_CUSTOMER_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getInstantCustomerPerStream() {
    return instantCustomerPerStream;
  }


  @JsonProperty(JSON_PROPERTY_INSTANT_CUSTOMER_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstantCustomerPerStream(List<String> instantCustomerPerStream) {
    this.instantCustomerPerStream = instantCustomerPerStream;
  }


  public StatListLink mediastatsPerStream(List<String> mediastatsPerStream) {
    
    this.mediastatsPerStream = mediastatsPerStream;
    return this;
  }

  public StatListLink addMediastatsPerStreamItem(String mediastatsPerStreamItem) {
    if (this.mediastatsPerStream == null) {
      this.mediastatsPerStream = new ArrayList<>();
    }
    this.mediastatsPerStream.add(mediastatsPerStreamItem);
    return this;
  }

   /**
   * The url list to call to get mediastats on stream
   * @return mediastatsPerStream
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEDIASTATS_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getMediastatsPerStream() {
    return mediastatsPerStream;
  }


  @JsonProperty(JSON_PROPERTY_MEDIASTATS_PER_STREAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMediastatsPerStream(List<String> mediastatsPerStream) {
    this.mediastatsPerStream = mediastatsPerStream;
  }


  public StatListLink updateMetadata(String updateMetadata) {
    
    this.updateMetadata = updateMetadata;
    return this;
  }

   /**
   * The url link to call to change metadata of your station
   * @return updateMetadata
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATE_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUpdateMetadata() {
    return updateMetadata;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdateMetadata(String updateMetadata) {
    this.updateMetadata = updateMetadata;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatListLink statListLink = (StatListLink) o;
    return Objects.equals(this.hostname, statListLink.hostname) &&
        Objects.equals(this.port, statListLink.port) &&
        Objects.equals(this.username, statListLink.username) &&
        Objects.equals(this.password, statListLink.password) &&
        Objects.equals(this.status, statListLink.status) &&
        Objects.equals(this.statusPerStream, statListLink.statusPerStream) &&
        Objects.equals(this.instantCustomer, statListLink.instantCustomer) &&
        Objects.equals(this.instantCustomerPerStream, statListLink.instantCustomerPerStream) &&
        Objects.equals(this.mediastatsPerStream, statListLink.mediastatsPerStream) &&
        Objects.equals(this.updateMetadata, statListLink.updateMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostname, port, username, password, status, statusPerStream, instantCustomer, instantCustomerPerStream, mediastatsPerStream, updateMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatListLink {\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusPerStream: ").append(toIndentedString(statusPerStream)).append("\n");
    sb.append("    instantCustomer: ").append(toIndentedString(instantCustomer)).append("\n");
    sb.append("    instantCustomerPerStream: ").append(toIndentedString(instantCustomerPerStream)).append("\n");
    sb.append("    mediastatsPerStream: ").append(toIndentedString(mediastatsPerStream)).append("\n");
    sb.append("    updateMetadata: ").append(toIndentedString(updateMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

