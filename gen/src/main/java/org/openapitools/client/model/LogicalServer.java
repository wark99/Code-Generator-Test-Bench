/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.EquipmentServer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * This model represents a logical server, could be a main server or a VM.
 */
@JsonPropertyOrder({
  LogicalServer.JSON_PROPERTY_SERVER_ID,
  LogicalServer.JSON_PROPERTY_NAME,
  LogicalServer.JSON_PROPERTY_DESCRIPTION,
  LogicalServer.JSON_PROPERTY_TYPE,
  LogicalServer.JSON_PROPERTY_CPU,
  LogicalServer.JSON_PROPERTY_RAM,
  LogicalServer.JSON_PROPERTY_IPV4,
  LogicalServer.JSON_PROPERTY_IPV6,
  LogicalServer.JSON_PROPERTY_PARENT_ID,
  LogicalServer.JSON_PROPERTY_PARENT_EQUIPMENT,
  LogicalServer.JSON_PROPERTY_CREATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class LogicalServer {
  public static final String JSON_PROPERTY_SERVER_ID = "server_id";
  private Integer serverId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    DMU("DMU"),
    
    IMU("IMU"),
    
    NAS("NAS"),
    
    NMU("NMU"),
    
    NTU("NTU"),
    
    OS("OS"),
    
    VMU("VMU"),
    
    VNU("VNU"),
    
    XEN("XEN"),
    
    XENMU("XENMU");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_CPU = "cpu";
  private Integer cpu;

  public static final String JSON_PROPERTY_RAM = "ram";
  private Integer ram;

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private String ipv4;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private String ipv6;

  public static final String JSON_PROPERTY_PARENT_ID = "parent_id";
  private Integer parentId;

  public static final String JSON_PROPERTY_PARENT_EQUIPMENT = "parent_equipment";
  private EquipmentServer parentEquipment;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public LogicalServer() {
  }

  public LogicalServer serverId(Integer serverId) {
    
    this.serverId = serverId;
    return this;
  }

   /**
   * Get serverId
   * @return serverId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getServerId() {
    return serverId;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServerId(Integer serverId) {
    this.serverId = serverId;
  }


  public LogicalServer name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource &#x60;LogicalServer&#x60;
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public LogicalServer description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the resource &#x60;LogicalServer&#x60;
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public LogicalServer type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public LogicalServer cpu(Integer cpu) {
    
    this.cpu = cpu;
    return this;
  }

   /**
   * count of allowed CPU
   * @return cpu
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CPU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCpu() {
    return cpu;
  }


  @JsonProperty(JSON_PROPERTY_CPU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCpu(Integer cpu) {
    this.cpu = cpu;
  }


  public LogicalServer ram(Integer ram) {
    
    this.ram = ram;
    return this;
  }

   /**
   * quantity of allowed RAM
   * @return ram
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRam() {
    return ram;
  }


  @JsonProperty(JSON_PROPERTY_RAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRam(Integer ram) {
    this.ram = ram;
  }


  public LogicalServer ipv4(String ipv4) {
    
    this.ipv4 = ipv4;
    return this;
  }

   /**
   * Get ipv4
   * @return ipv4
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIpv4() {
    return ipv4;
  }


  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIpv4(String ipv4) {
    this.ipv4 = ipv4;
  }


  public LogicalServer ipv6(String ipv6) {
    
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIpv6() {
    return ipv6;
  }


  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIpv6(String ipv6) {
    this.ipv6 = ipv6;
  }


  public LogicalServer parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public LogicalServer parentEquipment(EquipmentServer parentEquipment) {
    
    this.parentEquipment = parentEquipment;
    return this;
  }

   /**
   * Get parentEquipment
   * @return parentEquipment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EquipmentServer getParentEquipment() {
    return parentEquipment;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentEquipment(EquipmentServer parentEquipment) {
    this.parentEquipment = parentEquipment;
  }


  public LogicalServer createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;LogicalServer&#x60; has been created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalServer logicalServer = (LogicalServer) o;
    return Objects.equals(this.serverId, logicalServer.serverId) &&
        Objects.equals(this.name, logicalServer.name) &&
        Objects.equals(this.description, logicalServer.description) &&
        Objects.equals(this.type, logicalServer.type) &&
        Objects.equals(this.cpu, logicalServer.cpu) &&
        Objects.equals(this.ram, logicalServer.ram) &&
        Objects.equals(this.ipv4, logicalServer.ipv4) &&
        Objects.equals(this.ipv6, logicalServer.ipv6) &&
        Objects.equals(this.parentId, logicalServer.parentId) &&
        Objects.equals(this.parentEquipment, logicalServer.parentEquipment) &&
        Objects.equals(this.createdAt, logicalServer.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverId, name, description, type, cpu, ram, ipv4, ipv6, parentId, parentEquipment, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalServer {\n");
    sb.append("    serverId: ").append(toIndentedString(serverId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    ram: ").append(toIndentedString(ram)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    parentEquipment: ").append(toIndentedString(parentEquipment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

