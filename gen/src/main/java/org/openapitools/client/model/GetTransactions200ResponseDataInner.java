/*
 * concreateAI-test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetTransactions200ResponseDataInner
 */
@JsonPropertyOrder({
  GetTransactions200ResponseDataInner.JSON_PROPERTY_ACCOUNT_CODE,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_ACCOUNT_CODE_NAME,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_AMOUNT,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_ID,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_TARGET_ACCOUNT_CODE,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_TARGET_ACCOUNT_NAME,
  GetTransactions200ResponseDataInner.JSON_PROPERTY_TRANSACTION_TYPE
})
@JsonTypeName("getTransactions_200_response_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:12.335744348Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class GetTransactions200ResponseDataInner {
  public static final String JSON_PROPERTY_ACCOUNT_CODE = "account_code";
  private String accountCode;

  public static final String JSON_PROPERTY_ACCOUNT_CODE_NAME = "account_code_name";
  private String accountCodeName;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TARGET_ACCOUNT_CODE = "target_account_code";
  private String targetAccountCode;

  public static final String JSON_PROPERTY_TARGET_ACCOUNT_NAME = "target_account_name";
  private String targetAccountName;

  public static final String JSON_PROPERTY_TRANSACTION_TYPE = "transaction_type";
  private String transactionType;

  public GetTransactions200ResponseDataInner() {
  }

  public GetTransactions200ResponseDataInner accountCode(String accountCode) {
    
    this.accountCode = accountCode;
    return this;
  }

   /**
   * Get accountCode
   * @return accountCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountCode() {
    return accountCode;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCode(String accountCode) {
    this.accountCode = accountCode;
  }


  public GetTransactions200ResponseDataInner accountCodeName(String accountCodeName) {
    
    this.accountCodeName = accountCodeName;
    return this;
  }

   /**
   * Get accountCodeName
   * @return accountCodeName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountCodeName() {
    return accountCodeName;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCodeName(String accountCodeName) {
    this.accountCodeName = accountCodeName;
  }


  public GetTransactions200ResponseDataInner amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public GetTransactions200ResponseDataInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public GetTransactions200ResponseDataInner targetAccountCode(String targetAccountCode) {
    
    this.targetAccountCode = targetAccountCode;
    return this;
  }

   /**
   * Get targetAccountCode
   * @return targetAccountCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetAccountCode() {
    return targetAccountCode;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetAccountCode(String targetAccountCode) {
    this.targetAccountCode = targetAccountCode;
  }


  public GetTransactions200ResponseDataInner targetAccountName(String targetAccountName) {
    
    this.targetAccountName = targetAccountName;
    return this;
  }

   /**
   * Get targetAccountName
   * @return targetAccountName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetAccountName() {
    return targetAccountName;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetAccountName(String targetAccountName) {
    this.targetAccountName = targetAccountName;
  }


  public GetTransactions200ResponseDataInner transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionType() {
    return transactionType;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTransactions200ResponseDataInner getTransactions200ResponseDataInner = (GetTransactions200ResponseDataInner) o;
    return Objects.equals(this.accountCode, getTransactions200ResponseDataInner.accountCode) &&
        Objects.equals(this.accountCodeName, getTransactions200ResponseDataInner.accountCodeName) &&
        Objects.equals(this.amount, getTransactions200ResponseDataInner.amount) &&
        Objects.equals(this.id, getTransactions200ResponseDataInner.id) &&
        Objects.equals(this.targetAccountCode, getTransactions200ResponseDataInner.targetAccountCode) &&
        Objects.equals(this.targetAccountName, getTransactions200ResponseDataInner.targetAccountName) &&
        Objects.equals(this.transactionType, getTransactions200ResponseDataInner.transactionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCode, accountCodeName, amount, id, targetAccountCode, targetAccountName, transactionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTransactions200ResponseDataInner {\n");
    sb.append("    accountCode: ").append(toIndentedString(accountCode)).append("\n");
    sb.append("    accountCodeName: ").append(toIndentedString(accountCodeName)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    targetAccountCode: ").append(toIndentedString(targetAccountCode)).append("\n");
    sb.append("    targetAccountName: ").append(toIndentedString(targetAccountName)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

