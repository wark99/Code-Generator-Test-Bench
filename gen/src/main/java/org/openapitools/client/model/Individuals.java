/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Addresses;
import org.openapitools.client.model.ConsumerAttributes;
import org.openapitools.client.model.DriversLicenses;
import org.openapitools.client.model.Names2;
import org.openapitools.client.model.Occupancy;
import org.openapitools.client.model.Phone;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Individuals
 */
@JsonPropertyOrder({
  Individuals.JSON_PROPERTY_ADDRESSES,
  Individuals.JSON_PROPERTY_AGE,
  Individuals.JSON_PROPERTY_CONSUMER_ATTRIBUTES,
  Individuals.JSON_PROPERTY_DATE_OF_BIRTH,
  Individuals.JSON_PROPERTY_DRIVERS_LICENSES,
  Individuals.JSON_PROPERTY_GENDER,
  Individuals.JSON_PROPERTY_NAMES,
  Individuals.JSON_PROPERTY_OCCUPANCY,
  Individuals.JSON_PROPERTY_OCCUPANCY_ORDER,
  Individuals.JSON_PROPERTY_PHONES,
  Individuals.JSON_PROPERTY_YOUTHFUL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Individuals {
  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<Addresses> addresses;

  public static final String JSON_PROPERTY_AGE = "age";
  private String age;

  public static final String JSON_PROPERTY_CONSUMER_ATTRIBUTES = "consumerAttributes";
  private ConsumerAttributes consumerAttributes;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  private String dateOfBirth;

  public static final String JSON_PROPERTY_DRIVERS_LICENSES = "driversLicenses";
  private List<DriversLicenses> driversLicenses;

  public static final String JSON_PROPERTY_GENDER = "gender";
  private String gender;

  public static final String JSON_PROPERTY_NAMES = "names";
  private List<Names2> names;

  public static final String JSON_PROPERTY_OCCUPANCY = "occupancy";
  private Occupancy occupancy;

  public static final String JSON_PROPERTY_OCCUPANCY_ORDER = "occupancyOrder";
  private String occupancyOrder;

  public static final String JSON_PROPERTY_PHONES = "phones";
  private List<Phone> phones;

  public static final String JSON_PROPERTY_YOUTHFUL = "youthful";
  private String youthful;

  public Individuals() {
  }

  public Individuals addresses(List<Addresses> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public Individuals addAddressesItem(Addresses addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Addresses> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<Addresses> addresses) {
    this.addresses = addresses;
  }


  public Individuals age(String age) {
    
    this.age = age;
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAge() {
    return age;
  }


  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAge(String age) {
    this.age = age;
  }


  public Individuals consumerAttributes(ConsumerAttributes consumerAttributes) {
    
    this.consumerAttributes = consumerAttributes;
    return this;
  }

   /**
   * Get consumerAttributes
   * @return consumerAttributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsumerAttributes getConsumerAttributes() {
    return consumerAttributes;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerAttributes(ConsumerAttributes consumerAttributes) {
    this.consumerAttributes = consumerAttributes;
  }


  public Individuals dateOfBirth(String dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public Individuals driversLicenses(List<DriversLicenses> driversLicenses) {
    
    this.driversLicenses = driversLicenses;
    return this;
  }

  public Individuals addDriversLicensesItem(DriversLicenses driversLicensesItem) {
    if (this.driversLicenses == null) {
      this.driversLicenses = new ArrayList<>();
    }
    this.driversLicenses.add(driversLicensesItem);
    return this;
  }

   /**
   * Get driversLicenses
   * @return driversLicenses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DRIVERS_LICENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DriversLicenses> getDriversLicenses() {
    return driversLicenses;
  }


  @JsonProperty(JSON_PROPERTY_DRIVERS_LICENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDriversLicenses(List<DriversLicenses> driversLicenses) {
    this.driversLicenses = driversLicenses;
  }


  public Individuals gender(String gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(String gender) {
    this.gender = gender;
  }


  public Individuals names(List<Names2> names) {
    
    this.names = names;
    return this;
  }

  public Individuals addNamesItem(Names2 namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Names2> getNames() {
    return names;
  }


  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNames(List<Names2> names) {
    this.names = names;
  }


  public Individuals occupancy(Occupancy occupancy) {
    
    this.occupancy = occupancy;
    return this;
  }

   /**
   * Get occupancy
   * @return occupancy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Occupancy getOccupancy() {
    return occupancy;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupancy(Occupancy occupancy) {
    this.occupancy = occupancy;
  }


  public Individuals occupancyOrder(String occupancyOrder) {
    
    this.occupancyOrder = occupancyOrder;
    return this;
  }

   /**
   * Get occupancyOrder
   * @return occupancyOrder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPANCY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOccupancyOrder() {
    return occupancyOrder;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPANCY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupancyOrder(String occupancyOrder) {
    this.occupancyOrder = occupancyOrder;
  }


  public Individuals phones(List<Phone> phones) {
    
    this.phones = phones;
    return this;
  }

  public Individuals addPhonesItem(Phone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * Get phones
   * @return phones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Phone> getPhones() {
    return phones;
  }


  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhones(List<Phone> phones) {
    this.phones = phones;
  }


  public Individuals youthful(String youthful) {
    
    this.youthful = youthful;
    return this;
  }

   /**
   * Get youthful
   * @return youthful
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YOUTHFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYouthful() {
    return youthful;
  }


  @JsonProperty(JSON_PROPERTY_YOUTHFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYouthful(String youthful) {
    this.youthful = youthful;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Individuals individuals = (Individuals) o;
    return Objects.equals(this.addresses, individuals.addresses) &&
        Objects.equals(this.age, individuals.age) &&
        Objects.equals(this.consumerAttributes, individuals.consumerAttributes) &&
        Objects.equals(this.dateOfBirth, individuals.dateOfBirth) &&
        Objects.equals(this.driversLicenses, individuals.driversLicenses) &&
        Objects.equals(this.gender, individuals.gender) &&
        Objects.equals(this.names, individuals.names) &&
        Objects.equals(this.occupancy, individuals.occupancy) &&
        Objects.equals(this.occupancyOrder, individuals.occupancyOrder) &&
        Objects.equals(this.phones, individuals.phones) &&
        Objects.equals(this.youthful, individuals.youthful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, age, consumerAttributes, dateOfBirth, driversLicenses, gender, names, occupancy, occupancyOrder, phones, youthful);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Individuals {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    consumerAttributes: ").append(toIndentedString(consumerAttributes)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    driversLicenses: ").append(toIndentedString(driversLicenses)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    occupancy: ").append(toIndentedString(occupancy)).append("\n");
    sb.append("    occupancyOrder: ").append(toIndentedString(occupancyOrder)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    youthful: ").append(toIndentedString(youthful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

