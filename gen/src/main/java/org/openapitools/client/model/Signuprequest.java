/*
 * ClosedNetwork-DEV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Signuprequest
 */
@JsonPropertyOrder({
  Signuprequest.JSON_PROPERTY_NAME,
  Signuprequest.JSON_PROPERTY_EMAIL,
  Signuprequest.JSON_PROPERTY_PHONE_NUMBER,
  Signuprequest.JSON_PROPERTY_GENDER,
  Signuprequest.JSON_PROPERTY_DATE_OF_BIRTH,
  Signuprequest.JSON_PROPERTY_BRANCH,
  Signuprequest.JSON_PROPERTY_EDUCATION_LEVEL,
  Signuprequest.JSON_PROPERTY_GRADUATION_YEAR
})
@JsonTypeName("signuprequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:50.441407861Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Signuprequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private String phoneNumber;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("male"),
    
    FEMALE("female");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  private OffsetDateTime dateOfBirth;

  public static final String JSON_PROPERTY_BRANCH = "branch";
  private String branch;

  public static final String JSON_PROPERTY_EDUCATION_LEVEL = "educationLevel";
  private String educationLevel;

  public static final String JSON_PROPERTY_GRADUATION_YEAR = "graduationYear";
  private Integer graduationYear;

  public Signuprequest() {
  }

  public Signuprequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Signuprequest email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public Signuprequest phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Description :- Include +91
   * @return phoneNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Signuprequest gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public Signuprequest dateOfBirth(OffsetDateTime dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateOfBirth(OffsetDateTime dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public Signuprequest branch(String branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * Description :- Branch Object ID
   * @return branch
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBranch() {
    return branch;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBranch(String branch) {
    this.branch = branch;
  }


  public Signuprequest educationLevel(String educationLevel) {
    
    this.educationLevel = educationLevel;
    return this;
  }

   /**
   * Description :- Degree Object ID
   * @return educationLevel
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EDUCATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEducationLevel() {
    return educationLevel;
  }


  @JsonProperty(JSON_PROPERTY_EDUCATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEducationLevel(String educationLevel) {
    this.educationLevel = educationLevel;
  }


  public Signuprequest graduationYear(Integer graduationYear) {
    
    this.graduationYear = graduationYear;
    return this;
  }

   /**
   * Get graduationYear
   * @return graduationYear
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GRADUATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getGraduationYear() {
    return graduationYear;
  }


  @JsonProperty(JSON_PROPERTY_GRADUATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGraduationYear(Integer graduationYear) {
    this.graduationYear = graduationYear;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Signuprequest signuprequest = (Signuprequest) o;
    return Objects.equals(this.name, signuprequest.name) &&
        Objects.equals(this.email, signuprequest.email) &&
        Objects.equals(this.phoneNumber, signuprequest.phoneNumber) &&
        Objects.equals(this.gender, signuprequest.gender) &&
        Objects.equals(this.dateOfBirth, signuprequest.dateOfBirth) &&
        Objects.equals(this.branch, signuprequest.branch) &&
        Objects.equals(this.educationLevel, signuprequest.educationLevel) &&
        Objects.equals(this.graduationYear, signuprequest.graduationYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, email, phoneNumber, gender, dateOfBirth, branch, educationLevel, graduationYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Signuprequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    educationLevel: ").append(toIndentedString(educationLevel)).append("\n");
    sb.append("    graduationYear: ").append(toIndentedString(graduationYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

