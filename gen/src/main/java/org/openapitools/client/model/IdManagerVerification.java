/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Deceases;
import org.openapitools.client.model.IdentificationIssuances;
import org.openapitools.client.model.Messages;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IdManagerVerification
 */
@JsonPropertyOrder({
  IdManagerVerification.JSON_PROPERTY_DECEASES,
  IdManagerVerification.JSON_PROPERTY_IDENTIFICATION_ISSUANCES,
  IdManagerVerification.JSON_PROPERTY_MESSAGES,
  IdManagerVerification.JSON_PROPERTY_RETURN_MESSAGE,
  IdManagerVerification.JSON_PROPERTY_SEARCH_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IdManagerVerification {
  public static final String JSON_PROPERTY_DECEASES = "deceases";
  private List<Deceases> deceases;

  public static final String JSON_PROPERTY_IDENTIFICATION_ISSUANCES = "identificationIssuances";
  private List<IdentificationIssuances> identificationIssuances;

  public static final String JSON_PROPERTY_MESSAGES = "messages";
  private List<Messages> messages;

  public static final String JSON_PROPERTY_RETURN_MESSAGE = "returnMessage";
  private String returnMessage;

  public static final String JSON_PROPERTY_SEARCH_STATUS = "searchStatus";
  private String searchStatus;

  public IdManagerVerification() {
  }

  public IdManagerVerification deceases(List<Deceases> deceases) {
    
    this.deceases = deceases;
    return this;
  }

  public IdManagerVerification addDeceasesItem(Deceases deceasesItem) {
    if (this.deceases == null) {
      this.deceases = new ArrayList<>();
    }
    this.deceases.add(deceasesItem);
    return this;
  }

   /**
   * Get deceases
   * @return deceases
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECEASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Deceases> getDeceases() {
    return deceases;
  }


  @JsonProperty(JSON_PROPERTY_DECEASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeceases(List<Deceases> deceases) {
    this.deceases = deceases;
  }


  public IdManagerVerification identificationIssuances(List<IdentificationIssuances> identificationIssuances) {
    
    this.identificationIssuances = identificationIssuances;
    return this;
  }

  public IdManagerVerification addIdentificationIssuancesItem(IdentificationIssuances identificationIssuancesItem) {
    if (this.identificationIssuances == null) {
      this.identificationIssuances = new ArrayList<>();
    }
    this.identificationIssuances.add(identificationIssuancesItem);
    return this;
  }

   /**
   * Get identificationIssuances
   * @return identificationIssuances
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_ISSUANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentificationIssuances> getIdentificationIssuances() {
    return identificationIssuances;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_ISSUANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentificationIssuances(List<IdentificationIssuances> identificationIssuances) {
    this.identificationIssuances = identificationIssuances;
  }


  public IdManagerVerification messages(List<Messages> messages) {
    
    this.messages = messages;
    return this;
  }

  public IdManagerVerification addMessagesItem(Messages messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Messages> getMessages() {
    return messages;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessages(List<Messages> messages) {
    this.messages = messages;
  }


  public IdManagerVerification returnMessage(String returnMessage) {
    
    this.returnMessage = returnMessage;
    return this;
  }

   /**
   * Get returnMessage
   * @return returnMessage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnMessage() {
    return returnMessage;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnMessage(String returnMessage) {
    this.returnMessage = returnMessage;
  }


  public IdManagerVerification searchStatus(String searchStatus) {
    
    this.searchStatus = searchStatus;
    return this;
  }

   /**
   * Get searchStatus
   * @return searchStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchStatus() {
    return searchStatus;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchStatus(String searchStatus) {
    this.searchStatus = searchStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdManagerVerification idManagerVerification = (IdManagerVerification) o;
    return Objects.equals(this.deceases, idManagerVerification.deceases) &&
        Objects.equals(this.identificationIssuances, idManagerVerification.identificationIssuances) &&
        Objects.equals(this.messages, idManagerVerification.messages) &&
        Objects.equals(this.returnMessage, idManagerVerification.returnMessage) &&
        Objects.equals(this.searchStatus, idManagerVerification.searchStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deceases, identificationIssuances, messages, returnMessage, searchStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdManagerVerification {\n");
    sb.append("    deceases: ").append(toIndentedString(deceases)).append("\n");
    sb.append("    identificationIssuances: ").append(toIndentedString(identificationIssuances)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    returnMessage: ").append(toIndentedString(returnMessage)).append("\n");
    sb.append("    searchStatus: ").append(toIndentedString(searchStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

