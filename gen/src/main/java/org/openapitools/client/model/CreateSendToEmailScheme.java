/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.FromEmail;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSendToEmailScheme
 */
@JsonPropertyOrder({
  CreateSendToEmailScheme.JSON_PROPERTY_ACCOUNT,
  CreateSendToEmailScheme.JSON_PROPERTY_ACTION_CLASS,
  CreateSendToEmailScheme.JSON_PROPERTY_FROM_EMAIL,
  CreateSendToEmailScheme.JSON_PROPERTY_RECIPIENT,
  CreateSendToEmailScheme.JSON_PROPERTY_SUBJECT,
  CreateSendToEmailScheme.JSON_PROPERTY_MESSAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateSendToEmailScheme {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private Integer account;

  public static final String JSON_PROPERTY_ACTION_CLASS = "action_class";
  private Object actionClass = null;

  public static final String JSON_PROPERTY_FROM_EMAIL = "from_email";
  private FromEmail fromEmail;

  public static final String JSON_PROPERTY_RECIPIENT = "recipient";
  private String recipient;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public CreateSendToEmailScheme() {
  }

  public CreateSendToEmailScheme account(Integer account) {
    
    this.account = account;
    return this;
  }

   /**
   * external account id
   * @return account
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(Integer account) {
    this.account = account;
  }


  public CreateSendToEmailScheme actionClass(Object actionClass) {
    
    this.actionClass = actionClass;
    return this;
  }

   /**
   * Get actionClass
   * @return actionClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getActionClass() {
    return actionClass;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActionClass(Object actionClass) {
    this.actionClass = actionClass;
  }


  public CreateSendToEmailScheme fromEmail(FromEmail fromEmail) {
    
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * Get fromEmail
   * @return fromEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FromEmail getFromEmail() {
    return fromEmail;
  }


  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromEmail(FromEmail fromEmail) {
    this.fromEmail = fromEmail;
  }


  public CreateSendToEmailScheme recipient(String recipient) {
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Recipient email
   * @return recipient
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRecipient() {
    return recipient;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }


  public CreateSendToEmailScheme subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Email subject
   * @return subject
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public CreateSendToEmailScheme message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Message
   * @return message
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(String message) {
    this.message = message;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSendToEmailScheme createSendToEmailScheme = (CreateSendToEmailScheme) o;
    return Objects.equals(this.account, createSendToEmailScheme.account) &&
        Objects.equals(this.actionClass, createSendToEmailScheme.actionClass) &&
        Objects.equals(this.fromEmail, createSendToEmailScheme.fromEmail) &&
        Objects.equals(this.recipient, createSendToEmailScheme.recipient) &&
        Objects.equals(this.subject, createSendToEmailScheme.subject) &&
        Objects.equals(this.message, createSendToEmailScheme.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, actionClass, fromEmail, recipient, subject, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSendToEmailScheme {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    actionClass: ").append(toIndentedString(actionClass)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

