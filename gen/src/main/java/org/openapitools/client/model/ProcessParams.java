/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Addr;
import org.openapitools.client.model.AppApiv2ConstansActionPrio1;
import org.openapitools.client.model.CreateLNSPayloadProcessScheme;
import org.openapitools.client.model.CreateNormProcessScheme;
import org.openapitools.client.model.CreateRawDataProcessScheme;
import org.openapitools.client.model.Data;
import org.openapitools.client.model.Front;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.Mac;
import org.openapitools.client.model.Period;
import org.openapitools.client.model.UpId;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * process parameters
 */
@JsonPropertyOrder({
  ProcessParams.JSON_PROPERTY_PROCESS_CLASS,
  ProcessParams.JSON_PROPERTY_DEV_EUI,
  ProcessParams.JSON_PROPERTY_UP_ID,
  ProcessParams.JSON_PROPERTY_DATA,
  ProcessParams.JSON_PROPERTY_MAC,
  ProcessParams.JSON_PROPERTY_FPORT,
  ProcessParams.JSON_PROPERTY_CONF,
  ProcessParams.JSON_PROPERTY_IMME,
  ProcessParams.JSON_PROPERTY_NODEL,
  ProcessParams.JSON_PROPERTY_FPEND,
  ProcessParams.JSON_PROPERTY_PRIO,
  ProcessParams.JSON_PROPERTY_JSON_MSG,
  ProcessParams.JSON_PROPERTY_ADDR,
  ProcessParams.JSON_PROPERTY_GROUP,
  ProcessParams.JSON_PROPERTY_CONSUMPTION_GROUP,
  ProcessParams.JSON_PROPERTY_PERIOD,
  ProcessParams.JSON_PROPERTY_TZ,
  ProcessParams.JSON_PROPERTY_LAST_PERIOD,
  ProcessParams.JSON_PROPERTY_ONLY_SUC
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@JsonIgnoreProperties(
  value = "process_class", // ignore manually set process_class, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the process_class to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "process_class", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CreateLNSPayloadProcessScheme.class, name = "1"),
  @JsonSubTypes.Type(value = CreateRawDataProcessScheme.class, name = "2"),
  @JsonSubTypes.Type(value = CreateNormProcessScheme.class, name = "3"),
  @JsonSubTypes.Type(value = CreateLNSPayloadProcessScheme.class, name = "CreateLNSPayloadProcessScheme"),
  @JsonSubTypes.Type(value = CreateNormProcessScheme.class, name = "CreateNormProcessScheme"),
  @JsonSubTypes.Type(value = CreateRawDataProcessScheme.class, name = "CreateRawDataProcessScheme"),
})

public class ProcessParams {
  public static final String JSON_PROPERTY_PROCESS_CLASS = "process_class";
  protected Object processClass = null;

  public static final String JSON_PROPERTY_DEV_EUI = "dev_eui";
  private Object devEui = null;

  public static final String JSON_PROPERTY_UP_ID = "up_id";
  private UpId upId;

  public static final String JSON_PROPERTY_DATA = "data";
  private Data data;

  public static final String JSON_PROPERTY_MAC = "mac";
  private Mac mac;

  public static final String JSON_PROPERTY_FPORT = "fport";
  private Front fport;

  public static final String JSON_PROPERTY_CONF = "conf";
  private JsonNullable<Object> conf = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_IMME = "imme";
  private JsonNullable<Object> imme = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_NODEL = "nodel";
  private JsonNullable<Object> nodel = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_FPEND = "fpend";
  private JsonNullable<Object> fpend = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_PRIO = "prio";
  private AppApiv2ConstansActionPrio1 prio = AppApiv2ConstansActionPrio1.NUMBER_0;

  public static final String JSON_PROPERTY_JSON_MSG = "json_msg";
  private Object jsonMsg = null;

  public static final String JSON_PROPERTY_ADDR = "addr";
  private Addr addr;

  public static final String JSON_PROPERTY_GROUP = "group";
  private Group group;

  public static final String JSON_PROPERTY_CONSUMPTION_GROUP = "consumption_group";
  private Object consumptionGroup = null;

  public static final String JSON_PROPERTY_PERIOD = "period";
  private Period period = Period.NUMBER_0;

  public static final String JSON_PROPERTY_TZ = "tz";
  private JsonNullable<Object> tz = JsonNullable.<Object>of(Europe/Moscow);

  public static final String JSON_PROPERTY_LAST_PERIOD = "last_period";
  private JsonNullable<Object> lastPeriod = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_ONLY_SUC = "only_suc";
  private JsonNullable<Object> onlySuc = JsonNullable.<Object>of(true);

  public ProcessParams() {
  }

  public ProcessParams processClass(Object processClass) {
    
    this.processClass = processClass;
    return this;
  }

   /**
   * Get processClass
   * @return processClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getProcessClass() {
    return processClass;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessClass(Object processClass) {
    this.processClass = processClass;
  }


  public ProcessParams devEui(Object devEui) {
    
    this.devEui = devEui;
    return this;
  }

   /**
   * device id
   * @return devEui
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEV_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDevEui() {
    return devEui;
  }


  @JsonProperty(JSON_PROPERTY_DEV_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevEui(Object devEui) {
    this.devEui = devEui;
  }


  public ProcessParams upId(UpId upId) {
    
    this.upId = upId;
    return this;
  }

   /**
   * Get upId
   * @return upId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpId getUpId() {
    return upId;
  }


  @JsonProperty(JSON_PROPERTY_UP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpId(UpId upId) {
    this.upId = upId;
  }


  public ProcessParams data(Data data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Data getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Data data) {
    this.data = data;
  }


  public ProcessParams mac(Mac mac) {
    
    this.mac = mac;
    return this;
  }

   /**
   * Get mac
   * @return mac
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Mac getMac() {
    return mac;
  }


  @JsonProperty(JSON_PROPERTY_MAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMac(Mac mac) {
    this.mac = mac;
  }


  public ProcessParams fport(Front fport) {
    
    this.fport = fport;
    return this;
  }

   /**
   * Get fport
   * @return fport
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Front getFport() {
    return fport;
  }


  @JsonProperty(JSON_PROPERTY_FPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFport(Front fport) {
    this.fport = fport;
  }


  public ProcessParams conf(Object conf) {
    this.conf = JsonNullable.<Object>of(conf);
    
    return this;
  }

   /**
   * Send data as confirmed message
   * @return conf
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getConf() {
        return conf.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getConf_JsonNullable() {
    return conf;
  }
  
  @JsonProperty(JSON_PROPERTY_CONF)
  public void setConf_JsonNullable(JsonNullable<Object> conf) {
    this.conf = conf;
  }

  public void setConf(Object conf) {
    this.conf = JsonNullable.<Object>of(conf);
  }


  public ProcessParams imme(Object imme) {
    this.imme = JsonNullable.<Object>of(imme);
    
    return this;
  }

   /**
   * Immediate. Send data immediate (for Class C or for Class A if up_id specified)
   * @return imme
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getImme() {
        return imme.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getImme_JsonNullable() {
    return imme;
  }
  
  @JsonProperty(JSON_PROPERTY_IMME)
  public void setImme_JsonNullable(JsonNullable<Object> imme) {
    this.imme = imme;
  }

  public void setImme(Object imme) {
    this.imme = JsonNullable.<Object>of(imme);
  }


  public ProcessParams nodel(Object nodel) {
    this.nodel = JsonNullable.<Object>of(nodel);
    
    return this;
  }

   /**
   * Not delete. Do not delete from queue after join/rejoin
   * @return nodel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNodel() {
        return nodel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNodel_JsonNullable() {
    return nodel;
  }
  
  @JsonProperty(JSON_PROPERTY_NODEL)
  public void setNodel_JsonNullable(JsonNullable<Object> nodel) {
    this.nodel = nodel;
  }

  public void setNodel(Object nodel) {
    this.nodel = JsonNullable.<Object>of(nodel);
  }


  public ProcessParams fpend(Object fpend) {
    this.fpend = JsonNullable.<Object>of(fpend);
    
    return this;
  }

   /**
   * FPending. Set FPending bit for immediate downlink
   * @return fpend
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFpend() {
        return fpend.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FPEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFpend_JsonNullable() {
    return fpend;
  }
  
  @JsonProperty(JSON_PROPERTY_FPEND)
  public void setFpend_JsonNullable(JsonNullable<Object> fpend) {
    this.fpend = fpend;
  }

  public void setFpend(Object fpend) {
    this.fpend = JsonNullable.<Object>of(fpend);
  }


  public ProcessParams prio(AppApiv2ConstansActionPrio1 prio) {
    
    this.prio = prio;
    return this;
  }

   /**
   * Prio. Set priority for send via queue (0-low, 1-middle, 2-hight)
   * @return prio
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppApiv2ConstansActionPrio1 getPrio() {
    return prio;
  }


  @JsonProperty(JSON_PROPERTY_PRIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrio(AppApiv2ConstansActionPrio1 prio) {
    this.prio = prio;
  }


  public ProcessParams jsonMsg(Object jsonMsg) {
    
    this.jsonMsg = jsonMsg;
    return this;
  }

   /**
   * JSON message
   * @return jsonMsg
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_JSON_MSG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getJsonMsg() {
    return jsonMsg;
  }


  @JsonProperty(JSON_PROPERTY_JSON_MSG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJsonMsg(Object jsonMsg) {
    this.jsonMsg = jsonMsg;
  }


  public ProcessParams addr(Addr addr) {
    
    this.addr = addr;
    return this;
  }

   /**
   * Get addr
   * @return addr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Addr getAddr() {
    return addr;
  }


  @JsonProperty(JSON_PROPERTY_ADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddr(Addr addr) {
    this.addr = addr;
  }


  public ProcessParams group(Group group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Group getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(Group group) {
    this.group = group;
  }


  public ProcessParams consumptionGroup(Object consumptionGroup) {
    
    this.consumptionGroup = consumptionGroup;
    return this;
  }

   /**
   * consumption group id
   * @return consumptionGroup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getConsumptionGroup() {
    return consumptionGroup;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumptionGroup(Object consumptionGroup) {
    this.consumptionGroup = consumptionGroup;
  }


  public ProcessParams period(Period period) {
    
    this.period = period;
    return this;
  }

   /**
   * Period
   * @return period
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Period getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(Period period) {
    this.period = period;
  }


  public ProcessParams tz(Object tz) {
    this.tz = JsonNullable.<Object>of(tz);
    
    return this;
  }

   /**
   * time zone
   * @return tz
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTz() {
        return tz.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTz_JsonNullable() {
    return tz;
  }
  
  @JsonProperty(JSON_PROPERTY_TZ)
  public void setTz_JsonNullable(JsonNullable<Object> tz) {
    this.tz = tz;
  }

  public void setTz(Object tz) {
    this.tz = JsonNullable.<Object>of(tz);
  }


  public ProcessParams lastPeriod(Object lastPeriod) {
    this.lastPeriod = JsonNullable.<Object>of(lastPeriod);
    
    return this;
  }

   /**
   * Process run for previous period
   * @return lastPeriod
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLastPeriod() {
        return lastPeriod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLastPeriod_JsonNullable() {
    return lastPeriod;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_PERIOD)
  public void setLastPeriod_JsonNullable(JsonNullable<Object> lastPeriod) {
    this.lastPeriod = lastPeriod;
  }

  public void setLastPeriod(Object lastPeriod) {
    this.lastPeriod = JsonNullable.<Object>of(lastPeriod);
  }


  public ProcessParams onlySuc(Object onlySuc) {
    this.onlySuc = JsonNullable.<Object>of(onlySuc);
    
    return this;
  }

   /**
   * Overflow only
   * @return onlySuc
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOnlySuc() {
        return onlySuc.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ONLY_SUC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOnlySuc_JsonNullable() {
    return onlySuc;
  }
  
  @JsonProperty(JSON_PROPERTY_ONLY_SUC)
  public void setOnlySuc_JsonNullable(JsonNullable<Object> onlySuc) {
    this.onlySuc = onlySuc;
  }

  public void setOnlySuc(Object onlySuc) {
    this.onlySuc = JsonNullable.<Object>of(onlySuc);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessParams processParams = (ProcessParams) o;
    return Objects.equals(this.processClass, processParams.processClass) &&
        Objects.equals(this.devEui, processParams.devEui) &&
        Objects.equals(this.upId, processParams.upId) &&
        Objects.equals(this.data, processParams.data) &&
        Objects.equals(this.mac, processParams.mac) &&
        Objects.equals(this.fport, processParams.fport) &&
        equalsNullable(this.conf, processParams.conf) &&
        equalsNullable(this.imme, processParams.imme) &&
        equalsNullable(this.nodel, processParams.nodel) &&
        equalsNullable(this.fpend, processParams.fpend) &&
        Objects.equals(this.prio, processParams.prio) &&
        Objects.equals(this.jsonMsg, processParams.jsonMsg) &&
        Objects.equals(this.addr, processParams.addr) &&
        Objects.equals(this.group, processParams.group) &&
        Objects.equals(this.consumptionGroup, processParams.consumptionGroup) &&
        Objects.equals(this.period, processParams.period) &&
        equalsNullable(this.tz, processParams.tz) &&
        equalsNullable(this.lastPeriod, processParams.lastPeriod) &&
        equalsNullable(this.onlySuc, processParams.onlySuc);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(processClass, devEui, upId, data, mac, fport, hashCodeNullable(conf), hashCodeNullable(imme), hashCodeNullable(nodel), hashCodeNullable(fpend), prio, jsonMsg, addr, group, consumptionGroup, period, hashCodeNullable(tz), hashCodeNullable(lastPeriod), hashCodeNullable(onlySuc));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessParams {\n");
    sb.append("    processClass: ").append(toIndentedString(processClass)).append("\n");
    sb.append("    devEui: ").append(toIndentedString(devEui)).append("\n");
    sb.append("    upId: ").append(toIndentedString(upId)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    mac: ").append(toIndentedString(mac)).append("\n");
    sb.append("    fport: ").append(toIndentedString(fport)).append("\n");
    sb.append("    conf: ").append(toIndentedString(conf)).append("\n");
    sb.append("    imme: ").append(toIndentedString(imme)).append("\n");
    sb.append("    nodel: ").append(toIndentedString(nodel)).append("\n");
    sb.append("    fpend: ").append(toIndentedString(fpend)).append("\n");
    sb.append("    prio: ").append(toIndentedString(prio)).append("\n");
    sb.append("    jsonMsg: ").append(toIndentedString(jsonMsg)).append("\n");
    sb.append("    addr: ").append(toIndentedString(addr)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    consumptionGroup: ").append(toIndentedString(consumptionGroup)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    tz: ").append(toIndentedString(tz)).append("\n");
    sb.append("    lastPeriod: ").append(toIndentedString(lastPeriod)).append("\n");
    sb.append("    onlySuc: ").append(toIndentedString(onlySuc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

