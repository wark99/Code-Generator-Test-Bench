/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EstimateObjectLinesInner
 */
@JsonPropertyOrder({
  EstimateObjectLinesInner.JSON_PROPERTY_LINE_I_D,
  EstimateObjectLinesInner.JSON_PROPERTY_AMOUNT,
  EstimateObjectLinesInner.JSON_PROPERTY_COVERAGE_TYPE_CODE,
  EstimateObjectLinesInner.JSON_PROPERTY_PROCESESING_REFERENCE,
  EstimateObjectLinesInner.JSON_PROPERTY_LINE_STATUS,
  EstimateObjectLinesInner.JSON_PROPERTY_NOTES,
  EstimateObjectLinesInner.JSON_PROPERTY_CREATE_TIMESTAMP,
  EstimateObjectLinesInner.JSON_PROPERTY_PROCESSED_TIMESTAMP
})
@JsonTypeName("EstimateObject_lines_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class EstimateObjectLinesInner {
  public static final String JSON_PROPERTY_LINE_I_D = "lineID";
  private Integer lineID;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_COVERAGE_TYPE_CODE = "coverageTypeCode";
  private String coverageTypeCode;

  public static final String JSON_PROPERTY_PROCESESING_REFERENCE = "procesesingReference";
  private String procesesingReference;

  public static final String JSON_PROPERTY_LINE_STATUS = "lineStatus";
  private String lineStatus;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_CREATE_TIMESTAMP = "createTimestamp";
  private OffsetDateTime createTimestamp;

  public static final String JSON_PROPERTY_PROCESSED_TIMESTAMP = "processedTimestamp";
  private OffsetDateTime processedTimestamp;

  public EstimateObjectLinesInner() {
  }

  public EstimateObjectLinesInner lineID(Integer lineID) {
    
    this.lineID = lineID;
    return this;
  }

   /**
   * Get lineID
   * @return lineID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLineID() {
    return lineID;
  }


  @JsonProperty(JSON_PROPERTY_LINE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLineID(Integer lineID) {
    this.lineID = lineID;
  }


  public EstimateObjectLinesInner amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public EstimateObjectLinesInner coverageTypeCode(String coverageTypeCode) {
    
    this.coverageTypeCode = coverageTypeCode;
    return this;
  }

   /**
   * Get coverageTypeCode
   * @return coverageTypeCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCoverageTypeCode() {
    return coverageTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoverageTypeCode(String coverageTypeCode) {
    this.coverageTypeCode = coverageTypeCode;
  }


  public EstimateObjectLinesInner procesesingReference(String procesesingReference) {
    
    this.procesesingReference = procesesingReference;
    return this;
  }

   /**
   * Get procesesingReference
   * @return procesesingReference
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESESING_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcesesingReference() {
    return procesesingReference;
  }


  @JsonProperty(JSON_PROPERTY_PROCESESING_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcesesingReference(String procesesingReference) {
    this.procesesingReference = procesesingReference;
  }


  public EstimateObjectLinesInner lineStatus(String lineStatus) {
    
    this.lineStatus = lineStatus;
    return this;
  }

   /**
   * Get lineStatus
   * @return lineStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINE_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLineStatus() {
    return lineStatus;
  }


  @JsonProperty(JSON_PROPERTY_LINE_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLineStatus(String lineStatus) {
    this.lineStatus = lineStatus;
  }


  public EstimateObjectLinesInner notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public EstimateObjectLinesInner createTimestamp(OffsetDateTime createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * Get createTimestamp
   * @return createTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreateTimestamp() {
    return createTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateTimestamp(OffsetDateTime createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public EstimateObjectLinesInner processedTimestamp(OffsetDateTime processedTimestamp) {
    
    this.processedTimestamp = processedTimestamp;
    return this;
  }

   /**
   * Get processedTimestamp
   * @return processedTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getProcessedTimestamp() {
    return processedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedTimestamp(OffsetDateTime processedTimestamp) {
    this.processedTimestamp = processedTimestamp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateObjectLinesInner estimateObjectLinesInner = (EstimateObjectLinesInner) o;
    return Objects.equals(this.lineID, estimateObjectLinesInner.lineID) &&
        Objects.equals(this.amount, estimateObjectLinesInner.amount) &&
        Objects.equals(this.coverageTypeCode, estimateObjectLinesInner.coverageTypeCode) &&
        Objects.equals(this.procesesingReference, estimateObjectLinesInner.procesesingReference) &&
        Objects.equals(this.lineStatus, estimateObjectLinesInner.lineStatus) &&
        Objects.equals(this.notes, estimateObjectLinesInner.notes) &&
        Objects.equals(this.createTimestamp, estimateObjectLinesInner.createTimestamp) &&
        Objects.equals(this.processedTimestamp, estimateObjectLinesInner.processedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineID, amount, coverageTypeCode, procesesingReference, lineStatus, notes, createTimestamp, processedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateObjectLinesInner {\n");
    sb.append("    lineID: ").append(toIndentedString(lineID)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    coverageTypeCode: ").append(toIndentedString(coverageTypeCode)).append("\n");
    sb.append("    procesesingReference: ").append(toIndentedString(procesesingReference)).append("\n");
    sb.append("    lineStatus: ").append(toIndentedString(lineStatus)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    processedTimestamp: ").append(toIndentedString(processedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

