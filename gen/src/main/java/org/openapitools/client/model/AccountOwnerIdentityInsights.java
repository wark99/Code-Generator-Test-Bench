/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeviceInsights;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * List of account owner Identity Insights
 */
@JsonPropertyOrder({
  AccountOwnerIdentityInsights.JSON_PROPERTY_REQUEST_REF_ID,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IS_EMAIL_VALID,
  AccountOwnerIdentityInsights.JSON_PROPERTY_EMAIL_FIRST_SEEN_DAYS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_EMAIL_DOMAIN_CREATION_DATE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_EMAIL_TO_NAME,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_RISK,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_RISK_SCORE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_LAST_SEEN_DAYS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_GEOLOCATION_COUNTRY_CODE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_GEOLOCATION_SUBDIVISION,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_PHONE_DISTANCE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IP_ADDRESS_DISTANCE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IS_PHONE_VALID,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_LINE_TYPE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_CARRIER,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_COUNTRY_CODE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_LAST_SEEN_DAYS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_EMAIL_FIRST_SEEN_DAYS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_TO_NAME,
  AccountOwnerIdentityInsights.JSON_PROPERTY_PHONE_TO_ADDRESS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_ADDRESS_VALIDITY_LEVEL,
  AccountOwnerIdentityInsights.JSON_PROPERTY_ADDRESS_TO_NAME,
  AccountOwnerIdentityInsights.JSON_PROPERTY_EMAIL_RISK,
  AccountOwnerIdentityInsights.JSON_PROPERTY_IDENTITY_RISK_SCORE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_DEVICE,
  AccountOwnerIdentityInsights.JSON_PROPERTY_WARNINGS,
  AccountOwnerIdentityInsights.JSON_PROPERTY_ALERTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:35.632313798Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountOwnerIdentityInsights {
  public static final String JSON_PROPERTY_REQUEST_REF_ID = "requestRefId";
  private String requestRefId;

  public static final String JSON_PROPERTY_IS_EMAIL_VALID = "isEmailValid";
  private Boolean isEmailValid;

  public static final String JSON_PROPERTY_EMAIL_FIRST_SEEN_DAYS = "emailFirstSeenDays";
  private BigDecimal emailFirstSeenDays;

  public static final String JSON_PROPERTY_EMAIL_DOMAIN_CREATION_DATE = "emailDomainCreationDate";
  private String emailDomainCreationDate;

  public static final String JSON_PROPERTY_EMAIL_TO_NAME = "emailToName";
  private String emailToName;

  public static final String JSON_PROPERTY_IP_RISK = "ipRisk";
  private BigDecimal ipRisk;

  public static final String JSON_PROPERTY_IP_RISK_SCORE = "ipRiskScore";
  private BigDecimal ipRiskScore;

  public static final String JSON_PROPERTY_IP_LAST_SEEN_DAYS = "ipLastSeenDays";
  private BigDecimal ipLastSeenDays;

  public static final String JSON_PROPERTY_IP_GEOLOCATION_COUNTRY_CODE = "ipGeolocationCountryCode";
  private String ipGeolocationCountryCode;

  public static final String JSON_PROPERTY_IP_GEOLOCATION_SUBDIVISION = "ipGeolocationSubdivision";
  private String ipGeolocationSubdivision;

  public static final String JSON_PROPERTY_IP_PHONE_DISTANCE = "ipPhoneDistance";
  private BigDecimal ipPhoneDistance;

  public static final String JSON_PROPERTY_IP_ADDRESS_DISTANCE = "ipAddressDistance";
  private BigDecimal ipAddressDistance;

  public static final String JSON_PROPERTY_IS_PHONE_VALID = "isPhoneValid";
  private Boolean isPhoneValid;

  public static final String JSON_PROPERTY_PHONE_LINE_TYPE = "phoneLineType";
  private String phoneLineType;

  public static final String JSON_PROPERTY_PHONE_CARRIER = "phoneCarrier";
  private String phoneCarrier;

  public static final String JSON_PROPERTY_PHONE_COUNTRY_CODE = "phoneCountryCode";
  private String phoneCountryCode;

  public static final String JSON_PROPERTY_PHONE_LAST_SEEN_DAYS = "phoneLastSeenDays";
  private BigDecimal phoneLastSeenDays;

  public static final String JSON_PROPERTY_PHONE_EMAIL_FIRST_SEEN_DAYS = "phoneEmailFirstSeenDays";
  private BigDecimal phoneEmailFirstSeenDays;

  public static final String JSON_PROPERTY_PHONE_TO_NAME = "phoneToName";
  private String phoneToName;

  public static final String JSON_PROPERTY_PHONE_TO_ADDRESS = "phoneToAddress";
  private String phoneToAddress;

  public static final String JSON_PROPERTY_ADDRESS_VALIDITY_LEVEL = "addressValidityLevel";
  private BigDecimal addressValidityLevel;

  public static final String JSON_PROPERTY_ADDRESS_TO_NAME = "addressToName";
  private String addressToName;

  public static final String JSON_PROPERTY_EMAIL_RISK = "emailRisk";
  private BigDecimal emailRisk;

  public static final String JSON_PROPERTY_IDENTITY_RISK_SCORE = "identityRiskScore";
  private BigDecimal identityRiskScore;

  public static final String JSON_PROPERTY_DEVICE = "device";
  private DeviceInsights device;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private List<String> warnings;

  public static final String JSON_PROPERTY_ALERTS = "alerts";
  private List<String> alerts;

  public AccountOwnerIdentityInsights() {
  }

  public AccountOwnerIdentityInsights requestRefId(String requestRefId) {
    
    this.requestRefId = requestRefId;
    return this;
  }

   /**
   * The generated unique web transaction identifier.
   * @return requestRefId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_REF_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestRefId() {
    return requestRefId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_REF_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestRefId(String requestRefId) {
    this.requestRefId = requestRefId;
  }


  public AccountOwnerIdentityInsights isEmailValid(Boolean isEmailValid) {
    
    this.isEmailValid = isEmailValid;
    return this;
  }

   /**
   * True if the email address is valid.
   * @return isEmailValid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_EMAIL_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsEmailValid() {
    return isEmailValid;
  }


  @JsonProperty(JSON_PROPERTY_IS_EMAIL_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsEmailValid(Boolean isEmailValid) {
    this.isEmailValid = isEmailValid;
  }


  public AccountOwnerIdentityInsights emailFirstSeenDays(BigDecimal emailFirstSeenDays) {
    
    this.emailFirstSeenDays = emailFirstSeenDays;
    return this;
  }

   /**
   * Count of days since the email was first observed in Ekata&#39;s Identity Network. If the email has not been observed before, first_seen_days will be 0.
   * @return emailFirstSeenDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_FIRST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEmailFirstSeenDays() {
    return emailFirstSeenDays;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_FIRST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailFirstSeenDays(BigDecimal emailFirstSeenDays) {
    this.emailFirstSeenDays = emailFirstSeenDays;
  }


  public AccountOwnerIdentityInsights emailDomainCreationDate(String emailDomainCreationDate) {
    
    this.emailDomainCreationDate = emailDomainCreationDate;
    return this;
  }

   /**
   * Returns a date that the email domain was created.
   * @return emailDomainCreationDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_DOMAIN_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailDomainCreationDate() {
    return emailDomainCreationDate;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_DOMAIN_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailDomainCreationDate(String emailDomainCreationDate) {
    this.emailDomainCreationDate = emailDomainCreationDate;
  }


  public AccountOwnerIdentityInsights emailToName(String emailToName) {
    
    this.emailToName = emailToName;
    return this;
  }

   /**
   * The match status between the input name and the queried entity. * not found * match * no-match
   * @return emailToName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailToName() {
    return emailToName;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailToName(String emailToName) {
    this.emailToName = emailToName;
  }


  public AccountOwnerIdentityInsights ipRisk(BigDecimal ipRisk) {
    
    this.ipRisk = ipRisk;
    return this;
  }

   /**
   * True if the IP address is considered risky, based on multiple IP data points and velocity calculations.
   * @return ipRisk
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIpRisk() {
    return ipRisk;
  }


  @JsonProperty(JSON_PROPERTY_IP_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpRisk(BigDecimal ipRisk) {
    this.ipRisk = ipRisk;
  }


  public AccountOwnerIdentityInsights ipRiskScore(BigDecimal ipRiskScore) {
    
    this.ipRiskScore = ipRiskScore;
    return this;
  }

   /**
   * Comprehensive risk score associated with an IP address, with a higher score indicating a riskier IP address. A number between 0 and 1 rounded to three decimal places.
   * @return ipRiskScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIpRiskScore() {
    return ipRiskScore;
  }


  @JsonProperty(JSON_PROPERTY_IP_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpRiskScore(BigDecimal ipRiskScore) {
    this.ipRiskScore = ipRiskScore;
  }


  public AccountOwnerIdentityInsights ipLastSeenDays(BigDecimal ipLastSeenDays) {
    
    this.ipLastSeenDays = ipLastSeenDays;
    return this;
  }

   /**
   * Count of days since the IP address was last observed in Ekata&#39;s Identity Network. If the IP address has not been observed before, IpLastSeenDays will be 0.
   * @return ipLastSeenDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_LAST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIpLastSeenDays() {
    return ipLastSeenDays;
  }


  @JsonProperty(JSON_PROPERTY_IP_LAST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpLastSeenDays(BigDecimal ipLastSeenDays) {
    this.ipLastSeenDays = ipLastSeenDays;
  }


  public AccountOwnerIdentityInsights ipGeolocationCountryCode(String ipGeolocationCountryCode) {
    
    this.ipGeolocationCountryCode = ipGeolocationCountryCode;
    return this;
  }

   /**
   * The ISO-3166 alpha-2 country code associated with the geolocation of the IP address.
   * @return ipGeolocationCountryCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_GEOLOCATION_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpGeolocationCountryCode() {
    return ipGeolocationCountryCode;
  }


  @JsonProperty(JSON_PROPERTY_IP_GEOLOCATION_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpGeolocationCountryCode(String ipGeolocationCountryCode) {
    this.ipGeolocationCountryCode = ipGeolocationCountryCode;
  }


  public AccountOwnerIdentityInsights ipGeolocationSubdivision(String ipGeolocationSubdivision) {
    
    this.ipGeolocationSubdivision = ipGeolocationSubdivision;
    return this;
  }

   /**
   * More granular detail about the IP address location.
   * @return ipGeolocationSubdivision
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_GEOLOCATION_SUBDIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpGeolocationSubdivision() {
    return ipGeolocationSubdivision;
  }


  @JsonProperty(JSON_PROPERTY_IP_GEOLOCATION_SUBDIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpGeolocationSubdivision(String ipGeolocationSubdivision) {
    this.ipGeolocationSubdivision = ipGeolocationSubdivision;
  }


  public AccountOwnerIdentityInsights ipPhoneDistance(BigDecimal ipPhoneDistance) {
    
    this.ipPhoneDistance = ipPhoneDistance;
    return this;
  }

   /**
   * The distance (in miles) between the IP address and the closest physical address associated with the phone number.
   * @return ipPhoneDistance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_PHONE_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIpPhoneDistance() {
    return ipPhoneDistance;
  }


  @JsonProperty(JSON_PROPERTY_IP_PHONE_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpPhoneDistance(BigDecimal ipPhoneDistance) {
    this.ipPhoneDistance = ipPhoneDistance;
  }


  public AccountOwnerIdentityInsights ipAddressDistance(BigDecimal ipAddressDistance) {
    
    this.ipAddressDistance = ipAddressDistance;
    return this;
  }

   /**
   * The distance (in miles) between the IP address and the physical address.
   * @return ipAddressDistance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIpAddressDistance() {
    return ipAddressDistance;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddressDistance(BigDecimal ipAddressDistance) {
    this.ipAddressDistance = ipAddressDistance;
  }


  public AccountOwnerIdentityInsights isPhoneValid(Boolean isPhoneValid) {
    
    this.isPhoneValid = isPhoneValid;
    return this;
  }

   /**
   * True if the phone number is valid.
   * @return isPhoneValid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PHONE_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsPhoneValid() {
    return isPhoneValid;
  }


  @JsonProperty(JSON_PROPERTY_IS_PHONE_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPhoneValid(Boolean isPhoneValid) {
    this.isPhoneValid = isPhoneValid;
  }


  public AccountOwnerIdentityInsights phoneLineType(String phoneLineType) {
    
    this.phoneLineType = phoneLineType;
    return this;
  }

   /**
   * The line type of the phone number. * landline - traditional wired phone line. * fixed-voip - VoIP-based fixed line phones. * mobile - wireless phone line. * voicemail - voicemail-only service. * toll-free - callee pays for call. * premium - caller pays a premium for the call-e.g., 976 area code. * non-fixed-voip - Skype, for example * other - anything that does not match the previous categories.
   * @return phoneLineType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_LINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneLineType() {
    return phoneLineType;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_LINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneLineType(String phoneLineType) {
    this.phoneLineType = phoneLineType;
  }


  public AccountOwnerIdentityInsights phoneCarrier(String phoneCarrier) {
    
    this.phoneCarrier = phoneCarrier;
    return this;
  }

   /**
   * The company that provides voice and/or data services for the phone number. Carriers are returned at the MVNO level.
   * @return phoneCarrier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneCarrier() {
    return phoneCarrier;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneCarrier(String phoneCarrier) {
    this.phoneCarrier = phoneCarrier;
  }


  public AccountOwnerIdentityInsights phoneCountryCode(String phoneCountryCode) {
    
    this.phoneCountryCode = phoneCountryCode;
    return this;
  }

   /**
   * The ISO-3166 alpha-2 country code associated with the phone number.
   * @return phoneCountryCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneCountryCode() {
    return phoneCountryCode;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = phoneCountryCode;
  }


  public AccountOwnerIdentityInsights phoneLastSeenDays(BigDecimal phoneLastSeenDays) {
    
    this.phoneLastSeenDays = phoneLastSeenDays;
    return this;
  }

   /**
   * Count of days since the phone was last observed in Ekata&#39;s Identity Network. If the phone has not been observed before, &#x60;phoneLastSeenDays&#x60; will be 0.
   * @return phoneLastSeenDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_LAST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhoneLastSeenDays() {
    return phoneLastSeenDays;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_LAST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneLastSeenDays(BigDecimal phoneLastSeenDays) {
    this.phoneLastSeenDays = phoneLastSeenDays;
  }


  public AccountOwnerIdentityInsights phoneEmailFirstSeenDays(BigDecimal phoneEmailFirstSeenDays) {
    
    this.phoneEmailFirstSeenDays = phoneEmailFirstSeenDays;
    return this;
  }

   /**
   * Count of days since the combination of phone and email was first observed in Ekata&#39;s Identity Network. If that combination has not been observed before, &#x60;phoneEmailFirstSeenDays&#x60; will be 0.
   * @return phoneEmailFirstSeenDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_EMAIL_FIRST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhoneEmailFirstSeenDays() {
    return phoneEmailFirstSeenDays;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_EMAIL_FIRST_SEEN_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneEmailFirstSeenDays(BigDecimal phoneEmailFirstSeenDays) {
    this.phoneEmailFirstSeenDays = phoneEmailFirstSeenDays;
  }


  public AccountOwnerIdentityInsights phoneToName(String phoneToName) {
    
    this.phoneToName = phoneToName;
    return this;
  }

   /**
   * The match status between the input name and the queried entity.  * not-found  * match  * no-match
   * @return phoneToName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneToName() {
    return phoneToName;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneToName(String phoneToName) {
    this.phoneToName = phoneToName;
  }


  public AccountOwnerIdentityInsights phoneToAddress(String phoneToAddress) {
    
    this.phoneToAddress = phoneToAddress;
    return this;
  }

   /**
   * The match status between the input phone and the queried entity. * match - Phone location matches input address line 1, address line 2, city, state, and postal code.  * postal-match - Phone location postal code matches input address postal code.  * zip4-match - Phone location postal code zip+4 matches input address postal code zip+4.  * city-state-match - Phone location city and state matches input address city and state. * metro-match - Phone location is in the same metro area as input address.  * country-match - Phone location country matches input address country.  * no-match - Phone location does not match input address.
   * @return phoneToAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneToAddress() {
    return phoneToAddress;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneToAddress(String phoneToAddress) {
    this.phoneToAddress = phoneToAddress;
  }


  public AccountOwnerIdentityInsights addressValidityLevel(BigDecimal addressValidityLevel) {
    
    this.addressValidityLevel = addressValidityLevel;
    return this;
  }

   /**
   * The most granular level to which the address could be validated. Ex. If the address was only valid to the city level (but not to the house level), it would return “valid_to_city”.   * missing_address - An input address was not provided.    * invalid - The input address is not valid.    * valid - The input address is valid.    * valid_to_country - The input address could only be validated to the country level. This means the country of the input address is valid, but the other elements of the input address were unable to be confirmed as valid or invalid.    * valid_to_city - The input address was validated to the city level. This means the country, state, city, and postal code of the input address are valid, but the street, house number, and subpremise of the input address were unable to be confirmed as valid or invalid.    * valid_to_street - The input address was validated to the street level. This means the country, state, city, postal code, and street of the input address are valid, but the house number and subpremise of the input address were unable to be confirmed as valid or invalid.      * valid_to_house_number - The input address was validated to the street and house number level. This means the country, state, city, postal code, street, and house number of the input address are valid, but the subpremise of the input address was unable to be confirmed as valid or invalid.      * valid_to_house_number_missing_apt - The input address was validated to the street and house number level. This means the country, state, city, postal code, street, and house number of the input address are valid, but the subpremise of the input address was missing and thus unable to be confirmed as valid or invalid.
   * @return addressValidityLevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_VALIDITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAddressValidityLevel() {
    return addressValidityLevel;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_VALIDITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressValidityLevel(BigDecimal addressValidityLevel) {
    this.addressValidityLevel = addressValidityLevel;
  }


  public AccountOwnerIdentityInsights addressToName(String addressToName) {
    
    this.addressToName = addressToName;
    return this;
  }

   /**
   * The match status between the input name and the queried entity. * not-found * match * no-match
   * @return addressToName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressToName() {
    return addressToName;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_TO_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressToName(String addressToName) {
    this.addressToName = addressToName;
  }


  public AccountOwnerIdentityInsights emailRisk(BigDecimal emailRisk) {
    
    this.emailRisk = emailRisk;
    return this;
  }

   /**
   * Email Risk Score assesses the risk level of an email address by leveraging features from our Identity Graph and Identity Network. It provides the strongest indicator of a high-risk email.
   * @return emailRisk
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEmailRisk() {
    return emailRisk;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailRisk(BigDecimal emailRisk) {
    this.emailRisk = emailRisk;
  }


  public AccountOwnerIdentityInsights identityRiskScore(BigDecimal identityRiskScore) {
    
    this.identityRiskScore = identityRiskScore;
    return this;
  }

   /**
   * Comprehensive identity risk score with a higher score indicating a riskier account sign-up.
   * @return identityRiskScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDENTITY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIdentityRiskScore() {
    return identityRiskScore;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentityRiskScore(BigDecimal identityRiskScore) {
    this.identityRiskScore = identityRiskScore;
  }


  public AccountOwnerIdentityInsights device(DeviceInsights device) {
    
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeviceInsights getDevice() {
    return device;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevice(DeviceInsights device) {
    this.device = device;
  }


  public AccountOwnerIdentityInsights warnings(List<String> warnings) {
    
    this.warnings = warnings;
    return this;
  }

  public AccountOwnerIdentityInsights addWarningsItem(String warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWarnings() {
    return warnings;
  }


  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnings(List<String> warnings) {
    this.warnings = warnings;
  }


  public AccountOwnerIdentityInsights alerts(List<String> alerts) {
    
    this.alerts = alerts;
    return this;
  }

  public AccountOwnerIdentityInsights addAlertsItem(String alertsItem) {
    if (this.alerts == null) {
      this.alerts = new ArrayList<>();
    }
    this.alerts.add(alertsItem);
    return this;
  }

   /**
   * Get alerts
   * @return alerts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAlerts() {
    return alerts;
  }


  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlerts(List<String> alerts) {
    this.alerts = alerts;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountOwnerIdentityInsights accountOwnerIdentityInsights = (AccountOwnerIdentityInsights) o;
    return Objects.equals(this.requestRefId, accountOwnerIdentityInsights.requestRefId) &&
        Objects.equals(this.isEmailValid, accountOwnerIdentityInsights.isEmailValid) &&
        Objects.equals(this.emailFirstSeenDays, accountOwnerIdentityInsights.emailFirstSeenDays) &&
        Objects.equals(this.emailDomainCreationDate, accountOwnerIdentityInsights.emailDomainCreationDate) &&
        Objects.equals(this.emailToName, accountOwnerIdentityInsights.emailToName) &&
        Objects.equals(this.ipRisk, accountOwnerIdentityInsights.ipRisk) &&
        Objects.equals(this.ipRiskScore, accountOwnerIdentityInsights.ipRiskScore) &&
        Objects.equals(this.ipLastSeenDays, accountOwnerIdentityInsights.ipLastSeenDays) &&
        Objects.equals(this.ipGeolocationCountryCode, accountOwnerIdentityInsights.ipGeolocationCountryCode) &&
        Objects.equals(this.ipGeolocationSubdivision, accountOwnerIdentityInsights.ipGeolocationSubdivision) &&
        Objects.equals(this.ipPhoneDistance, accountOwnerIdentityInsights.ipPhoneDistance) &&
        Objects.equals(this.ipAddressDistance, accountOwnerIdentityInsights.ipAddressDistance) &&
        Objects.equals(this.isPhoneValid, accountOwnerIdentityInsights.isPhoneValid) &&
        Objects.equals(this.phoneLineType, accountOwnerIdentityInsights.phoneLineType) &&
        Objects.equals(this.phoneCarrier, accountOwnerIdentityInsights.phoneCarrier) &&
        Objects.equals(this.phoneCountryCode, accountOwnerIdentityInsights.phoneCountryCode) &&
        Objects.equals(this.phoneLastSeenDays, accountOwnerIdentityInsights.phoneLastSeenDays) &&
        Objects.equals(this.phoneEmailFirstSeenDays, accountOwnerIdentityInsights.phoneEmailFirstSeenDays) &&
        Objects.equals(this.phoneToName, accountOwnerIdentityInsights.phoneToName) &&
        Objects.equals(this.phoneToAddress, accountOwnerIdentityInsights.phoneToAddress) &&
        Objects.equals(this.addressValidityLevel, accountOwnerIdentityInsights.addressValidityLevel) &&
        Objects.equals(this.addressToName, accountOwnerIdentityInsights.addressToName) &&
        Objects.equals(this.emailRisk, accountOwnerIdentityInsights.emailRisk) &&
        Objects.equals(this.identityRiskScore, accountOwnerIdentityInsights.identityRiskScore) &&
        Objects.equals(this.device, accountOwnerIdentityInsights.device) &&
        Objects.equals(this.warnings, accountOwnerIdentityInsights.warnings) &&
        Objects.equals(this.alerts, accountOwnerIdentityInsights.alerts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestRefId, isEmailValid, emailFirstSeenDays, emailDomainCreationDate, emailToName, ipRisk, ipRiskScore, ipLastSeenDays, ipGeolocationCountryCode, ipGeolocationSubdivision, ipPhoneDistance, ipAddressDistance, isPhoneValid, phoneLineType, phoneCarrier, phoneCountryCode, phoneLastSeenDays, phoneEmailFirstSeenDays, phoneToName, phoneToAddress, addressValidityLevel, addressToName, emailRisk, identityRiskScore, device, warnings, alerts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountOwnerIdentityInsights {\n");
    sb.append("    requestRefId: ").append(toIndentedString(requestRefId)).append("\n");
    sb.append("    isEmailValid: ").append(toIndentedString(isEmailValid)).append("\n");
    sb.append("    emailFirstSeenDays: ").append(toIndentedString(emailFirstSeenDays)).append("\n");
    sb.append("    emailDomainCreationDate: ").append(toIndentedString(emailDomainCreationDate)).append("\n");
    sb.append("    emailToName: ").append(toIndentedString(emailToName)).append("\n");
    sb.append("    ipRisk: ").append(toIndentedString(ipRisk)).append("\n");
    sb.append("    ipRiskScore: ").append(toIndentedString(ipRiskScore)).append("\n");
    sb.append("    ipLastSeenDays: ").append(toIndentedString(ipLastSeenDays)).append("\n");
    sb.append("    ipGeolocationCountryCode: ").append(toIndentedString(ipGeolocationCountryCode)).append("\n");
    sb.append("    ipGeolocationSubdivision: ").append(toIndentedString(ipGeolocationSubdivision)).append("\n");
    sb.append("    ipPhoneDistance: ").append(toIndentedString(ipPhoneDistance)).append("\n");
    sb.append("    ipAddressDistance: ").append(toIndentedString(ipAddressDistance)).append("\n");
    sb.append("    isPhoneValid: ").append(toIndentedString(isPhoneValid)).append("\n");
    sb.append("    phoneLineType: ").append(toIndentedString(phoneLineType)).append("\n");
    sb.append("    phoneCarrier: ").append(toIndentedString(phoneCarrier)).append("\n");
    sb.append("    phoneCountryCode: ").append(toIndentedString(phoneCountryCode)).append("\n");
    sb.append("    phoneLastSeenDays: ").append(toIndentedString(phoneLastSeenDays)).append("\n");
    sb.append("    phoneEmailFirstSeenDays: ").append(toIndentedString(phoneEmailFirstSeenDays)).append("\n");
    sb.append("    phoneToName: ").append(toIndentedString(phoneToName)).append("\n");
    sb.append("    phoneToAddress: ").append(toIndentedString(phoneToAddress)).append("\n");
    sb.append("    addressValidityLevel: ").append(toIndentedString(addressValidityLevel)).append("\n");
    sb.append("    addressToName: ").append(toIndentedString(addressToName)).append("\n");
    sb.append("    emailRisk: ").append(toIndentedString(emailRisk)).append("\n");
    sb.append("    identityRiskScore: ").append(toIndentedString(identityRiskScore)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

