/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppFinancialInstitutionStatus;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Registration status details for the application
 */
@JsonPropertyOrder({
  AppStatus.JSON_PROPERTY_PARTNER_ID,
  AppStatus.JSON_PROPERTY_PRE_APP_ID,
  AppStatus.JSON_PROPERTY_NOTE,
  AppStatus.JSON_PROPERTY_APPLICATION_ID,
  AppStatus.JSON_PROPERTY_APP_NAME,
  AppStatus.JSON_PROPERTY_SUBMITTED_DATE,
  AppStatus.JSON_PROPERTY_MODIFIED_DATE,
  AppStatus.JSON_PROPERTY_STATUS,
  AppStatus.JSON_PROPERTY_SCOPES,
  AppStatus.JSON_PROPERTY_INSTITUTION_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:05:40.878624261Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AppStatus {
  public static final String JSON_PROPERTY_PARTNER_ID = "partnerId";
  private String partnerId;

  public static final String JSON_PROPERTY_PRE_APP_ID = "preAppId";
  private String preAppId;

  public static final String JSON_PROPERTY_NOTE = "note";
  private String note;

  public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
  private String applicationId;

  public static final String JSON_PROPERTY_APP_NAME = "appName";
  private String appName;

  public static final String JSON_PROPERTY_SUBMITTED_DATE = "submittedDate";
  private Long submittedDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private Long modifiedDate;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  private String scopes;

  public static final String JSON_PROPERTY_INSTITUTION_DETAILS = "institutionDetails";
  private List<AppFinancialInstitutionStatus> institutionDetails;

  public AppStatus() {
  }

  public AppStatus partnerId(String partnerId) {
    
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Your Partner ID displayed in the [Developer Dashboard](https://developer.mastercard.com/account/log-in)
   * @return partnerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartnerId() {
    return partnerId;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public AppStatus preAppId(String preAppId) {
    
    this.preAppId = preAppId;
    return this;
  }

   /**
   * Identifier to track the application registration from the App Registration and Get App Registration Status APIs
   * @return preAppId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRE_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPreAppId() {
    return preAppId;
  }


  @JsonProperty(JSON_PROPERTY_PRE_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPreAppId(String preAppId) {
    this.preAppId = preAppId;
  }


  public AppStatus note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * A note on the registration. Typically used to indicate reasons for rejected apps.
   * @return note
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNote() {
    return note;
  }


  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNote(String note) {
    this.note = note;
  }


  public AppStatus applicationId(String applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * &#x60;applicationId&#x60; value returned from the Get App Registration Status API and the partner assign the customers to. This cannot be changed once set. Only applicable in cases of partners with multiple registered applications. If the partner only has one app, this can usually be omitted. This field is populated after the app is in a status approved.
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationId() {
    return applicationId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public AppStatus appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * The name of the application assigned to the customer
   * @return appName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAppName() {
    return appName;
  }


  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAppName(String appName) {
    this.appName = appName;
  }


  public AppStatus submittedDate(Long submittedDate) {
    
    this.submittedDate = submittedDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return submittedDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMITTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSubmittedDate() {
    return submittedDate;
  }


  @JsonProperty(JSON_PROPERTY_SUBMITTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmittedDate(Long submittedDate) {
    this.submittedDate = submittedDate;
  }


  public AppStatus modifiedDate(Long modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return modifiedDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedDate(Long modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public AppStatus status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of an app registration request. \&quot;A\&quot; means approved. \&quot;P\&quot; means pending which is the status when initially submitted or when the app is modified and awaiting approval. \&quot;R\&quot; means rejected. If it is rejected there will be a note with the rejected reason.
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public AppStatus scopes(String scopes) {
    
    this.scopes = scopes;
    return this;
  }

   /**
   * Indicates scopes of data accessible to the app
   * @return scopes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScopes() {
    return scopes;
  }


  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(String scopes) {
    this.scopes = scopes;
  }


  public AppStatus institutionDetails(List<AppFinancialInstitutionStatus> institutionDetails) {
    
    this.institutionDetails = institutionDetails;
    return this;
  }

  public AppStatus addInstitutionDetailsItem(AppFinancialInstitutionStatus institutionDetailsItem) {
    if (this.institutionDetails == null) {
      this.institutionDetails = new ArrayList<>();
    }
    this.institutionDetails.add(institutionDetailsItem);
    return this;
  }

   /**
   * A list of the registration status for each FI for the application
   * @return institutionDetails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AppFinancialInstitutionStatus> getInstitutionDetails() {
    return institutionDetails;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionDetails(List<AppFinancialInstitutionStatus> institutionDetails) {
    this.institutionDetails = institutionDetails;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStatus appStatus = (AppStatus) o;
    return Objects.equals(this.partnerId, appStatus.partnerId) &&
        Objects.equals(this.preAppId, appStatus.preAppId) &&
        Objects.equals(this.note, appStatus.note) &&
        Objects.equals(this.applicationId, appStatus.applicationId) &&
        Objects.equals(this.appName, appStatus.appName) &&
        Objects.equals(this.submittedDate, appStatus.submittedDate) &&
        Objects.equals(this.modifiedDate, appStatus.modifiedDate) &&
        Objects.equals(this.status, appStatus.status) &&
        Objects.equals(this.scopes, appStatus.scopes) &&
        Objects.equals(this.institutionDetails, appStatus.institutionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partnerId, preAppId, note, applicationId, appName, submittedDate, modifiedDate, status, scopes, institutionDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStatus {\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    preAppId: ").append(toIndentedString(preAppId)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    submittedDate: ").append(toIndentedString(submittedDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    institutionDetails: ").append(toIndentedString(institutionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

