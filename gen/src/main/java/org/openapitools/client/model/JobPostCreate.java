/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.JobIdEditPutRequestPay;
import org.openapitools.client.model.JobIdEditPutRequestSchedule;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * JobPostCreate
 */
@JsonPropertyOrder({
  JobPostCreate.JSON_PROPERTY_TITLE,
  JobPostCreate.JSON_PROPERTY_DESCRIPTION,
  JobPostCreate.JSON_PROPERTY_NUMBER_OF_CHILDREN,
  JobPostCreate.JSON_PROPERTY_AGE_OF_CHILDREN,
  JobPostCreate.JSON_PROPERTY_CHILDCARE_TYPES,
  JobPostCreate.JSON_PROPERTY_JOB_TYPES,
  JobPostCreate.JSON_PROPERTY_SCHEDULE,
  JobPostCreate.JSON_PROPERTY_PAY,
  JobPostCreate.JSON_PROPERTY_POSTCODE,
  JobPostCreate.JSON_PROPERTY_CITY,
  JobPostCreate.JSON_PROPERTY_TOWN,
  JobPostCreate.JSON_PROPERTY_START_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class JobPostCreate {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_NUMBER_OF_CHILDREN = "number_of_children";
  private Integer numberOfChildren;

  /**
   * Gets or Sets ageOfChildren
   */
  public enum AgeOfChildrenEnum {
    TODDLER("toddler"),
    
    PRESCHOOLER("preschooler"),
    
    _5_11_YR_OLD("5-11_yr_old"),
    
    TEENAGER("teenager");

    private String value;

    AgeOfChildrenEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgeOfChildrenEnum fromValue(String value) {
      for (AgeOfChildrenEnum b : AgeOfChildrenEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGE_OF_CHILDREN = "age_of_children";
  private List<AgeOfChildrenEnum> ageOfChildren = new ArrayList<>();

  /**
   * Gets or Sets childcareTypes
   */
  public enum ChildcareTypesEnum {
    NANNY("nanny"),
    
    BABYSITTER("babysitter"),
    
    CHILDMINDER("childminder"),
    
    PRIVATE_TUTOR("private_tutor"),
    
    HOUSEHOLD_HELP("household_help");

    private String value;

    ChildcareTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildcareTypesEnum fromValue(String value) {
      for (ChildcareTypesEnum b : ChildcareTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDCARE_TYPES = "childcare_types";
  private List<ChildcareTypesEnum> childcareTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_JOB_TYPES = "job_types";
  private List<String> jobTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_SCHEDULE = "schedule";
  private JobIdEditPutRequestSchedule schedule;

  public static final String JSON_PROPERTY_PAY = "pay";
  private JobIdEditPutRequestPay pay;

  public static final String JSON_PROPERTY_POSTCODE = "postcode";
  private String postcode;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_TOWN = "town";
  private String town;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  private String startDate;

  public JobPostCreate() {
  }

  public JobPostCreate title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public JobPostCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public JobPostCreate numberOfChildren(Integer numberOfChildren) {
    
    this.numberOfChildren = numberOfChildren;
    return this;
  }

   /**
   * Get numberOfChildren
   * @return numberOfChildren
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNumberOfChildren() {
    return numberOfChildren;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfChildren(Integer numberOfChildren) {
    this.numberOfChildren = numberOfChildren;
  }


  public JobPostCreate ageOfChildren(List<AgeOfChildrenEnum> ageOfChildren) {
    
    this.ageOfChildren = ageOfChildren;
    return this;
  }

  public JobPostCreate addAgeOfChildrenItem(AgeOfChildrenEnum ageOfChildrenItem) {
    if (this.ageOfChildren == null) {
      this.ageOfChildren = new ArrayList<>();
    }
    this.ageOfChildren.add(ageOfChildrenItem);
    return this;
  }

   /**
   * Get ageOfChildren
   * @return ageOfChildren
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGE_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AgeOfChildrenEnum> getAgeOfChildren() {
    return ageOfChildren;
  }


  @JsonProperty(JSON_PROPERTY_AGE_OF_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgeOfChildren(List<AgeOfChildrenEnum> ageOfChildren) {
    this.ageOfChildren = ageOfChildren;
  }


  public JobPostCreate childcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    
    this.childcareTypes = childcareTypes;
    return this;
  }

  public JobPostCreate addChildcareTypesItem(ChildcareTypesEnum childcareTypesItem) {
    if (this.childcareTypes == null) {
      this.childcareTypes = new ArrayList<>();
    }
    this.childcareTypes.add(childcareTypesItem);
    return this;
  }

   /**
   * Get childcareTypes
   * @return childcareTypes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ChildcareTypesEnum> getChildcareTypes() {
    return childcareTypes;
  }


  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    this.childcareTypes = childcareTypes;
  }


  public JobPostCreate jobTypes(List<String> jobTypes) {
    
    this.jobTypes = jobTypes;
    return this;
  }

  public JobPostCreate addJobTypesItem(String jobTypesItem) {
    if (this.jobTypes == null) {
      this.jobTypes = new ArrayList<>();
    }
    this.jobTypes.add(jobTypesItem);
    return this;
  }

   /**
   * Get jobTypes
   * @return jobTypes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getJobTypes() {
    return jobTypes;
  }


  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJobTypes(List<String> jobTypes) {
    this.jobTypes = jobTypes;
  }


  public JobPostCreate schedule(JobIdEditPutRequestSchedule schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public JobIdEditPutRequestSchedule getSchedule() {
    return schedule;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchedule(JobIdEditPutRequestSchedule schedule) {
    this.schedule = schedule;
  }


  public JobPostCreate pay(JobIdEditPutRequestPay pay) {
    
    this.pay = pay;
    return this;
  }

   /**
   * Get pay
   * @return pay
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public JobIdEditPutRequestPay getPay() {
    return pay;
  }


  @JsonProperty(JSON_PROPERTY_PAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPay(JobIdEditPutRequestPay pay) {
    this.pay = pay;
  }


  public JobPostCreate postcode(String postcode) {
    
    this.postcode = postcode;
    return this;
  }

   /**
   * Get postcode
   * @return postcode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPostcode() {
    return postcode;
  }


  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public JobPostCreate city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCity(String city) {
    this.city = city;
  }


  public JobPostCreate town(String town) {
    
    this.town = town;
    return this;
  }

   /**
   * Get town
   * @return town
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTown() {
    return town;
  }


  @JsonProperty(JSON_PROPERTY_TOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTown(String town) {
    this.town = town;
  }


  public JobPostCreate startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobPostCreate jobPostCreate = (JobPostCreate) o;
    return Objects.equals(this.title, jobPostCreate.title) &&
        Objects.equals(this.description, jobPostCreate.description) &&
        Objects.equals(this.numberOfChildren, jobPostCreate.numberOfChildren) &&
        Objects.equals(this.ageOfChildren, jobPostCreate.ageOfChildren) &&
        Objects.equals(this.childcareTypes, jobPostCreate.childcareTypes) &&
        Objects.equals(this.jobTypes, jobPostCreate.jobTypes) &&
        Objects.equals(this.schedule, jobPostCreate.schedule) &&
        Objects.equals(this.pay, jobPostCreate.pay) &&
        Objects.equals(this.postcode, jobPostCreate.postcode) &&
        Objects.equals(this.city, jobPostCreate.city) &&
        Objects.equals(this.town, jobPostCreate.town) &&
        Objects.equals(this.startDate, jobPostCreate.startDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, numberOfChildren, ageOfChildren, childcareTypes, jobTypes, schedule, pay, postcode, city, town, startDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobPostCreate {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    numberOfChildren: ").append(toIndentedString(numberOfChildren)).append("\n");
    sb.append("    ageOfChildren: ").append(toIndentedString(ageOfChildren)).append("\n");
    sb.append("    childcareTypes: ").append(toIndentedString(childcareTypes)).append("\n");
    sb.append("    jobTypes: ").append(toIndentedString(jobTypes)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    pay: ").append(toIndentedString(pay)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

