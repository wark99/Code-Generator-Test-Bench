/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UserNotifyProps
 */
@JsonPropertyOrder({
  UserNotifyProps.JSON_PROPERTY_EMAIL,
  UserNotifyProps.JSON_PROPERTY_PUSH,
  UserNotifyProps.JSON_PROPERTY_DESKTOP,
  UserNotifyProps.JSON_PROPERTY_DESKTOP_SOUND,
  UserNotifyProps.JSON_PROPERTY_MENTION_KEYS,
  UserNotifyProps.JSON_PROPERTY_CHANNEL,
  UserNotifyProps.JSON_PROPERTY_FIRST_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UserNotifyProps {
  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PUSH = "push";
  private String push;

  public static final String JSON_PROPERTY_DESKTOP = "desktop";
  private String desktop;

  public static final String JSON_PROPERTY_DESKTOP_SOUND = "desktop_sound";
  private String desktopSound;

  public static final String JSON_PROPERTY_MENTION_KEYS = "mention_keys";
  private String mentionKeys;

  public static final String JSON_PROPERTY_CHANNEL = "channel";
  private String channel;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  public UserNotifyProps() {
  }

  public UserNotifyProps email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable email notifications, \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public UserNotifyProps push(String push) {
    
    this.push = push;
    return this;
  }

   /**
   * Set to \&quot;all\&quot; to receive push notifications for all activity, \&quot;mention\&quot; for mentions and direct messages only, and \&quot;none\&quot; to disable. Defaults to \&quot;mention\&quot;.
   * @return push
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUSH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPush() {
    return push;
  }


  @JsonProperty(JSON_PROPERTY_PUSH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPush(String push) {
    this.push = push;
  }


  public UserNotifyProps desktop(String desktop) {
    
    this.desktop = desktop;
    return this;
  }

   /**
   * Set to \&quot;all\&quot; to receive desktop notifications for all activity, \&quot;mention\&quot; for mentions and direct messages only, and \&quot;none\&quot; to disable. Defaults to \&quot;all\&quot;.
   * @return desktop
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESKTOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDesktop() {
    return desktop;
  }


  @JsonProperty(JSON_PROPERTY_DESKTOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDesktop(String desktop) {
    this.desktop = desktop;
  }


  public UserNotifyProps desktopSound(String desktopSound) {
    
    this.desktopSound = desktopSound;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable sound on desktop notifications, \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return desktopSound
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESKTOP_SOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDesktopSound() {
    return desktopSound;
  }


  @JsonProperty(JSON_PROPERTY_DESKTOP_SOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDesktopSound(String desktopSound) {
    this.desktopSound = desktopSound;
  }


  public UserNotifyProps mentionKeys(String mentionKeys) {
    
    this.mentionKeys = mentionKeys;
    return this;
  }

   /**
   * A comma-separated list of words to count as mentions. Defaults to username and @username.
   * @return mentionKeys
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MENTION_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMentionKeys() {
    return mentionKeys;
  }


  @JsonProperty(JSON_PROPERTY_MENTION_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMentionKeys(String mentionKeys) {
    this.mentionKeys = mentionKeys;
  }


  public UserNotifyProps channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable channel-wide notifications (@channel, @all, etc.), \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return channel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannel() {
    return channel;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannel(String channel) {
    this.channel = channel;
  }


  public UserNotifyProps firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable mentions for first name. Defaults to \&quot;true\&quot; if a first name is set, \&quot;false\&quot; otherwise.
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserNotifyProps userNotifyProps = (UserNotifyProps) o;
    return Objects.equals(this.email, userNotifyProps.email) &&
        Objects.equals(this.push, userNotifyProps.push) &&
        Objects.equals(this.desktop, userNotifyProps.desktop) &&
        Objects.equals(this.desktopSound, userNotifyProps.desktopSound) &&
        Objects.equals(this.mentionKeys, userNotifyProps.mentionKeys) &&
        Objects.equals(this.channel, userNotifyProps.channel) &&
        Objects.equals(this.firstName, userNotifyProps.firstName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, push, desktop, desktopSound, mentionKeys, channel, firstName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserNotifyProps {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    push: ").append(toIndentedString(push)).append("\n");
    sb.append("    desktop: ").append(toIndentedString(desktop)).append("\n");
    sb.append("    desktopSound: ").append(toIndentedString(desktopSound)).append("\n");
    sb.append("    mentionKeys: ").append(toIndentedString(mentionKeys)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

