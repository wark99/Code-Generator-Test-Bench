/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InspectionReportResponse;
import org.openapitools.client.model.MetaResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InspectionReportGet200ResponseValue
 */
@JsonPropertyOrder({
  InspectionReportGet200ResponseValue.JSON_PROPERTY_META,
  InspectionReportGet200ResponseValue.JSON_PROPERTY_INSPECTION_REPORTS
})
@JsonTypeName("_inspection_report_get_200_response_value")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InspectionReportGet200ResponseValue {
  public static final String JSON_PROPERTY_META = "meta";
  private MetaResponse meta;

  public static final String JSON_PROPERTY_INSPECTION_REPORTS = "inspection_reports";
  private List<InspectionReportResponse> inspectionReports;

  public InspectionReportGet200ResponseValue() {
  }

  public InspectionReportGet200ResponseValue meta(MetaResponse meta) {
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MetaResponse getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(MetaResponse meta) {
    this.meta = meta;
  }


  public InspectionReportGet200ResponseValue inspectionReports(List<InspectionReportResponse> inspectionReports) {
    
    this.inspectionReports = inspectionReports;
    return this;
  }

  public InspectionReportGet200ResponseValue addInspectionReportsItem(InspectionReportResponse inspectionReportsItem) {
    if (this.inspectionReports == null) {
      this.inspectionReports = new ArrayList<>();
    }
    this.inspectionReports.add(inspectionReportsItem);
    return this;
  }

   /**
   * Get inspectionReports
   * @return inspectionReports
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSPECTION_REPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InspectionReportResponse> getInspectionReports() {
    return inspectionReports;
  }


  @JsonProperty(JSON_PROPERTY_INSPECTION_REPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInspectionReports(List<InspectionReportResponse> inspectionReports) {
    this.inspectionReports = inspectionReports;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InspectionReportGet200ResponseValue inspectionReportGet200ResponseValue = (InspectionReportGet200ResponseValue) o;
    return Objects.equals(this.meta, inspectionReportGet200ResponseValue.meta) &&
        Objects.equals(this.inspectionReports, inspectionReportGet200ResponseValue.inspectionReports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, inspectionReports);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InspectionReportGet200ResponseValue {\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    inspectionReports: ").append(toIndentedString(inspectionReports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

