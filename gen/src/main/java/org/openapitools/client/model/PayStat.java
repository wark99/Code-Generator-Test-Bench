/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayStat
 */
@JsonPropertyOrder({
  PayStat.JSON_PROPERTY_NAME,
  PayStat.JSON_PROPERTY_TYPE,
  PayStat.JSON_PROPERTY_DESCRIPTION,
  PayStat.JSON_PROPERTY_RATE,
  PayStat.JSON_PROPERTY_UNITS,
  PayStat.JSON_PROPERTY_AMOUNT_CURRENT,
  PayStat.JSON_PROPERTY_AMOUNT_Y_T_D
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:37:23.431609925Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PayStat {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_RATE = "rate";
  private BigDecimal rate;

  public static final String JSON_PROPERTY_UNITS = "units";
  private BigDecimal units;

  public static final String JSON_PROPERTY_AMOUNT_CURRENT = "amountCurrent";
  private BigDecimal amountCurrent;

  public static final String JSON_PROPERTY_AMOUNT_Y_T_D = "amountYTD";
  private BigDecimal amountYTD;

  public PayStat() {
  }

  public PayStat name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The normalized category of the earnings with a number appended. The number is the will be the iterating number of the type&#39;s occurrence starting at one.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PayStat type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The categorization based on the earning line&#39;s description. Possible values: * \&quot;bereavement\&quot;  * \&quot;bonus\&quot;  * \&quot;commission\&quot;  * \&quot;holiday\&quot;  * \&quot;jury duty\&quot;  * \&quot;overtime\&quot;  * \&quot;pension\&quot;  * \&quot;pto\&quot;  * \&quot;regular\&quot;  * \&quot;sick\&quot;  * \&quot;tips\&quot;  * \&quot;unknown\&quot;  * \&quot;vacation\&quot;  * \&quot;reimbursement\&quot;  * \&quot;stock\&quot;  * \&quot;benefit\&quot;
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PayStat description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The earnings line&#39;s pay type description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PayStat rate(BigDecimal rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * The rate for the earning line paid out to the employee for the specified pay period.
   * @return rate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(BigDecimal rate) {
    this.rate = rate;
  }


  public PayStat units(BigDecimal units) {
    
    this.units = units;
    return this;
  }

   /**
   * The units for the earning line paid out to the employee for the specified pay period.
   * @return units
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnits() {
    return units;
  }


  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnits(BigDecimal units) {
    this.units = units;
  }


  public PayStat amountCurrent(BigDecimal amountCurrent) {
    
    this.amountCurrent = amountCurrent;
    return this;
  }

   /**
   * The amount for the earning line paid out to the employee for the specified pay period.
   * @return amountCurrent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmountCurrent() {
    return amountCurrent;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountCurrent(BigDecimal amountCurrent) {
    this.amountCurrent = amountCurrent;
  }


  public PayStat amountYTD(BigDecimal amountYTD) {
    
    this.amountYTD = amountYTD;
    return this;
  }

   /**
   * The amount for the earning line being paid out to the employee for the current pay year.
   * @return amountYTD
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmountYTD() {
    return amountYTD;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_Y_T_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountYTD(BigDecimal amountYTD) {
    this.amountYTD = amountYTD;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayStat payStat = (PayStat) o;
    return Objects.equals(this.name, payStat.name) &&
        Objects.equals(this.type, payStat.type) &&
        Objects.equals(this.description, payStat.description) &&
        Objects.equals(this.rate, payStat.rate) &&
        Objects.equals(this.units, payStat.units) &&
        Objects.equals(this.amountCurrent, payStat.amountCurrent) &&
        Objects.equals(this.amountYTD, payStat.amountYTD);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, description, rate, units, amountCurrent, amountYTD);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayStat {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    amountCurrent: ").append(toIndentedString(amountCurrent)).append("\n");
    sb.append("    amountYTD: ").append(toIndentedString(amountYTD)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

