/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DateOfExpiration;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MostRecentDelinquency
 */
@JsonPropertyOrder({
  MostRecentDelinquency.JSON_PROPERTY_ACCOUNT_RATING,
  MostRecentDelinquency.JSON_PROPERTY_AMOUNT,
  MostRecentDelinquency.JSON_PROPERTY_DATE,
  MostRecentDelinquency.JSON_PROPERTY_EARLIEST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MostRecentDelinquency {
  public static final String JSON_PROPERTY_ACCOUNT_RATING = "accountRating";
  private String accountRating;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_DATE = "date";
  private DateOfExpiration date;

  public static final String JSON_PROPERTY_EARLIEST = "earliest";
  private Boolean earliest;

  public MostRecentDelinquency() {
  }

  public MostRecentDelinquency accountRating(String accountRating) {
    
    this.accountRating = accountRating;
    return this;
  }

   /**
   * Get accountRating
   * @return accountRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountRating() {
    return accountRating;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountRating(String accountRating) {
    this.accountRating = accountRating;
  }


  public MostRecentDelinquency amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }


  public MostRecentDelinquency date(DateOfExpiration date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(DateOfExpiration date) {
    this.date = date;
  }


  public MostRecentDelinquency earliest(Boolean earliest) {
    
    this.earliest = earliest;
    return this;
  }

   /**
   * Get earliest
   * @return earliest
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EARLIEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEarliest() {
    return earliest;
  }


  @JsonProperty(JSON_PROPERTY_EARLIEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEarliest(Boolean earliest) {
    this.earliest = earliest;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MostRecentDelinquency mostRecentDelinquency = (MostRecentDelinquency) o;
    return Objects.equals(this.accountRating, mostRecentDelinquency.accountRating) &&
        Objects.equals(this.amount, mostRecentDelinquency.amount) &&
        Objects.equals(this.date, mostRecentDelinquency.date) &&
        Objects.equals(this.earliest, mostRecentDelinquency.earliest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountRating, amount, date, earliest);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MostRecentDelinquency {\n");
    sb.append("    accountRating: ").append(toIndentedString(accountRating)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    earliest: ").append(toIndentedString(earliest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

