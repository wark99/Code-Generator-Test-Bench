/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Details for investment account holdings
 */
@JsonPropertyOrder({
  CustomerAccountPosition.JSON_PROPERTY_ID,
  CustomerAccountPosition.JSON_PROPERTY_DESCRIPTION,
  CustomerAccountPosition.JSON_PROPERTY_SYMBOL,
  CustomerAccountPosition.JSON_PROPERTY_UNITS,
  CustomerAccountPosition.JSON_PROPERTY_CURRENT_PRICE,
  CustomerAccountPosition.JSON_PROPERTY_SECURITY_NAME,
  CustomerAccountPosition.JSON_PROPERTY_TRANSACTION_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_MARKET_VALUE,
  CustomerAccountPosition.JSON_PROPERTY_CHANGE_PERCENT,
  CustomerAccountPosition.JSON_PROPERTY_DAILY_CHANGE,
  CustomerAccountPosition.JSON_PROPERTY_COST_BASIS,
  CustomerAccountPosition.JSON_PROPERTY_HOLD_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_INV_SECURITY_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_STATUS,
  CustomerAccountPosition.JSON_PROPERTY_CURRENT_PRICE_DATE,
  CustomerAccountPosition.JSON_PROPERTY_SECURITY_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_MF_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_POS_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_TOTAL_G_L_DOLLAR,
  CustomerAccountPosition.JSON_PROPERTY_TOTAL_G_L_PERCENT,
  CustomerAccountPosition.JSON_PROPERTY_OPTION_STRIKE_PRICE,
  CustomerAccountPosition.JSON_PROPERTY_OPTION_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_OPTION_SHARES_PER_CONTRACT,
  CustomerAccountPosition.JSON_PROPERTY_OPTION_EXPIRE_DATE,
  CustomerAccountPosition.JSON_PROPERTY_FI_ASSET_CLASS,
  CustomerAccountPosition.JSON_PROPERTY_ASSET_CLASS,
  CustomerAccountPosition.JSON_PROPERTY_CURRENCY_RATE,
  CustomerAccountPosition.JSON_PROPERTY_SECURITY_ID,
  CustomerAccountPosition.JSON_PROPERTY_SECURITY_ID_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_COST_BASIS_PER_SHARE,
  CustomerAccountPosition.JSON_PROPERTY_SUB_ACCOUNT_TYPE,
  CustomerAccountPosition.JSON_PROPERTY_SECURITY_CURRENCY,
  CustomerAccountPosition.JSON_PROPERTY_TODAY_G_L_DOLLAR,
  CustomerAccountPosition.JSON_PROPERTY_TODAY_G_L_PERCENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:21:08.417587988Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CustomerAccountPosition {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_UNITS = "units";
  private BigDecimal units;

  public static final String JSON_PROPERTY_CURRENT_PRICE = "currentPrice";
  private BigDecimal currentPrice;

  public static final String JSON_PROPERTY_SECURITY_NAME = "securityName";
  private String securityName;

  public static final String JSON_PROPERTY_TRANSACTION_TYPE = "transactionType";
  private String transactionType;

  public static final String JSON_PROPERTY_MARKET_VALUE = "marketValue";
  private BigDecimal marketValue;

  public static final String JSON_PROPERTY_CHANGE_PERCENT = "changePercent";
  private BigDecimal changePercent;

  public static final String JSON_PROPERTY_DAILY_CHANGE = "dailyChange";
  private BigDecimal dailyChange;

  public static final String JSON_PROPERTY_COST_BASIS = "costBasis";
  private BigDecimal costBasis;

  public static final String JSON_PROPERTY_HOLD_TYPE = "holdType";
  private String holdType;

  public static final String JSON_PROPERTY_INV_SECURITY_TYPE = "invSecurityType";
  private String invSecurityType;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_CURRENT_PRICE_DATE = "currentPriceDate";
  private Long currentPriceDate;

  public static final String JSON_PROPERTY_SECURITY_TYPE = "securityType";
  private String securityType;

  public static final String JSON_PROPERTY_MF_TYPE = "mfType";
  private String mfType;

  public static final String JSON_PROPERTY_POS_TYPE = "posType";
  private String posType;

  public static final String JSON_PROPERTY_TOTAL_G_L_DOLLAR = "totalGLDollar";
  private BigDecimal totalGLDollar;

  public static final String JSON_PROPERTY_TOTAL_G_L_PERCENT = "totalGLPercent";
  private BigDecimal totalGLPercent;

  public static final String JSON_PROPERTY_OPTION_STRIKE_PRICE = "optionStrikePrice";
  private BigDecimal optionStrikePrice;

  public static final String JSON_PROPERTY_OPTION_TYPE = "optionType";
  private String optionType;

  public static final String JSON_PROPERTY_OPTION_SHARES_PER_CONTRACT = "optionSharesPerContract";
  private BigDecimal optionSharesPerContract;

  public static final String JSON_PROPERTY_OPTION_EXPIRE_DATE = "optionExpireDate";
  private LocalDate optionExpireDate;

  public static final String JSON_PROPERTY_FI_ASSET_CLASS = "fiAssetClass";
  private String fiAssetClass;

  public static final String JSON_PROPERTY_ASSET_CLASS = "assetClass";
  private String assetClass;

  public static final String JSON_PROPERTY_CURRENCY_RATE = "currencyRate";
  private BigDecimal currencyRate;

  public static final String JSON_PROPERTY_SECURITY_ID = "securityId";
  private String securityId;

  public static final String JSON_PROPERTY_SECURITY_ID_TYPE = "securityIdType";
  private String securityIdType;

  public static final String JSON_PROPERTY_COST_BASIS_PER_SHARE = "costBasisPerShare";
  private BigDecimal costBasisPerShare;

  public static final String JSON_PROPERTY_SUB_ACCOUNT_TYPE = "subAccountType";
  private String subAccountType;

  public static final String JSON_PROPERTY_SECURITY_CURRENCY = "securityCurrency";
  private String securityCurrency;

  public static final String JSON_PROPERTY_TODAY_G_L_DOLLAR = "todayGLDollar";
  private BigDecimal todayGLDollar;

  public static final String JSON_PROPERTY_TODAY_G_L_PERCENT = "todayGLPercent";
  private BigDecimal todayGLPercent;

  public CustomerAccountPosition() {
  }

  public CustomerAccountPosition id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the investment position
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public CustomerAccountPosition description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the holding
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CustomerAccountPosition symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * The investment position&#39;s market ticker symbol
   * @return symbol
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public CustomerAccountPosition units(BigDecimal units) {
    
    this.units = units;
    return this;
  }

   /**
   * The number of units of the holding
   * @return units
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnits() {
    return units;
  }


  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnits(BigDecimal units) {
    this.units = units;
  }


  public CustomerAccountPosition currentPrice(BigDecimal currentPrice) {
    
    this.currentPrice = currentPrice;
    return this;
  }

   /**
   * The current price of the investment holding
   * @return currentPrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentPrice() {
    return currentPrice;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentPrice(BigDecimal currentPrice) {
    this.currentPrice = currentPrice;
  }


  public CustomerAccountPosition securityName(String securityName) {
    
    this.securityName = securityName;
    return this;
  }

   /**
   * The security name for the investment holding
   * @return securityName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityName() {
    return securityName;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityName(String securityName) {
    this.securityName = securityName;
  }


  public CustomerAccountPosition transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * The transaction type of the holding, such as cash, margin, and more
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionType() {
    return transactionType;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }


  public CustomerAccountPosition marketValue(BigDecimal marketValue) {
    
    this.marketValue = marketValue;
    return this;
  }

   /**
   * Market value of an investment position at the time of retrieval
   * @return marketValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMarketValue() {
    return marketValue;
  }


  @JsonProperty(JSON_PROPERTY_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketValue(BigDecimal marketValue) {
    this.marketValue = marketValue;
  }


  public CustomerAccountPosition changePercent(BigDecimal changePercent) {
    
    this.changePercent = changePercent;
    return this;
  }

   /**
   * The percent change in value since the previous day
   * @return changePercent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getChangePercent() {
    return changePercent;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangePercent(BigDecimal changePercent) {
    this.changePercent = changePercent;
  }


  public CustomerAccountPosition dailyChange(BigDecimal dailyChange) {
    
    this.dailyChange = dailyChange;
    return this;
  }

   /**
   * The value amount change since the previous day
   * @return dailyChange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDailyChange() {
    return dailyChange;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailyChange(BigDecimal dailyChange) {
    this.dailyChange = dailyChange;
  }


  public CustomerAccountPosition costBasis(BigDecimal costBasis) {
    
    this.costBasis = costBasis;
    return this;
  }

   /**
   * The total cost of acquiring the security
   * @return costBasis
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COST_BASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCostBasis() {
    return costBasis;
  }


  @JsonProperty(JSON_PROPERTY_COST_BASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
  }


  public CustomerAccountPosition holdType(String holdType) {
    
    this.holdType = holdType;
    return this;
  }

   /**
   * The type of the holding
   * @return holdType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOLD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHoldType() {
    return holdType;
  }


  @JsonProperty(JSON_PROPERTY_HOLD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHoldType(String holdType) {
    this.holdType = holdType;
  }


  public CustomerAccountPosition invSecurityType(String invSecurityType) {
    
    this.invSecurityType = invSecurityType;
    return this;
  }

   /**
   * The security type for the investment holding
   * @return invSecurityType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INV_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvSecurityType() {
    return invSecurityType;
  }


  @JsonProperty(JSON_PROPERTY_INV_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvSecurityType(String invSecurityType) {
    this.invSecurityType = invSecurityType;
  }


  public CustomerAccountPosition status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the holding
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public CustomerAccountPosition currentPriceDate(Long currentPriceDate) {
    
    this.currentPriceDate = currentPriceDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return currentPriceDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_PRICE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCurrentPriceDate() {
    return currentPriceDate;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_PRICE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentPriceDate(Long currentPriceDate) {
    this.currentPriceDate = currentPriceDate;
  }


  public CustomerAccountPosition securityType(String securityType) {
    
    this.securityType = securityType;
    return this;
  }

   /**
   * Type of security for the investment position
   * @return securityType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityType() {
    return securityType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityType(String securityType) {
    this.securityType = securityType;
  }


  public CustomerAccountPosition mfType(String mfType) {
    
    this.mfType = mfType;
    return this;
  }

   /**
   * Type of mutual fund, such as open ended
   * @return mfType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MF_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMfType() {
    return mfType;
  }


  @JsonProperty(JSON_PROPERTY_MF_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMfType(String mfType) {
    this.mfType = mfType;
  }


  public CustomerAccountPosition posType(String posType) {
    
    this.posType = posType;
    return this;
  }

   /**
   * Fund type assigned by the FI (long or short)
   * @return posType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPosType() {
    return posType;
  }


  @JsonProperty(JSON_PROPERTY_POS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosType(String posType) {
    this.posType = posType;
  }


  public CustomerAccountPosition totalGLDollar(BigDecimal totalGLDollar) {
    
    this.totalGLDollar = totalGLDollar;
    return this;
  }

   /**
   * Total gain and loss of the position at the time of aggregation in dollars
   * @return totalGLDollar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_G_L_DOLLAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalGLDollar() {
    return totalGLDollar;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_G_L_DOLLAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalGLDollar(BigDecimal totalGLDollar) {
    this.totalGLDollar = totalGLDollar;
  }


  public CustomerAccountPosition totalGLPercent(BigDecimal totalGLPercent) {
    
    this.totalGLPercent = totalGLPercent;
    return this;
  }

   /**
   * Total gain and loss of the position at the time of aggregation in percentage
   * @return totalGLPercent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_G_L_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalGLPercent() {
    return totalGLPercent;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_G_L_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalGLPercent(BigDecimal totalGLPercent) {
    this.totalGLPercent = totalGLPercent;
  }


  public CustomerAccountPosition optionStrikePrice(BigDecimal optionStrikePrice) {
    
    this.optionStrikePrice = optionStrikePrice;
    return this;
  }

   /**
   * The strike price of the option contract
   * @return optionStrikePrice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOptionStrikePrice() {
    return optionStrikePrice;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_STRIKE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionStrikePrice(BigDecimal optionStrikePrice) {
    this.optionStrikePrice = optionStrikePrice;
  }


  public CustomerAccountPosition optionType(String optionType) {
    
    this.optionType = optionType;
    return this;
  }

   /**
   * The type of option contract (PUT or CALL)
   * @return optionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOptionType() {
    return optionType;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionType(String optionType) {
    this.optionType = optionType;
  }


  public CustomerAccountPosition optionSharesPerContract(BigDecimal optionSharesPerContract) {
    
    this.optionSharesPerContract = optionSharesPerContract;
    return this;
  }

   /**
   * The number of shares per option contract
   * @return optionSharesPerContract
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOptionSharesPerContract() {
    return optionSharesPerContract;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_SHARES_PER_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionSharesPerContract(BigDecimal optionSharesPerContract) {
    this.optionSharesPerContract = optionSharesPerContract;
  }


  public CustomerAccountPosition optionExpireDate(LocalDate optionExpireDate) {
    
    this.optionExpireDate = optionExpireDate;
    return this;
  }

   /**
   * Expiration date of option
   * @return optionExpireDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getOptionExpireDate() {
    return optionExpireDate;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionExpireDate(LocalDate optionExpireDate) {
    this.optionExpireDate = optionExpireDate;
  }


  public CustomerAccountPosition fiAssetClass(String fiAssetClass) {
    
    this.fiAssetClass = fiAssetClass;
    return this;
  }

   /**
   * Financial Institution (FI) defined asset class (COMMON STOCK, COMNEQTY, EQUITY/STOCK, CMA-ISA, CONVERTIBLE PREFERREDS, CORPORATE BONDS, OTHER MONEY FUNDS, ALLOCATION FUNDS, CMA-TAXABLE, FOREIGNEQUITYADRS, COMMONSTOCK, PREFERRED STOCKS, STABLE VALUE, FOREIGN EQUITY ADRS)
   * @return fiAssetClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FI_ASSET_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFiAssetClass() {
    return fiAssetClass;
  }


  @JsonProperty(JSON_PROPERTY_FI_ASSET_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiAssetClass(String fiAssetClass) {
    this.fiAssetClass = fiAssetClass;
  }


  public CustomerAccountPosition assetClass(String assetClass) {
    
    this.assetClass = assetClass;
    return this;
  }

   /**
   * An asset class is a grouping of comparable financial securities. These include equities (stocks), fixed income (bonds), and cash equivalent or money market instruments. (DOMESTICBOND, LARGESTOCK, INTLSTOCK, MONEYMRKT, OTHER)
   * @return assetClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssetClass() {
    return assetClass;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetClass(String assetClass) {
    this.assetClass = assetClass;
  }


  public CustomerAccountPosition currencyRate(BigDecimal currencyRate) {
    
    this.currencyRate = currencyRate;
    return this;
  }

   /**
   * Currency rate, ratio of currency to original currency
   * @return currencyRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrencyRate() {
    return currencyRate;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyRate(BigDecimal currencyRate) {
    this.currencyRate = currencyRate;
  }


  public CustomerAccountPosition securityId(String securityId) {
    
    this.securityId = securityId;
    return this;
  }

   /**
   * The security ID of the transaction
   * @return securityId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityId() {
    return securityId;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityId(String securityId) {
    this.securityId = securityId;
  }


  public CustomerAccountPosition securityIdType(String securityIdType) {
    
    this.securityIdType = securityIdType;
    return this;
  }

   /**
   * The security type. This field is related to the &#x60;securityId&#x60; field. Possible values: * \&quot;CUSIP\&quot;  * \&quot;ISIN\&quot;  * \&quot;SEDOL\&quot;  * \&quot;SICC\&quot;  * \&quot;VALOR\&quot;  * \&quot;WKN\&quot;
   * @return securityIdType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityIdType() {
    return securityIdType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityIdType(String securityIdType) {
    this.securityIdType = securityIdType;
  }


  public CustomerAccountPosition costBasisPerShare(BigDecimal costBasisPerShare) {
    
    this.costBasisPerShare = costBasisPerShare;
    return this;
  }

   /**
   * The per share cost of acquiring the security
   * @return costBasisPerShare
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COST_BASIS_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCostBasisPerShare() {
    return costBasisPerShare;
  }


  @JsonProperty(JSON_PROPERTY_COST_BASIS_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostBasisPerShare(BigDecimal costBasisPerShare) {
    this.costBasisPerShare = costBasisPerShare;
  }


  public CustomerAccountPosition subAccountType(String subAccountType) {
    
    this.subAccountType = subAccountType;
    return this;
  }

   /**
   * The subaccount&#39;s type, such as cash
   * @return subAccountType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubAccountType() {
    return subAccountType;
  }


  @JsonProperty(JSON_PROPERTY_SUB_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubAccountType(String subAccountType) {
    this.subAccountType = subAccountType;
  }


  public CustomerAccountPosition securityCurrency(String securityCurrency) {
    
    this.securityCurrency = securityCurrency;
    return this;
  }

   /**
   * Symbol for the currency that the account is being converted into
   * @return securityCurrency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityCurrency() {
    return securityCurrency;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityCurrency(String securityCurrency) {
    this.securityCurrency = securityCurrency;
  }


  public CustomerAccountPosition todayGLDollar(BigDecimal todayGLDollar) {
    
    this.todayGLDollar = todayGLDollar;
    return this;
  }

   /**
   * The current day&#39;s gain and loss of the position at the time of aggregation in dollars
   * @return todayGLDollar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TODAY_G_L_DOLLAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTodayGLDollar() {
    return todayGLDollar;
  }


  @JsonProperty(JSON_PROPERTY_TODAY_G_L_DOLLAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTodayGLDollar(BigDecimal todayGLDollar) {
    this.todayGLDollar = todayGLDollar;
  }


  public CustomerAccountPosition todayGLPercent(BigDecimal todayGLPercent) {
    
    this.todayGLPercent = todayGLPercent;
    return this;
  }

   /**
   * The current day&#39;s gain and loss of the position at the time of aggregation in percentage
   * @return todayGLPercent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TODAY_G_L_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTodayGLPercent() {
    return todayGLPercent;
  }


  @JsonProperty(JSON_PROPERTY_TODAY_G_L_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTodayGLPercent(BigDecimal todayGLPercent) {
    this.todayGLPercent = todayGLPercent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAccountPosition customerAccountPosition = (CustomerAccountPosition) o;
    return Objects.equals(this.id, customerAccountPosition.id) &&
        Objects.equals(this.description, customerAccountPosition.description) &&
        Objects.equals(this.symbol, customerAccountPosition.symbol) &&
        Objects.equals(this.units, customerAccountPosition.units) &&
        Objects.equals(this.currentPrice, customerAccountPosition.currentPrice) &&
        Objects.equals(this.securityName, customerAccountPosition.securityName) &&
        Objects.equals(this.transactionType, customerAccountPosition.transactionType) &&
        Objects.equals(this.marketValue, customerAccountPosition.marketValue) &&
        Objects.equals(this.changePercent, customerAccountPosition.changePercent) &&
        Objects.equals(this.dailyChange, customerAccountPosition.dailyChange) &&
        Objects.equals(this.costBasis, customerAccountPosition.costBasis) &&
        Objects.equals(this.holdType, customerAccountPosition.holdType) &&
        Objects.equals(this.invSecurityType, customerAccountPosition.invSecurityType) &&
        Objects.equals(this.status, customerAccountPosition.status) &&
        Objects.equals(this.currentPriceDate, customerAccountPosition.currentPriceDate) &&
        Objects.equals(this.securityType, customerAccountPosition.securityType) &&
        Objects.equals(this.mfType, customerAccountPosition.mfType) &&
        Objects.equals(this.posType, customerAccountPosition.posType) &&
        Objects.equals(this.totalGLDollar, customerAccountPosition.totalGLDollar) &&
        Objects.equals(this.totalGLPercent, customerAccountPosition.totalGLPercent) &&
        Objects.equals(this.optionStrikePrice, customerAccountPosition.optionStrikePrice) &&
        Objects.equals(this.optionType, customerAccountPosition.optionType) &&
        Objects.equals(this.optionSharesPerContract, customerAccountPosition.optionSharesPerContract) &&
        Objects.equals(this.optionExpireDate, customerAccountPosition.optionExpireDate) &&
        Objects.equals(this.fiAssetClass, customerAccountPosition.fiAssetClass) &&
        Objects.equals(this.assetClass, customerAccountPosition.assetClass) &&
        Objects.equals(this.currencyRate, customerAccountPosition.currencyRate) &&
        Objects.equals(this.securityId, customerAccountPosition.securityId) &&
        Objects.equals(this.securityIdType, customerAccountPosition.securityIdType) &&
        Objects.equals(this.costBasisPerShare, customerAccountPosition.costBasisPerShare) &&
        Objects.equals(this.subAccountType, customerAccountPosition.subAccountType) &&
        Objects.equals(this.securityCurrency, customerAccountPosition.securityCurrency) &&
        Objects.equals(this.todayGLDollar, customerAccountPosition.todayGLDollar) &&
        Objects.equals(this.todayGLPercent, customerAccountPosition.todayGLPercent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, symbol, units, currentPrice, securityName, transactionType, marketValue, changePercent, dailyChange, costBasis, holdType, invSecurityType, status, currentPriceDate, securityType, mfType, posType, totalGLDollar, totalGLPercent, optionStrikePrice, optionType, optionSharesPerContract, optionExpireDate, fiAssetClass, assetClass, currencyRate, securityId, securityIdType, costBasisPerShare, subAccountType, securityCurrency, todayGLDollar, todayGLPercent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAccountPosition {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    currentPrice: ").append(toIndentedString(currentPrice)).append("\n");
    sb.append("    securityName: ").append(toIndentedString(securityName)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    marketValue: ").append(toIndentedString(marketValue)).append("\n");
    sb.append("    changePercent: ").append(toIndentedString(changePercent)).append("\n");
    sb.append("    dailyChange: ").append(toIndentedString(dailyChange)).append("\n");
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    holdType: ").append(toIndentedString(holdType)).append("\n");
    sb.append("    invSecurityType: ").append(toIndentedString(invSecurityType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currentPriceDate: ").append(toIndentedString(currentPriceDate)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("    mfType: ").append(toIndentedString(mfType)).append("\n");
    sb.append("    posType: ").append(toIndentedString(posType)).append("\n");
    sb.append("    totalGLDollar: ").append(toIndentedString(totalGLDollar)).append("\n");
    sb.append("    totalGLPercent: ").append(toIndentedString(totalGLPercent)).append("\n");
    sb.append("    optionStrikePrice: ").append(toIndentedString(optionStrikePrice)).append("\n");
    sb.append("    optionType: ").append(toIndentedString(optionType)).append("\n");
    sb.append("    optionSharesPerContract: ").append(toIndentedString(optionSharesPerContract)).append("\n");
    sb.append("    optionExpireDate: ").append(toIndentedString(optionExpireDate)).append("\n");
    sb.append("    fiAssetClass: ").append(toIndentedString(fiAssetClass)).append("\n");
    sb.append("    assetClass: ").append(toIndentedString(assetClass)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    securityId: ").append(toIndentedString(securityId)).append("\n");
    sb.append("    securityIdType: ").append(toIndentedString(securityIdType)).append("\n");
    sb.append("    costBasisPerShare: ").append(toIndentedString(costBasisPerShare)).append("\n");
    sb.append("    subAccountType: ").append(toIndentedString(subAccountType)).append("\n");
    sb.append("    securityCurrency: ").append(toIndentedString(securityCurrency)).append("\n");
    sb.append("    todayGLDollar: ").append(toIndentedString(todayGLDollar)).append("\n");
    sb.append("    todayGLPercent: ").append(toIndentedString(todayGLPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

