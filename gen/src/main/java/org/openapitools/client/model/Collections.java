/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.MostRecentPayment;
import org.openapitools.client.model.Original2;
import org.openapitools.client.model.Remarks2;
import org.openapitools.client.model.Subscriber3;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Collections
 */
@JsonPropertyOrder({
  Collections.JSON_PROPERTY_ACCOUNT,
  Collections.JSON_PROPERTY_ACCOUNT_NUMBER,
  Collections.JSON_PROPERTY_ACCOUNT_RATING,
  Collections.JSON_PROPERTY_CLOSED_INDICATOR,
  Collections.JSON_PROPERTY_CURRENT_BALANCE,
  Collections.JSON_PROPERTY_DATE_CLOSED,
  Collections.JSON_PROPERTY_DATE_EFFECTIVE,
  Collections.JSON_PROPERTY_DATE_FIRST_DELINQUENT,
  Collections.JSON_PROPERTY_DATE_OPENED,
  Collections.JSON_PROPERTY_DATE_PAID_OUT,
  Collections.JSON_PROPERTY_ECOADESIGNATOR,
  Collections.JSON_PROPERTY_MOST_RECENT_PAYMENT,
  Collections.JSON_PROPERTY_ORIGINAL,
  Collections.JSON_PROPERTY_PAST_DUE,
  Collections.JSON_PROPERTY_PORTFOLIO_TYPE,
  Collections.JSON_PROPERTY_REMARKS,
  Collections.JSON_PROPERTY_REPORTED_DATE,
  Collections.JSON_PROPERTY_SUBSCRIBER,
  Collections.JSON_PROPERTY_SUPPRESSED_DATE,
  Collections.JSON_PROPERTY_SUPPRESSION_INDICATOR_FLAG,
  Collections.JSON_PROPERTY_UPDATE_METHOD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Collections {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private Account account;

  public static final String JSON_PROPERTY_ACCOUNT_NUMBER = "accountNumber";
  private String accountNumber;

  public static final String JSON_PROPERTY_ACCOUNT_RATING = "accountRating";
  private String accountRating;

  public static final String JSON_PROPERTY_CLOSED_INDICATOR = "closedIndicator";
  private String closedIndicator;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private String currentBalance;

  public static final String JSON_PROPERTY_DATE_CLOSED = "dateClosed";
  private DateOfExpiration dateClosed;

  public static final String JSON_PROPERTY_DATE_EFFECTIVE = "dateEffective";
  private DateOfExpiration dateEffective;

  public static final String JSON_PROPERTY_DATE_FIRST_DELINQUENT = "dateFirstDelinquent";
  private DateOfExpiration dateFirstDelinquent;

  public static final String JSON_PROPERTY_DATE_OPENED = "dateOpened";
  private DateOfExpiration dateOpened;

  public static final String JSON_PROPERTY_DATE_PAID_OUT = "datePaidOut";
  private DateOfExpiration datePaidOut;

  public static final String JSON_PROPERTY_ECOADESIGNATOR = "ecoadesignator";
  private String ecoadesignator;

  public static final String JSON_PROPERTY_MOST_RECENT_PAYMENT = "mostRecentPayment";
  private MostRecentPayment mostRecentPayment;

  public static final String JSON_PROPERTY_ORIGINAL = "original";
  private Original2 original;

  public static final String JSON_PROPERTY_PAST_DUE = "pastDue";
  private String pastDue;

  public static final String JSON_PROPERTY_PORTFOLIO_TYPE = "portfolioType";
  private String portfolioType;

  public static final String JSON_PROPERTY_REMARKS = "remarks";
  private List<Remarks2> remarks;

  public static final String JSON_PROPERTY_REPORTED_DATE = "reportedDate";
  private DateOfExpiration reportedDate;

  public static final String JSON_PROPERTY_SUBSCRIBER = "subscriber";
  private Subscriber3 subscriber;

  public static final String JSON_PROPERTY_SUPPRESSED_DATE = "suppressedDate";
  private DateOfExpiration suppressedDate;

  public static final String JSON_PROPERTY_SUPPRESSION_INDICATOR_FLAG = "suppressionIndicatorFlag";
  private String suppressionIndicatorFlag;

  public static final String JSON_PROPERTY_UPDATE_METHOD = "updateMethod";
  private String updateMethod;

  public Collections() {
  }

  public Collections account(Account account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Account getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(Account account) {
    this.account = account;
  }


  public Collections accountNumber(String accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountNumber() {
    return accountNumber;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public Collections accountRating(String accountRating) {
    
    this.accountRating = accountRating;
    return this;
  }

   /**
   * Get accountRating
   * @return accountRating
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountRating() {
    return accountRating;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountRating(String accountRating) {
    this.accountRating = accountRating;
  }


  public Collections closedIndicator(String closedIndicator) {
    
    this.closedIndicator = closedIndicator;
    return this;
  }

   /**
   * Get closedIndicator
   * @return closedIndicator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLOSED_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClosedIndicator() {
    return closedIndicator;
  }


  @JsonProperty(JSON_PROPERTY_CLOSED_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClosedIndicator(String closedIndicator) {
    this.closedIndicator = closedIndicator;
  }


  public Collections currentBalance(String currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(String currentBalance) {
    this.currentBalance = currentBalance;
  }


  public Collections dateClosed(DateOfExpiration dateClosed) {
    
    this.dateClosed = dateClosed;
    return this;
  }

   /**
   * Get dateClosed
   * @return dateClosed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_CLOSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateClosed() {
    return dateClosed;
  }


  @JsonProperty(JSON_PROPERTY_DATE_CLOSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateClosed(DateOfExpiration dateClosed) {
    this.dateClosed = dateClosed;
  }


  public Collections dateEffective(DateOfExpiration dateEffective) {
    
    this.dateEffective = dateEffective;
    return this;
  }

   /**
   * Get dateEffective
   * @return dateEffective
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateEffective() {
    return dateEffective;
  }


  @JsonProperty(JSON_PROPERTY_DATE_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateEffective(DateOfExpiration dateEffective) {
    this.dateEffective = dateEffective;
  }


  public Collections dateFirstDelinquent(DateOfExpiration dateFirstDelinquent) {
    
    this.dateFirstDelinquent = dateFirstDelinquent;
    return this;
  }

   /**
   * Get dateFirstDelinquent
   * @return dateFirstDelinquent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FIRST_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateFirstDelinquent() {
    return dateFirstDelinquent;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FIRST_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFirstDelinquent(DateOfExpiration dateFirstDelinquent) {
    this.dateFirstDelinquent = dateFirstDelinquent;
  }


  public Collections dateOpened(DateOfExpiration dateOpened) {
    
    this.dateOpened = dateOpened;
    return this;
  }

   /**
   * Get dateOpened
   * @return dateOpened
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OPENED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateOpened() {
    return dateOpened;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OPENED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOpened(DateOfExpiration dateOpened) {
    this.dateOpened = dateOpened;
  }


  public Collections datePaidOut(DateOfExpiration datePaidOut) {
    
    this.datePaidOut = datePaidOut;
    return this;
  }

   /**
   * Get datePaidOut
   * @return datePaidOut
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_PAID_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDatePaidOut() {
    return datePaidOut;
  }


  @JsonProperty(JSON_PROPERTY_DATE_PAID_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatePaidOut(DateOfExpiration datePaidOut) {
    this.datePaidOut = datePaidOut;
  }


  public Collections ecoadesignator(String ecoadesignator) {
    
    this.ecoadesignator = ecoadesignator;
    return this;
  }

   /**
   * Get ecoadesignator
   * @return ecoadesignator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECOADESIGNATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEcoadesignator() {
    return ecoadesignator;
  }


  @JsonProperty(JSON_PROPERTY_ECOADESIGNATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEcoadesignator(String ecoadesignator) {
    this.ecoadesignator = ecoadesignator;
  }


  public Collections mostRecentPayment(MostRecentPayment mostRecentPayment) {
    
    this.mostRecentPayment = mostRecentPayment;
    return this;
  }

   /**
   * Get mostRecentPayment
   * @return mostRecentPayment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MostRecentPayment getMostRecentPayment() {
    return mostRecentPayment;
  }


  @JsonProperty(JSON_PROPERTY_MOST_RECENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMostRecentPayment(MostRecentPayment mostRecentPayment) {
    this.mostRecentPayment = mostRecentPayment;
  }


  public Collections original(Original2 original) {
    
    this.original = original;
    return this;
  }

   /**
   * Get original
   * @return original
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Original2 getOriginal() {
    return original;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginal(Original2 original) {
    this.original = original;
  }


  public Collections pastDue(String pastDue) {
    
    this.pastDue = pastDue;
    return this;
  }

   /**
   * Get pastDue
   * @return pastDue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPastDue() {
    return pastDue;
  }


  @JsonProperty(JSON_PROPERTY_PAST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPastDue(String pastDue) {
    this.pastDue = pastDue;
  }


  public Collections portfolioType(String portfolioType) {
    
    this.portfolioType = portfolioType;
    return this;
  }

   /**
   * Get portfolioType
   * @return portfolioType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortfolioType() {
    return portfolioType;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortfolioType(String portfolioType) {
    this.portfolioType = portfolioType;
  }


  public Collections remarks(List<Remarks2> remarks) {
    
    this.remarks = remarks;
    return this;
  }

  public Collections addRemarksItem(Remarks2 remarksItem) {
    if (this.remarks == null) {
      this.remarks = new ArrayList<>();
    }
    this.remarks.add(remarksItem);
    return this;
  }

   /**
   * Get remarks
   * @return remarks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Remarks2> getRemarks() {
    return remarks;
  }


  @JsonProperty(JSON_PROPERTY_REMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemarks(List<Remarks2> remarks) {
    this.remarks = remarks;
  }


  public Collections reportedDate(DateOfExpiration reportedDate) {
    
    this.reportedDate = reportedDate;
    return this;
  }

   /**
   * Get reportedDate
   * @return reportedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getReportedDate() {
    return reportedDate;
  }


  @JsonProperty(JSON_PROPERTY_REPORTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportedDate(DateOfExpiration reportedDate) {
    this.reportedDate = reportedDate;
  }


  public Collections subscriber(Subscriber3 subscriber) {
    
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subscriber3 getSubscriber() {
    return subscriber;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriber(Subscriber3 subscriber) {
    this.subscriber = subscriber;
  }


  public Collections suppressedDate(DateOfExpiration suppressedDate) {
    
    this.suppressedDate = suppressedDate;
    return this;
  }

   /**
   * Get suppressedDate
   * @return suppressedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPRESSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getSuppressedDate() {
    return suppressedDate;
  }


  @JsonProperty(JSON_PROPERTY_SUPPRESSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuppressedDate(DateOfExpiration suppressedDate) {
    this.suppressedDate = suppressedDate;
  }


  public Collections suppressionIndicatorFlag(String suppressionIndicatorFlag) {
    
    this.suppressionIndicatorFlag = suppressionIndicatorFlag;
    return this;
  }

   /**
   * Get suppressionIndicatorFlag
   * @return suppressionIndicatorFlag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPRESSION_INDICATOR_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuppressionIndicatorFlag() {
    return suppressionIndicatorFlag;
  }


  @JsonProperty(JSON_PROPERTY_SUPPRESSION_INDICATOR_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuppressionIndicatorFlag(String suppressionIndicatorFlag) {
    this.suppressionIndicatorFlag = suppressionIndicatorFlag;
  }


  public Collections updateMethod(String updateMethod) {
    
    this.updateMethod = updateMethod;
    return this;
  }

   /**
   * Get updateMethod
   * @return updateMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateMethod() {
    return updateMethod;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateMethod(String updateMethod) {
    this.updateMethod = updateMethod;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Collections collections = (Collections) o;
    return Objects.equals(this.account, collections.account) &&
        Objects.equals(this.accountNumber, collections.accountNumber) &&
        Objects.equals(this.accountRating, collections.accountRating) &&
        Objects.equals(this.closedIndicator, collections.closedIndicator) &&
        Objects.equals(this.currentBalance, collections.currentBalance) &&
        Objects.equals(this.dateClosed, collections.dateClosed) &&
        Objects.equals(this.dateEffective, collections.dateEffective) &&
        Objects.equals(this.dateFirstDelinquent, collections.dateFirstDelinquent) &&
        Objects.equals(this.dateOpened, collections.dateOpened) &&
        Objects.equals(this.datePaidOut, collections.datePaidOut) &&
        Objects.equals(this.ecoadesignator, collections.ecoadesignator) &&
        Objects.equals(this.mostRecentPayment, collections.mostRecentPayment) &&
        Objects.equals(this.original, collections.original) &&
        Objects.equals(this.pastDue, collections.pastDue) &&
        Objects.equals(this.portfolioType, collections.portfolioType) &&
        Objects.equals(this.remarks, collections.remarks) &&
        Objects.equals(this.reportedDate, collections.reportedDate) &&
        Objects.equals(this.subscriber, collections.subscriber) &&
        Objects.equals(this.suppressedDate, collections.suppressedDate) &&
        Objects.equals(this.suppressionIndicatorFlag, collections.suppressionIndicatorFlag) &&
        Objects.equals(this.updateMethod, collections.updateMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, accountNumber, accountRating, closedIndicator, currentBalance, dateClosed, dateEffective, dateFirstDelinquent, dateOpened, datePaidOut, ecoadesignator, mostRecentPayment, original, pastDue, portfolioType, remarks, reportedDate, subscriber, suppressedDate, suppressionIndicatorFlag, updateMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Collections {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountRating: ").append(toIndentedString(accountRating)).append("\n");
    sb.append("    closedIndicator: ").append(toIndentedString(closedIndicator)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    dateClosed: ").append(toIndentedString(dateClosed)).append("\n");
    sb.append("    dateEffective: ").append(toIndentedString(dateEffective)).append("\n");
    sb.append("    dateFirstDelinquent: ").append(toIndentedString(dateFirstDelinquent)).append("\n");
    sb.append("    dateOpened: ").append(toIndentedString(dateOpened)).append("\n");
    sb.append("    datePaidOut: ").append(toIndentedString(datePaidOut)).append("\n");
    sb.append("    ecoadesignator: ").append(toIndentedString(ecoadesignator)).append("\n");
    sb.append("    mostRecentPayment: ").append(toIndentedString(mostRecentPayment)).append("\n");
    sb.append("    original: ").append(toIndentedString(original)).append("\n");
    sb.append("    pastDue: ").append(toIndentedString(pastDue)).append("\n");
    sb.append("    portfolioType: ").append(toIndentedString(portfolioType)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    reportedDate: ").append(toIndentedString(reportedDate)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("    suppressedDate: ").append(toIndentedString(suppressedDate)).append("\n");
    sb.append("    suppressionIndicatorFlag: ").append(toIndentedString(suppressionIndicatorFlag)).append("\n");
    sb.append("    updateMethod: ").append(toIndentedString(updateMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

