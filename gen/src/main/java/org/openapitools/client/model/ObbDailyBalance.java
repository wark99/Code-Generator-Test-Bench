/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ObbDailyBalance
 */
@JsonPropertyOrder({
  ObbDailyBalance.JSON_PROPERTY_DATE,
  ObbDailyBalance.JSON_PROPERTY_DAY_OF_WEEK,
  ObbDailyBalance.JSON_PROPERTY_ENDING_BALANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:57:35.632313798Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ObbDailyBalance {
  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_DAY_OF_WEEK = "dayOfWeek";
  private String dayOfWeek;

  public static final String JSON_PROPERTY_ENDING_BALANCE = "endingBalance";
  private BigDecimal endingBalance;

  public ObbDailyBalance() {
  }

  public ObbDailyBalance date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Date of balance information
   * @return date
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(String date) {
    this.date = date;
  }


  public ObbDailyBalance dayOfWeek(String dayOfWeek) {
    
    this.dayOfWeek = dayOfWeek;
    return this;
  }

   /**
   * Day of the week for which balance information available
   * @return dayOfWeek
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDayOfWeek() {
    return dayOfWeek;
  }


  @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDayOfWeek(String dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }


  public ObbDailyBalance endingBalance(BigDecimal endingBalance) {
    
    this.endingBalance = endingBalance;
    return this;
  }

   /**
   * End of day balance
   * @return endingBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getEndingBalance() {
    return endingBalance;
  }


  @JsonProperty(JSON_PROPERTY_ENDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndingBalance(BigDecimal endingBalance) {
    this.endingBalance = endingBalance;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObbDailyBalance obbDailyBalance = (ObbDailyBalance) o;
    return Objects.equals(this.date, obbDailyBalance.date) &&
        Objects.equals(this.dayOfWeek, obbDailyBalance.dayOfWeek) &&
        Objects.equals(this.endingBalance, obbDailyBalance.endingBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, dayOfWeek, endingBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObbDailyBalance {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("    endingBalance: ").append(toIndentedString(endingBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

