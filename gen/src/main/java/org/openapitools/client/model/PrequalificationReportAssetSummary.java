/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PrequalificationReportAssetSummary
 */
@JsonPropertyOrder({
  PrequalificationReportAssetSummary.JSON_PROPERTY_TYPE,
  PrequalificationReportAssetSummary.JSON_PROPERTY_AVAILABLE_BALANCE,
  PrequalificationReportAssetSummary.JSON_PROPERTY_CURRENT_BALANCE,
  PrequalificationReportAssetSummary.JSON_PROPERTY_TWO_MONTH_AVERAGE,
  PrequalificationReportAssetSummary.JSON_PROPERTY_SIX_MONTH_AVERAGE,
  PrequalificationReportAssetSummary.JSON_PROPERTY_BEGINNING_BALANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:34:32.874275138Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PrequalificationReportAssetSummary {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_TWO_MONTH_AVERAGE = "twoMonthAverage";
  private BigDecimal twoMonthAverage;

  public static final String JSON_PROPERTY_SIX_MONTH_AVERAGE = "sixMonthAverage";
  private BigDecimal sixMonthAverage;

  public static final String JSON_PROPERTY_BEGINNING_BALANCE = "beginningBalance";
  private BigDecimal beginningBalance;

  public PrequalificationReportAssetSummary() {
  }

  public PrequalificationReportAssetSummary type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The asset type: \&quot;checking\&quot;, \&quot;savings\&quot;, \&quot;moneyMarket\&quot;, \&quot;cd\&quot;, \&quot;investment\&quot;
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PrequalificationReportAssetSummary availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * The available balance for the account
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public PrequalificationReportAssetSummary currentBalance(BigDecimal currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * The current balance of the account
   * @return currentBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public PrequalificationReportAssetSummary twoMonthAverage(BigDecimal twoMonthAverage) {
    
    this.twoMonthAverage = twoMonthAverage;
    return this;
  }

   /**
   * The two month average daily balance of the account
   * @return twoMonthAverage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TWO_MONTH_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTwoMonthAverage() {
    return twoMonthAverage;
  }


  @JsonProperty(JSON_PROPERTY_TWO_MONTH_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTwoMonthAverage(BigDecimal twoMonthAverage) {
    this.twoMonthAverage = twoMonthAverage;
  }


  public PrequalificationReportAssetSummary sixMonthAverage(BigDecimal sixMonthAverage) {
    
    this.sixMonthAverage = sixMonthAverage;
    return this;
  }

   /**
   * The six month average daily balance of the account
   * @return sixMonthAverage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIX_MONTH_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSixMonthAverage() {
    return sixMonthAverage;
  }


  @JsonProperty(JSON_PROPERTY_SIX_MONTH_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSixMonthAverage(BigDecimal sixMonthAverage) {
    this.sixMonthAverage = sixMonthAverage;
  }


  public PrequalificationReportAssetSummary beginningBalance(BigDecimal beginningBalance) {
    
    this.beginningBalance = beginningBalance;
    return this;
  }

   /**
   * The beginning balance of the account per the time period of the report
   * @return beginningBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBeginningBalance() {
    return beginningBalance;
  }


  @JsonProperty(JSON_PROPERTY_BEGINNING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeginningBalance(BigDecimal beginningBalance) {
    this.beginningBalance = beginningBalance;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrequalificationReportAssetSummary prequalificationReportAssetSummary = (PrequalificationReportAssetSummary) o;
    return Objects.equals(this.type, prequalificationReportAssetSummary.type) &&
        Objects.equals(this.availableBalance, prequalificationReportAssetSummary.availableBalance) &&
        Objects.equals(this.currentBalance, prequalificationReportAssetSummary.currentBalance) &&
        Objects.equals(this.twoMonthAverage, prequalificationReportAssetSummary.twoMonthAverage) &&
        Objects.equals(this.sixMonthAverage, prequalificationReportAssetSummary.sixMonthAverage) &&
        Objects.equals(this.beginningBalance, prequalificationReportAssetSummary.beginningBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, availableBalance, currentBalance, twoMonthAverage, sixMonthAverage, beginningBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrequalificationReportAssetSummary {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    twoMonthAverage: ").append(toIndentedString(twoMonthAverage)).append("\n");
    sb.append("    sixMonthAverage: ").append(toIndentedString(sixMonthAverage)).append("\n");
    sb.append("    beginningBalance: ").append(toIndentedString(beginningBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

