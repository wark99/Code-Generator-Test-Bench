/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tag;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SwissBackupSlot
 */
@JsonPropertyOrder({
  SwissBackupSlot.JSON_PROPERTY_ID,
  SwissBackupSlot.JSON_PROPERTY_CUSTOMER_NAME,
  SwissBackupSlot.JSON_PROPERTY_TYPE,
  SwissBackupSlot.JSON_PROPERTY_SUBTYPE,
  SwissBackupSlot.JSON_PROPERTY_CONNECTION_TYPE,
  SwissBackupSlot.JSON_PROPERTY_SIZE,
  SwissBackupSlot.JSON_PROPERTY_STORAGE_USED,
  SwissBackupSlot.JSON_PROPERTY_USAGE_LAST_CHECK,
  SwissBackupSlot.JSON_PROPERTY_CREATED_AT,
  SwissBackupSlot.JSON_PROPERTY_LOCKED_AT,
  SwissBackupSlot.JSON_PROPERTY_LOCKED,
  SwissBackupSlot.JSON_PROPERTY_TAGS,
  SwissBackupSlot.JSON_PROPERTY_LANG,
  SwissBackupSlot.JSON_PROPERTY_ACTIVATE_NOTIFICATIONS,
  SwissBackupSlot.JSON_PROPERTY_UNIT_ADMIN,
  SwissBackupSlot.JSON_PROPERTY_USERNAME,
  SwissBackupSlot.JSON_PROPERTY_ENDPOINT,
  SwissBackupSlot.JSON_PROPERTY_IP_S_KEY,
  SwissBackupSlot.JSON_PROPERTY_EMAIL,
  SwissBackupSlot.JSON_PROPERTY_SLOT_NAME,
  SwissBackupSlot.JSON_PROPERTY_TENANT_NAME,
  SwissBackupSlot.JSON_PROPERTY_DOMAIN_NAME,
  SwissBackupSlot.JSON_PROPERTY_CONTAINER_NAME,
  SwissBackupSlot.JSON_PROPERTY_DIRECTORY,
  SwissBackupSlot.JSON_PROPERTY_CONFIG,
  SwissBackupSlot.JSON_PROPERTY_PARENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SwissBackupSlot {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_CUSTOMER_NAME = "customer_name";
  private String customerName;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_SUBTYPE = "subtype";
  private String subtype;

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connection_type";
  private String connectionType;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  public static final String JSON_PROPERTY_STORAGE_USED = "storage_used";
  private Integer storageUsed;

  public static final String JSON_PROPERTY_USAGE_LAST_CHECK = "usage_last_check";
  private Integer usageLastCheck;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_LOCKED_AT = "locked_at";
  private Integer lockedAt;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private Boolean locked;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<Tag> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_LANG = "lang";
  private Integer lang;

  public static final String JSON_PROPERTY_ACTIVATE_NOTIFICATIONS = "activate_notifications";
  private Boolean activateNotifications;

  public static final String JSON_PROPERTY_UNIT_ADMIN = "unit_admin";
  private Boolean unitAdmin;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_ENDPOINT = "endpoint";
  private String endpoint;

  public static final String JSON_PROPERTY_IP_S_KEY = "IPS_key";
  private String ipSKey;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_SLOT_NAME = "slot_name";
  private String slotName;

  public static final String JSON_PROPERTY_TENANT_NAME = "tenant_name";
  private String tenantName;

  public static final String JSON_PROPERTY_DOMAIN_NAME = "domain_name";
  private String domainName;

  public static final String JSON_PROPERTY_CONTAINER_NAME = "container_name";
  private String containerName;

  public static final String JSON_PROPERTY_DIRECTORY = "directory";
  private String directory;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private String config;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private Object parent;

  public SwissBackupSlot() {
  }

  public SwissBackupSlot id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the resource &#x60;Swiss Backup Slot&#x60;
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public SwissBackupSlot customerName(String customerName) {
    
    this.customerName = customerName;
    return this;
  }

   /**
   * Customer name of the resource &#x60;Swiss Backup Slot&#x60;
   * @return customerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerName() {
    return customerName;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public SwissBackupSlot type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the resource &#x60;Swiss Backup Slot&#x60;
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public SwissBackupSlot subtype(String subtype) {
    
    this.subtype = subtype;
    return this;
  }

   /**
   * Slot subtype (Arconis or Openstack Swift)
   * @return subtype
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubtype() {
    return subtype;
  }


  @JsonProperty(JSON_PROPERTY_SUBTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubtype(String subtype) {
    this.subtype = subtype;
  }


  public SwissBackupSlot connectionType(String connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Slot connection type (Swift, S3, FTP)
   * @return connectionType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }


  public SwissBackupSlot size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Total storage size of the Swiss Backup product (Bytes)
   * @return size
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Integer size) {
    this.size = size;
  }


  public SwissBackupSlot storageUsed(Integer storageUsed) {
    
    this.storageUsed = storageUsed;
    return this;
  }

   /**
   * Used storage size by free storage slots or Acronis backups (Bytes)
   * @return storageUsed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStorageUsed() {
    return storageUsed;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageUsed(Integer storageUsed) {
    this.storageUsed = storageUsed;
  }


  public SwissBackupSlot usageLastCheck(Integer usageLastCheck) {
    
    this.usageLastCheck = usageLastCheck;
    return this;
  }

   /**
   * Date of the last data update
   * @return usageLastCheck
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USAGE_LAST_CHECK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUsageLastCheck() {
    return usageLastCheck;
  }


  @JsonProperty(JSON_PROPERTY_USAGE_LAST_CHECK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsageLastCheck(Integer usageLastCheck) {
    this.usageLastCheck = usageLastCheck;
  }


  public SwissBackupSlot createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;Swiss Backup Slot&#x60; has been created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public SwissBackupSlot lockedAt(Integer lockedAt) {
    
    this.lockedAt = lockedAt;
    return this;
  }

   /**
   * Slot lock date
   * @return lockedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLockedAt() {
    return lockedAt;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLockedAt(Integer lockedAt) {
    this.lockedAt = lockedAt;
  }


  public SwissBackupSlot locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * True if the slot is locked
   * @return locked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLocked() {
    return locked;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public SwissBackupSlot tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public SwissBackupSlot addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Tag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public SwissBackupSlot lang(Integer lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * Language identifier (1 &#x3D; fr / 2 &#x3D; en / 3 &#x3D; de / 4 &#x3D; it / 5 &#x3D; es)
   * @return lang
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLang() {
    return lang;
  }


  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLang(Integer lang) {
    this.lang = lang;
  }


  public SwissBackupSlot activateNotifications(Boolean activateNotifications) {
    
    this.activateNotifications = activateNotifications;
    return this;
  }

   /**
   * True if the user wants to receive Acronis notifications
   * @return activateNotifications
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTIVATE_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActivateNotifications() {
    return activateNotifications;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVATE_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActivateNotifications(Boolean activateNotifications) {
    this.activateNotifications = activateNotifications;
  }


  public SwissBackupSlot unitAdmin(Boolean unitAdmin) {
    
    this.unitAdmin = unitAdmin;
    return this;
  }

   /**
   * Get unitAdmin
   * @return unitAdmin
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNIT_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUnitAdmin() {
    return unitAdmin;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnitAdmin(Boolean unitAdmin) {
    this.unitAdmin = unitAdmin;
  }


  public SwissBackupSlot username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Acronis administrator username
   * @return username
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public SwissBackupSlot endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Endpoint for the slot connection
   * @return endpoint
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEndpoint() {
    return endpoint;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public SwissBackupSlot ipSKey(String ipSKey) {
    
    this.ipSKey = ipSKey;
    return this;
  }

   /**
   * IPS identifier
   * @return ipSKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_S_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpSKey() {
    return ipSKey;
  }


  @JsonProperty(JSON_PROPERTY_IP_S_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpSKey(String ipSKey) {
    this.ipSKey = ipSKey;
  }


  public SwissBackupSlot email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public SwissBackupSlot slotName(String slotName) {
    
    this.slotName = slotName;
    return this;
  }

   /**
   * Slot name
   * @return slotName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLOT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlotName() {
    return slotName;
  }


  @JsonProperty(JSON_PROPERTY_SLOT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlotName(String slotName) {
    this.slotName = slotName;
  }


  public SwissBackupSlot tenantName(String tenantName) {
    
    this.tenantName = tenantName;
    return this;
  }

   /**
   * Swift connection tenant name
   * @return tenantName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantName() {
    return tenantName;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantName(String tenantName) {
    this.tenantName = tenantName;
  }


  public SwissBackupSlot domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

   /**
   * Swift connection domain name
   * @return domainName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainName() {
    return domainName;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public SwissBackupSlot containerName(String containerName) {
    
    this.containerName = containerName;
    return this;
  }

   /**
   * Slot container name (optional)
   * @return containerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContainerName() {
    return containerName;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public SwissBackupSlot directory(String directory) {
    
    this.directory = directory;
    return this;
  }

   /**
   * Slot default directory (optional)
   * @return directory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectory() {
    return directory;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectory(String directory) {
    this.directory = directory;
  }


  public SwissBackupSlot config(String config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(String config) {
    this.config = config;
  }


  public SwissBackupSlot parent(Object parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(Object parent) {
    this.parent = parent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwissBackupSlot swissBackupSlot = (SwissBackupSlot) o;
    return Objects.equals(this.id, swissBackupSlot.id) &&
        Objects.equals(this.customerName, swissBackupSlot.customerName) &&
        Objects.equals(this.type, swissBackupSlot.type) &&
        Objects.equals(this.subtype, swissBackupSlot.subtype) &&
        Objects.equals(this.connectionType, swissBackupSlot.connectionType) &&
        Objects.equals(this.size, swissBackupSlot.size) &&
        Objects.equals(this.storageUsed, swissBackupSlot.storageUsed) &&
        Objects.equals(this.usageLastCheck, swissBackupSlot.usageLastCheck) &&
        Objects.equals(this.createdAt, swissBackupSlot.createdAt) &&
        Objects.equals(this.lockedAt, swissBackupSlot.lockedAt) &&
        Objects.equals(this.locked, swissBackupSlot.locked) &&
        Objects.equals(this.tags, swissBackupSlot.tags) &&
        Objects.equals(this.lang, swissBackupSlot.lang) &&
        Objects.equals(this.activateNotifications, swissBackupSlot.activateNotifications) &&
        Objects.equals(this.unitAdmin, swissBackupSlot.unitAdmin) &&
        Objects.equals(this.username, swissBackupSlot.username) &&
        Objects.equals(this.endpoint, swissBackupSlot.endpoint) &&
        Objects.equals(this.ipSKey, swissBackupSlot.ipSKey) &&
        Objects.equals(this.email, swissBackupSlot.email) &&
        Objects.equals(this.slotName, swissBackupSlot.slotName) &&
        Objects.equals(this.tenantName, swissBackupSlot.tenantName) &&
        Objects.equals(this.domainName, swissBackupSlot.domainName) &&
        Objects.equals(this.containerName, swissBackupSlot.containerName) &&
        Objects.equals(this.directory, swissBackupSlot.directory) &&
        Objects.equals(this.config, swissBackupSlot.config) &&
        Objects.equals(this.parent, swissBackupSlot.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, customerName, type, subtype, connectionType, size, storageUsed, usageLastCheck, createdAt, lockedAt, locked, tags, lang, activateNotifications, unitAdmin, username, endpoint, ipSKey, email, slotName, tenantName, domainName, containerName, directory, config, parent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwissBackupSlot {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    storageUsed: ").append(toIndentedString(storageUsed)).append("\n");
    sb.append("    usageLastCheck: ").append(toIndentedString(usageLastCheck)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lockedAt: ").append(toIndentedString(lockedAt)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    activateNotifications: ").append(toIndentedString(activateNotifications)).append("\n");
    sb.append("    unitAdmin: ").append(toIndentedString(unitAdmin)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    ipSKey: ").append(toIndentedString(ipSKey)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    slotName: ").append(toIndentedString(slotName)).append("\n");
    sb.append("    tenantName: ").append(toIndentedString(tenantName)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

