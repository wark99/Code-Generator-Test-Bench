/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateRequestCustomer;
import org.openapitools.client.model.CreateRequestPartsInner;
import org.openapitools.client.model.CreateRequestProduct;
import org.openapitools.client.model.CreateVirtualTechRequestBookingDetails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateVirtualTechRequest
 */
@JsonPropertyOrder({
  CreateVirtualTechRequest.JSON_PROPERTY_BOOKING_DETAILS,
  CreateVirtualTechRequest.JSON_PROPERTY_CUSTOMER,
  CreateVirtualTechRequest.JSON_PROPERTY_PRODUCT,
  CreateVirtualTechRequest.JSON_PROPERTY_PARTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateVirtualTechRequest {
  public static final String JSON_PROPERTY_BOOKING_DETAILS = "bookingDetails";
  private CreateVirtualTechRequestBookingDetails bookingDetails;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CreateRequestCustomer customer;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private CreateRequestProduct product;

  public static final String JSON_PROPERTY_PARTS = "parts";
  private List<CreateRequestPartsInner> parts;

  public CreateVirtualTechRequest() {
  }

  public CreateVirtualTechRequest bookingDetails(CreateVirtualTechRequestBookingDetails bookingDetails) {
    
    this.bookingDetails = bookingDetails;
    return this;
  }

   /**
   * Get bookingDetails
   * @return bookingDetails
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOOKING_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateVirtualTechRequestBookingDetails getBookingDetails() {
    return bookingDetails;
  }


  @JsonProperty(JSON_PROPERTY_BOOKING_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBookingDetails(CreateVirtualTechRequestBookingDetails bookingDetails) {
    this.bookingDetails = bookingDetails;
  }


  public CreateVirtualTechRequest customer(CreateRequestCustomer customer) {
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateRequestCustomer getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomer(CreateRequestCustomer customer) {
    this.customer = customer;
  }


  public CreateVirtualTechRequest product(CreateRequestProduct product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateRequestProduct getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProduct(CreateRequestProduct product) {
    this.product = product;
  }


  public CreateVirtualTechRequest parts(List<CreateRequestPartsInner> parts) {
    
    this.parts = parts;
    return this;
  }

  public CreateVirtualTechRequest addPartsItem(CreateRequestPartsInner partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<>();
    }
    this.parts.add(partsItem);
    return this;
  }

   /**
   * Get parts
   * @return parts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateRequestPartsInner> getParts() {
    return parts;
  }


  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParts(List<CreateRequestPartsInner> parts) {
    this.parts = parts;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVirtualTechRequest createVirtualTechRequest = (CreateVirtualTechRequest) o;
    return Objects.equals(this.bookingDetails, createVirtualTechRequest.bookingDetails) &&
        Objects.equals(this.customer, createVirtualTechRequest.customer) &&
        Objects.equals(this.product, createVirtualTechRequest.product) &&
        Objects.equals(this.parts, createVirtualTechRequest.parts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookingDetails, customer, product, parts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVirtualTechRequest {\n");
    sb.append("    bookingDetails: ").append(toIndentedString(bookingDetails)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

