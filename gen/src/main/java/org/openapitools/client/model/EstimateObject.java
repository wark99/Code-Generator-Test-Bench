/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EstimateObjectLinesInner;
import org.openapitools.client.model.EstimateObjectNotesInner;
import org.openapitools.client.model.EstimateObjectPartsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EstimateObject
 */
@JsonPropertyOrder({
  EstimateObject.JSON_PROPERTY_ESTIMATE_I_D,
  EstimateObject.JSON_PROPERTY_DIPATCH_NUMBER,
  EstimateObject.JSON_PROPERTY_CASE_NUMBER,
  EstimateObject.JSON_PROPERTY_ESTIMATE_PROCESSED_STATUS_CODE,
  EstimateObject.JSON_PROPERTY_TOTAL,
  EstimateObject.JSON_PROPERTY_DEDUCTIBLE,
  EstimateObject.JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE,
  EstimateObject.JSON_PROPERTY_SUBMISSION_TIMESTAMP,
  EstimateObject.JSON_PROPERTY_PROCESSED_TIMESTAMP,
  EstimateObject.JSON_PROPERTY_REJECT_PROCESSING_NEEDED,
  EstimateObject.JSON_PROPERTY_UNIT_AGE,
  EstimateObject.JSON_PROPERTY_CAUSE_OF_FAILURE,
  EstimateObject.JSON_PROPERTY_DECLINE_REASON,
  EstimateObject.JSON_PROPERTY_LINES,
  EstimateObject.JSON_PROPERTY_PARTS,
  EstimateObject.JSON_PROPERTY_NOTES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class EstimateObject {
  public static final String JSON_PROPERTY_ESTIMATE_I_D = "estimateID";
  private Integer estimateID;

  public static final String JSON_PROPERTY_DIPATCH_NUMBER = "dipatchNumber";
  private String dipatchNumber;

  public static final String JSON_PROPERTY_CASE_NUMBER = "caseNumber";
  private String caseNumber;

  public static final String JSON_PROPERTY_ESTIMATE_PROCESSED_STATUS_CODE = "estimateProcessedStatusCode";
  private String estimateProcessedStatusCode;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private BigDecimal total;

  public static final String JSON_PROPERTY_DEDUCTIBLE = "deductible";
  private BigDecimal deductible;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE = "totalAmountLessDeductible";
  private BigDecimal totalAmountLessDeductible;

  public static final String JSON_PROPERTY_SUBMISSION_TIMESTAMP = "submissionTimestamp";
  private OffsetDateTime submissionTimestamp;

  public static final String JSON_PROPERTY_PROCESSED_TIMESTAMP = "processedTimestamp";
  private OffsetDateTime processedTimestamp;

  public static final String JSON_PROPERTY_REJECT_PROCESSING_NEEDED = "rejectProcessingNeeded";
  private OffsetDateTime rejectProcessingNeeded;

  public static final String JSON_PROPERTY_UNIT_AGE = "unitAge";
  private String unitAge;

  public static final String JSON_PROPERTY_CAUSE_OF_FAILURE = "causeOfFailure";
  private String causeOfFailure;

  public static final String JSON_PROPERTY_DECLINE_REASON = "declineReason";
  private String declineReason;

  public static final String JSON_PROPERTY_LINES = "lines";
  private List<EstimateObjectLinesInner> lines = new ArrayList<>();

  public static final String JSON_PROPERTY_PARTS = "parts";
  private List<EstimateObjectPartsInner> parts = new ArrayList<>();

  public static final String JSON_PROPERTY_NOTES = "notes";
  private List<EstimateObjectNotesInner> notes = new ArrayList<>();

  public EstimateObject() {
  }

  public EstimateObject estimateID(Integer estimateID) {
    
    this.estimateID = estimateID;
    return this;
  }

   /**
   * Get estimateID
   * @return estimateID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getEstimateID() {
    return estimateID;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimateID(Integer estimateID) {
    this.estimateID = estimateID;
  }


  public EstimateObject dipatchNumber(String dipatchNumber) {
    
    this.dipatchNumber = dipatchNumber;
    return this;
  }

   /**
   * Get dipatchNumber
   * @return dipatchNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIPATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDipatchNumber() {
    return dipatchNumber;
  }


  @JsonProperty(JSON_PROPERTY_DIPATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDipatchNumber(String dipatchNumber) {
    this.dipatchNumber = dipatchNumber;
  }


  public EstimateObject caseNumber(String caseNumber) {
    
    this.caseNumber = caseNumber;
    return this;
  }

   /**
   * Get caseNumber
   * @return caseNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CASE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCaseNumber() {
    return caseNumber;
  }


  @JsonProperty(JSON_PROPERTY_CASE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaseNumber(String caseNumber) {
    this.caseNumber = caseNumber;
  }


  public EstimateObject estimateProcessedStatusCode(String estimateProcessedStatusCode) {
    
    this.estimateProcessedStatusCode = estimateProcessedStatusCode;
    return this;
  }

   /**
   * Get estimateProcessedStatusCode
   * @return estimateProcessedStatusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_PROCESSED_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEstimateProcessedStatusCode() {
    return estimateProcessedStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_PROCESSED_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimateProcessedStatusCode(String estimateProcessedStatusCode) {
    this.estimateProcessedStatusCode = estimateProcessedStatusCode;
  }


  public EstimateObject total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  public EstimateObject deductible(BigDecimal deductible) {
    
    this.deductible = deductible;
    return this;
  }

   /**
   * Get deductible
   * @return deductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDeductible() {
    return deductible;
  }


  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeductible(BigDecimal deductible) {
    this.deductible = deductible;
  }


  public EstimateObject totalAmountLessDeductible(BigDecimal totalAmountLessDeductible) {
    
    this.totalAmountLessDeductible = totalAmountLessDeductible;
    return this;
  }

   /**
   * Get totalAmountLessDeductible
   * @return totalAmountLessDeductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalAmountLessDeductible() {
    return totalAmountLessDeductible;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmountLessDeductible(BigDecimal totalAmountLessDeductible) {
    this.totalAmountLessDeductible = totalAmountLessDeductible;
  }


  public EstimateObject submissionTimestamp(OffsetDateTime submissionTimestamp) {
    
    this.submissionTimestamp = submissionTimestamp;
    return this;
  }

   /**
   * Get submissionTimestamp
   * @return submissionTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getSubmissionTimestamp() {
    return submissionTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionTimestamp(OffsetDateTime submissionTimestamp) {
    this.submissionTimestamp = submissionTimestamp;
  }


  public EstimateObject processedTimestamp(OffsetDateTime processedTimestamp) {
    
    this.processedTimestamp = processedTimestamp;
    return this;
  }

   /**
   * Get processedTimestamp
   * @return processedTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getProcessedTimestamp() {
    return processedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedTimestamp(OffsetDateTime processedTimestamp) {
    this.processedTimestamp = processedTimestamp;
  }


  public EstimateObject rejectProcessingNeeded(OffsetDateTime rejectProcessingNeeded) {
    
    this.rejectProcessingNeeded = rejectProcessingNeeded;
    return this;
  }

   /**
   * Get rejectProcessingNeeded
   * @return rejectProcessingNeeded
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REJECT_PROCESSING_NEEDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getRejectProcessingNeeded() {
    return rejectProcessingNeeded;
  }


  @JsonProperty(JSON_PROPERTY_REJECT_PROCESSING_NEEDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRejectProcessingNeeded(OffsetDateTime rejectProcessingNeeded) {
    this.rejectProcessingNeeded = rejectProcessingNeeded;
  }


  public EstimateObject unitAge(String unitAge) {
    
    this.unitAge = unitAge;
    return this;
  }

   /**
   * Get unitAge
   * @return unitAge
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitAge() {
    return unitAge;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitAge(String unitAge) {
    this.unitAge = unitAge;
  }


  public EstimateObject causeOfFailure(String causeOfFailure) {
    
    this.causeOfFailure = causeOfFailure;
    return this;
  }

   /**
   * Get causeOfFailure
   * @return causeOfFailure
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAUSE_OF_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCauseOfFailure() {
    return causeOfFailure;
  }


  @JsonProperty(JSON_PROPERTY_CAUSE_OF_FAILURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCauseOfFailure(String causeOfFailure) {
    this.causeOfFailure = causeOfFailure;
  }


  public EstimateObject declineReason(String declineReason) {
    
    this.declineReason = declineReason;
    return this;
  }

   /**
   * Get declineReason
   * @return declineReason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeclineReason() {
    return declineReason;
  }


  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclineReason(String declineReason) {
    this.declineReason = declineReason;
  }


  public EstimateObject lines(List<EstimateObjectLinesInner> lines) {
    
    this.lines = lines;
    return this;
  }

  public EstimateObject addLinesItem(EstimateObjectLinesInner linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EstimateObjectLinesInner> getLines() {
    return lines;
  }


  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLines(List<EstimateObjectLinesInner> lines) {
    this.lines = lines;
  }


  public EstimateObject parts(List<EstimateObjectPartsInner> parts) {
    
    this.parts = parts;
    return this;
  }

  public EstimateObject addPartsItem(EstimateObjectPartsInner partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<>();
    }
    this.parts.add(partsItem);
    return this;
  }

   /**
   * Get parts
   * @return parts
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EstimateObjectPartsInner> getParts() {
    return parts;
  }


  @JsonProperty(JSON_PROPERTY_PARTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParts(List<EstimateObjectPartsInner> parts) {
    this.parts = parts;
  }


  public EstimateObject notes(List<EstimateObjectNotesInner> notes) {
    
    this.notes = notes;
    return this;
  }

  public EstimateObject addNotesItem(EstimateObjectNotesInner notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EstimateObjectNotesInner> getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotes(List<EstimateObjectNotesInner> notes) {
    this.notes = notes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateObject estimateObject = (EstimateObject) o;
    return Objects.equals(this.estimateID, estimateObject.estimateID) &&
        Objects.equals(this.dipatchNumber, estimateObject.dipatchNumber) &&
        Objects.equals(this.caseNumber, estimateObject.caseNumber) &&
        Objects.equals(this.estimateProcessedStatusCode, estimateObject.estimateProcessedStatusCode) &&
        Objects.equals(this.total, estimateObject.total) &&
        Objects.equals(this.deductible, estimateObject.deductible) &&
        Objects.equals(this.totalAmountLessDeductible, estimateObject.totalAmountLessDeductible) &&
        Objects.equals(this.submissionTimestamp, estimateObject.submissionTimestamp) &&
        Objects.equals(this.processedTimestamp, estimateObject.processedTimestamp) &&
        Objects.equals(this.rejectProcessingNeeded, estimateObject.rejectProcessingNeeded) &&
        Objects.equals(this.unitAge, estimateObject.unitAge) &&
        Objects.equals(this.causeOfFailure, estimateObject.causeOfFailure) &&
        Objects.equals(this.declineReason, estimateObject.declineReason) &&
        Objects.equals(this.lines, estimateObject.lines) &&
        Objects.equals(this.parts, estimateObject.parts) &&
        Objects.equals(this.notes, estimateObject.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimateID, dipatchNumber, caseNumber, estimateProcessedStatusCode, total, deductible, totalAmountLessDeductible, submissionTimestamp, processedTimestamp, rejectProcessingNeeded, unitAge, causeOfFailure, declineReason, lines, parts, notes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateObject {\n");
    sb.append("    estimateID: ").append(toIndentedString(estimateID)).append("\n");
    sb.append("    dipatchNumber: ").append(toIndentedString(dipatchNumber)).append("\n");
    sb.append("    caseNumber: ").append(toIndentedString(caseNumber)).append("\n");
    sb.append("    estimateProcessedStatusCode: ").append(toIndentedString(estimateProcessedStatusCode)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    deductible: ").append(toIndentedString(deductible)).append("\n");
    sb.append("    totalAmountLessDeductible: ").append(toIndentedString(totalAmountLessDeductible)).append("\n");
    sb.append("    submissionTimestamp: ").append(toIndentedString(submissionTimestamp)).append("\n");
    sb.append("    processedTimestamp: ").append(toIndentedString(processedTimestamp)).append("\n");
    sb.append("    rejectProcessingNeeded: ").append(toIndentedString(rejectProcessingNeeded)).append("\n");
    sb.append("    unitAge: ").append(toIndentedString(unitAge)).append("\n");
    sb.append("    causeOfFailure: ").append(toIndentedString(causeOfFailure)).append("\n");
    sb.append("    declineReason: ").append(toIndentedString(declineReason)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

