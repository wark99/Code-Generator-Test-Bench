/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A fake transaction for TxPush testing
 */
@JsonPropertyOrder({
  TestTxPushTransaction.JSON_PROPERTY_AMOUNT,
  TestTxPushTransaction.JSON_PROPERTY_DESCRIPTION,
  TestTxPushTransaction.JSON_PROPERTY_STATUS,
  TestTxPushTransaction.JSON_PROPERTY_POSTED_DATE,
  TestTxPushTransaction.JSON_PROPERTY_TRANSACTION_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:25:40.114879426Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TestTxPushTransaction {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status = "active";

  public static final String JSON_PROPERTY_POSTED_DATE = "postedDate";
  private Long postedDate;

  public static final String JSON_PROPERTY_TRANSACTION_DATE = "transactionDate";
  private Long transactionDate;

  public TestTxPushTransaction() {
  }

  public TestTxPushTransaction amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the transaction
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public TestTxPushTransaction description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the transaction
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public TestTxPushTransaction status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * \&quot;active\&quot; or \&quot;pending\&quot; (optional)
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public TestTxPushTransaction postedDate(Long postedDate) {
    
    this.postedDate = postedDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return postedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPostedDate() {
    return postedDate;
  }


  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostedDate(Long postedDate) {
    this.postedDate = postedDate;
  }


  public TestTxPushTransaction transactionDate(Long transactionDate) {
    
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return transactionDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTransactionDate() {
    return transactionDate;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionDate(Long transactionDate) {
    this.transactionDate = transactionDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestTxPushTransaction testTxPushTransaction = (TestTxPushTransaction) o;
    return Objects.equals(this.amount, testTxPushTransaction.amount) &&
        Objects.equals(this.description, testTxPushTransaction.description) &&
        Objects.equals(this.status, testTxPushTransaction.status) &&
        Objects.equals(this.postedDate, testTxPushTransaction.postedDate) &&
        Objects.equals(this.transactionDate, testTxPushTransaction.transactionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, description, status, postedDate, transactionDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestTxPushTransaction {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    postedDate: ").append(toIndentedString(postedDate)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

