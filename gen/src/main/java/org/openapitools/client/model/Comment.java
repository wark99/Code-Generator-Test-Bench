/*
 * Semantic Cuisine
 * This is the API specification for the Semantic Browse for Cuisines application.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Comment
 */
@JsonPropertyOrder({
  Comment.JSON_PROPERTY_ID,
  Comment.JSON_PROPERTY_AUTHOR,
  Comment.JSON_PROPERTY_RECIPE_ID,
  Comment.JSON_PROPERTY_UPVOTE_COUNT,
  Comment.JSON_PROPERTY_CONTENT,
  Comment.JSON_PROPERTY_HAS_SELF_UPVOTED,
  Comment.JSON_PROPERTY_CREATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:20:56.516679004Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Comment {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public static final String JSON_PROPERTY_RECIPE_ID = "recipeId";
  private Integer recipeId;

  public static final String JSON_PROPERTY_UPVOTE_COUNT = "upvoteCount";
  private Integer upvoteCount;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_HAS_SELF_UPVOTED = "hasSelfUpvoted";
  private Boolean hasSelfUpvoted;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public Comment() {
  }

  public Comment id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public Comment author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }


  public Comment recipeId(Integer recipeId) {
    
    this.recipeId = recipeId;
    return this;
  }

   /**
   * Get recipeId
   * @return recipeId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECIPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRecipeId() {
    return recipeId;
  }


  @JsonProperty(JSON_PROPERTY_RECIPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecipeId(Integer recipeId) {
    this.recipeId = recipeId;
  }


  public Comment upvoteCount(Integer upvoteCount) {
    
    this.upvoteCount = upvoteCount;
    return this;
  }

   /**
   * Get upvoteCount
   * @return upvoteCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpvoteCount() {
    return upvoteCount;
  }


  @JsonProperty(JSON_PROPERTY_UPVOTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpvoteCount(Integer upvoteCount) {
    this.upvoteCount = upvoteCount;
  }


  public Comment content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(String content) {
    this.content = content;
  }


  public Comment hasSelfUpvoted(Boolean hasSelfUpvoted) {
    
    this.hasSelfUpvoted = hasSelfUpvoted;
    return this;
  }

   /**
   * Get hasSelfUpvoted
   * @return hasSelfUpvoted
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HAS_SELF_UPVOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHasSelfUpvoted() {
    return hasSelfUpvoted;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SELF_UPVOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHasSelfUpvoted(Boolean hasSelfUpvoted) {
    this.hasSelfUpvoted = hasSelfUpvoted;
  }


  public Comment createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.id, comment.id) &&
        Objects.equals(this.author, comment.author) &&
        Objects.equals(this.recipeId, comment.recipeId) &&
        Objects.equals(this.upvoteCount, comment.upvoteCount) &&
        Objects.equals(this.content, comment.content) &&
        Objects.equals(this.hasSelfUpvoted, comment.hasSelfUpvoted) &&
        Objects.equals(this.createdAt, comment.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, author, recipeId, upvoteCount, content, hasSelfUpvoted, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    recipeId: ").append(toIndentedString(recipeId)).append("\n");
    sb.append("    upvoteCount: ").append(toIndentedString(upvoteCount)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    hasSelfUpvoted: ").append(toIndentedString(hasSelfUpvoted)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

