/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddressAnalysises
 */
@JsonPropertyOrder({
  AddressAnalysises.JSON_PROPERTY_CITY_NAME_MATCH,
  AddressAnalysises.JSON_PROPERTY_FILE_ADDRESS_STATUS,
  AddressAnalysises.JSON_PROPERTY_HOUSE_NUMBER_MATCH,
  AddressAnalysises.JSON_PROPERTY_INPUT_ADDRESS_STATUS,
  AddressAnalysises.JSON_PROPERTY_PRE_DIRECTIONAL_MATCH,
  AddressAnalysises.JSON_PROPERTY_STATE_CODE_MATCH,
  AddressAnalysises.JSON_PROPERTY_STREET_NAME_MATCH,
  AddressAnalysises.JSON_PROPERTY_STREET_TYPE_MATCH,
  AddressAnalysises.JSON_PROPERTY_UNIT_NUMBER_MATCH,
  AddressAnalysises.JSON_PROPERTY_ZIP_CODE_MATCH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AddressAnalysises {
  public static final String JSON_PROPERTY_CITY_NAME_MATCH = "cityNameMatch";
  private String cityNameMatch;

  public static final String JSON_PROPERTY_FILE_ADDRESS_STATUS = "fileAddressStatus";
  private String fileAddressStatus;

  public static final String JSON_PROPERTY_HOUSE_NUMBER_MATCH = "houseNumberMatch";
  private String houseNumberMatch;

  public static final String JSON_PROPERTY_INPUT_ADDRESS_STATUS = "inputAddressStatus";
  private String inputAddressStatus;

  public static final String JSON_PROPERTY_PRE_DIRECTIONAL_MATCH = "preDirectionalMatch";
  private String preDirectionalMatch;

  public static final String JSON_PROPERTY_STATE_CODE_MATCH = "stateCodeMatch";
  private String stateCodeMatch;

  public static final String JSON_PROPERTY_STREET_NAME_MATCH = "streetNameMatch";
  private String streetNameMatch;

  public static final String JSON_PROPERTY_STREET_TYPE_MATCH = "streetTypeMatch";
  private String streetTypeMatch;

  public static final String JSON_PROPERTY_UNIT_NUMBER_MATCH = "unitNumberMatch";
  private String unitNumberMatch;

  public static final String JSON_PROPERTY_ZIP_CODE_MATCH = "zipCodeMatch";
  private String zipCodeMatch;

  public AddressAnalysises() {
  }

  public AddressAnalysises cityNameMatch(String cityNameMatch) {
    
    this.cityNameMatch = cityNameMatch;
    return this;
  }

   /**
   * Get cityNameMatch
   * @return cityNameMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY_NAME_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCityNameMatch() {
    return cityNameMatch;
  }


  @JsonProperty(JSON_PROPERTY_CITY_NAME_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCityNameMatch(String cityNameMatch) {
    this.cityNameMatch = cityNameMatch;
  }


  public AddressAnalysises fileAddressStatus(String fileAddressStatus) {
    
    this.fileAddressStatus = fileAddressStatus;
    return this;
  }

   /**
   * Get fileAddressStatus
   * @return fileAddressStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_ADDRESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileAddressStatus() {
    return fileAddressStatus;
  }


  @JsonProperty(JSON_PROPERTY_FILE_ADDRESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileAddressStatus(String fileAddressStatus) {
    this.fileAddressStatus = fileAddressStatus;
  }


  public AddressAnalysises houseNumberMatch(String houseNumberMatch) {
    
    this.houseNumberMatch = houseNumberMatch;
    return this;
  }

   /**
   * Get houseNumberMatch
   * @return houseNumberMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOUSE_NUMBER_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHouseNumberMatch() {
    return houseNumberMatch;
  }


  @JsonProperty(JSON_PROPERTY_HOUSE_NUMBER_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHouseNumberMatch(String houseNumberMatch) {
    this.houseNumberMatch = houseNumberMatch;
  }


  public AddressAnalysises inputAddressStatus(String inputAddressStatus) {
    
    this.inputAddressStatus = inputAddressStatus;
    return this;
  }

   /**
   * Get inputAddressStatus
   * @return inputAddressStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_ADDRESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInputAddressStatus() {
    return inputAddressStatus;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_ADDRESS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputAddressStatus(String inputAddressStatus) {
    this.inputAddressStatus = inputAddressStatus;
  }


  public AddressAnalysises preDirectionalMatch(String preDirectionalMatch) {
    
    this.preDirectionalMatch = preDirectionalMatch;
    return this;
  }

   /**
   * Get preDirectionalMatch
   * @return preDirectionalMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_DIRECTIONAL_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreDirectionalMatch() {
    return preDirectionalMatch;
  }


  @JsonProperty(JSON_PROPERTY_PRE_DIRECTIONAL_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreDirectionalMatch(String preDirectionalMatch) {
    this.preDirectionalMatch = preDirectionalMatch;
  }


  public AddressAnalysises stateCodeMatch(String stateCodeMatch) {
    
    this.stateCodeMatch = stateCodeMatch;
    return this;
  }

   /**
   * Get stateCodeMatch
   * @return stateCodeMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE_CODE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStateCodeMatch() {
    return stateCodeMatch;
  }


  @JsonProperty(JSON_PROPERTY_STATE_CODE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateCodeMatch(String stateCodeMatch) {
    this.stateCodeMatch = stateCodeMatch;
  }


  public AddressAnalysises streetNameMatch(String streetNameMatch) {
    
    this.streetNameMatch = streetNameMatch;
    return this;
  }

   /**
   * Get streetNameMatch
   * @return streetNameMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET_NAME_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreetNameMatch() {
    return streetNameMatch;
  }


  @JsonProperty(JSON_PROPERTY_STREET_NAME_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreetNameMatch(String streetNameMatch) {
    this.streetNameMatch = streetNameMatch;
  }


  public AddressAnalysises streetTypeMatch(String streetTypeMatch) {
    
    this.streetTypeMatch = streetTypeMatch;
    return this;
  }

   /**
   * Get streetTypeMatch
   * @return streetTypeMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET_TYPE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreetTypeMatch() {
    return streetTypeMatch;
  }


  @JsonProperty(JSON_PROPERTY_STREET_TYPE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreetTypeMatch(String streetTypeMatch) {
    this.streetTypeMatch = streetTypeMatch;
  }


  public AddressAnalysises unitNumberMatch(String unitNumberMatch) {
    
    this.unitNumberMatch = unitNumberMatch;
    return this;
  }

   /**
   * Get unitNumberMatch
   * @return unitNumberMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_NUMBER_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitNumberMatch() {
    return unitNumberMatch;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_NUMBER_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitNumberMatch(String unitNumberMatch) {
    this.unitNumberMatch = unitNumberMatch;
  }


  public AddressAnalysises zipCodeMatch(String zipCodeMatch) {
    
    this.zipCodeMatch = zipCodeMatch;
    return this;
  }

   /**
   * Get zipCodeMatch
   * @return zipCodeMatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZIP_CODE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getZipCodeMatch() {
    return zipCodeMatch;
  }


  @JsonProperty(JSON_PROPERTY_ZIP_CODE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZipCodeMatch(String zipCodeMatch) {
    this.zipCodeMatch = zipCodeMatch;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressAnalysises addressAnalysises = (AddressAnalysises) o;
    return Objects.equals(this.cityNameMatch, addressAnalysises.cityNameMatch) &&
        Objects.equals(this.fileAddressStatus, addressAnalysises.fileAddressStatus) &&
        Objects.equals(this.houseNumberMatch, addressAnalysises.houseNumberMatch) &&
        Objects.equals(this.inputAddressStatus, addressAnalysises.inputAddressStatus) &&
        Objects.equals(this.preDirectionalMatch, addressAnalysises.preDirectionalMatch) &&
        Objects.equals(this.stateCodeMatch, addressAnalysises.stateCodeMatch) &&
        Objects.equals(this.streetNameMatch, addressAnalysises.streetNameMatch) &&
        Objects.equals(this.streetTypeMatch, addressAnalysises.streetTypeMatch) &&
        Objects.equals(this.unitNumberMatch, addressAnalysises.unitNumberMatch) &&
        Objects.equals(this.zipCodeMatch, addressAnalysises.zipCodeMatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cityNameMatch, fileAddressStatus, houseNumberMatch, inputAddressStatus, preDirectionalMatch, stateCodeMatch, streetNameMatch, streetTypeMatch, unitNumberMatch, zipCodeMatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressAnalysises {\n");
    sb.append("    cityNameMatch: ").append(toIndentedString(cityNameMatch)).append("\n");
    sb.append("    fileAddressStatus: ").append(toIndentedString(fileAddressStatus)).append("\n");
    sb.append("    houseNumberMatch: ").append(toIndentedString(houseNumberMatch)).append("\n");
    sb.append("    inputAddressStatus: ").append(toIndentedString(inputAddressStatus)).append("\n");
    sb.append("    preDirectionalMatch: ").append(toIndentedString(preDirectionalMatch)).append("\n");
    sb.append("    stateCodeMatch: ").append(toIndentedString(stateCodeMatch)).append("\n");
    sb.append("    streetNameMatch: ").append(toIndentedString(streetNameMatch)).append("\n");
    sb.append("    streetTypeMatch: ").append(toIndentedString(streetTypeMatch)).append("\n");
    sb.append("    unitNumberMatch: ").append(toIndentedString(unitNumberMatch)).append("\n");
    sb.append("    zipCodeMatch: ").append(toIndentedString(zipCodeMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

