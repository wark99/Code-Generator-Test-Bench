/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.RegistrationCreateProfilePostRequestPersonalDetailsHomeAddress;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RegistrationCreateProfilePostRequestPersonalDetails
 */
@JsonPropertyOrder({
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_FIRSTNAME,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_MIDDLE_NAME,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_LASTNAME,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_ABOUT_US,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_HOME_ADDRESS,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_ALTERNATE_MOBILE_NUMBER,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_GENDER,
  RegistrationCreateProfilePostRequestPersonalDetails.JSON_PROPERTY_DATE_OF_BIRTH
})
@JsonTypeName("_registration_create_profile_post_request_personal_details")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RegistrationCreateProfilePostRequestPersonalDetails {
  public static final String JSON_PROPERTY_FIRSTNAME = "firstname";
  private String firstname;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middle_name";
  private String middleName;

  public static final String JSON_PROPERTY_LASTNAME = "lastname";
  private String lastname;

  public static final String JSON_PROPERTY_ABOUT_US = "about_us";
  private String aboutUs;

  public static final String JSON_PROPERTY_HOME_ADDRESS = "home_address";
  private RegistrationCreateProfilePostRequestPersonalDetailsHomeAddress homeAddress;

  public static final String JSON_PROPERTY_ALTERNATE_MOBILE_NUMBER = "alternate_mobile_number";
  private String alternateMobileNumber;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("MALE"),
    
    FEMALE("FEMALE");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "date_of_birth";
  private String dateOfBirth;

  public RegistrationCreateProfilePostRequestPersonalDetails() {
  }

  public RegistrationCreateProfilePostRequestPersonalDetails firstname(String firstname) {
    
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstname() {
    return firstname;
  }


  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails lastname(String lastname) {
    
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastname() {
    return lastname;
  }


  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails aboutUs(String aboutUs) {
    
    this.aboutUs = aboutUs;
    return this;
  }

   /**
   * Get aboutUs
   * @return aboutUs
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ABOUT_US)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAboutUs() {
    return aboutUs;
  }


  @JsonProperty(JSON_PROPERTY_ABOUT_US)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAboutUs(String aboutUs) {
    this.aboutUs = aboutUs;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails homeAddress(RegistrationCreateProfilePostRequestPersonalDetailsHomeAddress homeAddress) {
    
    this.homeAddress = homeAddress;
    return this;
  }

   /**
   * Get homeAddress
   * @return homeAddress
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HOME_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RegistrationCreateProfilePostRequestPersonalDetailsHomeAddress getHomeAddress() {
    return homeAddress;
  }


  @JsonProperty(JSON_PROPERTY_HOME_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHomeAddress(RegistrationCreateProfilePostRequestPersonalDetailsHomeAddress homeAddress) {
    this.homeAddress = homeAddress;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails alternateMobileNumber(String alternateMobileNumber) {
    
    this.alternateMobileNumber = alternateMobileNumber;
    return this;
  }

   /**
   * This number must be a valid UK mobile number
   * @return alternateMobileNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALTERNATE_MOBILE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAlternateMobileNumber() {
    return alternateMobileNumber;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATE_MOBILE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlternateMobileNumber(String alternateMobileNumber) {
    this.alternateMobileNumber = alternateMobileNumber;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public RegistrationCreateProfilePostRequestPersonalDetails dateOfBirth(String dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistrationCreateProfilePostRequestPersonalDetails registrationCreateProfilePostRequestPersonalDetails = (RegistrationCreateProfilePostRequestPersonalDetails) o;
    return Objects.equals(this.firstname, registrationCreateProfilePostRequestPersonalDetails.firstname) &&
        Objects.equals(this.middleName, registrationCreateProfilePostRequestPersonalDetails.middleName) &&
        Objects.equals(this.lastname, registrationCreateProfilePostRequestPersonalDetails.lastname) &&
        Objects.equals(this.aboutUs, registrationCreateProfilePostRequestPersonalDetails.aboutUs) &&
        Objects.equals(this.homeAddress, registrationCreateProfilePostRequestPersonalDetails.homeAddress) &&
        Objects.equals(this.alternateMobileNumber, registrationCreateProfilePostRequestPersonalDetails.alternateMobileNumber) &&
        Objects.equals(this.gender, registrationCreateProfilePostRequestPersonalDetails.gender) &&
        Objects.equals(this.dateOfBirth, registrationCreateProfilePostRequestPersonalDetails.dateOfBirth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstname, middleName, lastname, aboutUs, homeAddress, alternateMobileNumber, gender, dateOfBirth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistrationCreateProfilePostRequestPersonalDetails {\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    aboutUs: ").append(toIndentedString(aboutUs)).append("\n");
    sb.append("    homeAddress: ").append(toIndentedString(homeAddress)).append("\n");
    sb.append("    alternateMobileNumber: ").append(toIndentedString(alternateMobileNumber)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

