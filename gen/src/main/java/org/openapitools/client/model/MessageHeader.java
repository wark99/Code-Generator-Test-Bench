/*
 * Customer Payment Domain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.client.model.MessageContext;
import org.openapitools.client.model.MultiPartMessageContextType;
import org.openapitools.client.model.SourceContext;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MessageHeader
 */
@JsonPropertyOrder({
  MessageHeader.JSON_PROPERTY_HEADER_VERSION,
  MessageHeader.JSON_PROPERTY_TIMESTAMP,
  MessageHeader.JSON_PROPERTY_SOURCE_CONTEXT,
  MessageHeader.JSON_PROPERTY_MESSAGE_CONTEXT,
  MessageHeader.JSON_PROPERTY_MULTI_PART_MESSAGE_CONTEXT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:54.275857511Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MessageHeader {
  public static final String JSON_PROPERTY_HEADER_VERSION = "headerVersion";
  private String headerVersion;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private OffsetDateTime timestamp;

  public static final String JSON_PROPERTY_SOURCE_CONTEXT = "sourceContext";
  private SourceContext sourceContext;

  public static final String JSON_PROPERTY_MESSAGE_CONTEXT = "messageContext";
  private MessageContext messageContext;

  public static final String JSON_PROPERTY_MULTI_PART_MESSAGE_CONTEXT_TYPE = "multiPartMessageContextType";
  private MultiPartMessageContextType multiPartMessageContextType;

  public MessageHeader() {
  }

  public MessageHeader headerVersion(String headerVersion) {
    
    this.headerVersion = headerVersion;
    return this;
  }

   /**
   * Get headerVersion
   * @return headerVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeaderVersion() {
    return headerVersion;
  }


  @JsonProperty(JSON_PROPERTY_HEADER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeaderVersion(String headerVersion) {
    this.headerVersion = headerVersion;
  }


  public MessageHeader timestamp(OffsetDateTime timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public MessageHeader sourceContext(SourceContext sourceContext) {
    
    this.sourceContext = sourceContext;
    return this;
  }

   /**
   * Get sourceContext
   * @return sourceContext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SourceContext getSourceContext() {
    return sourceContext;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceContext(SourceContext sourceContext) {
    this.sourceContext = sourceContext;
  }


  public MessageHeader messageContext(MessageContext messageContext) {
    
    this.messageContext = messageContext;
    return this;
  }

   /**
   * Get messageContext
   * @return messageContext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageContext getMessageContext() {
    return messageContext;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageContext(MessageContext messageContext) {
    this.messageContext = messageContext;
  }


  public MessageHeader multiPartMessageContextType(MultiPartMessageContextType multiPartMessageContextType) {
    
    this.multiPartMessageContextType = multiPartMessageContextType;
    return this;
  }

   /**
   * Get multiPartMessageContextType
   * @return multiPartMessageContextType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTI_PART_MESSAGE_CONTEXT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MultiPartMessageContextType getMultiPartMessageContextType() {
    return multiPartMessageContextType;
  }


  @JsonProperty(JSON_PROPERTY_MULTI_PART_MESSAGE_CONTEXT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiPartMessageContextType(MultiPartMessageContextType multiPartMessageContextType) {
    this.multiPartMessageContextType = multiPartMessageContextType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageHeader messageHeader = (MessageHeader) o;
    return Objects.equals(this.headerVersion, messageHeader.headerVersion) &&
        Objects.equals(this.timestamp, messageHeader.timestamp) &&
        Objects.equals(this.sourceContext, messageHeader.sourceContext) &&
        Objects.equals(this.messageContext, messageHeader.messageContext) &&
        Objects.equals(this.multiPartMessageContextType, messageHeader.multiPartMessageContextType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headerVersion, timestamp, sourceContext, messageContext, multiPartMessageContextType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageHeader {\n");
    sb.append("    headerVersion: ").append(toIndentedString(headerVersion)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    sourceContext: ").append(toIndentedString(sourceContext)).append("\n");
    sb.append("    messageContext: ").append(toIndentedString(messageContext)).append("\n");
    sb.append("    multiPartMessageContextType: ").append(toIndentedString(multiPartMessageContextType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

