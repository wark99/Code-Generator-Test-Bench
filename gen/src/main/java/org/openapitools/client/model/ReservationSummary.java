/*
 * Hudini Elevate
 * Explore reference documentation for Hudini Elevate - A collection of APIs that application developers can utilize to extend hospitality functions on their experiences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developers@hudini.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExternalReservationID;
import org.openapitools.client.model.ReservationSummaryPaymentsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReservationSummary
 */
@JsonPropertyOrder({
  ReservationSummary.JSON_PROPERTY_ID,
  ReservationSummary.JSON_PROPERTY_EXTERNAL_IDS,
  ReservationSummary.JSON_PROPERTY_CHECKIN_DATE,
  ReservationSummary.JSON_PROPERTY_CHECKOUT_DATE,
  ReservationSummary.JSON_PROPERTY_STATUS,
  ReservationSummary.JSON_PROPERTY_NUM_ADULTS,
  ReservationSummary.JSON_PROPERTY_NUM_CHILDREN,
  ReservationSummary.JSON_PROPERTY_PAYMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:57.602746427Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ReservationSummary {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_EXTERNAL_IDS = "externalIds";
  private List<ExternalReservationID> externalIds;

  public static final String JSON_PROPERTY_CHECKIN_DATE = "checkinDate";
  private OffsetDateTime checkinDate;

  public static final String JSON_PROPERTY_CHECKOUT_DATE = "checkoutDate";
  private OffsetDateTime checkoutDate;

  /**
   * Status of reservation
   */
  public enum StatusEnum {
    CONFIRMED("CONFIRMED"),
    
    CHECKED_IN("CHECKED_IN"),
    
    EMPTY("");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_NUM_ADULTS = "numAdults";
  private Integer numAdults;

  public static final String JSON_PROPERTY_NUM_CHILDREN = "numChildren";
  private Integer numChildren;

  public static final String JSON_PROPERTY_PAYMENTS = "payments";
  private List<ReservationSummaryPaymentsInner> payments;

  public ReservationSummary() {
  }

  public ReservationSummary id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * System generated unique ID for a reservation
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ReservationSummary externalIds(List<ExternalReservationID> externalIds) {
    
    this.externalIds = externalIds;
    return this;
  }

  public ReservationSummary addExternalIdsItem(ExternalReservationID externalIdsItem) {
    if (this.externalIds == null) {
      this.externalIds = new ArrayList<>();
    }
    this.externalIds.add(externalIdsItem);
    return this;
  }

   /**
   * One or more reference IDs for a reservation. Uniqueness is not guarenteed.
   * @return externalIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ExternalReservationID> getExternalIds() {
    return externalIds;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalIds(List<ExternalReservationID> externalIds) {
    this.externalIds = externalIds;
  }


  public ReservationSummary checkinDate(OffsetDateTime checkinDate) {
    
    this.checkinDate = checkinDate;
    return this;
  }

   /**
   * Start of stay reservation
   * @return checkinDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECKIN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCheckinDate() {
    return checkinDate;
  }


  @JsonProperty(JSON_PROPERTY_CHECKIN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckinDate(OffsetDateTime checkinDate) {
    this.checkinDate = checkinDate;
  }


  public ReservationSummary checkoutDate(OffsetDateTime checkoutDate) {
    
    this.checkoutDate = checkoutDate;
    return this;
  }

   /**
   * End of stay reservation
   * @return checkoutDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECKOUT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCheckoutDate() {
    return checkoutDate;
  }


  @JsonProperty(JSON_PROPERTY_CHECKOUT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckoutDate(OffsetDateTime checkoutDate) {
    this.checkoutDate = checkoutDate;
  }


  public ReservationSummary status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of reservation
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ReservationSummary numAdults(Integer numAdults) {
    
    this.numAdults = numAdults;
    return this;
  }

   /**
   * Total number of adults on the reservation
   * @return numAdults
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_ADULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumAdults() {
    return numAdults;
  }


  @JsonProperty(JSON_PROPERTY_NUM_ADULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumAdults(Integer numAdults) {
    this.numAdults = numAdults;
  }


  public ReservationSummary numChildren(Integer numChildren) {
    
    this.numChildren = numChildren;
    return this;
  }

   /**
   * Total number of children on the reservation
   * @return numChildren
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumChildren() {
    return numChildren;
  }


  @JsonProperty(JSON_PROPERTY_NUM_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumChildren(Integer numChildren) {
    this.numChildren = numChildren;
  }


  public ReservationSummary payments(List<ReservationSummaryPaymentsInner> payments) {
    
    this.payments = payments;
    return this;
  }

  public ReservationSummary addPaymentsItem(ReservationSummaryPaymentsInner paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Get payments
   * @return payments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReservationSummaryPaymentsInner> getPayments() {
    return payments;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayments(List<ReservationSummaryPaymentsInner> payments) {
    this.payments = payments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationSummary reservationSummary = (ReservationSummary) o;
    return Objects.equals(this.id, reservationSummary.id) &&
        Objects.equals(this.externalIds, reservationSummary.externalIds) &&
        Objects.equals(this.checkinDate, reservationSummary.checkinDate) &&
        Objects.equals(this.checkoutDate, reservationSummary.checkoutDate) &&
        Objects.equals(this.status, reservationSummary.status) &&
        Objects.equals(this.numAdults, reservationSummary.numAdults) &&
        Objects.equals(this.numChildren, reservationSummary.numChildren) &&
        Objects.equals(this.payments, reservationSummary.payments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, externalIds, checkinDate, checkoutDate, status, numAdults, numChildren, payments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationSummary {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalIds: ").append(toIndentedString(externalIds)).append("\n");
    sb.append("    checkinDate: ").append(toIndentedString(checkinDate)).append("\n");
    sb.append("    checkoutDate: ").append(toIndentedString(checkoutDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    numAdults: ").append(toIndentedString(numAdults)).append("\n");
    sb.append("    numChildren: ").append(toIndentedString(numChildren)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

