/*
 * Euboul - Studio Backend
 * listing of all APIs of studio backend 
 *
 * The version of the OpenAPI document: 0.1.25
 * Contact: admin@cognitivegarage.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LibraryInputsInner;
import org.openapitools.client.model.LibraryKindEnum;
import org.openapitools.client.model.OntologyDatatypeEnum;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Library
 */
@JsonPropertyOrder({
  Library.JSON_PROPERTY_LIBRARY_KIND,
  Library.JSON_PROPERTY_NAME,
  Library.JSON_PROPERTY_NOTES,
  Library.JSON_PROPERTY_TOOLTIP,
  Library.JSON_PROPERTY_INPUT_COUNT,
  Library.JSON_PROPERTY_OUTPUT_COUNT,
  Library.JSON_PROPERTY_INPUTS,
  Library.JSON_PROPERTY_OUTPUTS,
  Library.JSON_PROPERTY_INPUT_DATA_TYPE,
  Library.JSON_PROPERTY_OUTPUT_DATA_TYPE,
  Library.JSON_PROPERTY_CODE,
  Library.JSON_PROPERTY_TENANTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:21.073249278Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Library {
  public static final String JSON_PROPERTY_LIBRARY_KIND = "libraryKind";
  private LibraryKindEnum libraryKind;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_TOOLTIP = "tooltip";
  private String tooltip;

  public static final String JSON_PROPERTY_INPUT_COUNT = "inputCount";
  private Integer inputCount;

  public static final String JSON_PROPERTY_OUTPUT_COUNT = "outputCount";
  private Integer outputCount;

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  private List<LibraryInputsInner> inputs;

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  private List<LibraryInputsInner> outputs;

  public static final String JSON_PROPERTY_INPUT_DATA_TYPE = "inputDataType";
  private OntologyDatatypeEnum inputDataType;

  public static final String JSON_PROPERTY_OUTPUT_DATA_TYPE = "outputDataType";
  private OntologyDatatypeEnum outputDataType;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  private List<String> tenants;

  public Library() {
  }

  public Library libraryKind(LibraryKindEnum libraryKind) {
    
    this.libraryKind = libraryKind;
    return this;
  }

   /**
   * Get libraryKind
   * @return libraryKind
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBRARY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LibraryKindEnum getLibraryKind() {
    return libraryKind;
  }


  @JsonProperty(JSON_PROPERTY_LIBRARY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibraryKind(LibraryKindEnum libraryKind) {
    this.libraryKind = libraryKind;
  }


  public Library name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Library notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public Library tooltip(String tooltip) {
    
    this.tooltip = tooltip;
    return this;
  }

   /**
   * Get tooltip
   * @return tooltip
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOOLTIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTooltip() {
    return tooltip;
  }


  @JsonProperty(JSON_PROPERTY_TOOLTIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTooltip(String tooltip) {
    this.tooltip = tooltip;
  }


  public Library inputCount(Integer inputCount) {
    
    this.inputCount = inputCount;
    return this;
  }

   /**
   * Get inputCount
   * @return inputCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInputCount() {
    return inputCount;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputCount(Integer inputCount) {
    this.inputCount = inputCount;
  }


  public Library outputCount(Integer outputCount) {
    
    this.outputCount = outputCount;
    return this;
  }

   /**
   * Get outputCount
   * @return outputCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOutputCount() {
    return outputCount;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputCount(Integer outputCount) {
    this.outputCount = outputCount;
  }


  public Library inputs(List<LibraryInputsInner> inputs) {
    
    this.inputs = inputs;
    return this;
  }

  public Library addInputsItem(LibraryInputsInner inputsItem) {
    if (this.inputs == null) {
      this.inputs = new ArrayList<>();
    }
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * Get inputs
   * @return inputs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LibraryInputsInner> getInputs() {
    return inputs;
  }


  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputs(List<LibraryInputsInner> inputs) {
    this.inputs = inputs;
  }


  public Library outputs(List<LibraryInputsInner> outputs) {
    
    this.outputs = outputs;
    return this;
  }

  public Library addOutputsItem(LibraryInputsInner outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

   /**
   * Get outputs
   * @return outputs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LibraryInputsInner> getOutputs() {
    return outputs;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputs(List<LibraryInputsInner> outputs) {
    this.outputs = outputs;
  }


  public Library inputDataType(OntologyDatatypeEnum inputDataType) {
    
    this.inputDataType = inputDataType;
    return this;
  }

   /**
   * Get inputDataType
   * @return inputDataType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OntologyDatatypeEnum getInputDataType() {
    return inputDataType;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputDataType(OntologyDatatypeEnum inputDataType) {
    this.inputDataType = inputDataType;
  }


  public Library outputDataType(OntologyDatatypeEnum outputDataType) {
    
    this.outputDataType = outputDataType;
    return this;
  }

   /**
   * Get outputDataType
   * @return outputDataType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OntologyDatatypeEnum getOutputDataType() {
    return outputDataType;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputDataType(OntologyDatatypeEnum outputDataType) {
    this.outputDataType = outputDataType;
  }


  public Library code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Library tenants(List<String> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public Library addTenantsItem(String tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Get tenants
   * @return tenants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenants(List<String> tenants) {
    this.tenants = tenants;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Library library = (Library) o;
    return Objects.equals(this.libraryKind, library.libraryKind) &&
        Objects.equals(this.name, library.name) &&
        Objects.equals(this.notes, library.notes) &&
        Objects.equals(this.tooltip, library.tooltip) &&
        Objects.equals(this.inputCount, library.inputCount) &&
        Objects.equals(this.outputCount, library.outputCount) &&
        Objects.equals(this.inputs, library.inputs) &&
        Objects.equals(this.outputs, library.outputs) &&
        Objects.equals(this.inputDataType, library.inputDataType) &&
        Objects.equals(this.outputDataType, library.outputDataType) &&
        Objects.equals(this.code, library.code) &&
        Objects.equals(this.tenants, library.tenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(libraryKind, name, notes, tooltip, inputCount, outputCount, inputs, outputs, inputDataType, outputDataType, code, tenants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Library {\n");
    sb.append("    libraryKind: ").append(toIndentedString(libraryKind)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    tooltip: ").append(toIndentedString(tooltip)).append("\n");
    sb.append("    inputCount: ").append(toIndentedString(inputCount)).append("\n");
    sb.append("    outputCount: ").append(toIndentedString(outputCount)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    inputDataType: ").append(toIndentedString(inputDataType)).append("\n");
    sb.append("    outputDataType: ").append(toIndentedString(outputDataType)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

