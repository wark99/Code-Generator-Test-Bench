/*
 * CIC-NEW
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CarstockComparableResponseMatch1;
import org.openapitools.client.model.CarstockGenericRendersResponseImagesInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CarstockComparableResponse
 */
@JsonPropertyOrder({
  CarstockComparableResponse.JSON_PROPERTY_IMAGES,
  CarstockComparableResponse.JSON_PROPERTY_ACTIVE,
  CarstockComparableResponse.JSON_PROPERTY_AVAILABLE,
  CarstockComparableResponse.JSON_PROPERTY_IMAGE_COUNT,
  CarstockComparableResponse.JSON_PROPERTY_SOURCE_CARSTOCK_ID,
  CarstockComparableResponse.JSON_PROPERTY_SOURCE_CARSTOCK_V_I_N,
  CarstockComparableResponse.JSON_PROPERTY_MODE,
  CarstockComparableResponse.JSON_PROPERTY_MATCH,
  CarstockComparableResponse.JSON_PROPERTY_MANUAL_ADJUSTMENT,
  CarstockComparableResponse.JSON_PROPERTY_UPDATER
})
@JsonTypeName("carstockComparableResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:13:48.943071954Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CarstockComparableResponse {
  public static final String JSON_PROPERTY_IMAGES = "images";
  private List<CarstockGenericRendersResponseImagesInner> images;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AVAILABLE = "available";
  private Boolean available;

  public static final String JSON_PROPERTY_IMAGE_COUNT = "imageCount";
  private Integer imageCount;

  public static final String JSON_PROPERTY_SOURCE_CARSTOCK_ID = "sourceCarstockId";
  private Integer sourceCarstockId;

  public static final String JSON_PROPERTY_SOURCE_CARSTOCK_V_I_N = "sourceCarstockVIN";
  private String sourceCarstockVIN;

  /**
   * Gets or Sets mode
   */
  public enum ModeEnum {
    AUTOMATIC("AUTOMATIC"),
    
    MANUAL("MANUAL");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MODE = "mode";
  private ModeEnum mode;

  public static final String JSON_PROPERTY_MATCH = "match";
  private CarstockComparableResponseMatch1 match;

  public static final String JSON_PROPERTY_MANUAL_ADJUSTMENT = "manualAdjustment";
  private Boolean manualAdjustment;

  public static final String JSON_PROPERTY_UPDATER = "updater";
  private String updater;

  public CarstockComparableResponse() {
  }

  public CarstockComparableResponse images(List<CarstockGenericRendersResponseImagesInner> images) {
    
    this.images = images;
    return this;
  }

  public CarstockComparableResponse addImagesItem(CarstockGenericRendersResponseImagesInner imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CarstockGenericRendersResponseImagesInner> getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImages(List<CarstockGenericRendersResponseImagesInner> images) {
    this.images = images;
  }


  public CarstockComparableResponse active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CarstockComparableResponse available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * Get available
   * @return available
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAvailable() {
    return available;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public CarstockComparableResponse imageCount(Integer imageCount) {
    
    this.imageCount = imageCount;
    return this;
  }

   /**
   * Get imageCount
   * @return imageCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getImageCount() {
    return imageCount;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageCount(Integer imageCount) {
    this.imageCount = imageCount;
  }


  public CarstockComparableResponse sourceCarstockId(Integer sourceCarstockId) {
    
    this.sourceCarstockId = sourceCarstockId;
    return this;
  }

   /**
   * Get sourceCarstockId
   * @return sourceCarstockId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_CARSTOCK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSourceCarstockId() {
    return sourceCarstockId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_CARSTOCK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceCarstockId(Integer sourceCarstockId) {
    this.sourceCarstockId = sourceCarstockId;
  }


  public CarstockComparableResponse sourceCarstockVIN(String sourceCarstockVIN) {
    
    this.sourceCarstockVIN = sourceCarstockVIN;
    return this;
  }

   /**
   * Get sourceCarstockVIN
   * @return sourceCarstockVIN
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_CARSTOCK_V_I_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceCarstockVIN() {
    return sourceCarstockVIN;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_CARSTOCK_V_I_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceCarstockVIN(String sourceCarstockVIN) {
    this.sourceCarstockVIN = sourceCarstockVIN;
  }


  public CarstockComparableResponse mode(ModeEnum mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModeEnum getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public CarstockComparableResponse match(CarstockComparableResponseMatch1 match) {
    
    this.match = match;
    return this;
  }

   /**
   * Get match
   * @return match
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CarstockComparableResponseMatch1 getMatch() {
    return match;
  }


  @JsonProperty(JSON_PROPERTY_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatch(CarstockComparableResponseMatch1 match) {
    this.match = match;
  }


  public CarstockComparableResponse manualAdjustment(Boolean manualAdjustment) {
    
    this.manualAdjustment = manualAdjustment;
    return this;
  }

   /**
   * Get manualAdjustment
   * @return manualAdjustment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUAL_ADJUSTMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManualAdjustment() {
    return manualAdjustment;
  }


  @JsonProperty(JSON_PROPERTY_MANUAL_ADJUSTMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManualAdjustment(Boolean manualAdjustment) {
    this.manualAdjustment = manualAdjustment;
  }


  public CarstockComparableResponse updater(String updater) {
    
    this.updater = updater;
    return this;
  }

   /**
   * Get updater
   * @return updater
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdater() {
    return updater;
  }


  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdater(String updater) {
    this.updater = updater;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarstockComparableResponse carstockComparableResponse = (CarstockComparableResponse) o;
    return Objects.equals(this.images, carstockComparableResponse.images) &&
        Objects.equals(this.active, carstockComparableResponse.active) &&
        Objects.equals(this.available, carstockComparableResponse.available) &&
        Objects.equals(this.imageCount, carstockComparableResponse.imageCount) &&
        Objects.equals(this.sourceCarstockId, carstockComparableResponse.sourceCarstockId) &&
        Objects.equals(this.sourceCarstockVIN, carstockComparableResponse.sourceCarstockVIN) &&
        Objects.equals(this.mode, carstockComparableResponse.mode) &&
        Objects.equals(this.match, carstockComparableResponse.match) &&
        Objects.equals(this.manualAdjustment, carstockComparableResponse.manualAdjustment) &&
        Objects.equals(this.updater, carstockComparableResponse.updater);
  }

  @Override
  public int hashCode() {
    return Objects.hash(images, active, available, imageCount, sourceCarstockId, sourceCarstockVIN, mode, match, manualAdjustment, updater);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarstockComparableResponse {\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    imageCount: ").append(toIndentedString(imageCount)).append("\n");
    sb.append("    sourceCarstockId: ").append(toIndentedString(sourceCarstockId)).append("\n");
    sb.append("    sourceCarstockVIN: ").append(toIndentedString(sourceCarstockVIN)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    manualAdjustment: ").append(toIndentedString(manualAdjustment)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

