/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Inquiry;
import org.openapitools.client.model.Names;
import org.openapitools.client.model.Phone;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InquiryRecords
 */
@JsonPropertyOrder({
  InquiryRecords.JSON_PROPERTY_ADDRESSES,
  InquiryRecords.JSON_PROPERTY_EMPLOYMENT,
  InquiryRecords.JSON_PROPERTY_INQUIRY,
  InquiryRecords.JSON_PROPERTY_NAMES,
  InquiryRecords.JSON_PROPERTY_PHONE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InquiryRecords {
  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<String> addresses;

  public static final String JSON_PROPERTY_EMPLOYMENT = "employment";
  private String employment;

  public static final String JSON_PROPERTY_INQUIRY = "inquiry";
  private Inquiry inquiry;

  public static final String JSON_PROPERTY_NAMES = "names";
  private List<Names> names;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private Phone phone;

  public InquiryRecords() {
  }

  public InquiryRecords addresses(List<String> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public InquiryRecords addAddressesItem(String addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }


  public InquiryRecords employment(String employment) {
    
    this.employment = employment;
    return this;
  }

   /**
   * Get employment
   * @return employment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmployment() {
    return employment;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployment(String employment) {
    this.employment = employment;
  }


  public InquiryRecords inquiry(Inquiry inquiry) {
    
    this.inquiry = inquiry;
    return this;
  }

   /**
   * Get inquiry
   * @return inquiry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INQUIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Inquiry getInquiry() {
    return inquiry;
  }


  @JsonProperty(JSON_PROPERTY_INQUIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInquiry(Inquiry inquiry) {
    this.inquiry = inquiry;
  }


  public InquiryRecords names(List<Names> names) {
    
    this.names = names;
    return this;
  }

  public InquiryRecords addNamesItem(Names namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Names> getNames() {
    return names;
  }


  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNames(List<Names> names) {
    this.names = names;
  }


  public InquiryRecords phone(Phone phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Phone getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(Phone phone) {
    this.phone = phone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InquiryRecords inquiryRecords = (InquiryRecords) o;
    return Objects.equals(this.addresses, inquiryRecords.addresses) &&
        Objects.equals(this.employment, inquiryRecords.employment) &&
        Objects.equals(this.inquiry, inquiryRecords.inquiry) &&
        Objects.equals(this.names, inquiryRecords.names) &&
        Objects.equals(this.phone, inquiryRecords.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, employment, inquiry, names, phone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InquiryRecords {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    employment: ").append(toIndentedString(employment)).append("\n");
    sb.append("    inquiry: ").append(toIndentedString(inquiry)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

