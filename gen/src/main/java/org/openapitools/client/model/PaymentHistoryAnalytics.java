/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PaymentHistoryAccountSummary;
import org.openapitools.client.model.PaymentHistoryCustomerMonthlySummary;
import org.openapitools.client.model.PaymentHistoryTransactionsSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Payment History computed analytics
 */
@JsonPropertyOrder({
  PaymentHistoryAnalytics.JSON_PROPERTY_STATUS,
  PaymentHistoryAnalytics.JSON_PROPERTY_RISK_SCORE,
  PaymentHistoryAnalytics.JSON_PROPERTY_TRANSACTION_HISTORY,
  PaymentHistoryAnalytics.JSON_PROPERTY_TRANSACTIONS_SUMMARY,
  PaymentHistoryAnalytics.JSON_PROPERTY_ACCOUNT_SUMMARIES,
  PaymentHistoryAnalytics.JSON_PROPERTY_CUSTOMER_SUMMARY_BY_MONTHS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T15:48:08.238993781Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentHistoryAnalytics {
  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_RISK_SCORE = "riskScore";
  private BigDecimal riskScore;

  public static final String JSON_PROPERTY_TRANSACTION_HISTORY = "transactionHistory";
  private Integer transactionHistory;

  public static final String JSON_PROPERTY_TRANSACTIONS_SUMMARY = "transactionsSummary";
  private PaymentHistoryTransactionsSummary transactionsSummary;

  public static final String JSON_PROPERTY_ACCOUNT_SUMMARIES = "accountSummaries";
  private List<PaymentHistoryAccountSummary> accountSummaries;

  public static final String JSON_PROPERTY_CUSTOMER_SUMMARY_BY_MONTHS = "customerSummaryByMonths";
  private List<PaymentHistoryCustomerMonthlySummary> customerSummaryByMonths;

  public PaymentHistoryAnalytics() {
  }

  public PaymentHistoryAnalytics status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Report status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public PaymentHistoryAnalytics riskScore(BigDecimal riskScore) {
    
    this.riskScore = riskScore;
    return this;
  }

   /**
   * Calculated risk score
   * @return riskScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRiskScore() {
    return riskScore;
  }


  @JsonProperty(JSON_PROPERTY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskScore(BigDecimal riskScore) {
    this.riskScore = riskScore;
  }


  public PaymentHistoryAnalytics transactionHistory(Integer transactionHistory) {
    
    this.transactionHistory = transactionHistory;
    return this;
  }

   /**
   * Months of transactions
   * @return transactionHistory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransactionHistory() {
    return transactionHistory;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionHistory(Integer transactionHistory) {
    this.transactionHistory = transactionHistory;
  }


  public PaymentHistoryAnalytics transactionsSummary(PaymentHistoryTransactionsSummary transactionsSummary) {
    
    this.transactionsSummary = transactionsSummary;
    return this;
  }

   /**
   * Get transactionsSummary
   * @return transactionsSummary
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentHistoryTransactionsSummary getTransactionsSummary() {
    return transactionsSummary;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionsSummary(PaymentHistoryTransactionsSummary transactionsSummary) {
    this.transactionsSummary = transactionsSummary;
  }


  public PaymentHistoryAnalytics accountSummaries(List<PaymentHistoryAccountSummary> accountSummaries) {
    
    this.accountSummaries = accountSummaries;
    return this;
  }

  public PaymentHistoryAnalytics addAccountSummariesItem(PaymentHistoryAccountSummary accountSummariesItem) {
    if (this.accountSummaries == null) {
      this.accountSummaries = new ArrayList<>();
    }
    this.accountSummaries.add(accountSummariesItem);
    return this;
  }

   /**
   * Account-level summary of transactions
   * @return accountSummaries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PaymentHistoryAccountSummary> getAccountSummaries() {
    return accountSummaries;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountSummaries(List<PaymentHistoryAccountSummary> accountSummaries) {
    this.accountSummaries = accountSummaries;
  }


  public PaymentHistoryAnalytics customerSummaryByMonths(List<PaymentHistoryCustomerMonthlySummary> customerSummaryByMonths) {
    
    this.customerSummaryByMonths = customerSummaryByMonths;
    return this;
  }

  public PaymentHistoryAnalytics addCustomerSummaryByMonthsItem(PaymentHistoryCustomerMonthlySummary customerSummaryByMonthsItem) {
    if (this.customerSummaryByMonths == null) {
      this.customerSummaryByMonths = new ArrayList<>();
    }
    this.customerSummaryByMonths.add(customerSummaryByMonthsItem);
    return this;
  }

   /**
   * Customer-level summary of transactions per month
   * @return customerSummaryByMonths
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_SUMMARY_BY_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PaymentHistoryCustomerMonthlySummary> getCustomerSummaryByMonths() {
    return customerSummaryByMonths;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_SUMMARY_BY_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerSummaryByMonths(List<PaymentHistoryCustomerMonthlySummary> customerSummaryByMonths) {
    this.customerSummaryByMonths = customerSummaryByMonths;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentHistoryAnalytics paymentHistoryAnalytics = (PaymentHistoryAnalytics) o;
    return Objects.equals(this.status, paymentHistoryAnalytics.status) &&
        Objects.equals(this.riskScore, paymentHistoryAnalytics.riskScore) &&
        Objects.equals(this.transactionHistory, paymentHistoryAnalytics.transactionHistory) &&
        Objects.equals(this.transactionsSummary, paymentHistoryAnalytics.transactionsSummary) &&
        Objects.equals(this.accountSummaries, paymentHistoryAnalytics.accountSummaries) &&
        Objects.equals(this.customerSummaryByMonths, paymentHistoryAnalytics.customerSummaryByMonths);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, riskScore, transactionHistory, transactionsSummary, accountSummaries, customerSummaryByMonths);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentHistoryAnalytics {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    riskScore: ").append(toIndentedString(riskScore)).append("\n");
    sb.append("    transactionHistory: ").append(toIndentedString(transactionHistory)).append("\n");
    sb.append("    transactionsSummary: ").append(toIndentedString(transactionsSummary)).append("\n");
    sb.append("    accountSummaries: ").append(toIndentedString(accountSummaries)).append("\n");
    sb.append("    customerSummaryByMonths: ").append(toIndentedString(customerSummaryByMonths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

