/*
 * concreateAI-test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetTransactions200ResponseDataInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetAccounts200ResponseDataInner
 */
@JsonPropertyOrder({
  GetAccounts200ResponseDataInner.JSON_PROPERTY_ACCOUNT_CODE,
  GetAccounts200ResponseDataInner.JSON_PROPERTY_ACCOUNT_ID,
  GetAccounts200ResponseDataInner.JSON_PROPERTY_ACCOUNT_TYPE,
  GetAccounts200ResponseDataInner.JSON_PROPERTY_HISTORY_TRANSACTION
})
@JsonTypeName("getAccounts_200_response_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:12.335744348Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class GetAccounts200ResponseDataInner {
  public static final String JSON_PROPERTY_ACCOUNT_CODE = "account_code";
  private String accountCode;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private BigDecimal accountId;

  public static final String JSON_PROPERTY_ACCOUNT_TYPE = "account_type";
  private String accountType;

  public static final String JSON_PROPERTY_HISTORY_TRANSACTION = "history_transaction";
  private List<GetTransactions200ResponseDataInner> historyTransaction;

  public GetAccounts200ResponseDataInner() {
  }

  public GetAccounts200ResponseDataInner accountCode(String accountCode) {
    
    this.accountCode = accountCode;
    return this;
  }

   /**
   * Get accountCode
   * @return accountCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountCode() {
    return accountCode;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCode(String accountCode) {
    this.accountCode = accountCode;
  }


  public GetAccounts200ResponseDataInner accountId(BigDecimal accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(BigDecimal accountId) {
    this.accountId = accountId;
  }


  public GetAccounts200ResponseDataInner accountType(String accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountType() {
    return accountType;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public GetAccounts200ResponseDataInner historyTransaction(List<GetTransactions200ResponseDataInner> historyTransaction) {
    
    this.historyTransaction = historyTransaction;
    return this;
  }

  public GetAccounts200ResponseDataInner addHistoryTransactionItem(GetTransactions200ResponseDataInner historyTransactionItem) {
    if (this.historyTransaction == null) {
      this.historyTransaction = new ArrayList<>();
    }
    this.historyTransaction.add(historyTransactionItem);
    return this;
  }

   /**
   * Get historyTransaction
   * @return historyTransaction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HISTORY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GetTransactions200ResponseDataInner> getHistoryTransaction() {
    return historyTransaction;
  }


  @JsonProperty(JSON_PROPERTY_HISTORY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryTransaction(List<GetTransactions200ResponseDataInner> historyTransaction) {
    this.historyTransaction = historyTransaction;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccounts200ResponseDataInner getAccounts200ResponseDataInner = (GetAccounts200ResponseDataInner) o;
    return Objects.equals(this.accountCode, getAccounts200ResponseDataInner.accountCode) &&
        Objects.equals(this.accountId, getAccounts200ResponseDataInner.accountId) &&
        Objects.equals(this.accountType, getAccounts200ResponseDataInner.accountType) &&
        Objects.equals(this.historyTransaction, getAccounts200ResponseDataInner.historyTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCode, accountId, accountType, historyTransaction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccounts200ResponseDataInner {\n");
    sb.append("    accountCode: ").append(toIndentedString(accountCode)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    historyTransaction: ").append(toIndentedString(historyTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

