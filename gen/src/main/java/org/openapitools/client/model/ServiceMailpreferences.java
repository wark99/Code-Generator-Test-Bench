/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServiceMailpreferences
 */
@JsonPropertyOrder({
  ServiceMailpreferences.JSON_PROPERTY_DEFAULT_PERMISSIONS,
  ServiceMailpreferences.JSON_PROPERTY_SPAM_FILTER_ENABLED,
  ServiceMailpreferences.JSON_PROPERTY_PROMOTION_FILTER_ENABLED,
  ServiceMailpreferences.JSON_PROPERTY_AUTHORIZED_SENDERS,
  ServiceMailpreferences.JSON_PROPERTY_BLOCKED_SENDERS,
  ServiceMailpreferences.JSON_PROPERTY_CREATED_AT,
  ServiceMailpreferences.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ServiceMailpreferences {
  public static final String JSON_PROPERTY_DEFAULT_PERMISSIONS = "default_permissions";
  private Object defaultPermissions;

  public static final String JSON_PROPERTY_SPAM_FILTER_ENABLED = "spam_filter_enabled";
  private Boolean spamFilterEnabled;

  public static final String JSON_PROPERTY_PROMOTION_FILTER_ENABLED = "promotion_filter_enabled";
  private Boolean promotionFilterEnabled;

  public static final String JSON_PROPERTY_AUTHORIZED_SENDERS = "authorized_senders";
  private List<String> authorizedSenders = new ArrayList<>();

  public static final String JSON_PROPERTY_BLOCKED_SENDERS = "blocked_senders";
  private List<String> blockedSenders = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Integer updatedAt;

  public ServiceMailpreferences() {
  }

  public ServiceMailpreferences defaultPermissions(Object defaultPermissions) {
    
    this.defaultPermissions = defaultPermissions;
    return this;
  }

   /**
   * Get defaultPermissions
   * @return defaultPermissions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULT_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDefaultPermissions() {
    return defaultPermissions;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultPermissions(Object defaultPermissions) {
    this.defaultPermissions = defaultPermissions;
  }


  public ServiceMailpreferences spamFilterEnabled(Boolean spamFilterEnabled) {
    
    this.spamFilterEnabled = spamFilterEnabled;
    return this;
  }

   /**
   * Get spamFilterEnabled
   * @return spamFilterEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SPAM_FILTER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSpamFilterEnabled() {
    return spamFilterEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SPAM_FILTER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpamFilterEnabled(Boolean spamFilterEnabled) {
    this.spamFilterEnabled = spamFilterEnabled;
  }


  public ServiceMailpreferences promotionFilterEnabled(Boolean promotionFilterEnabled) {
    
    this.promotionFilterEnabled = promotionFilterEnabled;
    return this;
  }

   /**
   * Get promotionFilterEnabled
   * @return promotionFilterEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMOTION_FILTER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPromotionFilterEnabled() {
    return promotionFilterEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PROMOTION_FILTER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromotionFilterEnabled(Boolean promotionFilterEnabled) {
    this.promotionFilterEnabled = promotionFilterEnabled;
  }


  public ServiceMailpreferences authorizedSenders(List<String> authorizedSenders) {
    
    this.authorizedSenders = authorizedSenders;
    return this;
  }

  public ServiceMailpreferences addAuthorizedSendersItem(String authorizedSendersItem) {
    if (this.authorizedSenders == null) {
      this.authorizedSenders = new ArrayList<>();
    }
    this.authorizedSenders.add(authorizedSendersItem);
    return this;
  }

   /**
   * Get authorizedSenders
   * @return authorizedSenders
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHORIZED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getAuthorizedSenders() {
    return authorizedSenders;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthorizedSenders(List<String> authorizedSenders) {
    this.authorizedSenders = authorizedSenders;
  }


  public ServiceMailpreferences blockedSenders(List<String> blockedSenders) {
    
    this.blockedSenders = blockedSenders;
    return this;
  }

  public ServiceMailpreferences addBlockedSendersItem(String blockedSendersItem) {
    if (this.blockedSenders == null) {
      this.blockedSenders = new ArrayList<>();
    }
    this.blockedSenders.add(blockedSendersItem);
    return this;
  }

   /**
   * Get blockedSenders
   * @return blockedSenders
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCKED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getBlockedSenders() {
    return blockedSenders;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED_SENDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockedSenders(List<String> blockedSenders) {
    this.blockedSenders = blockedSenders;
  }


  public ServiceMailpreferences createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;Service Mail preferences&#x60; has been created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public ServiceMailpreferences updatedAt(Integer updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp &#x60;Service Mail preferences&#x60; has been updated
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceMailpreferences serviceMailpreferences = (ServiceMailpreferences) o;
    return Objects.equals(this.defaultPermissions, serviceMailpreferences.defaultPermissions) &&
        Objects.equals(this.spamFilterEnabled, serviceMailpreferences.spamFilterEnabled) &&
        Objects.equals(this.promotionFilterEnabled, serviceMailpreferences.promotionFilterEnabled) &&
        Objects.equals(this.authorizedSenders, serviceMailpreferences.authorizedSenders) &&
        Objects.equals(this.blockedSenders, serviceMailpreferences.blockedSenders) &&
        Objects.equals(this.createdAt, serviceMailpreferences.createdAt) &&
        Objects.equals(this.updatedAt, serviceMailpreferences.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultPermissions, spamFilterEnabled, promotionFilterEnabled, authorizedSenders, blockedSenders, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceMailpreferences {\n");
    sb.append("    defaultPermissions: ").append(toIndentedString(defaultPermissions)).append("\n");
    sb.append("    spamFilterEnabled: ").append(toIndentedString(spamFilterEnabled)).append("\n");
    sb.append("    promotionFilterEnabled: ").append(toIndentedString(promotionFilterEnabled)).append("\n");
    sb.append("    authorizedSenders: ").append(toIndentedString(authorizedSenders)).append("\n");
    sb.append("    blockedSenders: ").append(toIndentedString(blockedSenders)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

