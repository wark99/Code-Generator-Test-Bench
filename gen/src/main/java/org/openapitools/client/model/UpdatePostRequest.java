/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdatePostRequest
 */
@JsonPropertyOrder({
  UpdatePostRequest.JSON_PROPERTY_ID,
  UpdatePostRequest.JSON_PROPERTY_IS_PINNED,
  UpdatePostRequest.JSON_PROPERTY_MESSAGE,
  UpdatePostRequest.JSON_PROPERTY_HAS_REACTIONS,
  UpdatePostRequest.JSON_PROPERTY_PROPS
})
@JsonTypeName("UpdatePost_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UpdatePostRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IS_PINNED = "is_pinned";
  private Boolean isPinned;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_HAS_REACTIONS = "has_reactions";
  private Boolean hasReactions;

  public static final String JSON_PROPERTY_PROPS = "props";
  private String props;

  public UpdatePostRequest() {
  }

  public UpdatePostRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the post to update
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdatePostRequest isPinned(Boolean isPinned) {
    
    this.isPinned = isPinned;
    return this;
  }

   /**
   * Set to &#x60;true&#x60; to pin the post to the channel it is in
   * @return isPinned
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PINNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsPinned() {
    return isPinned;
  }


  @JsonProperty(JSON_PROPERTY_IS_PINNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPinned(Boolean isPinned) {
    this.isPinned = isPinned;
  }


  public UpdatePostRequest message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * The message text of the post
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public UpdatePostRequest hasReactions(Boolean hasReactions) {
    
    this.hasReactions = hasReactions;
    return this;
  }

   /**
   * Set to &#x60;true&#x60; if the post has reactions to it
   * @return hasReactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_REACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasReactions() {
    return hasReactions;
  }


  @JsonProperty(JSON_PROPERTY_HAS_REACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasReactions(Boolean hasReactions) {
    this.hasReactions = hasReactions;
  }


  public UpdatePostRequest props(String props) {
    
    this.props = props;
    return this;
  }

   /**
   * A general JSON property bag to attach to the post
   * @return props
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProps() {
    return props;
  }


  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProps(String props) {
    this.props = props;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatePostRequest updatePostRequest = (UpdatePostRequest) o;
    return Objects.equals(this.id, updatePostRequest.id) &&
        Objects.equals(this.isPinned, updatePostRequest.isPinned) &&
        Objects.equals(this.message, updatePostRequest.message) &&
        Objects.equals(this.hasReactions, updatePostRequest.hasReactions) &&
        Objects.equals(this.props, updatePostRequest.props);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isPinned, message, hasReactions, props);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatePostRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isPinned: ").append(toIndentedString(isPinned)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    hasReactions: ").append(toIndentedString(hasReactions)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

