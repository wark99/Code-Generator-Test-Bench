/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExternInvitationFileAccess
 */
@JsonPropertyOrder({
  ExternInvitationFileAccess.JSON_PROPERTY_ID,
  ExternInvitationFileAccess.JSON_PROPERTY_ACCESS,
  ExternInvitationFileAccess.JSON_PROPERTY_NAME,
  ExternInvitationFileAccess.JSON_PROPERTY_RIGHT,
  ExternInvitationFileAccess.JSON_PROPERTY_COLOR,
  ExternInvitationFileAccess.JSON_PROPERTY_STATUS,
  ExternInvitationFileAccess.JSON_PROPERTY_EMAIL,
  ExternInvitationFileAccess.JSON_PROPERTY_USER,
  ExternInvitationFileAccess.JSON_PROPERTY_INVITATION_DRIVE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ExternInvitationFileAccess {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_ACCESS = "access";
  private String access;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_RIGHT = "right";
  private String right;

  public static final String JSON_PROPERTY_COLOR = "color";
  private Integer color;

  /**
   * Status of access
   */
  public enum StatusEnum {
    ACCEPTED("accepted"),
    
    CANCELLED("cancelled"),
    
    EXPIRED("expired"),
    
    PENDING("pending"),
    
    REJECTED("rejected");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public static final String JSON_PROPERTY_INVITATION_DRIVE_ID = "invitation_drive_id";
  private Integer invitationDriveId;

  public ExternInvitationFileAccess() {
  }

  public ExternInvitationFileAccess id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Extern Invitation File Access Identifier, can be team identifier, user identifier, invitation identifier
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ExternInvitationFileAccess access(String access) {
    
    this.access = access;
    return this;
  }

   /**
   * Access type
   * @return access
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccess(String access) {
    this.access = access;
  }


  public ExternInvitationFileAccess name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Extern Invitation File Access name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExternInvitationFileAccess right(String right) {
    
    this.right = right;
    return this;
  }

   /**
   * Access right
   * @return right
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRight() {
    return right;
  }


  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRight(String right) {
    this.right = right;
  }


  public ExternInvitationFileAccess color(Integer color) {
    
    this.color = color;
    return this;
  }

   /**
   * Access color
   * @return color
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setColor(Integer color) {
    this.color = color;
  }


  public ExternInvitationFileAccess status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of access
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ExternInvitationFileAccess email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email if available
   * @return email
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public ExternInvitationFileAccess user(User user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(User user) {
    this.user = user;
  }


  public ExternInvitationFileAccess invitationDriveId(Integer invitationDriveId) {
    
    this.invitationDriveId = invitationDriveId;
    return this;
  }

   /**
   * Access was given with the access to the drive id
   * @return invitationDriveId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVITATION_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInvitationDriveId() {
    return invitationDriveId;
  }


  @JsonProperty(JSON_PROPERTY_INVITATION_DRIVE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvitationDriveId(Integer invitationDriveId) {
    this.invitationDriveId = invitationDriveId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternInvitationFileAccess externInvitationFileAccess = (ExternInvitationFileAccess) o;
    return Objects.equals(this.id, externInvitationFileAccess.id) &&
        Objects.equals(this.access, externInvitationFileAccess.access) &&
        Objects.equals(this.name, externInvitationFileAccess.name) &&
        Objects.equals(this.right, externInvitationFileAccess.right) &&
        Objects.equals(this.color, externInvitationFileAccess.color) &&
        Objects.equals(this.status, externInvitationFileAccess.status) &&
        Objects.equals(this.email, externInvitationFileAccess.email) &&
        Objects.equals(this.user, externInvitationFileAccess.user) &&
        Objects.equals(this.invitationDriveId, externInvitationFileAccess.invitationDriveId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, access, name, right, color, status, email, user, invitationDriveId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternInvitationFileAccess {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    right: ").append(toIndentedString(right)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    invitationDriveId: ").append(toIndentedString(invitationDriveId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

