/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TeamStats
 */
@JsonPropertyOrder({
  TeamStats.JSON_PROPERTY_TEAM_ID,
  TeamStats.JSON_PROPERTY_TOTAL_MEMBER_COUNT,
  TeamStats.JSON_PROPERTY_ACTIVE_MEMBER_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TeamStats {
  public static final String JSON_PROPERTY_TEAM_ID = "team_id";
  private String teamId;

  public static final String JSON_PROPERTY_TOTAL_MEMBER_COUNT = "total_member_count";
  private Integer totalMemberCount;

  public static final String JSON_PROPERTY_ACTIVE_MEMBER_COUNT = "active_member_count";
  private Integer activeMemberCount;

  public TeamStats() {
  }

  public TeamStats teamId(String teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }


  public TeamStats totalMemberCount(Integer totalMemberCount) {
    
    this.totalMemberCount = totalMemberCount;
    return this;
  }

   /**
   * Get totalMemberCount
   * @return totalMemberCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_MEMBER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalMemberCount() {
    return totalMemberCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_MEMBER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalMemberCount(Integer totalMemberCount) {
    this.totalMemberCount = totalMemberCount;
  }


  public TeamStats activeMemberCount(Integer activeMemberCount) {
    
    this.activeMemberCount = activeMemberCount;
    return this;
  }

   /**
   * Get activeMemberCount
   * @return activeMemberCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_MEMBER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActiveMemberCount() {
    return activeMemberCount;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_MEMBER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveMemberCount(Integer activeMemberCount) {
    this.activeMemberCount = activeMemberCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamStats teamStats = (TeamStats) o;
    return Objects.equals(this.teamId, teamStats.teamId) &&
        Objects.equals(this.totalMemberCount, teamStats.totalMemberCount) &&
        Objects.equals(this.activeMemberCount, teamStats.activeMemberCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, totalMemberCount, activeMemberCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamStats {\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    totalMemberCount: ").append(toIndentedString(totalMemberCount)).append("\n");
    sb.append("    activeMemberCount: ").append(toIndentedString(activeMemberCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

