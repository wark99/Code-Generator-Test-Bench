/*
 * Youtube Music
 * Require authentication for all route except /auth and /auth/new.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SongInfor
 */
@JsonPropertyOrder({
  SongInfor.JSON_PROPERTY_YOUTUBE_ID,
  SongInfor.JSON_PROPERTY_GENRE,
  SongInfor.JSON_PROPERTY_TITLE,
  SongInfor.JSON_PROPERTY_ARTIST,
  SongInfor.JSON_PROPERTY_IMAGE,
  SongInfor.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:03.133651353Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SongInfor {
  public static final String JSON_PROPERTY_YOUTUBE_ID = "youtubeId";
  private String youtubeId;

  public static final String JSON_PROPERTY_GENRE = "genre";
  private String genre;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_ARTIST = "artist";
  private String artist;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public SongInfor() {
  }

  public SongInfor youtubeId(String youtubeId) {
    
    this.youtubeId = youtubeId;
    return this;
  }

   /**
   * Get youtubeId
   * @return youtubeId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YOUTUBE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYoutubeId() {
    return youtubeId;
  }


  @JsonProperty(JSON_PROPERTY_YOUTUBE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYoutubeId(String youtubeId) {
    this.youtubeId = youtubeId;
  }


  public SongInfor genre(String genre) {
    
    this.genre = genre;
    return this;
  }

   /**
   * Get genre
   * @return genre
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGenre() {
    return genre;
  }


  @JsonProperty(JSON_PROPERTY_GENRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGenre(String genre) {
    this.genre = genre;
  }


  public SongInfor title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public SongInfor artist(String artist) {
    
    this.artist = artist;
    return this;
  }

   /**
   * Get artist
   * @return artist
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARTIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getArtist() {
    return artist;
  }


  @JsonProperty(JSON_PROPERTY_ARTIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArtist(String artist) {
    this.artist = artist;
  }


  public SongInfor image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }


  public SongInfor description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Sometime this is blank, due to youtube description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SongInfor songInfor = (SongInfor) o;
    return Objects.equals(this.youtubeId, songInfor.youtubeId) &&
        Objects.equals(this.genre, songInfor.genre) &&
        Objects.equals(this.title, songInfor.title) &&
        Objects.equals(this.artist, songInfor.artist) &&
        Objects.equals(this.image, songInfor.image) &&
        Objects.equals(this.description, songInfor.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(youtubeId, genre, title, artist, image, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SongInfor {\n");
    sb.append("    youtubeId: ").append(toIndentedString(youtubeId)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    artist: ").append(toIndentedString(artist)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

