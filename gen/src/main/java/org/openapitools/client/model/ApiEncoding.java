/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ApiEncodingPreset;
import org.openapitools.client.model.ApiEncodingStream;
import org.openapitools.client.model.Bool;
import org.openapitools.client.model.Datetime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Encoding
 */
@JsonPropertyOrder({
  ApiEncoding.JSON_PROPERTY_ID,
  ApiEncoding.JSON_PROPERTY_CONTAINER,
  ApiEncoding.JSON_PROPERTY_NAME,
  ApiEncoding.JSON_PROPERTY_COPY,
  ApiEncoding.JSON_PROPERTY_VIDEO_CODEC,
  ApiEncoding.JSON_PROPERTY_VIDEO_ASPECT,
  ApiEncoding.JSON_PROPERTY_VIDEO_FPS,
  ApiEncoding.JSON_PROPERTY_AUDIO_CODEC,
  ApiEncoding.JSON_PROPERTY_AUDIO_CHANNEL,
  ApiEncoding.JSON_PROPERTY_CREATED_AT,
  ApiEncoding.JSON_PROPERTY_UPDATED_AT,
  ApiEncoding.JSON_PROPERTY_DELETED_AT,
  ApiEncoding.JSON_PROPERTY_OWNED,
  ApiEncoding.JSON_PROPERTY_PRESET,
  ApiEncoding.JSON_PROPERTY_STREAMS
})
@JsonTypeName("Api_Encoding")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ApiEncoding {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  /**
   * 
   */
  public enum ContainerEnum {
    FLV("FLV"),
    
    M4A("M4A"),
    
    MKV("MKV"),
    
    MP4("MP4"),
    
    WEBM("WEBM"),
    
    MP3("MP3"),
    
    COPY("COPY"),
    
    AAC("AAC");

    private String value;

    ContainerEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ContainerEnum fromValue(String value) {
      for (ContainerEnum b : ContainerEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONTAINER = "container";
  private ContainerEnum container;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets copy
   */
  public enum CopyEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    CopyEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CopyEnum fromValue(Bool value) {
      for (CopyEnum b : CopyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COPY = "copy";
  private CopyEnum copy = null;

  /**
   * 
   */
  public enum VideoCodecEnum {
    H264("H264"),
    
    HEVC("HEVC"),
    
    THEORA("THEORA"),
    
    VP8("VP8"),
    
    VP9("VP9"),
    
    COPY("COPY"),
    
    H263("H263");

    private String value;

    VideoCodecEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VideoCodecEnum fromValue(String value) {
      for (VideoCodecEnum b : VideoCodecEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VIDEO_CODEC = "video_codec";
  private VideoCodecEnum videoCodec;

  /**
   * 
   */
  public enum VideoAspectEnum {
    LETTERBOX("LETTERBOX"),
    
    STRETCH("STRETCH"),
    
    FILL("FILL"),
    
    KEEP_RATIO("KEEP_RATIO"),
    
    COPY("COPY");

    private String value;

    VideoAspectEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VideoAspectEnum fromValue(String value) {
      for (VideoAspectEnum b : VideoAspectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VIDEO_ASPECT = "video_aspect";
  private VideoAspectEnum videoAspect;

  public static final String JSON_PROPERTY_VIDEO_FPS = "video_fps";
  private Float videoFps;

  /**
   * 
   */
  public enum AudioCodecEnum {
    AAC("AAC"),
    
    HE_AAC("HE_AAC"),
    
    FLAC("FLAC"),
    
    MP3("MP3"),
    
    VORBIS("VORBIS"),
    
    COPY("COPY"),
    
    OPUS("OPUS");

    private String value;

    AudioCodecEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AudioCodecEnum fromValue(String value) {
      for (AudioCodecEnum b : AudioCodecEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUDIO_CODEC = "audio_codec";
  private AudioCodecEnum audioCodec;

  /**
   * 
   */
  public enum AudioChannelEnum {
    MONO_1_0("MONO_1_0"),
    
    STEREO_2_0("STEREO_2_0"),
    
    STEREO_2_1("STEREO_2_1"),
    
    SURROUND_4_1("SURROUND_4_1"),
    
    SURROUND_5_1("SURROUND_5_1"),
    
    SURROUND_6_1("SURROUND_6_1"),
    
    SURROUND_7_1("SURROUND_7_1");

    private String value;

    AudioChannelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AudioChannelEnum fromValue(String value) {
      for (AudioChannelEnum b : AudioChannelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUDIO_CHANNEL = "audio_channel";
  private AudioChannelEnum audioChannel;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Datetime createdAt = null;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Datetime updatedAt = null;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private Datetime deletedAt = null;

  /**
   * Gets or Sets owned
   */
  public enum OwnedEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    OwnedEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OwnedEnum fromValue(Bool value) {
      for (OwnedEnum b : OwnedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OWNED = "owned";
  private OwnedEnum owned = null;

  public static final String JSON_PROPERTY_PRESET = "preset";
  private List<ApiEncodingPreset> preset;

  public static final String JSON_PROPERTY_STREAMS = "streams";
  private List<ApiEncodingStream> streams;

  public ApiEncoding() {
  }

  public ApiEncoding id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ApiEncoding container(ContainerEnum container) {
    
    this.container = container;
    return this;
  }

   /**
   * 
   * @return container
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContainerEnum getContainer() {
    return container;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainer(ContainerEnum container) {
    this.container = container;
  }


  public ApiEncoding name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApiEncoding copy(CopyEnum copy) {
    
    this.copy = copy;
    return this;
  }

   /**
   * Get copy
   * @return copy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COPY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CopyEnum getCopy() {
    return copy;
  }


  @JsonProperty(JSON_PROPERTY_COPY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCopy(CopyEnum copy) {
    this.copy = copy;
  }


  public ApiEncoding videoCodec(VideoCodecEnum videoCodec) {
    
    this.videoCodec = videoCodec;
    return this;
  }

   /**
   * 
   * @return videoCodec
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIDEO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VideoCodecEnum getVideoCodec() {
    return videoCodec;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoCodec(VideoCodecEnum videoCodec) {
    this.videoCodec = videoCodec;
  }


  public ApiEncoding videoAspect(VideoAspectEnum videoAspect) {
    
    this.videoAspect = videoAspect;
    return this;
  }

   /**
   * 
   * @return videoAspect
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIDEO_ASPECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VideoAspectEnum getVideoAspect() {
    return videoAspect;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_ASPECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoAspect(VideoAspectEnum videoAspect) {
    this.videoAspect = videoAspect;
  }


  public ApiEncoding videoFps(Float videoFps) {
    
    this.videoFps = videoFps;
    return this;
  }

   /**
   * Get videoFps
   * @return videoFps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIDEO_FPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getVideoFps() {
    return videoFps;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_FPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoFps(Float videoFps) {
    this.videoFps = videoFps;
  }


  public ApiEncoding audioCodec(AudioCodecEnum audioCodec) {
    
    this.audioCodec = audioCodec;
    return this;
  }

   /**
   * 
   * @return audioCodec
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AudioCodecEnum getAudioCodec() {
    return audioCodec;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudioCodec(AudioCodecEnum audioCodec) {
    this.audioCodec = audioCodec;
  }


  public ApiEncoding audioChannel(AudioChannelEnum audioChannel) {
    
    this.audioChannel = audioChannel;
    return this;
  }

   /**
   * 
   * @return audioChannel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIO_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AudioChannelEnum getAudioChannel() {
    return audioChannel;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudioChannel(AudioChannelEnum audioChannel) {
    this.audioChannel = audioChannel;
  }


  public ApiEncoding createdAt(Datetime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(Datetime createdAt) {
    this.createdAt = createdAt;
  }


  public ApiEncoding updatedAt(Datetime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(Datetime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ApiEncoding deletedAt(Datetime deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Datetime getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedAt(Datetime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public ApiEncoding owned(OwnedEnum owned) {
    
    this.owned = owned;
    return this;
  }

   /**
   * Get owned
   * @return owned
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OwnedEnum getOwned() {
    return owned;
  }


  @JsonProperty(JSON_PROPERTY_OWNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwned(OwnedEnum owned) {
    this.owned = owned;
  }


  public ApiEncoding preset(List<ApiEncodingPreset> preset) {
    
    this.preset = preset;
    return this;
  }

  public ApiEncoding addPresetItem(ApiEncodingPreset presetItem) {
    if (this.preset == null) {
      this.preset = new ArrayList<>();
    }
    this.preset.add(presetItem);
    return this;
  }

   /**
   * 
   * @return preset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiEncodingPreset> getPreset() {
    return preset;
  }


  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreset(List<ApiEncodingPreset> preset) {
    this.preset = preset;
  }


  public ApiEncoding streams(List<ApiEncodingStream> streams) {
    
    this.streams = streams;
    return this;
  }

  public ApiEncoding addStreamsItem(ApiEncodingStream streamsItem) {
    if (this.streams == null) {
      this.streams = new ArrayList<>();
    }
    this.streams.add(streamsItem);
    return this;
  }

   /**
   * 
   * @return streams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiEncodingStream> getStreams() {
    return streams;
  }


  @JsonProperty(JSON_PROPERTY_STREAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreams(List<ApiEncodingStream> streams) {
    this.streams = streams;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiEncoding apiEncoding = (ApiEncoding) o;
    return Objects.equals(this.id, apiEncoding.id) &&
        Objects.equals(this.container, apiEncoding.container) &&
        Objects.equals(this.name, apiEncoding.name) &&
        Objects.equals(this.copy, apiEncoding.copy) &&
        Objects.equals(this.videoCodec, apiEncoding.videoCodec) &&
        Objects.equals(this.videoAspect, apiEncoding.videoAspect) &&
        Objects.equals(this.videoFps, apiEncoding.videoFps) &&
        Objects.equals(this.audioCodec, apiEncoding.audioCodec) &&
        Objects.equals(this.audioChannel, apiEncoding.audioChannel) &&
        Objects.equals(this.createdAt, apiEncoding.createdAt) &&
        Objects.equals(this.updatedAt, apiEncoding.updatedAt) &&
        Objects.equals(this.deletedAt, apiEncoding.deletedAt) &&
        Objects.equals(this.owned, apiEncoding.owned) &&
        Objects.equals(this.preset, apiEncoding.preset) &&
        Objects.equals(this.streams, apiEncoding.streams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, container, name, copy, videoCodec, videoAspect, videoFps, audioCodec, audioChannel, createdAt, updatedAt, deletedAt, owned, preset, streams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiEncoding {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    copy: ").append(toIndentedString(copy)).append("\n");
    sb.append("    videoCodec: ").append(toIndentedString(videoCodec)).append("\n");
    sb.append("    videoAspect: ").append(toIndentedString(videoAspect)).append("\n");
    sb.append("    videoFps: ").append(toIndentedString(videoFps)).append("\n");
    sb.append("    audioCodec: ").append(toIndentedString(audioCodec)).append("\n");
    sb.append("    audioChannel: ").append(toIndentedString(audioChannel)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    owned: ").append(toIndentedString(owned)).append("\n");
    sb.append("    preset: ").append(toIndentedString(preset)).append("\n");
    sb.append("    streams: ").append(toIndentedString(streams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

