/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CashFlowMonthlyCashFlowBalances
 */
@JsonPropertyOrder({
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_MONTH,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_MIN_DAILY_BALANCE,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_MAX_DAILY_BALANCE,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_AVERAGE_DAILY_BALANCE,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_STANDARD_DEVIATION_OF_DAILY_BALANCE,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_NUMBER_OF_DAYS_NEGATIVE_BALANCE,
  CashFlowMonthlyCashFlowBalances.JSON_PROPERTY_NUMBER_OF_DAYS_POSITIVE_BALANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:12:42.105719365Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CashFlowMonthlyCashFlowBalances {
  public static final String JSON_PROPERTY_MONTH = "month";
  private Long month;

  public static final String JSON_PROPERTY_MIN_DAILY_BALANCE = "minDailyBalance";
  private BigDecimal minDailyBalance;

  public static final String JSON_PROPERTY_MAX_DAILY_BALANCE = "maxDailyBalance";
  private BigDecimal maxDailyBalance;

  public static final String JSON_PROPERTY_AVERAGE_DAILY_BALANCE = "averageDailyBalance";
  private BigDecimal averageDailyBalance;

  public static final String JSON_PROPERTY_STANDARD_DEVIATION_OF_DAILY_BALANCE = "standardDeviationOfDailyBalance";
  private String standardDeviationOfDailyBalance;

  public static final String JSON_PROPERTY_NUMBER_OF_DAYS_NEGATIVE_BALANCE = "numberOfDaysNegativeBalance";
  private String numberOfDaysNegativeBalance;

  public static final String JSON_PROPERTY_NUMBER_OF_DAYS_POSITIVE_BALANCE = "numberOfDaysPositiveBalance";
  private String numberOfDaysPositiveBalance;

  public CashFlowMonthlyCashFlowBalances() {
  }

  public CashFlowMonthlyCashFlowBalances month(Long month) {
    
    this.month = month;
    return this;
  }

   /**
   * One instance for each complete calendar month in the report
   * @return month
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonth(Long month) {
    this.month = month;
  }


  public CashFlowMonthlyCashFlowBalances minDailyBalance(BigDecimal minDailyBalance) {
    
    this.minDailyBalance = minDailyBalance;
    return this;
  }

   /**
   * Min Daily Balance for each month
   * @return minDailyBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MIN_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMinDailyBalance() {
    return minDailyBalance;
  }


  @JsonProperty(JSON_PROPERTY_MIN_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinDailyBalance(BigDecimal minDailyBalance) {
    this.minDailyBalance = minDailyBalance;
  }


  public CashFlowMonthlyCashFlowBalances maxDailyBalance(BigDecimal maxDailyBalance) {
    
    this.maxDailyBalance = maxDailyBalance;
    return this;
  }

   /**
   * Max Daily Balance for each month
   * @return maxDailyBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAX_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMaxDailyBalance() {
    return maxDailyBalance;
  }


  @JsonProperty(JSON_PROPERTY_MAX_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxDailyBalance(BigDecimal maxDailyBalance) {
    this.maxDailyBalance = maxDailyBalance;
  }


  public CashFlowMonthlyCashFlowBalances averageDailyBalance(BigDecimal averageDailyBalance) {
    
    this.averageDailyBalance = averageDailyBalance;
    return this;
  }

   /**
   * Average Daily Balance for each month
   * @return averageDailyBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAverageDailyBalance() {
    return averageDailyBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAverageDailyBalance(BigDecimal averageDailyBalance) {
    this.averageDailyBalance = averageDailyBalance;
  }


  public CashFlowMonthlyCashFlowBalances standardDeviationOfDailyBalance(String standardDeviationOfDailyBalance) {
    
    this.standardDeviationOfDailyBalance = standardDeviationOfDailyBalance;
    return this;
  }

   /**
   * Standard Deviation of Daily Balance for each month
   * @return standardDeviationOfDailyBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STANDARD_DEVIATION_OF_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStandardDeviationOfDailyBalance() {
    return standardDeviationOfDailyBalance;
  }


  @JsonProperty(JSON_PROPERTY_STANDARD_DEVIATION_OF_DAILY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandardDeviationOfDailyBalance(String standardDeviationOfDailyBalance) {
    this.standardDeviationOfDailyBalance = standardDeviationOfDailyBalance;
  }


  public CashFlowMonthlyCashFlowBalances numberOfDaysNegativeBalance(String numberOfDaysNegativeBalance) {
    
    this.numberOfDaysNegativeBalance = numberOfDaysNegativeBalance;
    return this;
  }

   /**
   * Number of Days Negative Balance for each month
   * @return numberOfDaysNegativeBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_DAYS_NEGATIVE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNumberOfDaysNegativeBalance() {
    return numberOfDaysNegativeBalance;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_DAYS_NEGATIVE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfDaysNegativeBalance(String numberOfDaysNegativeBalance) {
    this.numberOfDaysNegativeBalance = numberOfDaysNegativeBalance;
  }


  public CashFlowMonthlyCashFlowBalances numberOfDaysPositiveBalance(String numberOfDaysPositiveBalance) {
    
    this.numberOfDaysPositiveBalance = numberOfDaysPositiveBalance;
    return this;
  }

   /**
   * Number of Days positive balance for each month
   * @return numberOfDaysPositiveBalance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_DAYS_POSITIVE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNumberOfDaysPositiveBalance() {
    return numberOfDaysPositiveBalance;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_DAYS_POSITIVE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumberOfDaysPositiveBalance(String numberOfDaysPositiveBalance) {
    this.numberOfDaysPositiveBalance = numberOfDaysPositiveBalance;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowMonthlyCashFlowBalances cashFlowMonthlyCashFlowBalances = (CashFlowMonthlyCashFlowBalances) o;
    return Objects.equals(this.month, cashFlowMonthlyCashFlowBalances.month) &&
        Objects.equals(this.minDailyBalance, cashFlowMonthlyCashFlowBalances.minDailyBalance) &&
        Objects.equals(this.maxDailyBalance, cashFlowMonthlyCashFlowBalances.maxDailyBalance) &&
        Objects.equals(this.averageDailyBalance, cashFlowMonthlyCashFlowBalances.averageDailyBalance) &&
        Objects.equals(this.standardDeviationOfDailyBalance, cashFlowMonthlyCashFlowBalances.standardDeviationOfDailyBalance) &&
        Objects.equals(this.numberOfDaysNegativeBalance, cashFlowMonthlyCashFlowBalances.numberOfDaysNegativeBalance) &&
        Objects.equals(this.numberOfDaysPositiveBalance, cashFlowMonthlyCashFlowBalances.numberOfDaysPositiveBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, minDailyBalance, maxDailyBalance, averageDailyBalance, standardDeviationOfDailyBalance, numberOfDaysNegativeBalance, numberOfDaysPositiveBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowMonthlyCashFlowBalances {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    minDailyBalance: ").append(toIndentedString(minDailyBalance)).append("\n");
    sb.append("    maxDailyBalance: ").append(toIndentedString(maxDailyBalance)).append("\n");
    sb.append("    averageDailyBalance: ").append(toIndentedString(averageDailyBalance)).append("\n");
    sb.append("    standardDeviationOfDailyBalance: ").append(toIndentedString(standardDeviationOfDailyBalance)).append("\n");
    sb.append("    numberOfDaysNegativeBalance: ").append(toIndentedString(numberOfDaysNegativeBalance)).append("\n");
    sb.append("    numberOfDaysPositiveBalance: ").append(toIndentedString(numberOfDaysPositiveBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

