/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PayrollData;
import org.openapitools.client.model.ReportCustomField;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayrollReportConstraints
 */
@JsonPropertyOrder({
  PayrollReportConstraints.JSON_PROPERTY_PAYROLL_DATA,
  PayrollReportConstraints.JSON_PROPERTY_REPORT_CUSTOM_FIELDS,
  PayrollReportConstraints.JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE,
  PayrollReportConstraints.JSON_PROPERTY_MARKET_SEGMENT,
  PayrollReportConstraints.JSON_PROPERTY_EXCLUDE_EMP_INFO,
  PayrollReportConstraints.JSON_PROPERTY_PURPOSE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T12:47:14.152745765Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PayrollReportConstraints {
  public static final String JSON_PROPERTY_PAYROLL_DATA = "payrollData";
  private PayrollData payrollData;

  public static final String JSON_PROPERTY_REPORT_CUSTOM_FIELDS = "reportCustomFields";
  private List<ReportCustomField> reportCustomFields;

  public static final String JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE = "payStatementsFromDate";
  private Long payStatementsFromDate;

  public static final String JSON_PROPERTY_MARKET_SEGMENT = "marketSegment";
  private String marketSegment;

  public static final String JSON_PROPERTY_EXCLUDE_EMP_INFO = "excludeEmpInfo";
  private Boolean excludeEmpInfo;

  public static final String JSON_PROPERTY_PURPOSE = "purpose";
  private String purpose;

  public PayrollReportConstraints() {
  }

  public PayrollReportConstraints payrollData(PayrollData payrollData) {
    
    this.payrollData = payrollData;
    return this;
  }

   /**
   * Get payrollData
   * @return payrollData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYROLL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayrollData getPayrollData() {
    return payrollData;
  }


  @JsonProperty(JSON_PROPERTY_PAYROLL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayrollData(PayrollData payrollData) {
    this.payrollData = payrollData;
  }


  public PayrollReportConstraints reportCustomFields(List<ReportCustomField> reportCustomFields) {
    
    this.reportCustomFields = reportCustomFields;
    return this;
  }

  public PayrollReportConstraints addReportCustomFieldsItem(ReportCustomField reportCustomFieldsItem) {
    if (this.reportCustomFields == null) {
      this.reportCustomFields = new ArrayList<>();
    }
    this.reportCustomFields.add(reportCustomFieldsItem);
    return this;
  }

   /**
   * The &#x60;reportCustomFields&#x60; parameter is used when experiences are associated with a credit decisioning report.  Designate up to 5 custom fields that you&#39;d like associated with the report when it&#39;s generated. Every custom field consists of three variables: &#x60;label&#x60;, &#x60;value&#x60;, and &#x60;shown&#x60;. The &#x60;shown&#x60; variable is \&quot;true\&quot; or \&quot;false\&quot;. * \&quot;true\&quot;: (default) display the custom field in the PDF report * \&quot;false\&quot;: don&#39;t display the custom field in the PDF report  For an experience that generates multiple reports, the &#x60;reportCustomFields&#x60; parameter gets passed to all reports.  All custom fields display in the Reseller Billing API.
   * @return reportCustomFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportCustomField> getReportCustomFields() {
    return reportCustomFields;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportCustomFields(List<ReportCustomField> reportCustomFields) {
    this.reportCustomFields = reportCustomFields;
  }


  public PayrollReportConstraints payStatementsFromDate(Long payStatementsFromDate) {
    
    this.payStatementsFromDate = payStatementsFromDate;
    return this;
  }

   /**
   * Limits the pay statement history in the VOIE - Payroll report income record. Pay statements are only included if the payDate of the statement is equal to or greater than the start date requested. Date should be in Unix epoch time (in seconds). See: Handling Epoch Dates and Times.
   * @return payStatementsFromDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPayStatementsFromDate() {
    return payStatementsFromDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayStatementsFromDate(Long payStatementsFromDate) {
    this.payStatementsFromDate = payStatementsFromDate;
  }


  public PayrollReportConstraints marketSegment(String marketSegment) {
    
    this.marketSegment = marketSegment;
    return this;
  }

   /**
   * Use case for requesting the consumer&#39;s data. Current supported enumerations are \&quot;Mortgage\&quot; and \&quot;KYC\&quot;. If your use case doesn&#39;t match one of these please reach out to your technical point of contact.
   * @return marketSegment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKET_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMarketSegment() {
    return marketSegment;
  }


  @JsonProperty(JSON_PROPERTY_MARKET_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketSegment(String marketSegment) {
    this.marketSegment = marketSegment;
  }


  public PayrollReportConstraints excludeEmpInfo(Boolean excludeEmpInfo) {
    
    this.excludeEmpInfo = excludeEmpInfo;
    return this;
  }

   /**
   * Only used on an exception basis for clients that need to exclude EmpInfo data from the VOE-Payroll or VOIE-Payroll report. If true is passed EmpInfo payroll provider&#39;s data will not be searched or returned.
   * @return excludeEmpInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUDE_EMP_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludeEmpInfo() {
    return excludeEmpInfo;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_EMP_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeEmpInfo(Boolean excludeEmpInfo) {
    this.excludeEmpInfo = excludeEmpInfo;
  }


  public PayrollReportConstraints purpose(String purpose) {
    
    this.purpose = purpose;
    return this;
  }

   /**
   * FCRA required 2-digit Permissible Purpose Code, specifying the reason for retrieving this report.
   * @return purpose
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurpose() {
    return purpose;
  }


  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollReportConstraints payrollReportConstraints = (PayrollReportConstraints) o;
    return Objects.equals(this.payrollData, payrollReportConstraints.payrollData) &&
        Objects.equals(this.reportCustomFields, payrollReportConstraints.reportCustomFields) &&
        Objects.equals(this.payStatementsFromDate, payrollReportConstraints.payStatementsFromDate) &&
        Objects.equals(this.marketSegment, payrollReportConstraints.marketSegment) &&
        Objects.equals(this.excludeEmpInfo, payrollReportConstraints.excludeEmpInfo) &&
        Objects.equals(this.purpose, payrollReportConstraints.purpose);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payrollData, reportCustomFields, payStatementsFromDate, marketSegment, excludeEmpInfo, purpose);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollReportConstraints {\n");
    sb.append("    payrollData: ").append(toIndentedString(payrollData)).append("\n");
    sb.append("    reportCustomFields: ").append(toIndentedString(reportCustomFields)).append("\n");
    sb.append("    payStatementsFromDate: ").append(toIndentedString(payStatementsFromDate)).append("\n");
    sb.append("    marketSegment: ").append(toIndentedString(marketSegment)).append("\n");
    sb.append("    excludeEmpInfo: ").append(toIndentedString(excludeEmpInfo)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

