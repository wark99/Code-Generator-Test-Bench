/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DifficultyLevel;
import org.openapitools.client.model.TagSummary;
import org.openapitools.client.model.UserSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QuestionDetails
 */
@JsonPropertyOrder({
  QuestionDetails.JSON_PROPERTY_ID,
  QuestionDetails.JSON_PROPERTY_TITLE,
  QuestionDetails.JSON_PROPERTY_CONTENT,
  QuestionDetails.JSON_PROPERTY_AUTHOR,
  QuestionDetails.JSON_PROPERTY_CREATED_AT,
  QuestionDetails.JSON_PROPERTY_UPDATED_AT,
  QuestionDetails.JSON_PROPERTY_TAGS,
  QuestionDetails.JSON_PROPERTY_LIKE_COUNT,
  QuestionDetails.JSON_PROPERTY_DISLIKE_COUNT,
  QuestionDetails.JSON_PROPERTY_DIFFICULTY,
  QuestionDetails.JSON_PROPERTY_COMMENT_COUNT,
  QuestionDetails.JSON_PROPERTY_VIEW_COUNT,
  QuestionDetails.JSON_PROPERTY_BOOKMARKED,
  QuestionDetails.JSON_PROPERTY_SELF_VOTED,
  QuestionDetails.JSON_PROPERTY_SELF_DIFFICULTY_VOTE,
  QuestionDetails.JSON_PROPERTY_EASY_COUNT,
  QuestionDetails.JSON_PROPERTY_MEDIUM_COUNT,
  QuestionDetails.JSON_PROPERTY_HARD_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-26T20:19:29.213885611+03:00[Europe/Bucharest]", comments = "Generator version: 7.4.0")
public class QuestionDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserSummary author;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagSummary> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_LIKE_COUNT = "likeCount";
  private Integer likeCount;

  public static final String JSON_PROPERTY_DISLIKE_COUNT = "dislikeCount";
  private Integer dislikeCount;

  public static final String JSON_PROPERTY_DIFFICULTY = "difficulty";
  private DifficultyLevel difficulty;

  public static final String JSON_PROPERTY_COMMENT_COUNT = "commentCount";
  private Integer commentCount;

  public static final String JSON_PROPERTY_VIEW_COUNT = "viewCount";
  private Integer viewCount;

  public static final String JSON_PROPERTY_BOOKMARKED = "bookmarked";
  private Boolean bookmarked;

  public static final String JSON_PROPERTY_SELF_VOTED = "selfVoted";
  private Integer selfVoted;

  public static final String JSON_PROPERTY_SELF_DIFFICULTY_VOTE = "selfDifficultyVote";
  private DifficultyLevel selfDifficultyVote;

  public static final String JSON_PROPERTY_EASY_COUNT = "easyCount";
  private Integer easyCount;

  public static final String JSON_PROPERTY_MEDIUM_COUNT = "mediumCount";
  private Integer mediumCount;

  public static final String JSON_PROPERTY_HARD_COUNT = "hardCount";
  private Integer hardCount;

  public QuestionDetails() {
  }

  public QuestionDetails id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public QuestionDetails title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public QuestionDetails content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(String content) {
    this.content = content;
  }


  public QuestionDetails author(UserSummary author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserSummary getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthor(UserSummary author) {
    this.author = author;
  }


  public QuestionDetails createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public QuestionDetails updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public QuestionDetails tags(List<TagSummary> tags) {
    
    this.tags = tags;
    return this;
  }

  public QuestionDetails addTagsItem(TagSummary tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TagSummary> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<TagSummary> tags) {
    this.tags = tags;
  }


  public QuestionDetails likeCount(Integer likeCount) {
    
    this.likeCount = likeCount;
    return this;
  }

   /**
   * Get likeCount
   * @return likeCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLikeCount() {
    return likeCount;
  }


  @JsonProperty(JSON_PROPERTY_LIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLikeCount(Integer likeCount) {
    this.likeCount = likeCount;
  }


  public QuestionDetails dislikeCount(Integer dislikeCount) {
    
    this.dislikeCount = dislikeCount;
    return this;
  }

   /**
   * Get dislikeCount
   * @return dislikeCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISLIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDislikeCount() {
    return dislikeCount;
  }


  @JsonProperty(JSON_PROPERTY_DISLIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDislikeCount(Integer dislikeCount) {
    this.dislikeCount = dislikeCount;
  }


  public QuestionDetails difficulty(DifficultyLevel difficulty) {
    
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Get difficulty
   * @return difficulty
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DifficultyLevel getDifficulty() {
    return difficulty;
  }


  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDifficulty(DifficultyLevel difficulty) {
    this.difficulty = difficulty;
  }


  public QuestionDetails commentCount(Integer commentCount) {
    
    this.commentCount = commentCount;
    return this;
  }

   /**
   * Get commentCount
   * @return commentCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCommentCount() {
    return commentCount;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }


  public QuestionDetails viewCount(Integer viewCount) {
    
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Get viewCount
   * @return viewCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEW_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViewCount() {
    return viewCount;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }


  public QuestionDetails bookmarked(Boolean bookmarked) {
    
    this.bookmarked = bookmarked;
    return this;
  }

   /**
   * Get bookmarked
   * @return bookmarked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBookmarked() {
    return bookmarked;
  }


  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBookmarked(Boolean bookmarked) {
    this.bookmarked = bookmarked;
  }


  public QuestionDetails selfVoted(Integer selfVoted) {
    
    this.selfVoted = selfVoted;
    return this;
  }

   /**
   * Get selfVoted
   * minimum: -1
   * maximum: 1
   * @return selfVoted
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELF_VOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSelfVoted() {
    return selfVoted;
  }


  @JsonProperty(JSON_PROPERTY_SELF_VOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelfVoted(Integer selfVoted) {
    this.selfVoted = selfVoted;
  }


  public QuestionDetails selfDifficultyVote(DifficultyLevel selfDifficultyVote) {
    
    this.selfDifficultyVote = selfDifficultyVote;
    return this;
  }

   /**
   * Get selfDifficultyVote
   * @return selfDifficultyVote
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELF_DIFFICULTY_VOTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DifficultyLevel getSelfDifficultyVote() {
    return selfDifficultyVote;
  }


  @JsonProperty(JSON_PROPERTY_SELF_DIFFICULTY_VOTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelfDifficultyVote(DifficultyLevel selfDifficultyVote) {
    this.selfDifficultyVote = selfDifficultyVote;
  }


  public QuestionDetails easyCount(Integer easyCount) {
    
    this.easyCount = easyCount;
    return this;
  }

   /**
   * Get easyCount
   * @return easyCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EASY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getEasyCount() {
    return easyCount;
  }


  @JsonProperty(JSON_PROPERTY_EASY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEasyCount(Integer easyCount) {
    this.easyCount = easyCount;
  }


  public QuestionDetails mediumCount(Integer mediumCount) {
    
    this.mediumCount = mediumCount;
    return this;
  }

   /**
   * Get mediumCount
   * @return mediumCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEDIUM_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMediumCount() {
    return mediumCount;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMediumCount(Integer mediumCount) {
    this.mediumCount = mediumCount;
  }


  public QuestionDetails hardCount(Integer hardCount) {
    
    this.hardCount = hardCount;
    return this;
  }

   /**
   * Get hardCount
   * @return hardCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HARD_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getHardCount() {
    return hardCount;
  }


  @JsonProperty(JSON_PROPERTY_HARD_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHardCount(Integer hardCount) {
    this.hardCount = hardCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuestionDetails questionDetails = (QuestionDetails) o;
    return Objects.equals(this.id, questionDetails.id) &&
        Objects.equals(this.title, questionDetails.title) &&
        Objects.equals(this.content, questionDetails.content) &&
        Objects.equals(this.author, questionDetails.author) &&
        Objects.equals(this.createdAt, questionDetails.createdAt) &&
        Objects.equals(this.updatedAt, questionDetails.updatedAt) &&
        Objects.equals(this.tags, questionDetails.tags) &&
        Objects.equals(this.likeCount, questionDetails.likeCount) &&
        Objects.equals(this.dislikeCount, questionDetails.dislikeCount) &&
        Objects.equals(this.difficulty, questionDetails.difficulty) &&
        Objects.equals(this.commentCount, questionDetails.commentCount) &&
        Objects.equals(this.viewCount, questionDetails.viewCount) &&
        Objects.equals(this.bookmarked, questionDetails.bookmarked) &&
        Objects.equals(this.selfVoted, questionDetails.selfVoted) &&
        Objects.equals(this.selfDifficultyVote, questionDetails.selfDifficultyVote) &&
        Objects.equals(this.easyCount, questionDetails.easyCount) &&
        Objects.equals(this.mediumCount, questionDetails.mediumCount) &&
        Objects.equals(this.hardCount, questionDetails.hardCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, content, author, createdAt, updatedAt, tags, likeCount, dislikeCount, difficulty, commentCount, viewCount, bookmarked, selfVoted, selfDifficultyVote, easyCount, mediumCount, hardCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    dislikeCount: ").append(toIndentedString(dislikeCount)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    bookmarked: ").append(toIndentedString(bookmarked)).append("\n");
    sb.append("    selfVoted: ").append(toIndentedString(selfVoted)).append("\n");
    sb.append("    selfDifficultyVote: ").append(toIndentedString(selfDifficultyVote)).append("\n");
    sb.append("    easyCount: ").append(toIndentedString(easyCount)).append("\n");
    sb.append("    mediumCount: ").append(toIndentedString(mediumCount)).append("\n");
    sb.append("    hardCount: ").append(toIndentedString(hardCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

