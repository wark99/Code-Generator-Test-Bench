/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Action;
import org.openapitools.client.model.Indicative2;
import org.openapitools.client.model.Satisfactions;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IndividualMonitoring
 */
@JsonPropertyOrder({
  IndividualMonitoring.JSON_PROPERTY_ACTION,
  IndividualMonitoring.JSON_PROPERTY_ID,
  IndividualMonitoring.JSON_PROPERTY_INDICATIVE,
  IndividualMonitoring.JSON_PROPERTY_SATISFACTIONS,
  IndividualMonitoring.JSON_PROPERTY_SUBJECT_FILE_INQUIRIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class IndividualMonitoring {
  public static final String JSON_PROPERTY_ACTION = "action";
  private Action action;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INDICATIVE = "indicative";
  private Indicative2 indicative;

  public static final String JSON_PROPERTY_SATISFACTIONS = "satisfactions";
  private List<Satisfactions> satisfactions;

  public static final String JSON_PROPERTY_SUBJECT_FILE_INQUIRIES = "subjectFileInquiries";
  private String subjectFileInquiries;

  public IndividualMonitoring() {
  }

  public IndividualMonitoring action(Action action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Action getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(Action action) {
    this.action = action;
  }


  public IndividualMonitoring id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public IndividualMonitoring indicative(Indicative2 indicative) {
    
    this.indicative = indicative;
    return this;
  }

   /**
   * Get indicative
   * @return indicative
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDICATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Indicative2 getIndicative() {
    return indicative;
  }


  @JsonProperty(JSON_PROPERTY_INDICATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicative(Indicative2 indicative) {
    this.indicative = indicative;
  }


  public IndividualMonitoring satisfactions(List<Satisfactions> satisfactions) {
    
    this.satisfactions = satisfactions;
    return this;
  }

  public IndividualMonitoring addSatisfactionsItem(Satisfactions satisfactionsItem) {
    if (this.satisfactions == null) {
      this.satisfactions = new ArrayList<>();
    }
    this.satisfactions.add(satisfactionsItem);
    return this;
  }

   /**
   * Get satisfactions
   * @return satisfactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SATISFACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Satisfactions> getSatisfactions() {
    return satisfactions;
  }


  @JsonProperty(JSON_PROPERTY_SATISFACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSatisfactions(List<Satisfactions> satisfactions) {
    this.satisfactions = satisfactions;
  }


  public IndividualMonitoring subjectFileInquiries(String subjectFileInquiries) {
    
    this.subjectFileInquiries = subjectFileInquiries;
    return this;
  }

   /**
   * Get subjectFileInquiries
   * @return subjectFileInquiries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT_FILE_INQUIRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubjectFileInquiries() {
    return subjectFileInquiries;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT_FILE_INQUIRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubjectFileInquiries(String subjectFileInquiries) {
    this.subjectFileInquiries = subjectFileInquiries;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualMonitoring individualMonitoring = (IndividualMonitoring) o;
    return Objects.equals(this.action, individualMonitoring.action) &&
        Objects.equals(this.id, individualMonitoring.id) &&
        Objects.equals(this.indicative, individualMonitoring.indicative) &&
        Objects.equals(this.satisfactions, individualMonitoring.satisfactions) &&
        Objects.equals(this.subjectFileInquiries, individualMonitoring.subjectFileInquiries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, id, indicative, satisfactions, subjectFileInquiries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualMonitoring {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indicative: ").append(toIndentedString(indicative)).append("\n");
    sb.append("    satisfactions: ").append(toIndentedString(satisfactions)).append("\n");
    sb.append("    subjectFileInquiries: ").append(toIndentedString(subjectFileInquiries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

