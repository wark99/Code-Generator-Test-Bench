/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnalyticsReportConstraintsOut;
import org.openapitools.client.model.AnalyticsReportData;
import org.openapitools.client.model.CashFlowReportConstraintsOut;
import org.openapitools.client.model.PayStatementData;
import org.openapitools.client.model.PayStatementReportConstraints;
import org.openapitools.client.model.PayrollDataOut;
import org.openapitools.client.model.PayrollReportConstraintsOut;
import org.openapitools.client.model.PrequalificationReportConstraintsOut;
import org.openapitools.client.model.ReportCustomField;
import org.openapitools.client.model.StatementData;
import org.openapitools.client.model.StatementReportConstraints;
import org.openapitools.client.model.TransactionsReportConstraintsOut;
import org.openapitools.client.model.VOAReportConstraintsOut;
import org.openapitools.client.model.VOAWithIncomeReportConstraintsOut;
import org.openapitools.client.model.VOETransactionsReportConstraintsOut;
import org.openapitools.client.model.VOIEReportConstraints;
import org.openapitools.client.model.VOIEWithInterviewData;
import org.openapitools.client.model.VOIEWithStatementData;
import org.openapitools.client.model.VOIEWithTXVerifyReportConstraintsOut;
import org.openapitools.client.model.VOIReportConstraintsOut;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BaseReportAckConstraints
 */
@JsonPropertyOrder({
  BaseReportAckConstraints.JSON_PROPERTY_ANALYTICS_REPORT_DATA,
  BaseReportAckConstraints.JSON_PROPERTY_ACCOUNT_IDS,
  BaseReportAckConstraints.JSON_PROPERTY_REPORT_CUSTOM_FIELDS,
  BaseReportAckConstraints.JSON_PROPERTY_FROM_DATE,
  BaseReportAckConstraints.JSON_PROPERTY_SHOW_NSF,
  BaseReportAckConstraints.JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM,
  BaseReportAckConstraints.JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA,
  BaseReportAckConstraints.JSON_PROPERTY_VOIE_WITH_STATEMENT_DATA,
  BaseReportAckConstraints.JSON_PROPERTY_STATEMENT_REPORT_DATA,
  BaseReportAckConstraints.JSON_PROPERTY_TO_DATE,
  BaseReportAckConstraints.JSON_PROPERTY_INCLUDE_PENDING,
  BaseReportAckConstraints.JSON_PROPERTY_VOAI_PDF_DEPOSIT_VIEW,
  BaseReportAckConstraints.JSON_PROPERTY_PAYROLL_DATA,
  BaseReportAckConstraints.JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE,
  BaseReportAckConstraints.JSON_PROPERTY_REPORT_ID,
  BaseReportAckConstraints.JSON_PROPERTY_PAYSTATEMENT_REPORT
})
@JsonTypeName("BaseReportAck_constraints")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:21:08.417587988Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class BaseReportAckConstraints {
  public static final String JSON_PROPERTY_ANALYTICS_REPORT_DATA = "analyticsReportData";
  private AnalyticsReportData analyticsReportData;

  public static final String JSON_PROPERTY_ACCOUNT_IDS = "accountIds";
  private List<String> accountIds;

  public static final String JSON_PROPERTY_REPORT_CUSTOM_FIELDS = "reportCustomFields";
  private List<ReportCustomField> reportCustomFields;

  public static final String JSON_PROPERTY_FROM_DATE = "fromDate";
  private Long fromDate;

  public static final String JSON_PROPERTY_SHOW_NSF = "showNsf";
  private Boolean showNsf;

  public static final String JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM = "incomeStreamConfidenceMinimum";
  private Integer incomeStreamConfidenceMinimum;

  public static final String JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA = "voieWithInterviewData";
  private VOIEWithInterviewData voieWithInterviewData;

  public static final String JSON_PROPERTY_VOIE_WITH_STATEMENT_DATA = "voieWithStatementData";
  private VOIEWithStatementData voieWithStatementData;

  public static final String JSON_PROPERTY_STATEMENT_REPORT_DATA = "statementReportData";
  private StatementData statementReportData;

  public static final String JSON_PROPERTY_TO_DATE = "toDate";
  private Long toDate;

  public static final String JSON_PROPERTY_INCLUDE_PENDING = "includePending";
  private Boolean includePending = false;

  public static final String JSON_PROPERTY_VOAI_PDF_DEPOSIT_VIEW = "voaiPdfDepositView";
  private JsonNullable<Boolean> voaiPdfDepositView = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PAYROLL_DATA = "payrollData";
  private PayrollDataOut payrollData;

  public static final String JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE = "payStatementsFromDate";
  private Long payStatementsFromDate;

  public static final String JSON_PROPERTY_REPORT_ID = "reportId";
  private String reportId;

  public static final String JSON_PROPERTY_PAYSTATEMENT_REPORT = "paystatementReport";
  private PayStatementData paystatementReport;

  public BaseReportAckConstraints() {
  }

  public BaseReportAckConstraints analyticsReportData(AnalyticsReportData analyticsReportData) {
    
    this.analyticsReportData = analyticsReportData;
    return this;
  }

   /**
   * Get analyticsReportData
   * @return analyticsReportData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANALYTICS_REPORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnalyticsReportData getAnalyticsReportData() {
    return analyticsReportData;
  }


  @JsonProperty(JSON_PROPERTY_ANALYTICS_REPORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnalyticsReportData(AnalyticsReportData analyticsReportData) {
    this.analyticsReportData = analyticsReportData;
  }


  public BaseReportAckConstraints accountIds(List<String> accountIds) {
    
    this.accountIds = accountIds;
    return this;
  }

  public BaseReportAckConstraints addAccountIdsItem(String accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * An array of account IDs to be included in the report (all accounts will be included if not set)
   * @return accountIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAccountIds() {
    return accountIds;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountIds(List<String> accountIds) {
    this.accountIds = accountIds;
  }


  public BaseReportAckConstraints reportCustomFields(List<ReportCustomField> reportCustomFields) {
    
    this.reportCustomFields = reportCustomFields;
    return this;
  }

  public BaseReportAckConstraints addReportCustomFieldsItem(ReportCustomField reportCustomFieldsItem) {
    if (this.reportCustomFields == null) {
      this.reportCustomFields = new ArrayList<>();
    }
    this.reportCustomFields.add(reportCustomFieldsItem);
    return this;
  }

   /**
   * The &#x60;reportCustomFields&#x60; parameter is used when experiences are associated with a credit decisioning report.  Designate up to 5 custom fields that you&#39;d like associated with the report when it&#39;s generated. Every custom field consists of three variables: &#x60;label&#x60;, &#x60;value&#x60;, and &#x60;shown&#x60;. The &#x60;shown&#x60; variable is \&quot;true\&quot; or \&quot;false\&quot;. * \&quot;true\&quot;: (default) display the custom field in the PDF report * \&quot;false\&quot;: don&#39;t display the custom field in the PDF report  For an experience that generates multiple reports, the &#x60;reportCustomFields&#x60; parameter gets passed to all reports.  All custom fields display in the Reseller Billing API.
   * @return reportCustomFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportCustomField> getReportCustomFields() {
    return reportCustomFields;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportCustomFields(List<ReportCustomField> reportCustomFields) {
    this.reportCustomFields = reportCustomFields;
  }


  public BaseReportAckConstraints fromDate(Long fromDate) {
    
    this.fromDate = fromDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return fromDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFromDate() {
    return fromDate;
  }


  @JsonProperty(JSON_PROPERTY_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromDate(Long fromDate) {
    this.fromDate = fromDate;
  }


  public BaseReportAckConstraints showNsf(Boolean showNsf) {
    
    this.showNsf = showNsf;
    return this;
  }

   /**
   * Include the non-sufficient funds (NSF) summary JSON and the NSF summary PDF section in the report. Data included: * Account  * Total number of NSF funds  * Days since the most recent NFS funds fee
   * @return showNsf
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_NSF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowNsf() {
    return showNsf;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_NSF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowNsf(Boolean showNsf) {
    this.showNsf = showNsf;
  }


  public BaseReportAckConstraints incomeStreamConfidenceMinimum(Integer incomeStreamConfidenceMinimum) {
    
    this.incomeStreamConfidenceMinimum = incomeStreamConfidenceMinimum;
    return this;
  }

   /**
   * Include income streams in the report, based on the income stream&#39;s confidence score. For example, Use the value 50 to include only income streams with a confidence score of 50 or higher.
   * @return incomeStreamConfidenceMinimum
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIncomeStreamConfidenceMinimum() {
    return incomeStreamConfidenceMinimum;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STREAM_CONFIDENCE_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStreamConfidenceMinimum(Integer incomeStreamConfidenceMinimum) {
    this.incomeStreamConfidenceMinimum = incomeStreamConfidenceMinimum;
  }


  public BaseReportAckConstraints voieWithInterviewData(VOIEWithInterviewData voieWithInterviewData) {
    
    this.voieWithInterviewData = voieWithInterviewData;
    return this;
  }

   /**
   * Get voieWithInterviewData
   * @return voieWithInterviewData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VOIEWithInterviewData getVoieWithInterviewData() {
    return voieWithInterviewData;
  }


  @JsonProperty(JSON_PROPERTY_VOIE_WITH_INTERVIEW_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVoieWithInterviewData(VOIEWithInterviewData voieWithInterviewData) {
    this.voieWithInterviewData = voieWithInterviewData;
  }


  public BaseReportAckConstraints voieWithStatementData(VOIEWithStatementData voieWithStatementData) {
    
    this.voieWithStatementData = voieWithStatementData;
    return this;
  }

   /**
   * Get voieWithStatementData
   * @return voieWithStatementData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOIE_WITH_STATEMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VOIEWithStatementData getVoieWithStatementData() {
    return voieWithStatementData;
  }


  @JsonProperty(JSON_PROPERTY_VOIE_WITH_STATEMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVoieWithStatementData(VOIEWithStatementData voieWithStatementData) {
    this.voieWithStatementData = voieWithStatementData;
  }


  public BaseReportAckConstraints statementReportData(StatementData statementReportData) {
    
    this.statementReportData = statementReportData;
    return this;
  }

   /**
   * Get statementReportData
   * @return statementReportData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATEMENT_REPORT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatementData getStatementReportData() {
    return statementReportData;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_REPORT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatementReportData(StatementData statementReportData) {
    this.statementReportData = statementReportData;
  }


  public BaseReportAckConstraints toDate(Long toDate) {
    
    this.toDate = toDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return toDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getToDate() {
    return toDate;
  }


  @JsonProperty(JSON_PROPERTY_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToDate(Long toDate) {
    this.toDate = toDate;
  }


  public BaseReportAckConstraints includePending(Boolean includePending) {
    
    this.includePending = includePending;
    return this;
  }

   /**
   * If pending transactions must be included
   * @return includePending
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludePending() {
    return includePending;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludePending(Boolean includePending) {
    this.includePending = includePending;
  }


  public BaseReportAckConstraints voaiPdfDepositView(Boolean voaiPdfDepositView) {
    this.voaiPdfDepositView = JsonNullable.<Boolean>of(voaiPdfDepositView);
    
    return this;
  }

   /**
   * Provide an alternate PDF view of deposit transactions group by income stream in PDF.
   * @return voaiPdfDepositView
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getVoaiPdfDepositView() {
        return voaiPdfDepositView.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VOAI_PDF_DEPOSIT_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getVoaiPdfDepositView_JsonNullable() {
    return voaiPdfDepositView;
  }
  
  @JsonProperty(JSON_PROPERTY_VOAI_PDF_DEPOSIT_VIEW)
  public void setVoaiPdfDepositView_JsonNullable(JsonNullable<Boolean> voaiPdfDepositView) {
    this.voaiPdfDepositView = voaiPdfDepositView;
  }

  public void setVoaiPdfDepositView(Boolean voaiPdfDepositView) {
    this.voaiPdfDepositView = JsonNullable.<Boolean>of(voaiPdfDepositView);
  }


  public BaseReportAckConstraints payrollData(PayrollDataOut payrollData) {
    
    this.payrollData = payrollData;
    return this;
  }

   /**
   * Get payrollData
   * @return payrollData
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYROLL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayrollDataOut getPayrollData() {
    return payrollData;
  }


  @JsonProperty(JSON_PROPERTY_PAYROLL_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayrollData(PayrollDataOut payrollData) {
    this.payrollData = payrollData;
  }


  public BaseReportAckConstraints payStatementsFromDate(Long payStatementsFromDate) {
    
    this.payStatementsFromDate = payStatementsFromDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return payStatementsFromDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPayStatementsFromDate() {
    return payStatementsFromDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_STATEMENTS_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayStatementsFromDate(Long payStatementsFromDate) {
    this.payStatementsFromDate = payStatementsFromDate;
  }


  public BaseReportAckConstraints reportId(String reportId) {
    
    this.reportId = reportId;
    return this;
  }

   /**
   * A report ID
   * @return reportId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportId() {
    return reportId;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportId(String reportId) {
    this.reportId = reportId;
  }


  public BaseReportAckConstraints paystatementReport(PayStatementData paystatementReport) {
    
    this.paystatementReport = paystatementReport;
    return this;
  }

   /**
   * Get paystatementReport
   * @return paystatementReport
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYSTATEMENT_REPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayStatementData getPaystatementReport() {
    return paystatementReport;
  }


  @JsonProperty(JSON_PROPERTY_PAYSTATEMENT_REPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaystatementReport(PayStatementData paystatementReport) {
    this.paystatementReport = paystatementReport;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseReportAckConstraints baseReportAckConstraints = (BaseReportAckConstraints) o;
    return Objects.equals(this.analyticsReportData, baseReportAckConstraints.analyticsReportData) &&
        Objects.equals(this.accountIds, baseReportAckConstraints.accountIds) &&
        Objects.equals(this.reportCustomFields, baseReportAckConstraints.reportCustomFields) &&
        Objects.equals(this.fromDate, baseReportAckConstraints.fromDate) &&
        Objects.equals(this.showNsf, baseReportAckConstraints.showNsf) &&
        Objects.equals(this.incomeStreamConfidenceMinimum, baseReportAckConstraints.incomeStreamConfidenceMinimum) &&
        Objects.equals(this.voieWithInterviewData, baseReportAckConstraints.voieWithInterviewData) &&
        Objects.equals(this.voieWithStatementData, baseReportAckConstraints.voieWithStatementData) &&
        Objects.equals(this.statementReportData, baseReportAckConstraints.statementReportData) &&
        Objects.equals(this.toDate, baseReportAckConstraints.toDate) &&
        Objects.equals(this.includePending, baseReportAckConstraints.includePending) &&
        equalsNullable(this.voaiPdfDepositView, baseReportAckConstraints.voaiPdfDepositView) &&
        Objects.equals(this.payrollData, baseReportAckConstraints.payrollData) &&
        Objects.equals(this.payStatementsFromDate, baseReportAckConstraints.payStatementsFromDate) &&
        Objects.equals(this.reportId, baseReportAckConstraints.reportId) &&
        Objects.equals(this.paystatementReport, baseReportAckConstraints.paystatementReport);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticsReportData, accountIds, reportCustomFields, fromDate, showNsf, incomeStreamConfidenceMinimum, voieWithInterviewData, voieWithStatementData, statementReportData, toDate, includePending, hashCodeNullable(voaiPdfDepositView), payrollData, payStatementsFromDate, reportId, paystatementReport);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseReportAckConstraints {\n");
    sb.append("    analyticsReportData: ").append(toIndentedString(analyticsReportData)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    reportCustomFields: ").append(toIndentedString(reportCustomFields)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    showNsf: ").append(toIndentedString(showNsf)).append("\n");
    sb.append("    incomeStreamConfidenceMinimum: ").append(toIndentedString(incomeStreamConfidenceMinimum)).append("\n");
    sb.append("    voieWithInterviewData: ").append(toIndentedString(voieWithInterviewData)).append("\n");
    sb.append("    voieWithStatementData: ").append(toIndentedString(voieWithStatementData)).append("\n");
    sb.append("    statementReportData: ").append(toIndentedString(statementReportData)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    includePending: ").append(toIndentedString(includePending)).append("\n");
    sb.append("    voaiPdfDepositView: ").append(toIndentedString(voaiPdfDepositView)).append("\n");
    sb.append("    payrollData: ").append(toIndentedString(payrollData)).append("\n");
    sb.append("    payStatementsFromDate: ").append(toIndentedString(payStatementsFromDate)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    paystatementReport: ").append(toIndentedString(paystatementReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

