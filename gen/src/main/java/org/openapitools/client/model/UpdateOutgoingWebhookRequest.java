/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateOutgoingWebhookRequest
 */
@JsonPropertyOrder({
  UpdateOutgoingWebhookRequest.JSON_PROPERTY_ID,
  UpdateOutgoingWebhookRequest.JSON_PROPERTY_CHANNEL_ID,
  UpdateOutgoingWebhookRequest.JSON_PROPERTY_DISPLAY_NAME,
  UpdateOutgoingWebhookRequest.JSON_PROPERTY_DESCRIPTION
})
@JsonTypeName("UpdateOutgoingWebhook_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UpdateOutgoingWebhookRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private String displayName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public UpdateOutgoingWebhookRequest() {
  }

  public UpdateOutgoingWebhookRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Outgoing webhook GUID
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateOutgoingWebhookRequest channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The ID of a public channel or private group that receives the webhook payloads.
   * @return channelId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public UpdateOutgoingWebhookRequest displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name for this incoming webhook
   * @return displayName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public UpdateOutgoingWebhookRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description for this incoming webhook
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOutgoingWebhookRequest updateOutgoingWebhookRequest = (UpdateOutgoingWebhookRequest) o;
    return Objects.equals(this.id, updateOutgoingWebhookRequest.id) &&
        Objects.equals(this.channelId, updateOutgoingWebhookRequest.channelId) &&
        Objects.equals(this.displayName, updateOutgoingWebhookRequest.displayName) &&
        Objects.equals(this.description, updateOutgoingWebhookRequest.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, channelId, displayName, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOutgoingWebhookRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

