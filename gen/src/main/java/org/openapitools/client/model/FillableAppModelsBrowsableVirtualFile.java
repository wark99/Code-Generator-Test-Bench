/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Bool;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FillableAppModelsBrowsableVirtualFile
 */
@JsonPropertyOrder({
  FillableAppModelsBrowsableVirtualFile.JSON_PROPERTY_NAME,
  FillableAppModelsBrowsableVirtualFile.JSON_PROPERTY_VALIDATED,
  FillableAppModelsBrowsableVirtualFile.JSON_PROPERTY_PUBLISHED
})
@JsonTypeName("Fillable_App\Models\BrowsableVirtualFile")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FillableAppModelsBrowsableVirtualFile {
  public static final String JSON_PROPERTY_NAME = "name";
  private Object name = null;

  /**
   * Gets or Sets validated
   */
  public enum ValidatedEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    ValidatedEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValidatedEnum fromValue(Bool value) {
      for (ValidatedEnum b : ValidatedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VALIDATED = "validated";
  private ValidatedEnum validated = null;

  /**
   * Gets or Sets published
   */
  public enum PublishedEnum {
    TRUE("true"),
    
    FALSE("false");

    private Bool value;

    PublishedEnum(Bool value) {
      this.value = value;
    }

    @JsonValue
    public Bool getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PublishedEnum fromValue(Bool value) {
      for (PublishedEnum b : PublishedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PUBLISHED = "published";
  private PublishedEnum published = null;

  public FillableAppModelsBrowsableVirtualFile() {
  }

  public FillableAppModelsBrowsableVirtualFile name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(Object name) {
    this.name = name;
  }


  public FillableAppModelsBrowsableVirtualFile validated(ValidatedEnum validated) {
    
    this.validated = validated;
    return this;
  }

   /**
   * Get validated
   * @return validated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ValidatedEnum getValidated() {
    return validated;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidated(ValidatedEnum validated) {
    this.validated = validated;
  }


  public FillableAppModelsBrowsableVirtualFile published(PublishedEnum published) {
    
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PublishedEnum getPublished() {
    return published;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublished(PublishedEnum published) {
    this.published = published;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FillableAppModelsBrowsableVirtualFile fillableAppModelsBrowsableVirtualFile = (FillableAppModelsBrowsableVirtualFile) o;
    return Objects.equals(this.name, fillableAppModelsBrowsableVirtualFile.name) &&
        Objects.equals(this.validated, fillableAppModelsBrowsableVirtualFile.validated) &&
        Objects.equals(this.published, fillableAppModelsBrowsableVirtualFile.published);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, validated, published);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FillableAppModelsBrowsableVirtualFile {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    validated: ").append(toIndentedString(validated)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

