/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AddressNodeNormSchemeCreator;
import org.openapitools.client.model.Created;
import org.openapitools.client.model.Updated;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddressNodeNormScheme
 */
@JsonPropertyOrder({
  AddressNodeNormScheme.JSON_PROPERTY_CREATED,
  AddressNodeNormScheme.JSON_PROPERTY_CREATOR,
  AddressNodeNormScheme.JSON_PROPERTY_UPDATED,
  AddressNodeNormScheme.JSON_PROPERTY_UPDATER,
  AddressNodeNormScheme.JSON_PROPERTY_ID,
  AddressNodeNormScheme.JSON_PROPERTY_CONSUMPTION_GROUP_ID,
  AddressNodeNormScheme.JSON_PROPERTY_GROUP_ID,
  AddressNodeNormScheme.JSON_PROPERTY_ADDR_ID,
  AddressNodeNormScheme.JSON_PROPERTY_NORM,
  AddressNodeNormScheme.JSON_PROPERTY_MONTH,
  AddressNodeNormScheme.JSON_PROPERTY_YEAR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AddressNodeNormScheme {
  public static final String JSON_PROPERTY_CREATED = "created";
  private Created created;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private AddressNodeNormSchemeCreator creator;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private Updated updated;

  public static final String JSON_PROPERTY_UPDATER = "updater";
  private AddressNodeNormSchemeCreator updater;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_CONSUMPTION_GROUP_ID = "consumption_group_id";
  private Integer consumptionGroupId;

  public static final String JSON_PROPERTY_GROUP_ID = "group_id";
  private Integer groupId;

  public static final String JSON_PROPERTY_ADDR_ID = "addr_id";
  private Integer addrId;

  public static final String JSON_PROPERTY_NORM = "norm";
  private Integer norm;

  public static final String JSON_PROPERTY_MONTH = "month";
  private Integer month;

  public static final String JSON_PROPERTY_YEAR = "year";
  private Integer year;

  public AddressNodeNormScheme() {
  }

  public AddressNodeNormScheme created(Created created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Created getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(Created created) {
    this.created = created;
  }


  public AddressNodeNormScheme creator(AddressNodeNormSchemeCreator creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreator(AddressNodeNormSchemeCreator creator) {
    this.creator = creator;
  }


  public AddressNodeNormScheme updated(Updated updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Updated getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdated(Updated updated) {
    this.updated = updated;
  }


  public AddressNodeNormScheme updater(AddressNodeNormSchemeCreator updater) {
    
    this.updater = updater;
    return this;
  }

   /**
   * Get updater
   * @return updater
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AddressNodeNormSchemeCreator getUpdater() {
    return updater;
  }


  @JsonProperty(JSON_PROPERTY_UPDATER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdater(AddressNodeNormSchemeCreator updater) {
    this.updater = updater;
  }


  public AddressNodeNormScheme id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique address norm id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public AddressNodeNormScheme consumptionGroupId(Integer consumptionGroupId) {
    
    this.consumptionGroupId = consumptionGroupId;
    return this;
  }

   /**
   * consumption group id
   * @return consumptionGroupId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getConsumptionGroupId() {
    return consumptionGroupId;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMPTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumptionGroupId(Integer consumptionGroupId) {
    this.consumptionGroupId = consumptionGroupId;
  }


  public AddressNodeNormScheme groupId(Integer groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getGroupId() {
    return groupId;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }


  public AddressNodeNormScheme addrId(Integer addrId) {
    
    this.addrId = addrId;
    return this;
  }

   /**
   * Get addrId
   * @return addrId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAddrId() {
    return addrId;
  }


  @JsonProperty(JSON_PROPERTY_ADDR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddrId(Integer addrId) {
    this.addrId = addrId;
  }


  public AddressNodeNormScheme norm(Integer norm) {
    
    this.norm = norm;
    return this;
  }

   /**
   * address norm for month
   * @return norm
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNorm() {
    return norm;
  }


  @JsonProperty(JSON_PROPERTY_NORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNorm(Integer norm) {
    this.norm = norm;
  }


  public AddressNodeNormScheme month(Integer month) {
    
    this.month = month;
    return this;
  }

   /**
   * number of month
   * @return month
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMonth() {
    return month;
  }


  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonth(Integer month) {
    this.month = month;
  }


  public AddressNodeNormScheme year(Integer year) {
    
    this.year = year;
    return this;
  }

   /**
   * year
   * @return year
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setYear(Integer year) {
    this.year = year;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressNodeNormScheme addressNodeNormScheme = (AddressNodeNormScheme) o;
    return Objects.equals(this.created, addressNodeNormScheme.created) &&
        Objects.equals(this.creator, addressNodeNormScheme.creator) &&
        Objects.equals(this.updated, addressNodeNormScheme.updated) &&
        Objects.equals(this.updater, addressNodeNormScheme.updater) &&
        Objects.equals(this.id, addressNodeNormScheme.id) &&
        Objects.equals(this.consumptionGroupId, addressNodeNormScheme.consumptionGroupId) &&
        Objects.equals(this.groupId, addressNodeNormScheme.groupId) &&
        Objects.equals(this.addrId, addressNodeNormScheme.addrId) &&
        Objects.equals(this.norm, addressNodeNormScheme.norm) &&
        Objects.equals(this.month, addressNodeNormScheme.month) &&
        Objects.equals(this.year, addressNodeNormScheme.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, creator, updated, updater, id, consumptionGroupId, groupId, addrId, norm, month, year);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressNodeNormScheme {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    consumptionGroupId: ").append(toIndentedString(consumptionGroupId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    addrId: ").append(toIndentedString(addrId)).append("\n");
    sb.append("    norm: ").append(toIndentedString(norm)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

