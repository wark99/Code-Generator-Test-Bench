/*
 * Euboul - Studio Backend
 * listing of all APIs of studio backend 
 *
 * The version of the OpenAPI document: 0.1.25
 * Contact: admin@cognitivegarage.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SkillType;
import org.openapitools.client.model.Status;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SkillDetails
 */
@JsonPropertyOrder({
  SkillDetails.JSON_PROPERTY_ID,
  SkillDetails.JSON_PROPERTY_TENANT_ID,
  SkillDetails.JSON_PROPERTY_PROJECT_ID,
  SkillDetails.JSON_PROPERTY_SKILL_TYPE,
  SkillDetails.JSON_PROPERTY_NAME,
  SkillDetails.JSON_PROPERTY_VERSION,
  SkillDetails.JSON_PROPERTY_DESCRIPTION,
  SkillDetails.JSON_PROPERTY_STATUS,
  SkillDetails.JSON_PROPERTY_LOCKED_BY,
  SkillDetails.JSON_PROPERTY_DATA,
  SkillDetails.JSON_PROPERTY_CANVAS_DATA
})
@JsonTypeName("skillDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:14:21.073249278Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SkillDetails {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private String tenantId;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private String projectId;

  public static final String JSON_PROPERTY_SKILL_TYPE = "skillType";
  private SkillType skillType;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Status status;

  public static final String JSON_PROPERTY_LOCKED_BY = "lockedBy";
  private String lockedBy;

  public static final String JSON_PROPERTY_DATA = "data";
  private Object data;

  public static final String JSON_PROPERTY_CANVAS_DATA = "canvasData";
  private Object canvasData;

  public SkillDetails() {
  }

  public SkillDetails id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of a skill .
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SkillDetails tenantId(String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * The ID of the tenant.
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public SkillDetails projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * The ID of the project.
   * @return projectId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public SkillDetails skillType(SkillType skillType) {
    
    this.skillType = skillType;
    return this;
  }

   /**
   * Get skillType
   * @return skillType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKILL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SkillType getSkillType() {
    return skillType;
  }


  @JsonProperty(JSON_PROPERTY_SKILL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkillType(SkillType skillType) {
    this.skillType = skillType;
  }


  public SkillDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the Dt.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SkillDetails version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of the Dt.
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public SkillDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the Dt.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SkillDetails status(Status status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Status getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(Status status) {
    this.status = status;
  }


  public SkillDetails lockedBy(String lockedBy) {
    
    this.lockedBy = lockedBy;
    return this;
  }

   /**
   * The user who locked the Dt.
   * @return lockedBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLockedBy() {
    return lockedBy;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockedBy(String lockedBy) {
    this.lockedBy = lockedBy;
  }


  public SkillDetails data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Additional data for the Dt.
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Object data) {
    this.data = data;
  }


  public SkillDetails canvasData(Object canvasData) {
    
    this.canvasData = canvasData;
    return this;
  }

   /**
   * Data related to the Dt&#39;s canvas.
   * @return canvasData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCanvasData() {
    return canvasData;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasData(Object canvasData) {
    this.canvasData = canvasData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillDetails skillDetails = (SkillDetails) o;
    return Objects.equals(this.id, skillDetails.id) &&
        Objects.equals(this.tenantId, skillDetails.tenantId) &&
        Objects.equals(this.projectId, skillDetails.projectId) &&
        Objects.equals(this.skillType, skillDetails.skillType) &&
        Objects.equals(this.name, skillDetails.name) &&
        Objects.equals(this.version, skillDetails.version) &&
        Objects.equals(this.description, skillDetails.description) &&
        Objects.equals(this.status, skillDetails.status) &&
        Objects.equals(this.lockedBy, skillDetails.lockedBy) &&
        Objects.equals(this.data, skillDetails.data) &&
        Objects.equals(this.canvasData, skillDetails.canvasData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, projectId, skillType, name, version, description, status, lockedBy, data, canvasData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    skillType: ").append(toIndentedString(skillType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lockedBy: ").append(toIndentedString(lockedBy)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    canvasData: ").append(toIndentedString(canvasData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

