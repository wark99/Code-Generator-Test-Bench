/*
 * Vikey Api
 * <h2>Description</h2></br><p>The Vikey Bureaucracy API can be exploited to manage every bureaucracy service inside Vikey:</p> <ul> <li>Portale alloggiati<li>Istat (to find out which regions are managed by Vikey you can use the /istat/regions endpoint)</ul></br><p>Follows the documentation about the most used APIs<br> This should be enough for the most cases, if you need more details on others APIs please drop a line to supporto@vikey.it.</p></br><h2>API Authorization</h2> <p> All the Vikey APIs have to been authorized with an <code>API token</code> inside the header of the HTTP packet. Please ask for the <code>API token</code> to your account reference or to supporto@vikey.it.</p></br><em> Please contact supporto@vikey.it in order to be guided to the choice.<br/><br/> **Country codes** --> <a href=\"https://alloggiatiweb.poliziadistato.it/PortaleAlloggiati/ashx/Download.ashx?ID=1&N=STATI\">Link</a><br/><br/>**Province and City codes** --> <a href=\"https://alloggiatiweb.poliziadistato.it/PortaleAlloggiati/ashx/Download.ashx?ID=0&N=COMUNI\">Link</a>
 *
 * The version of the OpenAPI document: 1.0.1-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostPaDataGuestsInner
 */
@JsonPropertyOrder({
  PostPaDataGuestsInner.JSON_PROPERTY_IS_MAIN_GUEST,
  PostPaDataGuestsInner.JSON_PROPERTY_DOC_TYPE,
  PostPaDataGuestsInner.JSON_PROPERTY_ID_DOC,
  PostPaDataGuestsInner.JSON_PROPERTY_DOC_PLACE,
  PostPaDataGuestsInner.JSON_PROPERTY_BIRTH_DATE,
  PostPaDataGuestsInner.JSON_PROPERTY_BIRTH_COUNTRY,
  PostPaDataGuestsInner.JSON_PROPERTY_BIRTH_PROV,
  PostPaDataGuestsInner.JSON_PROPERTY_BIRTH_CITY,
  PostPaDataGuestsInner.JSON_PROPERTY_FIRST_NAME,
  PostPaDataGuestsInner.JSON_PROPERTY_LAST_NAME,
  PostPaDataGuestsInner.JSON_PROPERTY_SEX,
  PostPaDataGuestsInner.JSON_PROPERTY_CITIZENSHIP
})
@JsonTypeName("post_pa_data_guests_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:17.271343072Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PostPaDataGuestsInner {
  public static final String JSON_PROPERTY_IS_MAIN_GUEST = "is_main_guest";
  private Boolean isMainGuest;

  public static final String JSON_PROPERTY_DOC_TYPE = "doc_type";
  private String docType;

  public static final String JSON_PROPERTY_ID_DOC = "id_doc";
  private String idDoc;

  public static final String JSON_PROPERTY_DOC_PLACE = "doc_place";
  private String docPlace;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birth_date";
  private LocalDate birthDate;

  public static final String JSON_PROPERTY_BIRTH_COUNTRY = "birth_country";
  private String birthCountry;

  public static final String JSON_PROPERTY_BIRTH_PROV = "birth_prov";
  private String birthProv;

  public static final String JSON_PROPERTY_BIRTH_CITY = "birth_city";
  private String birthCity;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private String lastName;

  public static final String JSON_PROPERTY_SEX = "sex";
  private Integer sex;

  public static final String JSON_PROPERTY_CITIZENSHIP = "citizenship";
  private String citizenship;

  public PostPaDataGuestsInner() {
  }

  public PostPaDataGuestsInner isMainGuest(Boolean isMainGuest) {
    
    this.isMainGuest = isMainGuest;
    return this;
  }

   /**
   * If is the main guest of the reservation set True, else False
   * @return isMainGuest
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_MAIN_GUEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsMainGuest() {
    return isMainGuest;
  }


  @JsonProperty(JSON_PROPERTY_IS_MAIN_GUEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsMainGuest(Boolean isMainGuest) {
    this.isMainGuest = isMainGuest;
  }


  public PostPaDataGuestsInner docType(String docType) {
    
    this.docType = docType;
    return this;
  }

   /**
   * The type of document, must have one of the following value. &#39;IDENT&#39; (paper identity card), &#39;IDELE&#39; (electronic identity card), &#39;PASOR&#39; (passport), &#39;PATEN&#39; (driving licence)
   * @return docType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocType() {
    return docType;
  }


  @JsonProperty(JSON_PROPERTY_DOC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocType(String docType) {
    this.docType = docType;
  }


  public PostPaDataGuestsInner idDoc(String idDoc) {
    
    this.idDoc = idDoc;
    return this;
  }

   /**
   * Document id
   * @return idDoc
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID_DOC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdDoc() {
    return idDoc;
  }


  @JsonProperty(JSON_PROPERTY_ID_DOC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdDoc(String idDoc) {
    this.idDoc = idDoc;
  }


  public PostPaDataGuestsInner docPlace(String docPlace) {
    
    this.docPlace = docPlace;
    return this;
  }

   /**
   * Document relase country code (following the codes specificated in the API description)
   * @return docPlace
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOC_PLACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocPlace() {
    return docPlace;
  }


  @JsonProperty(JSON_PROPERTY_DOC_PLACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocPlace(String docPlace) {
    this.docPlace = docPlace;
  }


  public PostPaDataGuestsInner birthDate(LocalDate birthDate) {
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Birth date of the guest
   * @return birthDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getBirthDate() {
    return birthDate;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }


  public PostPaDataGuestsInner birthCountry(String birthCountry) {
    
    this.birthCountry = birthCountry;
    return this;
  }

   /**
   * Birth country code of the guest (following the codes specificated in the API description)
   * @return birthCountry
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIRTH_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBirthCountry() {
    return birthCountry;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBirthCountry(String birthCountry) {
    this.birthCountry = birthCountry;
  }


  public PostPaDataGuestsInner birthProv(String birthProv) {
    
    this.birthProv = birthProv;
    return this;
  }

   /**
   * Birth province code of the guest, mandatory if birth country is Italy (following the codes specificated in the API description)
   * @return birthProv
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_PROV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthProv() {
    return birthProv;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_PROV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthProv(String birthProv) {
    this.birthProv = birthProv;
  }


  public PostPaDataGuestsInner birthCity(String birthCity) {
    
    this.birthCity = birthCity;
    return this;
  }

   /**
   * Birth city code of the guest, mandatory if birth country is Italy (following the codes specificated in the API description)
   * @return birthCity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthCity() {
    return birthCity;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthCity(String birthCity) {
    this.birthCity = birthCity;
  }


  public PostPaDataGuestsInner firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the guest
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public PostPaDataGuestsInner lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the guest
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public PostPaDataGuestsInner sex(Integer sex) {
    
    this.sex = sex;
    return this;
  }

   /**
   * Sex of the guest, 1 if male, 2 if female
   * @return sex
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSex() {
    return sex;
  }


  @JsonProperty(JSON_PROPERTY_SEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSex(Integer sex) {
    this.sex = sex;
  }


  public PostPaDataGuestsInner citizenship(String citizenship) {
    
    this.citizenship = citizenship;
    return this;
  }

   /**
   * Citizenship code of the guest (following the codes specificated in the API description)
   * @return citizenship
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CITIZENSHIP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCitizenship() {
    return citizenship;
  }


  @JsonProperty(JSON_PROPERTY_CITIZENSHIP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCitizenship(String citizenship) {
    this.citizenship = citizenship;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPaDataGuestsInner postPaDataGuestsInner = (PostPaDataGuestsInner) o;
    return Objects.equals(this.isMainGuest, postPaDataGuestsInner.isMainGuest) &&
        Objects.equals(this.docType, postPaDataGuestsInner.docType) &&
        Objects.equals(this.idDoc, postPaDataGuestsInner.idDoc) &&
        Objects.equals(this.docPlace, postPaDataGuestsInner.docPlace) &&
        Objects.equals(this.birthDate, postPaDataGuestsInner.birthDate) &&
        Objects.equals(this.birthCountry, postPaDataGuestsInner.birthCountry) &&
        Objects.equals(this.birthProv, postPaDataGuestsInner.birthProv) &&
        Objects.equals(this.birthCity, postPaDataGuestsInner.birthCity) &&
        Objects.equals(this.firstName, postPaDataGuestsInner.firstName) &&
        Objects.equals(this.lastName, postPaDataGuestsInner.lastName) &&
        Objects.equals(this.sex, postPaDataGuestsInner.sex) &&
        Objects.equals(this.citizenship, postPaDataGuestsInner.citizenship);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isMainGuest, docType, idDoc, docPlace, birthDate, birthCountry, birthProv, birthCity, firstName, lastName, sex, citizenship);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPaDataGuestsInner {\n");
    sb.append("    isMainGuest: ").append(toIndentedString(isMainGuest)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    idDoc: ").append(toIndentedString(idDoc)).append("\n");
    sb.append("    docPlace: ").append(toIndentedString(docPlace)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    birthCountry: ").append(toIndentedString(birthCountry)).append("\n");
    sb.append("    birthProv: ").append(toIndentedString(birthProv)).append("\n");
    sb.append("    birthCity: ").append(toIndentedString(birthCity)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    citizenship: ").append(toIndentedString(citizenship)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

