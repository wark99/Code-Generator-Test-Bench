/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReportTransactionNewTxBased
 */
@JsonPropertyOrder({
  ReportTransactionNewTxBased.JSON_PROPERTY_ID,
  ReportTransactionNewTxBased.JSON_PROPERTY_AMOUNT,
  ReportTransactionNewTxBased.JSON_PROPERTY_POSTED_DATE,
  ReportTransactionNewTxBased.JSON_PROPERTY_DESCRIPTION,
  ReportTransactionNewTxBased.JSON_PROPERTY_MEMO,
  ReportTransactionNewTxBased.JSON_PROPERTY_NORMALIZED_PAYEE,
  ReportTransactionNewTxBased.JSON_PROPERTY_INSTITUTION_TRANSACTION_ID,
  ReportTransactionNewTxBased.JSON_PROPERTY_CATEGORY,
  ReportTransactionNewTxBased.JSON_PROPERTY_TYPE,
  ReportTransactionNewTxBased.JSON_PROPERTY_SECURITY_TYPE,
  ReportTransactionNewTxBased.JSON_PROPERTY_SYMBOL,
  ReportTransactionNewTxBased.JSON_PROPERTY_COMMISSION,
  ReportTransactionNewTxBased.JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T14:25:40.114879426Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ReportTransactionNewTxBased {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;

  public static final String JSON_PROPERTY_POSTED_DATE = "postedDate";
  private Long postedDate;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private String memo;

  public static final String JSON_PROPERTY_NORMALIZED_PAYEE = "normalizedPayee";
  private String normalizedPayee;

  public static final String JSON_PROPERTY_INSTITUTION_TRANSACTION_ID = "institutionTransactionId";
  private String institutionTransactionId;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_SECURITY_TYPE = "securityType";
  private String securityType;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_COMMISSION = "commission";
  private BigDecimal commission;

  public static final String JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE = "investmentTransactionType";
  private String investmentTransactionType;

  public ReportTransactionNewTxBased() {
  }

  public ReportTransactionNewTxBased id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * A transaction ID
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ReportTransactionNewTxBased amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values.
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public ReportTransactionNewTxBased postedDate(Long postedDate) {
    
    this.postedDate = postedDate;
    return this;
  }

   /**
   * A timestamp showing when the transaction was posted or cleared by the institution
   * @return postedDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPostedDate() {
    return postedDate;
  }


  @JsonProperty(JSON_PROPERTY_POSTED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostedDate(Long postedDate) {
    this.postedDate = postedDate;
  }


  public ReportTransactionNewTxBased description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the transaction, as provided by the institution (often known as &#x60;payee&#x60;). In the event that this field is left blank by the institution, Finicity will pass a value of \&quot;No description provided by institution\&quot;. All other values are provided by the institution.
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ReportTransactionNewTxBased memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * The memo field of the transaction, as provided by the institution. The institution must provide either a description, a memo, or both. It is recommended to concatenate the two fields into a single value.
   * @return memo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemo() {
    return memo;
  }


  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemo(String memo) {
    this.memo = memo;
  }


  public ReportTransactionNewTxBased normalizedPayee(String normalizedPayee) {
    
    this.normalizedPayee = normalizedPayee;
    return this;
  }

   /**
   * A normalized payee, derived from the transaction&#39;s &#x60;description&#x60; and &#x60;memo&#x60; fields
   * @return normalizedPayee
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NORMALIZED_PAYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNormalizedPayee() {
    return normalizedPayee;
  }


  @JsonProperty(JSON_PROPERTY_NORMALIZED_PAYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNormalizedPayee(String normalizedPayee) {
    this.normalizedPayee = normalizedPayee;
  }


  public ReportTransactionNewTxBased institutionTransactionId(String institutionTransactionId) {
    
    this.institutionTransactionId = institutionTransactionId;
    return this;
  }

   /**
   * The unique identifier given by the FI for each transaction
   * @return institutionTransactionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstitutionTransactionId() {
    return institutionTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionTransactionId(String institutionTransactionId) {
    this.institutionTransactionId = institutionTransactionId;
  }


  public ReportTransactionNewTxBased category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * One of the values from Categories (assigned based on the payee name)
   * @return category
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public ReportTransactionNewTxBased type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * One of the values from transaction types
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ReportTransactionNewTxBased securityType(String securityType) {
    
    this.securityType = securityType;
    return this;
  }

   /**
   * The type of investment security (VOA only)
   * @return securityType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityType() {
    return securityType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityType(String securityType) {
    this.securityType = securityType;
  }


  public ReportTransactionNewTxBased symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Investment symbol (VOA only)
   * @return symbol
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public ReportTransactionNewTxBased commission(BigDecimal commission) {
    
    this.commission = commission;
    return this;
  }

   /**
   * A commission amount
   * @return commission
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCommission() {
    return commission;
  }


  @JsonProperty(JSON_PROPERTY_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommission(BigDecimal commission) {
    this.commission = commission;
  }


  public ReportTransactionNewTxBased investmentTransactionType(String investmentTransactionType) {
    
    this.investmentTransactionType = investmentTransactionType;
    return this;
  }

   /**
   * Keywords in the description and memo fields were used to translate investment transactions into these types  * &#x60;cancel&#x60;  * &#x60;purchaseToClose&#x60;  * &#x60;purchaseToCover&#x60;  * &#x60;contribution&#x60;  * &#x60;optionExercise&#x60;  * &#x60;optionExpiration&#x60;  * &#x60;fee&#x60;  * &#x60;soldToClose&#x60;  * &#x60;soldToOpen&#x60;  * &#x60;split&#x60;  * &#x60;transfer&#x60;  * &#x60;returnOfCapital&#x60;  * &#x60;income&#x60;  * &#x60;purchased&#x60;  * &#x60;sold&#x60;  * &#x60;dividendReinvest&#x60;  * &#x60;dividend&#x60;  * &#x60;reinvestOfIncome&#x60;  * &#x60;interest&#x60;  * &#x60;deposit&#x60;  * &#x60;otherInfo&#x60; 
   * @return investmentTransactionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvestmentTransactionType() {
    return investmentTransactionType;
  }


  @JsonProperty(JSON_PROPERTY_INVESTMENT_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestmentTransactionType(String investmentTransactionType) {
    this.investmentTransactionType = investmentTransactionType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportTransactionNewTxBased reportTransactionNewTxBased = (ReportTransactionNewTxBased) o;
    return Objects.equals(this.id, reportTransactionNewTxBased.id) &&
        Objects.equals(this.amount, reportTransactionNewTxBased.amount) &&
        Objects.equals(this.postedDate, reportTransactionNewTxBased.postedDate) &&
        Objects.equals(this.description, reportTransactionNewTxBased.description) &&
        Objects.equals(this.memo, reportTransactionNewTxBased.memo) &&
        Objects.equals(this.normalizedPayee, reportTransactionNewTxBased.normalizedPayee) &&
        Objects.equals(this.institutionTransactionId, reportTransactionNewTxBased.institutionTransactionId) &&
        Objects.equals(this.category, reportTransactionNewTxBased.category) &&
        Objects.equals(this.type, reportTransactionNewTxBased.type) &&
        Objects.equals(this.securityType, reportTransactionNewTxBased.securityType) &&
        Objects.equals(this.symbol, reportTransactionNewTxBased.symbol) &&
        Objects.equals(this.commission, reportTransactionNewTxBased.commission) &&
        Objects.equals(this.investmentTransactionType, reportTransactionNewTxBased.investmentTransactionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, postedDate, description, memo, normalizedPayee, institutionTransactionId, category, type, securityType, symbol, commission, investmentTransactionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportTransactionNewTxBased {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    postedDate: ").append(toIndentedString(postedDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    normalizedPayee: ").append(toIndentedString(normalizedPayee)).append("\n");
    sb.append("    institutionTransactionId: ").append(toIndentedString(institutionTransactionId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    investmentTransactionType: ").append(toIndentedString(investmentTransactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

