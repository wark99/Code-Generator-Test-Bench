/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Custom2;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PhoneNumber
 */
@JsonPropertyOrder({
  PhoneNumber.JSON_PROPERTY_AREA_CODE,
  PhoneNumber.JSON_PROPERTY_CUSTOM,
  PhoneNumber.JSON_PROPERTY_DIALABLE,
  PhoneNumber.JSON_PROPERTY_EXCHANGE,
  PhoneNumber.JSON_PROPERTY_EXTENSION,
  PhoneNumber.JSON_PROPERTY_LISTED,
  PhoneNumber.JSON_PROPERTY_QUALIFIER,
  PhoneNumber.JSON_PROPERTY_SUFFIX,
  PhoneNumber.JSON_PROPERTY_TYPE,
  PhoneNumber.JSON_PROPERTY_UNPARSED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PhoneNumber {
  public static final String JSON_PROPERTY_AREA_CODE = "areaCode";
  private String areaCode;

  public static final String JSON_PROPERTY_CUSTOM = "custom";
  private Custom2 custom;

  public static final String JSON_PROPERTY_DIALABLE = "dialable";
  private String dialable;

  public static final String JSON_PROPERTY_EXCHANGE = "exchange";
  private String exchange;

  public static final String JSON_PROPERTY_EXTENSION = "extension";
  private String extension;

  public static final String JSON_PROPERTY_LISTED = "listed";
  private String listed;

  public static final String JSON_PROPERTY_QUALIFIER = "qualifier";
  private String qualifier;

  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_UNPARSED = "unparsed";
  private String unparsed;

  public PhoneNumber() {
  }

  public PhoneNumber areaCode(String areaCode) {
    
    this.areaCode = areaCode;
    return this;
  }

   /**
   * Get areaCode
   * @return areaCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AREA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAreaCode() {
    return areaCode;
  }


  @JsonProperty(JSON_PROPERTY_AREA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAreaCode(String areaCode) {
    this.areaCode = areaCode;
  }


  public PhoneNumber custom(Custom2 custom) {
    
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Custom2 getCustom() {
    return custom;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustom(Custom2 custom) {
    this.custom = custom;
  }


  public PhoneNumber dialable(String dialable) {
    
    this.dialable = dialable;
    return this;
  }

   /**
   * Get dialable
   * @return dialable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIALABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDialable() {
    return dialable;
  }


  @JsonProperty(JSON_PROPERTY_DIALABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDialable(String dialable) {
    this.dialable = dialable;
  }


  public PhoneNumber exchange(String exchange) {
    
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchange() {
    return exchange;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchange(String exchange) {
    this.exchange = exchange;
  }


  public PhoneNumber extension(String extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtension() {
    return extension;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtension(String extension) {
    this.extension = extension;
  }


  public PhoneNumber listed(String listed) {
    
    this.listed = listed;
    return this;
  }

   /**
   * Get listed
   * @return listed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LISTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getListed() {
    return listed;
  }


  @JsonProperty(JSON_PROPERTY_LISTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListed(String listed) {
    this.listed = listed;
  }


  public PhoneNumber qualifier(String qualifier) {
    
    this.qualifier = qualifier;
    return this;
  }

   /**
   * Get qualifier
   * @return qualifier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUALIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQualifier() {
    return qualifier;
  }


  @JsonProperty(JSON_PROPERTY_QUALIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQualifier(String qualifier) {
    this.qualifier = qualifier;
  }


  public PhoneNumber suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public PhoneNumber type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PhoneNumber unparsed(String unparsed) {
    
    this.unparsed = unparsed;
    return this;
  }

   /**
   * Get unparsed
   * @return unparsed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNPARSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnparsed() {
    return unparsed;
  }


  @JsonProperty(JSON_PROPERTY_UNPARSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnparsed(String unparsed) {
    this.unparsed = unparsed;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumber phoneNumber = (PhoneNumber) o;
    return Objects.equals(this.areaCode, phoneNumber.areaCode) &&
        Objects.equals(this.custom, phoneNumber.custom) &&
        Objects.equals(this.dialable, phoneNumber.dialable) &&
        Objects.equals(this.exchange, phoneNumber.exchange) &&
        Objects.equals(this.extension, phoneNumber.extension) &&
        Objects.equals(this.listed, phoneNumber.listed) &&
        Objects.equals(this.qualifier, phoneNumber.qualifier) &&
        Objects.equals(this.suffix, phoneNumber.suffix) &&
        Objects.equals(this.type, phoneNumber.type) &&
        Objects.equals(this.unparsed, phoneNumber.unparsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(areaCode, custom, dialable, exchange, extension, listed, qualifier, suffix, type, unparsed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumber {\n");
    sb.append("    areaCode: ").append(toIndentedString(areaCode)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    dialable: ").append(toIndentedString(dialable)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    listed: ").append(toIndentedString(listed)).append("\n");
    sb.append("    qualifier: ").append(toIndentedString(qualifier)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unparsed: ").append(toIndentedString(unparsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

