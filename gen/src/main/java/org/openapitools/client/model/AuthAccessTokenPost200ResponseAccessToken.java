/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuthAccessTokenPost200ResponseAccessToken
 */
@JsonPropertyOrder({
  AuthAccessTokenPost200ResponseAccessToken.JSON_PROPERTY_TOKEN,
  AuthAccessTokenPost200ResponseAccessToken.JSON_PROPERTY_EXPIRY,
  AuthAccessTokenPost200ResponseAccessToken.JSON_PROPERTY_MFA_ON,
  AuthAccessTokenPost200ResponseAccessToken.JSON_PROPERTY_DEFAULT_MFA_MODE
})
@JsonTypeName("_auth_access_token_post_200_response_access_token")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AuthAccessTokenPost200ResponseAccessToken {
  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public static final String JSON_PROPERTY_EXPIRY = "expiry";
  private String expiry;

  public static final String JSON_PROPERTY_MFA_ON = "mfa_on";
  private Boolean mfaOn;

  /**
   * Gets or Sets defaultMfaMode
   */
  public enum DefaultMfaModeEnum {
    SMS("sms"),
    
    EMAIL("email"),
    
    AUTHENTICATOR("authenticator");

    private String value;

    DefaultMfaModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DefaultMfaModeEnum fromValue(String value) {
      for (DefaultMfaModeEnum b : DefaultMfaModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEFAULT_MFA_MODE = "default_mfa_mode";
  private DefaultMfaModeEnum defaultMfaMode;

  public AuthAccessTokenPost200ResponseAccessToken() {
  }

  public AuthAccessTokenPost200ResponseAccessToken token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }


  public AuthAccessTokenPost200ResponseAccessToken expiry(String expiry) {
    
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpiry() {
    return expiry;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiry(String expiry) {
    this.expiry = expiry;
  }


  public AuthAccessTokenPost200ResponseAccessToken mfaOn(Boolean mfaOn) {
    
    this.mfaOn = mfaOn;
    return this;
  }

   /**
   * Get mfaOn
   * @return mfaOn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MFA_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMfaOn() {
    return mfaOn;
  }


  @JsonProperty(JSON_PROPERTY_MFA_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMfaOn(Boolean mfaOn) {
    this.mfaOn = mfaOn;
  }


  public AuthAccessTokenPost200ResponseAccessToken defaultMfaMode(DefaultMfaModeEnum defaultMfaMode) {
    
    this.defaultMfaMode = defaultMfaMode;
    return this;
  }

   /**
   * Get defaultMfaMode
   * @return defaultMfaMode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_MFA_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DefaultMfaModeEnum getDefaultMfaMode() {
    return defaultMfaMode;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_MFA_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultMfaMode(DefaultMfaModeEnum defaultMfaMode) {
    this.defaultMfaMode = defaultMfaMode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthAccessTokenPost200ResponseAccessToken authAccessTokenPost200ResponseAccessToken = (AuthAccessTokenPost200ResponseAccessToken) o;
    return Objects.equals(this.token, authAccessTokenPost200ResponseAccessToken.token) &&
        Objects.equals(this.expiry, authAccessTokenPost200ResponseAccessToken.expiry) &&
        Objects.equals(this.mfaOn, authAccessTokenPost200ResponseAccessToken.mfaOn) &&
        Objects.equals(this.defaultMfaMode, authAccessTokenPost200ResponseAccessToken.defaultMfaMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, expiry, mfaOn, defaultMfaMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthAccessTokenPost200ResponseAccessToken {\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    mfaOn: ").append(toIndentedString(mfaOn)).append("\n");
    sb.append("    defaultMfaMode: ").append(toIndentedString(defaultMfaMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

