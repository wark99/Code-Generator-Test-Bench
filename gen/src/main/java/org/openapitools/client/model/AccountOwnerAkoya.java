/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountOwnerAkoyaAddressesInner;
import org.openapitools.client.model.AccountOwnerAkoyaName;
import org.openapitools.client.model.AccountOwnerAkoyaTelephonesInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountOwnerAkoya
 */
@JsonPropertyOrder({
  AccountOwnerAkoya.JSON_PROPERTY_CUSTOMER_ID,
  AccountOwnerAkoya.JSON_PROPERTY_NAME,
  AccountOwnerAkoya.JSON_PROPERTY_ADDRESSES,
  AccountOwnerAkoya.JSON_PROPERTY_TELEPHONES,
  AccountOwnerAkoya.JSON_PROPERTY_EMAIL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AccountOwnerAkoya {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_NAME = "name";
  private AccountOwnerAkoyaName name;

  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<AccountOwnerAkoyaAddressesInner> addresses;

  public static final String JSON_PROPERTY_TELEPHONES = "telephones";
  private List<AccountOwnerAkoyaTelephonesInner> telephones;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private List<String> email;

  public AccountOwnerAkoya() {
  }

  public AccountOwnerAkoya customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public AccountOwnerAkoya name(AccountOwnerAkoyaName name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountOwnerAkoyaName getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(AccountOwnerAkoyaName name) {
    this.name = name;
  }


  public AccountOwnerAkoya addresses(List<AccountOwnerAkoyaAddressesInner> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public AccountOwnerAkoya addAddressesItem(AccountOwnerAkoyaAddressesInner addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerAkoyaAddressesInner> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<AccountOwnerAkoyaAddressesInner> addresses) {
    this.addresses = addresses;
  }


  public AccountOwnerAkoya telephones(List<AccountOwnerAkoyaTelephonesInner> telephones) {
    
    this.telephones = telephones;
    return this;
  }

  public AccountOwnerAkoya addTelephonesItem(AccountOwnerAkoyaTelephonesInner telephonesItem) {
    if (this.telephones == null) {
      this.telephones = new ArrayList<>();
    }
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * Get telephones
   * @return telephones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TELEPHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountOwnerAkoyaTelephonesInner> getTelephones() {
    return telephones;
  }


  @JsonProperty(JSON_PROPERTY_TELEPHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTelephones(List<AccountOwnerAkoyaTelephonesInner> telephones) {
    this.telephones = telephones;
  }


  public AccountOwnerAkoya email(List<String> email) {
    
    this.email = email;
    return this;
  }

  public AccountOwnerAkoya addEmailItem(String emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(List<String> email) {
    this.email = email;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountOwnerAkoya accountOwnerAkoya = (AccountOwnerAkoya) o;
    return Objects.equals(this.customerId, accountOwnerAkoya.customerId) &&
        Objects.equals(this.name, accountOwnerAkoya.name) &&
        Objects.equals(this.addresses, accountOwnerAkoya.addresses) &&
        Objects.equals(this.telephones, accountOwnerAkoya.telephones) &&
        Objects.equals(this.email, accountOwnerAkoya.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, name, addresses, telephones, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountOwnerAkoya {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

