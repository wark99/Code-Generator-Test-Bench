/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CompanyId;
import org.openapitools.client.model.UpdateObjectWidgetPlotsInner;
import org.openapitools.client.model.WidgetDisplayType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateObjectWidget
 */
@JsonPropertyOrder({
  UpdateObjectWidget.JSON_PROPERTY_COMPANY_ID,
  UpdateObjectWidget.JSON_PROPERTY_NAME,
  UpdateObjectWidget.JSON_PROPERTY_DISPLAY_TYPE,
  UpdateObjectWidget.JSON_PROPERTY_PLOTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class UpdateObjectWidget {
  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private CompanyId companyId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DISPLAY_TYPE = "display_type";
  private WidgetDisplayType displayType;

  public static final String JSON_PROPERTY_PLOTS = "plots";
  private List<UpdateObjectWidgetPlotsInner> plots = new ArrayList<>();

  public UpdateObjectWidget() {
  }

  public UpdateObjectWidget companyId(CompanyId companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyId getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(CompanyId companyId) {
    this.companyId = companyId;
  }


  public UpdateObjectWidget name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * object widget name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateObjectWidget displayType(WidgetDisplayType displayType) {
    
    this.displayType = displayType;
    return this;
  }

   /**
   * object widget display type
   * @return displayType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WidgetDisplayType getDisplayType() {
    return displayType;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayType(WidgetDisplayType displayType) {
    this.displayType = displayType;
  }


  public UpdateObjectWidget plots(List<UpdateObjectWidgetPlotsInner> plots) {
    
    this.plots = plots;
    return this;
  }

  public UpdateObjectWidget addPlotsItem(UpdateObjectWidgetPlotsInner plotsItem) {
    if (this.plots == null) {
      this.plots = new ArrayList<>();
    }
    this.plots.add(plotsItem);
    return this;
  }

   /**
   * list of widget plot settings
   * @return plots
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLOTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UpdateObjectWidgetPlotsInner> getPlots() {
    return plots;
  }


  @JsonProperty(JSON_PROPERTY_PLOTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlots(List<UpdateObjectWidgetPlotsInner> plots) {
    this.plots = plots;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateObjectWidget updateObjectWidget = (UpdateObjectWidget) o;
    return Objects.equals(this.companyId, updateObjectWidget.companyId) &&
        Objects.equals(this.name, updateObjectWidget.name) &&
        Objects.equals(this.displayType, updateObjectWidget.displayType) &&
        Objects.equals(this.plots, updateObjectWidget.plots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, name, displayType, plots);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateObjectWidget {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayType: ").append(toIndentedString(displayType)).append("\n");
    sb.append("    plots: ").append(toIndentedString(plots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

