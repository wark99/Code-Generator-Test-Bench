/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StorageMachine
 */
@JsonPropertyOrder({
  StorageMachine.JSON_PROPERTY_STORAGE_MACHINE_ID,
  StorageMachine.JSON_PROPERTY_VOD_ID,
  StorageMachine.JSON_PROPERTY_NAME,
  StorageMachine.JSON_PROPERTY_PROTOCOL,
  StorageMachine.JSON_PROPERTY_HOST,
  StorageMachine.JSON_PROPERTY_PORT,
  StorageMachine.JSON_PROPERTY_PATH,
  StorageMachine.JSON_PROPERTY_LOGIN,
  StorageMachine.JSON_PROPERTY_PASS,
  StorageMachine.JSON_PROPERTY_URL_HTTP,
  StorageMachine.JSON_PROPERTY_FULL,
  StorageMachine.JSON_PROPERTY_VALID,
  StorageMachine.JSON_PROPERTY_USE_PATH,
  StorageMachine.JSON_PROPERTY_RECORDING_CONFIG_ID,
  StorageMachine.JSON_PROPERTY_DEFAULT,
  StorageMachine.JSON_PROPERTY_AUTO_FRAGMENT_DURATION,
  StorageMachine.JSON_PROPERTY_DELETED_AT,
  StorageMachine.JSON_PROPERTY_AUTO_RECORD_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StorageMachine {
  public static final String JSON_PROPERTY_STORAGE_MACHINE_ID = "storage_machine_id";
  private Integer storageMachineId;

  public static final String JSON_PROPERTY_VOD_ID = "vod_id";
  private Integer vodId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private String protocol;

  public static final String JSON_PROPERTY_HOST = "host";
  private String host;

  public static final String JSON_PROPERTY_PORT = "port";
  private Integer port;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_LOGIN = "login";
  private String login;

  public static final String JSON_PROPERTY_PASS = "pass";
  private String pass;

  public static final String JSON_PROPERTY_URL_HTTP = "url_http";
  private String urlHttp;

  public static final String JSON_PROPERTY_FULL = "full";
  private Boolean full;

  public static final String JSON_PROPERTY_VALID = "valid";
  private Boolean valid;

  public static final String JSON_PROPERTY_USE_PATH = "use_path";
  private Boolean usePath;

  public static final String JSON_PROPERTY_RECORDING_CONFIG_ID = "recording_config_id";
  private Integer recordingConfigId;

  public static final String JSON_PROPERTY_DEFAULT = "default";
  private Boolean _default;

  public static final String JSON_PROPERTY_AUTO_FRAGMENT_DURATION = "auto_fragment_duration";
  private Integer autoFragmentDuration;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private Integer deletedAt;

  public static final String JSON_PROPERTY_AUTO_RECORD_NAME = "auto_record_name";
  private String autoRecordName;

  public StorageMachine() {
  }

  public StorageMachine storageMachineId(Integer storageMachineId) {
    
    this.storageMachineId = storageMachineId;
    return this;
  }

   /**
   * Unique identifier of the &#x60;channel&#x60; that is related to the resource &#x60;StorageMachine&#x60;
   * @return storageMachineId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_MACHINE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStorageMachineId() {
    return storageMachineId;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_MACHINE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageMachineId(Integer storageMachineId) {
    this.storageMachineId = storageMachineId;
  }


  public StorageMachine vodId(Integer vodId) {
    
    this.vodId = vodId;
    return this;
  }

   /**
   * Unique identifier of the &#x60;vodProduct&#x60; that is related to the resource &#x60;StorageMachine&#x60;
   * @return vodId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVodId() {
    return vodId;
  }


  @JsonProperty(JSON_PROPERTY_VOD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVodId(Integer vodId) {
    this.vodId = vodId;
  }


  public StorageMachine name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource &#x60;StorageMachine&#x60;
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public StorageMachine protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public StorageMachine host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHost(String host) {
    this.host = host;
  }


  public StorageMachine port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPort(Integer port) {
    this.port = port;
  }


  public StorageMachine path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(String path) {
    this.path = path;
  }


  public StorageMachine login(String login) {
    
    this.login = login;
    return this;
  }

   /**
   * Login
   * @return login
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogin() {
    return login;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogin(String login) {
    this.login = login;
  }


  public StorageMachine pass(String pass) {
    
    this.pass = pass;
    return this;
  }

   /**
   * Get pass
   * @return pass
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPass() {
    return pass;
  }


  @JsonProperty(JSON_PROPERTY_PASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPass(String pass) {
    this.pass = pass;
  }


  public StorageMachine urlHttp(String urlHttp) {
    
    this.urlHttp = urlHttp;
    return this;
  }

   /**
   * Get urlHttp
   * @return urlHttp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL_HTTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrlHttp() {
    return urlHttp;
  }


  @JsonProperty(JSON_PROPERTY_URL_HTTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrlHttp(String urlHttp) {
    this.urlHttp = urlHttp;
  }


  public StorageMachine full(Boolean full) {
    
    this.full = full;
    return this;
  }

   /**
   * Get full
   * @return full
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FULL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getFull() {
    return full;
  }


  @JsonProperty(JSON_PROPERTY_FULL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFull(Boolean full) {
    this.full = full;
  }


  public StorageMachine valid(Boolean valid) {
    
    this.valid = valid;
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getValid() {
    return valid;
  }


  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  public StorageMachine usePath(Boolean usePath) {
    
    this.usePath = usePath;
    return this;
  }

   /**
   * Get usePath
   * @return usePath
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USE_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUsePath() {
    return usePath;
  }


  @JsonProperty(JSON_PROPERTY_USE_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsePath(Boolean usePath) {
    this.usePath = usePath;
  }


  public StorageMachine recordingConfigId(Integer recordingConfigId) {
    
    this.recordingConfigId = recordingConfigId;
    return this;
  }

   /**
   * Unique identifier of the &#x60;recording config&#x60; that is related to the resource &#x60;StorageMachine&#x60;
   * @return recordingConfigId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECORDING_CONFIG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRecordingConfigId() {
    return recordingConfigId;
  }


  @JsonProperty(JSON_PROPERTY_RECORDING_CONFIG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecordingConfigId(Integer recordingConfigId) {
    this.recordingConfigId = recordingConfigId;
  }


  public StorageMachine _default(Boolean _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDefault() {
    return _default;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefault(Boolean _default) {
    this._default = _default;
  }


  public StorageMachine autoFragmentDuration(Integer autoFragmentDuration) {
    
    this.autoFragmentDuration = autoFragmentDuration;
    return this;
  }

   /**
   * Get autoFragmentDuration
   * @return autoFragmentDuration
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTO_FRAGMENT_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAutoFragmentDuration() {
    return autoFragmentDuration;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_FRAGMENT_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoFragmentDuration(Integer autoFragmentDuration) {
    this.autoFragmentDuration = autoFragmentDuration;
  }


  public StorageMachine deletedAt(Integer deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Timestamp &#x60;StorageMachine&#x60; has been deleted
   * @return deletedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeletedAt(Integer deletedAt) {
    this.deletedAt = deletedAt;
  }


  public StorageMachine autoRecordName(String autoRecordName) {
    
    this.autoRecordName = autoRecordName;
    return this;
  }

   /**
   * Get autoRecordName
   * @return autoRecordName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTO_RECORD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAutoRecordName() {
    return autoRecordName;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_RECORD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoRecordName(String autoRecordName) {
    this.autoRecordName = autoRecordName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageMachine storageMachine = (StorageMachine) o;
    return Objects.equals(this.storageMachineId, storageMachine.storageMachineId) &&
        Objects.equals(this.vodId, storageMachine.vodId) &&
        Objects.equals(this.name, storageMachine.name) &&
        Objects.equals(this.protocol, storageMachine.protocol) &&
        Objects.equals(this.host, storageMachine.host) &&
        Objects.equals(this.port, storageMachine.port) &&
        Objects.equals(this.path, storageMachine.path) &&
        Objects.equals(this.login, storageMachine.login) &&
        Objects.equals(this.pass, storageMachine.pass) &&
        Objects.equals(this.urlHttp, storageMachine.urlHttp) &&
        Objects.equals(this.full, storageMachine.full) &&
        Objects.equals(this.valid, storageMachine.valid) &&
        Objects.equals(this.usePath, storageMachine.usePath) &&
        Objects.equals(this.recordingConfigId, storageMachine.recordingConfigId) &&
        Objects.equals(this._default, storageMachine._default) &&
        Objects.equals(this.autoFragmentDuration, storageMachine.autoFragmentDuration) &&
        Objects.equals(this.deletedAt, storageMachine.deletedAt) &&
        Objects.equals(this.autoRecordName, storageMachine.autoRecordName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageMachineId, vodId, name, protocol, host, port, path, login, pass, urlHttp, full, valid, usePath, recordingConfigId, _default, autoFragmentDuration, deletedAt, autoRecordName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageMachine {\n");
    sb.append("    storageMachineId: ").append(toIndentedString(storageMachineId)).append("\n");
    sb.append("    vodId: ").append(toIndentedString(vodId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    pass: ").append(toIndentedString(pass)).append("\n");
    sb.append("    urlHttp: ").append(toIndentedString(urlHttp)).append("\n");
    sb.append("    full: ").append(toIndentedString(full)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    usePath: ").append(toIndentedString(usePath)).append("\n");
    sb.append("    recordingConfigId: ").append(toIndentedString(recordingConfigId)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    autoFragmentDuration: ").append(toIndentedString(autoFragmentDuration)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    autoRecordName: ").append(toIndentedString(autoRecordName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

