/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.V40EquifaxScoreNumberOrMaxIndustryCode;
import org.openapitools.client.model.V40ReportEquifaxDataAlertContactsInnerAddress;
import org.openapitools.client.model.V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner;
import org.openapitools.client.model.V40ReportEquifaxDataFileSinceDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * V40ReportEquifaxDataAlertContactsInner
 */
@JsonPropertyOrder({
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_ALERT_TYPE,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_DATE_REPORTED,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_EFFECTIVE_DATE,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_STATUS,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_TELEPHONE_NUMBERS,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_ADDRESS,
  V40ReportEquifaxDataAlertContactsInner.JSON_PROPERTY_ADDITIONAL_INFORMATION
})
@JsonTypeName("V4_0_ReportEquifax_data_alertContacts_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class V40ReportEquifaxDataAlertContactsInner {
  public static final String JSON_PROPERTY_ALERT_TYPE = "alertType";
  private V40EquifaxScoreNumberOrMaxIndustryCode alertType;

  public static final String JSON_PROPERTY_DATE_REPORTED = "dateReported";
  private V40ReportEquifaxDataFileSinceDate dateReported;

  public static final String JSON_PROPERTY_EFFECTIVE_DATE = "effectiveDate";
  private V40ReportEquifaxDataFileSinceDate effectiveDate;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_TELEPHONE_NUMBERS = "telephoneNumbers";
  private List<V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner> telephoneNumbers;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private V40ReportEquifaxDataAlertContactsInnerAddress address;

  public static final String JSON_PROPERTY_ADDITIONAL_INFORMATION = "additionalInformation";
  private String additionalInformation;

  public V40ReportEquifaxDataAlertContactsInner() {
  }

  public V40ReportEquifaxDataAlertContactsInner alertType(V40EquifaxScoreNumberOrMaxIndustryCode alertType) {
    
    this.alertType = alertType;
    return this;
  }

   /**
   * Get alertType
   * @return alertType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALERT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40EquifaxScoreNumberOrMaxIndustryCode getAlertType() {
    return alertType;
  }


  @JsonProperty(JSON_PROPERTY_ALERT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlertType(V40EquifaxScoreNumberOrMaxIndustryCode alertType) {
    this.alertType = alertType;
  }


  public V40ReportEquifaxDataAlertContactsInner dateReported(V40ReportEquifaxDataFileSinceDate dateReported) {
    
    this.dateReported = dateReported;
    return this;
  }

   /**
   * Get dateReported
   * @return dateReported
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40ReportEquifaxDataFileSinceDate getDateReported() {
    return dateReported;
  }


  @JsonProperty(JSON_PROPERTY_DATE_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateReported(V40ReportEquifaxDataFileSinceDate dateReported) {
    this.dateReported = dateReported;
  }


  public V40ReportEquifaxDataAlertContactsInner effectiveDate(V40ReportEquifaxDataFileSinceDate effectiveDate) {
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Get effectiveDate
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40ReportEquifaxDataFileSinceDate getEffectiveDate() {
    return effectiveDate;
  }


  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffectiveDate(V40ReportEquifaxDataFileSinceDate effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public V40ReportEquifaxDataAlertContactsInner status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public V40ReportEquifaxDataAlertContactsInner telephoneNumbers(List<V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner> telephoneNumbers) {
    
    this.telephoneNumbers = telephoneNumbers;
    return this;
  }

  public V40ReportEquifaxDataAlertContactsInner addTelephoneNumbersItem(V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner telephoneNumbersItem) {
    if (this.telephoneNumbers == null) {
      this.telephoneNumbers = new ArrayList<>();
    }
    this.telephoneNumbers.add(telephoneNumbersItem);
    return this;
  }

   /**
   * Get telephoneNumbers
   * @return telephoneNumbers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TELEPHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner> getTelephoneNumbers() {
    return telephoneNumbers;
  }


  @JsonProperty(JSON_PROPERTY_TELEPHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTelephoneNumbers(List<V40ReportEquifaxDataAlertContactsInnerTelephoneNumbersInner> telephoneNumbers) {
    this.telephoneNumbers = telephoneNumbers;
  }


  public V40ReportEquifaxDataAlertContactsInner address(V40ReportEquifaxDataAlertContactsInnerAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V40ReportEquifaxDataAlertContactsInnerAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(V40ReportEquifaxDataAlertContactsInnerAddress address) {
    this.address = address;
  }


  public V40ReportEquifaxDataAlertContactsInner additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V40ReportEquifaxDataAlertContactsInner v40ReportEquifaxDataAlertContactsInner = (V40ReportEquifaxDataAlertContactsInner) o;
    return Objects.equals(this.alertType, v40ReportEquifaxDataAlertContactsInner.alertType) &&
        Objects.equals(this.dateReported, v40ReportEquifaxDataAlertContactsInner.dateReported) &&
        Objects.equals(this.effectiveDate, v40ReportEquifaxDataAlertContactsInner.effectiveDate) &&
        Objects.equals(this.status, v40ReportEquifaxDataAlertContactsInner.status) &&
        Objects.equals(this.telephoneNumbers, v40ReportEquifaxDataAlertContactsInner.telephoneNumbers) &&
        Objects.equals(this.address, v40ReportEquifaxDataAlertContactsInner.address) &&
        Objects.equals(this.additionalInformation, v40ReportEquifaxDataAlertContactsInner.additionalInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertType, dateReported, effectiveDate, status, telephoneNumbers, address, additionalInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V40ReportEquifaxDataAlertContactsInner {\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    dateReported: ").append(toIndentedString(dateReported)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    telephoneNumbers: ").append(toIndentedString(telephoneNumbers)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

