/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatusResponseClaimsInner
 */
@JsonPropertyOrder({
  StatusResponseClaimsInner.JSON_PROPERTY_BILLING_I_D,
  StatusResponseClaimsInner.JSON_PROPERTY_BILLING_TYPE,
  StatusResponseClaimsInner.JSON_PROPERTY_PROCESSED_STATUS,
  StatusResponseClaimsInner.JSON_PROPERTY_PROCESSED_NOTES,
  StatusResponseClaimsInner.JSON_PROPERTY_PREVIOUS_PROCESSED_NOTES,
  StatusResponseClaimsInner.JSON_PROPERTY_CREATE_TIMESTAMP,
  StatusResponseClaimsInner.JSON_PROPERTY_BATCHED_TIMESTAMP,
  StatusResponseClaimsInner.JSON_PROPERTY_BATCH_NUMBER,
  StatusResponseClaimsInner.JSON_PROPERTY_TOTAL_AMOUNT,
  StatusResponseClaimsInner.JSON_PROPERTY_DEDUCTIBLE,
  StatusResponseClaimsInner.JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE,
  StatusResponseClaimsInner.JSON_PROPERTY_LINES
})
@JsonTypeName("StatusResponse_claims_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatusResponseClaimsInner {
  public static final String JSON_PROPERTY_BILLING_I_D = "billingID";
  private String billingID;

  public static final String JSON_PROPERTY_BILLING_TYPE = "billingType";
  private String billingType;

  public static final String JSON_PROPERTY_PROCESSED_STATUS = "processedStatus";
  private String processedStatus;

  public static final String JSON_PROPERTY_PROCESSED_NOTES = "processedNotes";
  private Object processedNotes = null;

  public static final String JSON_PROPERTY_PREVIOUS_PROCESSED_NOTES = "previousProcessedNotes";
  private Object previousProcessedNotes = null;

  public static final String JSON_PROPERTY_CREATE_TIMESTAMP = "createTimestamp";
  private String createTimestamp;

  public static final String JSON_PROPERTY_BATCHED_TIMESTAMP = "batchedTimestamp";
  private String batchedTimestamp;

  public static final String JSON_PROPERTY_BATCH_NUMBER = "batchNumber";
  private String batchNumber;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private String totalAmount;

  public static final String JSON_PROPERTY_DEDUCTIBLE = "deductible";
  private String deductible;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE = "totalAmountLessDeductible";
  private String totalAmountLessDeductible;

  public static final String JSON_PROPERTY_LINES = "lines";
  private List<String> lines = new ArrayList<>();

  public StatusResponseClaimsInner() {
  }

  public StatusResponseClaimsInner billingID(String billingID) {
    
    this.billingID = billingID;
    return this;
  }

   /**
   * Get billingID
   * @return billingID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BILLING_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBillingID() {
    return billingID;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBillingID(String billingID) {
    this.billingID = billingID;
  }


  public StatusResponseClaimsInner billingType(String billingType) {
    
    this.billingType = billingType;
    return this;
  }

   /**
   * Get billingType
   * @return billingType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BILLING_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBillingType() {
    return billingType;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBillingType(String billingType) {
    this.billingType = billingType;
  }


  public StatusResponseClaimsInner processedStatus(String processedStatus) {
    
    this.processedStatus = processedStatus;
    return this;
  }

   /**
   * Get processedStatus
   * @return processedStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessedStatus() {
    return processedStatus;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedStatus(String processedStatus) {
    this.processedStatus = processedStatus;
  }


  public StatusResponseClaimsInner processedNotes(Object processedNotes) {
    
    this.processedNotes = processedNotes;
    return this;
  }

   /**
   * Get processedNotes
   * @return processedNotes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSED_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getProcessedNotes() {
    return processedNotes;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessedNotes(Object processedNotes) {
    this.processedNotes = processedNotes;
  }


  public StatusResponseClaimsInner previousProcessedNotes(Object previousProcessedNotes) {
    
    this.previousProcessedNotes = previousProcessedNotes;
    return this;
  }

   /**
   * Get previousProcessedNotes
   * @return previousProcessedNotes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIOUS_PROCESSED_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPreviousProcessedNotes() {
    return previousProcessedNotes;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_PROCESSED_NOTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPreviousProcessedNotes(Object previousProcessedNotes) {
    this.previousProcessedNotes = previousProcessedNotes;
  }


  public StatusResponseClaimsInner createTimestamp(String createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * Get createTimestamp
   * @return createTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreateTimestamp() {
    return createTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateTimestamp(String createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public StatusResponseClaimsInner batchedTimestamp(String batchedTimestamp) {
    
    this.batchedTimestamp = batchedTimestamp;
    return this;
  }

   /**
   * Get batchedTimestamp
   * @return batchedTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BATCHED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchedTimestamp() {
    return batchedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_BATCHED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchedTimestamp(String batchedTimestamp) {
    this.batchedTimestamp = batchedTimestamp;
  }


  public StatusResponseClaimsInner batchNumber(String batchNumber) {
    
    this.batchNumber = batchNumber;
    return this;
  }

   /**
   * Get batchNumber
   * @return batchNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchNumber() {
    return batchNumber;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchNumber(String batchNumber) {
    this.batchNumber = batchNumber;
  }


  public StatusResponseClaimsInner totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }


  public StatusResponseClaimsInner deductible(String deductible) {
    
    this.deductible = deductible;
    return this;
  }

   /**
   * Get deductible
   * @return deductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeductible() {
    return deductible;
  }


  @JsonProperty(JSON_PROPERTY_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeductible(String deductible) {
    this.deductible = deductible;
  }


  public StatusResponseClaimsInner totalAmountLessDeductible(String totalAmountLessDeductible) {
    
    this.totalAmountLessDeductible = totalAmountLessDeductible;
    return this;
  }

   /**
   * Get totalAmountLessDeductible
   * @return totalAmountLessDeductible
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalAmountLessDeductible() {
    return totalAmountLessDeductible;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_LESS_DEDUCTIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmountLessDeductible(String totalAmountLessDeductible) {
    this.totalAmountLessDeductible = totalAmountLessDeductible;
  }


  public StatusResponseClaimsInner lines(List<String> lines) {
    
    this.lines = lines;
    return this;
  }

  public StatusResponseClaimsInner addLinesItem(String linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getLines() {
    return lines;
  }


  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLines(List<String> lines) {
    this.lines = lines;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusResponseClaimsInner statusResponseClaimsInner = (StatusResponseClaimsInner) o;
    return Objects.equals(this.billingID, statusResponseClaimsInner.billingID) &&
        Objects.equals(this.billingType, statusResponseClaimsInner.billingType) &&
        Objects.equals(this.processedStatus, statusResponseClaimsInner.processedStatus) &&
        Objects.equals(this.processedNotes, statusResponseClaimsInner.processedNotes) &&
        Objects.equals(this.previousProcessedNotes, statusResponseClaimsInner.previousProcessedNotes) &&
        Objects.equals(this.createTimestamp, statusResponseClaimsInner.createTimestamp) &&
        Objects.equals(this.batchedTimestamp, statusResponseClaimsInner.batchedTimestamp) &&
        Objects.equals(this.batchNumber, statusResponseClaimsInner.batchNumber) &&
        Objects.equals(this.totalAmount, statusResponseClaimsInner.totalAmount) &&
        Objects.equals(this.deductible, statusResponseClaimsInner.deductible) &&
        Objects.equals(this.totalAmountLessDeductible, statusResponseClaimsInner.totalAmountLessDeductible) &&
        Objects.equals(this.lines, statusResponseClaimsInner.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingID, billingType, processedStatus, processedNotes, previousProcessedNotes, createTimestamp, batchedTimestamp, batchNumber, totalAmount, deductible, totalAmountLessDeductible, lines);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusResponseClaimsInner {\n");
    sb.append("    billingID: ").append(toIndentedString(billingID)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    processedStatus: ").append(toIndentedString(processedStatus)).append("\n");
    sb.append("    processedNotes: ").append(toIndentedString(processedNotes)).append("\n");
    sb.append("    previousProcessedNotes: ").append(toIndentedString(previousProcessedNotes)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    batchedTimestamp: ").append(toIndentedString(batchedTimestamp)).append("\n");
    sb.append("    batchNumber: ").append(toIndentedString(batchNumber)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    deductible: ").append(toIndentedString(deductible)).append("\n");
    sb.append("    totalAmountLessDeductible: ").append(toIndentedString(totalAmountLessDeductible)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

