/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Statement represents the bank statements for a given customer&#39;s account
 */
@JsonPropertyOrder({
  CustomerAccountMultipleStatement.JSON_PROPERTY_ID,
  CustomerAccountMultipleStatement.JSON_PROPERTY_DESCRIPTION,
  CustomerAccountMultipleStatement.JSON_PROPERTY_AS_OF_DATE,
  CustomerAccountMultipleStatement.JSON_PROPERTY_DOCUMENT_DATE,
  CustomerAccountMultipleStatement.JSON_PROPERTY_INDEX,
  CustomerAccountMultipleStatement.JSON_PROPERTY_CODE,
  CustomerAccountMultipleStatement.JSON_PROPERTY_MESSAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:05:06.990716937Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CustomerAccountMultipleStatement {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_AS_OF_DATE = "asOfDate";
  private Long asOfDate;

  public static final String JSON_PROPERTY_DOCUMENT_DATE = "documentDate";
  private String documentDate;

  public static final String JSON_PROPERTY_INDEX = "index";
  private String index;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public CustomerAccountMultipleStatement() {
  }

  public CustomerAccountMultipleStatement id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CustomerAccountMultipleStatement description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Date range representing the period for when the statement data is generated.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CustomerAccountMultipleStatement asOfDate(Long asOfDate) {
    
    this.asOfDate = asOfDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return asOfDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAsOfDate() {
    return asOfDate;
  }


  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsOfDate(Long asOfDate) {
    this.asOfDate = asOfDate;
  }


  public CustomerAccountMultipleStatement documentDate(String documentDate) {
    
    this.documentDate = documentDate;
    return this;
  }

   /**
   * The date when the statement was generated.
   * @return documentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentDate() {
    return documentDate;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentDate(String documentDate) {
    this.documentDate = documentDate;
  }


  public CustomerAccountMultipleStatement index(String index) {
    
    this.index = index;
    return this;
  }

   /**
   * The index for the statement. This can range from 1 to 24 statement indexes.
   * @return index
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndex(String index) {
    this.index = index;
  }


  public CustomerAccountMultipleStatement code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Error code for  the bank statement not generated
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public CustomerAccountMultipleStatement message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Error message for the bank statement not generated
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAccountMultipleStatement customerAccountMultipleStatement = (CustomerAccountMultipleStatement) o;
    return Objects.equals(this.id, customerAccountMultipleStatement.id) &&
        Objects.equals(this.description, customerAccountMultipleStatement.description) &&
        Objects.equals(this.asOfDate, customerAccountMultipleStatement.asOfDate) &&
        Objects.equals(this.documentDate, customerAccountMultipleStatement.documentDate) &&
        Objects.equals(this.index, customerAccountMultipleStatement.index) &&
        Objects.equals(this.code, customerAccountMultipleStatement.code) &&
        Objects.equals(this.message, customerAccountMultipleStatement.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, asOfDate, documentDate, index, code, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAccountMultipleStatement {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    asOfDate: ").append(toIndentedString(asOfDate)).append("\n");
    sb.append("    documentDate: ").append(toIndentedString(documentDate)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

