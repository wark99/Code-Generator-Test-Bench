/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.WorkspaceUserMailbox;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WorkspaceUserMail
 */
@JsonPropertyOrder({
  WorkspaceUserMail.JSON_PROPERTY_ID,
  WorkspaceUserMail.JSON_PROPERTY_EMAIL,
  WorkspaceUserMail.JSON_PROPERTY_NAME,
  WorkspaceUserMail.JSON_PROPERTY_IS_DELETED,
  WorkspaceUserMail.JSON_PROPERTY_IS_UNIFIED,
  WorkspaceUserMail.JSON_PROPERTY_AVATAR,
  WorkspaceUserMail.JSON_PROPERTY_HAS_DOUBLE_AUTH,
  WorkspaceUserMail.JSON_PROPERTY_MAILBOXES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class WorkspaceUserMail {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IS_DELETED = "is_deleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_IS_UNIFIED = "is_unified";
  private Boolean isUnified;

  public static final String JSON_PROPERTY_AVATAR = "avatar";
  private String avatar;

  public static final String JSON_PROPERTY_HAS_DOUBLE_AUTH = "has_double_auth";
  private Boolean hasDoubleAuth;

  public static final String JSON_PROPERTY_MAILBOXES = "mailboxes";
  private List<WorkspaceUserMailbox> mailboxes;

  public WorkspaceUserMail() {
  }

  public WorkspaceUserMail id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * WorkspaceUser identifier  
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public WorkspaceUserMail email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email  
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public WorkspaceUserMail name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name  
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public WorkspaceUserMail isDeleted(Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * True if deleted  
   * @return isDeleted
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public WorkspaceUserMail isUnified(Boolean isUnified) {
    
    this.isUnified = isUnified;
    return this;
  }

   /**
   * True if unified passwords  
   * @return isUnified
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_UNIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsUnified() {
    return isUnified;
  }


  @JsonProperty(JSON_PROPERTY_IS_UNIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsUnified(Boolean isUnified) {
    this.isUnified = isUnified;
  }


  public WorkspaceUserMail avatar(String avatar) {
    
    this.avatar = avatar;
    return this;
  }

   /**
   * Avatar url  
   * @return avatar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvatar() {
    return avatar;
  }


  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }


  public WorkspaceUserMail hasDoubleAuth(Boolean hasDoubleAuth) {
    
    this.hasDoubleAuth = hasDoubleAuth;
    return this;
  }

   /**
   * True if double authentication is enabled  
   * @return hasDoubleAuth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_DOUBLE_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasDoubleAuth() {
    return hasDoubleAuth;
  }


  @JsonProperty(JSON_PROPERTY_HAS_DOUBLE_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasDoubleAuth(Boolean hasDoubleAuth) {
    this.hasDoubleAuth = hasDoubleAuth;
  }


  public WorkspaceUserMail mailboxes(List<WorkspaceUserMailbox> mailboxes) {
    
    this.mailboxes = mailboxes;
    return this;
  }

  public WorkspaceUserMail addMailboxesItem(WorkspaceUserMailbox mailboxesItem) {
    if (this.mailboxes == null) {
      this.mailboxes = new ArrayList<>();
    }
    this.mailboxes.add(mailboxesItem);
    return this;
  }

   /**
   * Get mailboxes
   * @return mailboxes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAILBOXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<WorkspaceUserMailbox> getMailboxes() {
    return mailboxes;
  }


  @JsonProperty(JSON_PROPERTY_MAILBOXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailboxes(List<WorkspaceUserMailbox> mailboxes) {
    this.mailboxes = mailboxes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceUserMail workspaceUserMail = (WorkspaceUserMail) o;
    return Objects.equals(this.id, workspaceUserMail.id) &&
        Objects.equals(this.email, workspaceUserMail.email) &&
        Objects.equals(this.name, workspaceUserMail.name) &&
        Objects.equals(this.isDeleted, workspaceUserMail.isDeleted) &&
        Objects.equals(this.isUnified, workspaceUserMail.isUnified) &&
        Objects.equals(this.avatar, workspaceUserMail.avatar) &&
        Objects.equals(this.hasDoubleAuth, workspaceUserMail.hasDoubleAuth) &&
        Objects.equals(this.mailboxes, workspaceUserMail.mailboxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, name, isDeleted, isUnified, avatar, hasDoubleAuth, mailboxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceUserMail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isUnified: ").append(toIndentedString(isUnified)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    hasDoubleAuth: ").append(toIndentedString(hasDoubleAuth)).append("\n");
    sb.append("    mailboxes: ").append(toIndentedString(mailboxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

