/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateIncomingWebhookRequest
 */
@JsonPropertyOrder({
  CreateIncomingWebhookRequest.JSON_PROPERTY_CHANNEL_ID,
  CreateIncomingWebhookRequest.JSON_PROPERTY_USER_ID,
  CreateIncomingWebhookRequest.JSON_PROPERTY_DISPLAY_NAME,
  CreateIncomingWebhookRequest.JSON_PROPERTY_DESCRIPTION,
  CreateIncomingWebhookRequest.JSON_PROPERTY_USERNAME,
  CreateIncomingWebhookRequest.JSON_PROPERTY_ICON_URL
})
@JsonTypeName("CreateIncomingWebhook_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateIncomingWebhookRequest {
  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private String userId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private String displayName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_ICON_URL = "icon_url";
  private String iconUrl;

  public CreateIncomingWebhookRequest() {
  }

  public CreateIncomingWebhookRequest channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The ID of a public channel or private group that receives the webhook payloads.
   * @return channelId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public CreateIncomingWebhookRequest userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the owner of the webhook if different than the requester. Required for [local mode](https://docs.mattermost.com/administration/mmctl-cli-tool.html#local-mode).
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public CreateIncomingWebhookRequest displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name for this incoming webhook
   * @return displayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CreateIncomingWebhookRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description for this incoming webhook
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateIncomingWebhookRequest username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username this incoming webhook will post as.
   * @return username
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  public CreateIncomingWebhookRequest iconUrl(String iconUrl) {
    
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * The profile picture this incoming webhook will use when posting.
   * @return iconUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconUrl() {
    return iconUrl;
  }


  @JsonProperty(JSON_PROPERTY_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIncomingWebhookRequest createIncomingWebhookRequest = (CreateIncomingWebhookRequest) o;
    return Objects.equals(this.channelId, createIncomingWebhookRequest.channelId) &&
        Objects.equals(this.userId, createIncomingWebhookRequest.userId) &&
        Objects.equals(this.displayName, createIncomingWebhookRequest.displayName) &&
        Objects.equals(this.description, createIncomingWebhookRequest.description) &&
        Objects.equals(this.username, createIncomingWebhookRequest.username) &&
        Objects.equals(this.iconUrl, createIncomingWebhookRequest.iconUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, userId, displayName, description, username, iconUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIncomingWebhookRequest {\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

