/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Reaction
 */
@JsonPropertyOrder({
  Reaction.JSON_PROPERTY_USER_ID,
  Reaction.JSON_PROPERTY_POST_ID,
  Reaction.JSON_PROPERTY_EMOJI_NAME,
  Reaction.JSON_PROPERTY_CREATE_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Reaction {
  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private String userId;

  public static final String JSON_PROPERTY_POST_ID = "post_id";
  private String postId;

  public static final String JSON_PROPERTY_EMOJI_NAME = "emoji_name";
  private String emojiName;

  public static final String JSON_PROPERTY_CREATE_AT = "create_at";
  private Long createAt;

  public Reaction() {
  }

  public Reaction userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user that made this reaction
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public Reaction postId(String postId) {
    
    this.postId = postId;
    return this;
  }

   /**
   * The ID of the post to which this reaction was made
   * @return postId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostId() {
    return postId;
  }


  @JsonProperty(JSON_PROPERTY_POST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostId(String postId) {
    this.postId = postId;
  }


  public Reaction emojiName(String emojiName) {
    
    this.emojiName = emojiName;
    return this;
  }

   /**
   * The name of the emoji that was used for this reaction
   * @return emojiName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMOJI_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmojiName() {
    return emojiName;
  }


  @JsonProperty(JSON_PROPERTY_EMOJI_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmojiName(String emojiName) {
    this.emojiName = emojiName;
  }


  public Reaction createAt(Long createAt) {
    
    this.createAt = createAt;
    return this;
  }

   /**
   * The time in milliseconds this reaction was made
   * @return createAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreateAt() {
    return createAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateAt(Long createAt) {
    this.createAt = createAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reaction reaction = (Reaction) o;
    return Objects.equals(this.userId, reaction.userId) &&
        Objects.equals(this.postId, reaction.postId) &&
        Objects.equals(this.emojiName, reaction.emojiName) &&
        Objects.equals(this.createAt, reaction.createAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, postId, emojiName, createAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reaction {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    emojiName: ").append(toIndentedString(emojiName)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

