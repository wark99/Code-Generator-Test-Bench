/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SlackAttachmentField;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SlackAttachment
 */
@JsonPropertyOrder({
  SlackAttachment.JSON_PROPERTY_ID,
  SlackAttachment.JSON_PROPERTY_FALLBACK,
  SlackAttachment.JSON_PROPERTY_COLOR,
  SlackAttachment.JSON_PROPERTY_PRETEXT,
  SlackAttachment.JSON_PROPERTY_AUTHOR_NAME,
  SlackAttachment.JSON_PROPERTY_AUTHOR_LINK,
  SlackAttachment.JSON_PROPERTY_AUTHOR_ICON,
  SlackAttachment.JSON_PROPERTY_TITLE,
  SlackAttachment.JSON_PROPERTY_TITLE_LINK,
  SlackAttachment.JSON_PROPERTY_TEXT,
  SlackAttachment.JSON_PROPERTY_FIELDS,
  SlackAttachment.JSON_PROPERTY_IMAGE_U_R_L,
  SlackAttachment.JSON_PROPERTY_THUMB_U_R_L,
  SlackAttachment.JSON_PROPERTY_FOOTER,
  SlackAttachment.JSON_PROPERTY_FOOTER_ICON,
  SlackAttachment.JSON_PROPERTY_TIMESTAMP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SlackAttachment {
  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_FALLBACK = "Fallback";
  private String fallback;

  public static final String JSON_PROPERTY_COLOR = "Color";
  private String color;

  public static final String JSON_PROPERTY_PRETEXT = "Pretext";
  private String pretext;

  public static final String JSON_PROPERTY_AUTHOR_NAME = "AuthorName";
  private String authorName;

  public static final String JSON_PROPERTY_AUTHOR_LINK = "AuthorLink";
  private String authorLink;

  public static final String JSON_PROPERTY_AUTHOR_ICON = "AuthorIcon";
  private String authorIcon;

  public static final String JSON_PROPERTY_TITLE = "Title";
  private String title;

  public static final String JSON_PROPERTY_TITLE_LINK = "TitleLink";
  private String titleLink;

  public static final String JSON_PROPERTY_TEXT = "Text";
  private String text;

  public static final String JSON_PROPERTY_FIELDS = "Fields";
  private List<SlackAttachmentField> fields;

  public static final String JSON_PROPERTY_IMAGE_U_R_L = "ImageURL";
  private String imageURL;

  public static final String JSON_PROPERTY_THUMB_U_R_L = "ThumbURL";
  private String thumbURL;

  public static final String JSON_PROPERTY_FOOTER = "Footer";
  private String footer;

  public static final String JSON_PROPERTY_FOOTER_ICON = "FooterIcon";
  private String footerIcon;

  public static final String JSON_PROPERTY_TIMESTAMP = "Timestamp";
  private String timestamp;

  public SlackAttachment() {
  }

  public SlackAttachment id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SlackAttachment fallback(String fallback) {
    
    this.fallback = fallback;
    return this;
  }

   /**
   * Get fallback
   * @return fallback
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFallback() {
    return fallback;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallback(String fallback) {
    this.fallback = fallback;
  }


  public SlackAttachment color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public SlackAttachment pretext(String pretext) {
    
    this.pretext = pretext;
    return this;
  }

   /**
   * Get pretext
   * @return pretext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRETEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPretext() {
    return pretext;
  }


  @JsonProperty(JSON_PROPERTY_PRETEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPretext(String pretext) {
    this.pretext = pretext;
  }


  public SlackAttachment authorName(String authorName) {
    
    this.authorName = authorName;
    return this;
  }

   /**
   * Get authorName
   * @return authorName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorName() {
    return authorName;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }


  public SlackAttachment authorLink(String authorLink) {
    
    this.authorLink = authorLink;
    return this;
  }

   /**
   * Get authorLink
   * @return authorLink
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorLink() {
    return authorLink;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorLink(String authorLink) {
    this.authorLink = authorLink;
  }


  public SlackAttachment authorIcon(String authorIcon) {
    
    this.authorIcon = authorIcon;
    return this;
  }

   /**
   * Get authorIcon
   * @return authorIcon
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorIcon() {
    return authorIcon;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorIcon(String authorIcon) {
    this.authorIcon = authorIcon;
  }


  public SlackAttachment title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public SlackAttachment titleLink(String titleLink) {
    
    this.titleLink = titleLink;
    return this;
  }

   /**
   * Get titleLink
   * @return titleLink
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitleLink() {
    return titleLink;
  }


  @JsonProperty(JSON_PROPERTY_TITLE_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitleLink(String titleLink) {
    this.titleLink = titleLink;
  }


  public SlackAttachment text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public SlackAttachment fields(List<SlackAttachmentField> fields) {
    
    this.fields = fields;
    return this;
  }

  public SlackAttachment addFieldsItem(SlackAttachmentField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SlackAttachmentField> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(List<SlackAttachmentField> fields) {
    this.fields = fields;
  }


  public SlackAttachment imageURL(String imageURL) {
    
    this.imageURL = imageURL;
    return this;
  }

   /**
   * Get imageURL
   * @return imageURL
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageURL() {
    return imageURL;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageURL(String imageURL) {
    this.imageURL = imageURL;
  }


  public SlackAttachment thumbURL(String thumbURL) {
    
    this.thumbURL = thumbURL;
    return this;
  }

   /**
   * Get thumbURL
   * @return thumbURL
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUMB_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThumbURL() {
    return thumbURL;
  }


  @JsonProperty(JSON_PROPERTY_THUMB_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThumbURL(String thumbURL) {
    this.thumbURL = thumbURL;
  }


  public SlackAttachment footer(String footer) {
    
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOOTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFooter() {
    return footer;
  }


  @JsonProperty(JSON_PROPERTY_FOOTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFooter(String footer) {
    this.footer = footer;
  }


  public SlackAttachment footerIcon(String footerIcon) {
    
    this.footerIcon = footerIcon;
    return this;
  }

   /**
   * Get footerIcon
   * @return footerIcon
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOOTER_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFooterIcon() {
    return footerIcon;
  }


  @JsonProperty(JSON_PROPERTY_FOOTER_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFooterIcon(String footerIcon) {
    this.footerIcon = footerIcon;
  }


  public SlackAttachment timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the slack attachment, either type of string or integer
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlackAttachment slackAttachment = (SlackAttachment) o;
    return Objects.equals(this.id, slackAttachment.id) &&
        Objects.equals(this.fallback, slackAttachment.fallback) &&
        Objects.equals(this.color, slackAttachment.color) &&
        Objects.equals(this.pretext, slackAttachment.pretext) &&
        Objects.equals(this.authorName, slackAttachment.authorName) &&
        Objects.equals(this.authorLink, slackAttachment.authorLink) &&
        Objects.equals(this.authorIcon, slackAttachment.authorIcon) &&
        Objects.equals(this.title, slackAttachment.title) &&
        Objects.equals(this.titleLink, slackAttachment.titleLink) &&
        Objects.equals(this.text, slackAttachment.text) &&
        Objects.equals(this.fields, slackAttachment.fields) &&
        Objects.equals(this.imageURL, slackAttachment.imageURL) &&
        Objects.equals(this.thumbURL, slackAttachment.thumbURL) &&
        Objects.equals(this.footer, slackAttachment.footer) &&
        Objects.equals(this.footerIcon, slackAttachment.footerIcon) &&
        Objects.equals(this.timestamp, slackAttachment.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fallback, color, pretext, authorName, authorLink, authorIcon, title, titleLink, text, fields, imageURL, thumbURL, footer, footerIcon, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlackAttachment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fallback: ").append(toIndentedString(fallback)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    pretext: ").append(toIndentedString(pretext)).append("\n");
    sb.append("    authorName: ").append(toIndentedString(authorName)).append("\n");
    sb.append("    authorLink: ").append(toIndentedString(authorLink)).append("\n");
    sb.append("    authorIcon: ").append(toIndentedString(authorIcon)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleLink: ").append(toIndentedString(titleLink)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    imageURL: ").append(toIndentedString(imageURL)).append("\n");
    sb.append("    thumbURL: ").append(toIndentedString(thumbURL)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    footerIcon: ").append(toIndentedString(footerIcon)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

