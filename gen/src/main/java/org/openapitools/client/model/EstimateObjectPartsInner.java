/*
 * NSA Client API
 * This is the official Client API To interact with National Service Alliance (NSA)  # Dates All dates are in the ISO 8601 format - YYYY-MM-DD - ex. 2021-12-31  See this article for more information: [ISO 8601 article](https://en.wikipedia.org/wiki/ISO_8601)  # Authenication Authenication is handled via basic authentication.   Dev and Production credentials will be provided during the implimentation process  See this article for more information: [basic auth article](https://en.wikipedia.org/wiki/Basic_access_authentication) 
 *
 * The version of the OpenAPI document: 1.0.17
 * Contact: rj.whitehead@nationalservicealliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EstimateObjectPartsInner
 */
@JsonPropertyOrder({
  EstimateObjectPartsInner.JSON_PROPERTY_ESTIMATE_PART_I_D,
  EstimateObjectPartsInner.JSON_PROPERTY_PART_BRAND,
  EstimateObjectPartsInner.JSON_PROPERTY_PART_NUMBER,
  EstimateObjectPartsInner.JSON_PROPERTY_DESCRIPTION,
  EstimateObjectPartsInner.JSON_PROPERTY_QUANTITY,
  EstimateObjectPartsInner.JSON_PROPERTY_COST,
  EstimateObjectPartsInner.JSON_PROPERTY_EXTENDED_COST,
  EstimateObjectPartsInner.JSON_PROPERTY_REQUESTED_SUPPLIER,
  EstimateObjectPartsInner.JSON_PROPERTY_ALREADY_USED,
  EstimateObjectPartsInner.JSON_PROPERTY_ALREADY_ORDERED,
  EstimateObjectPartsInner.JSON_PROPERTY_APPROVED,
  EstimateObjectPartsInner.JSON_PROPERTY_CREATE_TIMESTAMP
})
@JsonTypeName("EstimateObject_parts_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:24:53.009381485Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class EstimateObjectPartsInner {
  public static final String JSON_PROPERTY_ESTIMATE_PART_I_D = "estimatePartID";
  private Integer estimatePartID;

  public static final String JSON_PROPERTY_PART_BRAND = "partBrand";
  private String partBrand;

  public static final String JSON_PROPERTY_PART_NUMBER = "partNumber";
  private String partNumber;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_COST = "cost";
  private BigDecimal cost;

  public static final String JSON_PROPERTY_EXTENDED_COST = "extendedCost";
  private BigDecimal extendedCost;

  public static final String JSON_PROPERTY_REQUESTED_SUPPLIER = "requestedSupplier";
  private String requestedSupplier;

  public static final String JSON_PROPERTY_ALREADY_USED = "alreadyUsed";
  private String alreadyUsed;

  public static final String JSON_PROPERTY_ALREADY_ORDERED = "alreadyOrdered";
  private String alreadyOrdered;

  public static final String JSON_PROPERTY_APPROVED = "approved";
  private String approved;

  public static final String JSON_PROPERTY_CREATE_TIMESTAMP = "createTimestamp";
  private OffsetDateTime createTimestamp;

  public EstimateObjectPartsInner() {
  }

  public EstimateObjectPartsInner estimatePartID(Integer estimatePartID) {
    
    this.estimatePartID = estimatePartID;
    return this;
  }

   /**
   * Get estimatePartID
   * @return estimatePartID
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATE_PART_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getEstimatePartID() {
    return estimatePartID;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_PART_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimatePartID(Integer estimatePartID) {
    this.estimatePartID = estimatePartID;
  }


  public EstimateObjectPartsInner partBrand(String partBrand) {
    
    this.partBrand = partBrand;
    return this;
  }

   /**
   * Get partBrand
   * @return partBrand
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PART_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartBrand() {
    return partBrand;
  }


  @JsonProperty(JSON_PROPERTY_PART_BRAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartBrand(String partBrand) {
    this.partBrand = partBrand;
  }


  public EstimateObjectPartsInner partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartNumber() {
    return partNumber;
  }


  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public EstimateObjectPartsInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public EstimateObjectPartsInner quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public EstimateObjectPartsInner cost(BigDecimal cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCost() {
    return cost;
  }


  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }


  public EstimateObjectPartsInner extendedCost(BigDecimal extendedCost) {
    
    this.extendedCost = extendedCost;
    return this;
  }

   /**
   * Get extendedCost
   * @return extendedCost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXTENDED_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getExtendedCost() {
    return extendedCost;
  }


  @JsonProperty(JSON_PROPERTY_EXTENDED_COST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtendedCost(BigDecimal extendedCost) {
    this.extendedCost = extendedCost;
  }


  public EstimateObjectPartsInner requestedSupplier(String requestedSupplier) {
    
    this.requestedSupplier = requestedSupplier;
    return this;
  }

   /**
   * Get requestedSupplier
   * @return requestedSupplier
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestedSupplier() {
    return requestedSupplier;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedSupplier(String requestedSupplier) {
    this.requestedSupplier = requestedSupplier;
  }


  public EstimateObjectPartsInner alreadyUsed(String alreadyUsed) {
    
    this.alreadyUsed = alreadyUsed;
    return this;
  }

   /**
   * Get alreadyUsed
   * @return alreadyUsed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALREADY_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAlreadyUsed() {
    return alreadyUsed;
  }


  @JsonProperty(JSON_PROPERTY_ALREADY_USED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlreadyUsed(String alreadyUsed) {
    this.alreadyUsed = alreadyUsed;
  }


  public EstimateObjectPartsInner alreadyOrdered(String alreadyOrdered) {
    
    this.alreadyOrdered = alreadyOrdered;
    return this;
  }

   /**
   * Get alreadyOrdered
   * @return alreadyOrdered
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALREADY_ORDERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAlreadyOrdered() {
    return alreadyOrdered;
  }


  @JsonProperty(JSON_PROPERTY_ALREADY_ORDERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlreadyOrdered(String alreadyOrdered) {
    this.alreadyOrdered = alreadyOrdered;
  }


  public EstimateObjectPartsInner approved(String approved) {
    
    this.approved = approved;
    return this;
  }

   /**
   * Get approved
   * @return approved
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApproved() {
    return approved;
  }


  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApproved(String approved) {
    this.approved = approved;
  }


  public EstimateObjectPartsInner createTimestamp(OffsetDateTime createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * Get createTimestamp
   * @return createTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreateTimestamp() {
    return createTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateTimestamp(OffsetDateTime createTimestamp) {
    this.createTimestamp = createTimestamp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateObjectPartsInner estimateObjectPartsInner = (EstimateObjectPartsInner) o;
    return Objects.equals(this.estimatePartID, estimateObjectPartsInner.estimatePartID) &&
        Objects.equals(this.partBrand, estimateObjectPartsInner.partBrand) &&
        Objects.equals(this.partNumber, estimateObjectPartsInner.partNumber) &&
        Objects.equals(this.description, estimateObjectPartsInner.description) &&
        Objects.equals(this.quantity, estimateObjectPartsInner.quantity) &&
        Objects.equals(this.cost, estimateObjectPartsInner.cost) &&
        Objects.equals(this.extendedCost, estimateObjectPartsInner.extendedCost) &&
        Objects.equals(this.requestedSupplier, estimateObjectPartsInner.requestedSupplier) &&
        Objects.equals(this.alreadyUsed, estimateObjectPartsInner.alreadyUsed) &&
        Objects.equals(this.alreadyOrdered, estimateObjectPartsInner.alreadyOrdered) &&
        Objects.equals(this.approved, estimateObjectPartsInner.approved) &&
        Objects.equals(this.createTimestamp, estimateObjectPartsInner.createTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estimatePartID, partBrand, partNumber, description, quantity, cost, extendedCost, requestedSupplier, alreadyUsed, alreadyOrdered, approved, createTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateObjectPartsInner {\n");
    sb.append("    estimatePartID: ").append(toIndentedString(estimatePartID)).append("\n");
    sb.append("    partBrand: ").append(toIndentedString(partBrand)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    extendedCost: ").append(toIndentedString(extendedCost)).append("\n");
    sb.append("    requestedSupplier: ").append(toIndentedString(requestedSupplier)).append("\n");
    sb.append("    alreadyUsed: ").append(toIndentedString(alreadyUsed)).append("\n");
    sb.append("    alreadyOrdered: ").append(toIndentedString(alreadyOrdered)).append("\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

