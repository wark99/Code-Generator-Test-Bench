/*
 * Simple Inventory API
 * This is SpaceTrader API Clone
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * Contact: thoda166@school.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SystemFactions;
import org.openapitools.client.model.Waypoint;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * System
 */
@JsonPropertyOrder({
  System.JSON_PROPERTY_SYMBOL,
  System.JSON_PROPERTY_SECTOR_SYMBOL,
  System.JSON_PROPERTY_TYPE,
  System.JSON_PROPERTY_WAYPOINTS,
  System.JSON_PROPERTY_FACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:09.429563733Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class System {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_SECTOR_SYMBOL = "sectorSymbol";
  private String sectorSymbol;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_WAYPOINTS = "waypoints";
  private Waypoint waypoints;

  public static final String JSON_PROPERTY_FACTIONS = "factions";
  private SystemFactions factions;

  public System() {
  }

  public System symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public System sectorSymbol(String sectorSymbol) {
    
    this.sectorSymbol = sectorSymbol;
    return this;
  }

   /**
   * Get sectorSymbol
   * @return sectorSymbol
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECTOR_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSectorSymbol() {
    return sectorSymbol;
  }


  @JsonProperty(JSON_PROPERTY_SECTOR_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSectorSymbol(String sectorSymbol) {
    this.sectorSymbol = sectorSymbol;
  }


  public System type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public System waypoints(Waypoint waypoints) {
    
    this.waypoints = waypoints;
    return this;
  }

   /**
   * Get waypoints
   * @return waypoints
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WAYPOINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Waypoint getWaypoints() {
    return waypoints;
  }


  @JsonProperty(JSON_PROPERTY_WAYPOINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWaypoints(Waypoint waypoints) {
    this.waypoints = waypoints;
  }


  public System factions(SystemFactions factions) {
    
    this.factions = factions;
    return this;
  }

   /**
   * Get factions
   * @return factions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SystemFactions getFactions() {
    return factions;
  }


  @JsonProperty(JSON_PROPERTY_FACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactions(SystemFactions factions) {
    this.factions = factions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    System system = (System) o;
    return Objects.equals(this.symbol, system.symbol) &&
        Objects.equals(this.sectorSymbol, system.sectorSymbol) &&
        Objects.equals(this.type, system.type) &&
        Objects.equals(this.waypoints, system.waypoints) &&
        Objects.equals(this.factions, system.factions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, sectorSymbol, type, waypoints, factions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class System {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    sectorSymbol: ").append(toIndentedString(sectorSymbol)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    waypoints: ").append(toIndentedString(waypoints)).append("\n");
    sb.append("    factions: ").append(toIndentedString(factions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

