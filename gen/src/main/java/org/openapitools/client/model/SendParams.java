/*
 * GosuMailAPI
 * <img src=\"https://i.imgur.com/ddJowmh.jpeg\" width=\"100\"/> <br/> # API лучшего сервиса отправки писем во входящие! <br/> ## Удачного использования! <br/> <br/> **Во всех запросах указывайте параметр** key <br/> **Пример:** POST /api/send?key=ВАШ_ТОКЕН <br/> <br/> **Пример отправки на пару популярных языках:** > **NodeJs** ``` const axios = require('axios');   let data = JSON.stringify([     {       \"url\": \"https://url.com\",       \"to\": \"mail@mail.com\",       \"country_code\": \"cz\",       \"service_code\": \"post\",       \"product\": \"test\",       \"is_delay\": false,       \"notify_id\": 1234 // Telegram ID user      }   ]);    let config = {     method: 'post',     maxBodyLength: Infinity,     url: 'https://azmail.link/api/send?key=TOKEN',     headers: {        'Content-Type': 'application/json',        'Accept': 'application/json'     },     data : data   };    axios.request(config)   .then((response) => {     console.log(JSON.stringify(response.data));   })   .catch((error) => {     console.log(error);   }); ``` > **Python** ``` import requests import json  url = \"https://azmail.link/api/send?key=TOKEN\"  payload = json.dumps([     {       \"url\": \"https://url.com\",       \"to\": \"mail@mail.com\",       \"country_code\": \"cz\",       \"service_code\": \"post\",       \"product\": \"test\",       \"is_delay\": false,       \"notify_id\": 1234 // Telegram ID user      } ]) headers = {   'Content-Type': 'application/json',   'Accept': 'application/json' }  response = requests.request(\"POST\", url, headers=headers, data=payload)  print(response.json()) ```  
 *
 * The version of the OpenAPI document: 2.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SendParams
 */
@JsonPropertyOrder({
  SendParams.JSON_PROPERTY_URL,
  SendParams.JSON_PROPERTY_TO,
  SendParams.JSON_PROPERTY_COUNTRY_CODE,
  SendParams.JSON_PROPERTY_SERVICE_CODE,
  SendParams.JSON_PROPERTY_PRODUCT,
  SendParams.JSON_PROPERTY_IS_DELAY,
  SendParams.JSON_PROPERTY_NOTIFY_ID,
  SendParams.JSON_PROPERTY_URL_IMG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:22:50.833453606Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SendParams {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_TO = "to";
  private String to;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  private String countryCode;

  public static final String JSON_PROPERTY_SERVICE_CODE = "service_code";
  private String serviceCode;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private String product;

  public static final String JSON_PROPERTY_IS_DELAY = "is_delay";
  private Boolean isDelay = false;

  public static final String JSON_PROPERTY_NOTIFY_ID = "notify_id";
  private Integer notifyId = 0;

  public static final String JSON_PROPERTY_URL_IMG = "url_img";
  private String urlImg;

  public SendParams() {
  }

  public SendParams url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public SendParams to(String to) {
    
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTo(String to) {
    this.to = to;
  }


  public SendParams countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public SendParams serviceCode(String serviceCode) {
    
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * Get serviceCode
   * @return serviceCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceCode() {
    return serviceCode;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }


  public SendParams product(String product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(String product) {
    this.product = product;
  }


  public SendParams isDelay(Boolean isDelay) {
    
    this.isDelay = isDelay;
    return this;
  }

   /**
   * Get isDelay
   * @return isDelay
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDelay() {
    return isDelay;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDelay(Boolean isDelay) {
    this.isDelay = isDelay;
  }


  public SendParams notifyId(Integer notifyId) {
    
    this.notifyId = notifyId;
    return this;
  }

   /**
   * Get notifyId
   * @return notifyId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNotifyId() {
    return notifyId;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotifyId(Integer notifyId) {
    this.notifyId = notifyId;
  }


  public SendParams urlImg(String urlImg) {
    
    this.urlImg = urlImg;
    return this;
  }

   /**
   * Get urlImg
   * @return urlImg
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL_IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrlImg() {
    return urlImg;
  }


  @JsonProperty(JSON_PROPERTY_URL_IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlImg(String urlImg) {
    this.urlImg = urlImg;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendParams sendParams = (SendParams) o;
    return Objects.equals(this.url, sendParams.url) &&
        Objects.equals(this.to, sendParams.to) &&
        Objects.equals(this.countryCode, sendParams.countryCode) &&
        Objects.equals(this.serviceCode, sendParams.serviceCode) &&
        Objects.equals(this.product, sendParams.product) &&
        Objects.equals(this.isDelay, sendParams.isDelay) &&
        Objects.equals(this.notifyId, sendParams.notifyId) &&
        Objects.equals(this.urlImg, sendParams.urlImg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, to, countryCode, serviceCode, product, isDelay, notifyId, urlImg);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendParams {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    isDelay: ").append(toIndentedString(isDelay)).append("\n");
    sb.append("    notifyId: ").append(toIndentedString(notifyId)).append("\n");
    sb.append("    urlImg: ").append(toIndentedString(urlImg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

