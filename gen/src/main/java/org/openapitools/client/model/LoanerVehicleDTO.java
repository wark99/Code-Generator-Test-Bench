/*
 * UEX Corp API
 * Created by [@thekronny](https://discord.com/users/224580858432978944). ## Downloads [Secification file](https://app.swaggerhub.com/apiproxy/registry/dolejska-daniel/UEX-API/v2.0?resolved=true&flatten=true&pretty=true) ## Other Resources
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LoanerVehicleDTOLoanersInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoanerVehicleDTO
 */
@JsonPropertyOrder({
  LoanerVehicleDTO.JSON_PROPERTY_LOANERS,
  LoanerVehicleDTO.JSON_PROPERTY_PARENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:46.594754675Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class LoanerVehicleDTO {
  public static final String JSON_PROPERTY_LOANERS = "loaners";
  private List<LoanerVehicleDTOLoanersInner> loaners;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private LoanerVehicleDTOLoanersInner parent;

  public LoanerVehicleDTO() {
  }

  public LoanerVehicleDTO loaners(List<LoanerVehicleDTOLoanersInner> loaners) {
    
    this.loaners = loaners;
    return this;
  }

  public LoanerVehicleDTO addLoanersItem(LoanerVehicleDTOLoanersInner loanersItem) {
    if (this.loaners == null) {
      this.loaners = new ArrayList<>();
    }
    this.loaners.add(loanersItem);
    return this;
  }

   /**
   * Get loaners
   * @return loaners
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOANERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LoanerVehicleDTOLoanersInner> getLoaners() {
    return loaners;
  }


  @JsonProperty(JSON_PROPERTY_LOANERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoaners(List<LoanerVehicleDTOLoanersInner> loaners) {
    this.loaners = loaners;
  }


  public LoanerVehicleDTO parent(LoanerVehicleDTOLoanersInner parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoanerVehicleDTOLoanersInner getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(LoanerVehicleDTOLoanersInner parent) {
    this.parent = parent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanerVehicleDTO loanerVehicleDTO = (LoanerVehicleDTO) o;
    return Objects.equals(this.loaners, loanerVehicleDTO.loaners) &&
        Objects.equals(this.parent, loanerVehicleDTO.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loaners, parent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanerVehicleDTO {\n");
    sb.append("    loaners: ").append(toIndentedString(loaners)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

