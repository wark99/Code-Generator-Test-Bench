/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import org.openapitools.client.model.PropertyLettingsIdMarketingGet200ResponseValueCommercial;
import org.openapitools.client.model.PropertyLettingsIdMarketingGet200ResponseValueDetails;
import org.openapitools.client.model.PropertyLettingsIdMarketingGet200ResponseValuePriceInformation;
import org.openapitools.client.model.PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability;
import org.openapitools.client.model.PropertyLinkedEmployeeResponse;
import org.openapitools.client.model.PropertyMarketingAddressResponse;
import org.openapitools.client.model.PropertyMarketingMediaResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyLettingsIdMarketingGet200ResponseValue
 */
@JsonPropertyOrder({
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_ID,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_INTERNAL_REFERENCE,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_BRANCH,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_AVAILABILITY_DATE,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_LINKED_EMPLOYEES,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_MEDIA,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_NEW_HOME,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PROPERTY_TYPE,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PUBLISHED,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PUBLISHED_DATE,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_ADDRESS,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_COMMERCIAL,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_DETAILS,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PRICE_INFORMATION,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_CREATED,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_UPDATED,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_HOUSE_FLAT_SHARE,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_TYPE_OF_LET,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PRIMARY_STATUS_ID,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_PRIMARY_STATUS_TEXT,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_SECONDARY_STATUS_ID,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_SECONDARY_STATUS_TEXT,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_LANDLORD_REGISTRATION_NUMBER,
  PropertyLettingsIdMarketingGet200ResponseValue.JSON_PROPERTY_TENANT_SUITABILITY
})
@JsonTypeName("_property_lettings__id__marketing_get_200_response_value")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyLettingsIdMarketingGet200ResponseValue {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_INTERNAL_REFERENCE = "internal_reference";
  private String internalReference;

  public static final String JSON_PROPERTY_BRANCH = "branch";
  private String branch;

  public static final String JSON_PROPERTY_AVAILABILITY_DATE = "availability_date";
  private MaintenancePost200ResponseValueCreatedDate availabilityDate;

  public static final String JSON_PROPERTY_LINKED_EMPLOYEES = "linked_employees";
  private List<PropertyLinkedEmployeeResponse> linkedEmployees;

  public static final String JSON_PROPERTY_MEDIA = "media";
  private List<PropertyMarketingMediaResponse> media;

  public static final String JSON_PROPERTY_NEW_HOME = "new_home";
  private Boolean newHome;

  /**
   * 1 &#x3D; Terraced house, 2 &#x3D; End of terrace house, 3 &#x3D; Semi detached house, 4 &#x3D; Detached house, 5 &#x3D; Mews house, 6 &#x3D; Cluster house, 7 &#x3D; Ground floor flat, 8 &#x3D; Flat, 9 &#x3D; Studio flat, 10 &#x3D; Ground floor maisonette, 11 &#x3D; Maisonette, 12 &#x3D; Bungalow, 13 &#x3D; Terraced bungalow, 14 &#x3D; Semi detached bungalow, 15 &#x3D; Detached bungalow, 16 &#x3D; Mobile home, 20 &#x3D; Land residential, 21 &#x3D; Link detached house, 22 &#x3D; Town house, 23 &#x3D; Cottage, 24 &#x3D; Chalet, 25 &#x3D; Character property, 26 &#x3D; House unspecified, 27 &#x3D; Villa, 28 &#x3D; Apartment, 29 &#x3D; Penthouse, 30 &#x3D; Finca, 43 &#x3D; Barn conversion, 44 &#x3D; Serviced apartment, 45 &#x3D; Parking, 51 &#x3D; Garages, 46 &#x3D; Sheltered housing, 47 &#x3D; Retirement property, 48 &#x3D; Double room, 49 &#x3D; Flat share, 50 &#x3D; Park home, 52 &#x3D; Farm house, 53 &#x3D; Equestrian facility, 56 &#x3D; Double upper, 59 &#x3D; Triplex, 62 &#x3D; Longere, 65 &#x3D; Gite, 68 &#x3D; Barn, 71 &#x3D; Trulli, 74 &#x3D; Commercial mill, 86 &#x3D; Mill, 77 &#x3D; Ruins, 80 &#x3D; Restaurant, 83 &#x3D; Cafe, 92 &#x3D; Castle, 95 &#x3D; Village house, 101 &#x3D; Cave house, 104 &#x3D; Cortijo, 107 &#x3D; Farm land, 110 &#x3D; Plot, 113 &#x3D; Country house, 116 &#x3D; Stone house, 117 &#x3D; Caravan, 118 &#x3D; Lodge, 119 &#x3D; Log cabin, 120 &#x3D; Manor house, 121 &#x3D; Stately home, 125 &#x3D; Off plan, 128 &#x3D; Semi detached villa, 131 &#x3D; Detached villa, 134 &#x3D; Barnightclub, 137 &#x3D; Shop, 140 &#x3D; Riad, 141 &#x3D; House boat, 142 &#x3D; Hotel room, 143 &#x3D; Block of flats, 144 &#x3D; Private halls, 178 &#x3D; Office, 181 &#x3D; Business park, 184 &#x3D; Serviced office, 187 &#x3D; Retail property high street, 190 &#x3D; Retail property out of town, 193 &#x3D; Convenience store, 196 &#x3D; Commercial garage, 199 &#x3D; Hairdresser barber shop, 202 &#x3D; Hotel, 205 &#x3D; Petrol station, 208 &#x3D; Post office, 211 &#x3D; Pub, 214 &#x3D; Workshop retail space, 217 &#x3D; Distribution warehouse, 220 &#x3D; Factory, 223 &#x3D; Heavy industrial, 226 &#x3D; Industrial park, 229 &#x3D; Light industrial, 232 &#x3D; Storage, 235 &#x3D; Showroom, 238 &#x3D; Warehouse, 241 &#x3D; Land commercial, 244 &#x3D; Commercial development, 247 &#x3D; Industrial development, 250 &#x3D; Residential development, 253 &#x3D; Commercial 11, 256 &#x3D; Data centre, 259 &#x3D; Farm, 262 &#x3D; Healthcare facility, 265 &#x3D; Marine property, 268 &#x3D; Mixed use, 271 &#x3D; Research development facility, 274 &#x3D; Science park, 277 &#x3D; Guest house, 280 &#x3D; Hospitality, 283 &#x3D; Leisure facility, 298 &#x3D; Takeaway, 301 &#x3D; Childcare facility, 304 &#x3D; Smallholding, 307 &#x3D; Place of worship, 310 &#x3D; Trade counter, 511 &#x3D; Coach house, 512 &#x3D; House of multiple occupation, 535 &#x3D; Sports facilities, 538 &#x3D; Spa, 541 &#x3D; Campsite holiday village
   */
  public enum PropertyTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14),
    
    NUMBER_15(15),
    
    NUMBER_16(16),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_23(23),
    
    NUMBER_24(24),
    
    NUMBER_25(25),
    
    NUMBER_26(26),
    
    NUMBER_27(27),
    
    NUMBER_28(28),
    
    NUMBER_29(29),
    
    NUMBER_30(30),
    
    NUMBER_43(43),
    
    NUMBER_44(44),
    
    NUMBER_45(45),
    
    NUMBER_46(46),
    
    NUMBER_47(47),
    
    NUMBER_48(48),
    
    NUMBER_49(49),
    
    NUMBER_50(50),
    
    NUMBER_51(51),
    
    NUMBER_196(196),
    
    NUMBER_52(52),
    
    NUMBER_53(53),
    
    NUMBER_56(56),
    
    NUMBER_59(59),
    
    NUMBER_62(62),
    
    NUMBER_65(65),
    
    NUMBER_68(68),
    
    NUMBER_71(71),
    
    NUMBER_74(74),
    
    NUMBER_86(86),
    
    NUMBER_77(77),
    
    NUMBER_80(80),
    
    NUMBER_83(83),
    
    NUMBER_92(92),
    
    NUMBER_95(95),
    
    NUMBER_101(101),
    
    NUMBER_104(104),
    
    NUMBER_107(107),
    
    NUMBER_110(110),
    
    NUMBER_113(113),
    
    NUMBER_116(116),
    
    NUMBER_117(117),
    
    NUMBER_118(118),
    
    NUMBER_119(119),
    
    NUMBER_120(120),
    
    NUMBER_121(121),
    
    NUMBER_125(125),
    
    NUMBER_128(128),
    
    NUMBER_131(131),
    
    NUMBER_134(134),
    
    NUMBER_137(137),
    
    NUMBER_140(140),
    
    NUMBER_141(141),
    
    NUMBER_142(142),
    
    NUMBER_143(143),
    
    NUMBER_144(144),
    
    NUMBER_178(178),
    
    NUMBER_181(181),
    
    NUMBER_184(184),
    
    NUMBER_187(187),
    
    NUMBER_190(190),
    
    NUMBER_193(193),
    
    NUMBER_199(199),
    
    NUMBER_202(202),
    
    NUMBER_205(205),
    
    NUMBER_208(208),
    
    NUMBER_211(211),
    
    NUMBER_214(214),
    
    NUMBER_217(217),
    
    NUMBER_220(220),
    
    NUMBER_223(223),
    
    NUMBER_226(226),
    
    NUMBER_229(229),
    
    NUMBER_232(232),
    
    NUMBER_235(235),
    
    NUMBER_238(238),
    
    NUMBER_241(241),
    
    NUMBER_244(244),
    
    NUMBER_247(247),
    
    NUMBER_250(250),
    
    NUMBER_253(253),
    
    NUMBER_256(256),
    
    NUMBER_259(259),
    
    NUMBER_262(262),
    
    NUMBER_265(265),
    
    NUMBER_268(268),
    
    NUMBER_271(271),
    
    NUMBER_274(274),
    
    NUMBER_277(277),
    
    NUMBER_280(280),
    
    NUMBER_283(283),
    
    NUMBER_298(298),
    
    NUMBER_301(301),
    
    NUMBER_304(304),
    
    NUMBER_307(307),
    
    NUMBER_310(310),
    
    NUMBER_511(511),
    
    NUMBER_512(512),
    
    NUMBER_535(535),
    
    NUMBER_538(538),
    
    NUMBER_541(541);

    private Integer value;

    PropertyTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PropertyTypeEnum fromValue(Integer value) {
      for (PropertyTypeEnum b : PropertyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROPERTY_TYPE = "property_type";
  private PropertyTypeEnum propertyType;

  public static final String JSON_PROPERTY_PUBLISHED = "published";
  private Boolean published;

  public static final String JSON_PROPERTY_PUBLISHED_DATE = "published_date";
  private MaintenancePost200ResponseValueCreatedDate publishedDate;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private PropertyMarketingAddressResponse address;

  public static final String JSON_PROPERTY_COMMERCIAL = "commercial";
  private PropertyLettingsIdMarketingGet200ResponseValueCommercial commercial;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private PropertyLettingsIdMarketingGet200ResponseValueDetails details;

  public static final String JSON_PROPERTY_PRICE_INFORMATION = "price_information";
  private PropertyLettingsIdMarketingGet200ResponseValuePriceInformation priceInformation;

  public static final String JSON_PROPERTY_CREATED = "created";
  private MaintenancePost200ResponseValueCreatedDate created;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private MaintenancePost200ResponseValueCreatedDate updated;

  public static final String JSON_PROPERTY_HOUSE_FLAT_SHARE = "house_flat_share";
  private Boolean houseFlatShare;

  /**
   * L &#x3D; Long term, S &#x3D; Short term &lt; 6 months, B &#x3D; Long or short term, F &#x3D; Edinburgh festival
   */
  public enum TypeOfLetEnum {
    L("L"),
    
    S("S"),
    
    B("B"),
    
    F("F");

    private String value;

    TypeOfLetEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeOfLetEnum fromValue(String value) {
      for (TypeOfLetEnum b : TypeOfLetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE_OF_LET = "type_of_let";
  private TypeOfLetEnum typeOfLet;

  /**
   * 1 &#x3D; Void: general, 2 &#x3D; Unoccupied on market, 3 &#x3D; Occupied on market, 4 &#x3D; Tenant check period, 5 &#x3D; Await tenant move in, 6 &#x3D; Occupied, 7 &#x3D; Past property, 8 &#x3D; Notice given: not on market, 10 &#x3D; Eviction, 11 &#x3D; Pending: new property, 20 &#x3D; Occupied: pre let, 21 &#x3D; Occupied: on hold, 22 &#x3D; Occupied: pending withdrawal, 30 &#x3D; Unoccupied: pre let, 31 &#x3D; Unoccupied: on hold, 32 &#x3D; Unoccupied: pending withdrawal, 40 &#x3D; Void: in development, 41 &#x3D; Void: in refurbishment, 42 &#x3D; Void: in maintenance, 43 &#x3D; Awaiting tenant checks, 44 &#x3D; Awaiting lease
   */
  public enum PrimaryStatusIdEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_30(30),
    
    NUMBER_31(31),
    
    NUMBER_32(32),
    
    NUMBER_40(40),
    
    NUMBER_41(41),
    
    NUMBER_42(42),
    
    NUMBER_43(43),
    
    NUMBER_44(44);

    private Integer value;

    PrimaryStatusIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrimaryStatusIdEnum fromValue(Integer value) {
      for (PrimaryStatusIdEnum b : PrimaryStatusIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRIMARY_STATUS_ID = "primary_status_id";
  private PrimaryStatusIdEnum primaryStatusId;

  public static final String JSON_PROPERTY_PRIMARY_STATUS_TEXT = "primary_status_text";
  private String primaryStatusText;

  public static final String JSON_PROPERTY_SECONDARY_STATUS_ID = "secondary_status_id";
  private Integer secondaryStatusId;

  public static final String JSON_PROPERTY_SECONDARY_STATUS_TEXT = "secondary_status_text";
  private String secondaryStatusText;

  public static final String JSON_PROPERTY_LANDLORD_REGISTRATION_NUMBER = "landlord_registration_number";
  private String landlordRegistrationNumber;

  public static final String JSON_PROPERTY_TENANT_SUITABILITY = "tenant_suitability";
  private PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability tenantSuitability;

  public PropertyLettingsIdMarketingGet200ResponseValue() {
  }

  public PropertyLettingsIdMarketingGet200ResponseValue id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue internalReference(String internalReference) {
    
    this.internalReference = internalReference;
    return this;
  }

   /**
   * Get internalReference
   * @return internalReference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalReference() {
    return internalReference;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalReference(String internalReference) {
    this.internalReference = internalReference;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue branch(String branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBranch() {
    return branch;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranch(String branch) {
    this.branch = branch;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue availabilityDate(MaintenancePost200ResponseValueCreatedDate availabilityDate) {
    
    this.availabilityDate = availabilityDate;
    return this;
  }

   /**
   * Get availabilityDate
   * @return availabilityDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getAvailabilityDate() {
    return availabilityDate;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityDate(MaintenancePost200ResponseValueCreatedDate availabilityDate) {
    this.availabilityDate = availabilityDate;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue linkedEmployees(List<PropertyLinkedEmployeeResponse> linkedEmployees) {
    
    this.linkedEmployees = linkedEmployees;
    return this;
  }

  public PropertyLettingsIdMarketingGet200ResponseValue addLinkedEmployeesItem(PropertyLinkedEmployeeResponse linkedEmployeesItem) {
    if (this.linkedEmployees == null) {
      this.linkedEmployees = new ArrayList<>();
    }
    this.linkedEmployees.add(linkedEmployeesItem);
    return this;
  }

   /**
   * Get linkedEmployees
   * @return linkedEmployees
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKED_EMPLOYEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PropertyLinkedEmployeeResponse> getLinkedEmployees() {
    return linkedEmployees;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_EMPLOYEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedEmployees(List<PropertyLinkedEmployeeResponse> linkedEmployees) {
    this.linkedEmployees = linkedEmployees;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue media(List<PropertyMarketingMediaResponse> media) {
    
    this.media = media;
    return this;
  }

  public PropertyLettingsIdMarketingGet200ResponseValue addMediaItem(PropertyMarketingMediaResponse mediaItem) {
    if (this.media == null) {
      this.media = new ArrayList<>();
    }
    this.media.add(mediaItem);
    return this;
  }

   /**
   * Get media
   * @return media
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PropertyMarketingMediaResponse> getMedia() {
    return media;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedia(List<PropertyMarketingMediaResponse> media) {
    this.media = media;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue newHome(Boolean newHome) {
    
    this.newHome = newHome;
    return this;
  }

   /**
   * Get newHome
   * @return newHome
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_HOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNewHome() {
    return newHome;
  }


  @JsonProperty(JSON_PROPERTY_NEW_HOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewHome(Boolean newHome) {
    this.newHome = newHome;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue propertyType(PropertyTypeEnum propertyType) {
    
    this.propertyType = propertyType;
    return this;
  }

   /**
   * 1 &#x3D; Terraced house, 2 &#x3D; End of terrace house, 3 &#x3D; Semi detached house, 4 &#x3D; Detached house, 5 &#x3D; Mews house, 6 &#x3D; Cluster house, 7 &#x3D; Ground floor flat, 8 &#x3D; Flat, 9 &#x3D; Studio flat, 10 &#x3D; Ground floor maisonette, 11 &#x3D; Maisonette, 12 &#x3D; Bungalow, 13 &#x3D; Terraced bungalow, 14 &#x3D; Semi detached bungalow, 15 &#x3D; Detached bungalow, 16 &#x3D; Mobile home, 20 &#x3D; Land residential, 21 &#x3D; Link detached house, 22 &#x3D; Town house, 23 &#x3D; Cottage, 24 &#x3D; Chalet, 25 &#x3D; Character property, 26 &#x3D; House unspecified, 27 &#x3D; Villa, 28 &#x3D; Apartment, 29 &#x3D; Penthouse, 30 &#x3D; Finca, 43 &#x3D; Barn conversion, 44 &#x3D; Serviced apartment, 45 &#x3D; Parking, 51 &#x3D; Garages, 46 &#x3D; Sheltered housing, 47 &#x3D; Retirement property, 48 &#x3D; Double room, 49 &#x3D; Flat share, 50 &#x3D; Park home, 52 &#x3D; Farm house, 53 &#x3D; Equestrian facility, 56 &#x3D; Double upper, 59 &#x3D; Triplex, 62 &#x3D; Longere, 65 &#x3D; Gite, 68 &#x3D; Barn, 71 &#x3D; Trulli, 74 &#x3D; Commercial mill, 86 &#x3D; Mill, 77 &#x3D; Ruins, 80 &#x3D; Restaurant, 83 &#x3D; Cafe, 92 &#x3D; Castle, 95 &#x3D; Village house, 101 &#x3D; Cave house, 104 &#x3D; Cortijo, 107 &#x3D; Farm land, 110 &#x3D; Plot, 113 &#x3D; Country house, 116 &#x3D; Stone house, 117 &#x3D; Caravan, 118 &#x3D; Lodge, 119 &#x3D; Log cabin, 120 &#x3D; Manor house, 121 &#x3D; Stately home, 125 &#x3D; Off plan, 128 &#x3D; Semi detached villa, 131 &#x3D; Detached villa, 134 &#x3D; Barnightclub, 137 &#x3D; Shop, 140 &#x3D; Riad, 141 &#x3D; House boat, 142 &#x3D; Hotel room, 143 &#x3D; Block of flats, 144 &#x3D; Private halls, 178 &#x3D; Office, 181 &#x3D; Business park, 184 &#x3D; Serviced office, 187 &#x3D; Retail property high street, 190 &#x3D; Retail property out of town, 193 &#x3D; Convenience store, 196 &#x3D; Commercial garage, 199 &#x3D; Hairdresser barber shop, 202 &#x3D; Hotel, 205 &#x3D; Petrol station, 208 &#x3D; Post office, 211 &#x3D; Pub, 214 &#x3D; Workshop retail space, 217 &#x3D; Distribution warehouse, 220 &#x3D; Factory, 223 &#x3D; Heavy industrial, 226 &#x3D; Industrial park, 229 &#x3D; Light industrial, 232 &#x3D; Storage, 235 &#x3D; Showroom, 238 &#x3D; Warehouse, 241 &#x3D; Land commercial, 244 &#x3D; Commercial development, 247 &#x3D; Industrial development, 250 &#x3D; Residential development, 253 &#x3D; Commercial 11, 256 &#x3D; Data centre, 259 &#x3D; Farm, 262 &#x3D; Healthcare facility, 265 &#x3D; Marine property, 268 &#x3D; Mixed use, 271 &#x3D; Research development facility, 274 &#x3D; Science park, 277 &#x3D; Guest house, 280 &#x3D; Hospitality, 283 &#x3D; Leisure facility, 298 &#x3D; Takeaway, 301 &#x3D; Childcare facility, 304 &#x3D; Smallholding, 307 &#x3D; Place of worship, 310 &#x3D; Trade counter, 511 &#x3D; Coach house, 512 &#x3D; House of multiple occupation, 535 &#x3D; Sports facilities, 538 &#x3D; Spa, 541 &#x3D; Campsite holiday village
   * @return propertyType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyTypeEnum getPropertyType() {
    return propertyType;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyType(PropertyTypeEnum propertyType) {
    this.propertyType = propertyType;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue published(Boolean published) {
    
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublished() {
    return published;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublished(Boolean published) {
    this.published = published;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue publishedDate(MaintenancePost200ResponseValueCreatedDate publishedDate) {
    
    this.publishedDate = publishedDate;
    return this;
  }

   /**
   * Get publishedDate
   * @return publishedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getPublishedDate() {
    return publishedDate;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishedDate(MaintenancePost200ResponseValueCreatedDate publishedDate) {
    this.publishedDate = publishedDate;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue address(PropertyMarketingAddressResponse address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyMarketingAddressResponse getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(PropertyMarketingAddressResponse address) {
    this.address = address;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue commercial(PropertyLettingsIdMarketingGet200ResponseValueCommercial commercial) {
    
    this.commercial = commercial;
    return this;
  }

   /**
   * Get commercial
   * @return commercial
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyLettingsIdMarketingGet200ResponseValueCommercial getCommercial() {
    return commercial;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommercial(PropertyLettingsIdMarketingGet200ResponseValueCommercial commercial) {
    this.commercial = commercial;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue details(PropertyLettingsIdMarketingGet200ResponseValueDetails details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyLettingsIdMarketingGet200ResponseValueDetails getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(PropertyLettingsIdMarketingGet200ResponseValueDetails details) {
    this.details = details;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue priceInformation(PropertyLettingsIdMarketingGet200ResponseValuePriceInformation priceInformation) {
    
    this.priceInformation = priceInformation;
    return this;
  }

   /**
   * Get priceInformation
   * @return priceInformation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyLettingsIdMarketingGet200ResponseValuePriceInformation getPriceInformation() {
    return priceInformation;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceInformation(PropertyLettingsIdMarketingGet200ResponseValuePriceInformation priceInformation) {
    this.priceInformation = priceInformation;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue created(MaintenancePost200ResponseValueCreatedDate created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(MaintenancePost200ResponseValueCreatedDate created) {
    this.created = created;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue updated(MaintenancePost200ResponseValueCreatedDate updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdated(MaintenancePost200ResponseValueCreatedDate updated) {
    this.updated = updated;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue houseFlatShare(Boolean houseFlatShare) {
    
    this.houseFlatShare = houseFlatShare;
    return this;
  }

   /**
   * Get houseFlatShare
   * @return houseFlatShare
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOUSE_FLAT_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHouseFlatShare() {
    return houseFlatShare;
  }


  @JsonProperty(JSON_PROPERTY_HOUSE_FLAT_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHouseFlatShare(Boolean houseFlatShare) {
    this.houseFlatShare = houseFlatShare;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue typeOfLet(TypeOfLetEnum typeOfLet) {
    
    this.typeOfLet = typeOfLet;
    return this;
  }

   /**
   * L &#x3D; Long term, S &#x3D; Short term &lt; 6 months, B &#x3D; Long or short term, F &#x3D; Edinburgh festival
   * @return typeOfLet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_OF_LET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeOfLetEnum getTypeOfLet() {
    return typeOfLet;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_OF_LET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeOfLet(TypeOfLetEnum typeOfLet) {
    this.typeOfLet = typeOfLet;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue primaryStatusId(PrimaryStatusIdEnum primaryStatusId) {
    
    this.primaryStatusId = primaryStatusId;
    return this;
  }

   /**
   * 1 &#x3D; Void: general, 2 &#x3D; Unoccupied on market, 3 &#x3D; Occupied on market, 4 &#x3D; Tenant check period, 5 &#x3D; Await tenant move in, 6 &#x3D; Occupied, 7 &#x3D; Past property, 8 &#x3D; Notice given: not on market, 10 &#x3D; Eviction, 11 &#x3D; Pending: new property, 20 &#x3D; Occupied: pre let, 21 &#x3D; Occupied: on hold, 22 &#x3D; Occupied: pending withdrawal, 30 &#x3D; Unoccupied: pre let, 31 &#x3D; Unoccupied: on hold, 32 &#x3D; Unoccupied: pending withdrawal, 40 &#x3D; Void: in development, 41 &#x3D; Void: in refurbishment, 42 &#x3D; Void: in maintenance, 43 &#x3D; Awaiting tenant checks, 44 &#x3D; Awaiting lease
   * @return primaryStatusId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMARY_STATUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrimaryStatusIdEnum getPrimaryStatusId() {
    return primaryStatusId;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_STATUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryStatusId(PrimaryStatusIdEnum primaryStatusId) {
    this.primaryStatusId = primaryStatusId;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue primaryStatusText(String primaryStatusText) {
    
    this.primaryStatusText = primaryStatusText;
    return this;
  }

   /**
   * Get primaryStatusText
   * @return primaryStatusText
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMARY_STATUS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryStatusText() {
    return primaryStatusText;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_STATUS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryStatusText(String primaryStatusText) {
    this.primaryStatusText = primaryStatusText;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue secondaryStatusId(Integer secondaryStatusId) {
    
    this.secondaryStatusId = secondaryStatusId;
    return this;
  }

   /**
   * Get secondaryStatusId
   * @return secondaryStatusId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_STATUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSecondaryStatusId() {
    return secondaryStatusId;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_STATUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryStatusId(Integer secondaryStatusId) {
    this.secondaryStatusId = secondaryStatusId;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue secondaryStatusText(String secondaryStatusText) {
    
    this.secondaryStatusText = secondaryStatusText;
    return this;
  }

   /**
   * Get secondaryStatusText
   * @return secondaryStatusText
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_STATUS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryStatusText() {
    return secondaryStatusText;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_STATUS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryStatusText(String secondaryStatusText) {
    this.secondaryStatusText = secondaryStatusText;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue landlordRegistrationNumber(String landlordRegistrationNumber) {
    
    this.landlordRegistrationNumber = landlordRegistrationNumber;
    return this;
  }

   /**
   * Get landlordRegistrationNumber
   * @return landlordRegistrationNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANDLORD_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLandlordRegistrationNumber() {
    return landlordRegistrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_LANDLORD_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLandlordRegistrationNumber(String landlordRegistrationNumber) {
    this.landlordRegistrationNumber = landlordRegistrationNumber;
  }


  public PropertyLettingsIdMarketingGet200ResponseValue tenantSuitability(PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability tenantSuitability) {
    
    this.tenantSuitability = tenantSuitability;
    return this;
  }

   /**
   * Get tenantSuitability
   * @return tenantSuitability
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_SUITABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability getTenantSuitability() {
    return tenantSuitability;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_SUITABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantSuitability(PropertyLettingsIdMarketingGet200ResponseValueTenantSuitability tenantSuitability) {
    this.tenantSuitability = tenantSuitability;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyLettingsIdMarketingGet200ResponseValue propertyLettingsIdMarketingGet200ResponseValue = (PropertyLettingsIdMarketingGet200ResponseValue) o;
    return Objects.equals(this.id, propertyLettingsIdMarketingGet200ResponseValue.id) &&
        Objects.equals(this.internalReference, propertyLettingsIdMarketingGet200ResponseValue.internalReference) &&
        Objects.equals(this.branch, propertyLettingsIdMarketingGet200ResponseValue.branch) &&
        Objects.equals(this.availabilityDate, propertyLettingsIdMarketingGet200ResponseValue.availabilityDate) &&
        Objects.equals(this.linkedEmployees, propertyLettingsIdMarketingGet200ResponseValue.linkedEmployees) &&
        Objects.equals(this.media, propertyLettingsIdMarketingGet200ResponseValue.media) &&
        Objects.equals(this.newHome, propertyLettingsIdMarketingGet200ResponseValue.newHome) &&
        Objects.equals(this.propertyType, propertyLettingsIdMarketingGet200ResponseValue.propertyType) &&
        Objects.equals(this.published, propertyLettingsIdMarketingGet200ResponseValue.published) &&
        Objects.equals(this.publishedDate, propertyLettingsIdMarketingGet200ResponseValue.publishedDate) &&
        Objects.equals(this.address, propertyLettingsIdMarketingGet200ResponseValue.address) &&
        Objects.equals(this.commercial, propertyLettingsIdMarketingGet200ResponseValue.commercial) &&
        Objects.equals(this.details, propertyLettingsIdMarketingGet200ResponseValue.details) &&
        Objects.equals(this.priceInformation, propertyLettingsIdMarketingGet200ResponseValue.priceInformation) &&
        Objects.equals(this.created, propertyLettingsIdMarketingGet200ResponseValue.created) &&
        Objects.equals(this.updated, propertyLettingsIdMarketingGet200ResponseValue.updated) &&
        Objects.equals(this.houseFlatShare, propertyLettingsIdMarketingGet200ResponseValue.houseFlatShare) &&
        Objects.equals(this.typeOfLet, propertyLettingsIdMarketingGet200ResponseValue.typeOfLet) &&
        Objects.equals(this.primaryStatusId, propertyLettingsIdMarketingGet200ResponseValue.primaryStatusId) &&
        Objects.equals(this.primaryStatusText, propertyLettingsIdMarketingGet200ResponseValue.primaryStatusText) &&
        Objects.equals(this.secondaryStatusId, propertyLettingsIdMarketingGet200ResponseValue.secondaryStatusId) &&
        Objects.equals(this.secondaryStatusText, propertyLettingsIdMarketingGet200ResponseValue.secondaryStatusText) &&
        Objects.equals(this.landlordRegistrationNumber, propertyLettingsIdMarketingGet200ResponseValue.landlordRegistrationNumber) &&
        Objects.equals(this.tenantSuitability, propertyLettingsIdMarketingGet200ResponseValue.tenantSuitability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, internalReference, branch, availabilityDate, linkedEmployees, media, newHome, propertyType, published, publishedDate, address, commercial, details, priceInformation, created, updated, houseFlatShare, typeOfLet, primaryStatusId, primaryStatusText, secondaryStatusId, secondaryStatusText, landlordRegistrationNumber, tenantSuitability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyLettingsIdMarketingGet200ResponseValue {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalReference: ").append(toIndentedString(internalReference)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    availabilityDate: ").append(toIndentedString(availabilityDate)).append("\n");
    sb.append("    linkedEmployees: ").append(toIndentedString(linkedEmployees)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    newHome: ").append(toIndentedString(newHome)).append("\n");
    sb.append("    propertyType: ").append(toIndentedString(propertyType)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    publishedDate: ").append(toIndentedString(publishedDate)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    commercial: ").append(toIndentedString(commercial)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    priceInformation: ").append(toIndentedString(priceInformation)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    houseFlatShare: ").append(toIndentedString(houseFlatShare)).append("\n");
    sb.append("    typeOfLet: ").append(toIndentedString(typeOfLet)).append("\n");
    sb.append("    primaryStatusId: ").append(toIndentedString(primaryStatusId)).append("\n");
    sb.append("    primaryStatusText: ").append(toIndentedString(primaryStatusText)).append("\n");
    sb.append("    secondaryStatusId: ").append(toIndentedString(secondaryStatusId)).append("\n");
    sb.append("    secondaryStatusText: ").append(toIndentedString(secondaryStatusText)).append("\n");
    sb.append("    landlordRegistrationNumber: ").append(toIndentedString(landlordRegistrationNumber)).append("\n");
    sb.append("    tenantSuitability: ").append(toIndentedString(tenantSuitability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

