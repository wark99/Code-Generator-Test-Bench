/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.V40ReportEquifaxDataAttributesInnerAttributesInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * V40ReportEquifaxDataAttributesInner
 */
@JsonPropertyOrder({
  V40ReportEquifaxDataAttributesInner.JSON_PROPERTY_MODEL_NUMBER,
  V40ReportEquifaxDataAttributesInner.JSON_PROPERTY_NUMBER_OF_VARIABLE_FIELDS,
  V40ReportEquifaxDataAttributesInner.JSON_PROPERTY_ATTRIBUTES
})
@JsonTypeName("V4_0_ReportEquifax_data_attributes_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class V40ReportEquifaxDataAttributesInner {
  public static final String JSON_PROPERTY_MODEL_NUMBER = "modelNumber";
  private String modelNumber;

  public static final String JSON_PROPERTY_NUMBER_OF_VARIABLE_FIELDS = "numberOfVariableFields";
  private String numberOfVariableFields;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private List<V40ReportEquifaxDataAttributesInnerAttributesInner> attributes;

  public V40ReportEquifaxDataAttributesInner() {
  }

  public V40ReportEquifaxDataAttributesInner modelNumber(String modelNumber) {
    
    this.modelNumber = modelNumber;
    return this;
  }

   /**
   * Get modelNumber
   * @return modelNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModelNumber() {
    return modelNumber;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelNumber(String modelNumber) {
    this.modelNumber = modelNumber;
  }


  public V40ReportEquifaxDataAttributesInner numberOfVariableFields(String numberOfVariableFields) {
    
    this.numberOfVariableFields = numberOfVariableFields;
    return this;
  }

   /**
   * Get numberOfVariableFields
   * @return numberOfVariableFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_VARIABLE_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumberOfVariableFields() {
    return numberOfVariableFields;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_VARIABLE_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfVariableFields(String numberOfVariableFields) {
    this.numberOfVariableFields = numberOfVariableFields;
  }


  public V40ReportEquifaxDataAttributesInner attributes(List<V40ReportEquifaxDataAttributesInnerAttributesInner> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public V40ReportEquifaxDataAttributesInner addAttributesItem(V40ReportEquifaxDataAttributesInnerAttributesInner attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<V40ReportEquifaxDataAttributesInnerAttributesInner> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(List<V40ReportEquifaxDataAttributesInnerAttributesInner> attributes) {
    this.attributes = attributes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V40ReportEquifaxDataAttributesInner v40ReportEquifaxDataAttributesInner = (V40ReportEquifaxDataAttributesInner) o;
    return Objects.equals(this.modelNumber, v40ReportEquifaxDataAttributesInner.modelNumber) &&
        Objects.equals(this.numberOfVariableFields, v40ReportEquifaxDataAttributesInner.numberOfVariableFields) &&
        Objects.equals(this.attributes, v40ReportEquifaxDataAttributesInner.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelNumber, numberOfVariableFields, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V40ReportEquifaxDataAttributesInner {\n");
    sb.append("    modelNumber: ").append(toIndentedString(modelNumber)).append("\n");
    sb.append("    numberOfVariableFields: ").append(toIndentedString(numberOfVariableFields)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

