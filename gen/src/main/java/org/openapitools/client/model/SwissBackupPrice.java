/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SwissBackupPrice
 */
@JsonPropertyOrder({
  SwissBackupPrice.JSON_PROPERTY_TYPE,
  SwissBackupPrice.JSON_PROPERTY_UNIT,
  SwissBackupPrice.JSON_PROPERTY_CURRENCY,
  SwissBackupPrice.JSON_PROPERTY_AMOUNT,
  SwissBackupPrice.JSON_PROPERTY_AMOUNT_EXCL_VAT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SwissBackupPrice {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private Integer unit;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Integer currency;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_AMOUNT_EXCL_VAT = "amount_excl_vat";
  private String amountExclVat;

  public SwissBackupPrice() {
  }

  public SwissBackupPrice type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the resource &#x60;Swiss Backup Price&#x60;
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public SwissBackupPrice unit(Integer unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnit(Integer unit) {
    this.unit = unit;
  }


  public SwissBackupPrice currency(Integer currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Integer currency) {
    this.currency = currency;
  }


  public SwissBackupPrice amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount incl. VAT
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(String amount) {
    this.amount = amount;
  }


  public SwissBackupPrice amountExclVat(String amountExclVat) {
    
    this.amountExclVat = amountExclVat;
    return this;
  }

   /**
   * Amount excl. VAT
   * @return amountExclVat
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT_EXCL_VAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAmountExclVat() {
    return amountExclVat;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_EXCL_VAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmountExclVat(String amountExclVat) {
    this.amountExclVat = amountExclVat;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwissBackupPrice swissBackupPrice = (SwissBackupPrice) o;
    return Objects.equals(this.type, swissBackupPrice.type) &&
        Objects.equals(this.unit, swissBackupPrice.unit) &&
        Objects.equals(this.currency, swissBackupPrice.currency) &&
        Objects.equals(this.amount, swissBackupPrice.amount) &&
        Objects.equals(this.amountExclVat, swissBackupPrice.amountExclVat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, unit, currency, amount, amountExclVat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwissBackupPrice {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountExclVat: ").append(toIndentedString(amountExclVat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

