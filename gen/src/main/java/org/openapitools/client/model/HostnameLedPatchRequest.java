/*
 * node-proxy
 * API spec for node-proxy endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.IdracPostRequestCephx;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HostnameLedPatchRequest
 */
@JsonPropertyOrder({
  HostnameLedPatchRequest.JSON_PROPERTY_CEPHX,
  HostnameLedPatchRequest.JSON_PROPERTY_NAME,
  HostnameLedPatchRequest.JSON_PROPERTY_INDICATOR_L_E_D
})
@JsonTypeName("__hostname__led_patch_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:15:49.424217909Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class HostnameLedPatchRequest {
  public static final String JSON_PROPERTY_CEPHX = "cephx";
  private IdracPostRequestCephx cephx;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_INDICATOR_L_E_D = "IndicatorLED";
  private String indicatorLED;

  public HostnameLedPatchRequest() {
  }

  public HostnameLedPatchRequest cephx(IdracPostRequestCephx cephx) {
    
    this.cephx = cephx;
    return this;
  }

   /**
   * Get cephx
   * @return cephx
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CEPHX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IdracPostRequestCephx getCephx() {
    return cephx;
  }


  @JsonProperty(JSON_PROPERTY_CEPHX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCephx(IdracPostRequestCephx cephx) {
    this.cephx = cephx;
  }


  public HostnameLedPatchRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public HostnameLedPatchRequest indicatorLED(String indicatorLED) {
    
    this.indicatorLED = indicatorLED;
    return this;
  }

   /**
   * Get indicatorLED
   * @return indicatorLED
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDICATOR_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIndicatorLED() {
    return indicatorLED;
  }


  @JsonProperty(JSON_PROPERTY_INDICATOR_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicatorLED(String indicatorLED) {
    this.indicatorLED = indicatorLED;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostnameLedPatchRequest hostnameLedPatchRequest = (HostnameLedPatchRequest) o;
    return Objects.equals(this.cephx, hostnameLedPatchRequest.cephx) &&
        Objects.equals(this.name, hostnameLedPatchRequest.name) &&
        Objects.equals(this.indicatorLED, hostnameLedPatchRequest.indicatorLED);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cephx, name, indicatorLED);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostnameLedPatchRequest {\n");
    sb.append("    cephx: ").append(toIndentedString(cephx)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    indicatorLED: ").append(toIndentedString(indicatorLED)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

