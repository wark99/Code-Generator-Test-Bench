/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Capabilities4;
import org.openapitools.client.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Dropbox
 */
@JsonPropertyOrder({
  Dropbox.JSON_PROPERTY_ID,
  Dropbox.JSON_PROPERTY_UUID,
  Dropbox.JSON_PROPERTY_NAME,
  Dropbox.JSON_PROPERTY_URL,
  Dropbox.JSON_PROPERTY_USERS_COUNT,
  Dropbox.JSON_PROPERTY_CREATED_BY,
  Dropbox.JSON_PROPERTY_CREATED_AT,
  Dropbox.JSON_PROPERTY_UPDATED_AT,
  Dropbox.JSON_PROPERTY_LAST_UPLOADED_AT,
  Dropbox.JSON_PROPERTY_CAPABILITIES,
  Dropbox.JSON_PROPERTY_USER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Dropbox {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private String uuid;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_USERS_COUNT = "users_count";
  private Integer usersCount;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private Integer createdBy;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Integer updatedAt;

  public static final String JSON_PROPERTY_LAST_UPLOADED_AT = "last_uploaded_at";
  private Integer lastUploadedAt;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private Capabilities4 capabilities;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public Dropbox() {
  }

  public Dropbox id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the resource &#x60;Dropbox&#x60;
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public Dropbox uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Dropbox unique identifier
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public Dropbox name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the dropbox
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Dropbox url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Public URL of the dropbox
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public Dropbox usersCount(Integer usersCount) {
    
    this.usersCount = usersCount;
    return this;
  }

   /**
   * Number of recorded users that uploaded in the dropbox
   * @return usersCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUsersCount() {
    return usersCount;
  }


  @JsonProperty(JSON_PROPERTY_USERS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsersCount(Integer usersCount) {
    this.usersCount = usersCount;
  }


  public Dropbox createdBy(Integer createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Unique identifier of the creator of the resource &#x60;Dropbox&#x60;
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }


  public Dropbox createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;Dropbox&#x60; was created at
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public Dropbox updatedAt(Integer updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp &#x60;Dropbox&#x60; was updated at
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Dropbox lastUploadedAt(Integer lastUploadedAt) {
    
    this.lastUploadedAt = lastUploadedAt;
    return this;
  }

   /**
   * Last time someone uploaded a file in the dropbox
   * @return lastUploadedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_UPLOADED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLastUploadedAt() {
    return lastUploadedAt;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPLOADED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUploadedAt(Integer lastUploadedAt) {
    this.lastUploadedAt = lastUploadedAt;
  }


  public Dropbox capabilities(Capabilities4 capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Capabilities4 getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCapabilities(Capabilities4 capabilities) {
    this.capabilities = capabilities;
  }


  public Dropbox user(User user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(User user) {
    this.user = user;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dropbox dropbox = (Dropbox) o;
    return Objects.equals(this.id, dropbox.id) &&
        Objects.equals(this.uuid, dropbox.uuid) &&
        Objects.equals(this.name, dropbox.name) &&
        Objects.equals(this.url, dropbox.url) &&
        Objects.equals(this.usersCount, dropbox.usersCount) &&
        Objects.equals(this.createdBy, dropbox.createdBy) &&
        Objects.equals(this.createdAt, dropbox.createdAt) &&
        Objects.equals(this.updatedAt, dropbox.updatedAt) &&
        Objects.equals(this.lastUploadedAt, dropbox.lastUploadedAt) &&
        Objects.equals(this.capabilities, dropbox.capabilities) &&
        Objects.equals(this.user, dropbox.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uuid, name, url, usersCount, createdBy, createdAt, updatedAt, lastUploadedAt, capabilities, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dropbox {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usersCount: ").append(toIndentedString(usersCount)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    lastUploadedAt: ").append(toIndentedString(lastUploadedAt)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

