/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PropertyMarketingRoomsResponse
 */
@JsonPropertyOrder({
  PropertyMarketingRoomsResponse.JSON_PROPERTY_NAME,
  PropertyMarketingRoomsResponse.JSON_PROPERTY_DESCRIPTION,
  PropertyMarketingRoomsResponse.JSON_PROPERTY_LENGTH,
  PropertyMarketingRoomsResponse.JSON_PROPERTY_WIDTH,
  PropertyMarketingRoomsResponse.JSON_PROPERTY_DIMENSION_UNIT,
  PropertyMarketingRoomsResponse.JSON_PROPERTY_DIMENSION_TEXT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PropertyMarketingRoomsResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Double length;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Double width;

  /**
   * 5 &#x3D; Metres, 8 &#x3D; Feet
   */
  public enum DimensionUnitEnum {
    NUMBER_5(5),
    
    NUMBER_8(8);

    private Integer value;

    DimensionUnitEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DimensionUnitEnum fromValue(Integer value) {
      for (DimensionUnitEnum b : DimensionUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIMENSION_UNIT = "dimension_unit";
  private DimensionUnitEnum dimensionUnit;

  public static final String JSON_PROPERTY_DIMENSION_TEXT = "dimension_text";
  private String dimensionText;

  public PropertyMarketingRoomsResponse() {
  }

  public PropertyMarketingRoomsResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PropertyMarketingRoomsResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PropertyMarketingRoomsResponse length(Double length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(Double length) {
    this.length = length;
  }


  public PropertyMarketingRoomsResponse width(Double width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(Double width) {
    this.width = width;
  }


  public PropertyMarketingRoomsResponse dimensionUnit(DimensionUnitEnum dimensionUnit) {
    
    this.dimensionUnit = dimensionUnit;
    return this;
  }

   /**
   * 5 &#x3D; Metres, 8 &#x3D; Feet
   * @return dimensionUnit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DimensionUnitEnum getDimensionUnit() {
    return dimensionUnit;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionUnit(DimensionUnitEnum dimensionUnit) {
    this.dimensionUnit = dimensionUnit;
  }


  public PropertyMarketingRoomsResponse dimensionText(String dimensionText) {
    
    this.dimensionText = dimensionText;
    return this;
  }

   /**
   * Get dimensionText
   * @return dimensionText
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDimensionText() {
    return dimensionText;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionText(String dimensionText) {
    this.dimensionText = dimensionText;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyMarketingRoomsResponse propertyMarketingRoomsResponse = (PropertyMarketingRoomsResponse) o;
    return Objects.equals(this.name, propertyMarketingRoomsResponse.name) &&
        Objects.equals(this.description, propertyMarketingRoomsResponse.description) &&
        Objects.equals(this.length, propertyMarketingRoomsResponse.length) &&
        Objects.equals(this.width, propertyMarketingRoomsResponse.width) &&
        Objects.equals(this.dimensionUnit, propertyMarketingRoomsResponse.dimensionUnit) &&
        Objects.equals(this.dimensionText, propertyMarketingRoomsResponse.dimensionText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, length, width, dimensionUnit, dimensionText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyMarketingRoomsResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    dimensionUnit: ").append(toIndentedString(dimensionUnit)).append("\n");
    sb.append("    dimensionText: ").append(toIndentedString(dimensionText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

