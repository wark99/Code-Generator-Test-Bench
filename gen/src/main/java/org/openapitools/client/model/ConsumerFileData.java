/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConsumerStatements;
import org.openapitools.client.model.OwningBureau;
import org.openapitools.client.model.Statements;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConsumerFileData
 */
@JsonPropertyOrder({
  ConsumerFileData.JSON_PROPERTY_CONSUMER_STATEMENTS,
  ConsumerFileData.JSON_PROPERTY_OWNING_BUREAU,
  ConsumerFileData.JSON_PROPERTY_STATEMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ConsumerFileData {
  public static final String JSON_PROPERTY_CONSUMER_STATEMENTS = "consumerStatements";
  private List<ConsumerStatements> consumerStatements;

  public static final String JSON_PROPERTY_OWNING_BUREAU = "owningBureau";
  private OwningBureau owningBureau;

  public static final String JSON_PROPERTY_STATEMENTS = "statements";
  private List<Statements> statements;

  public ConsumerFileData() {
  }

  public ConsumerFileData consumerStatements(List<ConsumerStatements> consumerStatements) {
    
    this.consumerStatements = consumerStatements;
    return this;
  }

  public ConsumerFileData addConsumerStatementsItem(ConsumerStatements consumerStatementsItem) {
    if (this.consumerStatements == null) {
      this.consumerStatements = new ArrayList<>();
    }
    this.consumerStatements.add(consumerStatementsItem);
    return this;
  }

   /**
   * Get consumerStatements
   * @return consumerStatements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ConsumerStatements> getConsumerStatements() {
    return consumerStatements;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerStatements(List<ConsumerStatements> consumerStatements) {
    this.consumerStatements = consumerStatements;
  }


  public ConsumerFileData owningBureau(OwningBureau owningBureau) {
    
    this.owningBureau = owningBureau;
    return this;
  }

   /**
   * Get owningBureau
   * @return owningBureau
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNING_BUREAU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OwningBureau getOwningBureau() {
    return owningBureau;
  }


  @JsonProperty(JSON_PROPERTY_OWNING_BUREAU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwningBureau(OwningBureau owningBureau) {
    this.owningBureau = owningBureau;
  }


  public ConsumerFileData statements(List<Statements> statements) {
    
    this.statements = statements;
    return this;
  }

  public ConsumerFileData addStatementsItem(Statements statementsItem) {
    if (this.statements == null) {
      this.statements = new ArrayList<>();
    }
    this.statements.add(statementsItem);
    return this;
  }

   /**
   * Get statements
   * @return statements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Statements> getStatements() {
    return statements;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatements(List<Statements> statements) {
    this.statements = statements;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumerFileData consumerFileData = (ConsumerFileData) o;
    return Objects.equals(this.consumerStatements, consumerFileData.consumerStatements) &&
        Objects.equals(this.owningBureau, consumerFileData.owningBureau) &&
        Objects.equals(this.statements, consumerFileData.statements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerStatements, owningBureau, statements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumerFileData {\n");
    sb.append("    consumerStatements: ").append(toIndentedString(consumerStatements)).append("\n");
    sb.append("    owningBureau: ").append(toIndentedString(owningBureau)).append("\n");
    sb.append("    statements: ").append(toIndentedString(statements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

