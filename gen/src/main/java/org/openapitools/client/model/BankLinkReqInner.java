/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.BankLinkReqInnerConsumer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BankLinkReqInner
 */
@JsonPropertyOrder({
  BankLinkReqInner.JSON_PROPERTY_CONSUMER,
  BankLinkReqInner.JSON_PROPERTY_INSTITUTION_ID,
  BankLinkReqInner.JSON_PROPERTY_AGGREGATOR_ID,
  BankLinkReqInner.JSON_PROPERTY_REDIRECT_URI,
  BankLinkReqInner.JSON_PROPERTY_OAUTH
})
@JsonTypeName("BankLinkReq_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class BankLinkReqInner {
  public static final String JSON_PROPERTY_CONSUMER = "consumer";
  private BankLinkReqInnerConsumer consumer;

  public static final String JSON_PROPERTY_INSTITUTION_ID = "institution_id";
  private String institutionId;

  /**
   * Gets or Sets aggregatorId
   */
  public enum AggregatorIdEnum {
    FINICITY("finicity"),
    
    MX("mx"),
    
    YODLEE("yodlee"),
    
    AKOYA("akoya");

    private String value;

    AggregatorIdEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AggregatorIdEnum fromValue(String value) {
      for (AggregatorIdEnum b : AggregatorIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGGREGATOR_ID = "aggregator_id";
  private AggregatorIdEnum aggregatorId;

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirect_uri";
  private String redirectUri;

  public static final String JSON_PROPERTY_OAUTH = "oauth";
  private Boolean oauth;

  public BankLinkReqInner() {
  }

  public BankLinkReqInner consumer(BankLinkReqInnerConsumer consumer) {
    
    this.consumer = consumer;
    return this;
  }

   /**
   * Get consumer
   * @return consumer
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankLinkReqInnerConsumer getConsumer() {
    return consumer;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumer(BankLinkReqInnerConsumer consumer) {
    this.consumer = consumer;
  }


  public BankLinkReqInner institutionId(String institutionId) {
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * Get institutionId
   * @return institutionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstitutionId() {
    return institutionId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }


  public BankLinkReqInner aggregatorId(AggregatorIdEnum aggregatorId) {
    
    this.aggregatorId = aggregatorId;
    return this;
  }

   /**
   * Get aggregatorId
   * @return aggregatorId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AggregatorIdEnum getAggregatorId() {
    return aggregatorId;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregatorId(AggregatorIdEnum aggregatorId) {
    this.aggregatorId = aggregatorId;
  }


  public BankLinkReqInner redirectUri(String redirectUri) {
    
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * Get redirectUri
   * @return redirectUri
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRedirectUri() {
    return redirectUri;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }


  public BankLinkReqInner oauth(Boolean oauth) {
    
    this.oauth = oauth;
    return this;
  }

   /**
   * Get oauth
   * @return oauth
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OAUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOauth() {
    return oauth;
  }


  @JsonProperty(JSON_PROPERTY_OAUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOauth(Boolean oauth) {
    this.oauth = oauth;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankLinkReqInner bankLinkReqInner = (BankLinkReqInner) o;
    return Objects.equals(this.consumer, bankLinkReqInner.consumer) &&
        Objects.equals(this.institutionId, bankLinkReqInner.institutionId) &&
        Objects.equals(this.aggregatorId, bankLinkReqInner.aggregatorId) &&
        Objects.equals(this.redirectUri, bankLinkReqInner.redirectUri) &&
        Objects.equals(this.oauth, bankLinkReqInner.oauth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumer, institutionId, aggregatorId, redirectUri, oauth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankLinkReqInner {\n");
    sb.append("    consumer: ").append(toIndentedString(consumer)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    aggregatorId: ").append(toIndentedString(aggregatorId)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    oauth: ").append(toIndentedString(oauth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

