/*
 * VS4+ APIs
 * This file describes the VS4+ APIs using the swagger notation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountBalanceDate;
import org.openapitools.client.model.AccountOpenDate;
import org.openapitools.client.model.Transaction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An account in a financial institution.
 */
@JsonPropertyOrder({
  Account.JSON_PROPERTY_BANK_ID,
  Account.JSON_PROPERTY_ACCOUNT_ID,
  Account.JSON_PROPERTY_PRODUCT_TYPE,
  Account.JSON_PROPERTY_OPEN_DATE,
  Account.JSON_PROPERTY_BALANCE,
  Account.JSON_PROPERTY_BALANCE_DATE,
  Account.JSON_PROPERTY_TRANSACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:38.356341300Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Account {
  public static final String JSON_PROPERTY_BANK_ID = "bank_id";
  private String bankId;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private String accountId;

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "product_type";
  private String productType;

  public static final String JSON_PROPERTY_OPEN_DATE = "open_date";
  private AccountOpenDate openDate;

  public static final String JSON_PROPERTY_BALANCE = "balance";
  private BigDecimal balance;

  public static final String JSON_PROPERTY_BALANCE_DATE = "balance_date";
  private AccountBalanceDate balanceDate;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<Transaction> transactions = new ArrayList<>();

  public Account() {
  }

  public Account bankId(String bankId) {
    
    this.bankId = bankId;
    return this;
  }

   /**
   * Aggregator-specific ID of the financial institution the account is opened in.
   * @return bankId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBankId() {
    return bankId;
  }


  @JsonProperty(JSON_PROPERTY_BANK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBankId(String bankId) {
    this.bankId = bankId;
  }


  public Account accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Pseudonymous ID of the account.
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Account productType(String productType) {
    
    this.productType = productType;
    return this;
  }

   /**
   * Aggregator-specific account type.
   * @return productType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProductType() {
    return productType;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductType(String productType) {
    this.productType = productType;
  }


  public Account openDate(AccountOpenDate openDate) {
    
    this.openDate = openDate;
    return this;
  }

   /**
   * Get openDate
   * @return openDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountOpenDate getOpenDate() {
    return openDate;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenDate(AccountOpenDate openDate) {
    this.openDate = openDate;
  }


  public Account balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Account balance at balance_date.
   * @return balance
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBalance() {
    return balance;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public Account balanceDate(AccountBalanceDate balanceDate) {
    
    this.balanceDate = balanceDate;
    return this;
  }

   /**
   * Get balanceDate
   * @return balanceDate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountBalanceDate getBalanceDate() {
    return balanceDate;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBalanceDate(AccountBalanceDate balanceDate) {
    this.balanceDate = balanceDate;
  }


  public Account transactions(List<Transaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public Account addTransactionsItem(Transaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * All transactions registered in the account.
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Transaction> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactions(List<Transaction> transactions) {
    this.transactions = transactions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.bankId, account.bankId) &&
        Objects.equals(this.accountId, account.accountId) &&
        Objects.equals(this.productType, account.productType) &&
        Objects.equals(this.openDate, account.openDate) &&
        Objects.equals(this.balance, account.balance) &&
        Objects.equals(this.balanceDate, account.balanceDate) &&
        Objects.equals(this.transactions, account.transactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankId, accountId, productType, openDate, balance, balanceDate, transactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    bankId: ").append(toIndentedString(bankId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    openDate: ").append(toIndentedString(openDate)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceDate: ").append(toIndentedString(balanceDate)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

