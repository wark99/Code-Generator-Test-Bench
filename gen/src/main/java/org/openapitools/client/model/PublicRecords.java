/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.Source;
import org.openapitools.client.model.Subscriber3;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PublicRecords
 */
@JsonPropertyOrder({
  PublicRecords.JSON_PROPERTY_ASSETS,
  PublicRecords.JSON_PROPERTY_ATTORNEY,
  PublicRecords.JSON_PROPERTY_CURRENT_BALANCE,
  PublicRecords.JSON_PROPERTY_DATE_EFFECTIVE,
  PublicRecords.JSON_PROPERTY_DATE_FILED,
  PublicRecords.JSON_PROPERTY_DATE_PAID,
  PublicRecords.JSON_PROPERTY_DOCKET_NUMBER,
  PublicRecords.JSON_PROPERTY_ECOADESIGNATOR,
  PublicRecords.JSON_PROPERTY_ESTIMATED_DATE_OF_DELETION,
  PublicRecords.JSON_PROPERTY_LIABILITIES,
  PublicRecords.JSON_PROPERTY_ORIGINAL_BALANCE,
  PublicRecords.JSON_PROPERTY_PLAINTIFF,
  PublicRecords.JSON_PROPERTY_SOURCE,
  PublicRecords.JSON_PROPERTY_SUBSCRIBER,
  PublicRecords.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PublicRecords {
  public static final String JSON_PROPERTY_ASSETS = "assets";
  private String assets;

  public static final String JSON_PROPERTY_ATTORNEY = "attorney";
  private String attorney;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "currentBalance";
  private String currentBalance;

  public static final String JSON_PROPERTY_DATE_EFFECTIVE = "dateEffective";
  private DateOfExpiration dateEffective;

  public static final String JSON_PROPERTY_DATE_FILED = "dateFiled";
  private DateOfExpiration dateFiled;

  public static final String JSON_PROPERTY_DATE_PAID = "datePaid";
  private DateOfExpiration datePaid;

  public static final String JSON_PROPERTY_DOCKET_NUMBER = "docketNumber";
  private String docketNumber;

  public static final String JSON_PROPERTY_ECOADESIGNATOR = "ecoadesignator";
  private String ecoadesignator;

  public static final String JSON_PROPERTY_ESTIMATED_DATE_OF_DELETION = "estimatedDateOfDeletion";
  private DateOfExpiration estimatedDateOfDeletion;

  public static final String JSON_PROPERTY_LIABILITIES = "liabilities";
  private String liabilities;

  public static final String JSON_PROPERTY_ORIGINAL_BALANCE = "originalBalance";
  private String originalBalance;

  public static final String JSON_PROPERTY_PLAINTIFF = "plaintiff";
  private String plaintiff;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private Source source;

  public static final String JSON_PROPERTY_SUBSCRIBER = "subscriber";
  private Subscriber3 subscriber;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public PublicRecords() {
  }

  public PublicRecords assets(String assets) {
    
    this.assets = assets;
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssets() {
    return assets;
  }


  @JsonProperty(JSON_PROPERTY_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssets(String assets) {
    this.assets = assets;
  }


  public PublicRecords attorney(String attorney) {
    
    this.attorney = attorney;
    return this;
  }

   /**
   * Get attorney
   * @return attorney
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTORNEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAttorney() {
    return attorney;
  }


  @JsonProperty(JSON_PROPERTY_ATTORNEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttorney(String attorney) {
    this.attorney = attorney;
  }


  public PublicRecords currentBalance(String currentBalance) {
    
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentBalance() {
    return currentBalance;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(String currentBalance) {
    this.currentBalance = currentBalance;
  }


  public PublicRecords dateEffective(DateOfExpiration dateEffective) {
    
    this.dateEffective = dateEffective;
    return this;
  }

   /**
   * Get dateEffective
   * @return dateEffective
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateEffective() {
    return dateEffective;
  }


  @JsonProperty(JSON_PROPERTY_DATE_EFFECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateEffective(DateOfExpiration dateEffective) {
    this.dateEffective = dateEffective;
  }


  public PublicRecords dateFiled(DateOfExpiration dateFiled) {
    
    this.dateFiled = dateFiled;
    return this;
  }

   /**
   * Get dateFiled
   * @return dateFiled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FILED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateFiled() {
    return dateFiled;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FILED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFiled(DateOfExpiration dateFiled) {
    this.dateFiled = dateFiled;
  }


  public PublicRecords datePaid(DateOfExpiration datePaid) {
    
    this.datePaid = datePaid;
    return this;
  }

   /**
   * Get datePaid
   * @return datePaid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDatePaid() {
    return datePaid;
  }


  @JsonProperty(JSON_PROPERTY_DATE_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatePaid(DateOfExpiration datePaid) {
    this.datePaid = datePaid;
  }


  public PublicRecords docketNumber(String docketNumber) {
    
    this.docketNumber = docketNumber;
    return this;
  }

   /**
   * Get docketNumber
   * @return docketNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCKET_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocketNumber() {
    return docketNumber;
  }


  @JsonProperty(JSON_PROPERTY_DOCKET_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocketNumber(String docketNumber) {
    this.docketNumber = docketNumber;
  }


  public PublicRecords ecoadesignator(String ecoadesignator) {
    
    this.ecoadesignator = ecoadesignator;
    return this;
  }

   /**
   * Get ecoadesignator
   * @return ecoadesignator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECOADESIGNATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEcoadesignator() {
    return ecoadesignator;
  }


  @JsonProperty(JSON_PROPERTY_ECOADESIGNATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEcoadesignator(String ecoadesignator) {
    this.ecoadesignator = ecoadesignator;
  }


  public PublicRecords estimatedDateOfDeletion(DateOfExpiration estimatedDateOfDeletion) {
    
    this.estimatedDateOfDeletion = estimatedDateOfDeletion;
    return this;
  }

   /**
   * Get estimatedDateOfDeletion
   * @return estimatedDateOfDeletion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATED_DATE_OF_DELETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getEstimatedDateOfDeletion() {
    return estimatedDateOfDeletion;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_DATE_OF_DELETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedDateOfDeletion(DateOfExpiration estimatedDateOfDeletion) {
    this.estimatedDateOfDeletion = estimatedDateOfDeletion;
  }


  public PublicRecords liabilities(String liabilities) {
    
    this.liabilities = liabilities;
    return this;
  }

   /**
   * Get liabilities
   * @return liabilities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLiabilities() {
    return liabilities;
  }


  @JsonProperty(JSON_PROPERTY_LIABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiabilities(String liabilities) {
    this.liabilities = liabilities;
  }


  public PublicRecords originalBalance(String originalBalance) {
    
    this.originalBalance = originalBalance;
    return this;
  }

   /**
   * Get originalBalance
   * @return originalBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalBalance() {
    return originalBalance;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalBalance(String originalBalance) {
    this.originalBalance = originalBalance;
  }


  public PublicRecords plaintiff(String plaintiff) {
    
    this.plaintiff = plaintiff;
    return this;
  }

   /**
   * Get plaintiff
   * @return plaintiff
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAINTIFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlaintiff() {
    return plaintiff;
  }


  @JsonProperty(JSON_PROPERTY_PLAINTIFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaintiff(String plaintiff) {
    this.plaintiff = plaintiff;
  }


  public PublicRecords source(Source source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Source getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(Source source) {
    this.source = source;
  }


  public PublicRecords subscriber(Subscriber3 subscriber) {
    
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subscriber3 getSubscriber() {
    return subscriber;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriber(Subscriber3 subscriber) {
    this.subscriber = subscriber;
  }


  public PublicRecords type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicRecords publicRecords = (PublicRecords) o;
    return Objects.equals(this.assets, publicRecords.assets) &&
        Objects.equals(this.attorney, publicRecords.attorney) &&
        Objects.equals(this.currentBalance, publicRecords.currentBalance) &&
        Objects.equals(this.dateEffective, publicRecords.dateEffective) &&
        Objects.equals(this.dateFiled, publicRecords.dateFiled) &&
        Objects.equals(this.datePaid, publicRecords.datePaid) &&
        Objects.equals(this.docketNumber, publicRecords.docketNumber) &&
        Objects.equals(this.ecoadesignator, publicRecords.ecoadesignator) &&
        Objects.equals(this.estimatedDateOfDeletion, publicRecords.estimatedDateOfDeletion) &&
        Objects.equals(this.liabilities, publicRecords.liabilities) &&
        Objects.equals(this.originalBalance, publicRecords.originalBalance) &&
        Objects.equals(this.plaintiff, publicRecords.plaintiff) &&
        Objects.equals(this.source, publicRecords.source) &&
        Objects.equals(this.subscriber, publicRecords.subscriber) &&
        Objects.equals(this.type, publicRecords.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, attorney, currentBalance, dateEffective, dateFiled, datePaid, docketNumber, ecoadesignator, estimatedDateOfDeletion, liabilities, originalBalance, plaintiff, source, subscriber, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicRecords {\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    attorney: ").append(toIndentedString(attorney)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    dateEffective: ").append(toIndentedString(dateEffective)).append("\n");
    sb.append("    dateFiled: ").append(toIndentedString(dateFiled)).append("\n");
    sb.append("    datePaid: ").append(toIndentedString(datePaid)).append("\n");
    sb.append("    docketNumber: ").append(toIndentedString(docketNumber)).append("\n");
    sb.append("    ecoadesignator: ").append(toIndentedString(ecoadesignator)).append("\n");
    sb.append("    estimatedDateOfDeletion: ").append(toIndentedString(estimatedDateOfDeletion)).append("\n");
    sb.append("    liabilities: ").append(toIndentedString(liabilities)).append("\n");
    sb.append("    originalBalance: ").append(toIndentedString(originalBalance)).append("\n");
    sb.append("    plaintiff: ").append(toIndentedString(plaintiff)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

