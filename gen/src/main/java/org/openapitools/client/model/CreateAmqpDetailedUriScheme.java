/*
 * AIRBIT IoT Workspace REST API
 * This API is intended to work with the application **AIRBIT IoT Workspace** .
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateAmqpDetailedUriScheme
 */
@JsonPropertyOrder({
  CreateAmqpDetailedUriScheme.JSON_PROPERTY_PROTO,
  CreateAmqpDetailedUriScheme.JSON_PROPERTY_VIRTUAL_HOST,
  CreateAmqpDetailedUriScheme.JSON_PROPERTY_EXCHANGE,
  CreateAmqpDetailedUriScheme.JSON_PROPERTY_QUEUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:05.417254227Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CreateAmqpDetailedUriScheme {
  public static final String JSON_PROPERTY_PROTO = "proto";
  private Object proto = null;

  public static final String JSON_PROPERTY_VIRTUAL_HOST = "virtual_host";
  private String virtualHost;

  public static final String JSON_PROPERTY_EXCHANGE = "exchange";
  private String exchange;

  public static final String JSON_PROPERTY_QUEUE = "queue";
  private String queue;

  public CreateAmqpDetailedUriScheme() {
  }

  public CreateAmqpDetailedUriScheme proto(Object proto) {
    
    this.proto = proto;
    return this;
  }

   /**
   * Get proto
   * @return proto
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getProto() {
    return proto;
  }


  @JsonProperty(JSON_PROPERTY_PROTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProto(Object proto) {
    this.proto = proto;
  }


  public CreateAmqpDetailedUriScheme virtualHost(String virtualHost) {
    
    this.virtualHost = virtualHost;
    return this;
  }

   /**
   * Virtual host
   * @return virtualHost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VIRTUAL_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVirtualHost() {
    return virtualHost;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVirtualHost(String virtualHost) {
    this.virtualHost = virtualHost;
  }


  public CreateAmqpDetailedUriScheme exchange(String exchange) {
    
    this.exchange = exchange;
    return this;
  }

   /**
   * Exchange
   * @return exchange
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExchange() {
    return exchange;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExchange(String exchange) {
    this.exchange = exchange;
  }


  public CreateAmqpDetailedUriScheme queue(String queue) {
    
    this.queue = queue;
    return this;
  }

   /**
   * Queue
   * @return queue
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUEUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQueue() {
    return queue;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQueue(String queue) {
    this.queue = queue;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAmqpDetailedUriScheme createAmqpDetailedUriScheme = (CreateAmqpDetailedUriScheme) o;
    return Objects.equals(this.proto, createAmqpDetailedUriScheme.proto) &&
        Objects.equals(this.virtualHost, createAmqpDetailedUriScheme.virtualHost) &&
        Objects.equals(this.exchange, createAmqpDetailedUriScheme.exchange) &&
        Objects.equals(this.queue, createAmqpDetailedUriScheme.queue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(proto, virtualHost, exchange, queue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAmqpDetailedUriScheme {\n");
    sb.append("    proto: ").append(toIndentedString(proto)).append("\n");
    sb.append("    virtualHost: ").append(toIndentedString(virtualHost)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

