/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StatListenerPerMinuteStats;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatListenerPerMinute
 */
@JsonPropertyOrder({
  StatListenerPerMinute.JSON_PROPERTY_STATS,
  StatListenerPerMinute.JSON_PROPERTY_AVERAGE_PER_MINUTE,
  StatListenerPerMinute.JSON_PROPERTY_MAX_LISTENERS,
  StatListenerPerMinute.JSON_PROPERTY_MIN_LISTENERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StatListenerPerMinute {
  public static final String JSON_PROPERTY_STATS = "stats";
  private List<StatListenerPerMinuteStats> stats = new ArrayList<>();

  public static final String JSON_PROPERTY_AVERAGE_PER_MINUTE = "average_per_minute";
  private BigDecimal averagePerMinute;

  public static final String JSON_PROPERTY_MAX_LISTENERS = "max_listeners";
  private Integer maxListeners;

  public static final String JSON_PROPERTY_MIN_LISTENERS = "min_listeners";
  private Integer minListeners;

  public StatListenerPerMinute() {
  }

  public StatListenerPerMinute stats(List<StatListenerPerMinuteStats> stats) {
    
    this.stats = stats;
    return this;
  }

  public StatListenerPerMinute addStatsItem(StatListenerPerMinuteStats statsItem) {
    if (this.stats == null) {
      this.stats = new ArrayList<>();
    }
    this.stats.add(statsItem);
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StatListenerPerMinuteStats> getStats() {
    return stats;
  }


  @JsonProperty(JSON_PROPERTY_STATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStats(List<StatListenerPerMinuteStats> stats) {
    this.stats = stats;
  }


  public StatListenerPerMinute averagePerMinute(BigDecimal averagePerMinute) {
    
    this.averagePerMinute = averagePerMinute;
    return this;
  }

   /**
   * The average of listeners per minute
   * @return averagePerMinute
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVERAGE_PER_MINUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAveragePerMinute() {
    return averagePerMinute;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_PER_MINUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAveragePerMinute(BigDecimal averagePerMinute) {
    this.averagePerMinute = averagePerMinute;
  }


  public StatListenerPerMinute maxListeners(Integer maxListeners) {
    
    this.maxListeners = maxListeners;
    return this;
  }

   /**
   * The max listeners in one minute
   * @return maxListeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAX_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaxListeners() {
    return maxListeners;
  }


  @JsonProperty(JSON_PROPERTY_MAX_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxListeners(Integer maxListeners) {
    this.maxListeners = maxListeners;
  }


  public StatListenerPerMinute minListeners(Integer minListeners) {
    
    this.minListeners = minListeners;
    return this;
  }

   /**
   * The min listeners in one minute
   * @return minListeners
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MIN_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMinListeners() {
    return minListeners;
  }


  @JsonProperty(JSON_PROPERTY_MIN_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinListeners(Integer minListeners) {
    this.minListeners = minListeners;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatListenerPerMinute statListenerPerMinute = (StatListenerPerMinute) o;
    return Objects.equals(this.stats, statListenerPerMinute.stats) &&
        Objects.equals(this.averagePerMinute, statListenerPerMinute.averagePerMinute) &&
        Objects.equals(this.maxListeners, statListenerPerMinute.maxListeners) &&
        Objects.equals(this.minListeners, statListenerPerMinute.minListeners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stats, averagePerMinute, maxListeners, minListeners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatListenerPerMinute {\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    averagePerMinute: ").append(toIndentedString(averagePerMinute)).append("\n");
    sb.append("    maxListeners: ").append(toIndentedString(maxListeners)).append("\n");
    sb.append("    minListeners: ").append(toIndentedString(minListeners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

