/*
 * Reference Gateway API
 * Reference Gateway API for invoking a communication gateway
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SendMonthlyNewsletterByEmail200Response
 */
@JsonPropertyOrder({
  SendMonthlyNewsletterByEmail200Response.JSON_PROPERTY_USER_ID,
  SendMonthlyNewsletterByEmail200Response.JSON_PROPERTY_MESSAGE_HASH,
  SendMonthlyNewsletterByEmail200Response.JSON_PROPERTY_ERROR_MESSAGE
})
@JsonTypeName("sendMonthlyNewsletterByEmail_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:15:12.926892586Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SendMonthlyNewsletterByEmail200Response {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  private UUID userId;

  public static final String JSON_PROPERTY_MESSAGE_HASH = "messageHash";
  private String messageHash;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  private String errorMessage;

  public SendMonthlyNewsletterByEmail200Response() {
  }

  public SendMonthlyNewsletterByEmail200Response userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public SendMonthlyNewsletterByEmail200Response messageHash(String messageHash) {
    
    this.messageHash = messageHash;
    return this;
  }

   /**
   * Get messageHash
   * @return messageHash
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageHash() {
    return messageHash;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageHash(String messageHash) {
    this.messageHash = messageHash;
  }


  public SendMonthlyNewsletterByEmail200Response errorMessage(String errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendMonthlyNewsletterByEmail200Response sendMonthlyNewsletterByEmail200Response = (SendMonthlyNewsletterByEmail200Response) o;
    return Objects.equals(this.userId, sendMonthlyNewsletterByEmail200Response.userId) &&
        Objects.equals(this.messageHash, sendMonthlyNewsletterByEmail200Response.messageHash) &&
        Objects.equals(this.errorMessage, sendMonthlyNewsletterByEmail200Response.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, messageHash, errorMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendMonthlyNewsletterByEmail200Response {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    messageHash: ").append(toIndentedString(messageHash)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

