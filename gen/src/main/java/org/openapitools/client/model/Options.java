/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.ChannelInvoiceableOption;
import org.openapitools.client.model.PricingOption;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Options
 */
@JsonPropertyOrder({
  Options.JSON_PROPERTY_NAME,
  Options.JSON_PROPERTY_AVAILABLE,
  Options.JSON_PROPERTY_DESCRIPTION,
  Options.JSON_PROPERTY_INCLUDED,
  Options.JSON_PROPERTY_OPTION_ACTIVE,
  Options.JSON_PROPERTY_PRICING,
  Options.JSON_PROPERTY_INVOICEABLE_OPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Options {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_AVAILABLE = "available";
  private Boolean available;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_INCLUDED = "included";
  private Boolean included;

  public static final String JSON_PROPERTY_OPTION_ACTIVE = "option_active";
  private Boolean optionActive;

  public static final String JSON_PROPERTY_PRICING = "pricing";
  private PricingOption pricing;

  public static final String JSON_PROPERTY_INVOICEABLE_OPTION = "invoiceable_option";
  private ChannelInvoiceableOption invoiceableOption;

  public Options() {
  }

  public Options name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource &#x60;Options&#x60;
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Options available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * Get available
   * @return available
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAvailable() {
    return available;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public Options description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the resource &#x60;Options&#x60;
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Options included(Boolean included) {
    
    this.included = included;
    return this;
  }

   /**
   * Get included
   * @return included
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCLUDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIncluded() {
    return included;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncluded(Boolean included) {
    this.included = included;
  }


  public Options optionActive(Boolean optionActive) {
    
    this.optionActive = optionActive;
    return this;
  }

   /**
   * Get optionActive
   * @return optionActive
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPTION_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOptionActive() {
    return optionActive;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOptionActive(Boolean optionActive) {
    this.optionActive = optionActive;
  }


  public Options pricing(PricingOption pricing) {
    
    this.pricing = pricing;
    return this;
  }

   /**
   * Get pricing
   * @return pricing
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRICING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PricingOption getPricing() {
    return pricing;
  }


  @JsonProperty(JSON_PROPERTY_PRICING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPricing(PricingOption pricing) {
    this.pricing = pricing;
  }


  public Options invoiceableOption(ChannelInvoiceableOption invoiceableOption) {
    
    this.invoiceableOption = invoiceableOption;
    return this;
  }

   /**
   * Get invoiceableOption
   * @return invoiceableOption
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICEABLE_OPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ChannelInvoiceableOption getInvoiceableOption() {
    return invoiceableOption;
  }


  @JsonProperty(JSON_PROPERTY_INVOICEABLE_OPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoiceableOption(ChannelInvoiceableOption invoiceableOption) {
    this.invoiceableOption = invoiceableOption;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Options options = (Options) o;
    return Objects.equals(this.name, options.name) &&
        Objects.equals(this.available, options.available) &&
        Objects.equals(this.description, options.description) &&
        Objects.equals(this.included, options.included) &&
        Objects.equals(this.optionActive, options.optionActive) &&
        Objects.equals(this.pricing, options.pricing) &&
        Objects.equals(this.invoiceableOption, options.invoiceableOption);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, available, description, included, optionActive, pricing, invoiceableOption);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Options {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    included: ").append(toIndentedString(included)).append("\n");
    sb.append("    optionActive: ").append(toIndentedString(optionActive)).append("\n");
    sb.append("    pricing: ").append(toIndentedString(pricing)).append("\n");
    sb.append("    invoiceableOption: ").append(toIndentedString(invoiceableOption)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

