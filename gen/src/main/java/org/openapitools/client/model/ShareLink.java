/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Capabilities3;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ShareLink
 */
@JsonPropertyOrder({
  ShareLink.JSON_PROPERTY_URL,
  ShareLink.JSON_PROPERTY_FILE_ID,
  ShareLink.JSON_PROPERTY_RIGHT,
  ShareLink.JSON_PROPERTY_VALID_UNTIL,
  ShareLink.JSON_PROPERTY_CREATED_BY,
  ShareLink.JSON_PROPERTY_CREATED_AT,
  ShareLink.JSON_PROPERTY_UPDATED_AT,
  ShareLink.JSON_PROPERTY_CAPABILITIES,
  ShareLink.JSON_PROPERTY_ACCESS_BLOCKED,
  ShareLink.JSON_PROPERTY_VIEWS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ShareLink {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_FILE_ID = "file_id";
  private Integer fileId;

  /**
   * Rights required to view the share link.&lt;note&gt;&lt;strong&gt;inherit&lt;/strong&gt;: Share link is accessible only by users of the drive.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;password&lt;/strong&gt;: Share link is public but protected by a password.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;public&lt;/strong&gt;: Share link is public, no restriction set.&lt;/note&gt;
   */
  public enum RightEnum {
    INHERIT("inherit"),
    
    PASSWORD("password"),
    
    PUBLIC("public");

    private String value;

    RightEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RightEnum fromValue(String value) {
      for (RightEnum b : RightEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RIGHT = "right";
  private RightEnum right;

  public static final String JSON_PROPERTY_VALID_UNTIL = "valid_until";
  private Integer validUntil;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private Integer createdBy;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Integer createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private Integer updatedAt;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private Capabilities3 capabilities;

  public static final String JSON_PROPERTY_ACCESS_BLOCKED = "access_blocked";
  private Boolean accessBlocked;

  public static final String JSON_PROPERTY_VIEWS = "views";
  private Integer views;

  public ShareLink() {
  }

  public ShareLink url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Share link url
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ShareLink fileId(Integer fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * Get fileId
   * @return fileId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFileId() {
    return fileId;
  }


  @JsonProperty(JSON_PROPERTY_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFileId(Integer fileId) {
    this.fileId = fileId;
  }


  public ShareLink right(RightEnum right) {
    
    this.right = right;
    return this;
  }

   /**
   * Rights required to view the share link.&lt;note&gt;&lt;strong&gt;inherit&lt;/strong&gt;: Share link is accessible only by users of the drive.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;password&lt;/strong&gt;: Share link is public but protected by a password.&lt;/note&gt;&lt;note&gt;&lt;strong&gt;public&lt;/strong&gt;: Share link is public, no restriction set.&lt;/note&gt;
   * @return right
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RightEnum getRight() {
    return right;
  }


  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRight(RightEnum right) {
    this.right = right;
  }


  public ShareLink validUntil(Integer validUntil) {
    
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Until when the share link is valid
   * @return validUntil
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getValidUntil() {
    return validUntil;
  }


  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidUntil(Integer validUntil) {
    this.validUntil = validUntil;
  }


  public ShareLink createdBy(Integer createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Unique identifier of the creator of the resource &#x60;Share Link&#x60;
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }


  public ShareLink createdAt(Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp &#x60;Share Link&#x60; was created at
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public ShareLink updatedAt(Integer updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp &#x60;Share Link&#x60; was updated at
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ShareLink capabilities(Capabilities3 capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Capabilities3 getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCapabilities(Capabilities3 capabilities) {
    this.capabilities = capabilities;
  }


  public ShareLink accessBlocked(Boolean accessBlocked) {
    
    this.accessBlocked = accessBlocked;
    return this;
  }

   /**
   * If the share link is blocked
   * @return accessBlocked
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCESS_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAccessBlocked() {
    return accessBlocked;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccessBlocked(Boolean accessBlocked) {
    this.accessBlocked = accessBlocked;
  }


  public ShareLink views(Integer views) {
    
    this.views = views;
    return this;
  }

   /**
   * Number of views of share link (last 180 days only)
   * @return views
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViews() {
    return views;
  }


  @JsonProperty(JSON_PROPERTY_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViews(Integer views) {
    this.views = views;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareLink shareLink = (ShareLink) o;
    return Objects.equals(this.url, shareLink.url) &&
        Objects.equals(this.fileId, shareLink.fileId) &&
        Objects.equals(this.right, shareLink.right) &&
        Objects.equals(this.validUntil, shareLink.validUntil) &&
        Objects.equals(this.createdBy, shareLink.createdBy) &&
        Objects.equals(this.createdAt, shareLink.createdAt) &&
        Objects.equals(this.updatedAt, shareLink.updatedAt) &&
        Objects.equals(this.capabilities, shareLink.capabilities) &&
        Objects.equals(this.accessBlocked, shareLink.accessBlocked) &&
        Objects.equals(this.views, shareLink.views);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, fileId, right, validUntil, createdBy, createdAt, updatedAt, capabilities, accessBlocked, views);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareLink {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    right: ").append(toIndentedString(right)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    accessBlocked: ").append(toIndentedString(accessBlocked)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

