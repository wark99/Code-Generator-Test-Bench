/*
 * SME Professional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.15.0-oas3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MaintenancePost200ResponseValueCreatedDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContractorInsuranceResponseInner
 */
@JsonPropertyOrder({
  ContractorInsuranceResponseInner.JSON_PROPERTY_TYPE,
  ContractorInsuranceResponseInner.JSON_PROPERTY_REFERENCE,
  ContractorInsuranceResponseInner.JSON_PROPERTY_PROVIDER,
  ContractorInsuranceResponseInner.JSON_PROPERTY_EXPIRY_DATE,
  ContractorInsuranceResponseInner.JSON_PROPERTY_LIMIT_OF_LIABILITY
})
@JsonTypeName("ContractorInsuranceResponse_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:30.009582082Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ContractorInsuranceResponseInner {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private String provider;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private MaintenancePost200ResponseValueCreatedDate expiryDate;

  public static final String JSON_PROPERTY_LIMIT_OF_LIABILITY = "limit_of_liability";
  private String limitOfLiability;

  public ContractorInsuranceResponseInner() {
  }

  public ContractorInsuranceResponseInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ContractorInsuranceResponseInner reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  public ContractorInsuranceResponseInner provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvider(String provider) {
    this.provider = provider;
  }


  public ContractorInsuranceResponseInner expiryDate(MaintenancePost200ResponseValueCreatedDate expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenancePost200ResponseValueCreatedDate getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(MaintenancePost200ResponseValueCreatedDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  public ContractorInsuranceResponseInner limitOfLiability(String limitOfLiability) {
    
    this.limitOfLiability = limitOfLiability;
    return this;
  }

   /**
   * Get limitOfLiability
   * @return limitOfLiability
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_OF_LIABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLimitOfLiability() {
    return limitOfLiability;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_OF_LIABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitOfLiability(String limitOfLiability) {
    this.limitOfLiability = limitOfLiability;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContractorInsuranceResponseInner contractorInsuranceResponseInner = (ContractorInsuranceResponseInner) o;
    return Objects.equals(this.type, contractorInsuranceResponseInner.type) &&
        Objects.equals(this.reference, contractorInsuranceResponseInner.reference) &&
        Objects.equals(this.provider, contractorInsuranceResponseInner.provider) &&
        Objects.equals(this.expiryDate, contractorInsuranceResponseInner.expiryDate) &&
        Objects.equals(this.limitOfLiability, contractorInsuranceResponseInner.limitOfLiability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, reference, provider, expiryDate, limitOfLiability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContractorInsuranceResponseInner {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    limitOfLiability: ").append(toIndentedString(limitOfLiability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

