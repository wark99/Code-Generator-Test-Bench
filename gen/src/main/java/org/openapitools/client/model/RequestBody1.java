/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RequestBody1
 */
@JsonPropertyOrder({
  RequestBody1.JSON_PROPERTY_CONNECTION_TYPE,
  RequestBody1.JSON_PROPERTY_CUSTOMER_NAME,
  RequestBody1.JSON_PROPERTY_EMAIL,
  RequestBody1.JSON_PROPERTY_FIRSTNAME,
  RequestBody1.JSON_PROPERTY_LANG,
  RequestBody1.JSON_PROPERTY_LASTNAME,
  RequestBody1.JSON_PROPERTY_SIZE,
  RequestBody1.JSON_PROPERTY_TYPE
})
@JsonTypeName("Request_body_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RequestBody1 {
  /**
   * Slot connection type (Swift, S3, FTP)
   */
  public enum ConnectionTypeEnum {
    FTP("ftp"),
    
    S3("s3"),
    
    SWIFT("swift");

    private String value;

    ConnectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ConnectionTypeEnum fromValue(String value) {
      for (ConnectionTypeEnum b : ConnectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connection_type";
  private ConnectionTypeEnum connectionType;

  public static final String JSON_PROPERTY_CUSTOMER_NAME = "customer_name";
  private String customerName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_FIRSTNAME = "firstname";
  private String firstname;

  public static final String JSON_PROPERTY_LANG = "lang";
  private Integer lang;

  public static final String JSON_PROPERTY_LASTNAME = "lastname";
  private String lastname;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  /**
   * Type of the resource &#x60;{name}&#x60;
   */
  public enum TypeEnum {
    ACRONIS("acronis"),
    
    LINUX("linux"),
    
    MOBILE("mobile"),
    
    OFFICE("office"),
    
    OTHER("other"),
    
    QNAP("qnap"),
    
    SERVER("server"),
    
    SYNOLOGY("synology"),
    
    VIRTUAL("virtual"),
    
    WORKSTATION("workstation");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public RequestBody1() {
  }

  public RequestBody1 connectionType(ConnectionTypeEnum connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Slot connection type (Swift, S3, FTP)
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
  }


  public RequestBody1 customerName(String customerName) {
    
    this.customerName = customerName;
    return this;
  }

   /**
   * Customer name of the resource &#x60;{name}&#x60;
   * @return customerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerName() {
    return customerName;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public RequestBody1 email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public RequestBody1 firstname(String firstname) {
    
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstname() {
    return firstname;
  }


  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public RequestBody1 lang(Integer lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * Language identifier (1 &#x3D; fr / 2 &#x3D; en / 3 &#x3D; de / 4 &#x3D; it / 5 &#x3D; es)
   * @return lang
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLang() {
    return lang;
  }


  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLang(Integer lang) {
    this.lang = lang;
  }


  public RequestBody1 lastname(String lastname) {
    
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastname() {
    return lastname;
  }


  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public RequestBody1 size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Total storage size of the Swiss Backup product (Bytes)
   * minimum: 1000000000
   * @return size
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Integer size) {
    this.size = size;
  }


  public RequestBody1 type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the resource &#x60;{name}&#x60;
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBody1 requestBody1 = (RequestBody1) o;
    return Objects.equals(this.connectionType, requestBody1.connectionType) &&
        Objects.equals(this.customerName, requestBody1.customerName) &&
        Objects.equals(this.email, requestBody1.email) &&
        Objects.equals(this.firstname, requestBody1.firstname) &&
        Objects.equals(this.lang, requestBody1.lang) &&
        Objects.equals(this.lastname, requestBody1.lastname) &&
        Objects.equals(this.size, requestBody1.size) &&
        Objects.equals(this.type, requestBody1.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionType, customerName, email, firstname, lang, lastname, size, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBody1 {\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

