/*
 * Perch API
 * Perch API for accessing data from Perch. See our [API Guide](https://docs.google.com/document/d/1ms6LFNwFN4C4WkrfWs8Hlu5igFBpNLhNr7uLEkGmvJA) for guidance on best practices. <br/> <br/> Find out more about Perch at [https://perch.fit](https://perch.fit) or by contacting us at [support@perch.fit](mailto:support@perch.fit).
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@perch.fit
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Gender;
import org.openapitools.client.model.User;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FilterUsersResponseAllOfData
 */
@JsonPropertyOrder({
  FilterUsersResponseAllOfData.JSON_PROPERTY_ID,
  FilterUsersResponseAllOfData.JSON_PROPERTY_ACTIVE,
  FilterUsersResponseAllOfData.JSON_PROPERTY_EMAIL,
  FilterUsersResponseAllOfData.JSON_PROPERTY_ORG_ID,
  FilterUsersResponseAllOfData.JSON_PROPERTY_CREATED_AT,
  FilterUsersResponseAllOfData.JSON_PROPERTY_FIRST_NAME,
  FilterUsersResponseAllOfData.JSON_PROPERTY_LAST_NAME,
  FilterUsersResponseAllOfData.JSON_PROPERTY_NAME,
  FilterUsersResponseAllOfData.JSON_PROPERTY_GENDER,
  FilterUsersResponseAllOfData.JSON_PROPERTY_HEIGHT,
  FilterUsersResponseAllOfData.JSON_PROPERTY_WEIGHT,
  FilterUsersResponseAllOfData.JSON_PROPERTY_IMG_URL
})
@JsonTypeName("FilterUsersResponse_allOf_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:41.221792118Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class FilterUsersResponseAllOfData {
  public static final String JSON_PROPERTY_ID = "id";
  private Object id = null;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Object active = null;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<Object> email = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ORG_ID = "org_id";
  private Object orgId = null;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Object createdAt = null;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private JsonNullable<Object> firstName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private JsonNullable<Object> lastName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<Object> name = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_GENDER = "gender";
  private Gender gender;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private JsonNullable<Object> height = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private JsonNullable<Object> weight = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_IMG_URL = "img_url";
  private JsonNullable<Object> imgUrl = JsonNullable.<Object>of(null);

  public FilterUsersResponseAllOfData() {
  }

  public FilterUsersResponseAllOfData id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Object id) {
    this.id = id;
  }


  public FilterUsersResponseAllOfData active(Object active) {
    
    this.active = active;
    return this;
  }

   /**
   * Users can be deactivated. Once they are, you will stop seeing them and their data in responses. Organization administrators control user deactivation.
   * @return active
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActive(Object active) {
    this.active = active;
  }


  public FilterUsersResponseAllOfData email(Object email) {
    this.email = JsonNullable.<Object>of(email);
    
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<Object> email) {
    this.email = email;
  }

  public void setEmail(Object email) {
    this.email = JsonNullable.<Object>of(email);
  }


  public FilterUsersResponseAllOfData orgId(Object orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getOrgId() {
    return orgId;
  }


  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrgId(Object orgId) {
    this.orgId = orgId;
  }


  public FilterUsersResponseAllOfData createdAt(Object createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Object createdAt) {
    this.createdAt = createdAt;
  }


  public FilterUsersResponseAllOfData firstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);
    
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFirstName() {
        return firstName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFirstName_JsonNullable() {
    return firstName;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  public void setFirstName_JsonNullable(JsonNullable<Object> firstName) {
    this.firstName = firstName;
  }

  public void setFirstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);
  }


  public FilterUsersResponseAllOfData lastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);
    
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLastName() {
        return lastName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLastName_JsonNullable() {
    return lastName;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  public void setLastName_JsonNullable(JsonNullable<Object> lastName) {
    this.lastName = lastName;
  }

  public void setLastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);
  }


  public FilterUsersResponseAllOfData name(Object name) {
    this.name = JsonNullable.<Object>of(name);
    
    return this;
  }

   /**
   * Concatenated first and last name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<Object> name) {
    this.name = name;
  }

  public void setName(Object name) {
    this.name = JsonNullable.<Object>of(name);
  }


  public FilterUsersResponseAllOfData gender(Gender gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Gender getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(Gender gender) {
    this.gender = gender;
  }


  public FilterUsersResponseAllOfData height(Object height) {
    this.height = JsonNullable.<Object>of(height);
    
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHeight() {
        return height.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHeight_JsonNullable() {
    return height;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  public void setHeight_JsonNullable(JsonNullable<Object> height) {
    this.height = height;
  }

  public void setHeight(Object height) {
    this.height = JsonNullable.<Object>of(height);
  }


  public FilterUsersResponseAllOfData weight(Object weight) {
    this.weight = JsonNullable.<Object>of(weight);
    
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getWeight() {
        return weight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getWeight_JsonNullable() {
    return weight;
  }
  
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  public void setWeight_JsonNullable(JsonNullable<Object> weight) {
    this.weight = weight;
  }

  public void setWeight(Object weight) {
    this.weight = JsonNullable.<Object>of(weight);
  }


  public FilterUsersResponseAllOfData imgUrl(Object imgUrl) {
    this.imgUrl = JsonNullable.<Object>of(imgUrl);
    
    return this;
  }

   /**
   * Get imgUrl
   * @return imgUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getImgUrl() {
        return imgUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMG_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getImgUrl_JsonNullable() {
    return imgUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_IMG_URL)
  public void setImgUrl_JsonNullable(JsonNullable<Object> imgUrl) {
    this.imgUrl = imgUrl;
  }

  public void setImgUrl(Object imgUrl) {
    this.imgUrl = JsonNullable.<Object>of(imgUrl);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterUsersResponseAllOfData filterUsersResponseAllOfData = (FilterUsersResponseAllOfData) o;
    return Objects.equals(this.id, filterUsersResponseAllOfData.id) &&
        Objects.equals(this.active, filterUsersResponseAllOfData.active) &&
        equalsNullable(this.email, filterUsersResponseAllOfData.email) &&
        Objects.equals(this.orgId, filterUsersResponseAllOfData.orgId) &&
        Objects.equals(this.createdAt, filterUsersResponseAllOfData.createdAt) &&
        equalsNullable(this.firstName, filterUsersResponseAllOfData.firstName) &&
        equalsNullable(this.lastName, filterUsersResponseAllOfData.lastName) &&
        equalsNullable(this.name, filterUsersResponseAllOfData.name) &&
        Objects.equals(this.gender, filterUsersResponseAllOfData.gender) &&
        equalsNullable(this.height, filterUsersResponseAllOfData.height) &&
        equalsNullable(this.weight, filterUsersResponseAllOfData.weight) &&
        equalsNullable(this.imgUrl, filterUsersResponseAllOfData.imgUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, active, hashCodeNullable(email), orgId, createdAt, hashCodeNullable(firstName), hashCodeNullable(lastName), hashCodeNullable(name), gender, hashCodeNullable(height), hashCodeNullable(weight), hashCodeNullable(imgUrl));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterUsersResponseAllOfData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    imgUrl: ").append(toIndentedString(imgUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

