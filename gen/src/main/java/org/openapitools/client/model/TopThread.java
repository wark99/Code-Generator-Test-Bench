/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InsightUserInformation;
import org.openapitools.client.model.Post;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TopThread
 */
@JsonPropertyOrder({
  TopThread.JSON_PROPERTY_POST,
  TopThread.JSON_PROPERTY_CHANNEL_ID,
  TopThread.JSON_PROPERTY_CHANNEL_DISPLAY_NAME,
  TopThread.JSON_PROPERTY_CHANNEL_NAME,
  TopThread.JSON_PROPERTY_PARTICIPANTS,
  TopThread.JSON_PROPERTY_USER_INFORMATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class TopThread {
  public static final String JSON_PROPERTY_POST = "post";
  private Post post;

  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_CHANNEL_DISPLAY_NAME = "channel_display_name";
  private String channelDisplayName;

  public static final String JSON_PROPERTY_CHANNEL_NAME = "channel_name";
  private String channelName;

  public static final String JSON_PROPERTY_PARTICIPANTS = "Participants";
  private List<String> participants;

  public static final String JSON_PROPERTY_USER_INFORMATION = "user_information";
  private InsightUserInformation userInformation;

  public TopThread() {
  }

  public TopThread post(Post post) {
    
    this.post = post;
    return this;
  }

   /**
   * Get post
   * @return post
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Post getPost() {
    return post;
  }


  @JsonProperty(JSON_PROPERTY_POST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPost(Post post) {
    this.post = post;
  }


  public TopThread channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * Get channelId
   * @return channelId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public TopThread channelDisplayName(String channelDisplayName) {
    
    this.channelDisplayName = channelDisplayName;
    return this;
  }

   /**
   * Get channelDisplayName
   * @return channelDisplayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelDisplayName() {
    return channelDisplayName;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelDisplayName(String channelDisplayName) {
    this.channelDisplayName = channelDisplayName;
  }


  public TopThread channelName(String channelName) {
    
    this.channelName = channelName;
    return this;
  }

   /**
   * Get channelName
   * @return channelName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelName() {
    return channelName;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelName(String channelName) {
    this.channelName = channelName;
  }


  public TopThread participants(List<String> participants) {
    
    this.participants = participants;
    return this;
  }

  public TopThread addParticipantsItem(String participantsItem) {
    if (this.participants == null) {
      this.participants = new ArrayList<>();
    }
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTICIPANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getParticipants() {
    return participants;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipants(List<String> participants) {
    this.participants = participants;
  }


  public TopThread userInformation(InsightUserInformation userInformation) {
    
    this.userInformation = userInformation;
    return this;
  }

   /**
   * Get userInformation
   * @return userInformation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InsightUserInformation getUserInformation() {
    return userInformation;
  }


  @JsonProperty(JSON_PROPERTY_USER_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserInformation(InsightUserInformation userInformation) {
    this.userInformation = userInformation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopThread topThread = (TopThread) o;
    return Objects.equals(this.post, topThread.post) &&
        Objects.equals(this.channelId, topThread.channelId) &&
        Objects.equals(this.channelDisplayName, topThread.channelDisplayName) &&
        Objects.equals(this.channelName, topThread.channelName) &&
        Objects.equals(this.participants, topThread.participants) &&
        Objects.equals(this.userInformation, topThread.userInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(post, channelId, channelDisplayName, channelName, participants, userInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopThread {\n");
    sb.append("    post: ").append(toIndentedString(post)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    channelDisplayName: ").append(toIndentedString(channelDisplayName)).append("\n");
    sb.append("    channelName: ").append(toIndentedString(channelName)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    userInformation: ").append(toIndentedString(userInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

