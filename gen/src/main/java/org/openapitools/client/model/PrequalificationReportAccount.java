/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountDetails;
import org.openapitools.client.model.PrequalificationReportAssetSummary;
import org.openapitools.client.model.ReportTransaction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PrequalificationReportAccount
 */
@JsonPropertyOrder({
  PrequalificationReportAccount.JSON_PROPERTY_ID,
  PrequalificationReportAccount.JSON_PROPERTY_NUMBER,
  PrequalificationReportAccount.JSON_PROPERTY_OWNER_NAME,
  PrequalificationReportAccount.JSON_PROPERTY_OWNER_ADDRESS,
  PrequalificationReportAccount.JSON_PROPERTY_NAME,
  PrequalificationReportAccount.JSON_PROPERTY_TYPE,
  PrequalificationReportAccount.JSON_PROPERTY_CURRENCY,
  PrequalificationReportAccount.JSON_PROPERTY_AGGREGATION_STATUS_CODE,
  PrequalificationReportAccount.JSON_PROPERTY_BALANCE,
  PrequalificationReportAccount.JSON_PROPERTY_BALANCE_DATE,
  PrequalificationReportAccount.JSON_PROPERTY_AVAILABLE_BALANCE,
  PrequalificationReportAccount.JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE,
  PrequalificationReportAccount.JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT,
  PrequalificationReportAccount.JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT,
  PrequalificationReportAccount.JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT,
  PrequalificationReportAccount.JSON_PROPERTY_TRANSACTIONS,
  PrequalificationReportAccount.JSON_PROPERTY_ASSET,
  PrequalificationReportAccount.JSON_PROPERTY_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-30T11:16:07.490346735Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PrequalificationReportAccount {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_OWNER_ADDRESS = "ownerAddress";
  private String ownerAddress;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  private Integer aggregationStatusCode;

  public static final String JSON_PROPERTY_BALANCE = "balance";
  private BigDecimal balance;

  public static final String JSON_PROPERTY_BALANCE_DATE = "balanceDate";
  private Long balanceDate;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE = "averageMonthlyBalance";
  private BigDecimal averageMonthlyBalance;

  public static final String JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT = "totNumberInsufficientFundsFeeDebitTxAccount";
  private Integer totNumberInsufficientFundsFeeDebitTxAccount;

  public static final String JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT = "totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount";
  private Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;

  public static final String JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT = "totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount";
  private Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<ReportTransaction> transactions;

  public static final String JSON_PROPERTY_ASSET = "asset";
  private PrequalificationReportAssetSummary asset;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private AccountDetails details;

  public PrequalificationReportAccount() {
  }

  public PrequalificationReportAccount id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the account
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public PrequalificationReportAccount number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * The account number from the institution (all digits except the last four are obfuscated)
   * @return number
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(String number) {
    this.number = number;
  }


  public PrequalificationReportAccount ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * The name(s) of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then all owners will be listed separated by |.
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public PrequalificationReportAccount ownerAddress(String ownerAddress) {
    
    this.ownerAddress = ownerAddress;
    return this;
  }

   /**
   * The mailing address of the account owner(s). If the owner information is not available, this field will not appear in the report. If the account has multiple owners then the address of the primary owner will be listed.
   * @return ownerAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerAddress() {
    return ownerAddress;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerAddress(String ownerAddress) {
    this.ownerAddress = ownerAddress;
  }


  public PrequalificationReportAccount name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The account name from the institution
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PrequalificationReportAccount type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The list of supported account types. * &#x60;checking&#x60; * &#x60;savings&#x60; * &#x60;moneyMarket&#x60; * &#x60;cd&#x60; * &#x60;investment&#x60; * &#x60;investmentTaxDeferred&#x60; * &#x60;employeeStockPurchasePlan&#x60; * &#x60;ira&#x60; * &#x60;401k&#x60; * &#x60;roth&#x60; * &#x60;403b&#x60; * &#x60;529&#x60; * &#x60;rollover&#x60; * &#x60;ugma&#x60; * &#x60;utma&#x60; * &#x60;keogh&#x60; * &#x60;457&#x60; * &#x60;401a&#x60; * &#x60;brokerageAccount&#x60; * &#x60;educationSavings&#x60; * &#x60;healthSavingsAccount&#x60; * &#x60;nonTaxableBrokerageAccount&#x60; * &#x60;pension&#x60; * &#x60;profitSharingPlan&#x60; * &#x60;roth401k&#x60; * &#x60;sepIRA&#x60; * &#x60;simpleIRA&#x60; * &#x60;thriftSavingsPlan&#x60; * &#x60;variableAnnuity&#x60;
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PrequalificationReportAccount currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code for account
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PrequalificationReportAccount aggregationStatusCode(Integer aggregationStatusCode) {
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public PrequalificationReportAccount balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * The cleared balance of the account as-of &#x60;balanceDate&#x60;
   * @return balance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBalance() {
    return balance;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public PrequalificationReportAccount balanceDate(Long balanceDate) {
    
    this.balanceDate = balanceDate;
    return this;
  }

   /**
   * A timestamp of the balance
   * @return balanceDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBalanceDate() {
    return balanceDate;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceDate(Long balanceDate) {
    this.balanceDate = balanceDate;
  }


  public PrequalificationReportAccount availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * Available balance
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public PrequalificationReportAccount averageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    
    this.averageMonthlyBalance = averageMonthlyBalance;
    return this;
  }

   /**
   * The average monthly balance of the account
   * @return averageMonthlyBalance
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAverageMonthlyBalance() {
    return averageMonthlyBalance;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_MONTHLY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageMonthlyBalance(BigDecimal averageMonthlyBalance) {
    this.averageMonthlyBalance = averageMonthlyBalance;
  }


  public PrequalificationReportAccount totNumberInsufficientFundsFeeDebitTxAccount(Integer totNumberInsufficientFundsFeeDebitTxAccount) {
    
    this.totNumberInsufficientFundsFeeDebitTxAccount = totNumberInsufficientFundsFeeDebitTxAccount;
    return this;
  }

   /**
   * The count for the total number of insufficient funds transactions, based on the &#x60;fromDate&#x60; of the report
   * @return totNumberInsufficientFundsFeeDebitTxAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotNumberInsufficientFundsFeeDebitTxAccount() {
    return totNumberInsufficientFundsFeeDebitTxAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberInsufficientFundsFeeDebitTxAccount(Integer totNumberInsufficientFundsFeeDebitTxAccount) {
    this.totNumberInsufficientFundsFeeDebitTxAccount = totNumberInsufficientFundsFeeDebitTxAccount;
  }


  public PrequalificationReportAccount totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount(Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) {
    
    this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
    return this;
  }

   /**
   * The total number of  insufficient funds fees for the account over six months
   * @return totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotNumberInsufficientFundsFeeDebitTxOver6MonthsAccount() {
    return totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_OVER6_MONTHS_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberInsufficientFundsFeeDebitTxOver6MonthsAccount(Integer totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) {
    this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount = totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount;
  }


  public PrequalificationReportAccount totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount(Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) {
    
    this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount = totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
    return this;
  }

   /**
   * The total number of days since the most recent insufficient funds fee for the account
   * @return totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount() {
    return totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
  }


  @JsonProperty(JSON_PROPERTY_TOT_NUMBER_DAYS_SINCE_MOST_RECENT_INSUFFICIENT_FUNDS_FEE_DEBIT_TX_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount(Long totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) {
    this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount = totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount;
  }


  public PrequalificationReportAccount transactions(List<ReportTransaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public PrequalificationReportAccount addTransactionsItem(ReportTransaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * a list of transaction records
   * @return transactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReportTransaction> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactions(List<ReportTransaction> transactions) {
    this.transactions = transactions;
  }


  public PrequalificationReportAccount asset(PrequalificationReportAssetSummary asset) {
    
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrequalificationReportAssetSummary getAsset() {
    return asset;
  }


  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsset(PrequalificationReportAssetSummary asset) {
    this.asset = asset;
  }


  public PrequalificationReportAccount details(AccountDetails details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountDetails getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(AccountDetails details) {
    this.details = details;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrequalificationReportAccount prequalificationReportAccount = (PrequalificationReportAccount) o;
    return Objects.equals(this.id, prequalificationReportAccount.id) &&
        Objects.equals(this.number, prequalificationReportAccount.number) &&
        Objects.equals(this.ownerName, prequalificationReportAccount.ownerName) &&
        Objects.equals(this.ownerAddress, prequalificationReportAccount.ownerAddress) &&
        Objects.equals(this.name, prequalificationReportAccount.name) &&
        Objects.equals(this.type, prequalificationReportAccount.type) &&
        Objects.equals(this.currency, prequalificationReportAccount.currency) &&
        Objects.equals(this.aggregationStatusCode, prequalificationReportAccount.aggregationStatusCode) &&
        Objects.equals(this.balance, prequalificationReportAccount.balance) &&
        Objects.equals(this.balanceDate, prequalificationReportAccount.balanceDate) &&
        Objects.equals(this.availableBalance, prequalificationReportAccount.availableBalance) &&
        Objects.equals(this.averageMonthlyBalance, prequalificationReportAccount.averageMonthlyBalance) &&
        Objects.equals(this.totNumberInsufficientFundsFeeDebitTxAccount, prequalificationReportAccount.totNumberInsufficientFundsFeeDebitTxAccount) &&
        Objects.equals(this.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount, prequalificationReportAccount.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount) &&
        Objects.equals(this.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount, prequalificationReportAccount.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount) &&
        Objects.equals(this.transactions, prequalificationReportAccount.transactions) &&
        Objects.equals(this.asset, prequalificationReportAccount.asset) &&
        Objects.equals(this.details, prequalificationReportAccount.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, number, ownerName, ownerAddress, name, type, currency, aggregationStatusCode, balance, balanceDate, availableBalance, averageMonthlyBalance, totNumberInsufficientFundsFeeDebitTxAccount, totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount, totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount, transactions, asset, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrequalificationReportAccount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceDate: ").append(toIndentedString(balanceDate)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    averageMonthlyBalance: ").append(toIndentedString(averageMonthlyBalance)).append("\n");
    sb.append("    totNumberInsufficientFundsFeeDebitTxAccount: ").append(toIndentedString(totNumberInsufficientFundsFeeDebitTxAccount)).append("\n");
    sb.append("    totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: ").append(toIndentedString(totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount)).append("\n");
    sb.append("    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: ").append(toIndentedString(totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

