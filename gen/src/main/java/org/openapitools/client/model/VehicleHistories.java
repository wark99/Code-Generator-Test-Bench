/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Data;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.Names;
import org.openapitools.client.model.Prefill;
import org.openapitools.client.model.Statements;
import org.openapitools.client.model.VehicleScore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VehicleHistories
 */
@JsonPropertyOrder({
  VehicleHistories.JSON_PROPERTY_ADDRESS,
  VehicleHistories.JSON_PROPERTY_DATA,
  VehicleHistories.JSON_PROPERTY_ERROR,
  VehicleHistories.JSON_PROPERTY_GROUP,
  VehicleHistories.JSON_PROPERTY_NAME,
  VehicleHistories.JSON_PROPERTY_PREFILL,
  VehicleHistories.JSON_PROPERTY_SEARCH_STATUS,
  VehicleHistories.JSON_PROPERTY_STATEMENT,
  VehicleHistories.JSON_PROPERTY_VEHICLE_SCORE,
  VehicleHistories.JSON_PROPERTY_VEHICLES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class VehicleHistories {
  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_DATA = "data";
  private Data data;

  public static final String JSON_PROPERTY_ERROR = "error";
  private Error error;

  public static final String JSON_PROPERTY_GROUP = "group";
  private Group group;

  public static final String JSON_PROPERTY_NAME = "name";
  private Names name;

  public static final String JSON_PROPERTY_PREFILL = "prefill";
  private Prefill prefill;

  public static final String JSON_PROPERTY_SEARCH_STATUS = "searchStatus";
  private String searchStatus;

  public static final String JSON_PROPERTY_STATEMENT = "statement";
  private Statements statement;

  public static final String JSON_PROPERTY_VEHICLE_SCORE = "vehicleScore";
  private VehicleScore vehicleScore;

  public static final String JSON_PROPERTY_VEHICLES = "vehicles";
  private List<String> vehicles;

  public VehicleHistories() {
  }

  public VehicleHistories address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(String address) {
    this.address = address;
  }


  public VehicleHistories data(Data data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Data getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Data data) {
    this.data = data;
  }


  public VehicleHistories error(Error error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Error getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(Error error) {
    this.error = error;
  }


  public VehicleHistories group(Group group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Group getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(Group group) {
    this.group = group;
  }


  public VehicleHistories name(Names name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Names getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(Names name) {
    this.name = name;
  }


  public VehicleHistories prefill(Prefill prefill) {
    
    this.prefill = prefill;
    return this;
  }

   /**
   * Get prefill
   * @return prefill
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Prefill getPrefill() {
    return prefill;
  }


  @JsonProperty(JSON_PROPERTY_PREFILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefill(Prefill prefill) {
    this.prefill = prefill;
  }


  public VehicleHistories searchStatus(String searchStatus) {
    
    this.searchStatus = searchStatus;
    return this;
  }

   /**
   * Get searchStatus
   * @return searchStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchStatus() {
    return searchStatus;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchStatus(String searchStatus) {
    this.searchStatus = searchStatus;
  }


  public VehicleHistories statement(Statements statement) {
    
    this.statement = statement;
    return this;
  }

   /**
   * Get statement
   * @return statement
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Statements getStatement() {
    return statement;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatement(Statements statement) {
    this.statement = statement;
  }


  public VehicleHistories vehicleScore(VehicleScore vehicleScore) {
    
    this.vehicleScore = vehicleScore;
    return this;
  }

   /**
   * Get vehicleScore
   * @return vehicleScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEHICLE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VehicleScore getVehicleScore() {
    return vehicleScore;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicleScore(VehicleScore vehicleScore) {
    this.vehicleScore = vehicleScore;
  }


  public VehicleHistories vehicles(List<String> vehicles) {
    
    this.vehicles = vehicles;
    return this;
  }

  public VehicleHistories addVehiclesItem(String vehiclesItem) {
    if (this.vehicles == null) {
      this.vehicles = new ArrayList<>();
    }
    this.vehicles.add(vehiclesItem);
    return this;
  }

   /**
   * Get vehicles
   * @return vehicles
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getVehicles() {
    return vehicles;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicles(List<String> vehicles) {
    this.vehicles = vehicles;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleHistories vehicleHistories = (VehicleHistories) o;
    return Objects.equals(this.address, vehicleHistories.address) &&
        Objects.equals(this.data, vehicleHistories.data) &&
        Objects.equals(this.error, vehicleHistories.error) &&
        Objects.equals(this.group, vehicleHistories.group) &&
        Objects.equals(this.name, vehicleHistories.name) &&
        Objects.equals(this.prefill, vehicleHistories.prefill) &&
        Objects.equals(this.searchStatus, vehicleHistories.searchStatus) &&
        Objects.equals(this.statement, vehicleHistories.statement) &&
        Objects.equals(this.vehicleScore, vehicleHistories.vehicleScore) &&
        Objects.equals(this.vehicles, vehicleHistories.vehicles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, data, error, group, name, prefill, searchStatus, statement, vehicleScore, vehicles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleHistories {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    prefill: ").append(toIndentedString(prefill)).append("\n");
    sb.append("    searchStatus: ").append(toIndentedString(searchStatus)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("    vehicleScore: ").append(toIndentedString(vehicleScore)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

