/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.HistoricalCounters;
import org.openapitools.client.model.MostRecentDelinquency;
import org.openapitools.client.model.PaymentPattern;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentHistory
 */
@JsonPropertyOrder({
  PaymentHistory.JSON_PROPERTY_DATE_FIRST_DELINQUENT,
  PaymentHistory.JSON_PROPERTY_HISTORICAL_COUNTERS,
  PaymentHistory.JSON_PROPERTY_MAX_DELINQUENCIES,
  PaymentHistory.JSON_PROPERTY_PAYMENT_PATTERN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentHistory {
  public static final String JSON_PROPERTY_DATE_FIRST_DELINQUENT = "dateFirstDelinquent";
  private DateOfExpiration dateFirstDelinquent;

  public static final String JSON_PROPERTY_HISTORICAL_COUNTERS = "historicalCounters";
  private HistoricalCounters historicalCounters;

  public static final String JSON_PROPERTY_MAX_DELINQUENCIES = "maxDelinquencies";
  private List<MostRecentDelinquency> maxDelinquencies;

  public static final String JSON_PROPERTY_PAYMENT_PATTERN = "paymentPattern";
  private PaymentPattern paymentPattern;

  public PaymentHistory() {
  }

  public PaymentHistory dateFirstDelinquent(DateOfExpiration dateFirstDelinquent) {
    
    this.dateFirstDelinquent = dateFirstDelinquent;
    return this;
  }

   /**
   * Get dateFirstDelinquent
   * @return dateFirstDelinquent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FIRST_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateFirstDelinquent() {
    return dateFirstDelinquent;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FIRST_DELINQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFirstDelinquent(DateOfExpiration dateFirstDelinquent) {
    this.dateFirstDelinquent = dateFirstDelinquent;
  }


  public PaymentHistory historicalCounters(HistoricalCounters historicalCounters) {
    
    this.historicalCounters = historicalCounters;
    return this;
  }

   /**
   * Get historicalCounters
   * @return historicalCounters
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HISTORICAL_COUNTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HistoricalCounters getHistoricalCounters() {
    return historicalCounters;
  }


  @JsonProperty(JSON_PROPERTY_HISTORICAL_COUNTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoricalCounters(HistoricalCounters historicalCounters) {
    this.historicalCounters = historicalCounters;
  }


  public PaymentHistory maxDelinquencies(List<MostRecentDelinquency> maxDelinquencies) {
    
    this.maxDelinquencies = maxDelinquencies;
    return this;
  }

  public PaymentHistory addMaxDelinquenciesItem(MostRecentDelinquency maxDelinquenciesItem) {
    if (this.maxDelinquencies == null) {
      this.maxDelinquencies = new ArrayList<>();
    }
    this.maxDelinquencies.add(maxDelinquenciesItem);
    return this;
  }

   /**
   * Get maxDelinquencies
   * @return maxDelinquencies
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_DELINQUENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MostRecentDelinquency> getMaxDelinquencies() {
    return maxDelinquencies;
  }


  @JsonProperty(JSON_PROPERTY_MAX_DELINQUENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxDelinquencies(List<MostRecentDelinquency> maxDelinquencies) {
    this.maxDelinquencies = maxDelinquencies;
  }


  public PaymentHistory paymentPattern(PaymentPattern paymentPattern) {
    
    this.paymentPattern = paymentPattern;
    return this;
  }

   /**
   * Get paymentPattern
   * @return paymentPattern
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentPattern getPaymentPattern() {
    return paymentPattern;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentPattern(PaymentPattern paymentPattern) {
    this.paymentPattern = paymentPattern;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentHistory paymentHistory = (PaymentHistory) o;
    return Objects.equals(this.dateFirstDelinquent, paymentHistory.dateFirstDelinquent) &&
        Objects.equals(this.historicalCounters, paymentHistory.historicalCounters) &&
        Objects.equals(this.maxDelinquencies, paymentHistory.maxDelinquencies) &&
        Objects.equals(this.paymentPattern, paymentHistory.paymentPattern);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateFirstDelinquent, historicalCounters, maxDelinquencies, paymentPattern);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentHistory {\n");
    sb.append("    dateFirstDelinquent: ").append(toIndentedString(dateFirstDelinquent)).append("\n");
    sb.append("    historicalCounters: ").append(toIndentedString(historicalCounters)).append("\n");
    sb.append("    maxDelinquencies: ").append(toIndentedString(maxDelinquencies)).append("\n");
    sb.append("    paymentPattern: ").append(toIndentedString(paymentPattern)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

