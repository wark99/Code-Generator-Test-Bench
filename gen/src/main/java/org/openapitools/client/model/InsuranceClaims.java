/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClaimFeatures;
import org.openapitools.client.model.DateOfExpiration;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InsuranceClaims
 */
@JsonPropertyOrder({
  InsuranceClaims.JSON_PROPERTY_AM_BEST_CODE,
  InsuranceClaims.JSON_PROPERTY_CLAIM_FEATURES,
  InsuranceClaims.JSON_PROPERTY_CLAIM_NUMBER,
  InsuranceClaims.JSON_PROPERTY_CLAIM_REFERENCE_ID,
  InsuranceClaims.JSON_PROPERTY_DATE_OF_LOSS,
  InsuranceClaims.JSON_PROPERTY_FILTERING_INDICATOR,
  InsuranceClaims.JSON_PROPERTY_SOURCE,
  InsuranceClaims.JSON_PROPERTY_TOTAL_SETTLEMENT_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class InsuranceClaims {
  public static final String JSON_PROPERTY_AM_BEST_CODE = "amBestCode";
  private String amBestCode;

  public static final String JSON_PROPERTY_CLAIM_FEATURES = "claimFeatures";
  private List<ClaimFeatures> claimFeatures;

  public static final String JSON_PROPERTY_CLAIM_NUMBER = "claimNumber";
  private String claimNumber;

  public static final String JSON_PROPERTY_CLAIM_REFERENCE_ID = "claimReferenceId";
  private String claimReferenceId;

  public static final String JSON_PROPERTY_DATE_OF_LOSS = "dateOfLoss";
  private DateOfExpiration dateOfLoss;

  public static final String JSON_PROPERTY_FILTERING_INDICATOR = "filteringIndicator";
  private Boolean filteringIndicator;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_TOTAL_SETTLEMENT_AMOUNT = "totalSettlementAmount";
  private Integer totalSettlementAmount;

  public InsuranceClaims() {
  }

  public InsuranceClaims amBestCode(String amBestCode) {
    
    this.amBestCode = amBestCode;
    return this;
  }

   /**
   * Get amBestCode
   * @return amBestCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AM_BEST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmBestCode() {
    return amBestCode;
  }


  @JsonProperty(JSON_PROPERTY_AM_BEST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmBestCode(String amBestCode) {
    this.amBestCode = amBestCode;
  }


  public InsuranceClaims claimFeatures(List<ClaimFeatures> claimFeatures) {
    
    this.claimFeatures = claimFeatures;
    return this;
  }

  public InsuranceClaims addClaimFeaturesItem(ClaimFeatures claimFeaturesItem) {
    if (this.claimFeatures == null) {
      this.claimFeatures = new ArrayList<>();
    }
    this.claimFeatures.add(claimFeaturesItem);
    return this;
  }

   /**
   * Get claimFeatures
   * @return claimFeatures
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLAIM_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ClaimFeatures> getClaimFeatures() {
    return claimFeatures;
  }


  @JsonProperty(JSON_PROPERTY_CLAIM_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClaimFeatures(List<ClaimFeatures> claimFeatures) {
    this.claimFeatures = claimFeatures;
  }


  public InsuranceClaims claimNumber(String claimNumber) {
    
    this.claimNumber = claimNumber;
    return this;
  }

   /**
   * Get claimNumber
   * @return claimNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLAIM_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClaimNumber() {
    return claimNumber;
  }


  @JsonProperty(JSON_PROPERTY_CLAIM_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClaimNumber(String claimNumber) {
    this.claimNumber = claimNumber;
  }


  public InsuranceClaims claimReferenceId(String claimReferenceId) {
    
    this.claimReferenceId = claimReferenceId;
    return this;
  }

   /**
   * Get claimReferenceId
   * @return claimReferenceId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLAIM_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClaimReferenceId() {
    return claimReferenceId;
  }


  @JsonProperty(JSON_PROPERTY_CLAIM_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClaimReferenceId(String claimReferenceId) {
    this.claimReferenceId = claimReferenceId;
  }


  public InsuranceClaims dateOfLoss(DateOfExpiration dateOfLoss) {
    
    this.dateOfLoss = dateOfLoss;
    return this;
  }

   /**
   * Get dateOfLoss
   * @return dateOfLoss
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateOfLoss() {
    return dateOfLoss;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfLoss(DateOfExpiration dateOfLoss) {
    this.dateOfLoss = dateOfLoss;
  }


  public InsuranceClaims filteringIndicator(Boolean filteringIndicator) {
    
    this.filteringIndicator = filteringIndicator;
    return this;
  }

   /**
   * Get filteringIndicator
   * @return filteringIndicator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTERING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFilteringIndicator() {
    return filteringIndicator;
  }


  @JsonProperty(JSON_PROPERTY_FILTERING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilteringIndicator(Boolean filteringIndicator) {
    this.filteringIndicator = filteringIndicator;
  }


  public InsuranceClaims source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public InsuranceClaims totalSettlementAmount(Integer totalSettlementAmount) {
    
    this.totalSettlementAmount = totalSettlementAmount;
    return this;
  }

   /**
   * Get totalSettlementAmount
   * @return totalSettlementAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_SETTLEMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalSettlementAmount() {
    return totalSettlementAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SETTLEMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalSettlementAmount(Integer totalSettlementAmount) {
    this.totalSettlementAmount = totalSettlementAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsuranceClaims insuranceClaims = (InsuranceClaims) o;
    return Objects.equals(this.amBestCode, insuranceClaims.amBestCode) &&
        Objects.equals(this.claimFeatures, insuranceClaims.claimFeatures) &&
        Objects.equals(this.claimNumber, insuranceClaims.claimNumber) &&
        Objects.equals(this.claimReferenceId, insuranceClaims.claimReferenceId) &&
        Objects.equals(this.dateOfLoss, insuranceClaims.dateOfLoss) &&
        Objects.equals(this.filteringIndicator, insuranceClaims.filteringIndicator) &&
        Objects.equals(this.source, insuranceClaims.source) &&
        Objects.equals(this.totalSettlementAmount, insuranceClaims.totalSettlementAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amBestCode, claimFeatures, claimNumber, claimReferenceId, dateOfLoss, filteringIndicator, source, totalSettlementAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsuranceClaims {\n");
    sb.append("    amBestCode: ").append(toIndentedString(amBestCode)).append("\n");
    sb.append("    claimFeatures: ").append(toIndentedString(claimFeatures)).append("\n");
    sb.append("    claimNumber: ").append(toIndentedString(claimNumber)).append("\n");
    sb.append("    claimReferenceId: ").append(toIndentedString(claimReferenceId)).append("\n");
    sb.append("    dateOfLoss: ").append(toIndentedString(dateOfLoss)).append("\n");
    sb.append("    filteringIndicator: ").append(toIndentedString(filteringIndicator)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    totalSettlementAmount: ").append(toIndentedString(totalSettlementAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

