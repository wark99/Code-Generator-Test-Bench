/*
 * Childcare Provider API
 * Childcare Provider RESTful Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: p.oforduru@zodiac-software.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SearchProfilePostRequestFilter
 */
@JsonPropertyOrder({
  SearchProfilePostRequestFilter.JSON_PROPERTY_CHILDCARE_TYPES,
  SearchProfilePostRequestFilter.JSON_PROPERTY_JOB_TYPES,
  SearchProfilePostRequestFilter.JSON_PROPERTY_HOURLY_RATE_MIN,
  SearchProfilePostRequestFilter.JSON_PROPERTY_HOURLY_RATE_MAX,
  SearchProfilePostRequestFilter.JSON_PROPERTY_GENDER,
  SearchProfilePostRequestFilter.JSON_PROPERTY_EXPERIENCE,
  SearchProfilePostRequestFilter.JSON_PROPERTY_NEW_BORN_EXPERIENCE,
  SearchProfilePostRequestFilter.JSON_PROPERTY_CHILDREN_AGE,
  SearchProfilePostRequestFilter.JSON_PROPERTY_AGE,
  SearchProfilePostRequestFilter.JSON_PROPERTY_SEARCH_RADIUS,
  SearchProfilePostRequestFilter.JSON_PROPERTY_TAGS
})
@JsonTypeName("_search_profile_post_request_filter")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:24.544913406Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SearchProfilePostRequestFilter {
  /**
   * Gets or Sets childcareTypes
   */
  public enum ChildcareTypesEnum {
    BABYSITTER("babysitter"),
    
    NANNY("nanny"),
    
    CHILDMINDER("childminder"),
    
    HOUSEHOLD_HELP("household_help"),
    
    PRIVATE_TUTOR("private_tutor");

    private String value;

    ChildcareTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildcareTypesEnum fromValue(String value) {
      for (ChildcareTypesEnum b : ChildcareTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDCARE_TYPES = "childcare_types";
  private List<ChildcareTypesEnum> childcareTypes;

  /**
   * Gets or Sets jobTypes
   */
  public enum JobTypesEnum {
    FULLTIME("fulltime"),
    
    PARTTIME("parttime"),
    
    LIVE_IN("live in"),
    
    LIVE_OUT("live out");

    private String value;

    JobTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static JobTypesEnum fromValue(String value) {
      for (JobTypesEnum b : JobTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_JOB_TYPES = "job_types";
  private List<JobTypesEnum> jobTypes;

  public static final String JSON_PROPERTY_HOURLY_RATE_MIN = "hourly_rate_min";
  private BigDecimal hourlyRateMin;

  public static final String JSON_PROPERTY_HOURLY_RATE_MAX = "hourly_rate_max";
  private BigDecimal hourlyRateMax;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("MALE"),
    
    FEMALE("FEMALE");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_EXPERIENCE = "experience";
  private Integer experience;

  public static final String JSON_PROPERTY_NEW_BORN_EXPERIENCE = "new_born_experience";
  private Boolean newBornExperience;

  /**
   * Gets or Sets childrenAge
   */
  public enum ChildrenAgeEnum {
    BABY("baby"),
    
    TODDLER("toddler"),
    
    PRESCHOOLER("preschooler"),
    
    _5_11_YR_OLD("5-11_yr_old"),
    
    TEENAGER("teenager");

    private String value;

    ChildrenAgeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChildrenAgeEnum fromValue(String value) {
      for (ChildrenAgeEnum b : ChildrenAgeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHILDREN_AGE = "children_age";
  private List<ChildrenAgeEnum> childrenAge;

  public static final String JSON_PROPERTY_AGE = "age";
  private Integer age;

  public static final String JSON_PROPERTY_SEARCH_RADIUS = "search_radius";
  private String searchRadius;

  /**
   * Gets or Sets tags
   */
  public enum TagsEnum {
    SPECIAL_NEEDS_EXPERIENCE("special_needs_experience"),
    
    FIRST_AID_QUALIFIED("first_aid_qualified"),
    
    DBS_CHECKED("dbs_checked"),
    
    REFERENCES("references"),
    
    DRIVERS_LICENCE("drivers_licence"),
    
    OWN_CAR("own_car"),
    
    SCHOOL_PICK_UP("school_pick_up"),
    
    SCHOOL_DROP_OFF("school_drop_off"),
    
    AFTER_SCHOOL_CARE("after_school_care"),
    
    BEFORE_SCHOOL_CARE("before_school_care"),
    
    SENCO_EXPERIENCE("senco_experience"),
    
    COOKING_OR_BAKING("cooking_or_baking"),
    
    OUTDOOR_ACTIVITY("outdoor_activity"),
    
    ANIMAL_LOVER("animal_lover"),
    
    CRAFTY("crafty"),
    
    MUSICAL("musical"),
    
    STORY_TELLER("story_teller"),
    
    WILLING_TO_TRAVEL("willing_to_travel"),
    
    LANGUAGES("languages"),
    
    NEW_BORN_EXPERIENCE("new_born_experience"),
    
    MATERNITY_NURSE_EXPERIENCE("maternity_nurse_experience"),
    
    GOVERNESS_EXPERIENCE("governess_experience");

    private String value;

    TagsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TagsEnum fromValue(String value) {
      for (TagsEnum b : TagsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagsEnum> tags;

  public SearchProfilePostRequestFilter() {
  }

  public SearchProfilePostRequestFilter childcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    
    this.childcareTypes = childcareTypes;
    return this;
  }

  public SearchProfilePostRequestFilter addChildcareTypesItem(ChildcareTypesEnum childcareTypesItem) {
    if (this.childcareTypes == null) {
      this.childcareTypes = new ArrayList<>();
    }
    this.childcareTypes.add(childcareTypesItem);
    return this;
  }

   /**
   * Get childcareTypes
   * @return childcareTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChildcareTypesEnum> getChildcareTypes() {
    return childcareTypes;
  }


  @JsonProperty(JSON_PROPERTY_CHILDCARE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildcareTypes(List<ChildcareTypesEnum> childcareTypes) {
    this.childcareTypes = childcareTypes;
  }


  public SearchProfilePostRequestFilter jobTypes(List<JobTypesEnum> jobTypes) {
    
    this.jobTypes = jobTypes;
    return this;
  }

  public SearchProfilePostRequestFilter addJobTypesItem(JobTypesEnum jobTypesItem) {
    if (this.jobTypes == null) {
      this.jobTypes = new ArrayList<>();
    }
    this.jobTypes.add(jobTypesItem);
    return this;
  }

   /**
   * Get jobTypes
   * @return jobTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<JobTypesEnum> getJobTypes() {
    return jobTypes;
  }


  @JsonProperty(JSON_PROPERTY_JOB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobTypes(List<JobTypesEnum> jobTypes) {
    this.jobTypes = jobTypes;
  }


  public SearchProfilePostRequestFilter hourlyRateMin(BigDecimal hourlyRateMin) {
    
    this.hourlyRateMin = hourlyRateMin;
    return this;
  }

   /**
   * Get hourlyRateMin
   * @return hourlyRateMin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOURLY_RATE_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHourlyRateMin() {
    return hourlyRateMin;
  }


  @JsonProperty(JSON_PROPERTY_HOURLY_RATE_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHourlyRateMin(BigDecimal hourlyRateMin) {
    this.hourlyRateMin = hourlyRateMin;
  }


  public SearchProfilePostRequestFilter hourlyRateMax(BigDecimal hourlyRateMax) {
    
    this.hourlyRateMax = hourlyRateMax;
    return this;
  }

   /**
   * Get hourlyRateMax
   * @return hourlyRateMax
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOURLY_RATE_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHourlyRateMax() {
    return hourlyRateMax;
  }


  @JsonProperty(JSON_PROPERTY_HOURLY_RATE_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHourlyRateMax(BigDecimal hourlyRateMax) {
    this.hourlyRateMax = hourlyRateMax;
  }


  public SearchProfilePostRequestFilter gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public SearchProfilePostRequestFilter experience(Integer experience) {
    
    this.experience = experience;
    return this;
  }

   /**
   * Get experience
   * @return experience
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getExperience() {
    return experience;
  }


  @JsonProperty(JSON_PROPERTY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperience(Integer experience) {
    this.experience = experience;
  }


  public SearchProfilePostRequestFilter newBornExperience(Boolean newBornExperience) {
    
    this.newBornExperience = newBornExperience;
    return this;
  }

   /**
   * Get newBornExperience
   * @return newBornExperience
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_BORN_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNewBornExperience() {
    return newBornExperience;
  }


  @JsonProperty(JSON_PROPERTY_NEW_BORN_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewBornExperience(Boolean newBornExperience) {
    this.newBornExperience = newBornExperience;
  }


  public SearchProfilePostRequestFilter childrenAge(List<ChildrenAgeEnum> childrenAge) {
    
    this.childrenAge = childrenAge;
    return this;
  }

  public SearchProfilePostRequestFilter addChildrenAgeItem(ChildrenAgeEnum childrenAgeItem) {
    if (this.childrenAge == null) {
      this.childrenAge = new ArrayList<>();
    }
    this.childrenAge.add(childrenAgeItem);
    return this;
  }

   /**
   * Get childrenAge
   * @return childrenAge
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChildrenAgeEnum> getChildrenAge() {
    return childrenAge;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildrenAge(List<ChildrenAgeEnum> childrenAge) {
    this.childrenAge = childrenAge;
  }


  public SearchProfilePostRequestFilter age(Integer age) {
    
    this.age = age;
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAge() {
    return age;
  }


  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAge(Integer age) {
    this.age = age;
  }


  public SearchProfilePostRequestFilter searchRadius(String searchRadius) {
    
    this.searchRadius = searchRadius;
    return this;
  }

   /**
   * Get searchRadius
   * @return searchRadius
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_RADIUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchRadius() {
    return searchRadius;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_RADIUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchRadius(String searchRadius) {
    this.searchRadius = searchRadius;
  }


  public SearchProfilePostRequestFilter tags(List<TagsEnum> tags) {
    
    this.tags = tags;
    return this;
  }

  public SearchProfilePostRequestFilter addTagsItem(TagsEnum tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagsEnum> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<TagsEnum> tags) {
    this.tags = tags;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchProfilePostRequestFilter searchProfilePostRequestFilter = (SearchProfilePostRequestFilter) o;
    return Objects.equals(this.childcareTypes, searchProfilePostRequestFilter.childcareTypes) &&
        Objects.equals(this.jobTypes, searchProfilePostRequestFilter.jobTypes) &&
        Objects.equals(this.hourlyRateMin, searchProfilePostRequestFilter.hourlyRateMin) &&
        Objects.equals(this.hourlyRateMax, searchProfilePostRequestFilter.hourlyRateMax) &&
        Objects.equals(this.gender, searchProfilePostRequestFilter.gender) &&
        Objects.equals(this.experience, searchProfilePostRequestFilter.experience) &&
        Objects.equals(this.newBornExperience, searchProfilePostRequestFilter.newBornExperience) &&
        Objects.equals(this.childrenAge, searchProfilePostRequestFilter.childrenAge) &&
        Objects.equals(this.age, searchProfilePostRequestFilter.age) &&
        Objects.equals(this.searchRadius, searchProfilePostRequestFilter.searchRadius) &&
        Objects.equals(this.tags, searchProfilePostRequestFilter.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childcareTypes, jobTypes, hourlyRateMin, hourlyRateMax, gender, experience, newBornExperience, childrenAge, age, searchRadius, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchProfilePostRequestFilter {\n");
    sb.append("    childcareTypes: ").append(toIndentedString(childcareTypes)).append("\n");
    sb.append("    jobTypes: ").append(toIndentedString(jobTypes)).append("\n");
    sb.append("    hourlyRateMin: ").append(toIndentedString(hourlyRateMin)).append("\n");
    sb.append("    hourlyRateMax: ").append(toIndentedString(hourlyRateMax)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    newBornExperience: ").append(toIndentedString(newBornExperience)).append("\n");
    sb.append("    childrenAge: ").append(toIndentedString(childrenAge)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    searchRadius: ").append(toIndentedString(searchRadius)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

