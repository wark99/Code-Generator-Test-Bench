/*
 * Reference
 * The DoDays API reference.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@dodays.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StudentGoal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StudentStage
 */
@JsonPropertyOrder({
  StudentStage.JSON_PROPERTY_ID,
  StudentStage.JSON_PROPERTY_NAME,
  StudentStage.JSON_PROPERTY_ORGANISER_NAME,
  StudentStage.JSON_PROPERTY_ACTIVE,
  StudentStage.JSON_PROPERTY_AWARDED_ON,
  StudentStage.JSON_PROPERTY_GOALS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:23:35.686627593Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class StudentStage {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORGANISER_NAME = "organiser_name";
  private String organiserName;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AWARDED_ON = "awarded_on";
  private LocalDate awardedOn;

  public static final String JSON_PROPERTY_GOALS = "goals";
  private List<StudentGoal> goals;

  public StudentStage() {
  }

  public StudentStage id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public StudentStage name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public StudentStage organiserName(String organiserName) {
    
    this.organiserName = organiserName;
    return this;
  }

   /**
   * Get organiserName
   * @return organiserName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANISER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganiserName() {
    return organiserName;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganiserName(String organiserName) {
    this.organiserName = organiserName;
  }


  public StudentStage active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public StudentStage awardedOn(LocalDate awardedOn) {
    
    this.awardedOn = awardedOn;
    return this;
  }

   /**
   * Get awardedOn
   * @return awardedOn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AWARDED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getAwardedOn() {
    return awardedOn;
  }


  @JsonProperty(JSON_PROPERTY_AWARDED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAwardedOn(LocalDate awardedOn) {
    this.awardedOn = awardedOn;
  }


  public StudentStage goals(List<StudentGoal> goals) {
    
    this.goals = goals;
    return this;
  }

  public StudentStage addGoalsItem(StudentGoal goalsItem) {
    if (this.goals == null) {
      this.goals = new ArrayList<>();
    }
    this.goals.add(goalsItem);
    return this;
  }

   /**
   * Get goals
   * @return goals
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StudentGoal> getGoals() {
    return goals;
  }


  @JsonProperty(JSON_PROPERTY_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGoals(List<StudentGoal> goals) {
    this.goals = goals;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StudentStage studentStage = (StudentStage) o;
    return Objects.equals(this.id, studentStage.id) &&
        Objects.equals(this.name, studentStage.name) &&
        Objects.equals(this.organiserName, studentStage.organiserName) &&
        Objects.equals(this.active, studentStage.active) &&
        Objects.equals(this.awardedOn, studentStage.awardedOn) &&
        Objects.equals(this.goals, studentStage.goals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, organiserName, active, awardedOn, goals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StudentStage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organiserName: ").append(toIndentedString(organiserName)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    awardedOn: ").append(toIndentedString(awardedOn)).append("\n");
    sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

