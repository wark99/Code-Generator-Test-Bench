/*
 * API ESG PMI - assessment
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AreaScore;
import org.openapitools.client.model.GlobalScore;
import org.openapitools.client.model.IndicatoriScore;
import org.openapitools.client.model.SubAreaScore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScoreSubResponseModel
 */
@JsonPropertyOrder({
  ScoreSubResponseModel.JSON_PROPERTY_SUBAREAS,
  ScoreSubResponseModel.JSON_PROPERTY_AREAS,
  ScoreSubResponseModel.JSON_PROPERTY_INDICATORS,
  ScoreSubResponseModel.JSON_PROPERTY_GLOBAL_SCORE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:04.261563944Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ScoreSubResponseModel {
  public static final String JSON_PROPERTY_SUBAREAS = "subareas";
  private List<SubAreaScore> subareas = new ArrayList<>();

  public static final String JSON_PROPERTY_AREAS = "areas";
  private List<AreaScore> areas = new ArrayList<>();

  public static final String JSON_PROPERTY_INDICATORS = "indicators";
  private List<IndicatoriScore> indicators = new ArrayList<>();

  public static final String JSON_PROPERTY_GLOBAL_SCORE = "global_score";
  private GlobalScore globalScore;

  public ScoreSubResponseModel() {
  }

  public ScoreSubResponseModel subareas(List<SubAreaScore> subareas) {
    
    this.subareas = subareas;
    return this;
  }

  public ScoreSubResponseModel addSubareasItem(SubAreaScore subareasItem) {
    if (this.subareas == null) {
      this.subareas = new ArrayList<>();
    }
    this.subareas.add(subareasItem);
    return this;
  }

   /**
   * Get subareas
   * @return subareas
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBAREAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SubAreaScore> getSubareas() {
    return subareas;
  }


  @JsonProperty(JSON_PROPERTY_SUBAREAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubareas(List<SubAreaScore> subareas) {
    this.subareas = subareas;
  }


  public ScoreSubResponseModel areas(List<AreaScore> areas) {
    
    this.areas = areas;
    return this;
  }

  public ScoreSubResponseModel addAreasItem(AreaScore areasItem) {
    if (this.areas == null) {
      this.areas = new ArrayList<>();
    }
    this.areas.add(areasItem);
    return this;
  }

   /**
   * Get areas
   * @return areas
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AREAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AreaScore> getAreas() {
    return areas;
  }


  @JsonProperty(JSON_PROPERTY_AREAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAreas(List<AreaScore> areas) {
    this.areas = areas;
  }


  public ScoreSubResponseModel indicators(List<IndicatoriScore> indicators) {
    
    this.indicators = indicators;
    return this;
  }

  public ScoreSubResponseModel addIndicatorsItem(IndicatoriScore indicatorsItem) {
    if (this.indicators == null) {
      this.indicators = new ArrayList<>();
    }
    this.indicators.add(indicatorsItem);
    return this;
  }

   /**
   * Get indicators
   * @return indicators
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<IndicatoriScore> getIndicators() {
    return indicators;
  }


  @JsonProperty(JSON_PROPERTY_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndicators(List<IndicatoriScore> indicators) {
    this.indicators = indicators;
  }


  public ScoreSubResponseModel globalScore(GlobalScore globalScore) {
    
    this.globalScore = globalScore;
    return this;
  }

   /**
   * Get globalScore
   * @return globalScore
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GLOBAL_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GlobalScore getGlobalScore() {
    return globalScore;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalScore(GlobalScore globalScore) {
    this.globalScore = globalScore;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScoreSubResponseModel scoreSubResponseModel = (ScoreSubResponseModel) o;
    return Objects.equals(this.subareas, scoreSubResponseModel.subareas) &&
        Objects.equals(this.areas, scoreSubResponseModel.areas) &&
        Objects.equals(this.indicators, scoreSubResponseModel.indicators) &&
        Objects.equals(this.globalScore, scoreSubResponseModel.globalScore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subareas, areas, indicators, globalScore);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScoreSubResponseModel {\n");
    sb.append("    subareas: ").append(toIndentedString(subareas)).append("\n");
    sb.append("    areas: ").append(toIndentedString(areas)).append("\n");
    sb.append("    indicators: ").append(toIndentedString(indicators)).append("\n");
    sb.append("    globalScore: ").append(toIndentedString(globalScore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

