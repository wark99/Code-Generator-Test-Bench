/*
 * Customer Authorization API
 *  # Introduction Customer Authorization API The Customer Authorization API is the web service that allows you to exchange your application's `Client ID` and `Client Secret` for an `Access Token`. You will need to use the `accessToken` as authentication for all the other web requests, in the form of a HTTP Header as it follows: ``` Authorization: Bearer {accessToken} ```   Data API The Data API is the web service that allows you to obtain three kinds of data related to your users:    - Bank Account data   - Bank Transactions data   - Credit Score (VS 4.0) data   - Credit Report (VS 4.0) data 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vs4plus@vantagescore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Addresses3;
import org.openapitools.client.model.ConsumerAttributes;
import org.openapitools.client.model.CreditCards;
import org.openapitools.client.model.DateOfBirths;
import org.openapitools.client.model.DateOfExpiration;
import org.openapitools.client.model.DriversLicense;
import org.openapitools.client.model.Emails;
import org.openapitools.client.model.Employments;
import org.openapitools.client.model.ModelCharacteristics;
import org.openapitools.client.model.Names;
import org.openapitools.client.model.Phone;
import org.openapitools.client.model.SocialSecurities;
import org.openapitools.client.model.Vehicles;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicative2
 */
@JsonPropertyOrder({
  Indicative2.JSON_PROPERTY_ADDRESSES,
  Indicative2.JSON_PROPERTY_AGES,
  Indicative2.JSON_PROPERTY_CONSUMER_ATTRIBUTES,
  Indicative2.JSON_PROPERTY_CREDIT_CARDS,
  Indicative2.JSON_PROPERTY_DATE_DECEASED,
  Indicative2.JSON_PROPERTY_DATE_OF_BIRTHS,
  Indicative2.JSON_PROPERTY_DRIVERS_LICENSE,
  Indicative2.JSON_PROPERTY_EMPLOYMENTS,
  Indicative2.JSON_PROPERTY_GENDERS,
  Indicative2.JSON_PROPERTY_MODEL_CHARACTERISTICS,
  Indicative2.JSON_PROPERTY_NAMES,
  Indicative2.JSON_PROPERTY_PHONES,
  Indicative2.JSON_PROPERTY_SOCIAL_SECURITIES,
  Indicative2.JSON_PROPERTY_STATE_I_D,
  Indicative2.JSON_PROPERTY_VEHICLES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:26:20.567624608Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Indicative2 {
  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<Addresses3> addresses;

  public static final String JSON_PROPERTY_AGES = "ages";
  private List<Emails> ages;

  public static final String JSON_PROPERTY_CONSUMER_ATTRIBUTES = "consumerAttributes";
  private ConsumerAttributes consumerAttributes;

  public static final String JSON_PROPERTY_CREDIT_CARDS = "creditCards";
  private List<CreditCards> creditCards;

  public static final String JSON_PROPERTY_DATE_DECEASED = "dateDeceased";
  private DateOfExpiration dateDeceased;

  public static final String JSON_PROPERTY_DATE_OF_BIRTHS = "dateOfBirths";
  private List<DateOfBirths> dateOfBirths;

  public static final String JSON_PROPERTY_DRIVERS_LICENSE = "driversLicense";
  private DriversLicense driversLicense;

  public static final String JSON_PROPERTY_EMPLOYMENTS = "employments";
  private List<Employments> employments;

  public static final String JSON_PROPERTY_GENDERS = "genders";
  private List<Emails> genders;

  public static final String JSON_PROPERTY_MODEL_CHARACTERISTICS = "modelCharacteristics";
  private ModelCharacteristics modelCharacteristics;

  public static final String JSON_PROPERTY_NAMES = "names";
  private List<Names> names;

  public static final String JSON_PROPERTY_PHONES = "phones";
  private List<Phone> phones;

  public static final String JSON_PROPERTY_SOCIAL_SECURITIES = "socialSecurities";
  private List<SocialSecurities> socialSecurities;

  public static final String JSON_PROPERTY_STATE_I_D = "stateID";
  private DriversLicense stateID;

  public static final String JSON_PROPERTY_VEHICLES = "vehicles";
  private List<Vehicles> vehicles;

  public Indicative2() {
  }

  public Indicative2 addresses(List<Addresses3> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public Indicative2 addAddressesItem(Addresses3 addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Addresses3> getAddresses() {
    return addresses;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddresses(List<Addresses3> addresses) {
    this.addresses = addresses;
  }


  public Indicative2 ages(List<Emails> ages) {
    
    this.ages = ages;
    return this;
  }

  public Indicative2 addAgesItem(Emails agesItem) {
    if (this.ages == null) {
      this.ages = new ArrayList<>();
    }
    this.ages.add(agesItem);
    return this;
  }

   /**
   * Get ages
   * @return ages
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Emails> getAges() {
    return ages;
  }


  @JsonProperty(JSON_PROPERTY_AGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAges(List<Emails> ages) {
    this.ages = ages;
  }


  public Indicative2 consumerAttributes(ConsumerAttributes consumerAttributes) {
    
    this.consumerAttributes = consumerAttributes;
    return this;
  }

   /**
   * Get consumerAttributes
   * @return consumerAttributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsumerAttributes getConsumerAttributes() {
    return consumerAttributes;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumerAttributes(ConsumerAttributes consumerAttributes) {
    this.consumerAttributes = consumerAttributes;
  }


  public Indicative2 creditCards(List<CreditCards> creditCards) {
    
    this.creditCards = creditCards;
    return this;
  }

  public Indicative2 addCreditCardsItem(CreditCards creditCardsItem) {
    if (this.creditCards == null) {
      this.creditCards = new ArrayList<>();
    }
    this.creditCards.add(creditCardsItem);
    return this;
  }

   /**
   * Get creditCards
   * @return creditCards
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_CARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreditCards> getCreditCards() {
    return creditCards;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_CARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditCards(List<CreditCards> creditCards) {
    this.creditCards = creditCards;
  }


  public Indicative2 dateDeceased(DateOfExpiration dateDeceased) {
    
    this.dateDeceased = dateDeceased;
    return this;
  }

   /**
   * Get dateDeceased
   * @return dateDeceased
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_DECEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateOfExpiration getDateDeceased() {
    return dateDeceased;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DECEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateDeceased(DateOfExpiration dateDeceased) {
    this.dateDeceased = dateDeceased;
  }


  public Indicative2 dateOfBirths(List<DateOfBirths> dateOfBirths) {
    
    this.dateOfBirths = dateOfBirths;
    return this;
  }

  public Indicative2 addDateOfBirthsItem(DateOfBirths dateOfBirthsItem) {
    if (this.dateOfBirths == null) {
      this.dateOfBirths = new ArrayList<>();
    }
    this.dateOfBirths.add(dateOfBirthsItem);
    return this;
  }

   /**
   * Get dateOfBirths
   * @return dateOfBirths
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DateOfBirths> getDateOfBirths() {
    return dateOfBirths;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirths(List<DateOfBirths> dateOfBirths) {
    this.dateOfBirths = dateOfBirths;
  }


  public Indicative2 driversLicense(DriversLicense driversLicense) {
    
    this.driversLicense = driversLicense;
    return this;
  }

   /**
   * Get driversLicense
   * @return driversLicense
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DRIVERS_LICENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DriversLicense getDriversLicense() {
    return driversLicense;
  }


  @JsonProperty(JSON_PROPERTY_DRIVERS_LICENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDriversLicense(DriversLicense driversLicense) {
    this.driversLicense = driversLicense;
  }


  public Indicative2 employments(List<Employments> employments) {
    
    this.employments = employments;
    return this;
  }

  public Indicative2 addEmploymentsItem(Employments employmentsItem) {
    if (this.employments == null) {
      this.employments = new ArrayList<>();
    }
    this.employments.add(employmentsItem);
    return this;
  }

   /**
   * Get employments
   * @return employments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Employments> getEmployments() {
    return employments;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployments(List<Employments> employments) {
    this.employments = employments;
  }


  public Indicative2 genders(List<Emails> genders) {
    
    this.genders = genders;
    return this;
  }

  public Indicative2 addGendersItem(Emails gendersItem) {
    if (this.genders == null) {
      this.genders = new ArrayList<>();
    }
    this.genders.add(gendersItem);
    return this;
  }

   /**
   * Get genders
   * @return genders
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Emails> getGenders() {
    return genders;
  }


  @JsonProperty(JSON_PROPERTY_GENDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGenders(List<Emails> genders) {
    this.genders = genders;
  }


  public Indicative2 modelCharacteristics(ModelCharacteristics modelCharacteristics) {
    
    this.modelCharacteristics = modelCharacteristics;
    return this;
  }

   /**
   * Get modelCharacteristics
   * @return modelCharacteristics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL_CHARACTERISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModelCharacteristics getModelCharacteristics() {
    return modelCharacteristics;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_CHARACTERISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelCharacteristics(ModelCharacteristics modelCharacteristics) {
    this.modelCharacteristics = modelCharacteristics;
  }


  public Indicative2 names(List<Names> names) {
    
    this.names = names;
    return this;
  }

  public Indicative2 addNamesItem(Names namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Names> getNames() {
    return names;
  }


  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNames(List<Names> names) {
    this.names = names;
  }


  public Indicative2 phones(List<Phone> phones) {
    
    this.phones = phones;
    return this;
  }

  public Indicative2 addPhonesItem(Phone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * Get phones
   * @return phones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Phone> getPhones() {
    return phones;
  }


  @JsonProperty(JSON_PROPERTY_PHONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhones(List<Phone> phones) {
    this.phones = phones;
  }


  public Indicative2 socialSecurities(List<SocialSecurities> socialSecurities) {
    
    this.socialSecurities = socialSecurities;
    return this;
  }

  public Indicative2 addSocialSecuritiesItem(SocialSecurities socialSecuritiesItem) {
    if (this.socialSecurities == null) {
      this.socialSecurities = new ArrayList<>();
    }
    this.socialSecurities.add(socialSecuritiesItem);
    return this;
  }

   /**
   * Get socialSecurities
   * @return socialSecurities
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCIAL_SECURITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SocialSecurities> getSocialSecurities() {
    return socialSecurities;
  }


  @JsonProperty(JSON_PROPERTY_SOCIAL_SECURITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocialSecurities(List<SocialSecurities> socialSecurities) {
    this.socialSecurities = socialSecurities;
  }


  public Indicative2 stateID(DriversLicense stateID) {
    
    this.stateID = stateID;
    return this;
  }

   /**
   * Get stateID
   * @return stateID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DriversLicense getStateID() {
    return stateID;
  }


  @JsonProperty(JSON_PROPERTY_STATE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateID(DriversLicense stateID) {
    this.stateID = stateID;
  }


  public Indicative2 vehicles(List<Vehicles> vehicles) {
    
    this.vehicles = vehicles;
    return this;
  }

  public Indicative2 addVehiclesItem(Vehicles vehiclesItem) {
    if (this.vehicles == null) {
      this.vehicles = new ArrayList<>();
    }
    this.vehicles.add(vehiclesItem);
    return this;
  }

   /**
   * Get vehicles
   * @return vehicles
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Vehicles> getVehicles() {
    return vehicles;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicles(List<Vehicles> vehicles) {
    this.vehicles = vehicles;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Indicative2 indicative2 = (Indicative2) o;
    return Objects.equals(this.addresses, indicative2.addresses) &&
        Objects.equals(this.ages, indicative2.ages) &&
        Objects.equals(this.consumerAttributes, indicative2.consumerAttributes) &&
        Objects.equals(this.creditCards, indicative2.creditCards) &&
        Objects.equals(this.dateDeceased, indicative2.dateDeceased) &&
        Objects.equals(this.dateOfBirths, indicative2.dateOfBirths) &&
        Objects.equals(this.driversLicense, indicative2.driversLicense) &&
        Objects.equals(this.employments, indicative2.employments) &&
        Objects.equals(this.genders, indicative2.genders) &&
        Objects.equals(this.modelCharacteristics, indicative2.modelCharacteristics) &&
        Objects.equals(this.names, indicative2.names) &&
        Objects.equals(this.phones, indicative2.phones) &&
        Objects.equals(this.socialSecurities, indicative2.socialSecurities) &&
        Objects.equals(this.stateID, indicative2.stateID) &&
        Objects.equals(this.vehicles, indicative2.vehicles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, ages, consumerAttributes, creditCards, dateDeceased, dateOfBirths, driversLicense, employments, genders, modelCharacteristics, names, phones, socialSecurities, stateID, vehicles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Indicative2 {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    ages: ").append(toIndentedString(ages)).append("\n");
    sb.append("    consumerAttributes: ").append(toIndentedString(consumerAttributes)).append("\n");
    sb.append("    creditCards: ").append(toIndentedString(creditCards)).append("\n");
    sb.append("    dateDeceased: ").append(toIndentedString(dateDeceased)).append("\n");
    sb.append("    dateOfBirths: ").append(toIndentedString(dateOfBirths)).append("\n");
    sb.append("    driversLicense: ").append(toIndentedString(driversLicense)).append("\n");
    sb.append("    employments: ").append(toIndentedString(employments)).append("\n");
    sb.append("    genders: ").append(toIndentedString(genders)).append("\n");
    sb.append("    modelCharacteristics: ").append(toIndentedString(modelCharacteristics)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    socialSecurities: ").append(toIndentedString(socialSecurities)).append("\n");
    sb.append("    stateID: ").append(toIndentedString(stateID)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

