/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MailboxSignatureElement;
import org.openapitools.client.model.VerifiedEmail;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MailboxSignature
 */
@JsonPropertyOrder({
  MailboxSignature.JSON_PROPERTY_SIGNATURES,
  MailboxSignature.JSON_PROPERTY_DEFAULT_SIGNATURE_ID,
  MailboxSignature.JSON_PROPERTY_VALID_EMAILS,
  MailboxSignature.JSON_PROPERTY_POSITION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class MailboxSignature {
  public static final String JSON_PROPERTY_SIGNATURES = "signatures";
  private List<MailboxSignatureElement> signatures;

  public static final String JSON_PROPERTY_DEFAULT_SIGNATURE_ID = "default_signature_id";
  private Integer defaultSignatureId;

  public static final String JSON_PROPERTY_VALID_EMAILS = "valid_emails";
  private List<VerifiedEmail> validEmails;

  /**
   * Signature position  
   */
  public enum PositionEnum {
    BOTTOM("bottom"),
    
    TOP("top");

    private String value;

    PositionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PositionEnum fromValue(String value) {
      for (PositionEnum b : PositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_POSITION = "position";
  private PositionEnum position;

  public MailboxSignature() {
  }

  public MailboxSignature signatures(List<MailboxSignatureElement> signatures) {
    
    this.signatures = signatures;
    return this;
  }

  public MailboxSignature addSignaturesItem(MailboxSignatureElement signaturesItem) {
    if (this.signatures == null) {
      this.signatures = new ArrayList<>();
    }
    this.signatures.add(signaturesItem);
    return this;
  }

   /**
   * Get signatures
   * @return signatures
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MailboxSignatureElement> getSignatures() {
    return signatures;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignatures(List<MailboxSignatureElement> signatures) {
    this.signatures = signatures;
  }


  public MailboxSignature defaultSignatureId(Integer defaultSignatureId) {
    
    this.defaultSignatureId = defaultSignatureId;
    return this;
  }

   /**
   * Default signature identifier  
   * @return defaultSignatureId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_SIGNATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDefaultSignatureId() {
    return defaultSignatureId;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_SIGNATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultSignatureId(Integer defaultSignatureId) {
    this.defaultSignatureId = defaultSignatureId;
  }


  public MailboxSignature validEmails(List<VerifiedEmail> validEmails) {
    
    this.validEmails = validEmails;
    return this;
  }

  public MailboxSignature addValidEmailsItem(VerifiedEmail validEmailsItem) {
    if (this.validEmails == null) {
      this.validEmails = new ArrayList<>();
    }
    this.validEmails.add(validEmailsItem);
    return this;
  }

   /**
   * Get validEmails
   * @return validEmails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VerifiedEmail> getValidEmails() {
    return validEmails;
  }


  @JsonProperty(JSON_PROPERTY_VALID_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidEmails(List<VerifiedEmail> validEmails) {
    this.validEmails = validEmails;
  }


  public MailboxSignature position(PositionEnum position) {
    
    this.position = position;
    return this;
  }

   /**
   * Signature position  
   * @return position
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PositionEnum getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(PositionEnum position) {
    this.position = position;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailboxSignature mailboxSignature = (MailboxSignature) o;
    return Objects.equals(this.signatures, mailboxSignature.signatures) &&
        Objects.equals(this.defaultSignatureId, mailboxSignature.defaultSignatureId) &&
        Objects.equals(this.validEmails, mailboxSignature.validEmails) &&
        Objects.equals(this.position, mailboxSignature.position);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signatures, defaultSignatureId, validEmails, position);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailboxSignature {\n");
    sb.append("    signatures: ").append(toIndentedString(signatures)).append("\n");
    sb.append("    defaultSignatureId: ").append(toIndentedString(defaultSignatureId)).append("\n");
    sb.append("    validEmails: ").append(toIndentedString(validEmails)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

