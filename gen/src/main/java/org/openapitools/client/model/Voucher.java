/*
 * UNIQREWARDS Client API v3
 * The UNIQREWARDS Client API v3 enables our clients to issue digital vouchers. Retrieval of product details, catalogues, and vouchers status and details is also supported by this API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support.api@uniqrewards.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The voucher object. Contains attributes specific to the voucher and others inherited from the product from which it is issued.
 */
@JsonPropertyOrder({
  Voucher.JSON_PROPERTY_VOUCHER_CODE,
  Voucher.JSON_PROPERTY_VOUCHER_ID,
  Voucher.JSON_PROPERTY_NAME,
  Voucher.JSON_PROPERTY_STATUS,
  Voucher.JSON_PROPERTY_EXPIRATION,
  Voucher.JSON_PROPERTY_CURRENCY,
  Voucher.JSON_PROPERTY_REMAINING_AMOUNT,
  Voucher.JSON_PROPERTY_PRODUCT_CODE,
  Voucher.JSON_PROPERTY_PRODUCT_NAME,
  Voucher.JSON_PROPERTY_IS_VALUE_BASED,
  Voucher.JSON_PROPERTY_IS_STATUS_AVAILABLE,
  Voucher.JSON_PROPERTY_IS_MULTIPLE_USE,
  Voucher.JSON_PROPERTY_URL,
  Voucher.JSON_PROPERTY_SHORT_URL,
  Voucher.JSON_PROPERTY_SHORT_URL_PIN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:20:16.719976364Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Voucher {
  public static final String JSON_PROPERTY_VOUCHER_CODE = "voucher_code";
  private String voucherCode;

  public static final String JSON_PROPERTY_VOUCHER_ID = "voucher_id";
  private UUID voucherId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * The current status of the voucher.
   */
  public enum StatusEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive"),
    
    EXPIRED("expired"),
    
    VOIDED("voided"),
    
    USED("used");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EXPIRATION = "expiration";
  private OffsetDateTime expiration;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency = "SGD";

  public static final String JSON_PROPERTY_REMAINING_AMOUNT = "remaining_amount";
  private Integer remainingAmount;

  public static final String JSON_PROPERTY_PRODUCT_CODE = "product_code";
  private String productCode;

  public static final String JSON_PROPERTY_PRODUCT_NAME = "product_name";
  private String productName;

  public static final String JSON_PROPERTY_IS_VALUE_BASED = "is_value_based";
  private Boolean isValueBased;

  public static final String JSON_PROPERTY_IS_STATUS_AVAILABLE = "is_status_available";
  private Boolean isStatusAvailable;

  public static final String JSON_PROPERTY_IS_MULTIPLE_USE = "is_multiple_use";
  private Boolean isMultipleUse;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_SHORT_URL = "short_url";
  private URI shortUrl;

  public static final String JSON_PROPERTY_SHORT_URL_PIN = "short_url_pin";
  private Integer shortUrlPin;

  public Voucher() {
  }

  public Voucher voucherCode(String voucherCode) {
    
    this.voucherCode = voucherCode;
    return this;
  }

   /**
   * The unique voucher code (also referred to as the voucher number) that is accepted by the merchant.
   * @return voucherCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOUCHER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVoucherCode() {
    return voucherCode;
  }


  @JsonProperty(JSON_PROPERTY_VOUCHER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVoucherCode(String voucherCode) {
    this.voucherCode = voucherCode;
  }


  public Voucher voucherId(UUID voucherId) {
    
    this.voucherId = voucherId;
    return this;
  }

   /**
   * The unique technical reference for the voucher, used in Client API requests.
   * @return voucherId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOUCHER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getVoucherId() {
    return voucherId;
  }


  @JsonProperty(JSON_PROPERTY_VOUCHER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVoucherId(UUID voucherId) {
    this.voucherId = voucherId;
  }


  public Voucher name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the voucher as displayed to end-users, generally including its denomination.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Voucher status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The current status of the voucher.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Voucher expiration(OffsetDateTime expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * Expiration date and time of the voucher in ISO 8601 / RFC 3339 format (i.e. 2030-10-12T22:59:59+00:00).
   * @return expiration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpiration() {
    return expiration;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiration(OffsetDateTime expiration) {
    this.expiration = expiration;
  }


  public Voucher currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency code (ISO 4217 format i.e. SGD) for the voucher&#39;s amount, or an empty string for product-based (is_value_based &#x3D; false).
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Voucher remainingAmount(Integer remainingAmount) {
    
    this.remainingAmount = remainingAmount;
    return this;
  }

   /**
   * Voucher remaining amount to spend in cents for value-based vouchers, or the number of items for product-based.
   * minimum: 0
   * maximum: 100000
   * @return remainingAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRemainingAmount() {
    return remainingAmount;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemainingAmount(Integer remainingAmount) {
    this.remainingAmount = remainingAmount;
  }


  public Voucher productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * The product code identifying the product from which the voucher is issued.
   * @return productCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductCode() {
    return productCode;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public Voucher productName(String productName) {
    
    this.productName = productName;
    return this;
  }

   /**
   * The product name.
   * @return productName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductName() {
    return productName;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductName(String productName) {
    this.productName = productName;
  }


  public Voucher isValueBased(Boolean isValueBased) {
    
    this.isValueBased = isValueBased;
    return this;
  }

   /**
   * Indicates whether the voucher is value-based (true) or product-based (false).
   * @return isValueBased
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_VALUE_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsValueBased() {
    return isValueBased;
  }


  @JsonProperty(JSON_PROPERTY_IS_VALUE_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsValueBased(Boolean isValueBased) {
    this.isValueBased = isValueBased;
  }


  public Voucher isStatusAvailable(Boolean isStatusAvailable) {
    
    this.isStatusAvailable = isStatusAvailable;
    return this;
  }

   /**
   * Indicates whether the status of the voucher can be retrieved (true) or not (false).
   * @return isStatusAvailable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STATUS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsStatusAvailable() {
    return isStatusAvailable;
  }


  @JsonProperty(JSON_PROPERTY_IS_STATUS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStatusAvailable(Boolean isStatusAvailable) {
    this.isStatusAvailable = isStatusAvailable;
  }


  public Voucher isMultipleUse(Boolean isMultipleUse) {
    
    this.isMultipleUse = isMultipleUse;
    return this;
  }

   /**
   * Indicates whether the vouchers can be redeemed in multiple transactions or will be fully redeemed in a single transaction.
   * @return isMultipleUse
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MULTIPLE_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsMultipleUse() {
    return isMultipleUse;
  }


  @JsonProperty(JSON_PROPERTY_IS_MULTIPLE_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsMultipleUse(Boolean isMultipleUse) {
    this.isMultipleUse = isMultipleUse;
  }


  public Voucher url(URI url) {
    
    this.url = url;
    return this;
  }

   /**
   * Full URL providing direct access to the voucher.
   * @return url
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(URI url) {
    this.url = url;
  }


  public Voucher shortUrl(URI shortUrl) {
    
    this.shortUrl = shortUrl;
    return this;
  }

   /**
   * Shortened URL to access the voucher, used in combination with a PIN. 
   * @return shortUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getShortUrl() {
    return shortUrl;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortUrl(URI shortUrl) {
    this.shortUrl = shortUrl;
  }


  public Voucher shortUrlPin(Integer shortUrlPin) {
    
    this.shortUrlPin = shortUrlPin;
    return this;
  }

   /**
   * PIN code required to access the voucher via the short URL.
   * @return shortUrlPin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_URL_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getShortUrlPin() {
    return shortUrlPin;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_URL_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortUrlPin(Integer shortUrlPin) {
    this.shortUrlPin = shortUrlPin;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Voucher voucher = (Voucher) o;
    return Objects.equals(this.voucherCode, voucher.voucherCode) &&
        Objects.equals(this.voucherId, voucher.voucherId) &&
        Objects.equals(this.name, voucher.name) &&
        Objects.equals(this.status, voucher.status) &&
        Objects.equals(this.expiration, voucher.expiration) &&
        Objects.equals(this.currency, voucher.currency) &&
        Objects.equals(this.remainingAmount, voucher.remainingAmount) &&
        Objects.equals(this.productCode, voucher.productCode) &&
        Objects.equals(this.productName, voucher.productName) &&
        Objects.equals(this.isValueBased, voucher.isValueBased) &&
        Objects.equals(this.isStatusAvailable, voucher.isStatusAvailable) &&
        Objects.equals(this.isMultipleUse, voucher.isMultipleUse) &&
        Objects.equals(this.url, voucher.url) &&
        Objects.equals(this.shortUrl, voucher.shortUrl) &&
        Objects.equals(this.shortUrlPin, voucher.shortUrlPin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(voucherCode, voucherId, name, status, expiration, currency, remainingAmount, productCode, productName, isValueBased, isStatusAvailable, isMultipleUse, url, shortUrl, shortUrlPin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Voucher {\n");
    sb.append("    voucherCode: ").append(toIndentedString(voucherCode)).append("\n");
    sb.append("    voucherId: ").append(toIndentedString(voucherId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    remainingAmount: ").append(toIndentedString(remainingAmount)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    isValueBased: ").append(toIndentedString(isValueBased)).append("\n");
    sb.append("    isStatusAvailable: ").append(toIndentedString(isStatusAvailable)).append("\n");
    sb.append("    isMultipleUse: ").append(toIndentedString(isMultipleUse)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    shortUrl: ").append(toIndentedString(shortUrl)).append("\n");
    sb.append("    shortUrlPin: ").append(toIndentedString(shortUrlPin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

