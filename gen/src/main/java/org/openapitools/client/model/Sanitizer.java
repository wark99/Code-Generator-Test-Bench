/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Me;
import org.openapitools.client.model.Team;
import org.openapitools.client.model.Total;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Sanitizer resume, returned only when the rewind has done the sanitizing process
 */
@JsonPropertyOrder({
  Sanitizer.JSON_PROPERTY_SANITIZED,
  Sanitizer.JSON_PROPERTY_TOTAL,
  Sanitizer.JSON_PROPERTY_TEAM,
  Sanitizer.JSON_PROPERTY_ME,
  Sanitizer.JSON_PROPERTY_OTHERS
})
@JsonTypeName("sanitizer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Sanitizer {
  public static final String JSON_PROPERTY_SANITIZED = "sanitized";
  private Integer sanitized;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Total total;

  public static final String JSON_PROPERTY_TEAM = "team";
  private Team team;

  public static final String JSON_PROPERTY_ME = "me";
  private Me me;

  public static final String JSON_PROPERTY_OTHERS = "others";
  private String others;

  public Sanitizer() {
  }

  public Sanitizer sanitized(Integer sanitized) {
    
    this.sanitized = sanitized;
    return this;
  }

   /**
   * Get sanitized
   * @return sanitized
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SANITIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSanitized() {
    return sanitized;
  }


  @JsonProperty(JSON_PROPERTY_SANITIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSanitized(Integer sanitized) {
    this.sanitized = sanitized;
  }


  public Sanitizer total(Total total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Total getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Total total) {
    this.total = total;
  }


  public Sanitizer team(Team team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Team getTeam() {
    return team;
  }


  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeam(Team team) {
    this.team = team;
  }


  public Sanitizer me(Me me) {
    
    this.me = me;
    return this;
  }

   /**
   * Get me
   * @return me
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Me getMe() {
    return me;
  }


  @JsonProperty(JSON_PROPERTY_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMe(Me me) {
    this.me = me;
  }


  public Sanitizer others(String others) {
    
    this.others = others;
    return this;
  }

   /**
   * Get others
   * @return others
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOthers() {
    return others;
  }


  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOthers(String others) {
    this.others = others;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sanitizer sanitizer = (Sanitizer) o;
    return Objects.equals(this.sanitized, sanitizer.sanitized) &&
        Objects.equals(this.total, sanitizer.total) &&
        Objects.equals(this.team, sanitizer.team) &&
        Objects.equals(this.me, sanitizer.me) &&
        Objects.equals(this.others, sanitizer.others);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sanitized, total, team, me, others);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sanitizer {\n");
    sb.append("    sanitized: ").append(toIndentedString(sanitized)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    me: ").append(toIndentedString(me)).append("\n");
    sb.append("    others: ").append(toIndentedString(others)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

