/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RegisteredApplication
 */
@JsonPropertyOrder({
  RegisteredApplication.JSON_PROPERTY_PRE_APP_ID,
  RegisteredApplication.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:05:06.990716937Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class RegisteredApplication {
  public static final String JSON_PROPERTY_PRE_APP_ID = "preAppId";
  private Long preAppId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public RegisteredApplication() {
  }

  public RegisteredApplication preAppId(Long preAppId) {
    
    this.preAppId = preAppId;
    return this;
  }

   /**
   * Identifier to track the application registration from the App Registration and Get App Registration Status APIs, represented as a number
   * @return preAppId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRE_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPreAppId() {
    return preAppId;
  }


  @JsonProperty(JSON_PROPERTY_PRE_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPreAppId(Long preAppId) {
    this.preAppId = preAppId;
  }


  public RegisteredApplication status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of an app registration request. \&quot;A\&quot; means approved. \&quot;P\&quot; means pending which is the status when initially submitted or when the app is modified and awaiting approval. \&quot;R\&quot; means rejected. If it is rejected there will be a note with the rejected reason.
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisteredApplication registeredApplication = (RegisteredApplication) o;
    return Objects.equals(this.preAppId, registeredApplication.preAppId) &&
        Objects.equals(this.status, registeredApplication.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preAppId, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisteredApplication {\n");
    sb.append("    preAppId: ").append(toIndentedString(preAppId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

