/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Details of the financial institution this account is home to
 */
@JsonPropertyOrder({
  ObbInstitution.JSON_PROPERTY_INSTITUTION_ICON_URL,
  ObbInstitution.JSON_PROPERTY_INSTITUTION_ID,
  ObbInstitution.JSON_PROPERTY_INSTITUTION_NAME,
  ObbInstitution.JSON_PROPERTY_INSTITUTION_PRIMARY_COLOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-06T13:26:42.703698393Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ObbInstitution {
  public static final String JSON_PROPERTY_INSTITUTION_ICON_URL = "institutionIconUrl";
  private String institutionIconUrl;

  public static final String JSON_PROPERTY_INSTITUTION_ID = "institutionId";
  private Integer institutionId;

  public static final String JSON_PROPERTY_INSTITUTION_NAME = "institutionName";
  private String institutionName;

  public static final String JSON_PROPERTY_INSTITUTION_PRIMARY_COLOR = "institutionPrimaryColor";
  private String institutionPrimaryColor;

  public ObbInstitution() {
  }

  public ObbInstitution institutionIconUrl(String institutionIconUrl) {
    
    this.institutionIconUrl = institutionIconUrl;
    return this;
  }

   /**
   * URL of the institution logo icon for reporting
   * @return institutionIconUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstitutionIconUrl() {
    return institutionIconUrl;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionIconUrl(String institutionIconUrl) {
    this.institutionIconUrl = institutionIconUrl;
  }


  public ObbInstitution institutionId(Integer institutionId) {
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * ID of the financial institution
   * @return institutionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInstitutionId() {
    return institutionId;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstitutionId(Integer institutionId) {
    this.institutionId = institutionId;
  }


  public ObbInstitution institutionName(String institutionName) {
    
    this.institutionName = institutionName;
    return this;
  }

   /**
   * Name of the financial institution
   * @return institutionName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstitutionName() {
    return institutionName;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }


  public ObbInstitution institutionPrimaryColor(String institutionPrimaryColor) {
    
    this.institutionPrimaryColor = institutionPrimaryColor;
    return this;
  }

   /**
   * Primary branding color of the institution, in hex color format
   * @return institutionPrimaryColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTITUTION_PRIMARY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstitutionPrimaryColor() {
    return institutionPrimaryColor;
  }


  @JsonProperty(JSON_PROPERTY_INSTITUTION_PRIMARY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstitutionPrimaryColor(String institutionPrimaryColor) {
    this.institutionPrimaryColor = institutionPrimaryColor;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObbInstitution obbInstitution = (ObbInstitution) o;
    return Objects.equals(this.institutionIconUrl, obbInstitution.institutionIconUrl) &&
        Objects.equals(this.institutionId, obbInstitution.institutionId) &&
        Objects.equals(this.institutionName, obbInstitution.institutionName) &&
        Objects.equals(this.institutionPrimaryColor, obbInstitution.institutionPrimaryColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(institutionIconUrl, institutionId, institutionName, institutionPrimaryColor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObbInstitution {\n");
    sb.append("    institutionIconUrl: ").append(toIndentedString(institutionIconUrl)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("    institutionPrimaryColor: ").append(toIndentedString(institutionPrimaryColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

