/*
 * CRM Cotización
 * CRM Cotización
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.FormFieldTypeEnum;
import org.openapitools.client.model.Options;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContactSchemaFieldDTO
 */
@JsonPropertyOrder({
  ContactSchemaFieldDTO.JSON_PROPERTY_IS_INDEX,
  ContactSchemaFieldDTO.JSON_PROPERTY_NAME,
  ContactSchemaFieldDTO.JSON_PROPERTY_TYPE,
  ContactSchemaFieldDTO.JSON_PROPERTY_REQUIRED,
  ContactSchemaFieldDTO.JSON_PROPERTY_ORDER,
  ContactSchemaFieldDTO.JSON_PROPERTY_LABEL,
  ContactSchemaFieldDTO.JSON_PROPERTY_PLACEHOLDER,
  ContactSchemaFieldDTO.JSON_PROPERTY_OPTIONS,
  ContactSchemaFieldDTO.JSON_PROPERTY_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:21:21.037021681Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ContactSchemaFieldDTO {
  public static final String JSON_PROPERTY_IS_INDEX = "isIndex";
  private Boolean isIndex;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private FormFieldTypeEnum type;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  private Boolean required;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_PLACEHOLDER = "placeholder";
  private String placeholder;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private Options options;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private String metadata;

  public ContactSchemaFieldDTO() {
  }

  public ContactSchemaFieldDTO isIndex(Boolean isIndex) {
    
    this.isIndex = isIndex;
    return this;
  }

   /**
   * Get isIndex
   * @return isIndex
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsIndex() {
    return isIndex;
  }


  @JsonProperty(JSON_PROPERTY_IS_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsIndex(Boolean isIndex) {
    this.isIndex = isIndex;
  }


  public ContactSchemaFieldDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ContactSchemaFieldDTO type(FormFieldTypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FormFieldTypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(FormFieldTypeEnum type) {
    this.type = type;
  }


  public ContactSchemaFieldDTO required(Boolean required) {
    
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequired(Boolean required) {
    this.required = required;
  }


  public ContactSchemaFieldDTO order(Integer order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrder(Integer order) {
    this.order = order;
  }


  public ContactSchemaFieldDTO label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLabel(String label) {
    this.label = label;
  }


  public ContactSchemaFieldDTO placeholder(String placeholder) {
    
    this.placeholder = placeholder;
    return this;
  }

   /**
   * Get placeholder
   * @return placeholder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACEHOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlaceholder() {
    return placeholder;
  }


  @JsonProperty(JSON_PROPERTY_PLACEHOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceholder(String placeholder) {
    this.placeholder = placeholder;
  }


  public ContactSchemaFieldDTO options(Options options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Options getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(Options options) {
    this.options = options;
  }


  public ContactSchemaFieldDTO metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactSchemaFieldDTO contactSchemaFieldDTO = (ContactSchemaFieldDTO) o;
    return Objects.equals(this.isIndex, contactSchemaFieldDTO.isIndex) &&
        Objects.equals(this.name, contactSchemaFieldDTO.name) &&
        Objects.equals(this.type, contactSchemaFieldDTO.type) &&
        Objects.equals(this.required, contactSchemaFieldDTO.required) &&
        Objects.equals(this.order, contactSchemaFieldDTO.order) &&
        Objects.equals(this.label, contactSchemaFieldDTO.label) &&
        Objects.equals(this.placeholder, contactSchemaFieldDTO.placeholder) &&
        Objects.equals(this.options, contactSchemaFieldDTO.options) &&
        Objects.equals(this.metadata, contactSchemaFieldDTO.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isIndex, name, type, required, order, label, placeholder, options, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactSchemaFieldDTO {\n");
    sb.append("    isIndex: ").append(toIndentedString(isIndex)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    placeholder: ").append(toIndentedString(placeholder)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

