/*
 * API Reference - Developer tools
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@infomaniak.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Language
 */
@JsonPropertyOrder({
  Language.JSON_PROPERTY_ID,
  Language.JSON_PROPERTY_NAME,
  Language.JSON_PROPERTY_SHORT_NAME,
  Language.JSON_PROPERTY_LOCALE,
  Language.JSON_PROPERTY_SHORT_LOCALE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:35.261242100Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class Language {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SHORT_NAME = "short_name";
  private String shortName;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_SHORT_LOCALE = "short_locale";
  private String shortLocale;

  public Language() {
  }

  public Language id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the resource &#x60;Language&#x60;
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Integer id) {
    this.id = id;
  }


  public Language name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource &#x60;Language&#x60;
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Language shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Short name of the resource &#x60;Language&#x60;
   * @return shortName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortName() {
    return shortName;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public Language locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Represents a language identifier and a region identifier
   * @return locale
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocale(String locale) {
    this.locale = locale;
  }


  public Language shortLocale(String shortLocale) {
    
    this.shortLocale = shortLocale;
    return this;
  }

   /**
   * Represents a language identifier
   * @return shortLocale
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortLocale() {
    return shortLocale;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortLocale(String shortLocale) {
    this.shortLocale = shortLocale;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(this.id, language.id) &&
        Objects.equals(this.name, language.name) &&
        Objects.equals(this.shortName, language.shortName) &&
        Objects.equals(this.locale, language.locale) &&
        Objects.equals(this.shortLocale, language.shortLocale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, shortName, locale, shortLocale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Language {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    shortLocale: ").append(toIndentedString(shortLocale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

