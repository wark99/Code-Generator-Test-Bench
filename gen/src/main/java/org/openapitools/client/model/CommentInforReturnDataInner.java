/*
 * Youtube Music
 * Require authentication for all route except /auth and /auth/new.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CommentInforReturnDataInner
 */
@JsonPropertyOrder({
  CommentInforReturnDataInner.JSON_PROPERTY_ID,
  CommentInforReturnDataInner.JSON_PROPERTY_CONTENT,
  CommentInforReturnDataInner.JSON_PROPERTY_PLAYLIST_ID,
  CommentInforReturnDataInner.JSON_PROPERTY_USER_ID,
  CommentInforReturnDataInner.JSON_PROPERTY_CREATED_AT,
  CommentInforReturnDataInner.JSON_PROPERTY_UPDATED_AT
})
@JsonTypeName("CommentInforReturn_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:18:03.133651353Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CommentInforReturnDataInner {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<Object> id = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_CONTENT = "content";
  private JsonNullable<Object> content = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_PLAYLIST_ID = "playlistId";
  private JsonNullable<Object> playlistId = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private JsonNullable<Object> userId = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private String createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private String updatedAt;

  public CommentInforReturnDataInner() {
  }

  public CommentInforReturnDataInner id(Object id) {
    this.id = JsonNullable.<Object>of(id);
    
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<Object> id) {
    this.id = id;
  }

  public void setId(Object id) {
    this.id = JsonNullable.<Object>of(id);
  }


  public CommentInforReturnDataInner content(Object content) {
    this.content = JsonNullable.<Object>of(content);
    
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getContent() {
        return content.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getContent_JsonNullable() {
    return content;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTENT)
  public void setContent_JsonNullable(JsonNullable<Object> content) {
    this.content = content;
  }

  public void setContent(Object content) {
    this.content = JsonNullable.<Object>of(content);
  }


  public CommentInforReturnDataInner playlistId(Object playlistId) {
    this.playlistId = JsonNullable.<Object>of(playlistId);
    
    return this;
  }

   /**
   * Get playlistId
   * @return playlistId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPlaylistId() {
        return playlistId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAYLIST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPlaylistId_JsonNullable() {
    return playlistId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAYLIST_ID)
  public void setPlaylistId_JsonNullable(JsonNullable<Object> playlistId) {
    this.playlistId = playlistId;
  }

  public void setPlaylistId(Object playlistId) {
    this.playlistId = JsonNullable.<Object>of(playlistId);
  }


  public CommentInforReturnDataInner userId(Object userId) {
    this.userId = JsonNullable.<Object>of(userId);
    
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUserId() {
        return userId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUserId_JsonNullable() {
    return userId;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_ID)
  public void setUserId_JsonNullable(JsonNullable<Object> userId) {
    this.userId = userId;
  }

  public void setUserId(Object userId) {
    this.userId = JsonNullable.<Object>of(userId);
  }


  public CommentInforReturnDataInner createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public CommentInforReturnDataInner updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentInforReturnDataInner commentInforReturnDataInner = (CommentInforReturnDataInner) o;
    return equalsNullable(this.id, commentInforReturnDataInner.id) &&
        equalsNullable(this.content, commentInforReturnDataInner.content) &&
        equalsNullable(this.playlistId, commentInforReturnDataInner.playlistId) &&
        equalsNullable(this.userId, commentInforReturnDataInner.userId) &&
        Objects.equals(this.createdAt, commentInforReturnDataInner.createdAt) &&
        Objects.equals(this.updatedAt, commentInforReturnDataInner.updatedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(content), hashCodeNullable(playlistId), hashCodeNullable(userId), createdAt, updatedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentInforReturnDataInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    playlistId: ").append(toIndentedString(playlistId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

