/*
 * Customer Payment Domain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthCancel;
import org.openapitools.client.model.Authorization;
import org.openapitools.client.model.Capture;
import org.openapitools.client.model.PaymentDetailsInstallments;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentDetails
 */
@JsonPropertyOrder({
  PaymentDetails.JSON_PROPERTY_AUTHORIZATIONS,
  PaymentDetails.JSON_PROPERTY_CAPTURES,
  PaymentDetails.JSON_PROPERTY_INSTALLMENTS,
  PaymentDetails.JSON_PROPERTY_CANCELS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-13T19:16:54.275857511Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class PaymentDetails {
  public static final String JSON_PROPERTY_AUTHORIZATIONS = "authorizations";
  private List<Authorization> authorizations;

  public static final String JSON_PROPERTY_CAPTURES = "captures";
  private List<Capture> captures;

  public static final String JSON_PROPERTY_INSTALLMENTS = "installments";
  private PaymentDetailsInstallments installments;

  public static final String JSON_PROPERTY_CANCELS = "cancels";
  private List<AuthCancel> cancels;

  public PaymentDetails() {
  }

  public PaymentDetails authorizations(List<Authorization> authorizations) {
    
    this.authorizations = authorizations;
    return this;
  }

  public PaymentDetails addAuthorizationsItem(Authorization authorizationsItem) {
    if (this.authorizations == null) {
      this.authorizations = new ArrayList<>();
    }
    this.authorizations.add(authorizationsItem);
    return this;
  }

   /**
   * Get authorizations
   * @return authorizations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Authorization> getAuthorizations() {
    return authorizations;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizations(List<Authorization> authorizations) {
    this.authorizations = authorizations;
  }


  public PaymentDetails captures(List<Capture> captures) {
    
    this.captures = captures;
    return this;
  }

  public PaymentDetails addCapturesItem(Capture capturesItem) {
    if (this.captures == null) {
      this.captures = new ArrayList<>();
    }
    this.captures.add(capturesItem);
    return this;
  }

   /**
   * Get captures
   * @return captures
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPTURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Capture> getCaptures() {
    return captures;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptures(List<Capture> captures) {
    this.captures = captures;
  }


  public PaymentDetails installments(PaymentDetailsInstallments installments) {
    
    this.installments = installments;
    return this;
  }

   /**
   * Get installments
   * @return installments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTALLMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentDetailsInstallments getInstallments() {
    return installments;
  }


  @JsonProperty(JSON_PROPERTY_INSTALLMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallments(PaymentDetailsInstallments installments) {
    this.installments = installments;
  }


  public PaymentDetails cancels(List<AuthCancel> cancels) {
    
    this.cancels = cancels;
    return this;
  }

  public PaymentDetails addCancelsItem(AuthCancel cancelsItem) {
    if (this.cancels == null) {
      this.cancels = new ArrayList<>();
    }
    this.cancels.add(cancelsItem);
    return this;
  }

   /**
   * Get cancels
   * @return cancels
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AuthCancel> getCancels() {
    return cancels;
  }


  @JsonProperty(JSON_PROPERTY_CANCELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancels(List<AuthCancel> cancels) {
    this.cancels = cancels;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDetails paymentDetails = (PaymentDetails) o;
    return Objects.equals(this.authorizations, paymentDetails.authorizations) &&
        Objects.equals(this.captures, paymentDetails.captures) &&
        Objects.equals(this.installments, paymentDetails.installments) &&
        Objects.equals(this.cancels, paymentDetails.cancels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizations, captures, installments, cancels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDetails {\n");
    sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
    sb.append("    captures: ").append(toIndentedString(captures)).append("\n");
    sb.append("    installments: ").append(toIndentedString(installments)).append("\n");
    sb.append("    cancels: ").append(toIndentedString(cancels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

