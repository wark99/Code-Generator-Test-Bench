/*
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.RestError;
import org.openapitools.client.model.Visit;
import org.openapitools.client.model.VisitFields;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VisitApi
 */
@Ignore
public class VisitApiTest {

    private final VisitApi api = new VisitApi();

    
    /**
     * Create a visit
     *
     * Creates a visit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVisitTest() {
        Visit visit = null;

        Visit response = api.addVisit(visit);

        // TODO: test validations
    }
    
    /**
     * Adds a vet visit
     *
     * Records the details of a new vet visit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVisitToOwnerTest() {
        Integer ownerId = null;
        Integer petId = null;
        VisitFields visitFields = null;

        Visit response = api.addVisitToOwner(ownerId, petId, visitFields);

        // TODO: test validations
    }
    
    /**
     * Delete a visit by ID
     *
     * Returns the visit or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVisitTest() {
        Integer visitId = null;

        Visit response = api.deleteVisit(visitId);

        // TODO: test validations
    }
    
    /**
     * Get a visit by ID
     *
     * Returns the visit or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVisitTest() {
        Integer visitId = null;

        Visit response = api.getVisit(visitId);

        // TODO: test validations
    }
    
    /**
     * Lists visits
     *
     * Returns an array of visit .
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVisitsTest() {

        List<Visit> response = api.listVisits();

        // TODO: test validations
    }
    
    /**
     * Update a visit by ID
     *
     * Returns the visit or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVisitTest() {
        Integer visitId = null;
        Visit visit = null;

        Visit response = api.updateVisit(visitId, visit);

        // TODO: test validations
    }
    
}
