/*
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.RestError;
import org.openapitools.client.model.Vet;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VetApi
 */
@Ignore
public class VetApiTest {

    private final VetApi api = new VetApi();

    
    /**
     * Create a Vet
     *
     * Creates a vet .
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVetTest() {
        Vet vet = null;

        Vet response = api.addVet(vet);

        // TODO: test validations
    }
    
    /**
     * Delete a vet by ID
     *
     * Returns the vet or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVetTest() {
        Integer vetId = null;

        Vet response = api.deleteVet(vetId);

        // TODO: test validations
    }
    
    /**
     * Get a vet by ID
     *
     * Returns the vet or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVetTest() {
        Integer vetId = null;

        Vet response = api.getVet(vetId);

        // TODO: test validations
    }
    
    /**
     * Lists vets
     *
     * Returns an array of vets.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVetsTest() {

        List<Vet> response = api.listVets();

        // TODO: test validations
    }
    
    /**
     * Update a vet  by ID
     *
     * Returns the vet or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVetTest() {
        Integer vetId = null;
        Vet vet = null;

        Vet response = api.updateVet(vetId, vet);

        // TODO: test validations
    }
    
}
