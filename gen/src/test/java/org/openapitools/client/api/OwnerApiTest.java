/*
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.Owner;
import org.openapitools.client.model.OwnerFields;
import org.openapitools.client.model.RestError;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OwnerApi
 */
@Ignore
public class OwnerApiTest {

    private final OwnerApi api = new OwnerApi();

    
    /**
     * Adds a pet owner
     *
     * Records the details of a new pet owner.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addOwnerTest() {
        OwnerFields ownerFields = null;

        Owner response = api.addOwner(ownerFields);

        // TODO: test validations
    }
    
    /**
     * Delete an owner by ID
     *
     * Returns the owner or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOwnerTest() {
        Integer ownerId = null;

        Owner response = api.deleteOwner(ownerId);

        // TODO: test validations
    }
    
    /**
     * Get a pet owner by ID
     *
     * Returns the pet owner or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOwnerTest() {
        Integer ownerId = null;

        Owner response = api.getOwner(ownerId);

        // TODO: test validations
    }
    
    /**
     * Lists pet owners
     *
     * Returns an array of pet owners.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOwnersTest() {
        String lastName = null;

        List<Owner> response = api.listOwners(lastName);

        // TODO: test validations
    }
    
    /**
     * Update a pet owner&#39;s details
     *
     * Updates the pet owner record with the specified details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateOwnerTest() {
        Integer ownerId = null;
        OwnerFields ownerFields = null;

        Owner response = api.updateOwner(ownerId, ownerFields);

        // TODO: test validations
    }
    
}
