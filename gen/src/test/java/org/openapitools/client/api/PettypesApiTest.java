/*
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.PetType;
import org.openapitools.client.model.RestError;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PettypesApi
 */
@Ignore
public class PettypesApiTest {

    private final PettypesApi api = new PettypesApi();

    
    /**
     * Create a pet type
     *
     * Creates a pet type .
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addPetTypeTest() {
        PetType petType = null;

        PetType response = api.addPetType(petType);

        // TODO: test validations
    }
    
    /**
     * Delete a pet type by ID
     *
     * Returns the pet type or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePetTypeTest() {
        Integer petTypeId = null;

        PetType response = api.deletePetType(petTypeId);

        // TODO: test validations
    }
    
    /**
     * Get a pet type by ID
     *
     * Returns the pet type or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPetTypeTest() {
        Integer petTypeId = null;

        PetType response = api.getPetType(petTypeId);

        // TODO: test validations
    }
    
    /**
     * Lists pet types
     *
     * Returns an array of pet types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPetTypesTest() {

        List<PetType> response = api.listPetTypes();

        // TODO: test validations
    }
    
    /**
     * Update a pet type by ID
     *
     * Returns the pet type or a 404 error.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePetTypeTest() {
        Integer petTypeId = null;
        PetType petType = null;

        PetType response = api.updatePetType(petTypeId, petType);

        // TODO: test validations
    }
    
}
