/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.ErrorResponseObject;
import org.openapitools.client.model.GetUserFollowers200Response;
import org.openapitools.client.model.GetUserProfile200Response;
import org.openapitools.client.model.UserProfileUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * Follow a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void followUserTest() {
        Integer userId = null;

        api.followUser(userId);

        // TODO: test validations
    }
    
    /**
     * Get user&#39;s followers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserFollowersTest() {
        Integer userId = null;

        GetUserFollowers200Response response = api.getUserFollowers(userId);

        // TODO: test validations
    }
    
    /**
     * Get users being followed
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserFollowingTest() {
        Integer userId = null;

        GetUserFollowers200Response response = api.getUserFollowing(userId);

        // TODO: test validations
    }
    
    /**
     * Get user profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserProfileTest() {
        Integer userId = null;

        GetUserProfile200Response response = api.getUserProfile(userId);

        // TODO: test validations
    }
    
    /**
     * Unfollow a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unfollowUserTest() {
        Integer userId = null;

        api.unfollowUser(userId);

        // TODO: test validations
    }
    
    /**
     * Update user profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserProfileTest() {
        Integer userId = null;
        UserProfileUpdate userProfileUpdate = null;

        GetUserProfile200Response response = api.updateUserProfile(userId, userProfileUpdate);

        // TODO: test validations
    }
    
}
