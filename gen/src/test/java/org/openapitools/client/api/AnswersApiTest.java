/*
 * Programming Languages Forum
 * This is the API specification for the Programming Languages Forum
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.CreateAnswer201Response;
import org.openapitools.client.model.ErrorResponseObject;
import org.openapitools.client.model.GetQuestionAnswers200Response;
import org.openapitools.client.model.NewAnswer;
import org.openapitools.client.model.UpdateAnswer;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AnswersApi
 */
@Ignore
public class AnswersApiTest {

    private final AnswersApi api = new AnswersApi();

    
    /**
     * Create a new answer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAnswerTest() {
        Integer questionId = null;
        NewAnswer newAnswer = null;

        CreateAnswer201Response response = api.createAnswer(questionId, newAnswer);

        // TODO: test validations
    }
    
    /**
     * Delete an answer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAnswerTest() {
        Integer answerId = null;

        api.deleteAnswer(answerId);

        // TODO: test validations
    }
    
    /**
     * Downvote an answer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downvoteAnswerTest() {
        Integer answerId = null;

        api.downvoteAnswer(answerId);

        // TODO: test validations
    }
    
    /**
     * Get answers for a question
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQuestionAnswersTest() {
        Integer questionId = null;

        GetQuestionAnswers200Response response = api.getQuestionAnswers(questionId);

        // TODO: test validations
    }
    
    /**
     * Update an answer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAnswerTest() {
        Integer answerId = null;
        UpdateAnswer updateAnswer = null;

        CreateAnswer201Response response = api.updateAnswer(answerId, updateAnswer);

        // TODO: test validations
    }
    
    /**
     * Upvote an answer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upvoteAnswerTest() {
        Integer answerId = null;

        api.upvoteAnswer(answerId);

        // TODO: test validations
    }
    
}
