/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for CustomerAccountPosition
 */
public class CustomerAccountPositionTest {
    private final CustomerAccountPosition model = new CustomerAccountPosition();

    /**
     * Model tests for CustomerAccountPosition
     */
    @Test
    public void testCustomerAccountPosition() {
        // TODO: test CustomerAccountPosition
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

    /**
     * Test the property 'units'
     */
    @Test
    public void unitsTest() {
        // TODO: test units
    }

    /**
     * Test the property 'currentPrice'
     */
    @Test
    public void currentPriceTest() {
        // TODO: test currentPrice
    }

    /**
     * Test the property 'securityName'
     */
    @Test
    public void securityNameTest() {
        // TODO: test securityName
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'marketValue'
     */
    @Test
    public void marketValueTest() {
        // TODO: test marketValue
    }

    /**
     * Test the property 'changePercent'
     */
    @Test
    public void changePercentTest() {
        // TODO: test changePercent
    }

    /**
     * Test the property 'dailyChange'
     */
    @Test
    public void dailyChangeTest() {
        // TODO: test dailyChange
    }

    /**
     * Test the property 'costBasis'
     */
    @Test
    public void costBasisTest() {
        // TODO: test costBasis
    }

    /**
     * Test the property 'holdType'
     */
    @Test
    public void holdTypeTest() {
        // TODO: test holdType
    }

    /**
     * Test the property 'invSecurityType'
     */
    @Test
    public void invSecurityTypeTest() {
        // TODO: test invSecurityType
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'currentPriceDate'
     */
    @Test
    public void currentPriceDateTest() {
        // TODO: test currentPriceDate
    }

    /**
     * Test the property 'securityType'
     */
    @Test
    public void securityTypeTest() {
        // TODO: test securityType
    }

    /**
     * Test the property 'mfType'
     */
    @Test
    public void mfTypeTest() {
        // TODO: test mfType
    }

    /**
     * Test the property 'posType'
     */
    @Test
    public void posTypeTest() {
        // TODO: test posType
    }

    /**
     * Test the property 'totalGLDollar'
     */
    @Test
    public void totalGLDollarTest() {
        // TODO: test totalGLDollar
    }

    /**
     * Test the property 'totalGLPercent'
     */
    @Test
    public void totalGLPercentTest() {
        // TODO: test totalGLPercent
    }

    /**
     * Test the property 'optionStrikePrice'
     */
    @Test
    public void optionStrikePriceTest() {
        // TODO: test optionStrikePrice
    }

    /**
     * Test the property 'optionType'
     */
    @Test
    public void optionTypeTest() {
        // TODO: test optionType
    }

    /**
     * Test the property 'optionSharesPerContract'
     */
    @Test
    public void optionSharesPerContractTest() {
        // TODO: test optionSharesPerContract
    }

    /**
     * Test the property 'optionExpireDate'
     */
    @Test
    public void optionExpireDateTest() {
        // TODO: test optionExpireDate
    }

    /**
     * Test the property 'fiAssetClass'
     */
    @Test
    public void fiAssetClassTest() {
        // TODO: test fiAssetClass
    }

    /**
     * Test the property 'assetClass'
     */
    @Test
    public void assetClassTest() {
        // TODO: test assetClass
    }

    /**
     * Test the property 'currencyRate'
     */
    @Test
    public void currencyRateTest() {
        // TODO: test currencyRate
    }

    /**
     * Test the property 'securityId'
     */
    @Test
    public void securityIdTest() {
        // TODO: test securityId
    }

    /**
     * Test the property 'securityIdType'
     */
    @Test
    public void securityIdTypeTest() {
        // TODO: test securityIdType
    }

    /**
     * Test the property 'costBasisPerShare'
     */
    @Test
    public void costBasisPerShareTest() {
        // TODO: test costBasisPerShare
    }

    /**
     * Test the property 'subAccountType'
     */
    @Test
    public void subAccountTypeTest() {
        // TODO: test subAccountType
    }

    /**
     * Test the property 'securityCurrency'
     */
    @Test
    public void securityCurrencyTest() {
        // TODO: test securityCurrency
    }

    /**
     * Test the property 'todayGLDollar'
     */
    @Test
    public void todayGLDollarTest() {
        // TODO: test todayGLDollar
    }

    /**
     * Test the property 'todayGLPercent'
     */
    @Test
    public void todayGLPercentTest() {
        // TODO: test todayGLPercent
    }

}
