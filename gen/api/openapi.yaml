openapi: 3.1.0
info:
  description: "API for Inventory Management System, it saves items(\"Products\")\
    \ in an Inventory, each Item has a Provider that provides it, and also there is\
    \ consumers who sonsumes therse Items(\"Products\")"
  title: Inventory Management System API
  version: Version1
servers:
- url: /
tags:
- description: Operations about consumers
  name: Consumer
- description: Operations about inventories
  name: Inventory
- description: Operations about items
  name: Item
- description: Operations about providers
  name: Provider
paths:
  /consumer/{consumerID}:
    get:
      parameters:
      - description: ID of the consumer to get
        explode: false
        in: path
        name: consumerID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: Successful operation
      summary: Get consumer by ID
      tags:
      - Consumer
      x-accepts: application/json
  /consumer/getconsumers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Consumer'
                type: array
          description: Successful operation
      summary: Get all consumers
      tags:
      - Consumer
      x-accepts: application/json
  /consumer/addNewConsumer:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Add a new consumer
      tags:
      - Consumer
      x-content-type: application/json
      x-accepts: application/json
  /consumer/deleteConsumer/{consumerID}:
    delete:
      parameters:
      - description: ID of the consumer to delete
        explode: false
        in: path
        name: consumerID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
      summary: Delete consumer by ID
      tags:
      - Consumer
      x-accepts: application/json
  /consumer/updateConsumer/{consumerID}:
    put:
      parameters:
      - description: ID of the consumer to update
        explode: false
        in: path
        name: consumerID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Update consumer by ID
      tags:
      - Consumer
      x-content-type: application/json
      x-accepts: application/json
  /inventory/{inventoryID}:
    get:
      parameters:
      - description: ID of the inventory to get
        explode: false
        in: path
        name: inventoryID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: Successful operation
      summary: Get inventory by ID
      tags:
      - Inventory
      x-accepts: application/json
  /inventory/getinventories:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Inventory'
                type: array
          description: Successful operation
      summary: Get all inventories
      tags:
      - Inventory
      x-accepts: application/json
  /inventory/addnewinventory:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Add a new inventory
      tags:
      - Inventory
      x-content-type: application/json
      x-accepts: application/json
  /inventory/deleteInventory/{inventoryID}:
    delete:
      parameters:
      - description: ID of the inventory to delete
        explode: false
        in: path
        name: inventoryID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
      summary: Delete inventory by ID
      tags:
      - Inventory
      x-accepts: application/json
  /inventory/updateInventory/{inventoryID}:
    put:
      parameters:
      - description: ID of the inventory to update
        explode: false
        in: path
        name: inventoryID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Update inventory by ID
      tags:
      - Inventory
      x-content-type: application/json
      x-accepts: application/json
  /item/getitems:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Item'
                type: array
          description: Successful operation
      summary: Get all items
      tags:
      - Item
      x-accepts: application/json
  /item/{itemID}:
    get:
      parameters:
      - description: ID of the item to get
        explode: false
        in: path
        name: itemID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful operation
      summary: Get item by ID
      tags:
      - Item
      x-accepts: application/json
  /item/additem:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Add a new item
      tags:
      - Item
      x-content-type: application/json
      x-accepts: application/json
  /item/deleteitem/{itemID}:
    delete:
      parameters:
      - description: ID of the item to delete
        explode: false
        in: path
        name: itemID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
      summary: Delete item by ID
      tags:
      - Item
      x-accepts: application/json
  /item/updateitem/{itemID}:
    put:
      parameters:
      - description: ID of the item to update
        explode: false
        in: path
        name: itemID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Update item by ID
      tags:
      - Item
      x-content-type: application/json
      x-accepts: application/json
  /provider/getproviders:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Provider'
                type: array
          description: Successful operation
      summary: Get all providers
      tags:
      - Provider
      x-accepts: application/json
  /provider/{providerID}:
    get:
      parameters:
      - description: ID of the provider to get
        explode: false
        in: path
        name: providerID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: Successful operation
      summary: Get provider by ID
      tags:
      - Provider
      x-accepts: application/json
  /provider/addprovider:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Add a new provider
      tags:
      - Provider
      x-content-type: application/json
      x-accepts: application/json
  /provider/deleteprovider/{providerID}:
    delete:
      parameters:
      - description: ID of the provider to delete
        explode: false
        in: path
        name: providerID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
      summary: Delete provider by ID
      tags:
      - Provider
      x-accepts: application/json
  /provider/updateprovider/{providerID}:
    put:
      parameters:
      - description: ID of the provider to update
        explode: false
        in: path
        name: providerID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      responses:
        "200":
          description: Successful operation
      summary: Update provider by ID
      tags:
      - Provider
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Consumer:
      example:
        consumerID: 0
        consumerLocation: consumerLocation
        items:
        - itemID: 6
          itemName: itemName
          itemBarcode: itemBarcode
          itemPrice: 1.4658129805029452
          inventory:
            ownerName: ownerName
            inventoryName: inventoryName
            inventoryID: 5
            inventoryLocation: inventoryLocation
        - itemID: 6
          itemName: itemName
          itemBarcode: itemBarcode
          itemPrice: 1.4658129805029452
          inventory:
            ownerName: ownerName
            inventoryName: inventoryName
            inventoryID: 5
            inventoryLocation: inventoryLocation
        consumerName: consumerName
        consumerBD: consumerBD
      properties:
        consumerID:
          type: integer
        consumerName:
          type: string
        consumerBD:
          type: string
        consumerLocation:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
      required:
      - consumerBD
      - consumerLocation
      - consumerName
    Inventory:
      example:
        ownerName: ownerName
        inventoryName: inventoryName
        inventoryID: 5
        inventoryLocation: inventoryLocation
      properties:
        inventoryID:
          type: integer
        inventoryName:
          type: string
        inventoryLocation:
          type: string
        ownerName:
          type: string
      required:
      - inventoryLocation
      - inventoryName
      - ownerName
    Item:
      example:
        itemID: 6
        itemName: itemName
        itemBarcode: itemBarcode
        itemPrice: 1.4658129805029452
        inventory:
          ownerName: ownerName
          inventoryName: inventoryName
          inventoryID: 5
          inventoryLocation: inventoryLocation
      properties:
        itemID:
          type: integer
        itemName:
          type: string
        itemBarcode:
          type: string
        itemPrice:
          type: number
        inventory:
          $ref: '#/components/schemas/Inventory'
      required:
      - inventory
      - itemBarcode
      - itemName
      - itemPrice
    Provider:
      example:
        providerLocation: providerLocation
        providerPNum: providerPNum
        providerID: 0
        items:
        - itemID: 6
          itemName: itemName
          itemBarcode: itemBarcode
          itemPrice: 1.4658129805029452
          inventory:
            ownerName: ownerName
            inventoryName: inventoryName
            inventoryID: 5
            inventoryLocation: inventoryLocation
        - itemID: 6
          itemName: itemName
          itemBarcode: itemBarcode
          itemPrice: 1.4658129805029452
          inventory:
            ownerName: ownerName
            inventoryName: inventoryName
            inventoryID: 5
            inventoryLocation: inventoryLocation
        providerName: providerName
      properties:
        providerID:
          type: integer
        providerName:
          type: string
        providerPNum:
          type: string
        providerLocation:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
      required:
      - providerLocation
      - providerName
      - providerPNum

