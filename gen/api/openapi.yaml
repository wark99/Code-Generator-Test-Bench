openapi: 3.1.0
info:
  contact:
    email: support@infomaniak.com
    name: Infomaniak Support
    url: https://developer.infomaniak.com/
  license:
    name: MIT License
    url: https://developer.infomaniak.com/license
  termsOfService: https://www.infomaniak.com/en/legal/general-terms-and-conditions
  title: API Reference - Developer tools
  version: 1.0.0
servers:
- url: https://api.infomaniak.com
paths:
  /1/kmeet/rooms:
    post:
      deprecated: false
      description: |-
        This endpoint allows you to plan a conference with predefined settings. It will add an event on your Infomaniak Calendar with the meeting url.
         If you just want to create a room you don't need any API calls, you can build a conference URL by adding an unique identifier to your kMeet instance url (eg: kmeet.infomaniak.com/${MY_VERY_SECRET_CONFERENCE_ID})
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlannedConference'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_kmeet_rooms_post_200_response'
          description: Default Response
        "422":
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Plan a conference
      tags:
      - Plan a conference
      x-content-type: application/json
      x-accepts: application/json
  /1/kmeet/rooms/{room_id}/settings:
    get:
      deprecated: false
      description: |
        This endpoint allows you to fetch room settings.
      parameters:
      - description: Unique identifier of the room settings
        explode: false
        in: path
        name: room_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_kmeet_rooms_post_200_response'
          description: Default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_kmeet_rooms__room_id__settings_get_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_kmeet_rooms__room_id__settings_get_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get room settings
      tags:
      - Room settings
      x-accepts: application/json
  /teams/{team_id}/top/reactions:
    get:
      description: |
        Get a list of the top reactions across all public and private channels (the user is a member of) for a given team.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetTopReactionsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: reactions posted on the current day.
          - `7_day`: reactions posted in the last 7 days.
          - `28_day`: reactions posted in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopReactionList'
          description: Top reactions retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top reactions for a team.
      tags:
      - insights
      x-accepts: application/json
  /users/me/top/reactions:
    get:
      description: |
        Get a list of the top reactions across all public and private channels (the user is a member of) for a given user.
        If no `team_id` is provided, this will also include reactions posted by the given user in direct and group messages.
        ##### Permissions
        Must be logged in as the user.
      operationId: GetTopReactionsForUser
      parameters:
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: reactions posted on the current day.
          - `7_day`: reactions posted in the last 7 days.
          - `28_day`: reactions posted in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: |
          Team ID will scope the response to a given team and exclude direct and group messages.
          ##### Permissions
          Must have `view_team` permission for the team.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopReactionList'
          description: Top reactions retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top reactions for a user.
      tags:
      - insights
      x-accepts: application/json
  /teams/{team_id}/top/channels:
    get:
      description: |
        Get a list of the top public and private channels (the user is a member of) for a given team.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetTopChannelsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: channels with posts on the current day.
          - `7_day`: channels with posts in the last 7 days.
          - `28_day`: channels with posts in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopChannelList'
          description: Top channels retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top channels for a team.
      tags:
      - insights
      x-accepts: application/json
  /users/me/top/channels:
    get:
      description: |
        Get a list of the top public and private channels (the user is a member of) for a given user.
        ##### Permissions
        Must be logged in as the user.
      operationId: GetTopChannelsForUser
      parameters:
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: channels with posts on the current day.
          - `7_day`: channels with posts in the last 7 days.
          - `28_day`: channels with posts in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: |
          Team ID will scope the response to a given team.
          ##### Permissions
          Must have `view_team` permission for the team.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopChannelList'
          description: Top channels retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top channels for a user.
      tags:
      - insights
      x-accepts: application/json
  /teams/{team_id}/top/team_members:
    get:
      description: |
        Get a list of all of the new team members that have joined the given team during the given time period.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetNewTeamMembers
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: team members who joined during the current day.
          - `7_day`: team members who joined in the last 7 days.
          - `28_day`: team members who joined in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTeamMembersList'
          description: New team members retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of new team members.
      tags:
      - insights
      x-accepts: application/json
  /teams/{team_id}/top/threads:
    get:
      description: |
        Get a list of the top threads from public and private channels (the user is a member of) for a given team.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetTopThreadsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: threads with activity on the current day.
          - `7_day`: threads with activity in the last 7 days.
          - `28_day`: threads with activity in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopThreadList'
          description: Top threads retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top threads for a team.
      tags:
      - insights
      x-accepts: application/json
  /users/me/top/threads:
    get:
      description: |
        Get a list of the top threads from public and private channels (the user is a member of and participating in the thread) for a given user.
        ##### Permissions
        Must be logged in as the user.
      operationId: GetTopThreadsForUser
      parameters:
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: threads with activity on the current day.
          - `7_day`: threads with activity in the last 7 days.
          - `28_day`: threads with activity in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: |
          Team ID will scope the response to a given team.
          ##### Permissions
          Must have `view_team` permission for the team.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopThreadList'
          description: Top threads retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top threads for a user.
      tags:
      - insights
      x-accepts: application/json
  /users/me/top/dms:
    get:
      description: |
        Get a list of the top dms for a given user.
        ##### Permissions
        Must be logged in as the user.
      operationId: GetTopDMsForUser
      parameters:
      - description: |
          Time range can be "today", "7_day", or "28_day".
          - `today`: threads with activity on the current day.
          - `7_day`: threads with activity in the last 7 days.
          - `28_day`: threads with activity in the last 28 days.
        explode: true
        in: query
        name: time_range
        required: true
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "The number of items per page, up to a maximum of 200."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopDMList'
          description: Top dms retrieved successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of the top dms for a user.
      tags:
      - insights
      x-accepts: application/json
  /users:
    get:
      description: |
        Get a page of a list of users. Based on query string parameters, select users from a team, channel, or select users not in a specific channel.

        Some basic sorting is available using the `sort` query parameter. Sorting is currently only supported when selecting users on a team.
        ##### Permissions
        Requires an active session and (if specified) membership to the channel or team being selected from.
      operationId: GetUsers
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of users per page. There is a maximum limit of 200
          users per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: The ID of the team to get users for.
        explode: true
        in: query
        name: in_team
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the team to exclude users for. Must not be used with
          "in_team" query parameter.
        explode: true
        in: query
        name: not_in_team
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the channel to get users for.
        explode: true
        in: query
        name: in_channel
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the channel to exclude users for. Must be used with
          "in_channel" query parameter.
        explode: true
        in: query
        name: not_in_channel
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the group to get users for. Must have `manage_system`
          permission.
        explode: true
        in: query
        name: in_group
        required: false
        schema:
          type: string
        style: form
      - description: "When used with `not_in_channel` or `not_in_team`, returns only\
          \ the users that are allowed to join the channel or team based on its group\
          \ constrains."
        explode: true
        in: query
        name: group_constrained
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether or not to list users that are not on any team. This\
          \ option takes precendence over `in_team`, `in_channel`, and `not_in_channel`."
        explode: true
        in: query
        name: without_team
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to list only users that are active. This option
          cannot be used along with the `inactive` option.
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to list only users that are deactivated. This
          option cannot be used along with the `active` option.
        explode: true
        in: query
        name: inactive
        required: false
        schema:
          type: boolean
        style: form
      - description: Returns users that have this role.
        explode: true
        in: query
        name: role
        required: false
        schema:
          type: string
        style: form
      - description: |
          Sort is only available in conjunction with certain options below. The paging parameter is also always available.

          ##### `in_team`
          Can be "", "last_activity_at" or "create_at".
          When left blank, sorting is done by username.
          ##### `in_channel`
          Can be "", "status".
          When left blank, sorting is done by username. `status` will sort by User's current status (Online, Away, DND, Offline), then by Username.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Comma separated string used to filter users based on any of the specified system roles

          Example: `?roles=system_admin,system_user` will return users that are either system admins or system users

        explode: true
        in: query
        name: roles
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Comma separated string used to filter users based on any of the specified channel roles, can only be used in conjunction with `in_channel`

          Example: `?in_channel=4eb6axxw7fg3je5iyasnfudc5y&channel_roles=channel_user` will return users that are only channel users and not admins or guests

        explode: true
        in: query
        name: channel_roles
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Comma separated string used to filter users based on any of the specified team roles, can only be used in conjunction with `in_team`

          Example: `?in_team=4eb6axxw7fg3je5iyasnfudc5y&team_roles=team_user` will return users that are only team users and not admins or guests

        explode: true
        in: query
        name: team_roles
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User page retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get users
      tags:
      - users
      x-accepts: application/json
  /users/ids:
    post:
      description: |
        Get a list of users based on a provided list of user ids.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUsersByIds
      parameters:
      - description: |+
          Only return users that have been modified since the given Unix timestamp (in milliseconds).

        explode: true
        in: query
        name: since
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of user ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get users by ids
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/group_channels:
    post:
      description: |+
        Get an object containing a key per group channel id in the
        query and its value as a list of users members of that group
        channel.

        The user must be a member of the group ids in the query, or
        they will be omitted from the response.
        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetUsersByGroupChannelIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of group channel ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersByGroupChannelIds_200_response'
          description: User list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get users by group channels ids
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/usernames:
    post:
      description: |
        Get a list of users based on a provided list of usernames.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUsersByUsernames
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of usernames
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get users by usernames
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/search:
    post:
      description: |
        Get a list of users based on search criteria provided in the request body. Searches are typically done against username, full name, nickname and email unless otherwise configured by the server.
        ##### Permissions
        Requires an active session and `read_channel` and/or `view_team` permissions for any channels or teams specified in the request body.
      operationId: SearchUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchUsers_request'
        description: Search criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Search users
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/autocomplete:
    get:
      description: |
        Get a list of users for the purpose of autocompleting based on the provided search term. Specify a combination of `team_id` and `channel_id` to filter results further.
        ##### Permissions
        Requires an active session and `view_team` and `read_channel` on any teams or channels used to filter the results further.
      operationId: AutocompleteUsers
      parameters:
      - description: Team ID
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      - description: Channel ID
        explode: true
        in: query
        name: channel_id
        required: false
        schema:
          type: string
        style: form
      - description: "Username, nickname first name or last name"
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |
          The maximum number of users to return in each subresult

          __Defaults to `100` if not provided.__
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAutocomplete'
          description: User autocomplete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Autocomplete users
      tags:
      - users
      x-accepts: application/json
  /users/{user_id}:
    get:
      description: |
        Get a user a object. Sensitive information will be sanitized out.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUser
      parameters:
      - description: User GUID. This can also be "me" which will point to the current
          user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a user
      tags:
      - users
      x-accepts: application/json
  /users/{user_id}/patch:
    put:
      description: |
        Partially update a user by providing only the fields you want to update. Omitted fields will not be updated. The fields that can be updated are defined in the request body, all other provided fields will be ignored.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: PatchUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser_request'
        description: User object that is to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User patch successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Patch a user
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/roles:
    put:
      description: |
        Update a user's system-level roles. Valid user roles are "system_user", "system_admin" or both of them. Overwrites any previously assigned system-level roles.
        ##### Permissions
        Must have the `manage_roles` permission.
      operationId: UpdateUserRoles
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoles_request'
        description: Space-delimited system roles to assign to the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User roles update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Update a user's roles
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/image:
    get:
      description: |
        Get a user's profile image based on user_id string parameter.
        ##### Permissions
        Must be logged in.
      operationId: GetProfileImage
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Not used by the server. Clients can pass in the last picture
          update time of the user to potentially take advantage of caching
        explode: true
        in: query
        name: _
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: User's profile image
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get user's profile image
      tags:
      - users
      x-accepts: "application/json,image/png"
  /users/{user_id}/image/default:
    get:
      description: |
        Returns the default (generated) user profile image based on user_id string parameter.
        ##### Permissions
        Must be logged in.
      operationId: GetDefaultProfileImage
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Default profile image
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Return user's default (generated) profile image
      tags:
      - users
      x-accepts: "application/json,image/png"
  /users/username/{username}:
    get:
      description: |
        Get a user object by providing a username. Sensitive information will be sanitized out.
        ##### Permissions
        Requires an active session but no other permissions.
      operationId: GetUserByUsername
      parameters:
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a user by username
      tags:
      - users
      x-accepts: application/json
  /users/email/{email}:
    get:
      description: |
        Get a user object by providing a user email. Sensitive information will be sanitized out.
        ##### Permissions
        Requires an active session and for the current session to be able to view another user's email based on the server's privacy settings.
      operationId: GetUserByEmail
      parameters:
      - description: User Email
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a user by email
      tags:
      - users
      x-accepts: application/json
  /users/{user_id}/channel_members:
    get:
      description: |
        Get all channel members for a user.

        ##### Permissions
        Logged in as the user, or have `edit_other_users` permission.
      operationId: GetChannelMembersWithTeamDataForUser
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Page specifies which part of the results to return, by PageSize."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: PageSize specifies the size of the returned chunk of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelMemberWithTeamData'
                type: array
          description: User's uploads retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get all channel members for a user
      tags:
      - users
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads:
    get:
      description: |
        Get all threads that user is following


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: GetUserThreads
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: Since filters the threads based on their LastUpdateAt timestamp.
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: integer
        style: form
      - description: Deleted will specify that even deleted threads should be returned
          (For mobile sync).
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Extended will enrich the response with participant details.
        explode: true
        in: query
        name: extended
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Page specifies which part of the results to return, by PageSize."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: PageSize specifies the size of the returned chunk of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 30
          type: integer
        style: form
      - description: Setting this to true will only return the total counts.
        explode: true
        in: query
        name: totalsOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Setting this to true will only return threads.
        explode: true
        in: query
        name: threadsOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThreads'
          description: User's thread retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get all threads that user is following
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads/read:
    put:
      description: |
        Mark all threads that user is following as read


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateThreadsReadForUser
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User's thread update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Mark all threads that user is following as read
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/read/{timestamp}:
    put:
      description: |
        Mark a thread that user is following as read


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateThreadReadForUser
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the thread to update
        explode: false
        in: path
        name: thread_id
        required: true
        schema:
          type: string
        style: simple
      - description: The timestamp to which the thread's "last read" state will be
          reset.
        explode: false
        in: path
        name: timestamp
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
          description: User's thread update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Mark a thread that user is following read state to the timestamp
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/set_unread/{post_id}:
    put:
      description: |
        Mark a thread that user is following as unread

        ##### Permissions
        Must have `read_channel` permission for the channel the thread is in or if the channel is public, have the `read_public_channels` permission for the team.

        Must have `edit_other_users` permission if the user is not the one marking the thread for himself.
      operationId: SetThreadUnreadByPostId
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the thread to update
        explode: false
        in: path
        name: thread_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of a post belonging to the thread to mark as unread.
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
          description: User's thread update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Mark a thread that user is following as unread based on a post id
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads/{thread_id}/following:
    delete:
      description: |
        Stop following a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: StopFollowingThread
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the thread to update
        explode: false
        in: path
        name: thread_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User's thread update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Stop following a thread
      tags:
      - threads
      x-accepts: application/json
    put:
      description: |
        Start following a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: StartFollowingThread
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the thread to follow
        explode: false
        in: path
        name: thread_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User's thread update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Start following a thread
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/threads/{thread_id}:
    get:
      description: |
        Get a thread


        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: GetUserThread
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the team in which the thread is.
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the thread to follow
        explode: false
        in: path
        name: thread_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThread'
          description: Get was successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a thread followed by the user
      tags:
      - threads
      x-accepts: application/json
  /users/{user_id}/status:
    get:
      description: |
        Get user status by id from the server.
        ##### Permissions
        Must be authenticated.
      operationId: GetUserStatus
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: User status retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get user status
      tags:
      - status
      x-accepts: application/json
    put:
      description: |
        Manually set a user's status. When setting a user's status, the status will remain that value until set "online" again, which will return the status to being automatically updated based on user activity.
        ##### Permissions
        Must have `edit_other_users` permission for the team.
      operationId: UpdateUserStatus
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserStatus_request'
        description: Status object that is to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: User status update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Update user status
      tags:
      - status
      x-content-type: application/json
      x-accepts: application/json
  /users/status/ids:
    post:
      description: |
        Get a list of user statuses by id from the server.
        ##### Permissions
        Must be authenticated.
      operationId: GetUsersStatusesByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of user ids to fetch
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: User statuses retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get user statuses by id
      tags:
      - status
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/status/custom:
    delete:
      description: |
        Unsets a user's custom status by updating the user's props and updates the user
        ##### Permissions
        Must be logged in as the user whose custom status is being removed.
      operationId: UnsetUserCustomStatus
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User custom status delete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Unsets user custom status
      tags:
      - status
      x-accepts: application/json
    put:
      description: |
        Updates a user's custom status by setting the value in the user's props and updates the user. Also save the given custom status to the recent custom statuses in the user's props
        ##### Permissions
        Must be logged in as the user whose custom status is being updated.
      operationId: UpdateUserCustomStatus
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCustomStatus_request'
        description: Custom status object that is to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User custom status update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Update user custom status
      tags:
      - status
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/status/custom/recent/delete:
    post:
      description: |
        Deletes a user's recent custom status by removing the specific status from the recentCustomStatuses in the user's props and updates the user.
        ##### Permissions
        Must be logged in as the user whose recent custom status is being deleted.
      operationId: PostUserRecentCustomStatusDelete
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRecentCustomStatusDelete_request'
        description: Custom Status object that is to be removed from the recent custom
          statuses.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User recent custom status delete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Delete user's recent custom status
      tags:
      - status
      x-content-type: application/json
      x-accepts: application/json
  /teams:
    get:
      description: |
        For regular users only returns open teams. Users with the "manage_system" permission will return teams regardless of type. The result is based on query string parameters - page and per_page.
        ##### Permissions
        Must be authenticated.
      operationId: GetAllTeams
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of teams per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: "Appends a total count of returned teams inside the response\
          \ object - ex: `{ \"teams\": [], \"total_count\" : 0 }`.      "
        explode: true
        in: query
        name: include_total_count
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          If set to true, teams which are part of a data retention policy will be excluded. The `sysconsole_read_compliance` permission is required to use this parameter.
        explode: true
        in: query
        name: exclude_policy_constrained
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: Team list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get teams
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}:
    get:
      description: |
        Get a team on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a team
      tags:
      - teams
      x-accepts: application/json
  /teams/name/{name}:
    get:
      description: |
        Get a team based on provided name string
        ##### Permissions
        Must be authenticated, team type is open and have the `view_team` permission.
      operationId: GetTeamByName
      parameters:
      - description: Team Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a team by name
      tags:
      - teams
      x-accepts: application/json
  /users/{user_id}/teams:
    get:
      description: |
        Get a list of teams that a user is on.
        ##### Permissions
        Must be authenticated as the user or have the `manage_system` permission.
      operationId: GetTeamsForUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: Team list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a user's teams
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}/members:
    get:
      description: |
        Get a page team members list based on query string parameters - team id, page and per page.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamMembers
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of users per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamMember'
                type: array
          description: Team members retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get team members
      tags:
      - teams
      x-accepts: application/json
  /users/{user_id}/teams/members:
    get:
      description: |
        Get a list of team members for a user. Useful for getting the ids of teams the user is on and the roles they have in those teams.
        ##### Permissions
        Must be logged in as the user or have the `edit_other_users` permission.
      operationId: GetTeamMembersForUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamMember'
                type: array
          description: Team members retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get team members for a user
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}/members/{user_id}:
    get:
      description: |
        Get a team member on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamMember
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
          description: Team member retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a team member
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}/members/ids:
    post:
      description: |
        Get a list of team members based on a provided array of user ids.
        ##### Permissions
        Must have `view_team` permission for the team.
      operationId: GetTeamMembersByIds
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of user ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamMember'
                type: array
          description: Team members retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get team members by ids
      tags:
      - teams
      x-content-type: application/json
      x-accepts: application/json
  /teams/{team_id}/stats:
    get:
      description: |
        Get a team stats on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: GetTeamStats
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamStats'
          description: Team stats retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a team stats
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}/members/{user_id}/roles:
    put:
      description: |
        Update a team member roles. Valid team roles are "team_user", "team_admin" or both of them. Overwrites any previously assigned team roles.
        ##### Permissions
        Must be authenticated and have the `manage_team_roles` permission.
      operationId: UpdateTeamMemberRoles
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoles_request'
        description: Space-delimited team roles to assign to the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Team member roles update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update a team member roles
      tags:
      - teams
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/teams/unread:
    get:
      description: |
        Get the count for unread messages and mentions in the teams the user is a member of.
        ##### Permissions
        Must be logged in.
      operationId: GetTeamsUnreadForUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Optional team id to be excluded from the results
        explode: true
        in: query
        name: exclude_team
        required: true
        schema:
          type: string
        style: form
      - description: Boolean to determine whether the collapsed threads should be
          included or not
        explode: true
        in: query
        name: include_collapsed_threads
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamUnread'
                type: array
          description: Team unreads retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get team unreads for a user
      tags:
      - teams
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/unread:
    get:
      description: |
        Get the unread mention and message counts for a team for the specified user.
        ##### Permissions
        Must be the user or have `edit_other_users` permission and have `view_team` permission for the team.
      operationId: GetTeamUnread
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamUnread'
          description: Team unread count retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get unreads for a team
      tags:
      - teams
      x-accepts: application/json
  /teams/{team_id}/invite-guests/email:
    post:
      description: |
        Invite guests to existing team channels usign the user's email.

        The number of emails that can be sent is rate limited to 20 per hour with a burst of 20 emails. If the rate limit exceeds, the error message contains details on when to retry and when the timer will be reset.

        ##### Permissions
        Must have `invite_guest` permission for the team.
      operationId: InviteGuestsToTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteGuestsToTeam_request'
        description: Guests invite information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Guests invite successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "413":
          $ref: '#/components/responses/TooLarge'
      summary: Invite guests to the team by email
      tags:
      - teams
      x-content-type: application/json
      x-accepts: application/json
  /channels:
    get:
      description: |
        ##### Permissions
        `manage_system`
      operationId: GetAllChannels
      parameters:
      - description: A group id to exclude channels that are associated with that
          group via GroupChannel records. This can also be left blank with `not_associated_to_group=`.
        explode: true
        in: query
        name: not_associated_to_group
        required: false
        schema:
          type: string
        style: form
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of channels per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "Whether to exclude default channels (ex Town Square, Off-Topic)\
          \ from the results."
        explode: true
        in: query
        name: exclude_default_channels
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Include channels that have been archived. This correlates to
          the `DeleteAt` flag being set in the database.
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Appends a total count of returned channels inside the response\
          \ object - ex: `{ \"channels\": [], \"total_count\" : 0 }`.      "
        explode: true
        in: query
        name: include_total_count
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          If set to true, channels which are part of a data retention policy will be excluded. The `sysconsole_read_compliance` permission is required to use this parameter.
        explode: true
        in: query
        name: exclude_policy_constrained
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListWithTeamData'
          description: Channel list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a list of all channels
      tags:
      - channels
      x-accepts: application/json
    post:
      description: |
        Create a new channel.
        ##### Permissions
        If creating a public channel, `create_public_channel` permission is required. If creating a private channel, `create_private_channel` permission is required.
      operationId: CreateChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        description: Channel object to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/direct:
    post:
      description: |
        Create a new direct message channel between two users.
        ##### Permissions
        Must be one of the two users and have `create_direct_channel` permission. Having the `manage_system` permission voids the previous requirements.
      operationId: CreateDirectChannel
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              maxItems: 2
              minItems: 2
              type: array
        description: The two user ids to be in the direct message
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Direct channel creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a direct message channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/group:
    post:
      description: |
        Create a new group message channel to group of users. If the logged in user's id is not included in the list, it will be appended to the end.
        ##### Permissions
        Must have `create_group_channel` permission.
      operationId: CreateGroupChannel
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: User ids to be in the group message channel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Group channel creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a group message channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/search:
    post:
      description: |
        Returns all private and open type channels where 'term' matches on the name, display name, or purpose of
        the channel.

        Configured 'default' channels (ex Town Square and Off-Topic) can be excluded from the results
        with the `exclude_default_channels` boolean parameter.

        Channels that are associated (via GroupChannel records) to a given group can be excluded from the results
        with the `not_associated_to_group` parameter and a group id string.
      operationId: SearchAllChannels
      parameters:
      - description: |
          Is the request from system_console. If this is set to true, it filters channels by the logged in user.
        explode: true
        in: query
        name: system_console
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAllChannels_request'
        description: The search terms and logic to use in the search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAllChannels_200_response'
          description: Paginated channel response. (Note that the non-paginated response—returned
            if the request body does not contain both `page` and `per_page` fields—is
            a simple array of channels.)
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Search all private and open type channels
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/group/search:
    post:
      description: |+
        Get a list of group channels for a user which members' usernames match the search term.

      operationId: SearchGroupChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchGroupChannels_request'
        description: Search criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels search successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Search Group Channels
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /teams/{team_id}/channels/ids:
    post:
      description: |
        Get a list of public channels on a team by id.
        ##### Permissions
        `view_team` for the team the channels are on.
      operationId: GetPublicChannelsByIdsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of channel ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channel list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a list of channels by ids
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}:
    delete:
      description: |
        Archives a channel. This will set the `deleteAt` to the current timestamp in the database. Soft deleted channels may not be accessible in the user interface. They can be viewed and unarchived in the **System Console > User Management > Channels** based on your license. Direct and group message channels cannot be deleted.

        ##### Permissions
        `delete_public_channel` permission if the channel is public,
        `delete_private_channel` permission if the channel is private,
        or have `manage_system` permission.
      operationId: DeleteChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Channel deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Delete a channel
      tags:
      - channels
      x-accepts: application/json
    get:
      description: |
        Get channel from the provided channel id string.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a channel
      tags:
      - channels
      x-accepts: application/json
    put:
      description: |
        Update a channel. The fields that can be updated are listed as parameters. Omitted fields will be treated as blanks.
        ##### Permissions
        If updating a public channel, `manage_public_channel_members` permission is required. If updating a private channel, `manage_private_channel_members` permission is required.
      operationId: UpdateChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        description: Channel object to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update a channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/patch:
    put:
      description: |
        Partially update a channel by providing only the fields you want to update. Omitted fields will not be updated. The fields that can be updated are defined in the request body, all other provided fields will be ignored.
        ##### Permissions
        If updating a public channel, `manage_public_channel_members` permission is required. If updating a private channel, `manage_private_channel_members` permission is required.
      operationId: PatchChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchChannel_request'
        description: Channel object to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel patch successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Patch a channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/privacy:
    put:
      description: |
        Updates channel's privacy allowing changing a channel from Public to Private and back.

        ##### Permissions
        `convert_public_channel_to_private` permission for the channel if updating privacy to 'P'. `convert_private_channel_to_public` permission for the channel if updating privacy to 'O'.
      operationId: UpdateChannelPrivacy
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelPrivacy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel conversion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update channel's privacy
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/restore:
    post:
      description: |
        Restore channel from the provided channel id string.

        ##### Permissions
        `manage_team` permission for the team of the channel.
      operationId: RestoreChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel restore successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Restore a channel
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/move:
    post:
      description: |
        Move a channel to another team.


        ##### Permissions

        Must have `manage_system` permission.
      operationId: MoveChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel move successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Move a channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/stats:
    get:
      description: |
        Get statistics for a channel.
        ##### Permissions
        Must have the `read_channel` permission.
      operationId: GetChannelStats
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStats'
          description: Channel statistics retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get channel statistics
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/pinned:
    get:
      description: Get a list of pinned posts for channel.
      operationId: GetPinnedPosts
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: The list of channel pinned posts
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a channel's pinned posts
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels:
    get:
      description: |
        Get a page of public channels on a team based on query string parameters - page and per_page.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetPublicChannelsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of public channels per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get public channels
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels/private:
    get:
      description: |
        Get a page of private channels on a team based on query string
        parameters - team_id, page and per_page.


        ##### Permissions
        Must have `manage_system` permission.
      operationId: GetPrivateChannelsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of private channels per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get private channels
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels/deleted:
    get:
      description: |+
        Get a page of deleted channels on a team based on query string parameters - team_id, page and per_page.

      operationId: GetDeletedChannelsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of public channels per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get deleted channels
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels/autocomplete:
    get:
      description: |
        Autocomplete public channels on a team based on the search term provided in the request URL.

        ##### Permissions
        Must have the `list_team_channels` permission.
      operationId: AutocompleteChannelsForTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: Name or display name
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels autocomplete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Autocomplete channels
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels/search_autocomplete:
    get:
      description: |
        Autocomplete your channels on a team based on the search term provided in the request URL.

        ##### Permissions
        Must have the `list_team_channels` permission.
      operationId: AutocompleteChannelsForTeamForSearch
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: Name or display name
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels autocomplete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Autocomplete channels for search
      tags:
      - channels
      x-accepts: application/json
  /teams/{team_id}/channels/search:
    post:
      description: |
        Search public channels on a team based on the search term provided in the request body.
        ##### Permissions
        Must have the `list_team_channels` permission.

        A user without the `list_team_channels` permission will be able to use this endpoint, with the search results limited to the channels that the user is a member of.
      operationId: SearchChannels
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchChannels_request'
        description: Search criteria
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels search successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Search channels
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /teams/{team_id}/channels/search_archived:
    post:
      description: |
        Search archived channels on a team based on the search term provided in the request body.

        ##### Permissions
        Must have the `list_team_channels` permission.

        A user without the `list_team_channels` permission will be able to use this endpoint, with the search results limited to the channels that the user is a member of.
      operationId: SearchArchivedChannels
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchArchivedChannels_request'
        description: Search criteria
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels search successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Search archived channels
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /teams/{team_id}/channels/name/{channel_name}:
    get:
      description: |
        Gets channel from the provided team id and channel name strings.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelByName
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: Channel Name
        explode: false
        in: path
        name: channel_name
        required: true
        schema:
          type: string
        style: simple
      - description: Defines if deleted channels should be returned or not (Mattermost
          Server 5.26.0+)
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a channel by name
      tags:
      - channels
      x-accepts: application/json
  /teams/name/{team_name}/channels/name/{channel_name}:
    get:
      description: |
        Gets a channel from the provided team name and channel name strings.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelByNameForTeamName
      parameters:
      - description: Team Name
        explode: false
        in: path
        name: team_name
        required: true
        schema:
          type: string
        style: simple
      - description: Channel Name
        explode: false
        in: path
        name: channel_name
        required: true
        schema:
          type: string
        style: simple
      - description: Defines if deleted channels should be returned or not (Mattermost
          Server 5.26.0+)
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Channel retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a channel by name and team name
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/members:
    get:
      description: |
        Get a page of members for a channel.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelMembers
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of members per page. There is a maximum limit of 200
          members.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelMember'
                type: array
          description: Channel members retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get channel members
      tags:
      - channels
      x-accepts: application/json
    post:
      description: Add a user to a channel by creating a channel member object.
      operationId: AddChannelMember
      parameters:
      - description: The channel ID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddChannelMember_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMember'
          description: Channel member creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Add user to channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/members/ids:
    post:
      description: |
        Get a list of channel members based on the provided user ids.
        ##### Permissions
        Must have the `read_channel` permission.
      operationId: GetChannelMembersByIds
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of user ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelMember'
                type: array
          description: Channel member list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get channel members by ids
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/members/{user_id}:
    delete:
      description: |
        Delete a channel member, effectively removing them from a channel.

        Channel members can only be deleted from public or private channels.
        ##### Permissions
        `manage_public_channel_members` permission if the channel is public.
        `manage_private_channel_members` permission if the channel is private.
      operationId: RemoveUserFromChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Channel member deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Remove user from channel
      tags:
      - channels
      x-accepts: application/json
    get:
      description: |
        Get a channel member.
        ##### Permissions
        `read_channel` permission for the channel.
      operationId: GetChannelMember
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMember'
          description: Channel member retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get channel member
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/members/{user_id}/roles:
    put:
      description: |
        Update a user's roles for a channel.
        ##### Permissions
        Must have `manage_channel_roles` permission for the channel.
      operationId: UpdateChannelRoles
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoles_request'
        description: Space-delimited channel roles to assign to the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Channel roles update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Update channel roles
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/members/{user_id}/schemeRoles:
    put:
      description: |
        Update a channel member's scheme_admin/scheme_user properties. Typically this should either be `scheme_admin=false, scheme_user=true` for ordinary channel member, or `scheme_admin=true, scheme_user=true` for a channel admin.
        ##### Permissions
        Must be authenticated and have the `manage_channel_roles` permission.
      operationId: UpdateChannelMemberSchemeRoles
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelMemberSchemeRoles_request'
        description: Scheme properties.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Channel member's scheme-derived roles updated successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update the scheme-derived roles of a channel member.
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/members/{user_id}/notify_props:
    put:
      description: |
        Update a user's notification properties for a channel. Only the provided fields are updated.
        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission.
      operationId: UpdateChannelNotifyProps
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelNotifyProps'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Channel notification properties update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update channel notifications
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/members/{user_id}/view:
    post:
      description: |
        Perform all the actions involved in viewing a channel. This includes marking channels as read, clearing push notifications, and updating the active channel.
        ##### Permissions
        Must be logged in as user or have `edit_other_users` permission.

        __Response only includes `last_viewed_at_times` in Mattermost server 4.3 and newer.__
      operationId: ViewChannel
      parameters:
      - description: User ID to perform the view action for
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewChannel_request'
        description: Paremeters affecting how and which channels to view
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewChannel_200_response'
          description: Channel view successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: View channel
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/channels/members:
    get:
      description: |
        Get all channel memberships and associated membership roles (i.e. `channel_user`, `channel_admin`) for a user on a specific team.
        ##### Permissions
        Logged in as the user and `view_team` permission for the team. Having `manage_system` permission voids the previous requirements.
      operationId: GetChannelMembersForUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelMember'
                type: array
          description: Channel members retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get channel memberships and roles for a user
      tags:
      - channels
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/channels:
    get:
      description: |
        Get all the channels on a team for a user.
        ##### Permissions
        Logged in as the user, or have `edit_other_users` permission, and `view_team` permission for the team.
      operationId: GetChannelsForTeamForUser
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: Defines if deleted channels should be returned or not
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filters the deleted channels by this time in epoch format. Does
          not have any effect if include_deleted is set to false.
        explode: true
        in: query
        name: last_delete_at
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get channels for user
      tags:
      - channels
      x-accepts: application/json
  /users/{user_id}/channels:
    get:
      description: |
        Get all channels that a user is a member of.

        ##### Permissions

        Logged in as the user, or have `edit_other_users` permission.
      operationId: GetChannelsForUser
      parameters:
      - description: The ID of the user. This can also be "me" which will point to
          the current user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filters the deleted channels by this time in epoch format. Does
          not have any effect if include_deleted is set to false.
        explode: true
        in: query
        name: last_delete_at
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Defines if deleted channels should be returned or not
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Channels retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get all channels
      tags:
      - channels
      x-accepts: application/json
  /users/{user_id}/channels/{channel_id}/unread:
    get:
      description: |
        Get the total unread messages and mentions for a channel for a user.
        ##### Permissions
        Must be logged in as user and have the `read_channel` permission, or have `edit_other_usrs` permission.
      operationId: GetChannelUnread
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUnread'
          description: Channel unreads retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get unread messages
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/scheme:
    put:
      description: |+
        Set a channel's scheme, more specifically sets the scheme_id value of a channel record.

        ##### Permissions
        Must have `manage_system` permission.

      operationId: UpdateChannelScheme
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelScheme_request'
        description: Scheme GUID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Update channel scheme successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Set a channel's scheme
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /channels/{channel_id}/moderations:
    get:
      description: |+
        ##### Permissions
        Must have `manage_system` permission.

      operationId: GetChannelModerations
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelModeration'
                type: array
          description: Retreived successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get information about channel's moderation.
      tags:
      - channels
      x-accepts: application/json
  /channels/{channel_id}/moderations/patch:
    put:
      description: |+
        ##### Permissions
        Must have `manage_system` permission.

      operationId: PatchChannelModerations
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelModerationPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelModeration'
                type: array
          description: Patched successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Update a channel's moderation settings.
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/channels/categories:
    get:
      description: |
        Get a list of sidebar categories that will appear in the user's sidebar on the given team, including a list of channel IDs in each category.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoriesForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrderedSidebarCategories'
                type: array
          description: Category retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get user's sidebar categories
      tags:
      - channels
      x-accepts: application/json
    post:
      description: |
        Create a custom sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: CreateSidebarCategoryForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarCategory'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
          description: Category creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Create user's sidebar category
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |
        Update any number of sidebar categories for the user on the given team. This can be used to reorder the channels in these categories.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoriesForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SidebarCategory'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
          description: Category update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update user's sidebar categories
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/channels/categories/order:
    get:
      description: |
        Returns the order of the sidebar categories for a user on the given team as an array of IDs.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoryOrderForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Order retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get user's sidebar category order
      tags:
      - channels
      x-accepts: application/json
    put:
      description: |
        Updates the order of the sidebar categories for a user on the given team. The provided array must include the IDs of all categories on the team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoryOrderForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Order update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update user's sidebar category order
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/teams/{team_id}/channels/categories/{category_id}:
    delete:
      description: |
        Deletes a single sidebar category for the user on the given team. Only custom categories can be deleted.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: RemoveSidebarCategoryForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Category GUID
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
          description: Category delete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Delete sidebar category
      tags:
      - channels
      x-accepts: application/json
    get:
      description: |
        Returns a single sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: GetSidebarCategoryForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Category GUID
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
          description: Category retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get sidebar category
      tags:
      - channels
      x-accepts: application/json
    put:
      description: |
        Updates a single sidebar category for the user on the given team.
        ##### Permissions
        Must be authenticated and have the `list_team_channels` permission.
      operationId: UpdateSidebarCategoryForTeamForUser
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Category GUID
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarCategory'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarCategory'
          description: Category update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update sidebar category
      tags:
      - channels
      x-content-type: application/json
      x-accepts: application/json
  /posts:
    post:
      description: |
        Create a new post in a channel. To create the post as a comment on another post, provide `root_id`.
        ##### Permissions
        Must have `create_post` permission for the channel the post is being created in.
      operationId: CreatePost
      parameters:
      - description: Whether to set the user status as online or not.
        explode: true
        in: query
        name: set_online
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost_request'
        description: Post object to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Post creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a post
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /posts/ephemeral:
    post:
      description: |
        Create a new ephemeral post in a channel.
        ##### Permissions
        Must have `create_post_ephemeral` permission (currently only given to system admin)
      operationId: CreatePostEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostEphemeral_request'
        description: Ephemeral Post object to send
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Post creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a ephemeral post
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /posts/{post_id}:
    delete:
      description: |
        Soft deletes a post, by marking the post as deleted in the database. Soft deleted posts will not be returned in post queries.
        ##### Permissions
        Must be logged in as the user or have `delete_others_posts` permission.
      operationId: DeletePost
      parameters:
      - description: ID of the post to delete
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Post deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Delete a post
      tags:
      - posts
      x-accepts: application/json
    get:
      description: |
        Get a single post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in or if the channel is public, have the `read_public_channels` permission for the team.
      operationId: GetPost
      parameters:
      - description: ID of the post to get
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines if result should include deleted posts, must have 'manage_system'\
          \ (admin) permission."
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Post retrieval successful
          headers:
            Has-Inaccessible-Posts:
              description: This header is included with the value "true" if the post
                is past the cloud's plan limit.
              explode: false
              schema:
                type: boolean
              style: simple
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a post
      tags:
      - posts
      x-accepts: application/json
    put:
      description: |
        Update a post. Only the fields listed below are updatable, omitted fields will be treated as blank.
        ##### Permissions
        Must have `edit_post` permission for the channel the post is in.
      operationId: UpdatePost
      parameters:
      - description: ID of the post to update
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePost_request'
        description: Post object that is to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Post update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Update a post
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/posts/{post_id}/set_unread:
    post:
      description: |+
        Mark a channel as being unread from a given post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in or if the channel is public, have the `read_public_channels` permission for the team.
        Must have `edit_other_users` permission if the user is not the one marking the post for himself.

      operationId: SetPostUnread
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUnreadAt'
          description: Post marked as unread successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Mark as unread from a post.
      tags:
      - posts
      x-accepts: application/json
  /posts/{post_id}/patch:
    put:
      description: |
        Partially update a post by providing only the fields you want to update. Omitted fields will not be updated. The fields that can be updated are defined in the request body, all other provided fields will be ignored.
        ##### Permissions
        Must have the `edit_post` permission.
      operationId: PatchPost
      parameters:
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPost_request'
        description: Post object that is to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Post patch successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Patch a post
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /posts/{post_id}/thread:
    get:
      description: |
        Get a post and the rest of the posts in the same thread.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in or if the channel is public, have the `read_public_channels` permission for the team.
      operationId: GetPostThread
      parameters:
      - description: ID of a post in the thread
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of posts per page
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The post_id to return the next page of posts from
        explode: true
        in: query
        name: fromPost
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: The create_at timestamp to return the next page of posts from
        explode: true
        in: query
        name: fromCreateAt
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The direction to return the posts. Either up or down.
        explode: true
        in: query
        name: direction
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Whether to skip fetching threads or not
        explode: true
        in: query
        name: skipFetchThreads
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether the client uses CRT or not
        explode: true
        in: query
        name: collapsedThreads
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether to return the associated users as part of the response
          or not
        explode: true
        in: query
        name: collapsedThreadsExtended
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: Post list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a thread
      tags:
      - posts
      x-accepts: application/json
  /users/{user_id}/posts/flagged:
    get:
      description: |
        Get a page of flagged posts of a user provided user id string. Selects from a channel, team, or all flagged posts by a user. Will only return posts from channels in which the user is member.
        ##### Permissions
        Must be user or have `manage_system` permission.
      operationId: GetFlaggedPostsForUser
      parameters:
      - description: ID of the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Team ID
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      - description: Channel ID
        explode: true
        in: query
        name: channel_id
        required: false
        schema:
          type: string
        style: form
      - description: The page to select
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of posts per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostList'
                type: array
          description: Post list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of flagged posts
      tags:
      - posts
      x-accepts: application/json
  /posts/{post_id}/files/info:
    get:
      description: |
        Gets a list of file information objects for the files attached to a post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.
      operationId: GetFileInfosForPost
      parameters:
      - description: ID of the post
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines if result should include deleted posts, must have 'manage_system'\
          \ (admin) permission."
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileInfo'
                type: array
          description: File info retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get file info for post
      tags:
      - posts
      x-accepts: application/json
  /channels/{channel_id}/posts:
    get:
      description: |
        Get a page of posts in a channel. Use the query parameters to modify the behaviour of this endpoint. The parameter `since` must not be used with any of `before`, `after`, `page`, and `per_page` parameters.
        If `since` is used, it will always return all posts modified since that time, ordered by their create time limited till 1000. A caveat with this parameter is that there is no guarantee that the returned posts will be consecutive. It is left to the clients to maintain state and fill any missing holes in the post order.
        ##### Permissions
        Must have `read_channel` permission for the channel.
      operationId: GetPostsForChannel
      parameters:
      - description: The channel ID to get the posts for
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of posts per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: Provide a non-zero value in Unix time milliseconds to select
          posts modified after that time
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: integer
        style: form
      - description: A post id to select the posts that came before this one
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: A post id to select the posts that came after this one
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include deleted posts or not. Must have system admin
          permissions.
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: Post list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get posts for a channel
      tags:
      - posts
      x-accepts: application/json
  /users/{user_id}/channels/{channel_id}/posts/unread:
    get:
      description: |
        Get the oldest unread post in the channel for the given user as well as the posts around it. The returned list is sorted in descending order (most recent post first).
        ##### Permissions
        Must be logged in as the user or have `edit_other_users` permission, and must have `read_channel` permission for the channel.
      operationId: GetPostsAroundLastUnread
      parameters:
      - description: ID of the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The channel ID to get the posts for
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of posts before the oldest unread posts. Maximum is 200
          posts if limit is set greater than that.
        explode: true
        in: query
        name: limit_before
        required: false
        schema:
          default: 60
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: Number of posts after and including the oldest unread post. Maximum
          is 200 posts if limit is set greater than that.
        explode: true
        in: query
        name: limit_after
        required: false
        schema:
          default: 60
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Whether to skip fetching threads or not
        explode: true
        in: query
        name: skipFetchThreads
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether the client uses CRT or not
        explode: true
        in: query
        name: collapsedThreads
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether to return the associated users as part of the response
          or not
        explode: true
        in: query
        name: collapsedThreadsExtended
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: Post list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get posts around oldest unread
      tags:
      - posts
      x-accepts: application/json
  /teams/{team_id}/posts/search:
    post:
      description: |
        Search posts in the team and from the provided terms string.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: SearchPosts
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPosts_request'
        description: The search terms and logic to use in the search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostListWithSearchMatches'
          description: Post list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Search for team posts
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /posts/{post_id}/pin:
    post:
      description: |
        Pin a post to a channel it is in based from the provided post id string.
        ##### Permissions
        Must be authenticated and have the `read_channel` permission to the channel the post is in.
      operationId: PinPost
      parameters:
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Pinned post successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Pin a post to the channel
      tags:
      - posts
      x-accepts: application/json
  /posts/{post_id}/unpin:
    post:
      description: |
        Unpin a post to a channel it is in based from the provided post id string.
        ##### Permissions
        Must be authenticated and have the `read_channel` permission to the channel the post is in.
      operationId: UnpinPost
      parameters:
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Unpinned post successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Unpin a post to the channel
      tags:
      - posts
      x-accepts: application/json
  /posts/{post_id}/actions/{action_id}:
    post:
      description: |
        Perform a post action, which allows users to interact with integrations through posts.
        ##### Permissions
        Must be authenticated and have the `read_channel` permission to the channel the post is in.
      operationId: DoPostAction
      parameters:
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      - description: Action GUID
        explode: false
        in: path
        name: action_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Post action successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Perform a post action
      tags:
      - posts
      x-accepts: application/json
  /posts/ids:
    post:
      description: |
        Fetch a list of posts based on the provided postIDs
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in or if the channel is public, have the `read_public_channels` permission for the team.
      operationId: getPostsByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of post ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Post'
                type: array
          description: Post list retrieval successful
          headers:
            Has-Inaccessible-Posts:
              description: Indicates whether the posts have been truncated as per
                the cloud's plan limit.
              explode: false
              schema:
                type: boolean
              style: simple
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get posts by a list of ids
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/posts/{post_id}/reminder:
    post:
      description: |+
        Set a reminder for the user for the post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.

      operationId: SetPostReminder
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Post GUID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPostReminder_request'
        description: Target time for the reminder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Reminder set successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Set a post reminder
      tags:
      - posts
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/preferences:
    get:
      description: |
        Get a list of the user's preferences.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: GetPreferences
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Preference'
                type: array
          description: User preferences retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get the user's preferences
      tags:
      - preferences
      x-accepts: application/json
    put:
      description: |
        Save a list of the user's preferences.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: UpdatePreferences
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Preference'
              type: array
        description: List of preference objects
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User preferences saved successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Save the user's preferences
      tags:
      - preferences
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/preferences/delete:
    post:
      description: |
        Delete a list of the user's preferences.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: DeletePreferences
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Preference'
              type: array
        description: List of preference objects
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: User preferences saved successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Delete user's preferences
      tags:
      - preferences
      x-content-type: application/json
      x-accepts: application/json
  /users/{user_id}/preferences/{category}:
    get:
      description: |
        Lists the current user's stored preferences in the given category.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: GetPreferencesByCategory
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The category of a group of preferences
        explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Preference'
                type: array
          description: A list of all of the current user's preferences in the given
            category
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: List a user's preferences by category
      tags:
      - preferences
      x-accepts: application/json
  /users/{user_id}/preferences/{category}/name/{preference_name}:
    get:
      description: |
        Gets a single preference for the current user with the given category and name.
        ##### Permissions
        Must be logged in as the user being updated or have the `edit_other_users` permission.
      operationId: GetPreferencesByCategoryByName
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The category of a group of preferences
        explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the preference
        explode: false
        in: path
        name: preference_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
          description: |
            A single preference for the current user in the current categorylist of all of the current user's preferences in the given category.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      summary: Get a specific user preference
      tags:
      - preferences
      x-accepts: application/json
  /files:
    post:
      description: |
        Uploads a file that can later be attached to a post.

        This request can either be a multipart/form-data request with a channel_id, files and optional
        client_ids defined in the FormData, or it can be a request with the channel_id and filename
        defined as query parameters with the contents of a single file in the body of the request.

        ##### Permissions
        Must have `upload_file` permission.
      operationId: UploadFile
      parameters:
      - description: The ID of the channel that this file will be uploaded to
        explode: true
        in: query
        name: channel_id
        required: false
        schema:
          type: string
        style: form
      - description: The name of the file to be uploaded
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFile_201_response'
          description: Corresponding lists of the provided client_ids and the metadata
            that has been stored in the database for each one
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "413":
          $ref: '#/components/responses/TooLarge'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Upload a file
      tags:
      - files
      x-accepts: application/json
  /files/{file_id}:
    get:
      description: |
        Gets a file that has been uploaded previously.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFile
      parameters:
      - description: The ID of the file to get
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Do not have appropriate permissions
          headers:
            First-Inaccessible-File-Time:
              description: This header is included with the value "1" if the file
                is past the cloud's plan limit.
              explode: false
              schema:
                type: integer
              style: simple
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a file
      tags:
      - files
      x-accepts: application/json
  /files/{file_id}/thumbnail:
    get:
      description: |
        Gets a file's thumbnail.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFileThumbnail
      parameters:
      - description: The ID of the file to get
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Do not have appropriate permissions
          headers:
            First-Inaccessible-File-Time:
              description: This header is included with the value "1" if the file
                is past the cloud's plan limit.
              explode: false
              schema:
                type: integer
              style: simple
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a file's thumbnail
      tags:
      - files
      x-accepts: application/json
  /files/{file_id}/preview:
    get:
      description: |
        Gets a file's preview.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFilePreview
      parameters:
      - description: The ID of the file to get
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Do not have appropriate permissions
          headers:
            First-Inaccessible-File-Time:
              description: This header is included with the value "1" if the file
                is past the cloud's plan limit.
              explode: false
              schema:
                type: integer
              style: simple
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a file's preview
      tags:
      - files
      x-accepts: application/json
  /files/{file_id}/info:
    get:
      description: |
        Gets a file's info.
        ##### Permissions
        Must have `read_channel` permission or be uploader of the file.
      operationId: GetFileInfo
      parameters:
      - description: The ID of the file info to get
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: The stored metadata for the given file
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Do not have appropriate permissions
          headers:
            First-Inaccessible-File-Time:
              description: This header is included with the value "1" if the file
                is past the cloud's plan limit.
              explode: false
              schema:
                type: integer
              style: simple
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get metadata for a file
      tags:
      - files
      x-accepts: application/json
  /teams/{team_id}/files/search:
    post:
      description: |
        Search for files in a team based on file name, extention and file content (if file content extraction is enabled and supported for the files).
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      operationId: SearchFiles
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFiles_request'
        description: The search terms and logic to use in the search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfoList'
          description: Files list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Search files in a team
      tags:
      - teams
      - files
      - search
      x-content-type: application/json
      x-accepts: application/json
  /config/client:
    get:
      description: |
        Get a subset of the server configuration needed by the client.
        ##### Permissions
        No permission required.
      operationId: GetClientConfig
      parameters:
      - description: "Must be `old`, other formats not implemented yet"
        explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Configuration retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get client configuration
      tags:
      - system
      x-accepts: application/json
  /emoji:
    get:
      description: |
        Get a page of metadata for custom emoji on the system.##### Permissions
        Must be authenticated.
      operationId: GetEmojiList
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of emojis per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: Either blank for no sorting or "name" to sort by emoji names.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a list of custom emoji
      tags:
      - emoji
      x-accepts: application/json
    post:
      description: |
        Create a custom emoji for the team.
        ##### Permissions
        Must be authenticated.
      operationId: CreateEmoji
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmoji_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "413":
          $ref: '#/components/responses/TooLarge'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Create a custom emoji
      tags:
      - emoji
      x-content-type: application/json
      x-accepts: application/json
  /emoji/{emoji_id}:
    delete:
      description: |
        Delete a custom emoji.
        ##### Permissions
        Must have the `manage_team` or `manage_system` permissions or be the user who created the emoji.
      operationId: DeleteEmoji
      parameters:
      - description: Emoji GUID
        explode: false
        in: path
        name: emoji_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji delete successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Delete a custom emoji
      tags:
      - emoji
      x-accepts: application/json
    get:
      description: |
        Get some metadata for a custom emoji.
        ##### Permissions
        Must be authenticated.
      operationId: GetEmoji
      parameters:
      - description: Emoji GUID
        explode: false
        in: path
        name: emoji_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a custom emoji
      tags:
      - emoji
      x-accepts: application/json
  /emoji/name/{emoji_name}:
    get:
      description: |+
        Get some metadata for a custom emoji using its name.
        ##### Permissions
        Must be authenticated.

      operationId: GetEmojiByName
      parameters:
      - description: Emoji name
        explode: false
        in: path
        name: emoji_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get a custom emoji by name
      tags:
      - emoji
      x-accepts: application/json
  /emoji/{emoji_id}/image:
    get:
      description: |
        Get the image for a custom emoji.
        ##### Permissions
        Must be authenticated.
      operationId: GetEmojiImage
      parameters:
      - description: Emoji GUID
        explode: false
        in: path
        name: emoji_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Emoji image retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get custom emoji image
      tags:
      - emoji
      x-accepts: "application/json,image/png"
  /emoji/search:
    post:
      description: |+
        Search for custom emoji by name based on search criteria provided in the request body. A maximum of 200 results are returned.
        ##### Permissions
        Must be authenticated.

      operationId: SearchEmoji
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEmoji_request'
        description: Search criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Emoji'
                type: array
          description: Emoji list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Search custom emoji
      tags:
      - emoji
      x-content-type: application/json
      x-accepts: application/json
  /emoji/autocomplete:
    get:
      description: |+
        Get a list of custom emoji with names starting with or matching the provided name. Returns a maximum of 100 results.
        ##### Permissions
        Must be authenticated.

      operationId: AutocompleteEmoji
      parameters:
      - description: The emoji name to search.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emoji'
          description: Emoji list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Autocomplete custom emoji
      tags:
      - emoji
      x-accepts: application/json
  /hooks/incoming:
    get:
      description: |
        Get a page of a list of incoming webhooks. Optionally filter for a specific team using query parameters.
        ##### Permissions
        `manage_webhooks` for the system or `manage_webhooks` for the specific team.
      operationId: GetIncomingWebhooks
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of hooks per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: The ID of the team to get hooks for.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IncomingWebhook'
                type: array
          description: Incoming webhooks retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: List incoming webhooks
      tags:
      - webhooks
      x-accepts: application/json
    post:
      description: |
        Create an incoming webhook for a channel.
        ##### Permissions
        `manage_webhooks` for the team the webhook is in.

        `manage_others_incoming_webhooks` for the team the webhook is in if the user is different than the requester.
      operationId: CreateIncomingWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncomingWebhook_request'
        description: Incoming webhook to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
          description: Incoming webhook creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create an incoming webhook
      tags:
      - webhooks
      x-content-type: application/json
      x-accepts: application/json
  /hooks/incoming/{hook_id}:
    delete:
      description: |
        Delete an incoming webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: DeleteIncomingWebhook
      parameters:
      - description: Incoming webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Webhook deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Delete an incoming webhook
      tags:
      - webhooks
      x-accepts: application/json
    get:
      description: |
        Get an incoming webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: GetIncomingWebhook
      parameters:
      - description: Incoming Webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
          description: Webhook retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get an incoming webhook
      tags:
      - webhooks
      x-accepts: application/json
    put:
      description: |
        Update an incoming webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: UpdateIncomingWebhook
      parameters:
      - description: Incoming Webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIncomingWebhook_request'
        description: Incoming webhook to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingWebhook'
          description: Webhook update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update an incoming webhook
      tags:
      - webhooks
      x-content-type: application/json
      x-accepts: application/json
  /hooks/outgoing:
    get:
      description: |
        Get a page of a list of outgoing webhooks. Optionally filter for a specific team or channel using query parameters.
        ##### Permissions
        `manage_webhooks` for the system or `manage_webhooks` for the specific team/channel.
      operationId: GetOutgoingWebhooks
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of hooks per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: The ID of the team to get hooks for.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the channel to get hooks for.
        explode: true
        in: query
        name: channel_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingWebhook'
                type: array
          description: Outgoing webhooks retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: List outgoing webhooks
      tags:
      - webhooks
      x-accepts: application/json
    post:
      description: |
        Create an outgoing webhook for a team.
        ##### Permissions
        `manage_webhooks` for the team the webhook is in.

        `manage_others_outgoing_webhooks` for the team the webhook is in if the user is different than the requester.
      operationId: CreateOutgoingWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOutgoingWebhook_request'
        description: Outgoing webhook to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
          description: Outgoing webhook creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Create an outgoing webhook
      tags:
      - webhooks
      x-content-type: application/json
      x-accepts: application/json
  /hooks/outgoing/{hook_id}:
    delete:
      description: |
        Delete an outgoing webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: DeleteOutgoingWebhook
      parameters:
      - description: Outgoing webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Webhook deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Delete an outgoing webhook
      tags:
      - webhooks
      x-accepts: application/json
    get:
      description: |
        Get an outgoing webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: GetOutgoingWebhook
      parameters:
      - description: Outgoing webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
          description: Outgoing webhook retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get an outgoing webhook
      tags:
      - webhooks
      x-accepts: application/json
    put:
      description: |
        Update an outgoing webhook given the hook id.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: UpdateOutgoingWebhook
      parameters:
      - description: outgoing Webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutgoingWebhook_request'
        description: Outgoing webhook to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingWebhook'
          description: Webhook update successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Update an outgoing webhook
      tags:
      - webhooks
      x-content-type: application/json
      x-accepts: application/json
  /hooks/outgoing/{hook_id}/regen_token:
    post:
      description: |
        Regenerate the token for the outgoing webhook.
        ##### Permissions
        `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.
      operationId: RegenOutgoingHookToken
      parameters:
      - description: Outgoing webhook GUID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Webhook token regenerate successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Regenerate the token for the outgoing webhook.
      tags:
      - webhooks
      x-accepts: application/json
  /groups:
    get:
      description: |-
        Retrieve a list of all groups not associated to a particular channel or team.

        `not_associated_to_team` **OR** `not_associated_to_channel` is required.

        If you use `not_associated_to_team`, you must be a team admin for that particular team (permission to manage that team).

        If you use `not_associated_to_channel`, you must be a channel admin for that particular channel (permission to manage that channel).

        n
      operationId: GetGroups
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of groups per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: String to pattern match the `name` and `display_name` field.
          Will return all groups whose `name` and `display_name` field match any of
          the text.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Boolean which adds the `member_count` attribute to each group
          JSON object
        explode: true
        in: query
        name: include_member_count
        required: false
        schema:
          type: boolean
        style: form
      - description: Team GUID which is used to return all the groups not associated
          to this team
        explode: true
        in: query
        name: not_associated_to_team
        required: true
        schema:
          type: string
        style: form
      - description: Group GUID which is used to return all the groups not associated
          to this channel
        explode: true
        in: query
        name: not_associated_to_channel
        required: true
        schema:
          type: string
        style: form
      - description: |-
          Only return groups that have been modified since the given Unix timestamp (in milliseconds). All modified groups, including deleted and created groups, will be returned.
          n
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: integer
        style: form
      - description: Boolean which filters the group entries with the `allow_reference`
          attribute set.
        explode: true
        in: query
        name: filter_allow_reference
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get groups
      tags:
      - groups
      x-accepts: application/json
  /channels/{channel_id}/groups:
    get:
      description: |+
        Retrieve the list of groups associated with a given channel.

        ##### Permissions
        Must have `manage_system` permission.

      operationId: GetGroupsByChannel
      parameters:
      - description: Channel GUID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of groups per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: Boolean which filters the group entries with the `allow_reference`
          attribute set.
        explode: true
        in: query
        name: filter_allow_reference
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get channel groups
      tags:
      - groups
      x-accepts: application/json
  /teams/{team_id}/groups:
    get:
      description: |+
        Retrieve the list of groups associated with a given team.

      operationId: GetGroupsByTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of groups per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: Boolean which filters in the group entries with the `allow_reference`
          attribute set.
        explode: true
        in: query
        name: filter_allow_reference
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get team groups
      tags:
      - groups
      x-accepts: application/json
  /teams/{team_id}/groups_by_channels:
    get:
      description: |+
        Retrieve the set of groups associated with the channels in the given team grouped by channel.

        ##### Permissions
        Must have `manage_system` permission or can access only for current user

      operationId: GetGroupsAssociatedToChannelsByTeam
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of groups per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: Boolean which filters in the group entries with the `allow_reference`
          attribute set.
        explode: true
        in: query
        name: filter_allow_reference
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Boolean to determine whether the pagination should be applied
          or not
        explode: true
        in: query
        name: paginate
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupsAssociatedToChannels'
                type: object
          description: Group list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get team groups by channels
      tags:
      - groups
      x-accepts: application/json
  /users/{user_id}/groups:
    get:
      description: |+
        Retrieve the list of groups associated to the user

      operationId: GetGroupsByUserId
      parameters:
      - description: User GUID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Get groups for a userId
      tags:
      - groups
      x-accepts: application/json
  /commands:
    get:
      description: |
        List commands for a team.
        ##### Permissions
        `manage_slash_commands` if need list custom commands.
      operationId: ListCommands
      parameters:
      - description: The team id.
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      - description: |
          To get only the custom commands. If set to false will get the custom
          if the user have access plus the system commands, otherwise just the system commands.
        explode: true
        in: query
        name: custom_only
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Command'
                type: array
          description: List Commands retrieve successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: List commands for a team
      tags:
      - commands
      x-accepts: application/json
    post:
      description: |
        Create a command for a team.
        ##### Permissions
        `manage_slash_commands` for the team the command is in.
      operationId: CreateCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommand_request'
        description: command to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
          description: Command creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Create a command
      tags:
      - commands
      x-content-type: application/json
      x-accepts: application/json
  /teams/{team_id}/commands/autocomplete:
    get:
      description: |
        List autocomplete commands in the team.
        ##### Permissions
        `view_team` for the team.
      operationId: ListAutocompleteCommands
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Command'
                type: array
          description: Autocomplete commands retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: List autocomplete commands
      tags:
      - commands
      x-accepts: application/json
  /teams/{team_id}/commands/autocomplete_suggestions:
    get:
      description: |
        List commands' autocomplete data for the team.
        ##### Permissions
        `view_team` for the team.
      operationId: ListCommandAutocompleteSuggestions
      parameters:
      - description: Team GUID
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      - description: String inputted by the user.
        explode: true
        in: query
        name: user_input
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AutocompleteSuggestion'
                type: array
          description: Commands' autocomplete data retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: List commands' autocomplete data
      tags:
      - commands
      x-accepts: application/json
  /commands/{command_id}:
    delete:
      description: |
        Delete a command based on command id string.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.
      operationId: DeleteCommand
      parameters:
      - description: ID of the command to delete
        explode: false
        in: path
        name: command_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Command deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Delete a command
      tags:
      - commands
      x-accepts: application/json
    get:
      description: |+
        Get a command definition based on command id string.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.

      operationId: GetCommandById
      parameters:
      - description: ID of the command to get
        explode: false
        in: path
        name: command_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
          description: Command get successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a command
      tags:
      - commands
      x-accepts: application/json
    put:
      description: |
        Update a single command based on command id string and Command struct.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.
      operationId: UpdateCommand
      parameters:
      - description: ID of the command to update
        explode: false
        in: path
        name: command_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
          description: Command updated successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Update a command
      tags:
      - commands
      x-content-type: application/json
      x-accepts: application/json
  /commands/{command_id}/regen_token:
    put:
      description: |
        Generate a new token for the command based on command id string.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.
      operationId: RegenCommandToken
      parameters:
      - description: ID of the command to generate the new token
        explode: false
        in: path
        name: command_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenCommandToken_200_response'
          description: Token generation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Generate a new token
      tags:
      - commands
      x-accepts: application/json
  /commands/execute:
    post:
      description: |
        Execute a command on a team.
        ##### Permissions
        Must have `use_slash_commands` permission for the team the command is in.
      operationId: ExecuteCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteCommand_request'
        description: command to be executed
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
          description: Command execution successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "501":
          $ref: '#/components/responses/NotImplemented'
      summary: Execute a command
      tags:
      - commands
      x-content-type: application/json
      x-accepts: application/json
  /roles:
    get:
      description: |+
        ##### Permissions

        `manage_system` permission is required.

      operationId: GetAllRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Roles retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of all the roles
      tags:
      - roles
      x-accepts: application/json
  /roles/{role_id}:
    get:
      description: |+
        Get a role from the provided role id.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRole
      parameters:
      - description: Role GUID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a role
      tags:
      - roles
      x-accepts: application/json
  /roles/name/{role_name}:
    get:
      description: |+
        Get a role from the provided role name.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRoleByName
      parameters:
      - description: Role Name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role retrieval successful
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a role by name
      tags:
      - roles
      x-accepts: application/json
  /roles/names:
    post:
      description: |+
        Get a list of roles from their names.

        ##### Permissions
        Requires an active session but no other permissions.

      operationId: GetRolesByNames
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of role names
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Role list retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get a list of roles by name
      tags:
      - roles
      x-content-type: application/json
      x-accepts: application/json
  /reactions:
    post:
      description: |
        Create a reaction.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.
      operationId: SaveReaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
        description: "The user's reaction with its post_id, user_id, and emoji_name\
          \ fields set"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a reaction
      tags:
      - reactions
      x-content-type: application/json
      x-accepts: application/json
  /posts/{post_id}/reactions:
    get:
      description: |
        Get a list of reactions made by all users to a given post.
        ##### Permissions
        Must have `read_channel` permission for the channel the post is in.
      operationId: GetReactions
      parameters:
      - description: ID of a post
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reaction'
                type: array
          description: List reactions retrieve successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a list of reactions to a post
      tags:
      - reactions
      x-accepts: application/json
  /users/{user_id}/posts/{post_id}/reactions/{emoji_name}:
    delete:
      description: |
        Deletes a reaction made by a user from the given post.
        ##### Permissions
        Must be user or have `manage_system` permission.
      operationId: DeleteReaction
      parameters:
      - description: ID of the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the post
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          type: string
        style: simple
      - description: emoji name
        explode: false
        in: path
        name: emoji_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Reaction deletion successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Remove a reaction from a post
      tags:
      - reactions
      x-accepts: application/json
  /bots:
    get:
      description: |
        Get a page of a list of bots.
        ##### Permissions
        Must have `read_bots` permission for bots you are managing, and `read_others_bots` permission for bots others are managing.
      operationId: GetBots
      parameters:
      - description: The page to select.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of users per page. There is a maximum limit of 200
          users per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 60
          type: integer
        style: form
      - description: If deleted bots should be returned.
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          type: boolean
        style: form
      - description: "When true, only orphaned bots will be returned. A bot is consitered\
          \ orphaned if it's owner has been deactivated."
        explode: true
        in: query
        name: only_orphaned
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Bot'
                type: array
          description: Bot page retrieval successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get bots
      tags:
      - bots
      x-accepts: application/json
    post:
      description: |
        Create a new bot account on the system. Username is required.
        ##### Permissions
        Must have `create_bot` permission.
      operationId: CreateBot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBot_request'
        description: Bot to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: Bot creation successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Create a bot
      tags:
      - bots
      x-content-type: application/json
      x-accepts: application/json
  /bots/{bot_user_id}:
    get:
      description: |
        Get a bot specified by its bot id.
        ##### Permissions
        Must have `read_bots` permission for bots you are managing, and `read_others_bots` permission for bots others are managing.
      operationId: GetBot
      parameters:
      - description: Bot user ID
        explode: false
        in: path
        name: bot_user_id
        required: true
        schema:
          type: string
        style: simple
      - description: If deleted bots should be returned.
        explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: Bot successfully retrieved.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Get a bot
      tags:
      - bots
      x-accepts: application/json
    put:
      description: "Partially update a bot by providing only the fields you want to\
        \ update. Omitted fields will not be updated. The fields that can be updated\
        \ are defined in the request body, all other provided fields will be ignored.\n\
        ##### Permissions\nMust have `manage_bots` permission. \n"
      operationId: PatchBot
      parameters:
      - description: Bot user ID
        explode: false
        in: path
        name: bot_user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBot_request'
        description: Bot to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: Bot patch successful
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Patch a bot
      tags:
      - bots
      x-content-type: application/json
      x-accepts: application/json
  /bots/{bot_user_id}/disable:
    post:
      description: "Disable a bot.\n##### Permissions\nMust have `manage_bots` permission.\
        \ \n"
      operationId: DisableBot
      parameters:
      - description: Bot user ID
        explode: false
        in: path
        name: bot_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: Bot successfully disabled.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Disable a bot
      tags:
      - bots
      x-accepts: application/json
  /bots/{bot_user_id}/enable:
    post:
      description: "Enable a bot.\n##### Permissions\nMust have `manage_bots` permission.\
        \ \n"
      operationId: EnableBot
      parameters:
      - description: Bot user ID
        explode: false
        in: path
        name: bot_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: Bot successfully enabled.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
      summary: Enable a bot
      tags:
      - bots
      x-accepts: application/json
  /1/vod/channel/{channel}/media/{media}/thumbnail:
    post:
      description: Replaces the thumbnail & poster for a given media  with the file
        provided in the request as multipart/form-data.
      parameters:
      - description: The thumbnail file
        example: "uploaded file within multipart/form-data ( ex: using <form method=post\
          \ enctype='multipart/form-data'><input type=file name=file> )"
        explode: true
        in: query
        name: file
        required: true
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: "media uuid : 1jhv...."
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__thumbnail_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/08d6964f'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/a039ea57'
        "422":
          $ref: '#/components/responses/2f952ed9'
      summary: Replaces the thumbnail & poster for a given media
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/browse:
    delete:
      description: Moves one or many medias/folders to trash.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse_delete_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
        "204":
          content:
            application/json:
              schema: {}
      summary: Moves one or many medias/folders to trash.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
    get:
      description: Lists all children of the channel's root folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/08d6964f'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/a039ea57'
        "422":
          $ref: '#/components/responses/2f952ed9'
      summary: Lists all children of the channel's root folder.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/copy:
    post:
      description: Duplicates one or many medias/folders to a given folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse_copy_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Duplicates one or many medias/folders to a given folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/move:
    post:
      description: Moves one or many medias/folders to a given folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse_copy_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Moves one or many medias/folders to a given folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/trash:
    get:
      description: Lists all medias/folders in trash.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/4bc0f255'
      summary: Lists all medias/folders in trash.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/trash/{file}:
    delete:
      description: "Deletes a media/folder from trash, permanently."
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema: {}
      summary: "Deletes a media/folder from trash, permanently."
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/trash/{file}/restore:
    post:
      description: Restores a media/folder from trash to its original location.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_trash__file__restore_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Restores a media/folder from trash to its original location.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/update:
    put:
      description: Updates one or many medias/folders.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse_update_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Updates one or many medias/folders.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/{file}:
    delete:
      description: Moves a media/folder to trash.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema: {}
      summary: Moves a media/folder to trash.
      tags: []
      x-accepts: application/json
    get:
      description: Lists all children of a given folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Lists all children of a given folder.
      tags: []
      x-accepts: application/json
    put:
      description: Updates a media/folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_trash__file__restore_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Updates a media/folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/{file}/copy:
    post:
      description: Duplicates a media/folder to a given folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse__file__copy_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_trash__file__restore_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Duplicates a media/folder to a given folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/browse/{file}/move:
    post:
      description: Moves a media/folder to a given folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__browse__file__copy_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__browse_trash__file__restore_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Moves a media/folder to a given folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/folder:
    get:
      description: List all folders.
      parameters:
      - example: "allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: List all folders.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/folder/root:
    get:
      description: Returns the channel's root folder.
      parameters:
      - example: "allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder_root_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns the channel's root folder.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/folder/{folder}:
    delete:
      description: "Deletes a folder with all its children, recursively."
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: folder
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema: {}
      summary: "Deletes a folder with all its children, recursively."
      tags: []
      x-accepts: application/json
    get:
      description: Returns a folder.
      parameters:
      - example: "allowed_country,disallowed_country,effectiveEncodings,media_count,media_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: folder
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$folder, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder_root_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a folder.
      tags: []
      x-accepts: application/json
    post:
      description: Creates a new folder in the parent folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: folder
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortFolder'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder_root_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Creates a new folder in the parent folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Updates a folder.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: folder
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortFolder'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder_root_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Updates a folder.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/folder/{folder}/playlist:
    get:
      description: Lists all playlists having a given folder attached.
      parameters:
      - example: "image,files,medias_count,medias_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: folder
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder__folder__playlist_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Lists all playlists having a given folder attached.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/media:
    get:
      description: Lists all medias.
      parameters:
      - example: "manifests,source,state,preview,sample,shot_boundaries,thumbnail,poster,encodings,progress,playbacks"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Lists all medias.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/media/{media}:
    delete:
      description: Deletes a media.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema: {}
      summary: Deletes a media.
      tags: []
      x-accepts: application/json
    get:
      description: Returns a media.
      parameters:
      - example: "manifests,source,state,preview,sample,shot_boundaries,thumbnail,poster,encodings,progress,playbacks"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$media, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a media.
      tags: []
      x-accepts: application/json
    put:
      description: Updates a media.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortMedia'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Updates a media.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/media/{media}/chapter:
    get:
      description: Lists all chapters of a given media.
      parameters:
      - example: image
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__chapter_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Lists all chapters of a given media.
      tags: []
      x-accepts: application/json
    post:
      description: Creates a new chapter to a given media.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortChapter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__chapter_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/9436319d'
      summary: Creates a new chapter to a given media.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/media/{media}/chapter/{chapter}:
    get:
      description: Returns a chapter.
      parameters:
      - example: image
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: chapter
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$media, $chapter, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__chapter__chapter__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a chapter.
      tags: []
      x-accepts: application/json
    put:
      description: Updates a chapter.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: chapter
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortChapter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__chapter_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/41638d24'
      summary: Updates a chapter.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/media/{media}/cut:
    post:
      description: Cuts a media with its encodings
      parameters:
      - description: creates a new trimmed media if set to 1
        example: "1"
        explode: true
        in: query
        name: new
        required: false
        schema:
          type: string
        style: form
      - description: "time in seconds where the trim starts, in multiples of 2"
        example: "2"
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "duration of the trim in seconds, in multiples of 2, is (endTime-startTrimTime)"
        example: "24"
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: string
        style: form
      - description: channel id
        example: "6349"
        explode: false
        in: path
        name: channel
        required: false
        schema:
          type: string
        style: simple
      - description: media uuid
        example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__media__media__cut_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Cuts a media with its encodings
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/player:
    get:
      description: Lists all players.
      parameters:
      - example: "files,logo_image,preload_image,interrupt_image,geoip_image,restrict_image,is_channel_default"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__player_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Lists all players.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/player/{player}:
    get:
      description: Returns a player.
      parameters:
      - example: "files,logo_image,preload_image,interrupt_image,geoip_image,restrict_image,is_channel_default"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: player
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$player, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__player__player__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a player.
      tags: []
      x-accepts: application/json
    put:
      description: Updates a player.
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: player
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__player__player__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/556bb773'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Updates a player.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/playlist:
    get:
      description: Lists all playlists.
      parameters:
      - example: "image,files,medias_count,medias_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__folder__folder__playlist_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/e7a7a4eb'
      summary: Lists all playlists.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/playlist/{playlist}:
    get:
      description: Returns a playlist.
      parameters:
      - example: "image,files,medias_count,medias_duration"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: playlist
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$playlist, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__playlist__playlist__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a playlist.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/share:
    post:
      description: "Creates a share, returns a share having id in order to build this\
        \ url : https://api.vod2.infomaniak.com/res/embed/{{ ID }}.html"
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__share_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Creates a new share to a given target.
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/share/{share}:
    get:
      description: Returns a share.
      parameters:
      - example: "links,target_id,target_type,player,manifests,target"
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: share
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: "$share, new OptionsHttp($request"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Returns a share.
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/share/{share}/token:
    post:
      description: token
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: share
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: token
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/avg_time:
    get:
      description: avg time
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                example: "\"number_ips\":\"7\",\"average_time\":\"337473\""
                type: string
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: avg time
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/consumption:
    get:
      description: consumption
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                example: '"value":"6062195290"'
                type: string
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: consumption
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/consumption/encodings/histogram:
    get:
      description: consumption encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      - $ref: '#/components/parameters/perhisto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: consumption encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media:
    get:
      description: top-media
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: top-media
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/consumption:
    get:
      description: media consumption
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media consumption
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/consumption/encodings/histogram:
    get:
      description: media consumption encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      - $ref: '#/components/parameters/perhisto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media consumption encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/geolocation/clusters:
    get:
      description: media clusters
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media clusters
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/geolocation/countries:
    get:
      description: media countries
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media countries
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/browsers/shares:
    get:
      description: media browsers shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media browsers shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/os/shares:
    get:
      description: media os shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media os shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/playback/shares:
    get:
      description: media playbacks shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media playbacks shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/technologies/players/shares:
    get:
      description: media players shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media players shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewers:
    get:
      description: media viewers
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - description: "Valid Media identifiers separated with comma ,"
        example: "?medias=1jhvl1uq4j94b,1jhvl1uq4j94c"
        explode: true
        in: query
        name: medias
        required: true
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__statistics_media__media__viewers_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewers
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/encodings/histogram:
    get:
      description: media viewers encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewers encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/encodings/shares:
    get:
      description: media viewers encoding shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewers encoding shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewers/uniques:
    get:
      description: media viewers unique
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - description: "Valid Media identifiers separated with comma ,"
        example: "?medias=1jhvl1uq4j94b,1jhvl1uq4j94c"
        explode: true
        in: query
        name: medias
        required: true
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__statistics_media__media__viewers_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewers unique
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewing:
    get:
      description: media viewing time
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewing time
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/media/{media}/viewing/encodings/histogram:
    get:
      description: media viewing time encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - example: 1jhvl2uqa5v8a
        explode: false
        in: path
        name: media
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      - $ref: '#/components/parameters/perhisto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: media viewing time encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/technologies/browsers/shares:
    get:
      description: browsers shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: browsers shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/technologies/os/shares:
    get:
      description: os shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: os shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/technologies/playback/shares:
    get:
      description: playbacks shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: playbacks shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/technologies/players/shares:
    get:
      description: players shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: players shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/time_ip:
    get:
      description: time ip
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                example: '"10.8.8.49":"1934000"'
                type: string
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/5e128766'
      summary: time ip
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers:
    get:
      description: viewers
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/encodings/histogram:
    get:
      description: viewers encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/encodings/shares:
    get:
      description: viewers encoding shares
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers encoding shares
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/histogram:
    get:
      description: viewers histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      - $ref: '#/components/parameters/perhisto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/medias:
    get:
      description: viewers medias bulk
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - description: "Valid Media identifiers separated with comma ,"
        example: "?medias=1jhvl1uq4j94b,1jhvl1uq4j94c"
        explode: true
        in: query
        name: medias
        required: true
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                example: "\"1jhvl2uq8p2vt\":{\"value\":\"13\"},\"1jhvl2uq8p2w9\":{\"\
                  value\":\"2\"}"
                type: string
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers medias bulk
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/uniques:
    get:
      description: viewers unique
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers unique
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewers/uniques/medias:
    get:
      description: viewers medias unique bulk
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - description: "Valid Media identifiers separated with comma ,"
        example: "?medias=1jhvl1uq4j94b,1jhvl1uq4j94c"
        explode: true
        in: query
        name: medias
        required: true
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__statistics_media__media__viewers_get_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewers medias unique bulk
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewing:
    get:
      description: viewing time
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewing time
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/statistics/viewing/encodings/histogram:
    get:
      description: viewing time encoding histogram
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/from'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__share__share__token_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: viewing time encoding histogram
      tags: []
      x-accepts: application/json
  /1/vod/channel/{channel}/upload:
    post:
      description: Creates a new upload
      parameters:
      - example: "channel id : 6349"
        explode: false
        in: path
        name: channel
        required: true
        schema:
          type: string
        style: simple
      - description: "Digest: algorythmn checksum"
        example: "Digest: sha-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=,unixsum=30637"
        explode: false
        in: header
        name: Digest
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_1_vod_channel__channel__upload_post_request'
          file: {}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_vod_channel__channel__upload_post_200_response'
          description: Successful response
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: store
      tags: []
      x-content-type: application/json
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/admin:
    post:
      description: Create an Acronis administrator
      parameters:
      - explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: Create administrator
      tags:
      - Administrator
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update the email address for the Acronis administrator user
      parameters:
      - explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update administrator
      tags:
      - Administrator
      x-content-type: application/json
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/admin/request_password:
    post:
      description: "Get a new token or send an email, to change the Acronis administrator\
        \ password"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_request_password_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Request administrator password
      tags:
      - Passwords
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots:
    get:
      description: Get all slots for the given Swiss Backup product
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: List all slots
      tags:
      - Slots
      x-accepts: application/json
    post:
      description: "Create a new slot via a job, for the given Swiss Backup"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_1'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Create
      tags:
      - Slots
      x-content-type: application/json
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/disable:
    post:
      description: "Disable a slot via a job, for the given Swiss Backup"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Disable
      tags:
      - Slots
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/enable:
    post:
      description: "Enable a slot via a job, for the given Swiss Backup"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Enable
      tags:
      - Slots
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/request_password:
    post:
      description: "Get a new token or send the email, to change the password for\
        \ a slot"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_request_password_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Request slot password
      tags:
      - Passwords
      x-accepts: application/json
  /1/swiss_backups:
    get:
      description: List all Swiss Backup products for the given account
      parameters:
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: "Unique identifier of the `account` that is related to the\
            \ resource `{name}`"
          title: account_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List all Swiss Backups
      tags:
      - Product management
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}:
    get:
      description: Get details for the given Swiss Backup product
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Swiss Backup information
      tags:
      - Product management
      x-accepts: application/json
    put:
      description: Update the given Swiss Backup product
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the `account`
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_2'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a Swiss Backup
      tags:
      - Product management
      x-content-type: application/json
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/acronis_informations:
    get:
      description: "Get Acronis information, from the Acronis API, for the given Swiss\
        \ Backup product"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__acronis_informations_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Acronis information
      tags:
      - Product management
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}:
    delete:
      description: Delete a slot for the given Swiss Backup
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__delete_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete
      tags:
      - Slots
      x-accepts: application/json
    get:
      description: Get more details about the given slot
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots_post_201_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Slot information
      tags:
      - Slots
      x-accepts: application/json
    put:
      description: "Update a slot via a job, for the given Swiss Backup"
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_3'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots_post_201_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update
      tags:
      - Slots
      x-content-type: application/json
      x-accepts: application/json
  /1/swiss_backups/{swiss_backup_id}/slots/{slot_id}/rclone:
    get:
      description: Get RClone details about the given slot
      parameters:
      - description: Unique identifier of the Swiss Backup to request.
        explode: true
        in: path
        name: swiss_backup_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Unique identifier of the Slot to request.
        explode: true
        in: path
        name: slot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: RClone details
      tags:
      - Slots
      x-accepts: "application/json,text/plain"
  /1/swiss_backups/pricing:
    get:
      description: List all prices and discounts for Swiss Backup products
      parameters:
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          description: "Unique identifier of the `account` that is related to the\
            \ resource `{name}`"
          title: account_id
          type: integer
        style: form
      - explode: true
        in: query
        name: currency_id
        required: false
        schema:
          title: currency_id
          type: integer
        style: form
      - explode: true
        in: query
        name: swiss_backup_id
        required: false
        schema:
          title: swiss_backup_id
          type: integer
        style: form
      - explode: true
        in: query
        name: with_renewal
        required: false
        schema:
          title: with_renewal
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups_pricing_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: List prices and discounts
      tags:
      - Billing
      x-accepts: application/json
  /1/swiss_backups/calculate:
    get:
      description: Calculate the price for a specific configuration
      parameters:
      - explode: true
        in: query
        name: currency_id
        required: false
        schema:
          title: currency_id
          type: integer
        style: form
      - explode: true
        in: query
        name: due_at
        required: false
        schema:
          description: Contract end date
          title: due_at
          type: string
        style: form
      - explode: true
        in: query
        name: is_demo
        required: false
        schema:
          description: True if the product is a trial
          example: true
          title: is_demo
          type: boolean
        style: form
      - explode: true
        in: query
        name: size
        required: true
        schema:
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
          title: size
          type: integer
        style: form
      - explode: true
        in: query
        name: slot
        required: false
        schema:
          title: slot
          type: integer
        style: form
      - explode: true
        in: query
        name: slot_mobile
        required: false
        schema:
          title: slot_mobile
          type: integer
        style: form
      - explode: true
        in: query
        name: slot_server
        required: false
        schema:
          title: slot_server
          type: integer
        style: form
      - explode: true
        in: query
        name: slot_virtual
        required: false
        schema:
          title: slot_virtual
          type: integer
        style: form
      - explode: true
        in: query
        name: slot_workstation
        required: false
        schema:
          title: slot_workstation
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups_calculate_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Calculate the price
      tags:
      - Billing
      x-accepts: application/json
  /1/radios/players/ip-access:
    post:
      description: This endpoint allows you to check ip access to mountpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_4'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      summary: Check ip access to mountpoint
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/players/{player_uuid}/domain-access:
    post:
      description: This endpoint allows you to check domain access for player.
      parameters:
      - description: The universally unique identifier (UUID) of the player to request.
        explode: true
        in: path
        name: player_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_5'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      summary: Check domain access for player
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/players/{player_uuid}/config:
    post:
      description: This endpoint allows you to get the player config.
      parameters:
      - description: The universally unique identifier (UUID) of the player to request.
        explode: true
        in: path
        name: player_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios_players__player_uuid__config_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      summary: Get player config
      tags:
      - Players
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations:
    get:
      description: This endpoint allows you to retrieve all the stations.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List stations
      tags:
      - Stations
      x-accepts: application/json
    post:
      description: This endpoint allows you to store a station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_6'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Store station
      tags:
      - Stations
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/thumbnail:
    delete:
      description: This endpoint allows you to delete a station thumbnail.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Delete station thumbnail
      tags:
      - Stations
      x-accepts: application/json
    post:
      description: This endpoint allows you to update a station thumbnail.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_7'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update station thumbnail
      tags:
      - Stations
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/reset_general_parameters:
    post:
      description: This endpoint allows you to reset general parameters.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Reset general parameters
      tags:
      - Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/send_logs:
    post:
      description: This endpoint allows you to send logs.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_8'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Send logs
      tags:
      - Stations
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/toggle_direct_live:
    post:
      description: This endpoint allows you to toggle direct live.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Toggle direct live
      tags:
      - Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams:
    get:
      description: This endpoint allows you to retrieve all the streams.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List streams
      tags:
      - Streams
      x-accepts: application/json
    post:
      description: This endpoint allows you to store a stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_9'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Store stream
      tags:
      - Streams
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/add-fallback:
    post:
      description: This endpoint allows you to add a fallback stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the source stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Add fallback stream
      tags:
      - Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/remove-fallback:
    post:
      description: This endpoint allows you to remove the fallback stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the source stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Remove fallback stream
      tags:
      - Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/introduction-file:
    delete:
      description: This endpoint allows you to delete the introduction file for a
        stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete introduction file
      tags:
      - Streams
      x-accepts: application/json
    get:
      description: This endpoint allows you to get the introduction file for a stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Get introduction file
      tags:
      - Streams
      x-accepts: application/json
    post:
      description: This endpoint allows you to update the introduction file for a
        stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_10'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update introduction file
      tags:
      - Streams
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/add:
    post:
      description: This endpoint allows you to add a hls stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_11'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add hls stream
      tags:
      - Hls Stream
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/add:
    post:
      description: This endpoint allows you to add transcoded stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_12'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add transcoded stream
      tags:
      - Transcodings
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/{stream_id}/unbind:
    post:
      description: This endpoint allows you to unbind transcoding on transcoded stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the transcoded stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Unbind transcoded stream
      tags:
      - Transcodings
      x-accepts: application/json
  /1/radios/{radio_product_id}/players:
    get:
      description: This endpoint allows you to retrieve all the players in a product.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List product players
      tags:
      - Players
      x-accepts: application/json
    post:
      description: This endpoint allows you to store a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_13'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Store player
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/players/{player_id}/duplicate:
    post:
      description: This endpoint allows you to duplicate a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_14'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Duplicate player
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/players/{player_id}/reset:
    post:
      description: This endpoint allows you to reset a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Reset player
      tags:
      - Players
      x-accepts: application/json
  /1/radios/{radio_product_id}/players/{player_id}/thumbnail:
    delete:
      description: This endpoint allows you to delete a thumbnail.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_16'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Delete thumbnail
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: This endpoint allows you to update a thumbnail.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_15'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__thumbnail_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update thumbnail
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/streams/available-mountpoint:
    post:
      description: This endpoint allows you to check if a stream mountpoint is available.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_17'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Mountpoint is available
      tags:
      - Streams
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/hls_stream/{subdomain}/key:
    get:
      description: This endpoint allows you to get the hls stream key to decrypt hls
        chunk.
      parameters:
      - description: The subdomain of the hls stream.
        explode: true
        in: path
        name: subdomain
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: index
        required: true
        schema:
          description: Specify the index of the hls chunk to get the matching key
          example: 1
          title: index
          type: integer
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      summary: Get hls stream key
      tags:
      - Hls Stream
      x-accepts: "application/json,application/octet-stream"
  /1/radios/streams/{stream_uuid}/playlist:
    get:
      description: This endpoint allows you to get playlist file with stream url.
      parameters:
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      summary: get playlist with stream url
      tags:
      - Streams
      x-accepts: application/json
  /1/radios/streams/{stream_uuid}/introduction-file:
    get:
      description: This endpoint allows you to get the introduction file for a stream.
      parameters:
      - explode: true
        in: path
        name: stream_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      summary: Get introduction file
      tags:
      - Streams
      x-accepts: application/json
  /1/radios/playlist/{any}:
    get:
      description: This endpoint allows you to get playlist file with legacy parameters.
      parameters:
      - explode: true
        in: path
        name: any
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      summary: Get playlist with legacy parameters
      tags:
      - Streams
      x-accepts: "application/json,application/octet-stream"
  /1/radios/packs:
    get:
      description: This endpoint allows you to retrieve all the packs.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios_packs_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List packs
      tags:
      - Packs
      x-accepts: application/json
  /1/radios:
    get:
      description: This endpoint allows you to retrieve all the products.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Specify the account
          example: 1
          title: account_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios_get_200_response'
          description: OK
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: List products
      tags:
      - Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}:
    get:
      description: This endpoint allows you to retrieve a product.
      parameters:
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get product
      tags:
      - Radio Products
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a product.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_18'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update product
      tags:
      - Radio Products
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/users:
    get:
      description: This endpoint allows you to retrieve all users attach to the product.
      parameters:
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__users_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List users
      tags:
      - Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}:
    delete:
      description: This endpoint allows you to delete a station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete station
      tags:
      - Stations
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get station
      tags:
      - Stations
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_19'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update station
      tags:
      - Stations
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/players:
    get:
      description: This endpoint allows you to retrieve all the players in a station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List station players
      tags:
      - Players
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/server_events:
    get:
      description: This endpoint allows you to retrieve master and edge events by
        date.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__server_events_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: List server events
      tags:
      - Server Events
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/encoder_events:
    get:
      description: This endpoint allows you to retrieve encoder events by date.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__encoder_events_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: List encoder events
      tags:
      - Encoder Events
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/listeners:
    get:
      description: This endpoint allows you to retrieve station listeners stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/listeners_per_minute:
    get:
      description: This endpoint allows you to retrieve station listeners stats per
        minute on last 24h.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_listeners_per_minute_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners per minute
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/countries:
    get:
      description: This endpoint allows you to retrieve station countries stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/countries_continent:
    get:
      description: This endpoint allows you to retrieve station total countries stats
        by continent.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_countries_continent_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries by continent
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stream_listeners:
    get:
      description: This endpoint allows you to retrieve station listeners stats by
        stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_empty
        required: false
        schema:
          description: Define if stream without listener are in the return
          example: true
          title: with_empty
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_stream_listeners_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners by stream
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/consumption:
    get:
      description: This endpoint allows you to retrieve station consumption stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/total_consumption:
    get:
      description: This endpoint allows you to retrieve station total consumption
        stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total consumption
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stream_consumption:
    get:
      description: This endpoint allows you to retrieve station consumption stats
        by stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_stream_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption by stream
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/players:
    get:
      description: This endpoint allows you to retrieve players stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get players
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/total_players:
    get:
      description: This endpoint allows you to retrieve players total stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total players
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/stats_by_stream:
    get:
      description: This endpoint allows you to retrieve stats group by streams.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get stats by streams
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/stats/export_csv:
    get:
      description: This endpoint allows you to export station stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - listeners_per_minute
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: stream_ids
        required: false
        schema:
          description: List of stream ids for get stats
          example: "1,3,5"
          title: stream_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_hls_stats
        required: false
        schema:
          description: Define if hls stream will be count in the stats
          example: false
          title: with_hls_stats
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Export stats
      tags:
      - Stats > Stations
      x-accepts: "application/json,application/octet-stream"
  /1/radios/{radio_product_id}/stations/{station_id}/stats/links:
    get:
      description: This endpoint allows you to get all stats links.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_links_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List stats links
      tags:
      - Stats > Stations
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/notification:
    get:
      description: This endpoint allows you to retrieve the notification bind to the
        radio_product or station if it's exist.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__notification_get_station_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__notification_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get notification
      tags:
      - Notifications
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a notification.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_20'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update notification
      tags:
      - Notifications
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}:
    delete:
      description: This endpoint allows you to delete a stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete stream
      tags:
      - Streams
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get stream
      tags:
      - Streams
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_21'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update stream
      tags:
      - Streams
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/actual-bitrate:
    get:
      description: This endpoint allows you to check real the bitrate of the stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get actual bitrate
      tags:
      - Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/listeners:
    get:
      description: This endpoint allows you to retrieve stream listeners stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/listeners_per_minute:
    get:
      description: This endpoint allows you to retrieve stream listeners stats by
        minute on last 24h.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_listeners_per_minute_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners by minute
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/countries:
    get:
      description: This endpoint allows you to retrieve stream countries stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/countries_continent:
    get:
      description: This endpoint allows you to retrieve stream total countries stats
        by continent.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_countries_continent_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries by continent
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/consumption:
    get:
      description: This endpoint allows you to retrieve stream consumption stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/total_consumption:
    get:
      description: This endpoint allows you to retrieve total stream consumption stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total consumption
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/players:
    get:
      description: This endpoint allows you to retrieve players stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get players
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/total_players:
    get:
      description: This endpoint allows you to retrieve players total stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total players
      tags:
      - Stats > Streams
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/stats/export_csv:
    get:
      description: This endpoint allows you to export stream stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - listeners_per_minute
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Export stats
      tags:
      - Stats > Streams
      x-accepts: "application/json,application/octet-stream"
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream:
    delete:
      description: This endpoint allows you to delete a hls stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete hls stream
      tags:
      - Hls Stream
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a hls stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__hls_stream_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get hls stream
      tags:
      - Hls Stream
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a hls stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_22'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update hls stream
      tags:
      - Hls Stream
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/listeners:
    get:
      description: This endpoint allows you to retrieve hls stream listeners stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/listeners_per_minute:
    get:
      description: This endpoint allows you to retrieve hls stream listeners stats
        by minute on last 24h.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_listeners_per_minute_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners by minute
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/countries:
    get:
      description: This endpoint allows you to retrieve hls stream countries stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/countries_continent:
    get:
      description: This endpoint allows you to retrieve hls stream total countries
        stats by continent.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_countries_continent_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries by continent
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/consumption:
    get:
      description: This endpoint allows you to retrieve hls stream consumption stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/total_consumption:
    get:
      description: This endpoint allows you to retrieve total hls stream consumption
        stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total consumption
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/players:
    get:
      description: This endpoint allows you to retrieve players stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get players
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/total_players:
    get:
      description: This endpoint allows you to retrieve players total stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total players
      tags:
      - Stats > HlsStream
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/hls_stream/stats/export_csv:
    get:
      description: This endpoint allows you to export hls stream stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - listeners_per_minute
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Export stats
      tags:
      - Stats > HlsStream
      x-accepts: "application/json,application/octet-stream"
  /1/radios/{radio_product_id}/notification:
    get:
      description: This endpoint allows you to retrieve the notification bind to the
        radio_product or station if it's exist.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__notification_get_station_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__notification_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get notification
      tags:
      - Notifications
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a notification for radio product.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_20'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update notification radio product
      tags:
      - Notifications
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/players/{player_id}:
    delete:
      description: This endpoint allows you to delete a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete player
      tags:
      - Players
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Get player
      tags:
      - Players
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a player.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_23'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update player
      tags:
      - Players
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/players/{player_id}/integrate:
    get:
      description: This endpoint allows you to integrate a player iframe.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Integrate
      tags:
      - Players
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/listeners:
    get:
      description: This endpoint allows you to retrieve product listeners stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/listeners_per_minute:
    get:
      description: This endpoint allows you to retrieve product listeners stats per
        minute on last 24h.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_listeners_per_minute_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners per minute
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/countries:
    get:
      description: This endpoint allows you to retrieve product countries stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/countries_continent:
    get:
      description: This endpoint allows you to retrieve product total countries stats
        by continent.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_countries_continent_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get countries by continent
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/station_listeners:
    get:
      description: This endpoint allows you to retrieve product listeners stats by
        station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      - explode: true
        in: query
        name: with_empty
        required: false
        schema:
          description: Define if station without listener are in the return
          example: true
          title: with_empty
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stats_station_listeners_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get listeners by station
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/consumption:
    get:
      description: This endpoint allows you to retrieve product consumption stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/total_consumption:
    get:
      description: This endpoint allows you to retrieve product total consumption
        stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total consumption
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/station_consumption:
    get:
      description: This endpoint allows you to retrieve product consumption stats
        by station.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stats_station_consumption_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get consumption by station
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/players:
    get:
      description: This endpoint allows you to retrieve players stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get players
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/total_players:
    get:
      description: This endpoint allows you to retrieve total players stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_players_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get total players
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/stats_by_station:
    get:
      description: This endpoint allows you to retrieve stats group by stations.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Get stats by stations
      tags:
      - Stats > Radio Products
      x-accepts: application/json
  /1/radios/{radio_product_id}/stats/export_csv:
    get:
      description: This endpoint allows you to export product stats.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: datatype
        required: true
        schema:
          enum:
          - consumption
          - countries
          - listeners
          - listeners_per_minute
          - players
          title: datatype
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          description: Specify the starting date to get stats
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        style: form
      - explode: true
        in: query
        name: station_ids
        required: false
        schema:
          description: List of station ids for get stats
          example: "1,3,5"
          title: station_ids
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          description: Specify the ending date to get stats
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Export stats
      tags:
      - Stats > Radio Products
      x-accepts: "application/json,application/octet-stream"
  /1/radios/{radio_product_id}/options:
    get:
      description: This endpoint allows you to retrieve all the option attach to a
        radio product.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__options_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List radio product options
      tags:
      - Radio Product Options
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/streams/{stream_id}/unbind:
    delete:
      description: This endpoint allows you to delete a stream and convert transcoding
        stream to standard stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_24'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete stream and unbind
      tags:
      - Streams
      x-content-type: application/json
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding:
    delete:
      description: This endpoint allows you to delete transcoding.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete transcoding
      tags:
      - Transcodings
      x-accepts: application/json
  /1/radios/{radio_product_id}/stations/{station_id}/transcoding/{stream_id}:
    delete:
      description: This endpoint allows you to remove transcoded stream.
      parameters:
      - description: The unique identifier (ID) of the radio product to request.
        explode: true
        in: path
        name: radio_product_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the station to request.
        explode: true
        in: path
        name: station_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the transcoded stream to request.
        explode: true
        in: path
        name: stream_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Remove transcoded stream
      tags:
      - Transcodings
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/signatures:
    get:
      description: Returns list of signature models for given service mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List signatures
      tags:
      - Service Mail > Signatures
      x-accepts: application/json
    post:
      description: Create new signature model for given service mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_25'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Create signature
      tags:
      - Service Mail > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/signatures/upload:
    post:
      description: Upload an image.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_26'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__signatures_upload_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Upload an image
      tags:
      - Service Mail > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/auto_replies:
    get:
      description: Returns list of auto replies models for given service mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List auto replies
      tags:
      - Service Mail > Auto Reply
      x-accepts: application/json
    post:
      description: Create new auto reply for given service mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_27'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Create auto reply
      tags:
      - Service Mail > Auto Reply
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/filters:
    get:
      description: Returns filters for given Service Mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List filters
      tags:
      - Service Mail > Filters
      x-accepts: application/json
    post:
      description: |-
        Create filters for given Service Mail

        *
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Create service mail filter
      tags:
      - Service Mail > Filters
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes:
    get:
      description: This endpoint allows you to retrieve all the mailboxes for a given
        mail hosting.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter_by
        required: false
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: List mailboxes
      tags:
      - Mailbox management
      x-accepts: application/json
    post:
      description: Creates a new mailbox in the mail hosting.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_28'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Add a mailbox
      tags:
      - Mailbox management
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_spam_filter:
    post:
      description: Toggle spam filter on given mailboxes
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_29'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Toggle spam filter
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_promotion_filter:
    post:
      description: Toggle promotions filter on given mailboxes
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_29'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Toggle promotions filter
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/set_permissions:
    post:
      description: Set global permissions to mailbox
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Set global permissions to mailbox
      tags:
      - Mailboxes > Actions
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/toggle_auto_reply:
    post:
      description: Toggle auto reply on / off on given mailboxes
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_30'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Set global permissions to mailbox
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/delete_redirects:
    post:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_31'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete all redirections for given mailboxes
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/apply_signature:
    post:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_32'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Apply a service mail signature model to given mailboxes
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/invitations:
    post:
      description: Create a new invitation of a given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_33'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Mailbox is blocked:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_blocked
                      description: Mailbox is blocked
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add an invitation
      tags:
      - Mailboxes > Users
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/set_activation:
    put:
      description: Enable or disable the filter of a given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_34'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_set_activation_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Enable / disable filter
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/reorder:
    put:
      description: Reorder the filters of a given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_35'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid mailbox filters:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_filters
                      description: Invalid mailbox filters
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_reorder_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Reorder filters
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters:
    delete:
      description: Delete a filter from the given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_37'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a filter
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
    get:
      description: Retrieve the sieve filters of a given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response'
          description: Invalid mailbox password
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List filters
      tags:
      - Mailboxes > Sieve filters
      x-accepts: application/json
    patch:
      description: Update the filter of a given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_38'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_set_activation_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a filter
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: Add a filter to the given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_36'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Sieve load error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sieve_load_error
                      description: Sieve load error
                      errors: []
                Invalid filter name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_name
                      description: Invalid filter name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_post_400_response'
          description: Sieve load error
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add a filter
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts:
    delete:
      description: Delete a sieve script from the given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_40'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a script
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
    patch:
      description: Update a sieve script for a given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_41'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a script
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: Add a sieve script to a given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_39'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid filter script content:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_content
                      description: Invalid filter script content
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add a script
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts/set_activation:
    put:
      description: Enable / disable a filter script for a given mailbox linked to
        the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_42'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Enable / disable script
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/filters/scripts/import:
    put:
      description: Import .siv file in a given mailbox linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_43'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid filter script name:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_filter_script_name
                      description: Invalid filter script name
                      errors: []
                Import filter script error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: import_filter_script_error
                      description: Import filter script error
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_import_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Import .siv file
      tags:
      - Mailboxes > Sieve filters
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders:
    get:
      description: Retrieves the folders of a given mailbox linked to the current
        user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response'
          description: Invalid mailbox password
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List folders
      tags:
      - Mailboxes > Folders
      x-accepts: application/json
    put:
      description: "Updates the folder mapping configuration for the draft, trash,\
        \ sent an spam folders of a given mailbox linked to the current user"
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_44'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Invalid mailbox folders:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_folders
                      description: Invalid mailbox folders
                      errors: []
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_put_400_response'
          description: Invalid mailbox folders
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update folders
      tags:
      - Mailboxes > Folders
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/upload:
    post:
      description: Upload an image.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_45'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__signatures_upload_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Upload an image
      tags:
      - Mailboxes > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures:
    get:
      description: Get a list of selected Mailbox Signatures.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List signatures
      tags:
      - Mailboxes > Signatures
      x-accepts: application/json
    post:
      description: Create a new signature for the given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_46'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: Created
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add a signature
      tags:
      - Mailboxes > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/check_verified:
    post:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Email not validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: email_not_validated
                      description: Email not validated
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_check_verified_post_400_response'
          description: Email not validated
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Check if email is already validated
      tags:
      - Mailboxes > Headers
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/forwarding_addresses:
    delete:
      description: Deletes all configured forwarding addresses of the given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete all forwardings
      tags:
      - Mailboxes > Forwarding
      x-accepts: application/json
    get:
      description: Retrieves information about the forwarding configuration of a given
        mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List forwarding
      tags:
      - Mailboxes > Forwarding
      x-accepts: application/json
    patch:
      description: Update a given mailbox forwarding.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_48'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Redirect address alias or mailboxname:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_alias_or_mailboxname
                      description: Redirect address alias or mailboxname
                      errors: []
                Too much redirections:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_much_redirections
                      description: Too much redirections
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a forwarding
      tags:
      - Mailboxes > Forwarding
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: Adds a new forwarding address to the given mailbox
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_47'
        description: Request body of the called URI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Too much redirections:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_much_redirections
                      description: Too much redirections
                      errors: []
                Redirect address already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_already_exists
                      description: Redirect address already exists
                      errors: []
                Max mailbox redirection:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: max_mailbox_redirection
                      description: Max mailbox redirection
                      errors: []
                Incorrect redirect address:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: incorrect_redirect_address
                      description: Incorrect redirect address
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_400_response'
          description: Too much redirections
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add a forwarding
      tags:
      - Mailboxes > Forwarding
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/model:
    get:
      description: Get auto replies models available for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List auto replies models
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
    post:
      description: Create an auto replies model for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add auto reply model
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/reset:
    put:
      description: Resets the count of automatic replies that were sent per sender.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Reset an auto reply
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/aliases:
    get:
      description: This endpoint allows you to retrieve all the aliases for a given
        mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List aliases
      tags:
      - Mailboxes > Aliases
      x-accepts: application/json
    post:
      description: Creates an alias on the given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_50'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot create alias for generic mailbox:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_for_generic_mailbox
                      description: Cannot create alias for generic mailbox
                      errors: []
                Cannot create alias with a redirection:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_with_a_redirection
                      description: Cannot create alias with a redirection
                      errors: []
                Alias already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_already_exists
                      description: Alias already exists
                      errors: []
                Alias limit reached:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_limit_reached
                      description: Alias limit reached
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add an alias
      tags:
      - Mailboxes > Aliases
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Updates the list of aliases for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_49'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot create alias for generic mailbox:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_create_alias_for_generic_mailbox
                      description: Cannot create alias for generic mailbox
                      errors: []
                Alias limit reached:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_limit_reached
                      description: Alias limit reached
                      errors: []
                Unknown error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unknown_error
                      description: Unknown error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update aliases
      tags:
      - Mailboxes > Aliases
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings:
    get:
      description: Returns a variety of information about one or more Hosting Mail
        from an Account identifier.
      parameters:
      - description: Unique identifier of the Account to request.
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: integer
        style: form
      - description: Search filter.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List products
      tags:
      - Product management
      x-accepts: application/json
  /1/mail_hostings/csv:
    get:
      description: Returns a variety of information about one or more Hosting Mail
        as CSV.
      parameters:
      - description: Account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings_csv_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Export products as csv
      tags:
      - Product management
      x-accepts: application/json
  /1/mail_hostings/invitations:
    get:
      description: Returns a variety of information about one or more Workspace invitation
        from an Account identifier.
      parameters:
      - description: Account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings_invitations_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: List workspace invitation
      tags:
      - Product management
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}:
    get:
      description: Get informations for a given hosting mail.
      parameters:
      - description: Unique identifier of the Hosting Mail to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Display a product
      tags:
      - Product management
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/preferences:
    get:
      description: Returns preferences for given Service Mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__preferences_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List preferences
      tags:
      - Service Mail > Preferences
      x-accepts: application/json
    patch:
      description: Update preferences for given service Mail
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_51'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Update preferences
      tags:
      - Service Mail > Preferences
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/signatures/{signature_id}:
    delete:
      description: Delete signature model
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Signature identifier
        explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_52'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete signature
      tags:
      - Service Mail > Signatures
      x-content-type: application/json
      x-accepts: application/json
    get:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Show a signature model
      tags:
      - Service Mail > Signatures
      x-accepts: application/json
    patch:
      description: Update signature model
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_53'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Update signature
      tags:
      - Service Mail > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/auto_replies/{auto_reply_id}:
    delete:
      description: Delete auto reply
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: auto_reply_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Delete auto reply
      tags:
      - Service Mail > Auto Reply
      x-accepts: application/json
    get:
      description: Show a specific auto reply model
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: auto_reply_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Show a specific auto reply
      tags:
      - Service Mail > Auto Reply
      x-accepts: application/json
    patch:
      description: Update auto reply
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: ServiceMailAutoReply identifier
        explode: true
        in: path
        name: auto_reply_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_54'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Update auto reply
      tags:
      - Service Mail > Auto Reply
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/filters/{filter_id}:
    delete:
      description: Delete  filters for given Service Mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Sieve filter identifier
        explode: true
        in: path
        name: filter_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Delete  filter
      tags:
      - Service Mail > Filters
      x-accepts: application/json
    get:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: filter_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Show a specific service mail filter
      tags:
      - Service Mail > Filters
      x-accepts: application/json
    put:
      description: Update filter for given Service Mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Sieve filter identifier
        explode: true
        in: path
        name: filter_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Update service mail filter
      tags:
      - Service Mail > Filters
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/batch/{batchId}:
    get:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: batchId
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      tags:
      - Mailboxes > Actions
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/users:
    get:
      description: Returns a variety of information about one or more users for a
        given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__users_get_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List users
      tags:
      - Mailbox management
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/invitations:
    get:
      description: Returns a variety of information about one or more user invitations
        for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings_invitations_get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List user invitations
      tags:
      - Mailbox management
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}:
    delete:
      description: Deletes a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Mailbox is smtpban:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_smtpban
                      description: Mailbox is smtpban
                      errors: []
                Mailbox is ldap locked:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_is_ldap_locked
                      description: Mailbox is ldap locked
                      errors: []
                Mailbox cannot delete quarantine:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_cannot_delete_quarantine
                      description: Mailbox cannot delete quarantine
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete a mailbox
      tags:
      - Mailbox management
      x-accepts: application/json
    get:
      description: Returns a variety of information about a single a Mailbox specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Display a mailbox
      tags:
      - Mailbox management
      x-accepts: application/json
    patch:
      description: Updates a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_55'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Update a mailbox
      tags:
      - Mailbox management
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/users:
    get:
      description: Retrieves the users of a given mailbox alias
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__users_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List users
      tags:
      - Mailboxes > Users
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/invitations:
    get:
      description: Retrieves the user invitations of a given mailbox alias.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings_invitations_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List user invitations
      tags:
      - Mailboxes > Users
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/models:
    get:
      description: Returns list of signature models for given service mail
      parameters:
      - description: ServiceMail identifier
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List signatures
      tags:
      - Mailboxes > Signatures
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/{signature_id}:
    delete:
      description: Deletes the given mailbox signature.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the signature to request.
        explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a signature
      tags:
      - Mailboxes > Signatures
      x-accepts: application/json
    get:
      description: Retrieves information about a given signature
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the signature to request.
        explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_400_response'
          description: Signature does not exist
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Display a signature
      tags:
      - Mailboxes > Signatures
      x-accepts: application/json
    patch:
      description: Updates a given mailbox signature.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the signature to request.
        explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_56'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
                Invalid reply to code:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_reply_to_code
                      description: Invalid reply to code
                      errors: []
                Invalid sender code:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_sender_code
                      description: Invalid sender code
                      errors: []
                Signature name already exists:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_name_already_exists
                      description: Signature name already exists
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__patch_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a signature
      tags:
      - Mailboxes > Signatures
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses:
    get:
      description: Returns a variety of information about one or more headers of a
        given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List headers
      tags:
      - Mailboxes > Headers
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply:
    delete:
      description: Deletes a given mailbox's auto reply.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete an auto reply
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
    get:
      description: Retrieves information about a given mailbox's auto reply configuration.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auto_reply_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Display an auto reply
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
    patch:
      description: Updates the auto reply configuration of a given mailbox
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_57'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update an auto reply
      tags:
      - Mailboxes > Auto reply
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auto_reply/model/{model_id}:
    delete:
      description: Delete an auto replies model for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: model_id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update auto reply model
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
    get:
      description: Show an auto replies model for a given mailbox
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: model_id
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auto_reply_model__model_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Show auto reply model
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
    patch:
      description: Update an auto replies model for a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: model_id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update auto reply model
      tags:
      - Mailboxes > Auto reply
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/invitations/send:
    put:
      description: Sends an invitation.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_58'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Invalid password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_password
                      description: Invalid password
                      errors: []
                Too many attempts try again in 1 minute:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: too_many_attempts_try_again_in_1_minute
                      description: Too many attempts try again in 1 minute
                      errors: []
                Cannot send invitation email:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_send_invitation_email
                      description: Cannot send invitation email
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_send_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Send an invitation
      tags:
      - Mailboxes > Users
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/users/{user_id}:
    delete:
      description: Removes a user from a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: User identifier
        explode: true
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Remove a user
      tags:
      - Mailboxes > Users
      x-accepts: application/json
    patch:
      description: Updates the permissions of a user on a given mailbox
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: User identifier
        explode: true
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_59'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update user permission
      tags:
      - Mailboxes > Users
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/invitations/{key}:
    delete:
      description: Deletes an invitation from a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete an invitation
      tags:
      - Mailboxes > Users
      x-accepts: application/json
    patch:
      description: Updates the permissions of a given invitation on a mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_59'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Cannot update invitation:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: cannot_update_invitation
                      description: Cannot update invitation
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__invitations__key__patch_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update invitation permission
      tags:
      - Mailboxes > Users
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/signatures/{signature_id}/default:
    put:
      description: Sets the given signature as the default one.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the signature to request.
        explode: true
        in: path
        name: signature_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Signature does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: signature_does_not_exist
                      description: Signature does not exist
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Set a signature as default
      tags:
      - Mailboxes > Signatures
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/send_validation:
    put:
      description: Send validation email with code when adding a new sender/reply
        address.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_60'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Sender reply address already validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sender_reply_address_already_validated
                      description: Sender reply address already validated
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Send validation email with code
      tags:
      - Mailboxes > Headers
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/send_validation_link:
    put:
      description: Send validation email with link when adding a new sender/reply
        address.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_60'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Sender reply address already validated:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: sender_reply_address_already_validated
                      description: Sender reply address already validated
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_link_put_400_response'
          description: Sender reply address already validated
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Send validation email with link
      tags:
      - Mailboxes > Headers
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/validate:
    put:
      description: Validate a new sender/reply address.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_61'
        description: Request body of the called URI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Validate a sender
      tags:
      - Mailboxes > Headers
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/actions/delete_mailboxes:
    delete:
      parameters:
      - explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_62'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete mailbox of a service mail
      tags:
      - Mailboxes > Actions
      x-content-type: application/json
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders/spam:
    delete:
      description: Deletes all mails currently in the spam folder of the given mailbox
        linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response'
          description: Invalid mailbox password
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Purge spam folder
      tags:
      - Mailboxes > Folders
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/auth/folders/trash:
    delete:
      description: Deletes all mails currently in the trash folder of the given mailbox
        linked to the current user
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Invalid mailbox password:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: invalid_mailbox_password
                      description: Invalid mailbox password
                      errors: []
                Mailbox not linked to current user:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: mailbox_not_linked_to_current_user
                      description: Mailbox not linked to current user
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response'
          description: Invalid mailbox password
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Empty trash folder
      tags:
      - Mailboxes > Folders
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/headers/addresses/{verified_email_id}:
    delete:
      description: Delete a sender/reply address.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: sender/reply address to remove (verified_email identifier)
        explode: true
        in: path
        name: verified_email_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a sender
      tags:
      - Mailboxes > Headers
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/forwarding_addresses/{redirect_addresses}:
    delete:
      description: Deletes the given forwarding address from the given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: path
        name: redirect_addresses
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Redirect address does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: redirect_address_does_not_exist
                      description: Redirect address does not exist
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses__redirect_addresses__delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a forwarding
      tags:
      - Mailboxes > Forwarding
      x-accepts: application/json
  /1/mail_hostings/{mail_hosting_id}/mailboxes/{mailbox_name}/aliases/{alias}:
    delete:
      description: Removes an alias from a given mailbox.
      parameters:
      - description: The unique identifier (ID) of the mail hosting to request.
        explode: true
        in: path
        name: mail_hosting_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The username (that is the part before the @) of the email address
          you want to request.
        explode: true
        in: path
        name: mailbox_name
        required: true
        schema:
          type: string
        style: simple
      - description: Alias to remove.
        explode: true
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
                Alias does not exist:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: alias_does_not_exist
                      description: Alias does not exist
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases__alias__delete_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete an alias
      tags:
      - Mailboxes > Aliases
      x-accepts: application/json
  /2/profile/avatar:
    delete:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Delete profile's avatar.
      tags:
      - Profile/Others
      x-accepts: application/json
    post:
      description: "Image must be a scared image with minimum size of 16 of type image/png,\
        \ image/jpeg or image/gif"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_63'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_avatar_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Add / Update profile's avatar.
      tags:
      - Profile/Others
      x-content-type: application/json
      x-accepts: application/json
  /2/profile/applications/passwords:
    get:
      description: This endpoint allows you to retrieve all the application password
        of the current user.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_applications_passwords_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List applications passwords
      tags:
      - Applications Passwords
      x-accepts: application/json
    post:
      description: |-
        Add a profile specific password
        Warning: password given in response cannot be retrieved later, so store / show it immediately
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_applications_passwords_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Add an application password
      tags:
      - Applications Passwords
      x-accepts: application/json
  /1/accounts:
    get:
      description: This endpoint allows you to retrieve all the accounts of a user.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_accounts_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List accounts
      tags:
      - Accounts
      x-accepts: application/json
  /1/accounts/{account_id}:
    get:
      description: Returns a variety of information about a single Account specified
        by the requested unique identifier.
      parameters:
      - description: Unique identifier of the Account to request.
        explode: true
        in: path
        name: account_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_accounts__account_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Display an account
      tags:
      - Accounts
      x-accepts: application/json
  /1/accounts/{account_id}/services:
    get:
      description: This endpoint allows you to retrieve all the services of an account.
      parameters:
      - description: Unique identifier of the Account to request.
        explode: true
        in: path
        name: account_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_accounts__account_id__services_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List services
      tags:
      - Accounts
      x-accepts: application/json
  /1/async/tasks:
    get:
      description: This endpoint allows you to retrieve all the tasks.
      parameters:
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_async_tasks_get_200_response'
          description: OK
      summary: List tasks
      tags:
      - Tasks
      x-accepts: application/json
  /1/async/tasks/{task_uuid}:
    get:
      description: Returns a variety of information about a single Task specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (UUID) of the task to request.
        explode: true
        in: path
        name: task_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_async_tasks__task_uuid__get_200_response'
          description: OK
      summary: Display a task
      tags:
      - Tasks
      x-accepts: application/json
  /1/countries:
    get:
      description: This endpoint allows you to retrieve all the countries.
      parameters:
      - explode: true
        in: query
        name: only_enabled
        required: false
        schema:
          title: only_enabled
          type: boolean
        style: form
      - explode: true
        in: query
        name: only_enabled_exception
        required: false
        schema:
          items:
            title: item
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: search
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_countries_get_200_response'
          description: OK
      summary: List countries
      tags:
      - Countries
      x-accepts: application/json
  /1/countries/{country_id}:
    get:
      description: Returns a variety of information about a single Country specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the country to request.
        explode: true
        in: path
        name: country_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_countries__country_id__get_200_response'
          description: OK
      summary: Display a country
      tags:
      - Countries
      x-accepts: application/json
  /1/languages:
    get:
      description: This endpoint allows you to retrieve all the languages.
      parameters:
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_languages_get_200_response'
          description: OK
      summary: List languages
      tags:
      - Languages
      x-accepts: application/json
  /1/languages/{language_id}:
    get:
      description: Returns a variety of information about a single Language specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the language to request.
        explode: true
        in: path
        name: language_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_languages__language_id__get_200_response'
          description: OK
      summary: Display a language
      tags:
      - Languages
      x-accepts: application/json
  /1/products:
    get:
      description: This endpoint allows you to retrieve all the products where the
        current user's has at least one right.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          description: "Unique identifier of the `account` that is related to the\
            \ resource `{name}`"
          example: 1234
          title: account_id
          type: integer
        style: form
      - explode: true
        in: query
        name: customer_name
        required: false
        schema:
          description: "Customer name of the resource `{name}`"
          example: My kDrive
          title: customer_name
          type: string
        style: form
      - explode: true
        in: query
        name: fqdn
        required: false
        schema:
          example: www.my-domain.ch
          title: fqdn
          type: string
        style: form
      - explode: true
        in: query
        name: internal_name
        required: false
        schema:
          example: My kDrive
          title: internal_name
          type: string
        style: form
      - explode: true
        in: query
        name: product_id
        required: false
        schema:
          description: "Unique identifier of the `product` that is related to the\
            \ resource `{name}`"
          example: 1234
          title: product_id
          type: integer
        style: form
      - explode: true
        in: query
        name: service_id
        required: false
        schema:
          description: "Unique identifier of the `service` that is related to the\
            \ resource `{name}`"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - 7
          - 10
          - 14
          - 15
          - 18
          - 23
          - 25
          - 26
          - 29
          - 30
          - 31
          - 34
          - 35
          - 37
          - 40
          - 43
          - 48
          - 50
          example: 40
          title: service_id
          type: integer
        style: form
      - explode: true
        in: query
        name: service_name
        required: false
        schema:
          description: Name of the service
          enum:
          - backup
          - certificate
          - cloud
          - cloud_hd
          - custom_url
          - dedicated_server
          - domain
          - drive
          - e_ticketing
          - email_hosting
          - hosting
          - housing
          - invitation
          - jelastic
          - mailing
          - nas
          - public_cloud
          - radio
          - swiss_backup
          - video
          - vod
          - web_hosting
          - website_builder
          example: drive
          title: service_name
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_products_get_200_response'
          description: OK
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      summary: List products
      tags:
      - Products
      x-accepts: application/json
  /1/timezones:
    get:
      description: This endpoint allows you to retrieve all the timezones.
      parameters:
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: search
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_timezones_get_200_response'
          description: OK
      summary: List timezones
      tags:
      - Timezones
      x-accepts: application/json
  /1/timezones/{timezone_id}:
    get:
      description: Returns a variety of information about a single Timezone specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the timezone to request.
        explode: true
        in: path
        name: timezone_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_timezones__timezone_id__get_200_response'
          description: OK
      summary: Display a timezone
      tags:
      - Timezones
      x-accepts: application/json
  /2/events:
    get:
      description: This endpoint allows you to retrieve all the opened events.
      parameters:
      - explode: true
        in: query
        name: event_type
        required: false
        schema:
          enum:
          - internal
          - public
          - server
          - streaming
          title: event_type
          type: string
        style: form
      - explode: true
        in: query
        name: locale
        required: false
        schema:
          description: Represents a language identifier and a region identifier
          enum:
          - de
          - en
          - es
          - fr
          - it
          title: locale
          type: string
        style: form
      - explode: true
        in: query
        name: show_auto
        required: false
        schema:
          title: show_auto
          type: boolean
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          description: "Status of the resource `{name}`"
          enum:
          - inprogress
          - reviewed
          - terminated
          title: status
          type: string
        style: form
      - explode: true
        in: query
        name: with_trashed
        required: false
        schema:
          title: with_trashed
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_events_get_200_response'
          description: OK
      summary: List events
      tags:
      - Events
      x-accepts: application/json
  /2/events/{event_id}:
    get:
      description: Returns a variety of information about a single Event specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the event to request.
        explode: true
        in: path
        name: event_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_events__event_id__get_200_response'
          description: OK
      summary: Display an event
      tags:
      - Events
      x-accepts: application/json
  /2/profile:
    get:
      description: This endpoint allows you to retrieve all the informations of the
        current user.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: List user informations
      tags:
      - Profile/Others
      x-accepts: application/json
    patch:
      parameters:
      - explode: true
        in: query
        name: dry_run
        required: false
        schema:
          description: Ensures that the request passes the system validation
          title: dry_run
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_64'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update profile information
      tags:
      - Profile/Others
      x-content-type: application/json
      x-accepts: application/json
  /2/profile/support/tickets:
    get:
      description: This endpoint allows you to retrieve all the support tickets of
        the current user.
      parameters:
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_support_tickets_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List support tickets
      tags:
      - Support
      x-accepts: application/json
  /2/profile/logs:
    get:
      description: This endpoint allows you to retrieve all the activity logs related
        to your user.
      parameters:
      - explode: true
        in: query
        name: action_id
        required: false
        schema:
          title: action_id
          type: integer
        style: form
      - explode: true
        in: query
        name: created_at_end
        required: false
        schema:
          minimum: 1632379
          title: created_at_end
          type: integer
        style: form
      - explode: true
        in: query
        name: created_at_start
        required: false
        schema:
          maximum: 1663828856
          minimum: 1632292
          title: created_at_start
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          maxLength: 128
          minLength: 1
          title: search
          type: string
        style: form
      - explode: true
        in: query
        name: service_id
        required: false
        schema:
          description: "Unique identifier of the `service` that is related to the\
            \ resource `{name}`"
          maximum: 100
          minimum: 1
          title: service_id
          type: integer
        style: form
      - explode: true
        in: query
        name: user_id
        required: false
        schema:
          title: user_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_logs_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List logs
      tags:
      - Logs
      x-accepts: application/json
  /2/profile/emails:
    get:
      description: Retrieve list of all email addresses of the current user's profile.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_emails_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List emails
      tags:
      - Emails
      x-accepts: application/json
  /2/profile/emails/{email_type}/{email_id}:
    delete:
      description: Delete an email address of the current user's profile.
      parameters:
      - description: The email type (email|email_request) to request.
        explode: true
        in: path
        name: email_type
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the email to request.
        explode: true
        in: path
        name: email_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete an email
      tags:
      - Emails
      x-accepts: application/json
    get:
      description: Get details of a specific email address of the current user's profile.
      parameters:
      - description: The email type (email|email_request) to request.
        explode: true
        in: path
        name: email_type
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier (ID) of the email to request.
        explode: true
        in: path
        name: email_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_emails__email_type___email_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Display an email
      tags:
      - Emails
      x-accepts: application/json
  /2/profile/phones:
    get:
      description: This endpoint allows you to retrieve all the phones of the current
        user.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_phones_get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: List phones
      tags:
      - Phones
      x-accepts: application/json
  /2/profile/phones/{phone_id}:
    delete:
      description: Delete a current user profile phone
      parameters:
      - description: The unique identifier (ID) of the phone to request.
        explode: true
        in: path
        name: phone_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a phone
      tags:
      - Phones
      x-accepts: application/json
    get:
      description: Returns a variety of information about a single phone specified
        by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the phone to request.
        explode: true
        in: path
        name: phone_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_phones__phone_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Display a phone
      tags:
      - Phones
      x-accepts: application/json
  /2/profile/applications/passwords/{password_id}:
    get:
      description: Returns a variety of information about a single application password
        specified by the requested unique identifier.
      parameters:
      - description: The unique identifier (ID) of the password to request.
        explode: true
        in: path
        name: password_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_2_profile_applications_passwords__password_id__get_200_response'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_authorized
                      description: Forbidden
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: not_found
                      description: Not Found
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response'
          description: Not Found
      security:
      - bearerAuth: []
      summary: Display an application password
      tags:
      - Applications Passwords
      x-accepts: application/json
  /1/videos:
    get:
      description: This endpoint allows you to retrieve all channels on the pack order.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List channels
      tags:
      - Channel
      x-accepts: application/json
    post:
      description: This endpoint allows you to create a channel.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_65'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Create a channel
      tags:
      - Channel
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/events:
    get:
      description: This endpoint allows you to retrieve all Event.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__events_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List all events
      tags:
      - Event
      x-accepts: application/json
    post:
      description: This endpoint allows you to create an Event.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_66'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__events_post_201_response'
          description: Created
      security:
      - bearerAuth: []
      summary: Create an event
      tags:
      - Event
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/players:
    get:
      description: This endpoint allows you to retrieve all players.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Skip'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Lists all players
      tags:
      - Players
      x-accepts: application/json
    post:
      description: This endpoint allows you to create a new player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Create a player
      tags:
      - Players
      x-accepts: application/json
  /1/videos/{channel}/players/{player}:
    delete:
      description: This endpoint allows you to delete a player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a player
      tags:
      - Players
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return a player
      tags:
      - Players
      x-accepts: application/json
    post:
      description: This endpoint allows you to copy a player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Copy a player
      tags:
      - Players
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update a player
      tags:
      - Players
      x-accepts: application/json
  /1/videos/{channel}/options/recording:
    get:
      description: This endpoint allows you to retrieve to get the recording config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return Recording config
      tags:
      - Option > Record
      x-accepts: application/json
    post:
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Create recording config
      tags:
      - Option > Record
      x-accepts: application/json
    put:
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_67'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update recording config
      tags:
      - Option > Record
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/options/recording/storage:
    get:
      description: This endpoint allows you to retrieve all storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_storage_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Lists all storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
    post:
      description: This endpoint allows you to create a new storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_storage_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Return a storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
  /1/videos/{channel}/options/recording/storage/test:
    post:
      description: This endpoint allows you to test a storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Update a storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
  /1/videos/{channel}/options/watermark:
    get:
      description: This endpoint allows you to retrieve to get the watermark.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_watermark_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Return watermark
      tags:
      - Option > Watermarking
      x-accepts: application/json
    post:
      description: This endpoint allows you to retrieve to create the watermark.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_watermark_get_200_response'
          description: Created
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Create watermark
      tags:
      - Option > Watermarking
      x-accepts: application/json
    put:
      description: This endpoint allows you to retrieve to update the watermark.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_watermark_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Update watermark
      tags:
      - Option > Watermarking
      x-accepts: application/json
  /1/videos/{channel}/options/timeshift:
    get:
      description: This endpoint allows you to retrieve to get a timeshift config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_timeshift_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return timeshift config
      tags:
      - Option > Timeshift
      x-accepts: application/json
    post:
      description: This endpoint allows you to retrieve to create a timeshift config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_timeshift_get_200_response'
          description: Created
      security:
      - bearerAuth: []
      summary: Create a timeshift config.
      tags:
      - Option > Timeshift
      x-accepts: application/json
    put:
      description: This endpoint allows you to retrieve to update a timeshift config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_timeshift_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Update a timeshift config
      tags:
      - Option > Timeshift
      x-accepts: application/json
  /1/videos/order:
    get:
      description: |-
        Retrieve all info about the pack currently used by the account from
        which the request was made. This includes pricing and excess data.
        If the account has no active offer, this will throw an error.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Returns a pack order
      tags:
      - order
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a Pack order.
      parameters:
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_68'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "422":
          content:
            application/json:
              examples:
                Unprocessable Entity:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: unprocessable_entity
                      description: Unprocessable Entity
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      summary: Update a pack
      tags:
      - order
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/prices:
    get:
      description: This endpoint allows you to retrieve get the price on the pack
        order.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Get price
      tags:
      - Prices
      x-accepts: application/json
  /1/videos/prices/description:
    get:
      description: This endpoint allows you to retrieve get the description on the
        pack order.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Get description
      tags:
      - Prices
      x-accepts: application/json
  /1/videos/stats/consumption:
    get:
      description: This endpoint allows you to retrieve Global consumption all channel
        on the pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_consumption_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Consumption
      tags:
      - Stats > Globals > Consumption
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/consumption/channels/histogram:
    get:
      description: This endpoint allows you to retrieve Global Histogram per channel
        on the pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_consumption_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Consumption per Channel histogram
      tags:
      - Stats > Globals > Consumption
      x-accepts: application/json
  /1/videos/stats/viewers:
    get:
      description: This endpoint allows you to retrieve Global viewers on the pack
        order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers
      tags:
      - Stats > Globals > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/viewers/uniques:
    get:
      description: This endpoint allows you to retrieve Global unique viewers on the
        pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Unique Viewers
      tags:
      - Stats > Globals > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/viewers/histogram:
    get:
      description: This endpoint allows you to retrieve Global unique viewers histogram
        on the pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_histogram_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers Histogram
      tags:
      - Stats > Globals > Viewers
      x-accepts: application/json
  /1/videos/stats/viewers/channels/histogram:
    get:
      description: This endpoint allows you to retrieve Global viewers histogram per
        channel.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers per channel histogram
      tags:
      - Stats > Globals > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/viewers/channels/shares:
    get:
      description: This endpoint allows you to retrieve Global viewers histogram share
        per channel.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers per channel share
      tags:
      - Stats > Globals > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/viewing:
    get:
      description: This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewing time
      tags:
      - Stats > Globals > Viewing
      x-accepts: application/json
  /1/videos/stats/viewing/channels/histogram:
    get:
      description: This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewing histogram par channel
      tags:
      - Stats > Globals > Viewing
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/geolocation/countries:
    get:
      description: This endpoint allows you to retrieve Global all countries on the
        pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Countries
      tags:
      - Stats > Globals > Geolocation
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/stats/geolocation/clusters:
    get:
      description: This endpoint allows you to retrieve Global unique viewers on the
        pack order.
      parameters:
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Clusters
      tags:
      - Stats > Globals > Geolocation
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}:
    delete:
      description: This endpoint allows you to delete a channel.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Delete a channel
      tags:
      - Channel
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a channel.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_post_201_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return a channel
      tags:
      - Channel
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows you to update a config of the channel.

        Trigger a full (re-)configuration of the given channel, based on the given request.
        This may also only update the channel's metadata based on the configuration request.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_70'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_post_201_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Config a channel
      tags:
      - Channel
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/consumption:
    get:
      description: This endpoint allows you to retrieve channel consumption stats.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_consumption_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Consumption
      tags:
      - Stats > Channels > Consumption
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/consumption/resolutions/histogram:
    get:
      description: This endpoint allows you to retrieve consumption Per resolution
        histogram.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Consumption Per resolution
      tags:
      - Stats > Channels > Consumption
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/geolocation/countries:
    get:
      description: This endpoint allows you to retrieve get countries.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__stats_geolocation_countries_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Countries
      tags:
      - Stats > Channels > Geolocation
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/geolocation/clusters:
    get:
      description: This endpoint allows you to retrieve get clusters.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__stats_geolocation_clusters_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Clusters
      tags:
      - Stats > Channels > Geolocation
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/technologies/browsers/shares:
    get:
      description: This endpoint allows you to retrieve get browsers share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Browsers share
      tags:
      - Stats > Channels > Technologies
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/technologies/players/shares:
    get:
      description: This endpoint allows you to retrieve get player share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Player share
      tags:
      - Stats > Channels > Technologies
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/technologies/os/shares:
    get:
      description: This endpoint allows you to retrieve get OS share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: OS share
      tags:
      - Stats > Channels > Technologies
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewers:
    get:
      description: This endpoint allows you to retrieve get viewers share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers share
      tags:
      - Stats > Channels > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewers/histogram:
    get:
      description: This endpoint allows you to retrieve get viewers Histogram share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers Histogram share
      tags:
      - Stats > Channels > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewers/resolutions/shares:
    get:
      description: This endpoint allows you to retrieve get viewers per resolution
        share.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__stats_viewers_resolutions_shares_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers per resolution share.
      tags:
      - Stats > Channels > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewers/resolutions/histogram:
    get:
      description: This endpoint allows you to retrieve get viewers per resolution
        histogram.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__stats_viewers_resolutions_histogram_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewers per resolution histogram.
      tags:
      - Stats > Channels > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewers/uniques:
    get:
      description: This endpoint allows you to retrieve get unique viewers.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Unique viewers.
      tags:
      - Stats > Channels > Viewers
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewing:
    get:
      description: This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_body_69'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_stats_viewers_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewing time
      tags:
      - Stats > Channels > Viewing
      x-content-type: application/json
      x-accepts: application/json
  /1/videos/{channel}/stats/viewing/resolutions/histogram:
    get:
      description: This endpoint allows you to retrieve Global Viewing histogram per
        channel.
      parameters:
      - description: The unique identifier (ID) of the Pack order to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the starting date to get Consumption
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: to
        required: true
        schema:
          type: string
        style: form
      - description: Specify the ending date to get Consumption
        explode: true
        in: query
        name: per
        required: true
        schema:
          type: string
        style: form
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__stats_viewers_resolutions_histogram_get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Viewing histogram par channel
      tags:
      - Stats > Channels > Viewing
      x-accepts: application/json
  /1/videos/{channel}/events/{repeatable_planned_event}:
    delete:
      description: This endpoint allows you to delete an Event.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: repeatable_planned_event
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Delete an event
      tags:
      - Event
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve an Event.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the event to request.
        explode: true
        in: path
        name: repeatable_planned_event
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__events_post_201_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return an event
      tags:
      - Event
      x-accepts: application/json
    put:
      description: This endpoint allows you to update an Event.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: repeatable_planned_event
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__events_post_201_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Update an event
      tags:
      - Event
      x-accepts: application/json
  /1/videos/{channel}/integrations:
    get:
      description: This implies manual integration between the broadcast source and
        the broadcast method.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__integrations_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Integration code
      tags:
      - Integrations
      x-accepts: application/json
  /1/videos/{channel}/players/{player}/thumbnail/{thumbnail}:
    get:
      description: This endpoint allows you to retrieve a Vignette for the player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: thumbnail
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__get_200_response'
          description: OK
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Show picture
      tags:
      - Players > Pictures
      x-accepts: application/json
  /1/videos/{channel}/players/{player}/embed:
    get:
      description: Integrate the player into your site by cutting / pasting the HTML5
        code below.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__players__player__embed_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Integration code
      tags:
      - Players > Embeds
      x-accepts: application/json
  /1/videos/{channel}/players/{player}/embed/url:
    get:
      description: |-
        Try to retrieve the parameters needed to construct an iframe for the player identified by the given
        player ID for the given channel, or for the last updated player of the channel, if any.
        If the channels hasn't any player and that no player ID is provided,
        it will return parameters for a default player.

        If the channels doesn't exist or that the player isn't linked to the channel,
        or that the channel is badly configured, this will throw an error.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: The unique identifier (ID) of the player to request.
        explode: true
        in: path
        name: player
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__players__player__embed_url_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Integration url
      tags:
      - Players > Embeds
      x-accepts: application/json
  /1/videos/{channel}/options:
    get:
      description: This endpoint allows you to retrieve to see all option of the  channel.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: List option
      tags:
      - Option
      x-accepts: application/json
  /1/videos/{channel}/options/{video_option}:
    get:
      description: This endpoint allows you to retrieve option.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_option
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options__video_option__get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return option
      tags:
      - Option
      x-accepts: application/json
  /1/videos/{channel}/options/recording/instant:
    get:
      description: This endpoint allows you to retrieve to update a Recording config.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Create recording config
      tags:
      - Option > Record > Instant
      x-accepts: application/json
  /1/videos/{channel}/options/recording/storage/{video_storage_machine}:
    delete:
      description: This endpoint allows you to delete a storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_storage_machine
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Update a storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve a storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_storage_machine
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_storage_post_201_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Create a storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
    put:
      description: This endpoint allows you to update a storage machine.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_storage_machine
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_recording_storage_post_201_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Update a storage machine
      tags:
      - Option > Record > Storage
      x-accepts: application/json
  /1/videos/{channel}/options/simulcast:
    get:
      description: This endpoint allows you to retrieve to get the simulcast.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      - $ref: '#/components/parameters/Return'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
      - $ref: '#/components/parameters/OrderBy'
      - $ref: '#/components/parameters/Order'
      - $ref: '#/components/parameters/OrderFor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_simulcast_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Lists all simulcast config
      tags:
      - Option > simulcast
      x-accepts: application/json
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}:
    delete:
      description: This endpoint allows you to retrieve to delete the player.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_simulcast_config
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: internal_server_error
                      description: Internal Server Error
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Delete a player
      tags:
      - Option > simulcast
      x-accepts: application/json
    get:
      description: This endpoint allows you to retrieve to get the simulcast.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_simulcast_config
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_simulcast__video_simulcast_config__get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Return simulcast
      tags:
      - Option > simulcast
      x-accepts: application/json
  /1/videos/countries:
    get:
      description: List all the countries available for anything as Code => Name.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_countries_get_200_response'
          description: OK
      summary: List countries
      tags:
      - Misc > Countries
      x-accepts: application/json
  /1/videos/timezones:
    get:
      description: "List all the timezones available for  \"America/Asuncion\": \"\
        (GMT-03:00) Asuncion\",."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_timezones_get_200_response'
          description: OK
      summary: List timezones
      tags:
      - Misc > Countries
      x-accepts: application/json
  /1/videos/password:
    get:
      description: |-
        Generate a random password string in base 52 (0-9a-zA-Z minus aeiouAEIOU).
        The first 5 vowels have been removed to avoid bad luck passwords
        (1fUcky0u for example).
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__players__player_id__thumbnail_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      summary: Generate stream key
      tags:
      - Misc > stream
      x-accepts: application/json
  /1/videos/{channel}/live/start:
    put:
      description: Attempt to resume the live if interrupted or does nothing otherwise.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_post_201_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Resume the live
      tags:
      - Live
      x-accepts: application/json
  /1/videos/{channel}/live/stop:
    put:
      description: Attempt to interrupt the live if not already interrupted or does
        nothing otherwise.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      - description: The account identifier
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: Account identifier
          example: 42000
          title: account_id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos_post_201_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Interrupt the live
      tags:
      - Live
      x-accepts: application/json
  /1/videos/{channel}/options/{video_option}/recommit:
    put:
      description: |-
        This WILL NOT restore an option effectively terminated, regardless of whether the option has been
        instantly terminated or its termination date has been reached.

        If the given option has already been marked for termination for the given channel
        then this won't do anything.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_option
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Undertake option
      tags:
      - Option
      x-accepts: application/json
  /1/videos/{channel}/options/watermark/enable:
    put:
      description: This endpoint allows you to retrieve to enable the watermark.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_watermark_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Enabled watermark
      tags:
      - Option > Watermarking
      x-accepts: application/json
  /1/videos/{channel}/options/watermark/disable:
    put:
      description: This endpoint allows you to retrieve to enable the watermark.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_videos__channel__options_watermark_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Disable watermark
      tags:
      - Option > Watermarking
      x-accepts: application/json
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}/enable:
    put:
      description: This endpoint allows you to retrieve to enable the simulcast.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_simulcast_config
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Disable simulcast
      tags:
      - Option > simulcast
      x-accepts: application/json
  /1/videos/{channel}/options/simulcast/{video_simulcast_config}/disable:
    put:
      description: This endpoint allows you to retrieve to disable the simulcast.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_simulcast_config
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response'
          description: OK
      security:
      - bearerAuth: []
      summary: Disable simulcast
      tags:
      - Option > simulcast
      x-accepts: application/json
  /1/videos/{channel}/options/{video_option}/terminate:
    delete:
      description: This endpoint allows you to retrieve to terminate the option.
      parameters:
      - description: The unique identifier (ID) of the channel to request.
        explode: true
        in: path
        name: channel
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: path
        name: video_option
        required: false
        schema:
          type: string
        style: simple
      - description: "*Optional* : Allows loading additional data about a resource,\
          \ which may include related resources."
        explode: true
        in: query
        name: with
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  summary: Example
                  value:
                    result: error
                    error:
                      code: error
                      description: Bad Request
                      errors: []
              schema:
                $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: Terminate option
      tags:
      - Option
      x-accepts: application/json
components:
  parameters:
    from:
      description: begin date timestamp
      example: "1640390400"
      explode: true
      in: query
      name: from
      required: false
      schema:
        type: string
      style: form
    perhisto:
      description: "Histogram grouped by 1d,1h,1m .."
      example: 1d
      explode: true
      in: query
      name: per
      required: false
      schema:
        type: string
      style: form
    Return:
      description: |
        *Optional* :  If you pass this parameter with the value `total`, then the response will be the number of items in the collection, instead of the items themselves.<br />
        Part of the `total` capacity
      explode: true
      in: query
      name: return
      required: false
      schema:
        enum:
        - total
        type: string
      style: form
    Limit:
      description: |
        *Optional parameter* that define the number of items to return<br />
        Part of the `offset` capacity
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    Skip:
      description: |
        *Optional parameter* that define the index of the first item to return (0 = first item)<br />
        Part of the `offset` capacity
      example: 2
      explode: true
      in: query
      name: skip
      required: false
      schema:
        type: integer
      style: form
    Page:
      description: |
        *Optional parameter* that define the page number<br />
        Part of the `pagination` capacity
      example: 5
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: integer
      style: form
    PerPage:
      description: |
        *Optional parameter* that define the number of items per page<br />
        Part of the `pagination` capacity
      example: 10
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        type: integer
      style: form
    OrderBy:
      description: |
        *Optional parameter* that define the field used for sorting<br />
        Part of the `sort` capacity
      example: id
      explode: false
      in: query
      name: order_by
      required: false
      schema:
        oneOf:
        - type: string
        - items:
            type: string
      style: form
    Order:
      description: |
        *Optional parameter* that define the default sort order<br />
        Part of the `sort` capacity
      example: asc
      explode: true
      in: query
      name: order
      required: false
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
      style: form
    OrderFor:
      description: |
        *Optional parameter* that define the sorting order for a field<br />
        By default **order** is used<br />
        Part of the `sort` capacity
      explode: true
      in: query
      name: order_for
      required: false
      schema:
        type: object
      style: deepObject
  responses:
    "0":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request is malformed.
    "1":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Access to the resource is forbidden for this user.
    "2":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Resource requested not found.
    "3":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: There was an internal error in the server.
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
      description: Do not have appropriate permissions
    Unauthorized:
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: error
                  type: string
                error:
                  properties:
                    code:
                      example: vod_not_authorized
                      type: string
                    description:
                      example: Authorization required
                      type: string
            properties:
              data: {}
      description: Unauthorized
    BadRequest:
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/ApiError'
            properties:
              data: {}
      description: BadRequest
    NotFound:
      content:
        application/json:
          schema: {}
      description: NotFound
    TooLarge:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
      description: Content too large
    NotImplemented:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
      description: Feature is disabled
    TooManyRequests:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
      description: Too many requests
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
      description: Something went wrong with the server
    a039ea57:
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 404
                      type: string
                    description:
                      example: "404 : ModelNotFoundException"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "404 : ModelNotFoundException"
    "2f952ed9":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 422
                      type: string
                    description:
                      example: "422 : The given data was invalid."
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "422 : The given data was invalid."
    "08d6964f":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 400
                      type: string
                    description:
                      example: "400 : BadRequestHttpException"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "400 : BadRequestHttpException"
    "4bc0f255":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 404
                      type: string
                    description:
                      example: "404 : MissingModelBehaviorException"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "404 : MissingModelBehaviorException"
    "9436319d":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 404
                      type: string
                    description:
                      example: "404 : InvalidImageFormatException"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "404 : InvalidImageFormatException"
    "41638d24":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 404
                      type: string
                    description:
                      example: "404 : FileException"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "404 : FileException"
    "556bb773":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 401
                      type: string
                    description:
                      example: "401 : NotAuthorized"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "401 : NotAuthorized"
    e7a7a4eb:
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 404
                      type: string
                    description:
                      example: "404 : CountHalt"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "404 : CountHalt"
    "5e128766":
      content:
        application/json:
          schema:
            allOf:
            - properties:
                result:
                  example: failure
                  type: string
                error:
                  properties:
                    code:
                      example: 500
                      type: string
                    description:
                      example: "500 : Exception"
                      type: string
                    context:
                      type: object
            properties:
              data: {}
      description: "500 : Exception"
    GenericPaginatedOrNotPaginatedSuccessResponse:
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - $ref: '#/components/schemas/TotalSuccessResponse'
            - $ref: '#/components/schemas/PaginatedSuccessResponse'
      description: OK
  schemas:
    PlannedConference:
      example:
        ending_at: 2020-06-01 20:00:00
        hostname: kmeet.infomaniak.com
        calendar_id: 0
        timezone: Europe/Zurich
        attendees:
        - address: myemail@ik.me
          organizer: true
          name: name
          state: NEEDS-ACTION
        - address: myemail@ik.me
          organizer: true
          name: name
          state: NEEDS-ACTION
        starting_at: 2020-06-01 20:00:00
        options:
        - enable_moderator_video: true
          password: password
          password_enabled: true
          subject: subject
          drive_id: 6
          lobby_enabled: true
          e2ee_enabled: true
          start_audio_muted: true
          start_audio_only: true
          enable_recording: true
        - enable_moderator_video: true
          password: password
          password_enabled: true
          subject: subject
          drive_id: 6
          lobby_enabled: true
          e2ee_enabled: true
          start_audio_muted: true
          start_audio_only: true
          enable_recording: true
        description: description
        title: title
      properties:
        calendar_id:
          description: The unique identifier (ID) of the Infomaniak Calendar where
            you want to plan the meeting. Make a GET request on https://calendar.infomaniak.com/api/pim/calendar
          title: The unique identifier (ID) of the Infomaniak Calendar
          type: integer
        starting_at:
          example: 2020-06-01 20:00:00
          title: Event starting date
          type: string
        ending_at:
          description: Room settings can be deleted if this date expires. This field
            will be updated if event dates change in Infomaniak Calendar.
          example: 2020-06-01 20:00:00
          title: Event ending date
          type: string
        timezone:
          example: Europe/Zurich
          title: Event timezone
          type: string
        hostname:
          description: Needed for rebuilding room url
          example: kmeet.infomaniak.com
          maxLength: 255
          title: Hostname
          type: string
        title:
          maxLength: 150
          minLength: 1
          title: Event title
          type: string
        description:
          maxLength: 2000
          title: Event description
          type: string
        attendees:
          items:
            $ref: '#/components/schemas/CalendarEventAttendees'
          type: array
        options:
          items:
            $ref: '#/components/schemas/ConferenceOptions'
          type: array
      required:
      - calendar_id
      - ending_at
      - hostname
      - options
      - starting_at
      - timezone
      - title
      title: Plan a conference
    Response:
      properties:
        result:
          description: Result of the HTTP request
          enum:
          - success
          - error
          - asynchronous
          example: success
          type: string
      required:
      - result
      title: Generic response schema to be reused
    PlannedConferenceReturn:
      example:
        ending_at: 2020-06-01 20:00:00
        hostname: kmeet.infomaniak.com
        code: code
        event_id: 1
        updated_at: 2020-06-01 20:00:00
        user_id: 6
        name: name
        options:
        - enable_moderator_video: true
          password_enabled: true
          subject: subject
          drive_id: 5
          lobby_enabled: true
          e2ee_enabled: true
          start_audio_muted: true
          start_audio_only: true
          enable_recording: true
        - enable_moderator_video: true
          password_enabled: true
          subject: subject
          drive_id: 5
          lobby_enabled: true
          e2ee_enabled: true
          start_audio_muted: true
          start_audio_only: true
          enable_recording: true
        created_at: 2020-06-01 20:00:00
        id: 0
      properties:
        id:
          title: The unique identifier (ID) of the Infomaniak room settings
          type: integer
        name:
          title: The room ID
          type: string
        code:
          title: The room code
          type: string
        user_id:
          title: The unique identifier (ID) of the Infomaniak user
          type: integer
        event_id:
          title: The unique identifier (ID) of the Infomaniak Calendar event
          type: integer
        created_at:
          example: 2020-06-01 20:00:00
          title: Event creation date
          type: string
        updated_at:
          example: 2020-06-01 20:00:00
          title: Event update date
          type: string
        ending_at:
          description: Room settings can be deleted if this date expires. This field
            will be updated if event dates change in Infomaniak Calendar.
          example: 2020-06-01 20:00:00
          title: Event ending date
          type: string
        hostname:
          description: Needed for rebuilding room url
          example: kmeet.infomaniak.com
          maxLength: 255
          title: hostname
          type: string
        options:
          items:
            $ref: '#/components/schemas/ConferenceOptionsReturn'
          type: array
      required:
      - ending_at
      - hostname
      - options
      title: Planned room return
    TopReactionList:
      example:
        has_next: true
        items:
        - count: 0
          emoji_name: emoji_name
        - count: 0
          emoji_name: emoji_name
      properties:
        has_next:
          description: Indicates if there is another page of reactions that can be
            fetched.
          type: boolean
        items:
          description: List of reactions.
          items:
            $ref: '#/components/schemas/TopReaction'
          type: array
    TopChannelList:
      example:
        has_next: true
        items:
        - name: name
          id: id
          team_id: team_id
          type: type
          display_name: display_name
          message_count: message_count
        - name: name
          id: id
          team_id: team_id
          type: type
          display_name: display_name
          message_count: message_count
      properties:
        has_next:
          description: Indicates if there is another page of channels that can be
            fetched.
          type: boolean
        items:
          description: List of channels.
          items:
            $ref: '#/components/schemas/TopChannel'
          type: array
    NewTeamMembersList:
      example:
        total_count: 6
        has_next: true
        items:
        - nickname: nickname
          last_name: last_name
          id: id
          position: position
          create_at: 0
          first_name: first_name
          username: username
        - nickname: nickname
          last_name: last_name
          id: id
          position: position
          create_at: 0
          first_name: first_name
          username: username
      properties:
        has_next:
          description: Indicates if there is another page of new team members that
            can be fetched.
          type: boolean
        items:
          description: List of new team members.
          items:
            $ref: '#/components/schemas/NewTeamMember'
          type: array
        total_count:
          description: The total count of new team members for the given time range.
          type: integer
    TopThreadList:
      example:
        has_next: true
        items:
        - channel_display_name: channel_display_name
          channel_name: channel_name
          post:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          Participants:
          - Participants
          - Participants
          channel_id: channel_id
          user_information:
            last_picture_update: last_picture_update
            nickname: nickname
            last_name: last_name
            id: id
            create_at: 1
            first_name: first_name
            username: username
        - channel_display_name: channel_display_name
          channel_name: channel_name
          post:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          Participants:
          - Participants
          - Participants
          channel_id: channel_id
          user_information:
            last_picture_update: last_picture_update
            nickname: nickname
            last_name: last_name
            id: id
            create_at: 1
            first_name: first_name
            username: username
      properties:
        has_next:
          description: Indicates if there is another page of top threads that can
            be fetched.
          type: boolean
        items:
          description: List of top threads.
          items:
            $ref: '#/components/schemas/TopThread'
          type: array
    TopDMList:
      example:
        has_next: true
        items:
        - outgoing_message_count: 6
          second_participant:
            last_picture_update: last_picture_update
            nickname: nickname
            last_name: last_name
            id: id
            position: position
            create_at: 1
            first_name: first_name
            username: username
          post_count: 0
        - outgoing_message_count: 6
          second_participant:
            last_picture_update: last_picture_update
            nickname: nickname
            last_name: last_name
            id: id
            position: position
            create_at: 1
            first_name: first_name
            username: username
          post_count: 0
      properties:
        has_next:
          description: Indicates if there is another page of top DMs that can be fetched.
          type: boolean
        items:
          description: List of top DMs.
          items:
            $ref: '#/components/schemas/TopDM'
          type: array
    User:
      example:
        security:
          score: 2
          has_recovery_email: true
          has_valid_phone: true
          has_private_folder: true
          assistant_at: 5
          last_password_at: 5
          double_auth_method: double_auth_method
          has_double_auth: true
          has_valid_email: 7
        teams:
        - 1
        - 1
        last_name: last_name
        id: 0
        avatar: avatar
        display_name: display_name
        type: type
        first_name: first_name
        deleted_at: 6
        email: email
      properties:
        id:
          description: Unique identifier of the resource `User`
          title: Unique identifier
          type: integer
        display_name:
          description: Display name
          title: display_name
          type: string
        first_name:
          description: First name
          title: first_name
          type: string
        last_name:
          description: Last name
          title: last_name
          type: string
        email:
          description: Email
          title: email
          type: string
        avatar:
          description: Avatar
          title: avatar
          type: string
        type:
          title: type
          type: string
        deleted_at:
          description: Timestamp `User` was deleted at
          format: timestamp
          title: deleted_at
          type: integer
        teams:
          description: List of Team identifiers
          items:
            description: List of Team identifiers
            title: teams
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        security:
          $ref: '#/components/schemas/security'
      required:
      - avatar
      - deleted_at
      - display_name
      - email
      - first_name
      - id
      - last_name
      title: User
    UserAutocomplete:
      example:
        out_of_channel:
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        users:
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
      properties:
        users:
          description: A list of users that are the main result of the query
          items:
            $ref: '#/components/schemas/User'
          type: array
        out_of_channel:
          description: A special case list of users returned when autocompleting in
            a specific channel. Omitted when empty or not relevant
          items:
            $ref: '#/components/schemas/User'
          type: array
    UserNotifyProps:
      properties:
        email:
          description: "Set to \"true\" to enable email notifications, \"false\" to\
            \ disable. Defaults to \"true\"."
          type: string
        push:
          description: "Set to \"all\" to receive push notifications for all activity,\
            \ \"mention\" for mentions and direct messages only, and \"none\" to disable.\
            \ Defaults to \"mention\"."
          type: string
        desktop:
          description: "Set to \"all\" to receive desktop notifications for all activity,\
            \ \"mention\" for mentions and direct messages only, and \"none\" to disable.\
            \ Defaults to \"all\"."
          type: string
        desktop_sound:
          description: "Set to \"true\" to enable sound on desktop notifications,\
            \ \"false\" to disable. Defaults to \"true\"."
          type: string
        mention_keys:
          description: A comma-separated list of words to count as mentions. Defaults
            to username and @username.
          type: string
        channel:
          description: "Set to \"true\" to enable channel-wide notifications (@channel,\
            \ @all, etc.), \"false\" to disable. Defaults to \"true\"."
          type: string
        first_name:
          description: "Set to \"true\" to enable mentions for first name. Defaults\
            \ to \"true\" if a first name is set, \"false\" otherwise."
          type: string
    StatusOK:
      example:
        status: status
      properties:
        status:
          description: Will contain "ok" if the request was successful and there was
            nothing else to return
          type: string
    ChannelMemberWithTeamData:
      allOf:
      - $ref: '#/components/schemas/ChannelMember'
      - properties:
          team_display_name:
            description: The display name of the team to which this channel belongs.
            type: string
          team_name:
            description: The name of the team to which this channel belongs.
            type: string
          team_update_at:
            description: The time at which the team to which this channel belongs
              was last updated.
            type: integer
      example:
        team_display_name: team_display_name
        team_update_at: 5
        user_id: user_id
        last_viewed_at: 0
        roles: roles
        notify_props:
          desktop: desktop
          mark_unread: mark_unread
          email: email
          push: push
        last_update_at: 5
        mention_count: 1
        channel_id: channel_id
        msg_count: 6
        team_name: team_name
    UserThreads:
      example:
        total: 0
        threads:
        - last_reply_at: 1
          post:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          last_viewed_at: 5
          id: id
          reply_count: 6
          participants:
          - pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          - pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
        - last_reply_at: 1
          post:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          last_viewed_at: 5
          id: id
          reply_count: 6
          participants:
          - pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
          - pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
      properties:
        total:
          description: Total number of threads (used for paging)
          type: integer
        threads:
          description: Array of threads
          items:
            $ref: '#/components/schemas/UserThread'
          type: array
    UserThread:
      description: a thread that user is following
      example:
        last_reply_at: 1
        post:
          pending_post_id: pending_post_id
          metadata:
            emojis:
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            images: "{}"
            files:
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            reactions:
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            embeds:
            - data: "{}"
              type: image
              url: url
            - data: "{}"
              type: image
              url: url
          message: message
          type: type
          props: "{}"
          user_id: user_id
          update_at: 6
          file_ids:
          - file_ids
          - file_ids
          delete_at: 1
          root_id: root_id
          id: id
          create_at: 0
          original_id: original_id
          channel_id: channel_id
          edit_at: 5
          hashtag: hashtag
        last_viewed_at: 5
        id: id
        reply_count: 6
        participants:
        - pending_post_id: pending_post_id
          metadata:
            emojis:
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            images: "{}"
            files:
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            reactions:
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            embeds:
            - data: "{}"
              type: image
              url: url
            - data: "{}"
              type: image
              url: url
          message: message
          type: type
          props: "{}"
          user_id: user_id
          update_at: 6
          file_ids:
          - file_ids
          - file_ids
          delete_at: 1
          root_id: root_id
          id: id
          create_at: 0
          original_id: original_id
          channel_id: channel_id
          edit_at: 5
          hashtag: hashtag
        - pending_post_id: pending_post_id
          metadata:
            emojis:
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            images: "{}"
            files:
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            reactions:
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            embeds:
            - data: "{}"
              type: image
              url: url
            - data: "{}"
              type: image
              url: url
          message: message
          type: type
          props: "{}"
          user_id: user_id
          update_at: 6
          file_ids:
          - file_ids
          - file_ids
          delete_at: 1
          root_id: root_id
          id: id
          create_at: 0
          original_id: original_id
          channel_id: channel_id
          edit_at: 5
          hashtag: hashtag
      properties:
        id:
          description: ID of the post that is this thread's root
          type: string
        reply_count:
          description: number of replies in this thread
          type: integer
        last_reply_at:
          description: timestamp of the last post to this thread
          format: int64
          type: integer
        last_viewed_at:
          description: timestamp of the last time the user viewed this thread
          format: int64
          type: integer
        participants:
          description: list of users participating in this thread. only includes IDs
            unless 'extended' was set to 'true'
          items:
            $ref: '#/components/schemas/Post'
          type: array
        post:
          $ref: '#/components/schemas/Post'
    Status:
      example:
        user_id: user_id
        last_activity_at: 0
        manual: true
        status: status
      properties:
        user_id:
          type: string
        status:
          type: string
        manual:
          type: boolean
        last_activity_at:
          format: int64
          type: integer
    Team:
      example:
        product_by_service_count: 3
        color_id: 6
        updated_at: 2
        user_count: 7
        product_count: 9
        name: name
        created_at: 5
        owned_by:
          security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        id: 0
        created_by_id: 5
        owned_by_id: 1
        created_by:
          security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
      properties:
        id:
          description: Unique identifier of the resource `Team`
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Team`
          title: name
          type: string
        color_id:
          description: Unique identifier of the `color` of the resource `Team`
          title: color_id
          type: integer
        owned_by_id:
          description: Unique identifier of the `user` that owned the resource `Team`
          title: owned_by_id
          type: integer
        created_by_id:
          description: Unique identifier of the `user` that created the resource `Team`
          title: created_by_id
          type: integer
        created_at:
          description: Timestamp `Team` was created at
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Team` was updated at
          format: timestamp
          title: updated_at
          type: integer
        created_by:
          $ref: '#/components/schemas/User'
        owned_by:
          $ref: '#/components/schemas/User'
        user_count:
          description: User count related to the resource `Team`
          title: user_count
          type: integer
        product_count:
          description: Product count related to the resource `Team`
          title: product_count
          type: integer
        product_by_service_count:
          description: Product by service count related to the resource `Team`
          title: product_by_service_count
          type: integer
      required:
      - color_id
      - created_at
      - created_by_id
      - id
      - name
      - owned_by_id
      - updated_at
      title: Team
    TeamMember:
      example:
        user_id: user_id
        roles: roles
        explicit_roles: explicit_roles
        delete_at: 0
        scheme_admin: true
        team_id: team_id
        scheme_user: true
      properties:
        team_id:
          description: The ID of the team this member belongs to.
          type: string
        user_id:
          description: The ID of the user this member relates to.
          type: string
        roles:
          description: "The complete list of roles assigned to this team member, as\
            \ a space-separated list of role names, including any roles granted implicitly\
            \ through permissions schemes."
          type: string
        delete_at:
          description: The time in milliseconds that this team member was deleted.
          type: integer
        scheme_user:
          description: Whether this team member holds the default user role defined
            by the team's permissions scheme.
          type: boolean
        scheme_admin:
          description: Whether this team member holds the default admin role defined
            by the team's permissions scheme.
          type: boolean
        explicit_roles:
          description: "The list of roles explicitly assigned to this team member,\
            \ as a space separated list of role names. This list does *not* include\
            \ any roles granted implicitly through permissions schemes."
          type: string
    TeamStats:
      example:
        total_member_count: 0
        team_id: team_id
        active_member_count: 6
      properties:
        team_id:
          type: string
        total_member_count:
          type: integer
        active_member_count:
          type: integer
    TeamUnread:
      example:
        team_id: team_id
        mention_count: 6
        msg_count: 0
      properties:
        team_id:
          type: string
        msg_count:
          type: integer
        mention_count:
          type: integer
    ChannelListWithTeamData:
      items:
        $ref: '#/components/schemas/ChannelWithTeamData'
      type: array
    Channel:
      example:
        maintained_at: 6
        created_at: 8
        type: abr
        updated_at: 9
        blocked: true
        remember_to_config: true
        rights: rights
        options:
        - options
        - options
        blocked_at: 3
        free: true
        maintained: true
        live:
          server_name: server_name
          total_connections: 2
          application_instance: application_instance
          bytes_out: 7
          bytes_in: 2
          bytes_out_rate: 3
          bytes_in_rate: 9
        order: order
        players:
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        streams:
        - null
        - null
        recording_status: recording_status
        source_type: camip
        consumption:
          from: 7
          to: 1
          value: 4.145608029883936
        deleted_at: 6
        tags: tags
        real_type: real_type
        deleted: true
        default_options:
        - default_options
        - default_options
        name: name
        restriction:
          restrictions_id: 1
          exception_ip: exception_ip
          forbidden_ip: forbidden_ip
          allow_domain: allow_domain
          player_token: player_token
          authorize_country: true
          access_country: access_country
          shared_key: shared_key
        machines:
        - ip: ip
          name: name
          url_domain: url_domain
          type: edge
          pool_id: 2
          url: url
        - ip: ip
          name: name
          url_domain: url_domain
          type: edge
          pool_id: 2
          url: url
        channel_id: 69001
        status:
        - status
        - status
      properties:
        channel_id:
          description: Unique identifier of the `channel` that is related to the resource
            `Channel`
          example: 69001
          title: channel_id
          type: integer
        name:
          description: Name of the resource `Channel`
          title: name
          type: string
        created_at:
          description: Timestamp `Channel` has been created
          format: datetime
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Channel` has been updated
          format: datetime
          title: updated_at
          type: integer
        deleted_at:
          description: Timestamp `Channel` has been deleted
          format: datetime
          title: deleted_at
          type: integer
        deleted:
          description: Boolean `Channel` has been deleted
          title: deleted
          type: boolean
        type:
          enum:
          - abr
          - mono
          title: type
          type: string
        source_type:
          enum:
          - camip
          - encoder
          - maniak
          - mobile
          - webcam
          title: source_type
          type: string
        remember_to_config:
          title: remember_to_config
          type: boolean
        free:
          title: free
          type: boolean
        blocked:
          title: blocked
          type: boolean
        maintained:
          title: maintained
          type: boolean
        blocked_at:
          format: datetime
          title: blocked_at
          type: integer
        maintained_at:
          format: datetime
          title: maintained_at
          type: integer
        tags:
          title: tags
          type: string
        rights:
          title: rights
          type: string
        live:
          $ref: '#/components/schemas/Liveressource'
        real_type:
          title: real_type
          type: string
        status:
          description: Status of the resource `Channel`
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        consumption:
          $ref: '#/components/schemas/Consumptionressource'
        recording_status:
          title: recording_status
          type: string
        options:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        default_options:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        streams:
          items:
            $ref: '#/components/schemas/stream'
          type: array
        restriction:
          $ref: '#/components/schemas/ViewersRestrictions'
        machines:
          items:
            $ref: '#/components/schemas/Machine'
          type: array
        players:
          items:
            $ref: '#/components/schemas/Player'
          type: array
        order:
          title: order
          type: string
      required:
      - blocked
      - blocked_at
      - channel_id
      - created_at
      - deleted
      - deleted_at
      - free
      - maintained
      - maintained_at
      - name
      - real_type
      - remember_to_config
      - source_type
      - type
      - updated_at
      title: Channel
    ChannelStats:
      example:
        member_count: 0
        channel_id: channel_id
      properties:
        channel_id:
          type: string
        member_count:
          type: integer
    PostList:
      example:
        next_post_id: next_post_id
        has_next: true
        prev_post_id: prev_post_id
        posts:
          key:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
        order:
        - order
        - order
      properties:
        order:
          items:
            type: string
          type: array
        posts:
          additionalProperties:
            $ref: '#/components/schemas/Post'
        next_post_id:
          description: The ID of next post. Not omitted when empty or not relevant.
          type: string
        prev_post_id:
          description: The ID of previous post. Not omitted when empty or not relevant.
          type: string
        has_next:
          description: Whether there are more items after this page.
          type: boolean
    ChannelMember:
      example:
        user_id: user_id
        last_viewed_at: 0
        roles: roles
        notify_props:
          desktop: desktop
          mark_unread: mark_unread
          email: email
          push: push
        last_update_at: 5
        mention_count: 1
        channel_id: channel_id
        msg_count: 6
      properties:
        channel_id:
          type: string
        user_id:
          type: string
        roles:
          type: string
        last_viewed_at:
          description: The time in milliseconds the channel was last viewed by the
            user
          format: int64
          type: integer
        msg_count:
          type: integer
        mention_count:
          type: integer
        notify_props:
          $ref: '#/components/schemas/ChannelNotifyProps'
        last_update_at:
          description: The time in milliseconds the channel member was last updated
          format: int64
          type: integer
    ChannelNotifyProps:
      example:
        desktop: desktop
        mark_unread: mark_unread
        email: email
        push: push
      properties:
        email:
          description: "Set to \"true\" to enable email notifications, \"false\" to\
            \ disable, or \"default\" to use the global user notification setting."
          type: string
        push:
          description: "Set to \"all\" to receive push notifications for all activity,\
            \ \"mention\" for mentions and direct messages only, \"none\" to disable,\
            \ or \"default\" to use the global user notification setting."
          type: string
        desktop:
          description: "Set to \"all\" to receive desktop notifications for all activity,\
            \ \"mention\" for mentions and direct messages only, \"none\" to disable,\
            \ or \"default\" to use the global user notification setting."
          type: string
        mark_unread:
          description: "Set to \"all\" to mark the channel unread for any new message,\
            \ \"mention\" to mark unread for new mentions only. Defaults to \"all\"\
            ."
          type: string
    ChannelUnread:
      example:
        team_id: team_id
        mention_count: 6
        channel_id: channel_id
        msg_count: 0
      properties:
        team_id:
          type: string
        channel_id:
          type: string
        msg_count:
          type: integer
        mention_count:
          type: integer
    ChannelModeration:
      example:
        roles:
          members:
            value: true
            enabled: true
          guests:
            value: true
            enabled: true
        name: name
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ChannelModeratedRoles'
    ChannelModerationPatch:
      example:
        roles:
          members: true
          guests: true
        name: name
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ChannelModeratedRolesPatch'
    OrderedSidebarCategories:
      description: List of user's categories with their channels
      example:
        categories:
        - channel_ids:
          - channel_ids
          - channel_ids
          user_id: user_id
          id: id
          team_id: team_id
          display_name: display_name
          type: channels
        - channel_ids:
          - channel_ids
          - channel_ids
          user_id: user_id
          id: id
          team_id: team_id
          display_name: display_name
          type: channels
        order:
        - order
        - order
      properties:
        order:
          items:
            type: string
          type: array
        categories:
          items:
            $ref: '#/components/schemas/SidebarCategoryWithChannels'
          type: array
    SidebarCategory:
      description: User's sidebar category
      example:
        user_id: user_id
        id: id
        team_id: team_id
        display_name: display_name
        type: channels
      properties:
        id:
          type: string
        user_id:
          type: string
        team_id:
          type: string
        display_name:
          type: string
        type:
          enum:
          - channels
          - custom
          - direct_messages
          - favorites
          type: string
    Post:
      example:
        pending_post_id: pending_post_id
        metadata:
          emojis:
          - creator_id: creator_id
            name: name
            update_at: 2
            delete_at: 7
            id: id
            create_at: 5
          - creator_id: creator_id
            name: name
            update_at: 2
            delete_at: 7
            id: id
            create_at: 5
          images: "{}"
          files:
          - extension: extension
            has_preview_image: true
            post_id: post_id
            size: 4
            user_id: user_id
            mime_type: mime_type
            update_at: 3
            name: name
            width: 7
            delete_at: 2
            id: id
            create_at: 9
            height: 1
          - extension: extension
            has_preview_image: true
            post_id: post_id
            size: 4
            user_id: user_id
            mime_type: mime_type
            update_at: 3
            name: name
            width: 7
            delete_at: 2
            id: id
            create_at: 9
            height: 1
          reactions:
          - post_id: post_id
            user_id: user_id
            emoji_name: emoji_name
            create_at: 1
          - post_id: post_id
            user_id: user_id
            emoji_name: emoji_name
            create_at: 1
          embeds:
          - data: "{}"
            type: image
            url: url
          - data: "{}"
            type: image
            url: url
        message: message
        type: type
        props: "{}"
        user_id: user_id
        update_at: 6
        file_ids:
        - file_ids
        - file_ids
        delete_at: 1
        root_id: root_id
        id: id
        create_at: 0
        original_id: original_id
        channel_id: channel_id
        edit_at: 5
        hashtag: hashtag
      properties:
        id:
          type: string
        create_at:
          description: The time in milliseconds a post was created
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds a post was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds a post was deleted
          format: int64
          type: integer
        edit_at:
          format: int64
          type: integer
        user_id:
          type: string
        channel_id:
          type: string
        root_id:
          type: string
        original_id:
          type: string
        message:
          type: string
        type:
          type: string
        props:
          type: object
        hashtag:
          type: string
        file_ids:
          items:
            type: string
          type: array
        pending_post_id:
          type: string
        metadata:
          $ref: '#/components/schemas/PostMetadata'
    ChannelUnreadAt:
      example:
        last_viewed_at: 1
        team_id: team_id
        mention_count: 6
        channel_id: channel_id
        msg_count: 0
      properties:
        team_id:
          description: The ID of the team the channel belongs to.
          type: string
        channel_id:
          description: The ID of the channel the user has access to..
          type: string
        msg_count:
          description: No. of messages the user has already read.
          type: integer
        mention_count:
          description: No. of mentions the user has within the unread posts of the
            channel.
          type: integer
        last_viewed_at:
          description: time in milliseconds when the user last viewed the channel.
          type: integer
    FileInfo:
      example:
        extension: extension
        has_preview_image: true
        post_id: post_id
        size: 4
        user_id: user_id
        mime_type: mime_type
        update_at: 3
        name: name
        width: 7
        delete_at: 2
        id: id
        create_at: 9
        height: 1
      properties:
        id:
          description: The unique identifier for this file
          type: string
        user_id:
          description: The ID of the user that uploaded this file
          type: string
        post_id:
          description: "If this file is attached to a post, the ID of that post"
          type: string
        create_at:
          description: The time in milliseconds a file was created
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds a file was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds a file was deleted
          format: int64
          type: integer
        name:
          description: The name of the file
          type: string
        extension:
          description: The extension at the end of the file name
          type: string
        size:
          description: The size of the file in bytes
          type: integer
        mime_type:
          description: The MIME type of the file
          type: string
        width:
          description: "If this file is an image, the width of the file"
          type: integer
        height:
          description: "If this file is an image, the height of the file"
          type: integer
        has_preview_image:
          description: "If this file is an image, whether or not it has a preview-sized\
            \ version"
          type: boolean
    PostListWithSearchMatches:
      example:
        posts:
          key:
            pending_post_id: pending_post_id
            metadata:
              emojis:
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              - creator_id: creator_id
                name: name
                update_at: 2
                delete_at: 7
                id: id
                create_at: 5
              images: "{}"
              files:
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              - extension: extension
                has_preview_image: true
                post_id: post_id
                size: 4
                user_id: user_id
                mime_type: mime_type
                update_at: 3
                name: name
                width: 7
                delete_at: 2
                id: id
                create_at: 9
                height: 1
              reactions:
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              - post_id: post_id
                user_id: user_id
                emoji_name: emoji_name
                create_at: 1
              embeds:
              - data: "{}"
                type: image
                url: url
              - data: "{}"
                type: image
                url: url
            message: message
            type: type
            props: "{}"
            user_id: user_id
            update_at: 6
            file_ids:
            - file_ids
            - file_ids
            delete_at: 1
            root_id: root_id
            id: id
            create_at: 0
            original_id: original_id
            channel_id: channel_id
            edit_at: 5
            hashtag: hashtag
        matches:
          key: ""
        order:
        - order
        - order
      properties:
        order:
          items:
            type: string
          type: array
        posts:
          additionalProperties:
            $ref: '#/components/schemas/Post'
        matches:
          additionalProperties:
            items:
              type: string
          description: A mapping of post IDs to a list of matched terms within the
            post.
    Preference:
      example:
        user_id: user_id
        name: name
        category: category
        value: value
      properties:
        user_id:
          description: The ID of the user that owns this preference
          type: string
        category:
          type: string
        name:
          type: string
        value:
          type: string
    AppError:
      example:
        status_code: 0
        id: id
        message: message
        request_id: request_id
      properties:
        status_code:
          type: integer
        id:
          type: string
        message:
          type: string
        request_id:
          type: string
    FileInfoList:
      example:
        file_infos:
          key:
            extension: extension
            has_preview_image: true
            post_id: post_id
            size: 4
            user_id: user_id
            mime_type: mime_type
            update_at: 3
            name: name
            width: 7
            delete_at: 2
            id: id
            create_at: 9
            height: 1
        next_file_id: next_file_id
        prev_file_id: prev_file_id
        order:
        - order
        - order
      properties:
        order:
          items:
            type: string
          type: array
        file_infos:
          additionalProperties:
            $ref: '#/components/schemas/FileInfo'
        next_file_id:
          description: The ID of next file info. Not omitted when empty or not relevant.
          type: string
        prev_file_id:
          description: The ID of previous file info. Not omitted when empty or not
            relevant.
          type: string
    Emoji:
      example:
        creator_id: creator_id
        name: name
        update_at: 2
        delete_at: 7
        id: id
        create_at: 5
      properties:
        id:
          description: The ID of the emoji
          type: string
        creator_id:
          description: The ID of the user that made the emoji
          type: string
        name:
          description: The name of the emoji
          type: string
        create_at:
          description: The time in milliseconds the emoji was made
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds the emoji was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds the emoji was deleted
          format: int64
          type: integer
    IncomingWebhook:
      example:
        update_at: 6
        delete_at: 1
        description: description
        id: id
        create_at: 0
        display_name: display_name
        channel_id: channel_id
      properties:
        id:
          description: The unique identifier for this incoming webhook
          type: string
        create_at:
          description: The time in milliseconds a incoming webhook was created
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds a incoming webhook was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds a incoming webhook was deleted
          format: int64
          type: integer
        channel_id:
          description: The ID of a public channel or private group that receives the
            webhook payloads
          type: string
        description:
          description: The description for this incoming webhook
          type: string
        display_name:
          description: The display name for this incoming webhook
          type: string
    OutgoingWebhook:
      example:
        trigger_when: 5
        description: description
        team_id: team_id
        display_name: display_name
        content_type: application/x-www-form-urlencoded
        trigger_words:
        - trigger_words
        - trigger_words
        update_at: 6
        creator_id: creator_id
        delete_at: 1
        callback_urls:
        - callback_urls
        - callback_urls
        id: id
        create_at: 0
        channel_id: channel_id
      properties:
        id:
          description: The unique identifier for this outgoing webhook
          type: string
        create_at:
          description: The time in milliseconds a outgoing webhook was created
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds a outgoing webhook was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds a outgoing webhook was deleted
          format: int64
          type: integer
        creator_id:
          description: The Id of the user who created the webhook
          type: string
        team_id:
          description: The ID of the team that the webhook watchs
          type: string
        channel_id:
          description: The ID of a public channel that the webhook watchs
          type: string
        description:
          description: The description for this outgoing webhook
          type: string
        display_name:
          description: The display name for this outgoing webhook
          type: string
        trigger_words:
          description: List of words for the webhook to trigger on
          items:
            type: string
          type: array
        trigger_when:
          description: "When to trigger the webhook, `0` when a trigger word is present\
            \ at all and `1` if the message starts with a trigger word"
          type: integer
        callback_urls:
          description: The URLs to POST the payloads to when the webhook is triggered
          items:
            type: string
          type: array
        content_type:
          default: application/x-www-form-urlencoded
          description: "The format to POST the data in, either `application/json`\
            \ or `application/x-www-form-urlencoded`"
          type: string
    Group:
      example:
        remote_id: remote_id
        name: name
        update_at: 6
        description: description
        delete_at: 1
        id: id
        source: source
        display_name: display_name
        create_at: 0
        has_syncables: true
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        source:
          type: string
        remote_id:
          type: string
        create_at:
          format: int64
          type: integer
        update_at:
          format: int64
          type: integer
        delete_at:
          format: int64
          type: integer
        has_syncables:
          type: boolean
    GroupsAssociatedToChannels:
      additionalProperties:
        items:
          $ref: '#/components/schemas/GroupWithSchemeAdmin'
      description: a map of channel id(s) to the set of groups that constrain the
        corresponding channel in a team
    Command:
      example:
        icon_url: icon_url
        method: method
        description: description
        team_id: team_id
        trigger: trigger
        display_name: display_name
        auto_complete_hint: auto_complete_hint
        url: url
        token: token
        auto_complete: true
        auto_complete_desc: auto_complete_desc
        update_at: 6
        creator_id: creator_id
        delete_at: 1
        id: id
        create_at: 0
        username: username
      properties:
        id:
          description: The ID of the slash command
          type: string
        token:
          description: The token which is used to verify the source of the payload
          type: string
        create_at:
          description: The time in milliseconds the command was created
          type: integer
        update_at:
          description: The time in milliseconds the command was last updated
          format: int64
          type: integer
        delete_at:
          description: "The time in milliseconds the command was deleted, 0 if never\
            \ deleted"
          format: int64
          type: integer
        creator_id:
          description: The user id for the commands creator
          type: string
        team_id:
          description: The team id for which this command is configured
          type: string
        trigger:
          description: The string that triggers this command
          type: string
        method:
          description: Is the trigger done with HTTP Get ('G') or HTTP Post ('P')
          type: string
        username:
          description: What is the username for the response post
          type: string
        icon_url:
          description: The url to find the icon for this users avatar
          type: string
        auto_complete:
          description: Use auto complete for this command
          type: boolean
        auto_complete_desc:
          description: The description for this command shown when selecting the command
          type: string
        auto_complete_hint:
          description: The hint for this command
          type: string
        display_name:
          description: Display name for the command
          type: string
        description:
          description: Description for this command
          type: string
        url:
          description: The URL that is triggered
          type: string
    AutocompleteSuggestion:
      example:
        Suggestion: Suggestion
        Description: Description
        IconData: IconData
        Hint: Hint
        Complete: Complete
      properties:
        Complete:
          description: Completed suggestion
          type: string
        Suggestion:
          description: Predicted text user might want to input
          type: string
        Hint:
          description: Hint about suggested input
          type: string
        Description:
          description: Description of the suggested command
          type: string
        IconData:
          description: Base64 encoded svg image
          type: string
    CommandResponse:
      example:
        IconURL: IconURL
        GotoLocation: GotoLocation
        Username: Username
        Text: Text
        Attachments:
        - AuthorName: AuthorName
          ThumbURL: ThumbURL
          Color: Color
          Title: Title
          ImageURL: ImageURL
          Text: Text
          AuthorIcon: AuthorIcon
          FooterIcon: FooterIcon
          Timestamp: Timestamp
          Pretext: Pretext
          TitleLink: TitleLink
          Fields:
          - Value: Value
            Title: Title
            Short: true
          - Value: Value
            Title: Title
            Short: true
          AuthorLink: AuthorLink
          Fallback: Fallback
          Footer: Footer
          Id: Id
        - AuthorName: AuthorName
          ThumbURL: ThumbURL
          Color: Color
          Title: Title
          ImageURL: ImageURL
          Text: Text
          AuthorIcon: AuthorIcon
          FooterIcon: FooterIcon
          Timestamp: Timestamp
          Pretext: Pretext
          TitleLink: TitleLink
          Fields:
          - Value: Value
            Title: Title
            Short: true
          - Value: Value
            Title: Title
            Short: true
          AuthorLink: AuthorLink
          Fallback: Fallback
          Footer: Footer
          Id: Id
        ResponseType: ResponseType
      properties:
        ResponseType:
          description: The response type either in_channel or ephemeral
          type: string
        Text:
          type: string
        Username:
          type: string
        IconURL:
          type: string
        GotoLocation:
          type: string
        Attachments:
          items:
            $ref: '#/components/schemas/SlackAttachment'
          type: array
    Role:
      example:
        scheme_managed: true
        permissions:
        - permissions
        - permissions
        name: name
        description: description
        id: id
        display_name: display_name
      properties:
        id:
          description: The unique identifier of the role.
          type: string
        name:
          description: "The unique name of the role, used when assigning roles to\
            \ users/groups in contexts."
          type: string
        display_name:
          description: The human readable name for the role.
          type: string
        description:
          description: A human readable description of the role.
          type: string
        permissions:
          description: A list of the unique names of the permissions this role grants.
          items:
            type: string
          type: array
        scheme_managed:
          description: "indicates if this role is managed by a scheme (true), or is\
            \ a custom stand-alone role (false)."
          type: boolean
    Reaction:
      example:
        post_id: post_id
        user_id: user_id
        emoji_name: emoji_name
        create_at: 1
      properties:
        user_id:
          description: The ID of the user that made this reaction
          type: string
        post_id:
          description: The ID of the post to which this reaction was made
          type: string
        emoji_name:
          description: The name of the emoji that was used for this reaction
          type: string
        create_at:
          description: The time in milliseconds this reaction was made
          format: int64
          type: integer
    Bot:
      description: A bot account
      example:
        user_id: user_id
        owner_id: owner_id
        update_at: 6
        delete_at: 1
        description: description
        create_at: 0
        display_name: display_name
        username: username
      properties:
        user_id:
          description: The user id of the associated user entry.
          type: string
        create_at:
          description: The time in milliseconds a bot was created
          format: int64
          type: integer
        update_at:
          description: The time in milliseconds a bot was last updated
          format: int64
          type: integer
        delete_at:
          description: The time in milliseconds a bot was deleted
          format: int64
          type: integer
        username:
          type: string
        display_name:
          type: string
        description:
          type: string
        owner_id:
          description: The user id of the user that currently owns this bot.
          type: string
    ApiResponse:
      properties:
        result:
          example: success
          type: string
    Api_Thumbnail:
      description: Thumbnail
      example:
        updated_at: 2021-09-15T14:23:41+00:00
        link:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        created_at: 2021-09-15T14:23:41+00:00
        id: 1jhvl2uqa5v8a
        deleted_at: 2021-09-15T14:23:41+00:00
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        link:
          $ref: '#/components/schemas/Api_Link'
    multibvf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Api_BrowsableVirtualFile'
          type: array
    Api_BrowsableVirtualFile:
      description: BrowsableVirtualFile
      example:
        preview:
          audio_raw:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          audio:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          video:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
        thumbnail:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        files_count: 42
        streams: "[audio, video]"
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        folders_count: 42
        published: true
        type: maria
        deleted_at: 2021-09-15T14:23:41+00:00
        sample:
          audio:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          video:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
        playlists_attached_count: 2
        tags:
        - tags
        - tags
        duration: "276.62"
        path: /foldera/folderb/file
        validated: true
        size: 2300000
        updated_at: 2021-09-15T14:23:41+00:00
        discarded_at: 2021-09-15T14:23:41+00:00
        name: ""
        progress: 50
        state: 42
        id: 1jhvl2uqa5v8a
      properties:
        name:
          format: string
          type: ""
        description:
          example: maria
          format: string
          type: string
        validated:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        streams:
          example: "[audio, video]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        duration:
          description: duration in seconds
          example: "276.62"
          type: seconds
        size:
          example: 2300000
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        discarded_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        folders_count:
          example: 42
          format: int32
          type: integer
        files_count:
          example: 42
          format: int32
          type: integer
        path:
          example: /foldera/folderb/file
          format: string
          type: ""
        preview:
          $ref: '#/components/schemas/Api_Preview'
        sample:
          $ref: '#/components/schemas/Api_Sample'
        thumbnail:
          $ref: '#/components/schemas/Api_Link'
        state:
          example: 42
          format: int32
          type: number
        progress:
          description: '%'
          example: 50
          type: number
        playlists_attached_count:
          example: 2
          type: number
        tags:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        type:
          example: maria
          format: string
          type: string
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
    Fillable_App\Models\BrowsableVirtualFile:
      properties:
        name:
          format: string
          type: ""
        validated:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
    Api_Folder:
      description: Folder
      example:
        media_duration: maria
        discarded: ""
        media_count: 0.8008281904610115
        effective_encodings: ""
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        allowed_ip:
        - 127.0.0.1
        - 127.0.0.1
        path: ""
        allowed_country:
        - name: maria
          alpha3: maria
          id: maria
          official_state_name: maria
        - name: maria
          alpha3: maria
          id: maria
          official_state_name: maria
        updated_at: 2021-09-15T14:23:41+00:00
        discarded_at: 2021-09-15T14:23:41+00:00
        validated: ""
        id: 1jhvl2uqa5v8a
        auto_validate: true
        key: maria
        player:
        - enable_facebook: true
          facebook_back_link: maria
          show_related: 42
          is_channel_default: true
          encoding_change_enabled: 42
          show_audio: true
          preload_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          media_thumbnail_anchor: TOP
          id: 1jhvl2uqa5v8a
          show_speed: true
          height: 42
          enable_twitter: true
          show_media_info: true
          deleted_at: 2021-09-15T14:23:41+00:00
          show_loop: true
          ads:
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          chromecast: true
          logo_margin_vertical: 42
          name: maria
          twitter_related: twitter_related
          default_speed: 1
          controlbar_color: '#FF0077'
          twitter_via: maria
          is360: 42
          control_color: '#FF0077'
          restrict_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          show_fullscreen: true
          encoding_limit: 42
          geoip_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          logo_percentage: 42
          show_default_logo: true
          auto_start: true
          show_replay: true
          play_related: 42
          logo_margin_horizontal: 42
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          default: true
          updated_at: 2021-09-15T14:23:41+00:00
          show_controls: true
          facebook_player_embed: true
          force_media_ratio: true
          show_viewers: true
          show_progression: true
          enable_embed_code: true
          twitter_back_link: maria
          time_before_hide_cb: 42
          show_duration: true
          logo_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          control_active_color: '#FF0077'
          auto_hide_controls: true
          owned: true
          audio_volume: 42
          show_viewers_after: 42
          width: 42
          logo_anchor: TOP_LEFT
          show_viewers_only_after: true
          related_type: SIMILAR_TAGS
          show_media_thumbnail: true
          interrupt_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
        - enable_facebook: true
          facebook_back_link: maria
          show_related: 42
          is_channel_default: true
          encoding_change_enabled: 42
          show_audio: true
          preload_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          media_thumbnail_anchor: TOP
          id: 1jhvl2uqa5v8a
          show_speed: true
          height: 42
          enable_twitter: true
          show_media_info: true
          deleted_at: 2021-09-15T14:23:41+00:00
          show_loop: true
          ads:
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          chromecast: true
          logo_margin_vertical: 42
          name: maria
          twitter_related: twitter_related
          default_speed: 1
          controlbar_color: '#FF0077'
          twitter_via: maria
          is360: 42
          control_color: '#FF0077'
          restrict_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          show_fullscreen: true
          encoding_limit: 42
          geoip_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          logo_percentage: 42
          show_default_logo: true
          auto_start: true
          show_replay: true
          play_related: 42
          logo_margin_horizontal: 42
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          default: true
          updated_at: 2021-09-15T14:23:41+00:00
          show_controls: true
          facebook_player_embed: true
          force_media_ratio: true
          show_viewers: true
          show_progression: true
          enable_embed_code: true
          twitter_back_link: maria
          time_before_hide_cb: 42
          show_duration: true
          logo_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          control_active_color: '#FF0077'
          auto_hide_controls: true
          owned: true
          audio_volume: 42
          show_viewers_after: 42
          width: 42
          logo_anchor: TOP_LEFT
          show_viewers_only_after: true
          related_type: SIMILAR_TAGS
          show_media_thumbnail: true
          interrupt_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
        image: image
        encodings:
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        disallowed_country: ""
        published: ""
        deleted_at: 2021-09-15T14:23:41+00:00
        auto_publish: true
        restricted: ""
        disallowed_ip: ""
        name: ""
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        name:
          format: string
          type: ""
        description:
          example: maria
          format: string
          type: string
        auto_validate:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        auto_publish:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        key:
          example: maria
          format: string
          type: string
        allowed_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        disallowed_ip:
          items:
            $ref: '#/components/schemas/ip'
        allowed_country:
          items:
            $ref: '#/components/schemas/Api_Country'
          type: array
        disallowed_country:
          items:
            $ref: '#/components/schemas/Api_Country'
        image:
          format: mixed
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        discarded_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        media_count:
          format: string
          type: number
        media_duration:
          example: maria
          format: string
          type: string
        encodings:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Encoding'
          type: array
        discarded:
          format: string
          type: ""
        effective_encodings:
          format: string
          type: ""
        path:
          format: string
          type: ""
        published:
          format: string
          type: ""
        restricted:
          format: string
          type: ""
        validated:
          format: string
          type: ""
        player:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Player'
          type: array
    shortFolder:
      description: folder
      example:
        media_duration: 12.16
        image: image
        discarded: discarded
        media_count: 2
        description: folder description
        created_at: 2022-01-18T08:59:20+00:00
        allowed_ip:
        - 127.0.0.1
        - 127.0.0.1
        disallowed_country: ""
        published: true
        deleted_at: 2022-01-18T08:59:20+00:00
        auto_publish: true
        allowed_country:
        - name: maria
          alpha3: maria
          id: maria
          official_state_name: maria
        - name: maria
          alpha3: maria
          id: maria
          official_state_name: maria
        validated: true
        updated_at: 2022-01-18T08:59:20+00:00
        discarded_at: 2022-01-18T08:59:20+00:00
        restricted: false
        disallowed_ip: ""
        name: foldername
        id: 1jhvl2uqae5sa
        auto_validate: true
        key: key
      properties:
        id:
          example: 1jhvl2uqae5sa
          type: string
        name:
          example: foldername
          type: string
        description:
          example: folder description
          type: string
        validated:
          example: true
          type: bool
        published:
          example: true
          type: bool
        auto_validate:
          example: true
          type: bool
        auto_publish:
          example: true
          type: bool
        restricted:
          example: false
          type: bool
        key:
          type: string
        allowed_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        disallowed_ip:
          items:
            $ref: '#/components/schemas/ip'
        allowed_country:
          items:
            $ref: '#/components/schemas/Api_Country'
          type: array
        disallowed_country:
          items:
            $ref: '#/components/schemas/Api_Country'
        discarded:
          type: string
        created_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        updated_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        discarded_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        deleted_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        image:
          type: string
        media_count:
          example: 2
          type: int
        media_duration:
          example: 12.16
          type: float
    Api_Playlist:
      description: Playlist
      example:
        image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        medias_duration: medias_duration
        auto_add_media_by_description: auto_add_media_by_description
        prepend: true
        medias_info: true
        live_reference_time: maria
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        sort: CREATED_ASC
        published: true
        nav_position: ABOVE
        type: STATIC
        deleted_at: 2021-09-15T14:23:41+00:00
        auto_add_media_by_name: auto_add_media_by_name
        tags:
        - color: 42
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          created_at: 2021-09-15T14:23:41+00:00
          id: 42
        - color: 42
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          created_at: 2021-09-15T14:23:41+00:00
          id: 42
        mode: MERGE
        shares:
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        validated: true
        medias_thumbnail: true
        updated_at: 2021-09-15T14:23:41+00:00
        name: maria
        chapter_style: DARK
        id: 1jhvl2uqa5v8a
        medias_count: 42
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        name:
          example: maria
          format: string
          type: string
        description:
          example: maria
          format: string
          type: string
        type:
          description: ""
          enum:
          - STATIC
          - DYNAMIC
          example: STATIC
          format: string
          items: {}
          type: string
        mode:
          description: ""
          enum:
          - MERGE
          - SPLIT
          - LIVE
          example: MERGE
          format: string
          items: {}
          type: string
        sort:
          description: ""
          enum:
          - CREATED_ASC
          - CREATED_DESC
          - PUBLISHED_ASC
          - PUBLISHED_DESC
          - NAME_ASC
          - NAME_DESC
          - DURATION_ASC
          - DURATION_DESC
          - RANDOM
          - MANUAL
          example: CREATED_ASC
          format: string
          items: {}
          type: string
        validated:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        image:
          $ref: '#/components/schemas/Api_DataUrl'
        prepend:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        auto_add_media_by_name:
          format: string
          type: string
        auto_add_media_by_description:
          format: string
          type: string
        medias_thumbnail:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        medias_info:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        nav_position:
          description: ""
          enum:
          - ABOVE
          - BELOW
          example: ABOVE
          format: string
          items: {}
          type: string
        chapter_style:
          description: ""
          enum:
          - DARK
          - LIGHT
          example: DARK
          format: string
          items: {}
          type: string
        live_reference_time:
          example: maria
          format: string
          type: timestamp
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        medias_count:
          example: 42
          format: int32
          type: integer
        medias_duration:
          format: float
          type: string
        shares:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Share'
          type: array
        tags:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Tag'
          type: array
    Api_Media:
      description: Media
      example:
        preview:
          audio_raw:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          audio:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          video:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
        playbacks:
          encodingId:
            strategy:
              mimetype: video/mp4
              ' data':
                encoding: Copy source
                strategy: Progressive download (Best available)
                key: "null"
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
        shot_boundaries: "[1, 2,10]"
        chapters:
        - image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          index: 42
          id: 1jhvl2uqa5v8a
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          timestamp: timestamp
        - image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          index: 42
          id: 1jhvl2uqa5v8a
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          timestamp: timestamp
        upload:
          ready_at: 2021-09-15T14:23:41+00:00
          meta:
            nb_programs: 42
            format_long_name: maria
            sample_aspect_ratio_source: ""
            created_at: 2021-09-15T14:23:41+00:00
            nb_streams: 42
            tags: tags
            duration: maria
            start_time: maria
            bit_rate: 42
            sample_aspect_ratio: ""
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            probe_score: 42
            display_aspect_ratio_source: ""
            display_aspect_ratio: ""
            width: ""
            format_name: maria
            height: ""
          index: 0
          progress: 50
          created_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          url: ""
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        annotations:
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          from: from
          id: 1jhvl2uqa5v8a
          published: true
          to: to
          body: maria
          deleted_at: 2021-09-15T14:23:41+00:00
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          from: from
          id: 1jhvl2uqa5v8a
          published: true
          to: to
          body: maria
          deleted_at: 2021-09-15T14:23:41+00:00
        thumbstrip:
          updated_at: 2021-09-15T14:23:41+00:00
          link:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          created_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          deleted_at: 2021-09-15T14:23:41+00:00
        language:
        - endonym: maria
          name: maria
          id: maria
        - endonym: maria
          name: maria
          id: maria
        source:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        logos:
        - margin: 42
          data: maria
          overlayLogos:
          - logo_id: 42
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            index: 42
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            activities:
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            media_id: 42
            progress: progress
            logo:
            - null
            - null
            id: 1jhvl2uqa5v8a
          - logo_id: 42
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            index: 42
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            activities:
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            media_id: 42
            progress: progress
            logo:
            - null
            - null
            id: 1jhvl2uqa5v8a
          uuidSequence:
            uuidSequence: null
            model_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            model: null
            model_id: 42
            id: 1jhvl2uqa5v8a
            uuid: maria
          channel:
          - auto_empty_trash: maria
            journal:
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            statistic_ignored_ip:
            - 127.0.0.1
            - 127.0.0.1
          - auto_empty_trash: maria
            journal:
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            statistic_ignored_ip:
            - 127.0.0.1
            - 127.0.0.1
          created_at: 2021-09-15T14:23:41+00:00
          uuid: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          mode: OVERLAY
          medias:
          - null
          - null
          size: 42
          updated_at: 2021-09-15T14:23:41+00:00
          width: 42
          mimetype: maria
          id: 1jhvl2uqa5v8a
          position: TOP_LEFT
          channel_id: 42
          height: 42
        - margin: 42
          data: maria
          overlayLogos:
          - logo_id: 42
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            index: 42
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            activities:
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            media_id: 42
            progress: progress
            logo:
            - null
            - null
            id: 1jhvl2uqa5v8a
          - logo_id: 42
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            index: 42
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            activities:
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            - actor: null
              context: maria
              cause: ELOQUENT_CREATED
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              message: maria
            media_id: 42
            progress: progress
            logo:
            - null
            - null
            id: 1jhvl2uqa5v8a
          uuidSequence:
            uuidSequence: null
            model_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            model: null
            model_id: 42
            id: 1jhvl2uqa5v8a
            uuid: maria
          channel:
          - auto_empty_trash: maria
            journal:
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            statistic_ignored_ip:
            - 127.0.0.1
            - 127.0.0.1
          - auto_empty_trash: maria
            journal:
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            - updated_at: 2021-09-15T14:23:41+00:00
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            statistic_ignored_ip:
            - 127.0.0.1
            - 127.0.0.1
          created_at: 2021-09-15T14:23:41+00:00
          uuid: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          mode: OVERLAY
          medias:
          - null
          - null
          size: 42
          updated_at: 2021-09-15T14:23:41+00:00
          width: 42
          mimetype: maria
          id: 1jhvl2uqa5v8a
          position: TOP_LEFT
          channel_id: 42
          height: 42
        duration: "276.62"
        shares:
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        path: ""
        journal:
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
        validated: true
        updated_at: 2021-09-15T14:23:41+00:00
        discarded_at: 2021-09-15T14:23:41+00:00
        id: 1jhvl2uqa5v8a
        state: 192
        published_at: 2021-09-15T14:23:41+00:00
        key_restricted: ""
        subtitles:
        - default: true
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          link:
          - link
          - link
          created_at: 2021-09-15T14:23:41+00:00
          language:
          - endonym: maria
            name: maria
            id: maria
          - endonym: maria
            name: maria
            id: maria
          id: 1jhvl2uqa5v8a
          published: true
          lines: lines
          deleted_at: 2021-09-15T14:23:41+00:00
        - default: true
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          link:
          - link
          - link
          created_at: 2021-09-15T14:23:41+00:00
          language:
          - endonym: maria
            name: maria
            id: maria
          - endonym: maria
            name: maria
            id: maria
          id: 1jhvl2uqa5v8a
          published: true
          lines: lines
          deleted_at: 2021-09-15T14:23:41+00:00
        thumbnail:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        encodings:
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        streams: "[audio, video]"
        published: true
        deleted_at: 2021-09-15T14:23:41+00:00
        sample:
          audio:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          video:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
        collected_at: 2021-09-15T14:23:41+00:00
        tags:
        - tags
        - tags
        ip_restricted: ""
        folder: 1jhvl2uqa5v8a
        name: ""
        manifests:
          xml:
            data:
              format: XML
            mimetype: application/xml
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
          json:
            data:
              format: JSON
            mimetype: application/json
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
          yml:
            mimetype: text/yaml
            ' data':
              format: YAML
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          v1xml:
            data:
              format: XML (v1 compatibility)
            mimetype: application/xml
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
          yaml:
            data:
              format: YAML
            mimetype: text/yaml
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
        scenes:
          updated_at: 2021-09-15T14:23:41+00:00
          link:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          created_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          deleted_at: 2021-09-15T14:23:41+00:00
        progress: 50
        country_restricted: ""
        category: moto
        poster:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        name:
          format: string
          type: ""
        description:
          example: maria
          format: string
          type: string
        validated:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        streams:
          example: "[audio, video]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        shot_boundaries:
          example: "[1, 2,10]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        duration:
          description: duration in seconds
          example: "276.62"
          type: seconds
        collected_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        published_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        discarded_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        manifests:
          $ref: '#/components/schemas/media_manifests'
        source:
          $ref: '#/components/schemas/Api_Link'
        state:
          example: 192
          type: number
        preview:
          $ref: '#/components/schemas/Api_Preview'
        sample:
          $ref: '#/components/schemas/Api_Sample'
        thumbnail:
          $ref: '#/components/schemas/Api_Link'
        poster:
          $ref: '#/components/schemas/Api_Link'
        encodings:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Encoding'
          type: array
        progress:
          description: '%'
          example: 50
          type: number
        playbacks:
          $ref: '#/components/schemas/media_playbacks'
        annotations:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Annotation'
          type: array
        category:
          example: moto
          type: string
        chapters:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Chapter'
          type: array
        folder:
          example: 1jhvl2uqa5v8a
          type: string
        country_restricted:
          format: string
          type: ""
        ip_restricted:
          format: string
          type: ""
        key_restricted:
          format: string
          type: ""
        path:
          format: string
          type: ""
        journal:
          description: ""
          items:
            $ref: '#/components/schemas/Api_MediaJournalLog'
          type: array
        language:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Language'
          type: array
        logos:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Logo'
          type: array
        scenes:
          $ref: '#/components/schemas/Api_Thumbnail'
        shares:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Share'
          type: array
        subtitles:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Subtitle'
          type: array
        tags:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        thumbstrip:
          $ref: '#/components/schemas/Api_Thumbnail'
        upload:
          $ref: '#/components/schemas/Api_Upload'
      name:
        example: nom du media
    shortMedia:
      description: Media
      example:
        shot_boundaries: "[]"
        upload:
          ready_at: 2022-01-18T08:59:20+00:00
          index: 0
          progress: 50
          created_at: 2022-01-18T08:59:20+00:00
          id: 1jhvl2uqae5sa
          url: https://infomaniak.ch/url.mp4
        streams: "[audio,video]"
        description: video description
        created_at: 2022-01-18T08:59:20+00:00
        published: true
        ip_restricted: false
        folder:
          media_duration: 12.16
          image: image
          discarded: discarded
          media_count: 2
          description: folder description
          created_at: 2022-01-18T08:59:20+00:00
          allowed_ip:
          - 127.0.0.1
          - 127.0.0.1
          disallowed_country: ""
          published: true
          deleted_at: 2022-01-18T08:59:20+00:00
          auto_publish: true
          allowed_country:
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          validated: true
          updated_at: 2022-01-18T08:59:20+00:00
          discarded_at: 2022-01-18T08:59:20+00:00
          restricted: false
          disallowed_ip: ""
          name: foldername
          id: 1jhvl2uqae5sa
          auto_validate: true
          key: key
        validated: true
        updated_at: 2022-01-18T08:59:20+00:00
        name: video name
        country_restricted: false
        id: 1jhvl2uqae5sa
        state: 4
        key_restricted: false
      properties:
        id:
          example: 1jhvl2uqae5sa
          type: string
        name:
          example: video name
          type: string
        description:
          example: video description
          type: string
        validated:
          example: true
          type: bool
        published:
          example: true
          type: bool
        streams:
          example: "[audio,video]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        shot_boundaries:
          example: "[]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        key_restricted:
          example: false
          type: bool
        ip_restricted:
          example: false
          type: bool
        country_restricted:
          example: false
          type: bool
        state:
          example: 4
          type: int
        created_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        updated_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        folder:
          $ref: '#/components/schemas/shortFolder'
        upload:
          $ref: '#/components/schemas/shortUpload'
    shortChapter:
      description: chapter
      properties:
        id:
          example: 1jhvl2uqae5sa
          type: string
        timestamp:
          example: 2
          type: int
        description:
          example: description
          type: string
        published:
          example: true
          type: bool
        created_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        updated_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        deleted_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        index:
          example: 0
          type: int
    Api_Chapter:
      description: Chapter
      example:
        image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        updated_at: 2021-09-15T14:23:41+00:00
        name: maria
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        index: 42
        id: 1jhvl2uqa5v8a
        published: true
        deleted_at: 2021-09-15T14:23:41+00:00
        timestamp: timestamp
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        timestamp:
          format: float
          type: string
        name:
          example: maria
          format: string
          type: string
        description:
          example: maria
          format: string
          type: string
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        image:
          $ref: '#/components/schemas/Api_DataUrl'
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        index:
          example: 42
          format: int32
          type: number
    Api_Player:
      description: Player
      example:
        enable_facebook: true
        facebook_back_link: maria
        show_related: 42
        is_channel_default: true
        encoding_change_enabled: 42
        show_audio: true
        preload_image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        media_thumbnail_anchor: TOP
        id: 1jhvl2uqa5v8a
        show_speed: true
        height: 42
        enable_twitter: true
        show_media_info: true
        deleted_at: 2021-09-15T14:23:41+00:00
        show_loop: true
        ads:
        - offset: maria
          mimetype: maria
          id: 1jhvl2uqa5v8a
          href: maria
          type: PRE_ROLL
          url: https://infomaniak.com
          tracking_id: maria
        - offset: maria
          mimetype: maria
          id: 1jhvl2uqa5v8a
          href: maria
          type: PRE_ROLL
          url: https://infomaniak.com
          tracking_id: maria
        chromecast: true
        logo_margin_vertical: 42
        name: maria
        twitter_related: twitter_related
        default_speed: 1
        controlbar_color: '#FF0077'
        twitter_via: maria
        is360: 42
        control_color: '#FF0077'
        restrict_image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        show_fullscreen: true
        encoding_limit: 42
        geoip_image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        logo_percentage: 42
        show_default_logo: true
        auto_start: true
        show_replay: true
        play_related: 42
        logo_margin_horizontal: 42
        shares:
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        - target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
        default: true
        updated_at: 2021-09-15T14:23:41+00:00
        show_controls: true
        facebook_player_embed: true
        force_media_ratio: true
        show_viewers: true
        show_progression: true
        enable_embed_code: true
        twitter_back_link: maria
        time_before_hide_cb: 42
        show_duration: true
        logo_image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
        control_active_color: '#FF0077'
        auto_hide_controls: true
        owned: true
        audio_volume: 42
        show_viewers_after: 42
        width: 42
        logo_anchor: TOP_LEFT
        show_viewers_only_after: true
        related_type: SIMILAR_TAGS
        show_media_thumbnail: true
        interrupt_image:
          data: b64encodedData
          mimetype: image/png
          encoding: encoding
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        default:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        name:
          example: maria
          format: string
          type: string
        description:
          example: maria
          format: string
          type: string
        show_controls:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_progression:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_audio:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_duration:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_fullscreen:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_default_logo:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_speed:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        default_speed:
          example: 1
          format: float
          type: number
        is360:
          example: 42
          format: int32
          type: number
        encoding_change_enabled:
          example: 42
          format: int32
          type: number
        encoding_limit:
          example: 42
          format: int32
          type: number
        chromecast:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        force_media_ratio:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        auto_start:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        audio_volume:
          example: 42
          format: int32
          type: number
        show_replay:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_loop:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_related:
          example: 42
          format: int32
          type: number
        play_related:
          example: 42
          format: int32
          type: number
        related_type:
          description: ""
          enum:
          - SIMILAR_TAGS
          - LAST_UPLOADED
          - SAME_FOLDER
          - MOST_VIEWED
          example: SIMILAR_TAGS
          format: string
          items: {}
          type: string
        width:
          example: 42
          format: int32
          type: number
        height:
          example: 42
          format: int32
          type: number
        controlbar_color:
          example: '#FF0077'
          type: string
        control_color:
          example: '#FF0077'
          type: string
        control_active_color:
          example: '#FF0077'
          type: string
        logo_image:
          $ref: '#/components/schemas/Api_DataUrl'
        logo_anchor:
          description: ""
          enum:
          - TOP_LEFT
          - TOP_RIGHT
          - BOTTOM_LEFT
          - BOTTOM_RIGHT
          - CENTER
          example: TOP_LEFT
          format: string
          items: {}
          type: string
        logo_margin_vertical:
          example: 42
          format: int32
          type: number
        logo_margin_horizontal:
          example: 42
          format: int32
          type: number
        logo_percentage:
          example: 42
          format: int32
          type: number
        show_media_info:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_media_thumbnail:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        media_thumbnail_anchor:
          description: ""
          enum:
          - TOP
          - LEFT
          example: TOP
          format: string
          items: {}
          type: string
        auto_hide_controls:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_viewers:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_viewers_after:
          example: 42
          format: int32
          type: number
        show_viewers_only_after:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        time_before_hide_cb:
          example: 42
          format: int32
          type: number
        enable_facebook:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        facebook_back_link:
          example: maria
          format: string
          type: string
        facebook_player_embed:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        enable_twitter:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        twitter_via:
          example: maria
          format: string
          type: string
        twitter_back_link:
          example: maria
          format: string
          type: string
        twitter_related:
          format: string
          type: string
        enable_embed_code:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        preload_image:
          $ref: '#/components/schemas/Api_DataUrl'
        interrupt_image:
          $ref: '#/components/schemas/Api_DataUrl'
        geoip_image:
          $ref: '#/components/schemas/Api_DataUrl'
        restrict_image:
          $ref: '#/components/schemas/Api_DataUrl'
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        is_channel_default:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        ads:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Ad'
          type: array
        owned:
          example: true
          type: bool
        shares:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Share'
          type: array
    Fillable_App\Models\Player:
      properties:
        name:
          example: maria
          format: string
          type: string
        description:
          example: maria
          format: string
          type: string
        show_controls:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_progression:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_audio:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_duration:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_fullscreen:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_default_logo:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_speed:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        default_speed:
          format: float
          type: string
        is360:
          example: 42
          format: int32
          type: number
        encoding_change_enabled:
          example: 42
          format: int32
          type: number
        encoding_limit:
          example: 42
          format: int32
          type: number
        auto_start:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        audio_volume:
          example: 42
          format: int32
          type: number
        show_replay:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_loop:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_related:
          example: 42
          format: int32
          type: number
        play_related:
          example: 42
          format: int32
          type: number
        related_type:
          description: ""
          enum:
          - SIMILAR_TAGS
          - LAST_UPLOADED
          - SAME_FOLDER
          - MOST_VIEWED
          example: SIMILAR_TAGS
          format: string
          items: {}
          type: string
        width:
          example: 42
          format: int32
          type: number
        height:
          example: 42
          format: int32
          type: number
        controlbar_color:
          example: '#FF0077'
          type: string
        control_color:
          example: '#FF0077'
          type: string
        control_active_color:
          example: '#FF0077'
          type: string
        logo_image:
          $ref: '#/components/schemas/Api_DataUrl'
        logo_anchor:
          description: ""
          enum:
          - TOP_LEFT
          - TOP_RIGHT
          - BOTTOM_LEFT
          - BOTTOM_RIGHT
          - CENTER
          example: TOP_LEFT
          format: string
          items: {}
          type: string
        logo_margin_vertical:
          example: 42
          format: int32
          type: number
        logo_margin_horizontal:
          example: 42
          format: int32
          type: number
        logo_percentage:
          example: 42
          format: int32
          type: number
        show_media_info:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_media_thumbnail:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        media_thumbnail_anchor:
          description: ""
          enum:
          - TOP
          - LEFT
          example: TOP
          format: string
          items: {}
          type: string
        enable_facebook:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        facebook_back_link:
          example: maria
          format: string
          type: string
        facebook_player_embed:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        enable_twitter:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        twitter_via:
          example: maria
          format: string
          type: string
        twitter_back_link:
          example: maria
          format: string
          type: string
        twitter_related:
          format: string
          type: string
        enable_embed_code:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        preload_image:
          $ref: '#/components/schemas/Api_DataUrl'
        interrupt_image:
          $ref: '#/components/schemas/Api_DataUrl'
        geoip_image:
          $ref: '#/components/schemas/Api_DataUrl'
        restrict_image:
          $ref: '#/components/schemas/Api_DataUrl'
        chromecast:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        auto_hide_controls:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_viewers:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_viewers_only_after:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        show_viewers_after:
          example: 42
          format: int32
          type: number
        time_before_hide_cb:
          example: 42
          format: int32
          type: number
        force_media_ratio:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
    shortShare:
      description: Share
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        target_type:
          example: maria
          format: string
          type: string
        target_id:
          example: maria
          format: string
          type: string
        comment:
          example: maria
          format: string
          type: string
        timestamp:
          example: maria
          format: string
          type: string
        validity:
          description: In seconds
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        links:
          items: {}
          type: array
    Api_Share:
      description: Share
      example:
        target_type: maria
        created_at: 2021-09-15T14:23:41+00:00
        target_id: maria
        encoding:
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        - container: FLV
          video_codec: H264
          streams:
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          - video_height: 42
            updated_at: 2021-09-15T14:23:41+00:00
            video_width: 42
            created_at: 2021-09-15T14:23:41+00:00
            audio_bitrate: 42
            id: 1jhvl2uqa5v8a
            audio_sampling: 42
            encoding:
            - null
            - null
            video_bitrate: 42
            deleted_at: 2021-09-15T14:23:41+00:00
          audio_channel: MONO_1_0
          created_at: 2021-09-15T14:23:41+00:00
          audio_codec: AAC
          preset:
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          - template:
              container: 2
              streams:
              - audio_bitrate: 64000
                audio_sampling: 48000
              - audio_bitrate: 64000
                audio_sampling: 48000
              audio_channel: 2
              audio_codec: 1
            name: maria
            id: 1jhvl2uqa5v8a
            type: PLAYBACK
            deleted_at: 2021-09-15T14:23:41+00:00
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          owned: true
          name: maria
          id: 1jhvl2uqa5v8a
          copy: true
          video_aspect: LETTERBOX
          video_fps: video_fps
        deleted_at: 2021-09-15T14:23:41+00:00
        target: null
        valid_until: ""
        updated_at: 2021-09-15T14:23:41+00:00
        manifests: maria
        comment: maria
        links:
        - links
        - links
        id: 1jhvl2uqa5v8a
        validity: 42
        timestamp: maria
        player: null
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        target_type:
          example: maria
          format: string
          type: string
        target_id:
          example: maria
          format: string
          type: string
        comment:
          example: maria
          format: string
          type: string
        timestamp:
          example: maria
          format: string
          type: string
        validity:
          description: In seconds
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        links:
          description: ""
          items:
            type: string
          type: array
        player:
          $ref: '#/components/schemas/Api_Player'
        manifests:
          example: maria
          format: string
          type: string
        target:
          $ref: '#/components/schemas/Api_Share'
        encoding:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Encoding'
          type: array
        valid_until:
          format: string
          type: Carbon
    success_media:
      description: Media
      properties:
        result:
          example: success
          type: string
        data:
          $ref: '#/components/schemas/shortMedia'
    ErrorResponse:
      properties:
        result:
          description: Result of the HTTP request
          example: error
          type: string
      required:
      - result
      title: Generic error response schema to be reused
    SwissBackupTokenPassword:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      required:
      - token
      title: Swiss Backup Token Password
    SwissBackupSlot:
      example:
        parent: "{}"
        IPS_key: IPS_key
        created_at: 1666354846
        type: slot
        directory: /identity/v3
        endpoint: https://swiss-backup.infomaniak.com
        domain_name: default
        subtype: swift
        locked_at: 1666354979
        id: 0
        locked: true
        lang: 1
        slot_name: My Slot
        unit_admin: true
        email: myemail@mydomain.com
        tenant_name: sb_project_SBI-AA000000
        connection_type: swift
        usage_last_check: 1666685147
        tags:
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        activate_notifications: true
        size: 200000000000
        container_name: default
        customer_name: SwissBackup Slot
        config: config
        storage_used: 100000000000
        username: SBA-AA000000-ADMIN
      properties:
        id:
          description: Unique identifier of the resource `Swiss Backup Slot`
          title: Unique identifier
          type: integer
        customer_name:
          description: Customer name of the resource `Swiss Backup Slot`
          example: SwissBackup Slot
          title: customer_name
          type: string
        type:
          description: Type of the resource `Swiss Backup Slot`
          example: slot
          title: type
          type: string
        subtype:
          description: Slot subtype (Arconis or Openstack Swift)
          example: swift
          title: subtype
          type: string
        connection_type:
          description: "Slot connection type (Swift, S3, FTP)"
          example: swift
          title: connection_type
          type: string
        size:
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
          title: size
          type: integer
        storage_used:
          description: Used storage size by free storage slots or Acronis backups
            (Bytes)
          example: 100000000000
          title: storage_used
          type: integer
        usage_last_check:
          description: Date of the last data update
          example: 1666685147
          format: timestamp
          title: usage_last_check
          type: integer
        created_at:
          description: Timestamp `Swiss Backup Slot` has been created
          example: 1666354846
          format: timestamp
          title: created_at
          type: integer
        locked_at:
          description: Slot lock date
          example: 1666354979
          format: timestamp
          title: locked_at
          type: integer
        locked:
          description: True if the slot is locked
          example: true
          title: locked
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        lang:
          description: Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5
            = es)
          example: 1
          title: lang
          type: integer
        activate_notifications:
          description: True if the user wants to receive Acronis notifications
          example: true
          title: activate_notifications
          type: boolean
        unit_admin:
          deprecated: true
          title: unit_admin
          type: boolean
        username:
          description: Acronis administrator username
          example: SBA-AA000000-ADMIN
          title: username
          type: string
        endpoint:
          description: Endpoint for the slot connection
          example: https://swiss-backup.infomaniak.com
          title: endpoint
          type: string
        IPS_key:
          description: IPS identifier
          title: IPS_key
          type: string
        email:
          description: Email
          example: myemail@mydomain.com
          title: email
          type: string
        slot_name:
          description: Slot name
          example: My Slot
          title: slot_name
          type: string
        tenant_name:
          description: Swift connection tenant name
          example: sb_project_SBI-AA000000
          title: tenant_name
          type: string
        domain_name:
          description: Swift connection domain name
          example: default
          title: domain_name
          type: string
        container_name:
          description: Slot container name (optional)
          example: default
          title: container_name
          type: string
        directory:
          description: Slot default directory (optional)
          example: /identity/v3
          title: directory
          type: string
        config:
          title: config
          type: string
        parent:
          title: parent
          type: object
      required:
      - activate_notifications
      - connection_type
      - created_at
      - customer_name
      - endpoint
      - id
      - lang
      - locked
      - locked_at
      - size
      - storage_used
      - subtype
      - tags
      - type
      - unit_admin
      - usage_last_check
      - username
      title: Swiss Backup Slot
    SwissBackup:
      example:
        is_locked: true
        storage_reserved_acronis: 100000000000
        nb_slots_free_storage: 2
        size_free_storage: 100000000000
        has_maintenance: true
        has_operation_in_progress: true
        internal_name: internal_name
        parent_service_name: parent_service_name
        max_slots_server: 3
        due_at: 7
        id: 0
        max_slots: 7
        storage_used_free_storage: 9000000000
        unique_id: 7
        fqdn: fqdn
        service_name: service_name
        storage_reserved: 200000000000
        deleted_at: 5
        version: 2
        users:
        - user_id: 4
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
        - user_id: 4
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
        tags:
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        parent_service_id: 3
        new_interface: "false"
        nb_slots_server: 1
        size: 200000000000
        has_been_demo: "true"
        parent_id: 9
        is_migrated: "false"
        bill_reference: bill_reference
        is_trial: true
        max_slots_workstation: 5
        max_slots_mobile: 6
        status:
          activated_at: 2
          activated_by:
          - activated_by
          - activated_by
          locked:
            infomaniak: true
            superuser: true
          maintenance:
            technical: true
            infomaniak: true
            superuser: true
        nb_slots_mobile: 1
        IPS_key: IPS_key
        created_at: 1666354846
        description: description
        admin: admin
        expired_at: 5
        is_demo: "false"
        promo: 0
        nb_unallocated_slots: 0
        service_id: 1
        rights:
          statistic: true
          sale: true
          technical: true
          check: true
        account_name: Infomaniak SA
        storage_reserved_free_storage: 100000000000
        is_zero_price: true
        max_slots_free_storage: 7
        nb_slots: 5
        nb_unallocated_mobile_workstation: 0
        account_id: 6
        max_slots_virtual: 4
        is_free: true
        periodicity: 1
        nb_slots_virtual: 0
        customer_name: SwissBackup Slot
        nb_slots_workstation: 1
        storage_used: 100000000000
      properties:
        id:
          description: Unique identifier of the resource `Swiss Backup`
          title: Unique identifier
          type: integer
        account_id:
          description: Unique identifier of the `account` that is related to the resource
            `Swiss Backup`
          title: account_id
          type: integer
        service_id:
          description: Unique identifier of the `service` that is related to the resource
            `Swiss Backup`
          title: service_id
          type: integer
        service_name:
          description: Name of the service
          title: service_name
          type: string
        customer_name:
          description: Customer name of the resource `Swiss Backup`
          example: SwissBackup Slot
          title: customer_name
          type: string
        internal_name:
          title: internal_name
          type: string
          nullable: true
        created_at:
          description: Timestamp `Swiss Backup` has been created
          example: 1666354846
          format: timestamp
          title: created_at
          type: integer
        expired_at:
          description: Timestamp `Swiss Backup` has expired
          format: timestamp
          title: expired_at
          type: integer
          nullable: true
        deleted_at:
          description: Timestamp `Swiss Backup` has been deleted
          format: timestamp
          title: deleted_at
          type: integer
        version:
          title: version
          type: integer
        has_maintenance:
          description: Does the resource `Swiss Backup` have a maintenance mode enabled?
          title: has_maintenance
          type: boolean
        is_locked:
          description: Is the resource `Swiss Backup` locked?
          title: is_locked
          type: boolean
        has_operation_in_progress:
          description: Does the resource `Swiss Backup` have an operation in progress
            ?
          title: has_operation_in_progress
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        unique_id:
          description: Unique identifier of the resource `Swiss Backup`
          title: unique_id
          type: integer
        description:
          description: Description of the resource `Swiss Backup`
          title: description
          type: string
        bill_reference:
          title: bill_reference
          type: string
        is_free:
          description: Does the resource `Swiss Backup` have a free price status?
          title: is_free
          type: boolean
        is_zero_price:
          description: Does the resource `Swiss Backup` have a zero price status?
          title: is_zero_price
          type: boolean
        is_trial:
          description: Does the resource `Swiss Backup` have a trial status?
          title: is_trial
          type: boolean
        rights:
          $ref: '#/components/schemas/Right'
        parent_id:
          title: parent_id
          type: integer
        parent_service_id:
          title: parent_service_id
          type: integer
        parent_service_name:
          title: parent_service_name
          type: string
        status:
          $ref: '#/components/schemas/Productstatus'
        users:
          items:
            $ref: '#/components/schemas/ProductUser'
          type: array
        admin:
          description: Acronis administrator details
          title: admin
          type: string
        fqdn:
          title: fqdn
          type: string
        nb_slots:
          description: Total number of slots (Acronis & Free storage)
          example: 5
          title: nb_slots
          type: integer
        max_slots:
          description: Total number of authorized slots (Acronis & Free storage)
          example: 7
          title: max_slots
          type: integer
        nb_unallocated_slots:
          deprecated: true
          example: 0
          title: nb_unallocated_slots
          type: integer
        nb_unallocated_mobile_workstation:
          deprecated: true
          example: 0
          title: nb_unallocated_mobile_workstation
          type: integer
        size:
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
          title: size
          type: integer
        size_free_storage:
          description: Allocated storage size for the free storage (Bytes)
          example: 100000000000
          title: size_free_storage
          type: integer
        is_demo:
          description: True if the product is a trial
          example: "false"
          title: is_demo
          type: string
        is_migrated:
          deprecated: true
          description: True if the backup is an old FTP backup
          example: "false"
          title: is_migrated
          type: string
        new_interface:
          description: True if the product has the new interface
          example: "false"
          title: new_interface
          type: string
        account_name:
          description: Account name
          example: Infomaniak SA
          title: account_name
          type: string
        storage_reserved:
          description: Allocated storage size (Bytes)
          example: 200000000000
          title: storage_reserved
          type: integer
        storage_reserved_free_storage:
          description: Allocated storage size for free storage slots (Bytes)
          example: 100000000000
          title: storage_reserved_free_storage
          type: integer
        storage_reserved_acronis:
          description: Allocated storage size for Acronis (Bytes)
          example: 100000000000
          title: storage_reserved_acronis
          type: integer
        periodicity:
          description: Commitment period (in years)
          example: 1
          title: periodicity
          type: integer
        promo:
          description: Promotion percentage
          example: 0
          title: promo
          type: integer
        due_at:
          description: Contract end date
          format: timestamp
          title: due_at
          type: integer
        has_been_demo:
          description: True if the product has been a trial
          example: "true"
          title: has_been_demo
          type: string
        storage_used_free_storage:
          description: Used storage size by free storage slots (Bytes)
          example: 9000000000
          title: storage_used_free_storage
          type: integer
        storage_used:
          description: Used storage size by free storage slots or Acronis backups
            (Bytes)
          example: 100000000000
          title: storage_used
          type: integer
        max_slots_free_storage:
          description: Maximum number of free storage slots allowed
          example: 7
          title: max_slots_free_storage
          type: integer
        max_slots_server:
          description: Maximum number of Acronis server licences allowed
          example: 3
          title: max_slots_server
          type: integer
        max_slots_virtual:
          description: Maximum number of Acronis virtual machine licences allowed
          example: 4
          title: max_slots_virtual
          type: integer
        max_slots_workstation:
          description: Maximum number of Acronis workstation licences allowed
          example: 5
          title: max_slots_workstation
          type: integer
        max_slots_mobile:
          description: Maximum number of Acronis mobile licences allowed
          example: 6
          title: max_slots_mobile
          type: integer
        nb_slots_free_storage:
          description: Number of free storage slots
          example: 2
          title: nb_slots_free_storage
          type: integer
        nb_slots_server:
          description: Number of Acronis server licences
          example: 1
          title: nb_slots_server
          type: integer
        nb_slots_virtual:
          description: Number of Acronis virtual machine licences
          example: 0
          title: nb_slots_virtual
          type: integer
        nb_slots_workstation:
          description: Number of Acronis workstation licences
          example: 1
          title: nb_slots_workstation
          type: integer
        nb_slots_mobile:
          description: Number of Acronis mobile licences
          example: 1
          title: nb_slots_mobile
          type: integer
        IPS_key:
          description: IPS identifier
          title: IPS_key
          type: string
      required:
      - account_id
      - account_name
      - created_at
      - customer_name
      - expired_at
      - has_maintenance
      - has_operation_in_progress
      - id
      - internal_name
      - is_demo
      - is_free
      - is_locked
      - is_migrated
      - is_trial
      - is_zero_price
      - max_slots
      - nb_slots
      - nb_unallocated_mobile_workstation
      - nb_unallocated_slots
      - new_interface
      - rights
      - service_id
      - service_name
      - size
      - storage_reserved
      - tags
      - unique_id
      - version
      title: Swiss Backup
    Pagination:
      properties:
        total:
          description: |
            Total number of items
            Added when using query parameter `page`
          example: 221
          type: integer
        page:
          description: |
            Number of the current page
            Added when using query parameter `page`
          example: 2
          type: integer
        pages:
          description: |
            Total number of pages
            Added when using query parameter `page`
          example: 15
          type: integer
        items_per_page:
          description: |
            Number of items per page
            Added when using query parameter `page`
          example: 15
          type: integer
    AcronisUsage:
      example:
        nb_slots_server: 2
        nb_slots_mobile: 5
        nb_slots_virtual: 1
        storage_used_acronis: 123556789000
        nb_slots_workstation: 0
      properties:
        storage_used_acronis:
          example: 123556789000
          title: storage_used_acronis
          type: integer
        nb_slots_workstation:
          description: Number of Acronis workstation licences
          example: 0
          title: nb_slots_workstation
          type: integer
        nb_slots_server:
          description: Number of Acronis server licences
          example: 2
          title: nb_slots_server
          type: integer
        nb_slots_virtual:
          description: Number of Acronis virtual machine licences
          example: 1
          title: nb_slots_virtual
          type: integer
        nb_slots_mobile:
          description: Number of Acronis mobile licences
          example: 5
          title: nb_slots_mobile
          type: integer
      required:
      - nb_slots_mobile
      - nb_slots_server
      - nb_slots_virtual
      - nb_slots_workstation
      - storage_used_acronis
      title: Acronis Usage
    SwissBackupPrice_2731a22e:
      example:
        discounts:
        - periodicity: 2
          label: 2_years
          value: 20
        - periodicity: 2
          label: 2_years
          value: 20
        prices:
        - unit: 1
          amount: "2.000"
          amount_excl_vat: "1.860"
          currency: 1
          type: slot
        - unit: 1
          amount: "2.000"
          amount_excl_vat: "1.860"
          currency: 1
          type: slot
      properties:
        prices:
          items:
            $ref: '#/components/schemas/SwissBackupPrice'
          type: array
        discounts:
          items:
            $ref: '#/components/schemas/SwissBackupDiscount'
          type: array
      required:
      - discounts
      - prices
      title: Swiss Backup Price
    PlayerConfiguration:
      example:
        date: "1671107301"
        is_auto_start: true
        is_facebook_embed: true
        is_logo_enable: true
        artist: Imagine Dragon
        unavailable: https://storage.infomaniak.com/player/my-unavailable.png
        facebook_link: facebook_link
        language: fr
        title: Radioactive
        cover: https://radiocover.storage5.infomaniak.com/cover/5fa592b4e019d.jpg
        is_spectrum: true
        twitter_account: MyAccount
        secondary_color: 0098FF
        id: 1
        twitter_backlink: my-radio.ch
        height: 144
        is_listeners: true
        is_embed: true
        thumbnail: https://storage.infomaniak.com/player/my-thumbnail.png
        listeners: 152
        is_cover: true
        stations:
        - stations
        - stations
        display_name: MyRadioPlayer
        loading: https://storage.infomaniak.com/player/my-loading.png
        volume: 50
        button_color: FFFFFF
        background_color: "202020"
        restriction: https://storage.infomaniak.com/player/my-restriction.png
        twitter_hashtag: "infomaniak,radio"
        width: 505
        timeline:
        - timeline
        - timeline
        is_station_thumbnail: true
      properties:
        artist:
          description: The current artist name of the played music
          example: Imagine Dragon
          title: artist
          type: string
        background_color:
          description: The background color used in the `Player`
          example: "202020"
          title: background_color
          type: string
        button_color:
          description: The button color used in the `Player`
          example: FFFFFF
          title: button_color
          type: string
        cover:
          description: The current cover url of the played music
          example: https://radiocover.storage5.infomaniak.com/cover/5fa592b4e019d.jpg
          title: cover
          type: string
        date:
          description: The date of the last update
          example: "1671107301"
          title: date
          type: string
        display_name:
          description: Name of the ressource `Player` visible by final customer
          example: MyRadioPlayer
          title: display_name
          type: string
        facebook_link:
          description: The Facebook link used to Facebook embed
          title: facebook_link
          type: string
        height:
          description: The height used for render the `Player` (px)
          example: 144
          title: height
          type: number
        id:
          description: Unique identifier of the resource `Player`
          example: 1
          title: Unique identifier
          type: integer
        is_auto_start:
          description: Is the auto start enabled?
          example: true
          title: is_auto_start
          type: boolean
        is_cover:
          description: Is the cover enabled?
          example: true
          title: is_cover
          type: boolean
        is_embed:
          description: Is embed link visible?
          example: true
          title: is_embed
          type: boolean
        is_facebook_embed:
          description: Is the Facebook embed link visible?
          example: true
          title: is_facebook_embed
          type: boolean
        is_listeners:
          description: Is the listeners informations displayed?
          example: true
          title: is_listeners
          type: boolean
        is_logo_enable:
          description: Is the logo Infomaniak enabled?
          example: true
          title: is_logo_enable
          type: boolean
        is_spectrum:
          description: Is the spectrum enabled?
          example: true
          title: is_spectrum
          type: boolean
        is_station_thumbnail:
          description: Is the station thumbnail we be displayed like cover?
          example: true
          title: is_station_thumbnail
          type: boolean
        language:
          description: The language used in the `Player`
          enum:
          - de
          - en
          - es
          - fr
          - it
          example: fr
          title: language
          type: string
        listeners:
          description: The current number of listeners on the station
          example: 152
          title: listeners
          type: integer
        loading:
          description: The url of the loading file used in the player
          example: https://storage.infomaniak.com/player/my-loading.png
          title: loading
          type: string
        restriction:
          description: The url of the restriction file used in the player
          example: https://storage.infomaniak.com/player/my-restriction.png
          title: restriction
          type: string
        secondary_color:
          description: The secondary color used in the `Player`
          example: 0098FF
          title: secondary_color
          type: string
        stations:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        timeline:
          description: The list of last songs played on the station
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        title:
          description: The current artist title of the played music
          example: Radioactive
          title: title
          type: string
        thumbnail:
          description: The thumbnail url of the `Player`
          example: https://storage.infomaniak.com/player/my-thumbnail.png
          title: thumbnail
          type: string
        twitter_account:
          description: The Twitter account used to Twitter embed
          example: MyAccount
          title: twitter_account
          type: string
        twitter_backlink:
          description: The Twitter backlink used to Twitter embed
          example: my-radio.ch
          title: twitter_backlink
          type: string
        twitter_hashtag:
          description: The Twitter hashtag used to Twitter embed
          example: "infomaniak,radio"
          title: twitter_hashtag
          type: string
        unavailable:
          description: The url of the unavailable file used in the player
          example: https://storage.infomaniak.com/player/my-unavailable.png
          title: unavailable
          type: string
        volume:
          description: The volume used in the `Player`
          example: 50
          title: volume
          type: integer
        width:
          description: The width used for render the `Player` (px)
          example: 505
          title: width
          type: number
      required:
      - artist
      - background_color
      - button_color
      - cover
      - date
      - display_name
      - facebook_link
      - height
      - id
      - is_auto_start
      - is_cover
      - is_embed
      - is_facebook_embed
      - is_listeners
      - is_logo_enable
      - is_spectrum
      - is_station_thumbnail
      - language
      - listeners
      - loading
      - restriction
      - secondary_color
      - stations
      - thumbnail
      - timeline
      - title
      - twitter_account
      - twitter_backlink
      - twitter_hashtag
      - unavailable
      - volume
      - width
      title: PlayerConfiguration
    Station_446a80a0:
      example:
        log_path: my_log_folder
        is_acpm: true
        created_at: 1478357542
        monthly_consumption: 1856473697
        log_login: MyLogin
        uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
        is_enabled: true
        password: KeepItSecret
        updated_at: 1615838270
        stats:
        - stats
        - stats
        is_daily_restart: true
        options: options
        id: 1
        is_send_logs: true
        log_password: KeepItSecret
        cluster_name: plain
        thumbnail: https://storage.infomaniak.com/my-thumbnail.png
        listeners: 152
        streams:
        - null
        - null
        timezone_daily_restart: Europe/Zurich
        time_daily_restart: 15:03
        log_server: my-log-server.ch
        hls_stream:
          bitrates: "64,96,128"
          ip_include_list: ip_include_list
          is_hash_restriction: true
          buffer_size: 25
          domains: "infomaniak.com,my-radio.ch"
          created_at: 1478357542
          country_list: country_list
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_up: true
          ip_exclude_list: ip_exclude_list
          url: my-hls.infomaniak.com/my-hls/manifest.m3u8
          hash_key: my_hash_key
          updated_at: 1615838270
          name: myHls
          is_allow_country: true
          id: 1
          source_id: 1
          fragment_size: 25
        name: MyStation
        count_streams_up: 3
      properties:
        id:
          description: Unique identifier of the resource `Station`
          example: 1
          title: Unique identifier
          type: integer
        uuid:
          description: Universally unique identifier of the resource `Station`
          example: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          title: uuid
          type: string
        name:
          description: Name of the resource `Station`
          example: MyStation
          title: name
          type: string
        thumbnail:
          description: The url to the thumbnail of the `Station`
          example: https://storage.infomaniak.com/my-thumbnail.png
          title: thumbnail
          type: string
        password:
          description: The password use to access to protected pages
          example: KeepItSecret
          title: password
          type: string
        is_daily_restart:
          description: Is the daily restart enabled?
          example: true
          title: is_daily_restart
          type: boolean
        time_daily_restart:
          description: The time use for daily restart
          example: 15:03
          title: time_daily_restart
          type: string
        timezone_daily_restart:
          description: The timezone to use for daily restart
          example: Europe/Zurich
          title: timezone_daily_restart
          type: string
        is_enabled:
          description: Is the resource `Station` enabled?
          example: true
          title: is_enabled
          type: boolean
        is_acpm:
          description: Is the ACPM stats enabled?
          example: true
          title: is_acpm
          type: boolean
        is_send_logs:
          description: Is the logs sending enabled?
          example: true
          title: is_send_logs
          type: boolean
        log_server:
          description: The server name to connect to the log server
          example: my-log-server.ch
          title: log_server
          type: string
        log_login:
          description: The login to connect to the log server
          example: MyLogin
          title: log_login
          type: string
        log_password:
          description: The password to connect to the log server
          example: KeepItSecret
          title: log_password
          type: string
        log_path:
          description: The path where the log is store
          example: my_log_folder
          title: log_path
          type: string
        listeners:
          description: The number of currently listeners listen all `Stream`
          example: 152
          title: listeners
          type: integer
        cluster_name:
          description: The name of the `Cluster`
          example: plain
          title: cluster_name
          type: string
        monthly_consumption:
          description: The current monthly consumption (Byte)
          example: 1856473697
          title: monthly_consumption
          type: integer
        count_streams_up:
          description: The current count of streams online
          example: 3
          title: count_streams_up
          type: integer
        streams:
          items:
            $ref: '#/components/schemas/Stream'
          type: array
        hls_stream:
          $ref: '#/components/schemas/HlsStream'
        options:
          title: options
          type: string
        stats:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        created_at:
          description: Timestamp `Station` has been created
          example: 1478357542
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Station` has been updated
          example: 1615838270
          format: timestamp
          title: updated_at
          type: integer
      required:
      - cluster_name
      - created_at
      - id
      - is_acpm
      - is_daily_restart
      - is_enabled
      - is_send_logs
      - listeners
      - log_login
      - log_password
      - log_path
      - log_server
      - name
      - password
      - thumbnail
      - time_daily_restart
      - timezone_daily_restart
      - updated_at
      - uuid
      title: Station
    Stream:
      title: Stream
      type: string
    Player:
      example:
        logo_margin_top: 50
        enable_facebook: true
        ads_url: ""
        facebook_back_link: my-lovely-stream.ch
        use_preload_img: true
        ads_enabled: true
        countdown_seconds: countdown_seconds
        channel: null
        stereo_projection360: stereo_projection360
        logo_margin_left: 50
        buffer: buffer
        use_restrict_img: true
        height: 720
        enable_twitter: true
        show_logo: true
        countdown: true
        restrictions: restrictions
        chromecast: true
        interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
        name: MyRadioPlayer
        twitter_related: infomaniak video live
        controlbar_color: '#000000'
        twitter_via: MyAccount
        integrations: integrations
        is360: true
        control_color: '#FFFFFF'
        countdown_txt: countdown_txt
        sound_enabled: true
        use_geo_ip_img: true
        preload_img: preload_img
        description: description
        restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
        created_at: 6
        logo_percentage: 50
        extract_preload_img: true
        title: title
        thumbnail_url: thumbnail_url
        auto_start: true
        player_id: 6
        countdown_minutes: countdown_minutes
        updated_at: 3
        show_controls: true
        facebook_player_embed: true
        countdown_hours: countdown_hours
        show_viewers: true
        enable_embed_code: true
        twitter_back_link: my-lovely-stream.ch
        time_before_hide_cb: 6
        sound_percentage: 50
        control_active_color: '#0098FF'
        auto_hide_controls: true
        countdown_stops_at: countdown_stops_at
        logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
        use_interrupt_img: true
        countdown_days: countdown_days
        show_viewers_after: 5
        width: 1280
        logo_anchor: bottom left
        show_viewers_only_after: true
        geo_ip_img: geo_ip_img
        allow_full_screen: true
        ratio: ratio
      properties:
        player_id:
          description: Unique identifier of the `player` that is related to the resource
            `Player`
          title: player_id
          type: integer
        name:
          description: Name of the ressource `Player` visible by final customer
          example: MyRadioPlayer
          title: name
          type: string
        title:
          description: Name of the video stream
          title: title
          type: string
        description:
          description: Description of the stream
          title: description
          type: string
        buffer:
          description: Buffer memory enables the reduction of video interruptions
            if yours viewers connections become unstable by preloading
          title: buffer
          type: string
        auto_start:
          description: Start the video automatically (does not function on Android
            and iOS)
          title: auto_start
          type: boolean
        allow_full_screen:
          description: Authorise full-screen mode
          title: allow_full_screen
          type: boolean
        is360:
          description: This option is required to display your 360 video streaming
          title: is360
          type: boolean
        show_controls:
          description: Display the playback bar
          title: show_controls
          type: boolean
        auto_hide_controls:
          description: Hide the playback bar after a few seconds
          title: auto_hide_controls
          type: boolean
        time_before_hide_cb:
          title: time_before_hide_cb
          type: integer
        show_viewers:
          description: Display the number of viewers
          title: show_viewers
          type: boolean
        show_viewers_after:
          description: "Display from the following number after {number} viewers"
          title: show_viewers_after
          type: integer
        ratio:
          description: Ratio of the player
          title: ratio
          type: string
        width:
          description: The width used for render the `Player` (px)
          example: 1280
          title: width
          type: integer
        height:
          description: The height used for render the `Player` (px)
          example: 720
          title: height
          type: integer
        show_logo:
          description: Is the logo Infomaniak enabled?
          example: true
          title: show_logo
          type: boolean
        logo_img:
          description: The logo url of the `Player`
          example: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          title: logo_img
          type: string
        logo_anchor:
          description: is the position of logo
          enum:
          - bottom left
          - bottom right
          - top left
          - top right
          title: logo_anchor
          type: string
        logo_percentage:
          description: The logo size in `Player`
          example: 50
          title: logo_percentage
          type: integer
        logo_margin_top:
          description: The margin top log in `Player`
          example: 50
          title: logo_margin_top
          type: integer
        logo_margin_left:
          description: The margin left log in `Player`
          example: 50
          title: logo_margin_left
          type: integer
        control_color:
          description: The background color used in the `Player`
          example: '#FFFFFF'
          title: control_color
          type: string
        controlbar_color:
          description: The button color used in the `Player`
          example: '#000000'
          title: controlbar_color
          type: string
        control_active_color:
          description: The secondary color color used in the `Player`
          example: '#0098FF'
          title: control_active_color
          type: string
        extract_preload_img:
          title: extract_preload_img
          type: boolean
        use_preload_img:
          description: This image is displayed before the video is played.
          example: true
          title: use_preload_img
          type: boolean
        preload_img:
          title: preload_img
          type: string
        use_geo_ip_img:
          title: use_geo_ip_img
          type: boolean
        geo_ip_img:
          title: geo_ip_img
          type: string
        use_interrupt_img:
          title: use_interrupt_img
          type: boolean
        interrupt_img:
          description: "This image is displayed if the viewer is not authorised to\
            \ view the broadcast (IP, domain, unique hash code, etc.)"
          example: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          title: interrupt_img
          type: string
        use_restrict_img:
          description: This image is displayed if the viewer is located in an unauthorised
            geographic
          example: true
          title: use_restrict_img
          type: boolean
        restrict_img:
          description: "This image is displayed if the viewer is not authorised to\
            \ view the broadcast (IP, domain, unique hash code, etc.)"
          example: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          title: restrict_img
          type: string
        countdown:
          description: Is the countdown enabled?
          title: countdown
          type: boolean
        countdown_txt:
          description: Description of the countdown of the `Player` visible by final
            customer
          title: countdown_txt
          type: string
        countdown_days:
          description: countdown days
          title: countdown_days
          type: string
        countdown_hours:
          description: hours days
          title: countdown_hours
          type: string
        countdown_minutes:
          description: countdown minutes
          title: countdown_minutes
          type: string
        countdown_seconds:
          description: countdown seconde
          title: countdown_seconds
          type: string
        enable_embed_code:
          description: Authorise other users to intergrate your live event on their
            sites
          title: enable_embed_code
          type: boolean
        enable_facebook:
          description: Is the facebook embed link visible?
          example: true
          title: enable_facebook
          type: boolean
        facebook_back_link:
          description: The Twitter backlink used to facebook embed
          example: my-lovely-stream.ch
          title: facebook_back_link
          type: string
        facebook_player_embed:
          title: facebook_player_embed
          type: boolean
        enable_twitter:
          description: Is the Twitter embed link visible?
          example: true
          title: enable_twitter
          type: boolean
        twitter_via:
          example: MyAccount
          title: twitter_via
          type: string
        twitter_back_link:
          description: The Twitter backlink used to twitter embed
          example: my-lovely-stream.ch
          title: twitter_back_link
          type: string
        twitter_related:
          description: The Twitter hashtag used to Twitter embed
          example: infomaniak video live
          title: twitter_related
          type: string
        created_at:
          description: Timestamp `Player` has been created
          format: datetime
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Player` has been updated
          format: datetime
          title: updated_at
          type: integer
        ads_enabled:
          description: Is the ads enabled?
          example: true
          title: ads_enabled
          type: boolean
        sound_enabled:
          description: Is the sound enabled?
          example: true
          title: sound_enabled
          type: boolean
        sound_percentage:
          description: The volume used in the `Player`
          example: 50
          title: sound_percentage
          type: integer
        show_viewers_only_after:
          title: show_viewers_only_after
          type: boolean
        chromecast:
          description: you need to use a player that supports https in order for chromecast
            to work correctly
          title: chromecast
          type: boolean
        stereo_projection360:
          title: stereo_projection360
          type: string
        ads_url:
          description: The ads url
          example: ""
          title: ads_url
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        integrations:
          description: List all the raw integrations supported for the given channel.
          title: integrations
          type: string
        countdown_stops_at:
          title: countdown_stops_at
          type: string
        thumbnail_url:
          title: thumbnail_url
          type: string
        restrictions:
          title: restrictions
          type: string
      required:
      - ads_enabled
      - ads_url
      - allow_full_screen
      - auto_hide_controls
      - auto_start
      - buffer
      - chromecast
      - control_active_color
      - control_color
      - controlbar_color
      - countdown
      - countdown_days
      - countdown_hours
      - countdown_minutes
      - countdown_seconds
      - countdown_txt
      - created_at
      - description
      - enable_embed_code
      - enable_facebook
      - enable_twitter
      - extract_preload_img
      - facebook_back_link
      - facebook_player_embed
      - geo_ip_img
      - height
      - interrupt_img
      - is360
      - logo_anchor
      - logo_img
      - logo_margin_left
      - logo_margin_top
      - logo_percentage
      - name
      - player_id
      - preload_img
      - ratio
      - restrict_img
      - show_controls
      - show_logo
      - show_viewers
      - show_viewers_after
      - show_viewers_only_after
      - sound_enabled
      - sound_percentage
      - stereo_projection360
      - time_before_hide_cb
      - title
      - twitter_back_link
      - twitter_related
      - twitter_via
      - updated_at
      - use_geo_ip_img
      - use_interrupt_img
      - use_preload_img
      - use_restrict_img
      - width
      title: Player
    Pack:
      example:
        pack_id: 3
        available_space_vod: 100
        monthly_fee: 6
        bandwidth: 1
        name: Pro
        max_channel: 5
        order_info: 0
      properties:
        pack_id:
          description: Unique identifier of the `pack` that is related to the resource
            `Pack`
          example: 3
          title: pack_id
          type: integer
        name:
          description: Name of the resource `Pack`
          example: Pro
          title: name
          type: string
        order_info:
          title: order_info
          type: integer
        available_space_vod:
          description: "The archive storage space, is in GB"
          example: 100
          title: available_space_vod
          type: integer
        max_channel:
          description: The max `Channel` Number of stream is included
          example: 5
          title: max_channel
          type: integer
        monthly_fee:
          description: The cost per extra GB consumed
          title: monthly_fee
          type: integer
        bandwidth:
          description: "The max 'bandwidth' available by month, is in To"
          title: bandwidth
          type: integer
      required:
      - available_space_vod
      - bandwidth
      - max_channel
      - monthly_fee
      - name
      - order_info
      - pack_id
      title: Pack
    RadioProduct:
      example:
        is_locked: true
        product: product
        listeners: 152
        count_stations: 5
        monthly_consumption: 1856473697
        stations:
        - log_path: my_log_folder
          is_acpm: true
          created_at: 1478357542
          monthly_consumption: 1856473697
          log_login: MyLogin
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_enabled: true
          password: KeepItSecret
          updated_at: 1615838270
          stats:
          - stats
          - stats
          is_daily_restart: true
          options: options
          id: 1
          is_send_logs: true
          log_password: KeepItSecret
          cluster_name: plain
          thumbnail: https://storage.infomaniak.com/my-thumbnail.png
          listeners: 152
          streams:
          - null
          - null
          timezone_daily_restart: Europe/Zurich
          time_daily_restart: 15:03
          log_server: my-log-server.ch
          hls_stream:
            bitrates: "64,96,128"
            ip_include_list: ip_include_list
            is_hash_restriction: true
            buffer_size: 25
            domains: "infomaniak.com,my-radio.ch"
            created_at: 1478357542
            country_list: country_list
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_up: true
            ip_exclude_list: ip_exclude_list
            url: my-hls.infomaniak.com/my-hls/manifest.m3u8
            hash_key: my_hash_key
            updated_at: 1615838270
            name: myHls
            is_allow_country: true
            id: 1
            source_id: 1
            fragment_size: 25
          name: MyStation
          count_streams_up: 3
        - log_path: my_log_folder
          is_acpm: true
          created_at: 1478357542
          monthly_consumption: 1856473697
          log_login: MyLogin
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_enabled: true
          password: KeepItSecret
          updated_at: 1615838270
          stats:
          - stats
          - stats
          is_daily_restart: true
          options: options
          id: 1
          is_send_logs: true
          log_password: KeepItSecret
          cluster_name: plain
          thumbnail: https://storage.infomaniak.com/my-thumbnail.png
          listeners: 152
          streams:
          - null
          - null
          timezone_daily_restart: Europe/Zurich
          time_daily_restart: 15:03
          log_server: my-log-server.ch
          hls_stream:
            bitrates: "64,96,128"
            ip_include_list: ip_include_list
            is_hash_restriction: true
            buffer_size: 25
            domains: "infomaniak.com,my-radio.ch"
            created_at: 1478357542
            country_list: country_list
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_up: true
            ip_exclude_list: ip_exclude_list
            url: my-hls.infomaniak.com/my-hls/manifest.m3u8
            hash_key: my_hash_key
            updated_at: 1615838270
            name: myHls
            is_allow_country: true
            id: 1
            source_id: 1
            fragment_size: 25
          name: MyStation
          count_streams_up: 3
        has_maintenance: true
        pack:
          pack_id: 3
          available_space_vod: 100
          monthly_fee: 6
          bandwidth: 1
          name: Pro
          max_channel: 5
          order_info: 0
        packs:
        - pack_id: 3
          available_space_vod: 100
          monthly_fee: 6
          bandwidth: 1
          name: Pro
          max_channel: 5
          order_info: 0
        - pack_id: 3
          available_space_vod: 100
          monthly_fee: 6
          bandwidth: 1
          name: Pro
          max_channel: 5
          order_info: 0
        overquota_at: 6
        updated_at: 1615838270
        price: 0.8008281904610115
        locked_at: 1
        rights:
        - rights
        - rights
        options: options
        pack_price:
          periodicity_id: 1
          periodicity: MONTH
          price_excluding_vat: 15.2
          currency: CHF
          id: 1
        max_station: 5
        status: ""
      properties:
        product:
          title: product
          type: string
        price:
          description: The `RadioProduct` price
          title: price
          type: number
        overquota_at:
          format: datetime
          title: overquota_at
          type: integer
        locked_at:
          description: Timestamp `RadioProduct` has been locked
          format: datetime
          title: locked_at
          type: integer
        is_locked:
          description: Is the resource `RadioProduct` locked?
          example: true
          title: is_locked
          type: boolean
        has_maintenance:
          description: Does the resource `RadioProduct` have a maintenance mode enabled?
          example: true
          title: has_maintenance
          type: boolean
        max_station:
          description: The max `Station` can be created
          example: 5
          title: max_station
          type: integer
        pack:
          $ref: '#/components/schemas/Pack'
        pack_price:
          $ref: '#/components/schemas/PackPrice'
        options:
          title: options
          type: string
        stations:
          items:
            $ref: '#/components/schemas/Station_446a80a0'
          type: array
        count_stations:
          title: count_stations
          type: integer
        listeners:
          description: The number of currently listeners listen all `Stream`
          example: 152
          title: listeners
          type: integer
        monthly_consumption:
          description: The current monthly consumption (Byte)
          example: 1856473697
          title: monthly_consumption
          type: integer
        status:
          description: The status of the `RadioProduct`
          example: ""
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        rights:
          description: The rights of the `RadioProduct`
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        packs:
          items:
            $ref: '#/components/schemas/Pack'
          type: array
        updated_at:
          description: Timestamp `RadioProduct` has been updated
          example: 1615838270
          format: timestamp
          title: updated_at
          type: integer
      required:
      - has_maintenance
      - is_locked
      - listeners
      - locked_at
      - max_station
      - overquota_at
      - price
      - product
      - rights
      - status
      - updated_at
      title: RadioProduct
    ServerEvent:
      properties:
        name:
          description: The name of the server
          example: icepe10
          title: name
          type: string
        type:
          description: The type of the server
          example: edge
          title: type
          type: string
        date:
          description: The date of the server event
          example: 1679754593
          format: timestamp
          title: date
          type: integer
        status:
          description: The status of the event
          enum:
          - down
          - up
          example: up
          title: status
          type: string
      required:
      - date
      - name
      - status
      - type
      title: ServerEvent
    EncoderEvent:
      properties:
        mountpoint:
          description: The mountpoint has the event
          example: /my-mountpoint.mp3
          title: mountpoint
          type: string
        type:
          description: The type of event
          enum:
          - bad_password
          - start
          - stop
          example: start
          title: type
          type: string
        date:
          description: The date of the encoder event
          example: "1679754593"
          title: date
          type: string
        stream_id:
          description: The stream id has the event
          example: 2
          title: stream_id
          type: integer
        is_transcoding:
          description: Is a transcoded stream ?
          example: true
          title: is_transcoding
          type: boolean
        is_source:
          description: Is a source stream?
          example: true
          title: is_source
          type: boolean
      required:
      - date
      - is_source
      - is_transcoding
      - mountpoint
      - stream_id
      - type
      title: EncoderEvent
    StatListenerPerMinute:
      example:
        stats:
        - date: "1679754593"
          listeners: 10
        - date: "1679754593"
          listeners: 10
        average_per_minute: 10.05
        min_listeners: 1
        max_listeners: 20
      properties:
        stats:
          items:
            $ref: '#/components/schemas/StatListenerPerMinuteStats'
          type: array
        average_per_minute:
          description: The average of listeners per minute
          example: 10.05
          title: average_per_minute
          type: number
        max_listeners:
          description: The max listeners in one minute
          example: 20
          title: max_listeners
          type: integer
        min_listeners:
          description: The min listeners in one minute
          example: 1
          title: min_listeners
          type: integer
      required:
      - average_per_minute
      - max_listeners
      - min_listeners
      - stats
      title: StatListenerPerMinute
    StatCountryContinent:
      example:
        EU: 15
        AS: 5
        NA: 2
        OC: 0
        AF: 9
        AN: 10
        SA: 3
      properties:
        AS:
          description: The number of listeners in Asie
          example: 5
          title: AS
          type: integer
        AN:
          description: The number of listeners in Antarctique
          example: 10
          title: AN
          type: integer
        AF:
          description: The number of listeners in Afrique
          example: 9
          title: AF
          type: integer
        SA:
          description: The number of listeners in South America
          example: 3
          title: SA
          type: integer
        EU:
          description: The number of listeners in Europe
          example: 15
          title: EU
          type: integer
        OC:
          description: The number of listeners in Océanie
          example: 0
          title: OC
          type: integer
        NA:
          description: The number of listeners in North America
          example: 2
          title: NA
          type: integer
      required:
      - AF
      - AN
      - AS
      - EU
      - NA
      - OC
      - SA
      title: StatCountryContinent
    StatListenerByStation:
      example:
        listeners_30s: 5
        min_listening_time: 1
        listeners: 10
        stream_id: 2
        uniques: 4
        average_listeners: 3.36
        min_listeners: 0
        listening_time: 120
        average_listening_time: 53.15
        type: hls
        max_listeners: 5
        max_listening_time: 20
      properties:
        stream_id:
          description: The stream id related to this stat
          example: 2
          title: stream_id
          type: integer
        listeners:
          description: The number of listeners
          example: 10
          title: listeners
          type: integer
        listeners_30s:
          description: The number of listeners will stay 30 seconds
          example: 5
          title: listeners_30s
          type: integer
        max_listeners:
          description: The max listeners on the date range
          example: 5
          title: max_listeners
          type: integer
        min_listeners:
          description: The min listeners on the date range
          example: 0
          title: min_listeners
          type: integer
        uniques:
          description: The number of unique listeners
          example: 4
          title: uniques
          type: integer
        average_listeners:
          description: The average listeners on the date range
          example: 3.36
          title: average_listeners
          type: number
        listening_time:
          description: The number of seconds listened
          example: 120
          title: listening_time
          type: integer
        max_listening_time:
          description: The max of seconds listened
          example: 20
          title: max_listening_time
          type: integer
        min_listening_time:
          description: The min of seconds listened
          example: 1
          title: min_listening_time
          type: integer
        average_listening_time:
          description: The average of seconds listened on the date range
          example: 53.15
          title: average_listening_time
          type: number
        type:
          description: The type of stream
          enum:
          - hls
          - stream
          example: hls
          title: type
          type: string
      required:
      - average_listeners
      - average_listening_time
      - listeners
      - listeners_30s
      - listening_time
      - max_listeners
      - max_listening_time
      - min_listeners
      - min_listening_time
      - stream_id
      - type
      - uniques
      title: StatListenerByStation
    StatConsumption:
      example:
        date: "1679754593"
        average_bytes_by_listeners: 15621
        bytes: 131315
      properties:
        date:
          description: The date of the consumption stat
          example: "1679754593"
          title: date
          type: string
        bytes:
          description: The number of bytes consumed
          example: 131315
          title: bytes
          type: integer
        average_bytes_by_listeners:
          description: The average of bytes consumed by listener
          example: 15621
          title: average_bytes_by_listeners
          type: number
      required:
      - average_bytes_by_listeners
      - bytes
      - date
      title: StatConsumption
    StatConsumptionByStream:
      example:
        average_bytes_by_listeners: 5165
        stream_id: 2
        total_bytes: 1012652
        average_bytes_by_day: 51132
        max_bytes: 15156
        type: hls
      properties:
        stream_id:
          description: The stream id related to this stat
          example: 2
          title: stream_id
          type: integer
        total_bytes:
          description: The total of bytes consumed on the date range
          example: 1012652
          title: total_bytes
          type: integer
        average_bytes_by_listeners:
          description: The average of bytes consumed by listeners
          example: 5165
          title: average_bytes_by_listeners
          type: number
        average_bytes_by_day:
          description: The average of bytes consumed by day
          example: 51132
          title: average_bytes_by_day
          type: number
        max_bytes:
          description: The max bytes consumed in one day
          example: 15156
          title: max_bytes
          type: integer
        type:
          description: The type of stream
          enum:
          - hls
          - stream
          example: hls
          title: type
          type: string
      required:
      - average_bytes_by_day
      - average_bytes_by_listeners
      - max_bytes
      - stream_id
      - total_bytes
      - type
      title: StatConsumptionByStream
    StatTotalPlayer:
      example:
        listeners: 10
        streams: "1,3,5"
        percent_listeners: 40.85
        stations: "10,15"
        player: Safari
        average_listeners_by_day: 20.05
      properties:
        streams:
          description: The list of streams use this player (only available on stations
            stats)
          example: "1,3,5"
          title: streams
          type: string
        stations:
          description: The list of stations use this player (only available on radio
            products stats)
          example: "10,15"
          title: stations
          type: string
        player:
          description: The stat player name
          example: Safari
          title: player
          type: string
        listeners:
          description: The number of listeners
          example: 10
          title: listeners
          type: integer
        percent_listeners:
          description: The percent of listeners of the player total
          example: 40.85
          title: percent_listeners
          type: number
        average_listeners_by_day:
          description: The average of listeners by day
          example: 20.05
          title: average_listeners_by_day
          type: number
      required:
      - average_listeners_by_day
      - listeners
      - percent_listeners
      - player
      title: StatTotalPlayer
    StatListLink:
      example:
        hostname: https://api.infomaniak.com
        password: myPassword
        instant_customer: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners
        port: 80
        mediastats_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
        status_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
        instant_customer_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
        update_metadata: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/metadata?data=artist
          - title
        username: myUsername
        status: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status
      properties:
        hostname:
          description: The hostname of the API
          example: https://api.infomaniak.com
          title: hostname
          type: string
        port:
          description: The port of the API
          example: 80
          title: port
          type: integer
        username:
          description: The username to use in stat link
          example: myUsername
          title: username
          type: string
        password:
          description: The password to use in stat link
          example: myPassword
          title: password
          type: string
        status:
          description: The url link to call to get status on each streams
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status
          title: status
          type: string
        status_per_stream:
          description: The url list to call to get status stream
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
          items:
            description: The url list to call to get status stream
            example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
            title: status_per_stream
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: false
          type: array
        instant_customer:
          description: The url link to call to get number of listeners on each streams
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners
          title: instant_customer
          type: string
        instant_customer_per_stream:
          description: The url list to call to get number of listeners on stream
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
          items:
            description: The url list to call to get number of listeners on stream
            example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
            title: instant_customer_per_stream
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: false
          type: array
        mediastats_per_stream:
          description: The url list to call to get mediastats on stream
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
          items:
            description: The url list to call to get mediastats on stream
            example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
            title: mediastats_per_stream
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: false
          type: array
        update_metadata:
          description: The url link to call to change metadata of your station
          example: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/metadata?data=artist
            - title
          title: update_metadata
          type: string
      required:
      - hostname
      - instant_customer
      - instant_customer_per_stream
      - mediastats_per_stream
      - password
      - port
      - status
      - status_per_stream
      - update_metadata
      - username
      title: StatListLink
    Notification:
      example:
        is_saturday: true
        is_wednesday: true
        is_sms: true
        is_thursday: true
        users: "1,5,10"
        is_sunday: true
        is_enabled: true
        is_tuesday: true
        is_mail: true
        start_hour: 14:25
        is_friday: true
        end_hour: 20:03
        is_monday: true
      properties:
        is_monday:
          description: Is the users can be notified the monday ?
          example: true
          title: is_monday
          type: boolean
        is_tuesday:
          description: Is the users can be notified the tuesday ?
          example: true
          title: is_tuesday
          type: boolean
        is_wednesday:
          description: Is the users can be notified the wednesday ?
          example: true
          title: is_wednesday
          type: boolean
        is_thursday:
          description: Is the users can be notified the thursday ?
          example: true
          title: is_thursday
          type: boolean
        is_friday:
          description: Is the users can be notified the friday ?
          example: true
          title: is_friday
          type: boolean
        is_saturday:
          description: Is the users can be notified the saturday ?
          example: true
          title: is_saturday
          type: boolean
        is_sunday:
          description: Is the users can be notified the sunday ?
          example: true
          title: is_sunday
          type: boolean
        start_hour:
          description: The time to use for daily restart
          example: 14:25
          title: start_hour
          type: string
        end_hour:
          description: The time to use for daily restart
          example: 20:03
          title: end_hour
          type: string
        is_mail:
          description: Is the users can be notified by mail ?
          example: true
          title: is_mail
          type: boolean
        is_sms:
          description: Is the users can be notified by sms ?
          example: true
          title: is_sms
          type: boolean
        is_enabled:
          description: Is the resource `Notification` enabled?
          example: true
          title: is_enabled
          type: boolean
        users:
          description: List of users ID will notified
          example: "1,5,10"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - end_hour
      - is_enabled
      - is_friday
      - is_mail
      - is_monday
      - is_saturday
      - is_sms
      - is_sunday
      - is_thursday
      - is_tuesday
      - is_wednesday
      - start_hour
      - users
      title: Notification
    HlsStream:
      example:
        bitrates: "64,96,128"
        ip_include_list: ip_include_list
        is_hash_restriction: true
        buffer_size: 25
        domains: "infomaniak.com,my-radio.ch"
        created_at: 1478357542
        country_list: country_list
        uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
        is_up: true
        ip_exclude_list: ip_exclude_list
        url: my-hls.infomaniak.com/my-hls/manifest.m3u8
        hash_key: my_hash_key
        updated_at: 1615838270
        name: myHls
        is_allow_country: true
        id: 1
        source_id: 1
        fragment_size: 25
      properties:
        id:
          description: Unique identifier of the resource `HlsStream`
          example: 1
          title: Unique identifier
          type: integer
        uuid:
          description: Universally unique identifier of the resource `HlsStream`
          example: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          title: uuid
          type: string
        name:
          description: Define unique name used in url
          example: myHls
          title: name
          type: string
        bitrates:
          description: The bitrates used in the `HlsStream`
          example: "64,96,128"
          title: bitrates
          type: string
        buffer_size:
          description: The size of the buffer in the `HlsStream`
          example: 25
          title: buffer_size
          type: integer
        fragment_size:
          description: The size of the fragment in the `HlsStream` use for buffer
            size
          example: 25
          title: fragment_size
          type: integer
        is_hash_restriction:
          description: Is hash restriction enabled?
          example: true
          title: is_hash_restriction
          type: boolean
        hash_key:
          description: The hash key used for hash protection
          example: my_hash_key
          title: hash_key
          type: string
        ip_include_list:
          description: The ip list allows to access to the hls stream
          title: ip_include_list
          type: string
        ip_exclude_list:
          description: The ip list not allows to access to the hls stream
          title: ip_exclude_list
          type: string
        is_allow_country:
          description: Define if the hls stream used the restriction rules
          title: is_allow_country
          type: boolean
        country_list:
          description: The country list not allows to access to the hls stream
          title: country_list
          type: string
        url:
          description: The public url for `HlsStream`
          example: my-hls.infomaniak.com/my-hls/manifest.m3u8
          title: url
          type: string
        is_up:
          description: Is the `HlsStream` is online?
          example: true
          title: is_up
          type: boolean
        domains:
          description: The list of domains allow to access
          example: "infomaniak.com,my-radio.ch"
          title: domains
          type: string
        source_id:
          description: The source `Stream` of the `HlsStream`
          example: 1
          title: source_id
          type: integer
        created_at:
          description: Timestamp `HlsStream` has been created
          example: 1478357542
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `HlsStream` has been updated
          example: 1615838270
          format: timestamp
          title: updated_at
          type: integer
      required:
      - bitrates
      - buffer_size
      - country_list
      - created_at
      - domains
      - fragment_size
      - hash_key
      - id
      - ip_exclude_list
      - ip_include_list
      - is_allow_country
      - is_hash_restriction
      - is_up
      - name
      - source_id
      - updated_at
      - url
      - uuid
      title: HlsStream
    StatListenerByStation_21e42669:
      example:
        listeners_30s: 5
        min_listening_time: 1
        listeners: 10
        station_id: 2
        uniques: 4
        average_listeners: 3.36
        min_listeners: 0
        listening_time: 120
        average_listening_time: 53.15
        max_listeners: 5
        max_listening_time: 20
      properties:
        station_id:
          description: The station id related to this stat
          example: 2
          title: station_id
          type: integer
        listeners:
          description: The number of listeners
          example: 10
          title: listeners
          type: integer
        listeners_30s:
          description: The number of listeners will stay 30 seconds
          example: 5
          title: listeners_30s
          type: integer
        max_listeners:
          description: The max listeners on the date range
          example: 5
          title: max_listeners
          type: integer
        min_listeners:
          description: The min listeners on the date range
          example: 0
          title: min_listeners
          type: integer
        uniques:
          description: The number of unique listeners
          example: 4
          title: uniques
          type: integer
        average_listeners:
          description: The average listeners on the date range
          example: 3.36
          title: average_listeners
          type: number
        listening_time:
          description: The number of seconds listened
          example: 120
          title: listening_time
          type: integer
        max_listening_time:
          description: The max of seconds listened
          example: 20
          title: max_listening_time
          type: integer
        min_listening_time:
          description: The min of seconds listened
          example: 1
          title: min_listening_time
          type: integer
        average_listening_time:
          description: The average of seconds listened on the date range
          example: 53.15
          title: average_listening_time
          type: number
      required:
      - average_listeners
      - average_listening_time
      - listeners
      - listeners_30s
      - listening_time
      - max_listeners
      - max_listening_time
      - min_listeners
      - min_listening_time
      - station_id
      - uniques
      title: StatListenerByStation
    StatConsumptionByStation:
      example:
        average_bytes_by_listeners: 5165
        station_id: 2
        total_bytes: 1012652
        average_bytes_by_day: 51132
        max_bytes: 15156
      properties:
        station_id:
          description: The station id related to this stat
          example: 2
          title: station_id
          type: integer
        total_bytes:
          description: The total of bytes consumed on the date range
          example: 1012652
          title: total_bytes
          type: integer
        average_bytes_by_listeners:
          description: The average of bytes consumed by listeners
          example: 5165
          title: average_bytes_by_listeners
          type: number
        average_bytes_by_day:
          description: The average of bytes consumed by day
          example: 51132
          title: average_bytes_by_day
          type: number
        max_bytes:
          description: The max bytes consumed in one day
          example: 15156
          title: max_bytes
          type: integer
      required:
      - average_bytes_by_day
      - average_bytes_by_listeners
      - max_bytes
      - station_id
      - total_bytes
      title: StatConsumptionByStation
    RadioProductOptionShop:
      example:
        quantity: 0
        price: 6.027456183070403
        option_subject_id: 1
        created_at: 1478357542
        id: 1
        type: 1
        option_subject_name: option_subject_name
        ended_at: 1600370552
        option_subject_type: option_subject_type
      properties:
        id:
          description: Unique identifier of the resource `RadioProductOptionShop`
          example: 1
          title: Unique identifier
          type: integer
        quantity:
          title: quantity
          type: integer
        price:
          title: price
          type: number
        type:
          description: Type of the resource `RadioProductOptionShop`
          example: 1
          title: type
          type: integer
        option_subject_id:
          title: option_subject_id
          type: integer
        option_subject_type:
          title: option_subject_type
          type: string
        option_subject_name:
          title: option_subject_name
          type: string
        created_at:
          description: Timestamp `RadioProductOptionShop` has been created
          example: 1478357542
          format: timestamp
          title: created_at
          type: integer
        ended_at:
          description: Timestamp `RadioProductOptionShop` has ended
          example: 1600370552
          format: timestamp
          title: ended_at
          type: integer
      required:
      - created_at
      - ended_at
      - id
      - option_subject_id
      - option_subject_name
      - option_subject_type
      - price
      - quantity
      - type
      title: RadioProductOptionShop
    NewSignatureAsset:
      example:
        image: http://example.com/aeiou
      properties:
        image:
          description: |+
            Url of newly created image

          format: url
          title: image
          type: string
      title: NewSignatureAsset
    Mailbox:
      allOf:
      - $ref: '#/components/schemas/MailboxBase'
      - properties:
          is_limited:
            description: |+
              True if mailbox has rate limit

            title: is_limited
            type: boolean
          is_free_mail:
            description: |+
              True if mailbox belongs to free mail service

            title: is_free_mail
            type: boolean
          full_name:
            description: |-
              Mailbox's fullname

              **This field is provided only if you have set with=full_name**
            title: full_name
            type: string
          has_auto_responder:
            description: |-
              True if has_auto_responder is enabled

              **This field is provided only if you have set with=has_auto_responder**
            title: has_auto_responder
            type: boolean
          auto_responder:
            $ref: '#/components/schemas/MailboxAutoReply'
          has_redirection:
            description: |-
              True if has at least one redirection

              **This field is provided only if you have set with=redirection**
            title: has_redirection
            type: boolean
          redirections:
            items:
              description: Redirection address list
              type: string
            type: array
          aliases:
            items:
              description: Aliases names list
              type: string
            type: array
          full_aliases:
            items:
              description: Aliases emails list
              format: email
              type: string
            type: array
          created_at:
            description: |-
              Creation date

              **This field is provided only if you have set with=created_at**
            format: timestamp
            title: created_at
            type: integer
            nullable: true
          password_last_changed_at:
            description: |-
              Last password change date

              **This field is provided only if you have set with=password_last_changed_at**
            format: timestamp
            title: password_last_changed_at
            type: integer
            nullable: true
          size:
            description: |-
              Mailbox size in ko

              **This field is provided only if you have set with=size**
            title: size
            type: integer
            nullable: true
          size_checked_at:
            description: |-
              Last mailbox size verification date

              **This field is provided only if you have set with=last_login**
            format: timestamp
            title: size_checked_at
            type: integer
            nullable: true
          imap_last_login_at:
            description: |-
              Last login date from imap protocol, unix timestamp

              **This field is provided only if you have set with=last_login**
            format: timestamp
            title: imap_last_login_at
            type: integer
            nullable: true
          pop3_last_login_at:
            description: |-
              Last login date from imap protocol, unix timestamp

              **This field is provided only if you have set with=size**
            format: timestamp
            title: pop3_last_login_at
            type: integer
            nullable: true
          operation_in_progress:
            description: |-
              True if blocking operation is currently in progress on this service

              **This field is provided only if you have set with=operation_in_progress**
            title: operation_in_progress
            type: boolean
          users:
            items:
              $ref: '#/components/schemas/MailUser'
            type: array
          has_move_spam:
            description: |-
              True if has at least one redirection

              **This field is provided only if you have set with=has_move_spam**
            title: has_move_spam
            type: boolean
          authorized_senders:
            items:
              example: user@authorized-senders.com
              format: email
              type: string
            type: array
          blocked_senders:
            items:
              example: user@blocked-senders.com
              format: email
              type: string
            type: array
          has_dkim_signature:
            description: |-
              True if dkim signature is activated

              **This field is provided only if you have set with=has_dkim_signature**
            title: has_dkim_signature
            type: boolean
          is_dkim_updatable:
            description: |-
              True if dkim signature can be updated

              **This field is provided only if you have set with=is_dkim_updatable**
            title: is_dkim_updatable
            type: boolean
          has_mail_filtering:
            description: |-
              True if Commercial and SocialNetwork filters are activated

              **This field is provided only if you have set with=has_mail_filtering**
            title: has_mail_filtering
            type: boolean
          mail_filtering_folder_commercials:
            description: |-
              Folder for Commercial emails filter

              **This field is provided only if you have set with=mail_filtering_folder_commercials**
            title: mail_filtering_folder_commercials
            type: string
          mail_filtering_folder_social_networks:
            description: |-
              Folder for SocialNetwork emails filter

              **This field is provided only if you have set with=mail_filtering_folder_social_networks**
            title: mail_filtering_folder_social_networks
            type: string
          is_auth:
            description: |-
              True if user is authenticated with this mailbox

              **This field is provided only if you have set with=auth**
            title: is_auth
            type: boolean
          is_removable:
            description: |-
              True if mailbox is is_removable. Note: is always true

              **This field is provided only if you have set with=is_removable**
            title: is_removable
            type: boolean
          permissions:
            $ref: '#/components/schemas/MailMailboxPermissions'
          mailbox_id:
            description: |-
              Identifier of this mailbox

              **This field is provided only if you have set with=mailbox_id**
            title: mailbox_id
            type: integer
        required:
        - is_free_mail
        - is_limited
        title: Mailbox
      example:
        is_removable: true
        aliases:
        - aliases
        - aliases
        is_dkim_updatable: true
        created_at: 1
        is_auth: true
        pop3_last_login_at: 9
        operation_in_progress: true
        is_free_mail: true
        permissions:
          has_technical_right: true
          is_linked_to_user: true
          can_manage_auto_reply: true
          can_manage_redirections: true
          can_manage_aliases: true
          can_configure_mail_folders: true
          can_manage_security: true
          can_manage_signatures: true
          can_manage_filters: true
          can_change_password: true
        password_last_changed_at: 5
        has_mail_filtering: true
        size_checked_at: 2
        has_dkim_signature: true
        mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
        has_redirection: true
        has_auto_responder: true
        has_move_spam: true
        is_limited: true
        imap_last_login_at: 7
        users:
        - last_login_at: "{}"
          is_deleted: true
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          name: name
          id: 3
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
        - last_login_at: "{}"
          is_deleted: true
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          name: name
          id: 3
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
        mailbox_idn: user@êxample.com
        redirections:
        - redirections
        - redirections
        auto_responder:
          is_enabled: true
          reply_from: reply_from
          is_active: true
          is_recurrent: true
          dont_reply_to:
          - dont_reply_to
          - dont_reply_to
          has_send_original_message: true
          started_at: 2000-01-23
          valid_emails:
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          recurrent_days:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          reply_message: reply_message
          ended_at: 2000-01-23
          reply_from_id: 0
        mailbox: user@xn--xample-hva.com
        full_name: full_name
        authorized_senders:
        - user@authorized-senders.com
        - user@authorized-senders.com
        size: 5
        mailbox_name: user
        mailbox_id: 2
        blocked_senders:
        - user@blocked-senders.com
        - user@blocked-senders.com
        mail_filtering_folder_commercials: mail_filtering_folder_commercials
        full_aliases:
        - full_aliases
        - full_aliases
      title: Mailbox
    MailboxStore:
      example:
        total: 1
        mailbox:
          is_removable: true
          aliases:
          - aliases
          - aliases
          is_dkim_updatable: true
          created_at: 1
          is_auth: true
          pop3_last_login_at: 9
          operation_in_progress: true
          is_free_mail: true
          permissions:
            has_technical_right: true
            is_linked_to_user: true
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          password_last_changed_at: 5
          has_mail_filtering: true
          size_checked_at: 2
          has_dkim_signature: true
          mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
          has_redirection: true
          has_auto_responder: true
          has_move_spam: true
          is_limited: true
          imap_last_login_at: 7
          users:
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          mailbox_idn: user@êxample.com
          redirections:
          - redirections
          - redirections
          auto_responder:
            is_enabled: true
            reply_from: reply_from
            is_active: true
            is_recurrent: true
            dont_reply_to:
            - dont_reply_to
            - dont_reply_to
            has_send_original_message: true
            started_at: 2000-01-23
            valid_emails:
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            recurrent_days:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            reply_message: reply_message
            ended_at: 2000-01-23
            reply_from_id: 0
          mailbox: user@xn--xample-hva.com
          full_name: full_name
          authorized_senders:
          - user@authorized-senders.com
          - user@authorized-senders.com
          size: 5
          mailbox_name: user
          mailbox_id: 2
          blocked_senders:
          - user@blocked-senders.com
          - user@blocked-senders.com
          mail_filtering_folder_commercials: mail_filtering_folder_commercials
          full_aliases:
          - full_aliases
          - full_aliases
        quota: 0
        used: 6
        existing_user_email: true
      properties:
        mailbox:
          $ref: '#/components/schemas/Mailbox'
        quota:
          description: |+
            Service mail quota

          title: quota
          type: integer
        used:
          description: |+
            Number of existing mailboxes linked to this service

          title: used
          type: integer
        total:
          description: |+
            New number of mailboxes linked to this service

          title: total
          type: integer
        existing_user_email:
          description: |+
            True when user exists for email and target is other_user

          title: existing_user_email
          type: boolean
      required:
      - mailbox
      - quota
      - total
      - used
      title: MailboxStore
    WorkspaceInvitation:
      example:
        mailbox:
          mailbox_idn: user@êxample.com
          mailbox: user@xn--xample-hva.com
          mailbox_name: user
        permissions:
        - can_manage_auto_reply: true
          can_manage_redirections: true
          can_manage_aliases: true
          can_configure_mail_folders: true
          can_manage_security: true
          can_manage_signatures: true
          can_manage_filters: true
          can_change_password: true
        - can_manage_auto_reply: true
          can_manage_redirections: true
          can_manage_aliases: true
          can_configure_mail_folders: true
          can_manage_security: true
          can_manage_signatures: true
          can_manage_filters: true
          can_change_password: true
        qrcode: qrcode
        is_valid: true
        sent_to: sent_to
        expired_at: 0
        key: key
        short_url: http://example.com/aeiou
        is_used: true
      properties:
        short_url:
          description: |+
            Invitation url

          format: url
          title: short_url
          type: string
        key:
          description: |+
            Key

          title: key
          type: string
        sent_to:
          description: |+
            Invitation recipient email address

          format: email
          title: sent_to
          type: string
          nullable: true
        permissions:
          items:
            $ref: '#/components/schemas/MailPermissions'
          type: array
        expired_at:
          description: |+
            Expired date

          format: timestamp
          title: expired_at
          type: integer
        is_valid:
          description: |+
            True if still valid

          title: is_valid
          type: boolean
        is_used:
          description: |+
            True if invitation has been accepted

          title: is_used
          type: boolean
        mailbox:
          $ref: '#/components/schemas/MailboxBase'
        qrcode:
          description: |-
            QR Code url

            **This field is provided only if you have set with=qrcode**
          format: base64
          title: qrcode
          type: string
      required:
      - expired_at
      - is_used
      - is_valid
      - key
      - permissions
      - sent_to
      - short_url
      title: WorkspaceInvitation
    MailboxFilter:
      example:
        prevent_script: true
        use_scripts: true
        filters:
        - is_enabled: true
          name: name
          conditions:
          - property: property
            value: value
            operator: operator
          - property: property
            value: value
            operator: operator
          actions:
          - type: type
            value: value
          - type: type
            value: value
          has_all_of: true
        - is_enabled: true
          name: name
          conditions:
          - property: property
            value: value
            operator: operator
          - property: property
            value: value
            operator: operator
          actions:
          - type: type
            value: value
          - type: type
            value: value
          has_all_of: true
        scripts:
        - is_enabled: true
          name: name
          content: content
        - is_enabled: true
          name: name
          content: content
        script: script
      properties:
        prevent_script:
          description: |+
            True if this mailbox can't use custom scripts

          title: prevent_script
          type: boolean
        use_scripts:
          description: |+
            True if a custom script is enabled

          title: use_scripts
          type: boolean
        scripts:
          items:
            $ref: '#/components/schemas/MailboxFilter_scripts_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/MailboxFilter_filters_inner'
          type: array
        script:
          description: |+
            Actually used script content (custom script or generated script from filters)

          title: script
          type: string
      title: MailboxFilter
    PostSieveFilter:
      description: Sieve filter PATCH body parameters
      properties:
        name:
          description: Filter name
          type: string
        is_enabled:
          description: Is enabled
          type: boolean
        has_all_of:
          description: "Filter must match all conditions if true, at least one if\
            \ false"
          type: boolean
        conditions:
          $ref: '#/components/schemas/PostSieveFilter_conditions'
        actions:
          $ref: '#/components/schemas/PostSieveFilter_actions'
      required:
      - actions
      - conditions
      - has_all_of
      - is_enabled
      - name
    PatchSieveFilter:
      description: Sieve filter PATCH body parameters
      properties:
        name:
          description: New name
          type: string
        old_name:
          description: Old name
          type: string
        is_enabled:
          description: Is enabled
          type: boolean
        has_all_of:
          description: "Filter must match all conditions if true, at least one if\
            \ false"
          type: boolean
        conditions:
          $ref: '#/components/schemas/PostSieveFilter_conditions'
        actions:
          $ref: '#/components/schemas/PostSieveFilter_actions'
      required:
      - actions
      - conditions
      - has_all_of
      - is_enabled
      - name
      - old_name
    MailboxFolder:
      example:
        social_networks_folder: social_networks_folder
        folders:
        - name: name
        - name: name
        draft_folder: draft_folder
        archives_folder: archives_folder
        sent_folder: sent_folder
        trash_folder: trash_folder
        spam_folder: spam_folder
        commercials_folder: commercials_folder
      properties:
        folders:
          items:
            $ref: '#/components/schemas/MailboxFolder_folders_inner'
          type: array
        draft_folder:
          description: |+
            Draft folder name

          title: draft_folder
          type: string
        trash_folder:
          description: |+
            Trash folder name

          title: trash_folder
          type: string
        sent_folder:
          description: |+
            Sent folder name

          title: sent_folder
          type: string
        spam_folder:
          description: |+
            Spam folder name

          title: spam_folder
          type: string
        archives_folder:
          description: |+
            Archives folder name

          title: archives_folder
          type: string
        commercials_folder:
          description: |+
            Folder for Commercial emails filter

          title: commercials_folder
          type: string
        social_networks_folder:
          description: |+
            Folder for SocialNetwork emails filter

          title: social_networks_folder
          type: string
      title: MailboxFolder
    MailboxSignature:
      example:
        default_signature_id: 5
        valid_emails:
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
        position: bottom
        signatures:
        - full_name: full_name
          sender_idn: sender_idn
          reply_to: reply_to
          sender: sender
          name: name
          id: 0
          reply_to_idn: reply_to_idn
          is_default: true
          content: content
          sender_id: 1
          hash: hash
          reply_to_id: 6
        - full_name: full_name
          sender_idn: sender_idn
          reply_to: reply_to
          sender: sender
          name: name
          id: 0
          reply_to_idn: reply_to_idn
          is_default: true
          content: content
          sender_id: 1
          hash: hash
          reply_to_id: 6
      properties:
        signatures:
          items:
            $ref: '#/components/schemas/MailboxSignatureElement'
          type: array
        default_signature_id:
          description: |+
            Default signature identifier

          title: default_signature_id
          type: integer
        valid_emails:
          items:
            $ref: '#/components/schemas/VerifiedEmail'
          type: array
        position:
          description: |+
            Signature position

          enum:
          - bottom
          - top
          title: position
          type: string
      title: MailboxSignature
    MailboxForwarding:
      example:
        is_enabled: true
        has_forward_spam: true
        redirect_adresses:
        - email_idn: email_idn
          email: email
        - email_idn: email_idn
          email: email
        has_dont_deliver: true
      properties:
        is_enabled:
          description: |+
            Enabled

          title: is_enabled
          type: boolean
        redirect_adresses:
          items:
            $ref: '#/components/schemas/MailboxForwarding_redirect_adresses_inner'
          type: array
        has_dont_deliver:
          description: |+
            True if email is deleted after forwarded

          title: has_dont_deliver
          type: boolean
        has_forward_spam:
          description: |+
            True if transmits spam messages

          title: has_forward_spam
          type: boolean
      title: MailboxForwarding
    NewMailboxForwarding:
      example:
        email_idn: email_idn
        has_dont_deliver: true
        email: email
      properties:
        email:
          description: |+
            Email

          format: email
          title: email
          type: string
        email_idn:
          description: |+
            EmailIDN

          format: email
          title: email_idn
          type: string
        has_dont_deliver:
          description: |+
            True if email is deleted after forwarded

          title: has_dont_deliver
          type: boolean
      title: NewMailboxForwarding
    MailboxAlias:
      example:
        is_enabled: 0
        aliases:
        - name: name
        - name: name
      properties:
        is_enabled:
          description: |+
            Enable alias

          title: is_enabled
          type: integer
        aliases:
          items:
            $ref: '#/components/schemas/MailboxAlias_aliases_inner'
          type: array
      title: MailboxAlias
    ServiceMail:
      example:
        is_locked: true
        created_at: 5
        description: description
        expired_at: 5
        used: 3
        has_maintenance: true
        has_operation_in_progress: true
        total: 2
        internal_name: internal_name
        service_id: 1
        rights:
          statistic: true
          sale: true
          technical: true
          check: true
        quota: 9
        main_fqdn: main_fqdn
        limit:
          alias_for_mailbox: true
          alias_for_mailbox_default: true
          alias_for_fqdn: true
          alias_for_fqdn_default: true
        is_zero_price: true
        id: 0
        main_fqdn_idn: main_fqdn_idn
        bill_periodicity: 7
        unique_id: 2
        diagnostic_dns:
          has_error: true
        service_name: service_name
        pack:
          is_starter: true
          has_newsletter_tool: true
          has_list_tool: true
          description: description
          additional_paid_email: 7
          id: 4
          free_additional_email: 1
        tags: "{}"
        account_id: 6
        is_free: true
        customer_name: customer_name
        bill_reference: bill_reference
      properties:
        id:
          description: |+
            Ressource identifier

          title: id
          type: integer
        account_id:
          description: |+
            Account id

          title: account_id
          type: integer
        service_id:
          description: |+
            Service id

          title: service_id
          type: integer
        service_name:
          description: |+
            Service name

          title: service_name
          type: string
        customer_name:
          description: |+
            Customer name

          title: customer_name
          type: string
        internal_name:
          description: |+
            Internal name

          title: internal_name
          type: string
          nullable: true
        created_at:
          description: |+
            Created at timestamp

          format: timestamp
          title: created_at
          type: integer
        expired_at:
          description: |+
            Expired at timestamp

          format: timestamp
          title: expired_at
          type: integer
        has_maintenance:
          description: |+
            Maintenance

          title: has_maintenance
          type: boolean
        is_locked:
          description: |+
            Locked

          title: is_locked
          type: boolean
        tags:
          description: ""
          title: tags
          type: object
        unique_id:
          description: |+
            Unique id

          title: unique_id
          type: integer
        description:
          description: |+
            Description

          title: description
          type: string
        is_free:
          description: |+
            Is free

          title: is_free
          type: boolean
        is_zero_price:
          description: |+
            Is zero price

          title: is_zero_price
          type: boolean
        rights:
          $ref: '#/components/schemas/DomainRights'
        has_operation_in_progress:
          description: |-
            Operation in progress

            **This field is provided only if you have set with=operation_in_progress**
          title: has_operation_in_progress
          type: boolean
        main_fqdn:
          description: |+
            Fully qualified domain name

          title: main_fqdn
          type: string
        main_fqdn_idn:
          description: |+
            Fully qualified domain name, internationalized domain name

          title: main_fqdn_idn
          type: string
        bill_reference:
          description: |+
            Bill reference

          title: bill_reference
          type: string
        bill_periodicity:
          description: |+
            Bill periodicity

          title: bill_periodicity
          type: integer
        quota:
          description: |-
            Quota

            **This field is provided only if you have set with=quota**
          title: quota
          type: integer
          nullable: true
        used:
          description: |-
            Used

            **This field is provided only if you have set with=quota**
          title: used
          type: integer
        total:
          description: |-
            Total

            **This field is provided only if you have set with=quota**
          title: total
          type: integer
        diagnostic_dns:
          $ref: '#/components/schemas/MailDiagnosticDns'
        pack:
          $ref: '#/components/schemas/MailPack'
        limit:
          $ref: '#/components/schemas/limit'
      title: ServiceMail
    MailHosting:
      example:
        offer: offer
        expiration: expiration
        mailboxes: 0
        customer_name: customer_name
      properties:
        customer_name:
          description: |+
            customer_name

          title: customer_name
          type: string
        offer:
          description: |+
            offer

          title: offer
          type: string
        expiration:
          description: |+
            Expiration date

          format: dd/mm/yyyy
          title: expiration
          type: string
        mailboxes:
          description: |+
            Number of mailboxes on this product

          title: mailboxes
          type: integer
      required:
      - customer_name
      - expiration
      - mailboxes
      - offer
      title: MailHosting
    ServiceMailpreferences:
      example:
        default_permissions: "{}"
        spam_filter_enabled: true
        authorized_senders:
        - authorized_senders
        - authorized_senders
        updated_at: 6
        created_at: 0
        blocked_senders:
        - blocked_senders
        - blocked_senders
        promotion_filter_enabled: true
      properties:
        default_permissions:
          title: default_permissions
          type: object
        spam_filter_enabled:
          title: spam_filter_enabled
          type: boolean
        promotion_filter_enabled:
          title: promotion_filter_enabled
          type: boolean
        authorized_senders:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        blocked_senders:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        created_at:
          description: Timestamp `Service Mail preferences` has been created
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Service Mail preferences` has been updated
          format: timestamp
          title: updated_at
          type: integer
      required:
      - authorized_senders
      - blocked_senders
      - created_at
      - default_permissions
      - promotion_filter_enabled
      - spam_filter_enabled
      - updated_at
      title: Service Mail preferences
    WorkspaceUserList:
      example:
        users:
        - is_deleted: true
          name: name
          mailboxes:
          - mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
          - mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
          id: 0
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
          is_unified: true
        - is_deleted: true
          name: name
          mailboxes:
          - mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
          - mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
          id: 0
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
          is_unified: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/WorkspaceUserMail'
          type: array
      title: WorkspaceUserList
    WorkspaceUser:
      example:
        invitations:
        - mailbox:
            mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
          permissions:
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          qrcode: qrcode
          is_valid: true
          sent_to: sent_to
          expired_at: 0
          key: key
          short_url: http://example.com/aeiou
          is_used: true
        - mailbox:
            mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
          permissions:
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          qrcode: qrcode
          is_valid: true
          sent_to: sent_to
          expired_at: 0
          key: key
          short_url: http://example.com/aeiou
          is_used: true
        users:
        - last_login_at: "{}"
          is_deleted: true
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          name: name
          id: 3
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
        - last_login_at: "{}"
          is_deleted: true
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          name: name
          id: 3
          avatar: http://example.com/aeiou
          email: email
          has_double_auth: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/MailUser'
          type: array
        invitations:
          items:
            $ref: '#/components/schemas/WorkspaceInvitation'
          type: array
      title: WorkspaceUser
    MailboxSignatureElement:
      example:
        full_name: full_name
        sender_idn: sender_idn
        reply_to: reply_to
        sender: sender
        name: name
        id: 0
        reply_to_idn: reply_to_idn
        is_default: true
        content: content
        sender_id: 1
        hash: hash
        reply_to_id: 6
      properties:
        id:
          description: |+
            Signature/personality identifier

          title: id
          type: integer
        name:
          description: |+
            Signature name

          title: name
          type: string
        content:
          description: |+
            HTML content of the signature

          title: content
          type: string
        reply_to:
          description: |+
            Reply to email

          format: email
          title: reply_to
          type: string
        reply_to_idn:
          description: |+
            Reply to email IDN

          format: email
          title: reply_to_idn
          type: string
        reply_to_id:
          description: |+
            Reply to VerifiedEmail identifier

          title: reply_to_id
          type: integer
        full_name:
          description: |+
            From full name

          title: full_name
          type: string
        sender:
          description: |+
            From email

          format: email
          title: sender
          type: string
        sender_idn:
          description: |+
            From email IDN

          format: email
          title: sender_idn
          type: string
        sender_id:
          description: |+
            From VerifiedEmail identifier

          title: sender_id
          type: integer
        hash:
          description: |+
            Hash (deprecated)

          title: hash
          type: string
          nullable: true
        is_default:
          description: |+
            True if default signature/personality

          title: is_default
          type: boolean
      title: MailboxSignatureElement
    VerifiedEmail:
      example:
        is_removable: true
        email_idn: email_idn
        is_account: true
        id: 6
        is_verified: true
        email: email
      properties:
        id:
          description: |+
            VerifiedEmail identifier

          title: id
          type: integer
        email:
          description: |+
            Email

          format: email
          title: email
          type: string
        email_idn:
          description: |+
            EmailIDN

          format: email
          title: email_idn
          type: string
        is_account:
          description: |+
            True if is an account

          title: is_account
          type: boolean
        is_verified:
          description: |+
            True if verified

          title: is_verified
          type: boolean
        is_removable:
          description: |+
            True if is_removable

          title: is_removable
          type: boolean
      title: VerifiedEmail
    MailboxAutoReply:
      example:
        is_enabled: true
        reply_from: reply_from
        is_active: true
        is_recurrent: true
        dont_reply_to:
        - dont_reply_to
        - dont_reply_to
        has_send_original_message: true
        started_at: 2000-01-23
        valid_emails:
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
        recurrent_days:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        reply_message: reply_message
        ended_at: 2000-01-23
        reply_from_id: 0
      properties:
        is_enabled:
          description: |+
            Enabled (scheduled)

          title: is_enabled
          type: boolean
        is_active:
          description: |+
            Active (currently activated)

          title: is_active
          type: boolean
        reply_message:
          description: |+
            Reply message

          title: reply_message
          type: string
        reply_from:
          description: |+
            Reply from

          format: email
          title: reply_from
          type: string
        reply_from_id:
          description: |+
            Id of verified email configured as reply from

          title: reply_from_id
          type: integer
        is_recurrent:
          description: |+
            Is recurrent

          title: is_recurrent
          type: boolean
        recurrent_days:
          $ref: '#/components/schemas/recurrent_days'
        started_at:
          description: |+
            Start

          format: date
          title: started_at
          type: string
        ended_at:
          description: |+
            End

          format: date
          title: ended_at
          type: string
        dont_reply_to:
          items:
            format: email
            type: string
          type: array
        has_send_original_message:
          description: |+
            Send original message

          title: has_send_original_message
          type: boolean
        valid_emails:
          items:
            $ref: '#/components/schemas/VerifiedEmail'
          type: array
      title: MailboxAutoReply
    PatchAutoReply:
      description: Auto reply PATCH body parameters
      properties:
        is_enabled:
          description: Enable or disable auto reply
          type: boolean
        message:
          description: Auto reply message
          type: string
        is_recurrent:
          description: Activate responder for recurrent_days
          minLength: 1
          type: boolean
        recurrent_days:
          $ref: '#/components/schemas/PatchAutoReply_recurrent_days'
        reply_from_id:
          description: Validated sender/reply address identifier
          type: integer
        dont_reply_to:
          description: Ignored addresses
          items:
            format: email
            type: string
          type: array
        started_at:
          description: Begin date (Y-m-d H:i)<br/>This field must match the `Y-m-d`
            format.
          minLength: 1
          type: string
        ended_at:
          description: End date (Y-m-d H:i)<br/>This field must match the `Y-m-d`
            format.
          type: string
        time_zone:
          minLength: 1
          type: string
      required:
      - is_enabled
    ServiceMailResponder:
      example:
        reply_from: reply_from
        is_active: true
        is_visible: true
        is_recurrent: is_recurrent
        recurrent_days: recurrent_days
        is_model: true
        message: message
        reply_from_id: 5
        dont_reply_to: "[test@tests.ch]"
        source_model_id: 6
        name: name
        started_at: 1
        valid_emails:
        - is_removable: is_removable
          email_idn: email_idn
          is_account: is_account
          id: 2
          is_verified: is_verified
          email: email
        - is_removable: is_removable
          email_idn: email_idn
          is_account: is_account
          id: 2
          is_verified: is_verified
          email: email
        id: 0
        ended_at: 5
      properties:
        id:
          description: Unique identifier of the resource `Service Mail Responder`
          title: Unique identifier
          type: integer
        name:
          description: Name of the pack mail responder
          title: name
          type: string
        is_model:
          title: is_model
          type: boolean
        source_model_id:
          title: source_model_id
          type: integer
          nullable: true
        message:
          description: Message send by the responder
          title: message
          type: string
        is_recurrent:
          description: Days when the responder is activated
          title: is_recurrent
          type: string
        recurrent_days:
          description: Days when the responder is activated
          title: recurrent_days
          type: string
        started_at:
          description: Timestamp of the start of the responder
          format: timestamp
          title: started_at
          type: integer
          nullable: true
        ended_at:
          description: Timestamp of the end of the responder
          format: timestamp
          title: ended_at
          type: integer
          nullable: true
        is_active:
          description: is the responder actived
          title: is_active
          type: boolean
        is_visible:
          title: is_visible
          type: boolean
          nullable: true
        dont_reply_to:
          description: emails where autoreply will not be sent
          example: "[test@tests.ch]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        reply_from_id:
          description: Id of the Email that send the auto reply
          title: reply_from_id
          type: integer
          nullable: true
        reply_from:
          description: Email that send the auto reply
          title: reply_from
          type: string
        valid_emails:
          items:
            $ref: '#/components/schemas/ValidEmail'
          type: array
      required:
      - ended_at
      - id
      - is_active
      - is_model
      - is_recurrent
      - is_visible
      - message
      - name
      - recurrent_days
      - source_model_id
      - started_at
      title: Service Mail Responder
    PatchMailboxPermission:
      description: User or invitation permission PATCH body parameters
      properties:
        permissions:
          $ref: '#/components/schemas/PatchMailboxPermission_permissions'
    Useravatar:
      example:
        avatar: https://www.infomaniak.com/img/common/logo-infomaniak.svg
      properties:
        avatar:
          description: Avatar
          example: https://www.infomaniak.com/img/common/logo-infomaniak.svg
          title: avatar
          type: string
      required:
      - avatar
      title: User avatar
    partialUserapplicationpassword:
      example:
        last_used_at: 1630929640
        name: My application
        id: 1234
      properties:
        id:
          description: Unique identifier of the resource `(partial) User application
            password`
          example: 1234
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `(partial) User application password`
          example: My application
          title: name
          type: string
        last_used_at:
          example: 1630929640
          format: timestamp
          title: last_used_at
          type: integer
          nullable: true
      required:
      - id
      - last_used_at
      - name
      title: (partial) User application password
    Userapplicationpassword:
      example:
        last_used_at: 1630929640
        password: aaaabbbbccccdddd
        name: My application
        id: 1234
      properties:
        id:
          description: Unique identifier of the resource `User application password`
          example: 1234
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `User application password`
          example: My application
          title: name
          type: string
        last_used_at:
          example: 1630929640
          format: timestamp
          title: last_used_at
          type: integer
          nullable: true
        password:
          description: Only available when you store it.
          example: aaaabbbbccccdddd
          title: password
          type: string
      required:
      - id
      - last_used_at
      - name
      title: User application password
    Account:
      example:
        addresses:
        - zip: "1227"
          country:
            locations:
            - locations
            - locations
            from: 0
            to: 6
          for_invoice: true
          city: Genève
          street: Rue Eugène-Marziano 25
          created_at: 1558601584
          id: 1234
          street2: ""
          type: professional
        - zip: "1227"
          country:
            locations:
            - locations
            - locations
            from: 0
            to: 6
          for_invoice: true
          city: Genève
          street: Rue Eugène-Marziano 25
          created_at: 1558601584
          id: 1234
          street2: ""
          type: professional
        no_access: true
        timezone: Europe/Zurich
        vat_number: ""
        created_at: 1294959600
        language: language
        language_id: 1
        locale: fr_FR
        type: owner
        mailing: true
        legal_entity_type: company
        billing: true
        services_already_demo:
        - services_already_demo
        - services_already_demo
        logo: https://www.infomaniak.com/img/common/logo-infomaniak.svg
        blocked_at: 0
        id: 1234
        nb_users: 2
        fax: "+41220000000"
        beta: true
        order:
          waiting_payment: 1
          blocked_order_id:
          - blocked_order_id
          - blocked_order_id
          in_process: 0
        website: https://www.infomaniak.com
        billing_mailing: true
        tags:
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        is_blocked: true
        field1: ""
        phone: "+41790000000"
        customization_url: "{}"
        name: Secret Organization
        workspace_only: true
        field2: ""
        nb_invitations: 2
      properties:
        id:
          description: Unique identifier of the resource `Account`
          example: 1234
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Account`
          example: Secret Organization
          title: name
          type: string
        legal_entity_type:
          enum:
          - company
          - individual
          - public_body
          - restrict
          example: company
          title: legal_entity_type
          type: string
        created_at:
          description: Timestamp `Account` has been created
          example: 1294959600
          format: timestamp
          title: created_at
          type: integer
        addresses:
          items:
            $ref: '#/components/schemas/Accountaddress'
          type: array
        timezone:
          example: Europe/Zurich
          title: timezone
          type: string
        website:
          example: https://www.infomaniak.com
          title: website
          type: string
        phone:
          example: "+41790000000"
          title: phone
          type: string
        fax:
          example: "+41220000000"
          title: fax
          type: string
        language:
          title: language
          type: string
        locale:
          description: Represents a language identifier and a region identifier
          example: fr_FR
          title: locale
          type: string
        language_id:
          description: Unique identifier of the `language` that is related to the
            resource `Account`
          example: 1
          title: language_id
          type: integer
        logo:
          example: https://www.infomaniak.com/img/common/logo-infomaniak.svg
          title: logo
          type: string
        order:
          $ref: '#/components/schemas/order'
        beta:
          example: true
          title: beta
          type: boolean
        type:
          example: owner
          title: type
          type: string
        billing:
          example: true
          title: billing
          type: boolean
        mailing:
          example: true
          title: mailing
          type: boolean
        billing_mailing:
          example: true
          title: billing_mailing
          type: boolean
        workspace_only:
          example: true
          title: workspace_only
          type: boolean
        no_access:
          example: true
          title: no_access
          type: boolean
        is_blocked:
          example: true
          title: is_blocked
          type: boolean
        blocked_at:
          example: 0
          format: timestamp
          title: blocked_at
          type: integer
        vat_number:
          example: ""
          title: vat_number
          type: string
        field1:
          example: ""
          title: field1
          type: string
        field2:
          example: ""
          title: field2
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        services_already_demo:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        customization_url:
          title: customization_url
          type: object
        nb_invitations:
          example: 2
          title: nb_invitations
          type: integer
        nb_users:
          example: 2
          title: nb_users
          type: integer
      required:
      - beta
      - created_at
      - id
      - language_id
      - legal_entity_type
      - locale
      - name
      title: Account
    Service:
      example:
        name: hosting
        count: 4
        id: 1
      properties:
        id:
          description: Unique identifier of the resource `Service`
          example: 1
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Service`
          example: hosting
          title: name
          type: string
        count:
          example: 4
          title: count
          type: integer
      required:
      - count
      - id
      - name
      title: Service
    AsyncTask:
      example:
        updated_at: 6
        finished_at: 5
        executed_at: 1
        response: "{}"
        created_at: 0
        error: "{}"
        uuid: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
        status: running
      properties:
        uuid:
          description: Universally unique identifier of the resource `Async Task`
          example: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
          format: uuid
          title: uuid
          type: string
        status:
          description: Status of the resource `Async Task`
          enum:
          - executed
          - failed
          - running
          - spooled
          example: running
          title: status
          type: string
        created_at:
          description: Timestamp `Async Task` has been created
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Async Task` has been updated
          format: timestamp
          title: updated_at
          type: integer
        executed_at:
          description: Timestamp `Async Task` has been executed
          format: timestamp
          title: executed_at
          type: integer
        finished_at:
          description: Timestamp `Async Task` is finished
          format: timestamp
          title: finished_at
          type: integer
        response:
          description: Asynchronous response result
          title: response
          type: object
        error:
          description: Asynchronous error result
          title: error
          type: object
      required:
      - created_at
      - executed_at
      - finished_at
      - response
      - status
      - updated_at
      - uuid
      title: Async Task
    Country:
      example:
        is_enabled: true
        name: SWITZERLAND
        short_name: CH
        id: 203
      properties:
        id:
          description: Unique identifier of the resource `Country`
          example: 203
          format: int32
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Country`
          example: SWITZERLAND
          title: name
          type: string
        short_name:
          description: Short name of the resource `Country`
          example: CH
          title: short_name
          type: string
        is_enabled:
          description: Is the resource `Country` enabled?
          example: true
          title: is_enabled
          type: boolean
      required:
      - id
      - is_enabled
      - name
      - short_name
      title: Country
    Language:
      example:
        name: English
        short_locale: en
        short_name: E
        id: 2
        locale: en_GB
      properties:
        id:
          description: Unique identifier of the resource `Language`
          example: 2
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Language`
          example: English
          title: name
          type: string
        short_name:
          description: Short name of the resource `Language`
          example: E
          title: short_name
          type: string
        locale:
          description: Represents a language identifier and a region identifier
          example: en_GB
          title: locale
          type: string
        short_locale:
          description: Represents a language identifier
          example: en
          title: short_locale
          type: string
      required:
      - id
      - locale
      - name
      - short_locale
      - short_name
      title: Language
    Product:
      example:
        is_locked: true
        created_at: 5
        description: description
        admin:
          user_id: 4
          display_name: display_name
          email: email
        expired_at: 5
        has_maintenance: true
        has_operation_in_progress: true
        internal_name: internal_name
        parent_service_name: parent_service_name
        service_id: 1
        rights:
          statistic: true
          sale: true
          technical: true
          check: true
        is_zero_price: true
        id: 0
        is_managed_by_partner: true
        unique_id: 9
        service_name: service_name
        deleted_at: 2
        version: 7
        users:
        - user_id: 4
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
        - user_id: 4
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
        tags:
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        - color: 4
          product_count: 2
          name: My tag name
          id: 1234
        parent_service_id: 2
        account_id: 6
        parent_id: 3
        is_free: true
        customer_name: customer_name
        bill_reference: bill_reference
        is_trial: true
        status:
          activated_at: 2
          activated_by:
          - activated_by
          - activated_by
          locked:
            infomaniak: true
            superuser: true
          maintenance:
            technical: true
            infomaniak: true
            superuser: true
      properties:
        id:
          description: Unique identifier of the resource `Product`
          title: Unique identifier
          type: integer
        account_id:
          description: Unique identifier of the `account` that is related to the resource
            `Product`
          title: account_id
          type: integer
        service_id:
          description: Unique identifier of the `service` that is related to the resource
            `Product`
          title: service_id
          type: integer
        service_name:
          description: Name of the service
          title: service_name
          type: string
        customer_name:
          description: Customer name of the resource `Product`
          title: customer_name
          type: string
        internal_name:
          title: internal_name
          type: string
          nullable: true
        created_at:
          description: Timestamp `Product` has been created
          format: timestamp
          title: created_at
          type: integer
        expired_at:
          description: Timestamp `Product` has expired
          format: timestamp
          title: expired_at
          type: integer
          nullable: true
        deleted_at:
          description: Timestamp `Product` has been deleted
          format: timestamp
          title: deleted_at
          type: integer
        version:
          title: version
          type: integer
        has_maintenance:
          description: Does the resource `Product` have a maintenance mode enabled?
          title: has_maintenance
          type: boolean
        is_locked:
          description: Is the resource `Product` locked?
          title: is_locked
          type: boolean
        has_operation_in_progress:
          description: Does the resource `Product` have an operation in progress ?
          title: has_operation_in_progress
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        unique_id:
          description: Unique identifier of the resource `Product`
          title: unique_id
          type: integer
        description:
          description: Description of the resource `Product`
          title: description
          type: string
        bill_reference:
          title: bill_reference
          type: string
        is_free:
          description: Does the resource `Product` have a free price status?
          title: is_free
          type: boolean
        is_zero_price:
          description: Does the resource `Product` have a zero price status?
          title: is_zero_price
          type: boolean
        is_trial:
          description: Does the resource `Product` have a trial status?
          title: is_trial
          type: boolean
        rights:
          $ref: '#/components/schemas/Right'
        parent_id:
          title: parent_id
          type: integer
        parent_service_id:
          title: parent_service_id
          type: integer
        parent_service_name:
          title: parent_service_name
          type: string
        status:
          $ref: '#/components/schemas/Productstatus'
        users:
          items:
            $ref: '#/components/schemas/ProductUser'
          type: array
        admin:
          $ref: '#/components/schemas/ProductAdminUser'
        is_managed_by_partner:
          title: is_managed_by_partner
          type: boolean
      required:
      - account_id
      - created_at
      - customer_name
      - expired_at
      - has_maintenance
      - has_operation_in_progress
      - id
      - internal_name
      - is_free
      - is_locked
      - is_trial
      - is_zero_price
      - rights
      - service_id
      - service_name
      - tags
      - unique_id
      - version
      title: Product
    Timezone:
      example:
        name: Europe/Zurich
        id: 414
        gmt: 01:00
      properties:
        id:
          description: Unique identifier of the resource `Timezone`
          example: 414
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Timezone`
          example: Europe/Zurich
          title: name
          type: string
        gmt:
          description: Greenwich Mean Time (GMT)
          example: 01:00
          title: gmt
          type: string
      required:
      - gmt
      - id
      - name
      title: Timezone
    Event:
      example:
        comments: comments
        description:
          translations:
          - language: en
            title: Network maintenance
            body: This maintenance is intended to increase the capacity of our network
              infrastructure in order to accompany the growth of our activities.
          - language: en
            title: Network maintenance
            body: This maintenance is intended to increase the capacity of our network
              infrastructure in order to accompany the growth of our activities.
          description: This maintenance is intended to increase the capacity of our
            network infrastructure in order to accompany the growth of our activities.
          title: Network maintenance
        started_at: 0
        id: 414
        services:
        - name: hosting
          id: 1
          type: null
        - name: hosting
          id: 1
          type: null
        type: enhancement
        url: ed4px6RxMG
        ended_at: 6
        status: terminated
      properties:
        id:
          description: Unique identifier of the resource `Event`
          example: 414
          title: Unique identifier
          type: integer
        url:
          example: ed4px6RxMG
          title: url
          type: string
        type:
          example: enhancement
          title: type
          type: string
        status:
          description: Status of the resource `Event`
          example: terminated
          title: status
          type: string
        description:
          $ref: '#/components/schemas/EventDescription'
        comments:
          title: comments
          type: string
        services:
          items:
            $ref: '#/components/schemas/EventTag'
          type: array
        started_at:
          description: Timestamp `Event` has been started
          format: timestamp
          title: started_at
          type: integer
        ended_at:
          description: Timestamp `Event` has ended
          format: timestamp
          title: ended_at
          type: integer
          nullable: true
      required:
      - comments
      - description
      - ended_at
      - id
      - services
      - started_at
      - status
      - type
      - url
      title: Event
    UserProfile:
      example:
        emails: ""
        sessions:
        - browser: browser
          ip: ip
          location: location
          last_accessed_at: 6
          device: device
          user_agent: user_agent
        - browser: browser
          ip: ip
          location: location
          last_accessed_at: 6
          device: device
          user_agent: user_agent
        preferences:
          country:
            is_enabled: true
            name: SWITZERLAND
            short_name: CH
            id: 203
          security:
            remaining_rescue_code: 1
            last_login_at: 5
            yubikey: true
            auth_devices:
            - user_ip: user_ip
              updated_at: 3
              name: name
              last_connexion: 7
              created_at: 9
              id: 2
              device: device
              deleted_at: 2
              user_agent: user_agent
            - user_ip: user_ip
              updated_at: 3
              name: name
              last_connexion: 7
              created_at: 9
              id: 2
              device: device
              deleted_at: 2
              user_agent: user_agent
            sms: true
            otp: true
            sms_phone: sms_phone
            infomaniak_application: true
            date_last_changed_password: 5
            double_auth: true
            double_auth_method: double_auth_method
          timezone:
            name: Europe/Zurich
            id: 414
            gmt: 01:00
          connection:
            unsuccessful_rate_limit: 4
            successful_notification: true
            unsuccessful_notification: true
            unsuccessful_limit: true
          language:
            name: English
            short_locale: en
            short_name: E
            id: 2
            locale: en_GB
          account: account
        last_name: last_name
        phones:
        - reminder: "true"
          phone: "+41123456789"
          created_at: 1632896634
          checked: true
          id: 2
          type: phone
        - reminder: "true"
          phone: "+41123456789"
          created_at: 1632896634
          checked: true
          id: 2
          type: phone
        id: 0
        avatar: avatar
        display_name: display_name
        type: type
        login: login
        first_name: first_name
        email: email
      properties:
        id:
          description: Unique identifier of the resource `User Profile`
          title: Unique identifier
          type: integer
        display_name:
          description: Display name
          title: display_name
          type: string
        first_name:
          description: First name
          title: first_name
          type: string
        last_name:
          description: Last name
          title: last_name
          type: string
        email:
          description: Email
          title: email
          type: string
        avatar:
          description: Avatar
          title: avatar
          type: string
        type:
          title: type
          type: string
        login:
          description: Login
          title: login
          type: string
        sessions:
          items:
            $ref: '#/components/schemas/Usersession'
          type: array
        preferences:
          $ref: '#/components/schemas/preferences'
        phones:
          items:
            $ref: '#/components/schemas/Userphone'
          type: array
        emails:
          $ref: '#/components/schemas/emails'
      required:
      - avatar
      - display_name
      - email
      - first_name
      - id
      - last_name
      - login
      title: User Profile
    Usersupportticket:
      example:
        subject: My ticket subject
        created: 1606205084
        closed: 1606221451
        id: 1234
        updated: 1606205084
        mask: INK-XXX-XXXXX-XXX
        status: closed
      properties:
        id:
          description: Unique identifier of the resource `User support ticket`
          example: 1234
          title: Unique identifier
          type: integer
        subject:
          example: My ticket subject
          title: subject
          type: string
        mask:
          example: INK-XXX-XXXXX-XXX
          title: mask
          type: string
        status:
          description: Status of the resource `User support ticket`
          enum:
          - closed
          - deleted
          - open
          - wait
          example: closed
          title: status
          type: string
        created:
          example: 1606205084
          format: timestamp
          title: created
          type: integer
        updated:
          example: 1606205084
          format: timestamp
          title: updated
          type: integer
        closed:
          example: 1606221451
          format: timestamp
          title: closed
          type: integer
      required:
      - closed
      - created
      - id
      - mask
      - status
      - subject
      - updated
      title: User support ticket
    Useractivitylogs:
      example:
        product: My product name
        account_id: 1234
        service_id: 23
        product_id: 1234
        ip: 127.0.0.1
        description: description
        action: Edit
        created_at: 1628144523
        id: id
      properties:
        id:
          description: Unique identifier of the resource `User activity logs`
          title: Unique identifier
          type: string
        description:
          description: Description of the resource `User activity logs`
          title: description
          type: string
        action:
          example: Edit
          title: action
          type: string
          nullable: true
        account_id:
          description: Unique identifier of the `account` that is related to the resource
            `User activity logs`
          example: 1234
          title: account_id
          type: integer
          nullable: true
        service_id:
          description: Unique identifier of the `service` that is related to the resource
            `User activity logs`
          example: 23
          title: service_id
          type: integer
          nullable: true
        product_id:
          description: Unique identifier of the `product` that is related to the resource
            `User activity logs`
          example: 1234
          title: product_id
          type: integer
          nullable: true
        product:
          example: My product name
          title: product
          type: string
          nullable: true
        ip:
          example: 127.0.0.1
          title: ip
          type: string
          nullable: true
        created_at:
          description: Timestamp `User activity logs` has been created
          example: 1628144523
          format: timestamp
          title: created_at
          type: integer
      required:
      - account_id
      - action
      - created_at
      - description
      - id
      - ip
      - product
      - product_id
      - service_id
      title: User activity logs
    Useremail:
      example:
        reminder: true
        created_at: 1632815150
        checked: true
        id: 123456
        type: other
        email: john.doe@infomaniak.com
      properties:
        id:
          description: Unique identifier of the resource `User email`
          example: 123456
          title: Unique identifier
          type: integer
        email:
          description: Email
          example: john.doe@infomaniak.com
          title: email
          type: string
        created_at:
          description: Timestamp `User email` has been created
          example: 1632815150
          format: timestamp
          title: created_at
          type: integer
        reminder:
          example: true
          title: reminder
          type: boolean
        checked:
          example: true
          title: checked
          type: boolean
        type:
          enum:
          - other
          - personal
          - professional
          example: other
          title: type
          type: string
      required:
      - checked
      - created_at
      - email
      - id
      - reminder
      - type
      title: User email
    Userphone:
      example:
        reminder: "true"
        phone: "+41123456789"
        created_at: 1632896634
        checked: true
        id: 2
        type: phone
      properties:
        id:
          description: Unique identifier of the resource `User phone`
          example: 2
          title: Unique identifier
          type: integer
        phone:
          example: "+41123456789"
          title: phone
          type: string
        created_at:
          description: Timestamp `User phone` has been created
          example: 1632896634
          format: timestamp
          title: created_at
          type: integer
        reminder:
          example: "true"
          title: reminder
          type: string
        checked:
          example: true
          title: checked
          type: boolean
        type:
          example: phone
          title: type
          type: string
      required:
      - checked
      - created_at
      - id
      - phone
      - reminder
      - type
      title: User phone
    RepeatablePlannedEvent:
      example:
        timezone: timezone
        repeat_until: 7
        planned_event_id: 0
        start_at: 5
        type: all
        deleted_at: 1
        authorize_country: true
        stop_live: true
        storage_machine_id: 6
        dvr_window: 3
        stream_id: stream_id
        weekdays_only: true
        record: true
        name: name
        weekends_only: true
        repeat_interval: 2
        record_name: record_name
        fragment_duration: 9
        access_country: access_country
        stop_at: 5
      properties:
        planned_event_id:
          title: planned_event_id
          type: integer
        stream_id:
          description: Unique identifier of the `stream` that is related to the resource
            `RepeatablePlannedEvent`
          title: stream_id
          type: string
        storage_machine_id:
          description: Unique identifier of the `channel` that is related to the resource
            `RepeatablePlannedEvent`
          title: storage_machine_id
          type: integer
        deleted_at:
          description: Timestamp `RepeatablePlannedEvent` has been deleted
          format: datetime
          title: deleted_at
          type: integer
        name:
          description: Name of the resource `RepeatablePlannedEvent`
          title: name
          type: string
        start_at:
          format: datetime
          title: start_at
          type: integer
        stop_at:
          format: datetime
          title: stop_at
          type: integer
        timezone:
          title: timezone
          type: string
        repeat_interval:
          title: repeat_interval
          type: integer
        repeat_until:
          format: datetime
          title: repeat_until
          type: integer
        weekends_only:
          title: weekends_only
          type: boolean
        weekdays_only:
          title: weekdays_only
          type: boolean
        authorize_country:
          title: authorize_country
          type: boolean
        stop_live:
          title: stop_live
          type: boolean
        access_country:
          title: access_country
          type: string
        record:
          title: record
          type: boolean
        record_name:
          title: record_name
          type: string
        fragment_duration:
          title: fragment_duration
          type: integer
        dvr_window:
          title: dvr_window
          type: integer
        type:
          description: "only=>Change only this event, all=>Change all event, from=>Change\
            \ this event and recurrences"
          enum:
          - all
          - from
          - only
          title: type
          type: string
      required:
      - access_country
      - authorize_country
      - deleted_at
      - dvr_window
      - fragment_duration
      - name
      - planned_event_id
      - record
      - record_name
      - repeat_interval
      - repeat_until
      - start_at
      - stop_at
      - stop_live
      - storage_machine_id
      - stream_id
      - timezone
      - type
      - weekdays_only
      - weekends_only
      title: RepeatablePlannedEvent
    RecordingConfig:
      example:
        recording_config_id: 0
        auto_record: true
        storage_machines:
        - auto_record_name: auto_record_name
          use_path: true
          pass: pass
          vod_id: 1980
          login: login
          deleted_at: 2
          valid: true
          recording_config_id: 5
          path: path
          storage_machine_id: 6
          protocol: protocol
          default: true
          port: 1
          auto_fragment_duration: 5
          name: name
          host: host
          url_http: url_http
          full: true
        - auto_record_name: auto_record_name
          use_path: true
          pass: pass
          vod_id: 1980
          login: login
          deleted_at: 2
          valid: true
          recording_config_id: 5
          path: path
          storage_machine_id: 6
          protocol: protocol
          default: true
          port: 1
          auto_fragment_duration: 5
          name: name
          host: host
          url_http: url_http
          full: true
      properties:
        recording_config_id:
          description: Unique identifier of the `recording config` that is related
            to the resource `RecordingConfig`
          title: recording_config_id
          type: integer
        auto_record:
          title: auto_record
          type: boolean
        storage_machines:
          items:
            $ref: '#/components/schemas/StorageMachine'
          type: array
      required:
      - auto_record
      - recording_config_id
      title: RecordingConfig
    StorageMachine:
      example:
        auto_record_name: auto_record_name
        use_path: true
        pass: pass
        vod_id: 1980
        login: login
        deleted_at: 2
        valid: true
        recording_config_id: 5
        path: path
        storage_machine_id: 6
        protocol: protocol
        default: true
        port: 1
        auto_fragment_duration: 5
        name: name
        host: host
        url_http: url_http
        full: true
      properties:
        storage_machine_id:
          description: Unique identifier of the `channel` that is related to the resource
            `StorageMachine`
          title: storage_machine_id
          type: integer
        vod_id:
          description: Unique identifier of the `vodProduct` that is related to the
            resource `StorageMachine`
          example: 1980
          title: vod_id
          type: integer
        name:
          description: Name of the resource `StorageMachine`
          title: name
          type: string
        protocol:
          title: protocol
          type: string
        host:
          title: host
          type: string
        port:
          title: port
          type: integer
        path:
          title: path
          type: string
        login:
          description: Login
          title: login
          type: string
        pass:
          title: pass
          type: string
        url_http:
          title: url_http
          type: string
        full:
          title: full
          type: boolean
        valid:
          title: valid
          type: boolean
        use_path:
          title: use_path
          type: boolean
        recording_config_id:
          description: Unique identifier of the `recording config` that is related
            to the resource `StorageMachine`
          title: recording_config_id
          type: integer
        default:
          title: default
          type: boolean
        auto_fragment_duration:
          title: auto_fragment_duration
          type: integer
        deleted_at:
          description: Timestamp `StorageMachine` has been deleted
          format: datetime
          title: deleted_at
          type: integer
        auto_record_name:
          title: auto_record_name
          type: string
      required:
      - auto_fragment_duration
      - auto_record_name
      - default
      - deleted_at
      - full
      - host
      - login
      - name
      - pass
      - path
      - port
      - protocol
      - recording_config_id
      - storage_machine_id
      - url_http
      - use_path
      - valid
      - vod_id
      title: StorageMachine
    TranscodingOverlay:
      example:
        z_index: 6
        size_percentage: 9
        opacity_percentage: 5
        encoder_preset: encoder_preset
        image_url: image_url
        horizontal_offset: 2
        description: description
        was_enabled: true
        align: align
        follow_update: true
        enabled: true
        overlay_id: 0
        name: name
        width: 1
        image_base_64: image_base_64
        height: 5
        vertical_offset: 7
      properties:
        overlay_id:
          title: overlay_id
          type: integer
        name:
          description: Name of the resource `TranscodingOverlay`
          title: name
          type: string
        enabled:
          title: enabled
          type: boolean
        follow_update:
          title: follow_update
          type: boolean
        description:
          description: Description of the resource `TranscodingOverlay`
          title: description
          type: string
        z_index:
          title: z_index
          type: integer
        align:
          title: align
          type: string
        width:
          title: width
          type: integer
        height:
          title: height
          type: integer
        opacity_percentage:
          title: opacity_percentage
          type: integer
        horizontal_offset:
          title: horizontal_offset
          type: integer
        vertical_offset:
          title: vertical_offset
          type: integer
        size_percentage:
          title: size_percentage
          type: integer
        was_enabled:
          title: was_enabled
          type: boolean
        encoder_preset:
          title: encoder_preset
          type: string
        image_url:
          title: image_url
          type: string
        image_base_64:
          title: image_base_64
          type: string
      required:
      - align
      - description
      - enabled
      - follow_update
      - height
      - horizontal_offset
      - image_url
      - name
      - opacity_percentage
      - overlay_id
      - size_percentage
      - vertical_offset
      - was_enabled
      - width
      - z_index
      title: TranscodingOverlay
    TimeshiftConfig:
      example:
        recorder: recorder
        record_window_duration: 6
        dvr_option_id: 0
        enabled: true
      properties:
        dvr_option_id:
          title: dvr_option_id
          type: integer
        record_window_duration:
          description: "Define how far your viewers can go back (max.: 240 minutes)"
          title: record_window_duration
          type: integer
        enabled:
          description: Activating the Timeshift
          title: enabled
          type: boolean
        recorder:
          title: recorder
          type: string
      required:
      - dvr_option_id
      - enabled
      - record_window_duration
      title: TimeshiftConfig
    Consumptionressource:
      example:
        from: 7
        to: 1
        value: 4.145608029883936
      properties:
        value:
          description: the current monthly consumption (Byte)
          title: value
          type: number
        from:
          description: Timestamp `Consumption ressource` from
          format: datetime
          title: from
          type: integer
        to:
          description: Timestamp `Consumption ressource` to
          format: datetime
          title: to
          type: integer
      required:
      - from
      - to
      - value
      title: Consumption ressource
    Viewersressource:
      example:
        from: 6
        to: 1
        value: 0.8008281904610115
      properties:
        value:
          description: the current monthly viewers
          title: value
          type: number
        from:
          description: Timestamp `Viewers ressource` from
          format: datetime
          title: from
          type: integer
        to:
          description: Timestamp `Viewers ressource` to
          format: datetime
          title: to
          type: integer
      required:
      - from
      - to
      - value
      title: Viewers ressource
    Histogramviewersressource:
      example:
        histogram:
        - histogram
        - histogram
      properties:
        histogram:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - histogram
      title: Histogram viewers ressource
    Geolocationressource:
      example:
        locations:
        - locations
        - locations
        from: 0
        to: 6
      properties:
        locations:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        from:
          description: Timestamp `Geolocation ressource` from
          format: datetime
          title: from
          type: integer
        to:
          description: Timestamp `Geolocation ressource` to
          format: datetime
          title: to
          type: integer
      required:
      - from
      - locations
      - to
      title: Geolocation ressource
    Clusterressource:
      example:
        locations:
        - locations
        - locations
        resolutions:
        - resolutions
        - resolutions
      properties:
        locations:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        resolutions:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - locations
      - resolutions
      title: Cluster ressource
    Resolutionsresource:
      example:
        total: 0
        resolutions:
        - resolutions
        - resolutions
        from: 6
        to: 1
      properties:
        total:
          title: total
          type: integer
        resolutions:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        from:
          description: Timestamp `Resolutions resource` from
          format: datetime
          title: from
          type: integer
        to:
          description: Timestamp `Resolutions resource` to
          format: datetime
          title: to
          type: integer
      required:
      - from
      - resolutions
      - to
      - total
      title: Resolutions resource
    Resolutionsandhistogramressource:
      example:
        histogram:
        - histogram
        - histogram
        resolutions:
        - resolutions
        - resolutions
        from: 0
        to: 6
      properties:
        histogram:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        resolutions:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        from:
          description: Timestamp `Resolutions and histogram ressource` from
          format: datetime
          title: from
          type: integer
        to:
          description: Timestamp `Resolutions and histogram ressource` to
          format: datetime
          title: to
          type: integer
      required:
      - from
      - histogram
      - resolutions
      - to
      title: Resolutions and histogram ressource
    Integrationsressource:
      example:
        dvr_available: true
        stream_id: maniak_tv
        constant_url: true
        dvr_enabled: true
        type: hls
        url: https://maniak_tv.vedge.infomaniak.com/livecast/ik:maniak_tv/manifest.f4m
      properties:
        type:
          example: hls
          title: type
          type: string
        url:
          example: https://maniak_tv.vedge.infomaniak.com/livecast/ik:maniak_tv/manifest.f4m
          title: url
          type: string
        constant_url:
          title: constant_url
          type: boolean
        stream_id:
          description: Unique identifier of the `stream` that is related to the resource
            `Integrations ressource`
          example: maniak_tv
          title: stream_id
          type: string
        dvr_available:
          title: dvr_available
          type: boolean
        dvr_enabled:
          title: dvr_enabled
          type: boolean
      required:
      - constant_url
      - dvr_available
      - dvr_enabled
      - stream_id
      - type
      - url
      title: Integrations ressource
    Embedressource:
      example:
        embed: <iframe style='border:0;' allowfullscreen width='1280' height='720'
          src='https://player.infomaniak.com?channel=69069&player=4242'></iframe>
      properties:
        embed:
          example: <iframe style='border:0;' allowfullscreen width='1280' height='720'
            src='https://player.infomaniak.com?channel=69069&player=4242'></iframe>
          title: embed
          type: string
      required:
      - embed
      title: Embed ressource
    Urlressource:
      example:
        src: https://player.infomaniak.com?channel=69069&player=4242
      properties:
        src:
          example: https://player.infomaniak.com?channel=69069&player=4242
          title: src
          type: string
      required:
      - src
      title: Url ressource
    Options:
      example:
        option_active: true
        name: name
        available: true
        description: description
        invoiceable_option:
          next_deadline_at: 2
          updated_at: 5
          end_echeance_at: 7
          option_active: true
          ordered_at: 5
          option_id: 1
          free: true
          channel_id: 69001
          demo: true
          deleted_at: 3
          terminated_at: 9
        included: true
        pricing:
          periodicity:
            unite: 0
            id: 1
            value: MONTH
          currency:
            currency: currency
            currency_pretty: currency_pretty
            id: "1"
          id: 1
          amount_excl_tax: 6.027456183070403
      properties:
        name:
          description: Name of the resource `Options`
          title: name
          type: string
        available:
          title: available
          type: boolean
        description:
          description: Description of the resource `Options`
          title: description
          type: string
        included:
          title: included
          type: boolean
        option_active:
          title: option_active
          type: boolean
        pricing:
          $ref: '#/components/schemas/PricingOption'
        invoiceable_option:
          $ref: '#/components/schemas/ChannelInvoiceableOption'
      required:
      - available
      - description
      - included
      - invoiceable_option
      - name
      - option_active
      - pricing
      title: Options
    SimulcastConfig:
      example:
        simulcast_platform_id: simulcast_platform_id
        application_instance: application_instance
        scheme: scheme
        dest_stream: dest_stream
        previously_enabled_by_event: true
        was_enabled: true
        deleted_at: 1
        enabled: true
        facebook_config: facebook_config
        platform: platform
        force_disabled: true
        simulcast_config_id: 0
        application_name: application_name
        port: 6
        stream_id: stream_id
        host: host
        name: name
      properties:
        simulcast_config_id:
          title: simulcast_config_id
          type: integer
        simulcast_platform_id:
          title: simulcast_platform_id
          type: string
        host:
          title: host
          type: string
        port:
          title: port
          type: integer
        application_name:
          title: application_name
          type: string
        application_instance:
          title: application_instance
          type: string
        dest_stream:
          title: dest_stream
          type: string
        enabled:
          title: enabled
          type: boolean
        stream_id:
          description: Unique identifier of the `stream` that is related to the resource
            `SimulcastConfig`
          title: stream_id
          type: string
        name:
          description: Name of the resource `SimulcastConfig`
          title: name
          type: string
        was_enabled:
          title: was_enabled
          type: boolean
        deleted_at:
          description: Timestamp `SimulcastConfig` has been deleted
          format: datetime
          title: deleted_at
          type: integer
        previously_enabled_by_event:
          title: previously_enabled_by_event
          type: boolean
        force_disabled:
          title: force_disabled
          type: boolean
        scheme:
          title: scheme
          type: string
        facebook_config:
          title: facebook_config
          type: string
        platform:
          title: platform
          type: string
      required:
      - application_instance
      - application_name
      - deleted_at
      - dest_stream
      - enabled
      - facebook_config
      - force_disabled
      - host
      - name
      - platform
      - port
      - previously_enabled_by_event
      - scheme
      - simulcast_config_id
      - simulcast_platform_id
      - stream_id
      - was_enabled
      title: SimulcastConfig
    Countriesressource:
      required:
      - "0"
      title: Countries ressource
      type: object
    Timezonesressource:
      required:
      - "0"
      title: Timezones ressource
      type: object
    CalendarEventAttendees:
      example:
        address: myemail@ik.me
        organizer: true
        name: name
        state: NEEDS-ACTION
      properties:
        address:
          example: myemail@ik.me
          title: Email address
          type: string
        organizer:
          title: Attendee is organizer or not
          type: boolean
        state:
          enum:
          - NEEDS-ACTION
          - ACCEPTED
          - DECLINED
          - TENTATIVE
          - DELEGATED
          title: State of the attendee
          type: string
        name:
          maxLength: 100
          title: Name
          type: string
      required:
      - address
      - state
      title: Event attendee
    ConferenceOptions:
      example:
        enable_moderator_video: true
        password: password
        password_enabled: true
        subject: subject
        drive_id: 6
        lobby_enabled: true
        e2ee_enabled: true
        start_audio_muted: true
        start_audio_only: true
        enable_recording: true
      properties:
        subject:
          title: Subject
          type: string
        start_audio_muted:
          title: Start with audio muted
          type: boolean
        enable_recording:
          title: Enable auto recording
          type: boolean
        drive_id:
          description: Required if enable_recording is true
          title: The unique identifier (ID) of the kDrive
          type: integer
        enable_moderator_video:
          title: Enable video for moderator
          type: boolean
        start_audio_only:
          title: Start with audio only
          type: boolean
        lobby_enabled:
          title: Enable lobby
          type: boolean
        password_enabled:
          title: Enable password
          type: boolean
        password:
          description: Required if password_enabled is true (never displayed)
          title: Password
          type: string
        e2ee_enabled:
          title: Enable end to end encryption
          type: boolean
      required:
      - e2ee_enabled
      - enable_moderator_video
      - enable_recording
      - lobby_enabled
      - password_enabled
      - start_audio_muted
      - start_audio_only
      - subject
      title: Room settings
    ConferenceOptionsReturn:
      example:
        enable_moderator_video: true
        password_enabled: true
        subject: subject
        drive_id: 5
        lobby_enabled: true
        e2ee_enabled: true
        start_audio_muted: true
        start_audio_only: true
        enable_recording: true
      properties:
        subject:
          title: Subject
          type: string
        start_audio_muted:
          title: Start with audio muted
          type: boolean
        enable_recording:
          title: Enable auto recording
          type: boolean
        drive_id:
          description: Required if enable_recording is true
          title: The unique identifier (ID) of the kDrive
          type: integer
        enable_moderator_video:
          title: Enable video for moderator
          type: boolean
        start_audio_only:
          title: Start with audio only
          type: boolean
        lobby_enabled:
          title: Enable lobby
          type: boolean
        password_enabled:
          title: Enable password
          type: boolean
        e2ee_enabled:
          title: Enable end to end encryption
          type: boolean
      required:
      - e2ee_enabled
      - enable_moderator_video
      - enable_recording
      - lobby_enabled
      - password_enabled
      - start_audio_muted
      - start_audio_only
      - subject
      title: Room settings
    Liveressource:
      example:
        server_name: server_name
        total_connections: 2
        application_instance: application_instance
        bytes_out: 7
        bytes_in: 2
        bytes_out_rate: 3
        bytes_in_rate: 9
      properties:
        server_name:
          title: server_name
          type: string
        application_instance:
          title: application_instance
          type: string
        bytes_in:
          title: bytes_in
          type: integer
        bytes_out:
          title: bytes_out
          type: integer
        bytes_in_rate:
          title: bytes_in_rate
          type: integer
        bytes_out_rate:
          title: bytes_out_rate
          type: integer
        total_connections:
          title: total_connections
          type: integer
      required:
      - application_instance
      - bytes_in
      - bytes_in_rate
      - bytes_out
      - bytes_out_rate
      - server_name
      - total_connections
      title: Live ressource
    stream:
      example:
        keyframe_rate: 9
        instant_connection: 6
        pass: pass
        channel:
          maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
        created_at: 7
        transcoding_option_id: 1
        audio_bitrate: 1
        language: language
        published: true
        interrupted: true
        audio_codec: audio_codec
        resolution: 5
        frame_rate: frame_rate
        original_stream_id: original_stream_id
        url: url
        interrupted_at: 1
        restrictions_id: 4
        recording_config_id: 9
        rendered: true
        stream_id: stream_id
        video_bitrate: 6
        username: username
      properties:
        stream_id:
          description: Unique identifier of the `stream` that is related to the resource
            `stream`
          title: stream_id
          type: string
        original_stream_id:
          title: original_stream_id
          type: string
        rendered:
          title: rendered
          type: boolean
        transcoding_option_id:
          description: Unique identifier of the `Option transcoding` that is related
            to the resource `stream`
          title: transcoding_option_id
          type: integer
        url:
          title: url
          type: string
        audio_bitrate:
          title: audio_bitrate
          type: integer
        video_bitrate:
          title: video_bitrate
          type: integer
        language:
          title: language
          type: string
        created_at:
          description: Timestamp `stream` has been created
          format: datetime
          title: created_at
          type: integer
        interrupted_at:
          description: Timestamp `stream` has been interrupted
          format: datetime
          title: interrupted_at
          type: integer
        restrictions_id:
          description: Unique identifier of the `restriction` that is related to the
            resource `stream`
          title: restrictions_id
          type: integer
        published:
          title: published
          type: boolean
        resolution:
          title: resolution
          type: integer
        recording_config_id:
          description: Unique identifier of the `recording config` that is related
            to the resource `stream`
          title: recording_config_id
          type: integer
        username:
          title: username
          type: string
        pass:
          title: pass
          type: string
        interrupted:
          title: interrupted
          type: boolean
        audio_codec:
          title: audio_codec
          type: string
        frame_rate:
          title: frame_rate
          type: string
        keyframe_rate:
          title: keyframe_rate
          type: integer
        instant_connection:
          title: instant_connection
          type: integer
        channel:
          $ref: '#/components/schemas/Channel'
      required:
      - audio_bitrate
      - audio_codec
      - created_at
      - frame_rate
      - instant_connection
      - interrupted
      - interrupted_at
      - keyframe_rate
      - language
      - original_stream_id
      - pass
      - published
      - recording_config_id
      - rendered
      - resolution
      - restrictions_id
      - stream_id
      - transcoding_option_id
      - url
      - username
      - video_bitrate
      title: stream
    ViewersRestrictions:
      example:
        restrictions_id: 1
        exception_ip: exception_ip
        forbidden_ip: forbidden_ip
        allow_domain: allow_domain
        player_token: player_token
        authorize_country: true
        access_country: access_country
        shared_key: shared_key
      properties:
        restrictions_id:
          description: Unique identifier of the `restriction` that is related to the
            resource `ViewersRestrictions`
          title: restrictions_id
          type: integer
        access_country:
          title: access_country
          type: string
        allow_domain:
          title: allow_domain
          type: string
        exception_ip:
          title: exception_ip
          type: string
        forbidden_ip:
          title: forbidden_ip
          type: string
        shared_key:
          title: shared_key
          type: string
        authorize_country:
          title: authorize_country
          type: boolean
        player_token:
          title: player_token
          type: string
      required:
      - access_country
      - allow_domain
      - authorize_country
      - exception_ip
      - forbidden_ip
      - player_token
      - restrictions_id
      - shared_key
      title: ViewersRestrictions
    Machine:
      example:
        ip: ip
        name: name
        url_domain: url_domain
        type: edge
        pool_id: 2
        url: url
      properties:
        name:
          description: Name of the resource `Machine`
          title: name
          type: string
        ip:
          title: ip
          type: string
        url:
          title: url
          type: string
        type:
          description: Type of server
          enum:
          - edge
          - load-balancer
          - master
          - recorder
          - time-shifter
          - transcoder
          title: type
          type: string
        pool_id:
          enum:
          - "1"
          - "2"
          title: pool_id
          type: integer
        url_domain:
          title: url_domain
          type: string
      required:
      - ip
      - name
      - pool_id
      - type
      - url
      - url_domain
      title: Machine
    ChannelWithTeamData:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - properties:
          team_display_name:
            description: The display name of the team to which this channel belongs.
            type: string
          team_name:
            description: The name of the team to which this channel belongs.
            type: string
          team_update_at:
            description: The time at which the team to which this channel belongs
              was last updated.
            type: integer
          policy_id:
            description: "The data retention policy to which this team has been assigned.\
              \ If no such policy exists, or the caller does not have the `sysconsole_read_compliance_data_retention`\
              \ permission, this field will be null."
            type: string
      example:
        maintained_at: 5
        policy_id: policy_id
        created_at: 0
        type: abr
        updated_at: 6
        blocked: true
        remember_to_config: true
        rights: rights
        options:
        - options
        - options
        blocked_at: 5
        free: true
        maintained: true
        live:
          server_name: server_name
          total_connections: 2
          application_instance: application_instance
          bytes_out: 7
          bytes_in: 2
          bytes_out_rate: 3
          bytes_in_rate: 9
        order: order
        players:
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        streams:
        - keyframe_rate: 9
          instant_connection: 6
          pass: pass
          channel:
            maintained_at: 6
            created_at: 8
            type: abr
            updated_at: 9
            blocked: true
            remember_to_config: true
            rights: rights
            options:
            - options
            - options
            blocked_at: 3
            free: true
            maintained: true
            live:
              server_name: server_name
              total_connections: 2
              application_instance: application_instance
              bytes_out: 7
              bytes_in: 2
              bytes_out_rate: 3
              bytes_in_rate: 9
            order: order
            players:
            - logo_margin_top: 50
              enable_facebook: true
              ads_url: ""
              facebook_back_link: my-lovely-stream.ch
              use_preload_img: true
              ads_enabled: true
              countdown_seconds: countdown_seconds
              channel: null
              stereo_projection360: stereo_projection360
              logo_margin_left: 50
              buffer: buffer
              use_restrict_img: true
              height: 720
              enable_twitter: true
              show_logo: true
              countdown: true
              restrictions: restrictions
              chromecast: true
              interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
              name: MyRadioPlayer
              twitter_related: infomaniak video live
              controlbar_color: '#000000'
              twitter_via: MyAccount
              integrations: integrations
              is360: true
              control_color: '#FFFFFF'
              countdown_txt: countdown_txt
              sound_enabled: true
              use_geo_ip_img: true
              preload_img: preload_img
              description: description
              restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
              created_at: 6
              logo_percentage: 50
              extract_preload_img: true
              title: title
              thumbnail_url: thumbnail_url
              auto_start: true
              player_id: 6
              countdown_minutes: countdown_minutes
              updated_at: 3
              show_controls: true
              facebook_player_embed: true
              countdown_hours: countdown_hours
              show_viewers: true
              enable_embed_code: true
              twitter_back_link: my-lovely-stream.ch
              time_before_hide_cb: 6
              sound_percentage: 50
              control_active_color: '#0098FF'
              auto_hide_controls: true
              countdown_stops_at: countdown_stops_at
              logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
              use_interrupt_img: true
              countdown_days: countdown_days
              show_viewers_after: 5
              width: 1280
              logo_anchor: bottom left
              show_viewers_only_after: true
              geo_ip_img: geo_ip_img
              allow_full_screen: true
              ratio: ratio
            - logo_margin_top: 50
              enable_facebook: true
              ads_url: ""
              facebook_back_link: my-lovely-stream.ch
              use_preload_img: true
              ads_enabled: true
              countdown_seconds: countdown_seconds
              channel: null
              stereo_projection360: stereo_projection360
              logo_margin_left: 50
              buffer: buffer
              use_restrict_img: true
              height: 720
              enable_twitter: true
              show_logo: true
              countdown: true
              restrictions: restrictions
              chromecast: true
              interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
              name: MyRadioPlayer
              twitter_related: infomaniak video live
              controlbar_color: '#000000'
              twitter_via: MyAccount
              integrations: integrations
              is360: true
              control_color: '#FFFFFF'
              countdown_txt: countdown_txt
              sound_enabled: true
              use_geo_ip_img: true
              preload_img: preload_img
              description: description
              restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
              created_at: 6
              logo_percentage: 50
              extract_preload_img: true
              title: title
              thumbnail_url: thumbnail_url
              auto_start: true
              player_id: 6
              countdown_minutes: countdown_minutes
              updated_at: 3
              show_controls: true
              facebook_player_embed: true
              countdown_hours: countdown_hours
              show_viewers: true
              enable_embed_code: true
              twitter_back_link: my-lovely-stream.ch
              time_before_hide_cb: 6
              sound_percentage: 50
              control_active_color: '#0098FF'
              auto_hide_controls: true
              countdown_stops_at: countdown_stops_at
              logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
              use_interrupt_img: true
              countdown_days: countdown_days
              show_viewers_after: 5
              width: 1280
              logo_anchor: bottom left
              show_viewers_only_after: true
              geo_ip_img: geo_ip_img
              allow_full_screen: true
              ratio: ratio
            streams:
            - null
            - null
            recording_status: recording_status
            source_type: camip
            consumption:
              from: 7
              to: 1
              value: 4.145608029883936
            deleted_at: 6
            tags: tags
            real_type: real_type
            deleted: true
            default_options:
            - default_options
            - default_options
            name: name
            restriction:
              restrictions_id: 1
              exception_ip: exception_ip
              forbidden_ip: forbidden_ip
              allow_domain: allow_domain
              player_token: player_token
              authorize_country: true
              access_country: access_country
              shared_key: shared_key
            machines:
            - ip: ip
              name: name
              url_domain: url_domain
              type: edge
              pool_id: 2
              url: url
            - ip: ip
              name: name
              url_domain: url_domain
              type: edge
              pool_id: 2
              url: url
            channel_id: 69001
            status:
            - status
            - status
          created_at: 7
          transcoding_option_id: 1
          audio_bitrate: 1
          language: language
          published: true
          interrupted: true
          audio_codec: audio_codec
          resolution: 5
          frame_rate: frame_rate
          original_stream_id: original_stream_id
          url: url
          interrupted_at: 1
          restrictions_id: 4
          recording_config_id: 9
          rendered: true
          stream_id: stream_id
          video_bitrate: 6
          username: username
        - keyframe_rate: 9
          instant_connection: 6
          pass: pass
          channel:
            maintained_at: 6
            created_at: 8
            type: abr
            updated_at: 9
            blocked: true
            remember_to_config: true
            rights: rights
            options:
            - options
            - options
            blocked_at: 3
            free: true
            maintained: true
            live:
              server_name: server_name
              total_connections: 2
              application_instance: application_instance
              bytes_out: 7
              bytes_in: 2
              bytes_out_rate: 3
              bytes_in_rate: 9
            order: order
            players:
            - logo_margin_top: 50
              enable_facebook: true
              ads_url: ""
              facebook_back_link: my-lovely-stream.ch
              use_preload_img: true
              ads_enabled: true
              countdown_seconds: countdown_seconds
              channel: null
              stereo_projection360: stereo_projection360
              logo_margin_left: 50
              buffer: buffer
              use_restrict_img: true
              height: 720
              enable_twitter: true
              show_logo: true
              countdown: true
              restrictions: restrictions
              chromecast: true
              interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
              name: MyRadioPlayer
              twitter_related: infomaniak video live
              controlbar_color: '#000000'
              twitter_via: MyAccount
              integrations: integrations
              is360: true
              control_color: '#FFFFFF'
              countdown_txt: countdown_txt
              sound_enabled: true
              use_geo_ip_img: true
              preload_img: preload_img
              description: description
              restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
              created_at: 6
              logo_percentage: 50
              extract_preload_img: true
              title: title
              thumbnail_url: thumbnail_url
              auto_start: true
              player_id: 6
              countdown_minutes: countdown_minutes
              updated_at: 3
              show_controls: true
              facebook_player_embed: true
              countdown_hours: countdown_hours
              show_viewers: true
              enable_embed_code: true
              twitter_back_link: my-lovely-stream.ch
              time_before_hide_cb: 6
              sound_percentage: 50
              control_active_color: '#0098FF'
              auto_hide_controls: true
              countdown_stops_at: countdown_stops_at
              logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
              use_interrupt_img: true
              countdown_days: countdown_days
              show_viewers_after: 5
              width: 1280
              logo_anchor: bottom left
              show_viewers_only_after: true
              geo_ip_img: geo_ip_img
              allow_full_screen: true
              ratio: ratio
            - logo_margin_top: 50
              enable_facebook: true
              ads_url: ""
              facebook_back_link: my-lovely-stream.ch
              use_preload_img: true
              ads_enabled: true
              countdown_seconds: countdown_seconds
              channel: null
              stereo_projection360: stereo_projection360
              logo_margin_left: 50
              buffer: buffer
              use_restrict_img: true
              height: 720
              enable_twitter: true
              show_logo: true
              countdown: true
              restrictions: restrictions
              chromecast: true
              interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
              name: MyRadioPlayer
              twitter_related: infomaniak video live
              controlbar_color: '#000000'
              twitter_via: MyAccount
              integrations: integrations
              is360: true
              control_color: '#FFFFFF'
              countdown_txt: countdown_txt
              sound_enabled: true
              use_geo_ip_img: true
              preload_img: preload_img
              description: description
              restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
              created_at: 6
              logo_percentage: 50
              extract_preload_img: true
              title: title
              thumbnail_url: thumbnail_url
              auto_start: true
              player_id: 6
              countdown_minutes: countdown_minutes
              updated_at: 3
              show_controls: true
              facebook_player_embed: true
              countdown_hours: countdown_hours
              show_viewers: true
              enable_embed_code: true
              twitter_back_link: my-lovely-stream.ch
              time_before_hide_cb: 6
              sound_percentage: 50
              control_active_color: '#0098FF'
              auto_hide_controls: true
              countdown_stops_at: countdown_stops_at
              logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
              use_interrupt_img: true
              countdown_days: countdown_days
              show_viewers_after: 5
              width: 1280
              logo_anchor: bottom left
              show_viewers_only_after: true
              geo_ip_img: geo_ip_img
              allow_full_screen: true
              ratio: ratio
            streams:
            - null
            - null
            recording_status: recording_status
            source_type: camip
            consumption:
              from: 7
              to: 1
              value: 4.145608029883936
            deleted_at: 6
            tags: tags
            real_type: real_type
            deleted: true
            default_options:
            - default_options
            - default_options
            name: name
            restriction:
              restrictions_id: 1
              exception_ip: exception_ip
              forbidden_ip: forbidden_ip
              allow_domain: allow_domain
              player_token: player_token
              authorize_country: true
              access_country: access_country
              shared_key: shared_key
            machines:
            - ip: ip
              name: name
              url_domain: url_domain
              type: edge
              pool_id: 2
              url: url
            - ip: ip
              name: name
              url_domain: url_domain
              type: edge
              pool_id: 2
              url: url
            channel_id: 69001
            status:
            - status
            - status
          created_at: 7
          transcoding_option_id: 1
          audio_bitrate: 1
          language: language
          published: true
          interrupted: true
          audio_codec: audio_codec
          resolution: 5
          frame_rate: frame_rate
          original_stream_id: original_stream_id
          url: url
          interrupted_at: 1
          restrictions_id: 4
          recording_config_id: 9
          rendered: true
          stream_id: stream_id
          video_bitrate: 6
          username: username
        recording_status: recording_status
        source_type: camip
        consumption:
          from: 7
          to: 1
          value: 4.145608029883936
        deleted_at: 1
        team_name: team_name
        tags: tags
        team_display_name: team_display_name
        real_type: real_type
        deleted: true
        default_options:
        - default_options
        - default_options
        team_update_at: 3
        name: name
        restriction:
          restrictions_id: 1
          exception_ip: exception_ip
          forbidden_ip: forbidden_ip
          allow_domain: allow_domain
          player_token: player_token
          authorize_country: true
          access_country: access_country
          shared_key: shared_key
        machines:
        - ip: ip
          name: name
          url_domain: url_domain
          type: edge
          pool_id: 2
          url: url
        - ip: ip
          name: name
          url_domain: url_domain
          type: edge
          pool_id: 2
          url: url
        channel_id: 69001
        status:
        - status
        - status
    PostMetadata:
      description: Additional information used to display a post.
      example:
        emojis:
        - creator_id: creator_id
          name: name
          update_at: 2
          delete_at: 7
          id: id
          create_at: 5
        - creator_id: creator_id
          name: name
          update_at: 2
          delete_at: 7
          id: id
          create_at: 5
        images: "{}"
        files:
        - extension: extension
          has_preview_image: true
          post_id: post_id
          size: 4
          user_id: user_id
          mime_type: mime_type
          update_at: 3
          name: name
          width: 7
          delete_at: 2
          id: id
          create_at: 9
          height: 1
        - extension: extension
          has_preview_image: true
          post_id: post_id
          size: 4
          user_id: user_id
          mime_type: mime_type
          update_at: 3
          name: name
          width: 7
          delete_at: 2
          id: id
          create_at: 9
          height: 1
        reactions:
        - post_id: post_id
          user_id: user_id
          emoji_name: emoji_name
          create_at: 1
        - post_id: post_id
          user_id: user_id
          emoji_name: emoji_name
          create_at: 1
        embeds:
        - data: "{}"
          type: image
          url: url
        - data: "{}"
          type: image
          url: url
      properties:
        embeds:
          description: |
            Information about content embedded in the post including OpenGraph previews, image link previews, and message attachments. This field will be null if the post does not contain embedded content.
          items:
            $ref: '#/components/schemas/PostMetadata_embeds_inner'
          type: array
        emojis:
          description: |
            The custom emojis that appear in this point or have been used in reactions to this post. This field will be null if the post does not contain custom emojis.
          items:
            $ref: '#/components/schemas/Emoji'
          type: array
        files:
          description: |
            The FileInfo objects for any files attached to the post. This field will be null if the post does not have any file attachments.
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        images:
          description: |
            An object mapping the URL of an external image to an object containing the dimensions of that image. This field will be null if the post or its embedded content does not reference any external images.
          items:
            properties:
              height: {}
              width: {}
          type: object
        reactions:
          description: |
            Any reactions made to this point. This field will be null if no reactions have been made to this post.
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
    TopReaction:
      example:
        count: 0
        emoji_name: emoji_name
      properties:
        emoji_name:
          description: The name of the emoji used for this reaction.
          type: string
        count:
          description: The number of the times this emoji has been used.
          format: int64
          type: integer
    NewTeamMember:
      example:
        nickname: nickname
        last_name: last_name
        id: id
        position: position
        create_at: 0
        first_name: first_name
        username: username
      properties:
        id:
          description: The user's ID.
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        position:
          description: The user's position field value.
          type: string
        create_at:
          description: The creation timestamp of the team member record.
          type: integer
    TopChannel:
      example:
        name: name
        id: id
        team_id: team_id
        type: type
        display_name: display_name
        message_count: message_count
      properties:
        id:
          type: string
        type:
          type: string
        display_name:
          type: string
        name:
          type: string
        team_id:
          type: string
        message_count:
          description: The number of messages posted in the channel by users over
            the given time period (not including messages posted by bots).
          type: string
    InsightUserInformation:
      example:
        last_picture_update: last_picture_update
        nickname: nickname
        last_name: last_name
        id: id
        create_at: 1
        first_name: first_name
        username: username
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        username:
          type: string
        last_picture_update:
          type: string
        create_at:
          format: int64
          type: integer
    TopThread:
      example:
        channel_display_name: channel_display_name
        channel_name: channel_name
        post:
          pending_post_id: pending_post_id
          metadata:
            emojis:
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            - creator_id: creator_id
              name: name
              update_at: 2
              delete_at: 7
              id: id
              create_at: 5
            images: "{}"
            files:
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            - extension: extension
              has_preview_image: true
              post_id: post_id
              size: 4
              user_id: user_id
              mime_type: mime_type
              update_at: 3
              name: name
              width: 7
              delete_at: 2
              id: id
              create_at: 9
              height: 1
            reactions:
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            - post_id: post_id
              user_id: user_id
              emoji_name: emoji_name
              create_at: 1
            embeds:
            - data: "{}"
              type: image
              url: url
            - data: "{}"
              type: image
              url: url
          message: message
          type: type
          props: "{}"
          user_id: user_id
          update_at: 6
          file_ids:
          - file_ids
          - file_ids
          delete_at: 1
          root_id: root_id
          id: id
          create_at: 0
          original_id: original_id
          channel_id: channel_id
          edit_at: 5
          hashtag: hashtag
        Participants:
        - Participants
        - Participants
        channel_id: channel_id
        user_information:
          last_picture_update: last_picture_update
          nickname: nickname
          last_name: last_name
          id: id
          create_at: 1
          first_name: first_name
          username: username
      properties:
        post:
          $ref: '#/components/schemas/Post'
        channel_id:
          type: string
        channel_display_name:
          type: string
        channel_name:
          type: string
        Participants:
          items:
            type: string
          type: array
        user_information:
          $ref: '#/components/schemas/InsightUserInformation'
    TopDMInsightUserInformation:
      allOf:
      - $ref: '#/components/schemas/InsightUserInformation'
      - properties:
          position:
            type: string
      example:
        last_picture_update: last_picture_update
        nickname: nickname
        last_name: last_name
        id: id
        position: position
        create_at: 1
        first_name: first_name
        username: username
    TopDM:
      example:
        outgoing_message_count: 6
        second_participant:
          last_picture_update: last_picture_update
          nickname: nickname
          last_name: last_name
          id: id
          position: position
          create_at: 1
          first_name: first_name
          username: username
        post_count: 0
      properties:
        post_count:
          format: int64
          type: integer
        outgoing_message_count:
          format: int64
          type: integer
        second_participant:
          $ref: '#/components/schemas/TopDMInsightUserInformation'
    SlackAttachment:
      example:
        AuthorName: AuthorName
        ThumbURL: ThumbURL
        Color: Color
        Title: Title
        ImageURL: ImageURL
        Text: Text
        AuthorIcon: AuthorIcon
        FooterIcon: FooterIcon
        Timestamp: Timestamp
        Pretext: Pretext
        TitleLink: TitleLink
        Fields:
        - Value: Value
          Title: Title
          Short: true
        - Value: Value
          Title: Title
          Short: true
        AuthorLink: AuthorLink
        Fallback: Fallback
        Footer: Footer
        Id: Id
      properties:
        Id:
          type: string
        Fallback:
          type: string
        Color:
          type: string
        Pretext:
          type: string
        AuthorName:
          type: string
        AuthorLink:
          type: string
        AuthorIcon:
          type: string
        Title:
          type: string
        TitleLink:
          type: string
        Text:
          type: string
        Fields:
          items:
            $ref: '#/components/schemas/SlackAttachmentField'
          type: array
        ImageURL:
          type: string
        ThumbURL:
          type: string
        Footer:
          type: string
        FooterIcon:
          type: string
        Timestamp:
          description: "The timestamp of the slack attachment, either type of string\
            \ or integer"
          type: string
    SlackAttachmentField:
      example:
        Value: Value
        Title: Title
        Short: true
      properties:
        Title:
          type: string
        Value:
          description: "The value of the attachment, set as string but capable with\
            \ golang interface"
          type: string
        Short:
          type: boolean
    ChannelModeratedRoles:
      example:
        members:
          value: true
          enabled: true
        guests:
          value: true
          enabled: true
      properties:
        guests:
          $ref: '#/components/schemas/ChannelModeratedRole'
        members:
          $ref: '#/components/schemas/ChannelModeratedRole'
    ChannelModeratedRole:
      example:
        value: true
        enabled: true
      properties:
        value:
          type: boolean
        enabled:
          type: boolean
    ChannelModeratedRolesPatch:
      example:
        members: true
        guests: true
      properties:
        guests:
          type: boolean
        members:
          type: boolean
    SidebarCategoryWithChannels:
      description: User's sidebar category with it's channels
      example:
        channel_ids:
        - channel_ids
        - channel_ids
        user_id: user_id
        id: id
        team_id: team_id
        display_name: display_name
        type: channels
      properties:
        id:
          type: string
        user_id:
          type: string
        team_id:
          type: string
        display_name:
          type: string
        type:
          enum:
          - channels
          - custom
          - direct_messages
          - favorites
          type: string
        channel_ids:
          items:
            type: string
          type: array
    GroupWithSchemeAdmin:
      description: group augmented with scheme admin information
      properties:
        group:
          $ref: '#/components/schemas/Group'
        scheme_admin:
          type: boolean
    Api_Country:
      description: Country
      example:
        name: maria
        alpha3: maria
        id: maria
        official_state_name: maria
      properties:
        id:
          description: ISO 3166-1 alpha-2
          example: maria
          format: string
          type: string
        alpha3:
          description: ISO 3166-1 alpha-3
          example: maria
          format: string
          type: string
        name:
          example: maria
          format: string
          type: string
        official_state_name:
          example: maria
          format: string
          type: string
    Api_DemoGroup:
      description: DemoGroup
      properties:
        id:
          example: 42
          format: int32
          type: number
        iDemo:
          description: Liaison avec la conf de la démo
          example: 42
          format: int32
          type: number
        iGroupe:
          example: maria
          format: string
          type: string
        iService:
          example: maria
          format: string
          type: string
        iItem:
          example: maria
          format: string
          type: string
        iSubItem:
          example: maria
          format: string
          type: string
        bDesactived:
          example: maria
          format: string
          type: string
        bIgnoreUse:
          example: maria
          format: string
          type: string
        dCreated:
          description: Date de création de la démo
          example: maria
          format: string
          type: string
        dValidite:
          description: Date de butée de validité. A cette date on désactive l'item
            puis X jours après on le résilie
          example: maria
          format: string
          type: string
        dResilied:
          description: Date ou la désactivation d'une démo est intervenue.
          example: maria
          format: string
          type: string
        dLimited:
          description: Date ou la limitation d'une démo est intervenue.
          example: maria
          format: string
          type: string
        dConverted:
          description: Date ou la démo a été convertie en produit classique.
          example: maria
          format: string
          type: string
        iMailSent:
          description: Liste de flag pour les mails déjà envoyé
          example: 42
          format: int32
          type: number
        account:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Account'
          type: array
    ip:
      example: 127.0.0.1
      type: string
    Api_Language:
      description: Language
      example:
        endonym: maria
        name: maria
        id: maria
      properties:
        id:
          description: ISO 639-1
          example: maria
          format: string
          type: string
        name:
          example: maria
          format: string
          type: string
        endonym:
          example: maria
          format: string
          type: string
    Api_Logo:
      description: Logo
      example:
        margin: 42
        data: maria
        overlayLogos:
        - logo_id: 42
          uuidSequence:
            uuidSequence: null
            model_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            model: null
            model_id: 42
            id: 1jhvl2uqa5v8a
            uuid: maria
          link:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          index: 42
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
          uuid: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          activities:
          - actor: null
            context: maria
            cause: ELOQUENT_CREATED
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            message: maria
          - actor: null
            context: maria
            cause: ELOQUENT_CREATED
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            message: maria
          media_id: 42
          progress: progress
          logo:
          - null
          - null
          id: 1jhvl2uqa5v8a
        - logo_id: 42
          uuidSequence:
            uuidSequence: null
            model_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            model: null
            model_id: 42
            id: 1jhvl2uqa5v8a
            uuid: maria
          link:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          index: 42
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
          uuid: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          updated_at: 2021-09-15T14:23:41+00:00
          activities:
          - actor: null
            context: maria
            cause: ELOQUENT_CREATED
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            message: maria
          - actor: null
            context: maria
            cause: ELOQUENT_CREATED
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
            message: maria
          media_id: 42
          progress: progress
          logo:
          - null
          - null
          id: 1jhvl2uqa5v8a
        uuidSequence:
          uuidSequence: null
          model_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          model: null
          model_id: 42
          id: 1jhvl2uqa5v8a
          uuid: maria
        channel:
        - auto_empty_trash: maria
          journal:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          id: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          statistic_ignored_ip:
          - 127.0.0.1
          - 127.0.0.1
        - auto_empty_trash: maria
          journal:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          id: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          statistic_ignored_ip:
          - 127.0.0.1
          - 127.0.0.1
        created_at: 2021-09-15T14:23:41+00:00
        uuid: maria
        deleted_at: 2021-09-15T14:23:41+00:00
        mode: OVERLAY
        medias:
        - null
        - null
        size: 42
        updated_at: 2021-09-15T14:23:41+00:00
        width: 42
        mimetype: maria
        id: 1jhvl2uqa5v8a
        position: TOP_LEFT
        channel_id: 42
        height: 42
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        uuid:
          example: maria
          format: string
          type: string
        channel_id:
          example: 42
          format: int32
          type: number
        mode:
          description: ""
          enum:
          - OVERLAY
          - EMBED
          example: OVERLAY
          format: string
          items: {}
          type: string
        position:
          description: ""
          enum:
          - TOP_LEFT
          - TOP_MIDDLE
          - TOP_RIGHT
          - CENTER_LEFT
          - CENTER_MIDDLE
          - CENTER_RIGHT
          - BOTTOM_LEFT
          - BOTTOM_MIDDLE
          - BOTTOM_RIGHT
          example: TOP_LEFT
          format: string
          items: {}
          type: string
        margin:
          example: 42
          format: int32
          type: number
        size:
          description: Integer value 1-100
          example: 42
          format: int32
          type: number
        data:
          example: maria
          format: string
          type: string
        width:
          example: 42
          format: int32
          type: number
        height:
          example: 42
          format: int32
          type: number
        mimetype:
          example: maria
          format: string
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        channel:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Channel'
          type: array
        medias:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Media'
          type: array
        overlayLogos:
          description: ""
          items:
            $ref: '#/components/schemas/Api_OverlayLogo'
          type: array
        uuidSequence:
          $ref: '#/components/schemas/Api_UuidSequence'
    Api_Product:
      description: Product
      properties:
        id:
          example: 42
          format: int32
          type: number
        auto_empty_trash:
          example: maria
          format: string
          type: string
        channel_name:
          example: maria
          format: string
          type: string
        channel_description:
          example: maria
          format: string
          type: string
        player:
          $ref: '#/components/schemas/Api_Player'
        statistic_ignored_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        ftp_prefix:
          example: maria
          format: string
          type: string
        pack:
          format: string
          type: string
        medias_count:
          example: 42
          format: int32
          type: integer
        medias_uploaded:
          example: 42
          format: int32
          type: number
        medias_uploaded_last_hour:
          example: 42
          format: int32
          type: number
        parameters:
          description: ""
          items:
            type: string
          type: array
        rights:
          description: ""
          items:
            type: string
          type: array
        bill_reference:
          example: maria
          format: string
          type: string
        available_quota:
          format: float
          type: string
        legacy_product_id:
          example: 42
          format: int32
          type: number
        suspended_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        customer_name:
          example: maria
          format: string
          type: string
        expired_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        internal_name:
          example: maria
          format: string
          type: string
        service_id:
          example: 42
          format: int32
          type: number
        slug:
          example: maria
          format: string
          type: string
        special:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        version:
          example: 42
          format: int32
          type: number
        tags:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Tag'
          type: array
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          type: datetime
    Api_Tag:
      description: Tag
      example:
        color: 42
        updated_at: 2021-09-15T14:23:41+00:00
        name: maria
        created_at: 2021-09-15T14:23:41+00:00
        id: 42
      properties:
        id:
          example: 42
          format: int32
          type: number
        name:
          example: maria
          format: string
          type: string
        color:
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
    Api_User:
      description: User
      properties:
        iGlobalUserCode:
          example: maria
          format: string
          type: string
        sLogin:
          example: maria
          format: string
          type: string
        sEmail:
          example: maria
          format: string
          type: string
        sFirstname:
          example: maria
          format: string
          type: string
        sLastname:
          example: maria
          format: string
          type: string
        sPassword:
          example: maria
          format: string
          type: string
        sCryptKey:
          example: maria
          format: string
          type: string
        iStatus:
          example: maria
          format: string
          type: string
        dValidationDate:
          description: Date à laquelle le compte utilisateur a été validé (par lui
            même suite à invitation par exemple)
          example: 2021-02-23T19:15:00+00:00
          format: datetime
          type: string
        bInfomaniak:
          description: Flag pour indiquer si staff Infomaniak
          example: 42
          format: int32
          type: number
        setStaffDepartement:
          example: maria
          format: string
          type: string
        dDeleted:
          example: 2021-02-23T19:15:00+00:00
          format: datetime
          type: string
        sOTPAuthSecret:
          example: maria
          format: string
          type: string
        sHashPassword:
          example: maria
          format: string
          type: string
        setDeletedAction:
          example: maria
          format: string
          type: string
        bOTPAuth:
          example: maria
          format: string
          type: string
        dLastLogin:
          example: 2021-02-23T19:15:00+00:00
          format: datetime
          type: string
        dLastLoginAdmin:
          example: 2021-02-23T19:15:00+00:00
          format: datetime
          type: string
        setCreatedAction:
          example: maria
          format: string
          type: string
        bInvalidEmail:
          example: maria
          format: string
          type: string
        sOTPAuthPendingSecret:
          example: maria
          format: string
          type: string
        sAvatarUrl:
          example: maria
          format: string
          type: string
        dCreation:
          example: maria
          format: string
          type: string
        dSecurityAssistant:
          example: maria
          format: string
          type: string
        bSMSAuth:
          example: maria
          format: string
          type: string
        sSMSPhone:
          example: maria
          format: string
          type: string
        dResetPassword:
          example: maria
          format: string
          type: string
        bYubikeyAuth:
          example: maria
          format: string
          type: string
        sYubikeyId:
          example: maria
          format: string
          type: string
        bDoubleAuth:
          example: maria
          format: string
          type: string
        sDoubleAuthMethod:
          example: maria
          format: string
          type: string
        bApplicationAuth:
          example: maria
          format: string
          type: string
        sPasswordStatus:
          example: maria
          format: string
          type: string
        dDatePasswordStatusChanged:
          example: maria
          format: string
          type: string
        accessGrants:
          description: ""
          items:
            type: AccessGrant
          type: array
        accessTokens:
          description: ""
          items:
            type: AccessToken
          type: array
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Account'
          type: array
        addresses:
          description: ""
          items:
            type: Address
          type: array
        answer:
          format: string
          type: SecretAnswer
        applications:
          description: ""
          items:
            type: Application
          type: array
        authDevices:
          description: ""
          items:
            type: UserAuthDevice
          type: array
        contactAddresses:
          description: ""
          items:
            type: Address
          type: array
        emails:
          description: ""
          items:
            type: Email
          type: array
        admin_last_used_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        avatar_url:
          format: string
          type: ""
        b_invalid_email:
          format: string
          type: ""
        created_action:
          format: string
          type: ""
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        current_account:
          $ref: '#/components/schemas/Api_Account'
        d_security_assistant:
          format: string
          type: ""
        deleted_by_id:
          example: 42
          format: int32
          type: number
        deleted_by_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        email:
          format: string
          type: ""
        firstname:
          format: string
          type: ""
        id:
          format: string
          type: ""
        invalid_email:
          format: string
          type: ""
        last_used_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        lastname:
          format: string
          type: ""
        login:
          format: string
          type: ""
        name:
          format: string
          type: ""
        otp_enabled:
          format: string
          type: ""
        otpauth_secret:
          format: string
          type: ""
        phone:
          format: string
          type: ""
        remember_token:
          format: string
          type: ""
        staff:
          format: string
          type: ""
        status:
          format: string
          type: ""
        validated_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        mailboxes:
          description: ""
          items:
            type: Mailbox
          type: array
        oldPasswords:
          description: ""
          items:
            type: OldPassword
          type: array
        phones:
          description: ""
          items:
            type: Phone
          type: array
        preference:
          format: string
          type: Preference
        rememberTokens:
          description: ""
          items:
            type: RememberToken
          type: array
        rescueCodes:
          description: ""
          items:
            type: RescueCode
          type: array
        rights:
          description: ""
          items:
            type: Right
          type: array
        roles:
          description: ""
          items:
            type: Role
          type: array
        serviceRights:
          description: ""
          items:
            type: ServiceRight
          type: array
        password: {}
        s_email:
          format: string
        s_remember_token:
          format: string
        teams:
          description: ""
          items:
            type: Team
          type: array
        userPasswords:
          description: ""
          items:
            type: UserPassword
          type: array
        validateEmailTokens:
          description: ""
          items:
            type: ValidateEmailToken
          type: array
    Api_AlertHitLog:
      description: AlertHitLog
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        datetime:
          example: maria
          format: string
          type: string
        state:
          example: maria
          format: string
          type: string
        result:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        response:
          example: maria
          format: string
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
    Api_Preview:
      description: Preview
      example:
        audio_raw:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        audio:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        video:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
      properties:
        audio:
          $ref: '#/components/schemas/Api_Link'
        audio_raw:
          $ref: '#/components/schemas/Api_Link'
        video:
          $ref: '#/components/schemas/Api_Link'
    Api_Sample:
      description: Sample
      example:
        audio:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        video:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
      properties:
        audio:
          $ref: '#/components/schemas/Api_Link'
        video:
          $ref: '#/components/schemas/Api_Link'
    Api_Link:
      description: Link
      example:
        size: 42
        size_human_readable: maria
        mimetype: maria
        url: https://infomaniak.com
      properties:
        url:
          example: https://infomaniak.com
          format: string
          type: string
        mimetype:
          example: maria
          format: string
          type: string
        size:
          example: 42
          format: int32
          type: number
        size_human_readable:
          example: maria
          format: string
          type: string
    Api_MediaJournalLog:
      description: MediaJournalLog
      example:
        updated_at: 2021-09-15T14:23:41+00:00
        created_at: 2021-09-15T14:23:41+00:00
        media:
        - null
        - null
      properties:
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        media:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Media'
          type: array
    Api_Channel:
      description: Channel
      example:
        auto_empty_trash: maria
        journal:
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
        - updated_at: 2021-09-15T14:23:41+00:00
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
        updated_at: 2021-09-15T14:23:41+00:00
        name: maria
        description: maria
        created_at: 2021-09-15T14:23:41+00:00
        id: maria
        deleted_at: 2021-09-15T14:23:41+00:00
        statistic_ignored_ip:
        - 127.0.0.1
        - 127.0.0.1
      properties:
        id:
          example: maria
          format: string
          type: string
        name:
          example: maria
          format: string
          type: string
        description:
          example: maria
          format: string
          type: string
        statistic_ignored_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        auto_empty_trash:
          example: maria
          format: string
          type: string
        journal:
          description: ""
          items:
            $ref: '#/components/schemas/Api_MediaJournalLog'
          type: array
    Api_DataUrl:
      description: dataUrl
      example:
        data: b64encodedData
        mimetype: image/png
        encoding: encoding
      properties:
        data:
          example: b64encodedData
          type: string
        mimetype:
          example: image/png
          type: string
        encoding:
          example: encoding
          type: string
    Api_Account:
      description: Account
      properties:
        iCodeGroupes:
          example: maria
          format: string
          type: string
        sGroupesNom:
          example: maria
          format: string
          type: string
        eTypeGroup:
          example: maria
          format: string
          type: string
        sTVA:
          description: Numéro de TVA
          example: maria
          format: string
          type: string
        sPhone:
          example: maria
          format: string
          type: string
        sFax:
          example: maria
          format: string
          type: string
        sWebsite:
          example: maria
          format: string
          type: string
        bPartner:
          example: maria
          format: string
          type: string
        bContreAffaireAllowed:
          example: maria
          format: string
          type: string
        bExportGIT:
          description: Exporter les factures et paiements vers GIT
          example: 42
          format: int32
          type: number
        bAlwaysOn:
          example: 42
          format: int32
          type: number
        bDisableServiceOnUnpaid:
          example: maria
          format: string
          type: string
        bUseRenouvellement:
          example: maria
          format: string
          type: string
        bBetaTesteur:
          example: maria
          format: string
          type: string
        bExonerationTVA:
          example: maria
          format: string
          type: string
        fExonerationTVALimitTTC:
          example: maria
          format: string
          type: string
        iCountryCode:
          description: Code pays PAR DEFAUT des nouveaux users
          example: 42
          format: int32
          type: number
        iLanguageCode:
          description: Code langue par défaut du group
          example: 42
          format: int32
          type: number
        iTimezoneCode:
          description: timezone par défaut du groupe
          example: 42
          format: int32
          type: number
        iDefautEcheanceFacture:
          description: Echéance par défaut pour les factures du groupe en nombre de
            jours
          example: 42
          format: int32
          type: number
        bUniqueReference:
          example: maria
          format: string
          type: string
        bPerte:
          description: Possède au moins un fact. passée en perte
          example: 42
          format: int32
          type: number
        dDateCreation:
          example: maria
          format: string
          type: string
        bDeleted:
          example: maria
          format: string
          type: string
        dDeletedDate:
          example: 2021-02-23T19:15:00+00:00
          format: datetime
          type: string
        sIPCreation:
          example: maria
          format: string
          type: string
        iBannerCampagne:
          description: stocker si groupe a été créé après click sur bannière campagne
          example: 42
          format: int32
          type: number
        idAffiliation:
          example: maria
          format: string
          type: string
        iStatutDoublon:
          description: Etat du traitement si compte en doublon
          example: 42
          format: int32
          type: number
        dDoublon:
          description: Date à laquelle le statut a été changé
          example: maria
          format: string
          type: string
        sUniqueReference:
          description: Référence unique du groupe que le client doit renseigner lors
            d'un paiement par IBAN
          example: maria
          format: string
          type: string
        CGUs:
          description: ""
          items:
            type: CGUAgreement
          type: array
        addresses:
          description: ""
          items:
            type: Address
          type: array
        billingAddresses:
          description: ""
          items:
            type: Address
          type: array
        country:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Country'
          type: array
        customizationUrl:
          format: string
          type: AccountCustomizationUrl
        demoGroups:
          description: ""
          items:
            $ref: '#/components/schemas/Api_DemoGroup'
          type: array
        beta:
          format: string
          type: ""
        country_id:
          format: string
          type: ""
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: datetime
          type: datetime
        deleted_by_id:
          example: 42
          format: int32
          type: number
        deleted_by_ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        fax:
          format: string
          type: ""
        id:
          format: string
          type: ""
        language_id:
          format: string
          type: ""
        legal_entity_type:
          format: string
          type: ""
        name:
          format: string
          type: ""
        partner:
          format: string
          type: ""
        phone:
          format: string
          type: ""
        s_phone:
          format: string
          type: ""
        timezone_id:
          format: string
          type: ""
        tva:
          format: string
          type: ""
        type:
          format: string
          type: ""
        website:
          format: string
          type: ""
        invitations:
          description: ""
          items:
            type: AccountInvitation
          type: array
        invoices:
          description: ""
          items:
            type: Invoice
          type: array
        language:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Language'
          type: array
        logo:
          $ref: '#/components/schemas/Api_Logo'
        logs:
          description: ""
          items:
            type: Log
          type: array
        premiumSupport:
          description: ""
          items:
            type: PremiumSupport
          type: array
        products:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Product'
          type: array
        roles:
          description: ""
          items:
            type: Role
          type: array
        services:
          description: ""
          items:
            type: Service
          type: array
        tags:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Tag'
          type: array
        teams:
          description: ""
          items:
            type: Team
          type: array
        timezone:
          description: ""
          items:
            type: Timezone
          type: array
        users:
          description: ""
          items:
            $ref: '#/components/schemas/Api_User'
          type: array
    Api_EncodingPreset:
      description: EncodingPreset
      example:
        template:
          container: 2
          streams:
          - audio_bitrate: 64000
            audio_sampling: 48000
          - audio_bitrate: 64000
            audio_sampling: 48000
          audio_channel: 2
          audio_codec: 1
        name: maria
        id: 1jhvl2uqa5v8a
        type: PLAYBACK
        deleted_at: 2021-09-15T14:23:41+00:00
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        name:
          example: maria
          format: string
          type: string
        type:
          description: ""
          enum:
          - PLAYBACK
          - STORAGE
          example: PLAYBACK
          format: string
          items: {}
          type: string
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        template:
          $ref: '#/components/schemas/encoding_preset_template'
    Api_EncodingStream:
      description: EncodingStream
      example:
        video_height: 42
        updated_at: 2021-09-15T14:23:41+00:00
        video_width: 42
        created_at: 2021-09-15T14:23:41+00:00
        audio_bitrate: 42
        id: 1jhvl2uqa5v8a
        audio_sampling: 42
        encoding:
        - null
        - null
        video_bitrate: 42
        deleted_at: 2021-09-15T14:23:41+00:00
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        video_bitrate:
          description: In bps
          example: 42
          format: int32
          type: number
        video_width:
          example: 42
          format: int32
          type: number
        video_height:
          example: 42
          format: int32
          type: number
        audio_bitrate:
          description: In bps
          example: 42
          format: int32
          type: number
        audio_sampling:
          description: In Hz
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        encoding:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Encoding'
          type: array
    encoding_preset_template:
      description: encoding preset
      example:
        container: 2
        streams:
        - audio_bitrate: 64000
          audio_sampling: 48000
        - audio_bitrate: 64000
          audio_sampling: 48000
        audio_channel: 2
        audio_codec: 1
      properties:
        container:
          example: 2
          type: number
        audio_codec:
          example: 1
          type: number
        audio_channel:
          example: 2
          type: number
        streams:
          items:
            $ref: '#/components/schemas/encoding_preset_template_streams_inner'
          type: array
    Api_Encoding:
      description: Encoding
      example:
        container: FLV
        video_codec: H264
        streams:
        - video_height: 42
          updated_at: 2021-09-15T14:23:41+00:00
          video_width: 42
          created_at: 2021-09-15T14:23:41+00:00
          audio_bitrate: 42
          id: 1jhvl2uqa5v8a
          audio_sampling: 42
          encoding:
          - null
          - null
          video_bitrate: 42
          deleted_at: 2021-09-15T14:23:41+00:00
        - video_height: 42
          updated_at: 2021-09-15T14:23:41+00:00
          video_width: 42
          created_at: 2021-09-15T14:23:41+00:00
          audio_bitrate: 42
          id: 1jhvl2uqa5v8a
          audio_sampling: 42
          encoding:
          - null
          - null
          video_bitrate: 42
          deleted_at: 2021-09-15T14:23:41+00:00
        audio_channel: MONO_1_0
        created_at: 2021-09-15T14:23:41+00:00
        audio_codec: AAC
        preset:
        - template:
            container: 2
            streams:
            - audio_bitrate: 64000
              audio_sampling: 48000
            - audio_bitrate: 64000
              audio_sampling: 48000
            audio_channel: 2
            audio_codec: 1
          name: maria
          id: 1jhvl2uqa5v8a
          type: PLAYBACK
          deleted_at: 2021-09-15T14:23:41+00:00
        - template:
            container: 2
            streams:
            - audio_bitrate: 64000
              audio_sampling: 48000
            - audio_bitrate: 64000
              audio_sampling: 48000
            audio_channel: 2
            audio_codec: 1
          name: maria
          id: 1jhvl2uqa5v8a
          type: PLAYBACK
          deleted_at: 2021-09-15T14:23:41+00:00
        deleted_at: 2021-09-15T14:23:41+00:00
        updated_at: 2021-09-15T14:23:41+00:00
        owned: true
        name: maria
        id: 1jhvl2uqa5v8a
        copy: true
        video_aspect: LETTERBOX
        video_fps: video_fps
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        container:
          description: ""
          enum:
          - FLV
          - M4A
          - MKV
          - MP4
          - WEBM
          - MP3
          - COPY
          - AAC
          example: FLV
          format: string
          items: {}
          type: string
        name:
          example: maria
          format: string
          type: string
        copy:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        video_codec:
          description: ""
          enum:
          - H264
          - HEVC
          - THEORA
          - VP8
          - VP9
          - COPY
          - H263
          example: H264
          format: string
          items: {}
          type: string
        video_aspect:
          description: ""
          enum:
          - LETTERBOX
          - STRETCH
          - FILL
          - KEEP_RATIO
          - COPY
          example: LETTERBOX
          format: string
          items: {}
          type: string
        video_fps:
          format: float
          type: string
        audio_codec:
          description: ""
          enum:
          - AAC
          - HE_AAC
          - FLAC
          - MP3
          - VORBIS
          - COPY
          - OPUS
          example: AAC
          format: string
          items: {}
          type: string
        audio_channel:
          description: ""
          enum:
          - MONO_1_0
          - STEREO_2_0
          - STEREO_2_1
          - SURROUND_4_1
          - SURROUND_5_1
          - SURROUND_6_1
          - SURROUND_7_1
          example: MONO_1_0
          format: string
          items: {}
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        owned:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        preset:
          description: ""
          items:
            $ref: '#/components/schemas/Api_EncodingPreset'
          type: array
        streams:
          description: ""
          items:
            $ref: '#/components/schemas/Api_EncodingStream'
          type: array
    Api_OverlayLogo:
      description: OverlayLogo
      example:
        logo_id: 42
        uuidSequence:
          uuidSequence: null
          model_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          model: null
          model_id: 42
          id: 1jhvl2uqa5v8a
          uuid: maria
        link:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        index: 42
        created_at: 2021-09-15T14:23:41+00:00
        media:
        - null
        - null
        uuid: maria
        deleted_at: 2021-09-15T14:23:41+00:00
        updated_at: 2021-09-15T14:23:41+00:00
        activities:
        - actor: null
          context: maria
          cause: ELOQUENT_CREATED
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
          message: maria
        - actor: null
          context: maria
          cause: ELOQUENT_CREATED
          created_at: 2021-09-15T14:23:41+00:00
          media:
          - null
          - null
          message: maria
        media_id: 42
        progress: progress
        logo:
        - null
        - null
        id: 1jhvl2uqa5v8a
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        uuid:
          example: maria
          format: string
          type: string
        media_id:
          example: 42
          format: int32
          type: number
        logo_id:
          example: 42
          format: int32
          type: number
        index:
          example: 42
          format: int32
          type: number
        progress:
          format: float
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        activities:
          description: ""
          items:
            $ref: '#/components/schemas/Api_MediaActivity'
          type: array
        link:
          $ref: '#/components/schemas/Api_Link'
        logo:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Logo'
          type: array
        media:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Media'
          type: array
        uuidSequence:
          $ref: '#/components/schemas/Api_UuidSequence'
    Api_UuidSequence:
      description: UuidSequence
      example:
        uuidSequence: null
        model_type: maria
        created_at: 2021-09-15T14:23:41+00:00
        model: null
        model_id: 42
        id: 1jhvl2uqa5v8a
        uuid: maria
      properties:
        uuid:
          example: maria
          format: string
          type: string
        model_type:
          example: maria
          format: string
          type: string
        model_id:
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        model:
          $ref: '#/components/schemas/Api_UuidSequence'
        uuidSequence:
          $ref: '#/components/schemas/Api_UuidSequence'
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
    media_manifests:
      description: manifest
      example:
        xml:
          data:
            format: XML
          mimetype: application/xml
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
        json:
          data:
            format: JSON
          mimetype: application/json
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
        yml:
          mimetype: text/yaml
          ' data':
            format: YAML
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
        v1xml:
          data:
            format: XML (v1 compatibility)
          mimetype: application/xml
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
        yaml:
          data:
            format: YAML
          mimetype: text/yaml
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
      properties:
        json:
          $ref: '#/components/schemas/media_manifests_json'
        xml:
          $ref: '#/components/schemas/media_manifests_xml'
        v1xml:
          $ref: '#/components/schemas/media_manifests_v1xml'
        yaml:
          $ref: '#/components/schemas/media_manifests_yaml'
        yml:
          $ref: '#/components/schemas/media_manifests_yml'
    media_playbacks:
      description: playbacks
      example:
        encodingId:
          strategy:
            mimetype: video/mp4
            ' data':
              encoding: Copy source
              strategy: Progressive download (Best available)
              key: "null"
            url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
      properties:
        encodingId:
          $ref: '#/components/schemas/media_playbacks_encodingId'
    Api_Annotation:
      description: Annotation
      example:
        updated_at: 2021-09-15T14:23:41+00:00
        created_at: 2021-09-15T14:23:41+00:00
        from: from
        id: 1jhvl2uqa5v8a
        published: true
        to: to
        body: maria
        deleted_at: 2021-09-15T14:23:41+00:00
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        body:
          example: maria
          format: string
          type: string
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        from:
          format: float
          type: string
        to:
          format: float
          type: string
    Api_Subtitle:
      description: Subtitle
      example:
        default: true
        updated_at: 2021-09-15T14:23:41+00:00
        name: maria
        link:
        - link
        - link
        created_at: 2021-09-15T14:23:41+00:00
        language:
        - endonym: maria
          name: maria
          id: maria
        - endonym: maria
          name: maria
          id: maria
        id: 1jhvl2uqa5v8a
        published: true
        lines: lines
        deleted_at: 2021-09-15T14:23:41+00:00
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        lines:
          format: string
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        name:
          example: maria
          format: string
          type: string
        published:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        default:
          enum:
          - true
          - false
          example: true
          format: string
          type: bool
        link:
          description: ""
          items:
            type: string
          type: array
        language:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Language'
          type: array
    Api_Upload:
      description: Upload
      example:
        ready_at: 2021-09-15T14:23:41+00:00
        meta:
          nb_programs: 42
          format_long_name: maria
          sample_aspect_ratio_source: ""
          created_at: 2021-09-15T14:23:41+00:00
          nb_streams: 42
          tags: tags
          duration: maria
          start_time: maria
          bit_rate: 42
          sample_aspect_ratio: ""
          size: 42
          updated_at: 2021-09-15T14:23:41+00:00
          probe_score: 42
          display_aspect_ratio_source: ""
          display_aspect_ratio: ""
          width: ""
          format_name: maria
          height: ""
        index: 0
        progress: 50
        created_at: 2021-09-15T14:23:41+00:00
        id: 1jhvl2uqa5v8a
        url: ""
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        index:
          example: 0
          type: number
        progress:
          description: percentage
          example: 50
          type: number
        url: {}
        ready_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        meta:
          $ref: '#/components/schemas/Api_UploadMeta'
    Api_MediaActivity:
      description: MediaActivity
      example:
        actor: null
        context: maria
        cause: ELOQUENT_CREATED
        created_at: 2021-09-15T14:23:41+00:00
        media:
        - null
        - null
        message: maria
      properties:
        cause:
          description: ""
          enum:
          - ELOQUENT_CREATED
          - ELOQUENT_RESTORED
          - ELOQUENT_REMOVED
          - ELOQUENT_UNREMOVED
          - ELOQUENT_DELETED
          - UPLOAD_INITIALIZING
          - UPLOAD_PULLING
          - UPLOAD_PULLED
          - UPLOAD_PUSHING
          - UPLOAD_PUSHED
          - UPLOAD_FAILED
          - AUDIO_SAMPLE_GENERATED
          - AUDIO_SAMPLE_GENERATING
          - AUDIO_WAVEFORM_GENERATED
          - AUDIO_WAVEFORM_GENERATING
          - SCENES_GENERATED
          - SCENES_GENERATING
          - THUMBNAIL_GENERATION_FAILED
          - THUMBSTRIP_GENERATED
          - THUMBSTRIP_GENERATING
          - VIDEO_PREVIEW_GENERATED
          - VIDEO_PREVIEW_GENERATING
          - VIDEO_SAMPLE_GENERATED
          - VIDEO_SAMPLE_GENERATING
          - VIDEO_THUMBNAIL_GENERATED
          - VIDEO_THUMBNAIL_GENERATING
          - ENCODING
          - VIDEO_POSTER_GENERATED
          - VIDEO_POSTER_GENERATING
          - FILE_STORING
          - FILE_STORED
          - ENCODING_QUEUED
          - ENCODING_STARTED
          - ENCODING_FINISHED
          - ENCODING_FAILED
          example: ELOQUENT_CREATED
          format: string
          items: {}
          type: string
        message:
          example: maria
          format: string
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        context:
          example: maria
          format: string
          type: string
        actor:
          $ref: '#/components/schemas/Api_MediaActivity'
        media:
          description: ""
          items:
            $ref: '#/components/schemas/Api_Media'
          type: array
    color:
      example: '#FF0077'
      type: string
    Api_Ad:
      description: Ad
      example:
        offset: maria
        mimetype: maria
        id: 1jhvl2uqa5v8a
        href: maria
        type: PRE_ROLL
        url: https://infomaniak.com
        tracking_id: maria
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        url:
          example: https://infomaniak.com
          format: string
          type: string
        mimetype:
          example: maria
          format: string
          type: string
        href:
          example: maria
          format: string
          type: string
        type:
          description: ""
          enum:
          - PRE_ROLL
          - MID_ROLL
          - PST_ROLL
          example: PRE_ROLL
          format: string
          items: {}
          type: string
        offset:
          example: maria
          format: string
          type: string
        tracking_id:
          example: maria
          format: string
          type: string
    Api_PlaylistItem:
      description: PlaylistItem
      properties:
        id:
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        position:
          example: 42
          format: int32
          type: number
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        deleted_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        type:
          example: maria
          format: string
          type: string
        model:
          $ref: '#/components/schemas/Api_PlaylistItem'
    Api_UploadMeta:
      description: UploadMeta
      example:
        nb_programs: 42
        format_long_name: maria
        sample_aspect_ratio_source: ""
        created_at: 2021-09-15T14:23:41+00:00
        nb_streams: 42
        tags: tags
        duration: maria
        start_time: maria
        bit_rate: 42
        sample_aspect_ratio: ""
        size: 42
        updated_at: 2021-09-15T14:23:41+00:00
        probe_score: 42
        display_aspect_ratio_source: ""
        display_aspect_ratio: ""
        width: ""
        format_name: maria
        height: ""
      properties:
        nb_streams:
          example: 42
          format: int32
          type: number
        nb_programs:
          example: 42
          format: int32
          type: number
        format_name:
          example: maria
          format: string
          type: string
        format_long_name:
          example: maria
          format: string
          type: string
        start_time:
          example: maria
          format: string
          type: timestamp
        duration:
          example: maria
          format: string
          type: string
        size:
          example: 42
          format: int32
          type: number
        bit_rate:
          description: In bps
          example: 42
          format: int32
          type: number
        probe_score:
          example: 42
          format: int32
          type: number
        tags:
          format: string
          type: string
        created_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        updated_at:
          example: 2021-09-15T14:23:41+00:00
          format: string
          type: datetime
        display_aspect_ratio:
          format: string
          type: ""
        display_aspect_ratio_source:
          format: string
          type: ""
        height:
          format: string
          type: ""
        sample_aspect_ratio:
          format: string
          type: ""
        sample_aspect_ratio_source:
          format: string
          type: ""
        width:
          format: string
          type: ""
    Download_Link:
      description: Link
      example:
        size: 42
        size_human_readable: maria
        mimetype: maria
        url: https://infomaniak.com
      properties:
        url:
          example: https://infomaniak.com
          format: string
          type: string
        mimetype:
          example: maria
          format: string
          type: string
        size:
          example: 42
          format: int32
          type: number
        size_human_readable:
          example: maria
          format: string
          type: string
    shortUpload:
      description: upload
      example:
        ready_at: 2022-01-18T08:59:20+00:00
        index: 0
        progress: 50
        created_at: 2022-01-18T08:59:20+00:00
        id: 1jhvl2uqae5sa
        url: https://infomaniak.ch/url.mp4
      properties:
        id:
          example: 1jhvl2uqae5sa
          type: string
        index:
          example: 0
          type: int
        progress:
          example: 50
          type: int
        url:
          example: https://infomaniak.ch/url.mp4
          type: string
        created_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
        ready_at:
          example: 2022-01-18T08:59:20+00:00
          type: datetime
    Tag:
      example:
        color: 4
        product_count: 2
        name: My tag name
        id: 1234
      properties:
        id:
          description: Unique identifier of the resource `Tag`
          example: 1234
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Tag`
          example: My tag name
          title: name
          type: string
        color:
          example: 4
          title: color
          type: integer
        product_count:
          description: Product count related to the resource `Tag`
          example: 2
          title: product_count
          type: integer
      required:
      - color
      - id
      - name
      title: Tag
    Right:
      example:
        statistic: true
        sale: true
        technical: true
        check: true
      properties:
        technical:
          title: technical
          type: boolean
        statistic:
          title: statistic
          type: boolean
        check:
          title: check
          type: boolean
        sale:
          title: sale
          type: boolean
      title: Right
    Productstatus:
      example:
        activated_at: 2
        activated_by:
        - activated_by
        - activated_by
        locked:
          infomaniak: true
          superuser: true
        maintenance:
          technical: true
          infomaniak: true
          superuser: true
      properties:
        maintenance:
          $ref: '#/components/schemas/maintenance'
        locked:
          $ref: '#/components/schemas/locked'
        activated_by:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        activated_at:
          format: timestamp
          title: activated_at
          type: integer
      required:
      - activated_at
      - activated_by
      - locked
      - maintenance
      title: Product status
    ProductUser:
      example:
        user_id: 4
        rights:
          statistic: true
          sale: true
          technical: true
          check: true
      properties:
        user_id:
          title: user_id
          type: integer
        rights:
          $ref: '#/components/schemas/Right'
      required:
      - rights
      - user_id
      title: ProductUser
    SwissBackupPrice:
      example:
        unit: 1
        amount: "2.000"
        amount_excl_vat: "1.860"
        currency: 1
        type: slot
      properties:
        type:
          description: Type of the resource `Swiss Backup Price`
          example: slot
          title: type
          type: string
        unit:
          example: 1
          title: unit
          type: integer
        currency:
          example: 1
          title: currency
          type: integer
        amount:
          description: Amount incl. VAT
          example: "2.000"
          title: amount
          type: string
        amount_excl_vat:
          description: Amount excl. VAT
          example: "1.860"
          title: amount_excl_vat
          type: string
      required:
      - amount
      - amount_excl_vat
      - currency
      - type
      - unit
      title: Swiss Backup Price
    SwissBackupDiscount:
      example:
        periodicity: 2
        label: 2_years
        value: 20
      properties:
        label:
          example: 2_years
          title: label
          type: string
        periodicity:
          description: Commitment period (in years)
          example: 2
          title: periodicity
          type: integer
        value:
          example: 20
          title: value
          type: integer
      required:
      - label
      - periodicity
      - value
      title: Swiss Backup Discount
    StreamStored:
      properties:
        id:
          description: Unique identifier of the resource `Stream`
          example: 1
          title: Unique identifier
          type: integer
        mountpoint:
          description: The mountpoint to access to the stream
          title: mountpoint
          type: string
        codec:
          description: The codec used in the stream
          title: codec
          type: integer
        bitrate:
          description: The bitrate used to in the stream
          title: bitrate
          type: integer
        password:
          description: The password to access to the protected pages
          title: password
          type: string
        url:
          description: The url to listen the stream
          title: url
          type: string
        server_address:
          description: The server address to connect encoder
          title: server_address
          type: string
        fallback_mountpoint:
          description: The mountpoint used to fallback the stream
          title: fallback_mountpoint
          type: string
        is_relay:
          description: Define if the stream is a relay stream
          title: is_relay
          type: boolean
        is_source:
          description: Define if the stream is used like a source for HlsStream or
            Transcoding
          title: is_source
          type: boolean
        is_transcoding:
          description: Define if the stream is a transcoded stream
          title: is_transcoding
          type: boolean
        is_fallback:
          description: Is the `Stream` is a fallback?
          example: true
          title: is_fallback
          type: boolean
      required:
      - bitrate
      - codec
      - fallback_mountpoint
      - id
      - is_fallback
      - is_relay
      - is_source
      - is_transcoding
      - mountpoint
      - password
      - server_address
      - url
      title: Stream Stored
    PackPrice:
      example:
        periodicity_id: 1
        periodicity: MONTH
        price_excluding_vat: 15.2
        currency: CHF
        id: 1
      properties:
        id:
          description: Unique identifier of the resource `PackPrice`
          example: 1
          title: Unique identifier
          type: integer
        price_excluding_vat:
          description: The `PackPrice` without vat
          example: 15.2
          title: price_excluding_vat
          type: number
        currency:
          description: The `PackPrice` currency
          enum:
          - CHF
          - EUR
          example: CHF
          title: currency
          type: string
        periodicity:
          description: The `PackPrice` time range
          enum:
          - MONTH
          - YEAR
          example: MONTH
          title: periodicity
          type: string
        periodicity_id:
          description: Unique identifier of the resource `Periodicity`
          enum:
          - "1"
          - "2"
          example: 1
          title: periodicity_id
          type: integer
      required:
      - currency
      - id
      - periodicity
      - periodicity_id
      - price_excluding_vat
      title: PackPrice
    StreamSimplify:
      properties:
        id:
          description: Unique identifier of the resource `Stream`
          example: 1
          title: Unique identifier
          type: integer
        type:
          description: The type of stream
          example: standard
          title: type
          type: string
        mountpoint:
          description: The mountpoint to access to the stream
          title: mountpoint
          type: string
        codec:
          description: The codec used in the stream
          title: codec
          type: integer
        bitrate:
          description: The bitrate used to in the stream
          title: bitrate
          type: string
        is_source:
          description: Define if the stream is used like a source for HlsStream or
            Transcoding
          title: is_source
          type: boolean
        is_fallback:
          description: Is the `Stream` is a fallback?
          example: true
          title: is_fallback
          type: boolean
      required:
      - bitrate
      - codec
      - id
      - is_fallback
      - is_source
      - mountpoint
      - type
      title: Stream Simplify
    StatListenerPerMinuteStats:
      example:
        date: "1679754593"
        listeners: 10
      properties:
        date:
          description: The date of the listeners stat
          example: "1679754593"
          title: date
          type: string
        listeners:
          description: The number of listeners
          example: 10
          title: listeners
          type: integer
      required:
      - date
      - listeners
      title: StatListenerPerMinuteStats
    ProductAdminUser:
      example:
        user_id: 4
        display_name: display_name
        email: email
      properties:
        user_id:
          title: user_id
          type: integer
        email:
          description: Email
          title: email
          type: string
        display_name:
          description: Display name
          title: display_name
          type: string
      required:
      - display_name
      - email
      - user_id
      title: ProductAdminUser
    PublicCloudPrice:
      properties:
        CHF_excl_tax:
          example: 124.51
          title: CHF_excl_tax
          type: number
        CHF_incl_tax:
          example: 136.36
          title: CHF_incl_tax
          type: number
        EUR_excl_tax:
          example: 118.21
          title: EUR_excl_tax
          type: number
        EUR_incl_tax:
          example: 138.49
          title: EUR_incl_tax
          type: number
      required:
      - CHF_excl_tax
      - CHF_incl_tax
      - EUR_excl_tax
      - EUR_incl_tax
      title: Public Cloud Price
    MailboxBase:
      example:
        mailbox_idn: user@êxample.com
        mailbox: user@xn--xample-hva.com
        mailbox_name: user
      properties:
        mailbox_name:
          description: |+
            The username (that is the part before the @) of the email address

          example: user
          format: email
          title: mailbox_name
          type: string
        mailbox:
          description: |+
            Full email address

          example: user@xn--xample-hva.com
          format: email
          title: mailbox
          type: string
        mailbox_idn:
          description: |+
            Full email address with internationalized domain name (IDN) format

          example: user@êxample.com
          format: email
          title: mailbox_idn
          type: string
      required:
      - mailbox
      - mailbox_idn
      - mailbox_name
      title: MailboxBase
    MailUser:
      example:
        last_login_at: "{}"
        is_deleted: true
        permissions:
          can_manage_auto_reply: true
          can_manage_redirections: true
          can_manage_aliases: true
          can_configure_mail_folders: true
          can_manage_security: true
          can_manage_signatures: true
          can_manage_filters: true
          can_change_password: true
        name: name
        id: 3
        avatar: http://example.com/aeiou
        email: email
        has_double_auth: true
      properties:
        id:
          description: |+
            WorkspaceUser identifier

          title: id
          type: integer
        email:
          description: |+
            Email

          format: email
          title: email
          type: string
        name:
          description: |+
            Name

          title: name
          type: string
        is_deleted:
          description: |+
            True if deleted

          title: is_deleted
          type: boolean
        avatar:
          description: |+
            Avatar url

          format: url
          title: avatar
          type: string
        last_login_at:
          description: |+
            Last login timestamp

          format: timestamp
          title: last_login_at
          type: object
        has_double_auth:
          description: |+
            True if double authentication is enabled

          title: has_double_auth
          type: boolean
        permissions:
          $ref: '#/components/schemas/MailPermissions'
      title: MailUser
    MailMailboxPermissions:
      allOf:
      - $ref: '#/components/schemas/MailPermissions'
      - properties:
          has_technical_right:
            description: |+
              Has technical right

            title: has_technical_right
            type: boolean
          is_linked_to_user:
            description: |+
              Is linked to user

            title: is_linked_to_user
            type: boolean
        title: MailMailboxPermissions
      example:
        has_technical_right: true
        is_linked_to_user: true
        can_manage_auto_reply: true
        can_manage_redirections: true
        can_manage_aliases: true
        can_configure_mail_folders: true
        can_manage_security: true
        can_manage_signatures: true
        can_manage_filters: true
        can_change_password: true
      title: MailMailboxPermissions
    MailPermissions:
      description: Permissions
      example:
        can_manage_auto_reply: true
        can_manage_redirections: true
        can_manage_aliases: true
        can_configure_mail_folders: true
        can_manage_security: true
        can_manage_signatures: true
        can_manage_filters: true
        can_change_password: true
      properties:
        can_manage_filters:
          description: |+
            Manage filters

          title: can_manage_filters
          type: boolean
        can_manage_security:
          description: |+
            Manage security

          title: can_manage_security
          type: boolean
        can_manage_aliases:
          description: |+
            Manage aliases

          title: can_manage_aliases
          type: boolean
        can_manage_redirections:
          description: |+
            Manage redirections

          title: can_manage_redirections
          type: boolean
        can_manage_signatures:
          description: |+
            Manage signatures

          title: can_manage_signatures
          type: boolean
        can_manage_auto_reply:
          description: |+
            Manage auto reply

          title: can_manage_auto_reply
          type: boolean
        can_change_password:
          description: |+
            Change password

          title: can_change_password
          type: boolean
        can_configure_mail_folders:
          description: |+
            Configure mail folders

          title: can_configure_mail_folders
          type: boolean
      title: MailPermissions
    MailingListSubscriber:
      properties:
        full_name:
          description: |+
            full_name

          title: full_name
          type: string
        mail:
          description: |+
            Full email address

          format: email
          title: mail
          type: string
        mail_idn:
          description: |+
            Full email address with IDN format

          format: email
          title: mail_idn
          type: string
        config:
          $ref: '#/components/schemas/config'
      title: MailingListSubscriber
    DomainRights:
      description: Rights
      example:
        statistic: true
        sale: true
        technical: true
        check: true
      properties:
        technical:
          description: |+
            Technical

          title: technical
          type: boolean
        statistic:
          description: |+
            Technical

          title: statistic
          type: boolean
        check:
          description: |+
            Technical

          title: check
          type: boolean
        sale:
          description: |+
            Technical

          title: sale
          type: boolean
      title: DomainRights
    MailDiagnosticDns:
      description: Diagnostic dns
      example:
        has_error: true
      properties:
        has_error:
          description: |+
            Has error

          title: has_error
          type: boolean
      title: MailDiagnosticDns
    MailPack:
      description: Pack
      example:
        is_starter: true
        has_newsletter_tool: true
        has_list_tool: true
        description: description
        additional_paid_email: 7
        id: 4
        free_additional_email: 1
      properties:
        id:
          description: |+
            Ressource identifier

          title: id
          type: integer
        description:
          description: |+
            Description

          title: description
          type: string
        is_starter:
          description: |+
            Is starter

          title: is_starter
          type: boolean
        has_list_tool:
          description: |+
            Has list tool

          title: has_list_tool
          type: boolean
        has_newsletter_tool:
          description: |+
            Has newsletter tool

          title: has_newsletter_tool
          type: boolean
        additional_paid_email:
          description: |+
            Additional paid email

          title: additional_paid_email
          type: integer
        free_additional_email:
          description: |+
            Free additional email

          title: free_additional_email
          type: integer
      title: MailPack
    WorkspaceUserMail:
      example:
        is_deleted: true
        name: name
        mailboxes:
        - mailbox_idn: user@êxample.com
          mailbox: user@xn--xample-hva.com
          mailbox_name: user
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
        - mailbox_idn: user@êxample.com
          mailbox: user@xn--xample-hva.com
          mailbox_name: user
          permissions:
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
        id: 0
        avatar: http://example.com/aeiou
        email: email
        has_double_auth: true
        is_unified: true
      properties:
        id:
          description: |+
            WorkspaceUser identifier

          title: id
          type: integer
        email:
          description: |+
            Email

          format: email
          title: email
          type: string
        name:
          description: |+
            Name

          title: name
          type: string
        is_deleted:
          description: |+
            True if deleted

          title: is_deleted
          type: boolean
        is_unified:
          description: |+
            True if unified passwords

          title: is_unified
          type: boolean
        avatar:
          description: |+
            Avatar url

          format: url
          title: avatar
          type: string
        has_double_auth:
          description: |+
            True if double authentication is enabled

          title: has_double_auth
          type: boolean
        mailboxes:
          items:
            $ref: '#/components/schemas/WorkspaceUserMailbox'
          type: array
      title: WorkspaceUserMail
    WorkspaceUserMailbox:
      allOf:
      - $ref: '#/components/schemas/MailboxBase'
      - properties:
          permissions:
            $ref: '#/components/schemas/MailPermissions'
        title: WorkspaceUserMailbox
      example:
        mailbox_idn: user@êxample.com
        mailbox: user@xn--xample-hva.com
        mailbox_name: user
        permissions:
          can_manage_auto_reply: true
          can_manage_redirections: true
          can_manage_aliases: true
          can_configure_mail_folders: true
          can_manage_security: true
          can_manage_signatures: true
          can_manage_filters: true
          can_change_password: true
      title: WorkspaceUserMailbox
    ValidEmail:
      example:
        is_removable: is_removable
        email_idn: email_idn
        is_account: is_account
        id: 2
        is_verified: is_verified
        email: email
      properties:
        id:
          description: Unique identifier of the resource `ValidEmail`
          title: Unique identifier
          type: integer
        email:
          description: Email
          title: email
          type: string
        email_idn:
          title: email_idn
          type: string
        is_account:
          title: is_account
          type: string
        is_verified:
          title: is_verified
          type: string
        is_removable:
          title: is_removable
          type: string
      required:
      - email
      - email_idn
      - id
      - is_account
      - is_removable
      - is_verified
      title: ValidEmail
    HardwareModel:
      properties:
        id: {}
        name: {}
        description: {}
        generation:
          format: string
        equipment_type_id:
          format: string
        manufacturer_id:
          format: string
        shortname_alias:
          format: string
        site_id:
          format: string
        schema_id:
          format: string
        factory_path: {}
        created_at:
          format: date
        skip_serial:
          format: string
        deleted_at:
          format: date
        updated_at:
          format: date
      title: HardwareModel
    EquipmentBase:
      properties:
        id:
          description: Unique identifier of the resource `EquipmentBase`
          title: Unique identifier
          type: integer
        serial_number:
          example: WSJSJS45
          title: serial_number
          type: string
        name:
          description: Name of equipment
          example: swift03-swiftstore-10
          title: name
          type: string
        type:
          description: Type of equipment
          example: server
          title: type
          type: string
        status:
          description: Status of equipment
          example: available
          title: status
          type: string
        created_at:
          description: Date of creation
          format: timestamp
          title: created_at
          type: integer
        hardware_model:
          $ref: '#/components/schemas/HardwareModel'
        specification:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        ancestors:
          items:
            $ref: '#/components/schemas/EquipmentBase'
          type: array
        description:
          description: Description of the resource `EquipmentBase`
          title: description
          type: string
        serial_number_2:
          description: Some equipments have 2 SN
          example: WSJSJS95
          title: serial_number_2
          type: string
        order:
          description: Order details
          title: order
          type: string
        tags:
          items:
            $ref: '#/components/schemas/EquipmentTag'
          type: array
        root_name:
          description: Name of datacenter
          example: Datacenter 3 production
          title: root_name
          type: string
      required:
      - created_at
      - id
      - name
      - root_name
      - serial_number
      - status
      - type
      title: EquipmentBase
    EquipmentTag:
      properties:
        id:
          description: Unique identifier of the resource `EquipmentTag`
          title: Unique identifier
          type: integer
        name:
          description: Name of tag
          example: kDrive
          title: name
          type: string
        category:
          description: Category of tag
          example: Team
          title: category
          type: string
      required:
      - category
      - id
      - name
      title: EquipmentTag
    PhysicalServer:
      properties:
        id:
          description: Unique identifier of the resource `PhysicalServer`
          title: Unique identifier
          type: integer
        cpu_description:
          example: Xeon L5320
          title: cpu_description
          type: string
        memory_description:
          example: 8GB (4x2GB Dual Rank DIMMs)
          title: memory_description
          type: string
        storage_description:
          title: storage_description
          type: string
        main_server:
          $ref: '#/components/schemas/LogicalServer'
        servers:
          items:
            $ref: '#/components/schemas/LogicalServer'
          type: array
      required:
      - cpu_description
      - id
      - main_server
      - memory_description
      - servers
      - storage_description
      title: PhysicalServer
    LogicalServer:
      description: "This model represents a logical server, could be a main server\
        \ or a VM."
      properties:
        server_id:
          title: server_id
          type: integer
        name:
          description: Name of the resource `LogicalServer`
          title: name
          type: string
        description:
          description: Description of the resource `LogicalServer`
          title: description
          type: string
        type:
          enum:
          - DMU
          - IMU
          - NAS
          - NMU
          - NTU
          - OS
          - VMU
          - VNU
          - XEN
          - XENMU
          title: type
          type: string
        cpu:
          description: count of allowed CPU
          title: cpu
          type: integer
        ram:
          description: quantity of allowed RAM
          title: ram
          type: integer
        ipv4:
          title: ipv4
          type: string
          nullable: true
        ipv6:
          title: ipv6
          type: string
          nullable: true
        parent_id:
          title: parent_id
          type: integer
        parent_equipment:
          $ref: '#/components/schemas/EquipmentServer'
        created_at:
          description: Timestamp `LogicalServer` has been created
          format: timestamp
          title: created_at
          type: integer
      required:
      - cpu
      - created_at
      - description
      - ipv4
      - ipv6
      - name
      - parent_id
      - ram
      - server_id
      - type
      title: LogicalServer
    EquipmentServer:
      properties:
        id:
          description: Unique identifier of the resource `EquipmentServer`
          title: Unique identifier
          type: integer
        serial_number:
          example: WSJSJS45Z
          title: serial_number
          type: string
        name:
          description: Name of equipment
          example: swift03-swiftstore-10
          title: name
          type: string
        type:
          description: Type of equipment
          example: server
          title: type
          type: string
        status:
          description: Status of equipment
          example: available
          title: status
          type: string
        created_at:
          description: Date of creation
          format: timestamp
          title: created_at
          type: integer
        hardware_model:
          $ref: '#/components/schemas/HardwareModel'
        specification:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        ancestors:
          items:
            $ref: '#/components/schemas/EquipmentBase'
          type: array
        description:
          description: Description of the resource `EquipmentServer`
          title: description
          type: string
        serial_number_2:
          description: Some equipments have 2 SN
          example: WSJSJS95
          title: serial_number_2
          type: string
        order:
          description: Order details
          title: order
          type: string
        tags:
          items:
            $ref: '#/components/schemas/EquipmentTag'
          type: array
        root_name:
          description: Name of datacenter
          example: Datacenter 3 production
          title: root_name
          type: string
        rack_name:
          description: Name of installed rack if is in production
          example: A12
          title: rack_name
          type: string
          nullable: true
        rack_id:
          description: Id of installed rack if is in production
          example: 271
          title: rack_id
          type: integer
          nullable: true
        position:
          example: "22"
          title: position
          type: string
          nullable: true
        size:
          description: "Size of server on rack (1U,2U)"
          title: size
          type: string
        components:
          items:
            $ref: '#/components/schemas/EquipmentBase'
        network_infos:
          $ref: '#/components/schemas/PhysicalServer'
        interfaces:
          title: interfaces
          type: string
      required:
      - created_at
      - id
      - name
      - position
      - rack_id
      - rack_name
      - root_name
      - serial_number
      - size
      - status
      - type
      title: EquipmentServer
    Reservation:
      properties:
        id:
          description: Unique identifier of the resource `Reservation`
          title: Unique identifier
          type: string
        position:
          description: Position of reservation
          example: 40
          title: position
          type: integer
        type:
          description: Type of reservation
          example: patch_panel
          title: type
          type: string
      required:
      - id
      - position
      - type
      title: Reservation
    PartnerInvitationData:
      properties:
        partner_id:
          title: partner_id
          type: integer
        full_access:
          description: Describes the type of access the partner has on its client
          title: full_access
          type: boolean
        products:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - full_access
      - partner_id
      title: PartnerInvitationData
    Partner:
      properties:
        id:
          description: Unique identifier of the resource `Partner`
          example: 414
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Partner`
          example: The WebAgency
          title: name
          type: string
        image:
          title: image
          type: string
        is_active:
          example: true
          title: is_active
          type: boolean
        budget_min:
          example: 100
          title: budget_min
          type: integer
        budget_max:
          example: 2000
          title: budget_max
          type: integer
        email:
          description: Email
          example: partner@infomaniak.com
          title: email
          type: string
        is_premium:
          example: true
          title: is_premium
          type: boolean
        created_at:
          description: Timestamp `Partner` has been created
          format: timestamp
          title: created_at
          type: integer
        description:
          description: Description of the resource `Partner`
          title: description
          type: string
        description_en:
          title: description_en
          type: string
        description_de:
          title: description_de
          type: string
        description_it:
          title: description_it
          type: string
        description_es:
          title: description_es
          type: string
        addresses:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        skills:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        skills_by_domain:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        skills_by_activity:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        references:
          title: references
          type: string
        certifications:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        languages:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        available_languages:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        tenders:
          title: tenders
          type: string
        opinions:
          title: opinions
          type: string
        messages:
          title: messages
          type: string
        note:
          title: note
          type: string
        medal:
          title: medal
          type: integer
        products:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        invoices:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - budget_max
      - budget_min
      - created_at
      - email
      - id
      - image
      - is_active
      - is_premium
      - name
      title: Partner
    Accountaddress:
      example:
        zip: "1227"
        country:
          locations:
          - locations
          - locations
          from: 0
          to: 6
        for_invoice: true
        city: Genève
        street: Rue Eugène-Marziano 25
        created_at: 1558601584
        id: 1234
        street2: ""
        type: professional
      properties:
        id:
          description: Unique identifier of the resource `Account address`
          example: 1234
          title: Unique identifier
          type: integer
        street:
          example: Rue Eugène-Marziano 25
          title: street
          type: string
        street2:
          example: ""
          title: street2
          type: string
        zip:
          example: "1227"
          title: zip
          type: string
        city:
          example: Genève
          title: city
          type: string
        type:
          example: professional
          title: type
          type: string
        created_at:
          description: Timestamp `Account address` has been created
          example: 1558601584
          format: timestamp
          title: created_at
          type: integer
        country:
          $ref: '#/components/schemas/Geolocationressource'
        for_invoice:
          title: for_invoice
          type: boolean
      required:
      - city
      - country
      - created_at
      - id
      - street
      - street2
      - type
      - zip
      title: Account address
    RoleRight:
      properties:
        role_id:
          title: role_id
          type: integer
        service_id:
          description: Unique identifier of the `service` that is related to the resource
            `RoleRight`
          title: service_id
          type: integer
        product_id:
          description: Unique identifier of the `product` that is related to the resource
            `RoleRight`
          title: product_id
          type: integer
        product_unique_id:
          title: product_unique_id
          type: integer
        product_name:
          title: product_name
          type: string
        rights:
          title: rights
          type: string
        created_at:
          description: Timestamp `RoleRight` has been created
          format: timestamp
          title: created_at
          type: integer
      required:
      - created_at
      - rights
      - role_id
      title: RoleRight
    PartnershipIncomeTotal:
      properties:
        amount:
          title: amount
          type: number
        currency:
          example: CHF
          title: currency
          type: string
      required:
      - amount
      - currency
      title: Partnership Income Total
    EventDescription:
      example:
        translations:
        - language: en
          title: Network maintenance
          body: This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
        - language: en
          title: Network maintenance
          body: This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
        description: This maintenance is intended to increase the capacity of our
          network infrastructure in order to accompany the growth of our activities.
        title: Network maintenance
      properties:
        title:
          example: Network maintenance
          title: title
          type: string
        description:
          description: Description of the resource `Event Description`
          example: This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
          title: description
          type: string
        translations:
          items:
            $ref: '#/components/schemas/EventTranslation'
          type: array
      required:
      - description
      - title
      - translations
      title: Event Description
    EventTag:
      example:
        name: hosting
        id: 1
        type: null
      properties:
        id:
          description: Unique identifier of the resource `Event Tag`
          example: 1
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Event Tag`
          example: hosting
          title: name
          type: string
        type:
          $ref: '#/components/schemas/EventTag'
      required:
      - id
      - name
      title: Event Tag
    EventTranslation:
      example:
        language: en
        title: Network maintenance
        body: This maintenance is intended to increase the capacity of our network
          infrastructure in order to accompany the growth of our activities.
      properties:
        title:
          example: Network maintenance
          title: title
          type: string
        body:
          example: This maintenance is intended to increase the capacity of our network
            infrastructure in order to accompany the growth of our activities.
          title: body
          type: string
        language:
          enum:
          - de
          - en
          - es
          - fr
          - it
          example: en
          title: language
          type: string
      required:
      - body
      - language
      - title
      title: Event Translation
    Usersession:
      example:
        browser: browser
        ip: ip
        location: location
        last_accessed_at: 6
        device: device
        user_agent: user_agent
      properties:
        browser:
          title: browser
          type: string
        last_accessed_at:
          format: timestamp
          title: last_accessed_at
          type: integer
        device:
          title: device
          type: string
        location:
          title: location
          type: string
        ip:
          title: ip
          type: string
        user_agent:
          title: user_agent
          type: string
      required:
      - browser
      - device
      - ip
      - last_accessed_at
      - location
      - user_agent
      title: User session
    Userauthdevice:
      example:
        user_ip: user_ip
        updated_at: 3
        name: name
        last_connexion: 7
        created_at: 9
        id: 2
        device: device
        deleted_at: 2
        user_agent: user_agent
      properties:
        id:
          description: Unique identifier of the resource `User auth device`
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `User auth device`
          title: name
          type: string
        last_connexion:
          format: timestamp
          title: last_connexion
          type: integer
        user_agent:
          title: user_agent
          type: string
        user_ip:
          title: user_ip
          type: string
        device:
          title: device
          type: string
        created_at:
          description: Timestamp `User auth device` has been created
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `User auth device` has been updated
          format: timestamp
          title: updated_at
          type: integer
        deleted_at:
          description: Timestamp `User auth device` has been deleted
          format: timestamp
          title: deleted_at
          type: integer
      required:
      - created_at
      - deleted_at
      - device
      - id
      - last_connexion
      - name
      - updated_at
      - user_agent
      - user_ip
      title: User auth device
    Userconnection:
      example:
        unsuccessful_rate_limit: 4
        successful_notification: true
        unsuccessful_notification: true
        unsuccessful_limit: true
      properties:
        unsuccessful_limit:
          title: unsuccessful_limit
          type: boolean
        unsuccessful_rate_limit:
          title: unsuccessful_rate_limit
          type: integer
        unsuccessful_notification:
          title: unsuccessful_notification
          type: boolean
        successful_notification:
          title: successful_notification
          type: boolean
      required:
      - successful_notification
      - unsuccessful_limit
      - unsuccessful_notification
      - unsuccessful_rate_limit
      title: User connection
    Useremail_f4611cfe:
      properties:
        id:
          description: Unique identifier of the resource `User email`
          title: Unique identifier
          type: integer
        email:
          description: Email
          example: tony@stark-industries.com
          title: email
          type: string
        created_at:
          description: Timestamp `User email` has been created
          format: timestamp
          title: created_at
          type: integer
        reminder:
          example: true
          title: reminder
          type: boolean
        checked:
          title: checked
          type: boolean
        type:
          example: email_request
          title: type
          type: string
      required:
      - checked
      - created_at
      - email
      - id
      - reminder
      - type
      title: User email
    Country_e76d7464:
      properties:
        id:
          description: Unique identifier of the resource `Country`
          example: 203
          format: int32
          title: Unique identifier
          type: integer
        short:
          example: CH
          title: short
          type: string
        name:
          description: Name of the resource `Country`
          example: SWITZERLAND
          title: name
          type: string
        enabled:
          example: true
          title: enabled
          type: boolean
      required:
      - enabled
      - id
      - name
      - short
      title: Country
    Usersecretquestion:
      properties:
        secret_question_id:
          title: secret_question_id
          type: integer
        secret_answer:
          title: secret_answer
          type: string
      required:
      - secret_answer
      - secret_question_id
      title: User secret question
    Drive:
      properties:
        id:
          description: Id of the kDrive
          title: Unique identifier
          type: integer
        name:
          description: Name of the kDrive
          title: name
          type: string
        size:
          description: Maximum space (in bytes)
          title: size
          type: integer
        used_size:
          description: Used space (in bytes)
          title: used_size
          type: integer
        created_at:
          description: Creation timestamp
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        updated_at:
          description: Last update timestamp
          format: timestamp
          title: updated_at
          type: integer
          nullable: true
        in_maintenance:
          description: When maintenance is activated
          title: in_maintenance
          type: boolean
        maintenance_reason:
          description: "Reason of Drive maintenance.<note><strong>demo_end</strong>:\
            \ The demonstration period of the Drive has come to an end.</note><note><strong>invoice_overdue</strong>:\
            \ An invoice for this Drive is currently unpaid.</note><note><strong>not_renew</strong>:\
            \ This Drive has expired and must be renewed.</note>"
          enum:
          - demo_end
          - invoice_overdue
          - not_renew
          - technical
          example: demo_end
          title: maintenance_reason
          type: string
        maintenance_at:
          description: When maintenance was activated at
          format: timestamp
          title: maintenance_at
          type: integer
          nullable: true
        maintenance_types:
          items:
            $ref: '#/components/schemas/MaintenanceType'
          type: array
        version:
          description: Backend version
          title: version
          type: string
        users_count:
          description: Number of user slots used
          title: users_count
          type: integer
        users_quota:
          description: Maximum number of users for this kdrive
          title: users_quota
          type: integer
        product_id:
          description: Unique id of the kDrive product
          title: product_id
          type: integer
        account_id:
          description: Id of the account in which the kDrive is
          title: account_id
          type: integer
        account:
          description: Account the Drive belongs to.
          title: account
          type: string
        expired_at:
          description: Product expiration timestamp
          format: timestamp
          title: expired_at
          type: integer
          nullable: true
        is_locked:
          description: If the product is locked
          title: is_locked
          type: boolean
        description:
          description: Custom description of this kDrive
          title: description
          type: string
        bill_reference:
          description: Reference used for billing
          title: bill_reference
          type: string
        is_demo:
          description: If the product is in free trial period
          title: is_demo
          type: boolean
        role:
          description: Role of the current user within this kDrive
          enum:
          - admin
          - external
          - none
          - user
          example: admin
          title: role
          type: string
        account_admin:
          description: Can be managed as admin
          title: account_admin
          type: boolean
        is_in_app_subscription:
          description: Whether this drive has been purchased within an app store
          title: is_in_app_subscription
          type: boolean
        rewind:
          $ref: '#/components/schemas/Rewind'
        invitations_count:
          description: Number of pending invitation.
          title: invitations_count
          type: integer
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        categories_permissions:
          $ref: '#/components/schemas/Categorypermission'
        users:
          $ref: '#/components/schemas/users'
        teams:
          $ref: '#/components/schemas/teams'
        rights:
          $ref: '#/components/schemas/Right'
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        k_suite:
          $ref: '#/components/schemas/k_suite'
        capabilities:
          $ref: '#/components/schemas/capabilities'
        settings:
          $ref: '#/components/schemas/settings'
        preferences:
          $ref: '#/components/schemas/preferences_1'
        pack:
          $ref: '#/components/schemas/PricingPlan'
      required:
      - account_admin
      - account_id
      - created_at
      - expired_at
      - id
      - in_maintenance
      - is_demo
      - is_in_app_subscription
      - is_locked
      - maintenance_at
      - name
      - pack
      - product_id
      - role
      - size
      - updated_at
      - used_size
      - users_count
      - users_quota
      - version
      title: Drive
    UserUuid:
      properties:
        uuid:
          description: Uuid v4
          example: 96df2a1c-e449-441c-ae3a-2191f91fdc7d
          title: uuid
          type: string
        valid_until:
          description: Validity of the Uuid
          format: timestamp
          title: valid_until
          type: integer
      required:
      - uuid
      - valid_until
      title: User Uuid
    MaintenanceType:
      properties:
        name:
          description: Name of active Maintenance Type
          title: name
          type: string
        code:
          description: Active Maintenance Type
          title: code
          type: string
        description:
          description: Short explanation of active Maintenance Type
          title: description
          type: string
      required:
      - code
      - description
      - name
      title: Maintenance Type
    Rewind:
      properties:
        id:
          description: Rewind identifier
          title: Unique identifier
          type: integer
        status:
          description: "Rewind status.<note><strong>canceled</strong>: Rewind was\
            \ canceled by the user and deleted.</note><note><strong>done</strong>:\
            \ Rewind completed successfully.</note><note><strong>drive_not_ready</strong>:\
            \ Rewind cannot start because the drive was not ready (uploads or actions\
            \ in progress).</note><note><strong>expired</strong>: Rewind has expired\
            \ and deleted.</note><note><strong>failed</strong>: Rewind completed with\
            \ errors.</note><note><strong>in_progress</strong>: Rewind is currently\
            \ in progress.</note><note><strong>new</strong>: Rewind did not start.</note><note><strong>sanitizing</strong>:\
            \ Rewind find the activity to sanitize.</note><note><strong>waiting_approval</strong>:\
            \ Rewind waiting user approval to continue.</note>"
          enum:
          - canceled
          - done
          - drive_not_ready
          - expired
          - failed
          - in_progress
          - new
          - sanitizing
          - waiting_approval
          example: canceled
          title: status
          type: string
        mode:
          description: "Rewind type.<note><strong>directory</strong>: Rewind only\
            \ a directory.</note><note><strong>drive</strong>: Rewind all the drive.</note><note><strong>user</strong>:\
            \ Rewind a user's private folder.</note>"
          enum:
          - directory
          - drive
          - user
          example: directory
          title: mode
          type: string
        archiving:
          description: "Rewind archive mode, all created files between now and the\
            \ rewind date will be set to trash or to an archive depending on the mode\
            \ selected.<note><strong>all</strong>: Keep in an archive folder the current\
            \ or trashed files.</note><note><strong>current</strong>: Keep in an archive\
            \ folder the current files.</note><note><strong>none</strong>: Don't build\
            \ an archive, trash all created files.</note>"
          enum:
          - all
          - current
          - none
          example: all
          title: archiving
          type: string
          nullable: true
        directory_id:
          description: The targeted directory of the rewind <note>Filled only in directory
            and user mode</note>
          title: directory_id
          type: integer
          nullable: true
        directory:
          $ref: '#/components/schemas/Directory'
        directory_name:
          description: The name of the directory selected when the directory mode
            is selected
          title: directory_name
          type: string
        user_id:
          description: The targeted user of the rewind <note>Filled only in user mode</note>
          title: user_id
          type: integer
          nullable: true
        rewind_at:
          description: Rewind at
          format: timestamp
          title: rewind_at
          type: integer
        created_at:
          description: created at
          format: timestamp
          title: created_at
          type: integer
        finished_at:
          description: when the rewind is executed the finished process time is save
            here
          format: timestamp
          title: finished_at
          type: integer
        expires_at:
          description: Date of the rewind approval
          format: timestamp
          title: expires_at
          type: integer
        created_by:
          description: created by the user
          format: timestamp
          title: created_by
          type: integer
        is_approved:
          description: Rewind approved by the user
          title: is_approved
          type: boolean
        approval_at:
          description: Date of the rewind approval
          format: timestamp
          title: approval_at
          type: integer
        rewind_name:
          description: The name of the directory choose during approval step
          title: rewind_name
          type: string
        sanitizer:
          $ref: '#/components/schemas/sanitizer'
        summary:
          $ref: '#/components/schemas/summary'
      required:
      - approval_at
      - archiving
      - created_at
      - created_by
      - directory_id
      - expires_at
      - id
      - is_approved
      - mode
      - rewind_at
      - status
      - user_id
      title: Rewind
    Category:
      properties:
        id:
          description: Category identifier
          title: Unique identifier
          type: integer
        name:
          description: Category name
          title: name
          type: string
        color:
          description: Color the Category displays in
          example: '#FF1493'
          title: color
          type: string
        is_predefined:
          description: If the Category is system or user defined
          title: is_predefined
          type: boolean
        created_by:
          description: Unique identifier of the creator of the resource `Category`
          title: created_by
          type: integer
        created_at:
          description: Timestamp `Category` was created at
          format: timestamp
          title: created_at
          type: integer
        user_uses:
          description: Number of uses of the Category
          title: user_uses
          type: integer
      required:
      - color
      - created_at
      - created_by
      - id
      - is_predefined
      - name
      title: Category
    Categorypermission:
      properties:
        can_create:
          description: User can create new categories
          title: can_create
          type: boolean
        can_edit:
          description: User can edit existing categories
          title: can_edit
          type: boolean
        can_delete:
          description: User can delete categories and remove them from files
          title: can_delete
          type: boolean
        can_read_on_file:
          description: User can read the categories that are present on files
          title: can_read_on_file
          type: boolean
        can_put_on_file:
          description: User can add categories to files
          title: can_put_on_file
          type: boolean
      required:
      - can_create
      - can_delete
      - can_edit
      - can_put_on_file
      - can_read_on_file
      title: Category permission
    PricingPlan:
      properties:
        id:
          description: Unique identifier of the resource `Pricing Plan`
          title: Unique identifier
          type: integer
        name:
          description: Name of the resource `Pricing Plan`
          example: team
          title: name
          type: string
        limits:
          $ref: '#/components/schemas/limits'
        prices:
          items:
            $ref: '#/components/schemas/Drivepackprice'
          type: array
        capabilities:
          $ref: '#/components/schemas/capabilities_1'
      required:
      - id
      - name
      title: Pricing Plan
    Directory:
      properties:
        id:
          description: Unique identifier of the resource `Directory`
          title: Unique identifier
          type: integer
        name:
          description: File name
          example: Directory
          title: name
          type: string
        sorted_name:
          description: Specific sortable name
          title: sorted_name
          type: string
        path:
          description: Full path of the Directory
          example: /full/path/Directory
          title: path
          type: string
        type:
          description: Type of returned element either a dir (Directory) or file (File)
          enum:
          - dir
          - file
          example: file
          title: type
          type: string
          nullable: true
        status:
          description: "Current state of Directory. The state can be null meaning\
            \ that the Directory has no specific state.<note><strong>erasing</strong>:\
            \ Directory is currently being erased from the drive.</note><note><strong>locked</strong>:\
            \ Directory is currently locked. No action can be made except unlocking\
            \ by the application which locked the File (such as office, webdav or\
            \ external import).</note><note><strong>trash_inherited</strong>: Directory\
            \ is currently in trash because a parent directory was trashed.</note><note><strong>trashed</strong>:\
            \ Directory is currently in trash and specifically trashed by the user.</note><note><strong>uploading</strong>:\
            \ Directory is currently being uploaded. The Directory is locked and no\
            \ action can be done excepting upload actions.</note>"
          enum:
          - erasing
          - locked
          - trash_inherited
          - trashed
          - uploading
          example: erasing
          title: status
          type: string
          nullable: true
        visibility:
          description: "Visibility of Directory, empty string if no specific visibility.\
            \ Add additional information about Directory to show different icons or\
            \ more.<note><strong></strong>: Empty visibility mean no special visibility.</note><note><strong>is_in_team_space_folder</strong>:\
            \ Is a Directory inside a Common Documents directory.</note><note><strong>is_root</strong>:\
            \ Is the root directory of the user.</note><note><strong>is_shared_space</strong>:\
            \ Is the shared root directory, a special directory where the files inside\
            \ are the private files of other user shared with the logged user.</note><note><strong>is_team_space</strong>:\
            \ Is the Common Documents directory, a special directory where the files\
            \ inside are common to all users by default.</note><note><strong>is_team_space_folder</strong>:\
            \ Is the root directory inside the Common Documents.</note>"
          enum:
          - ""
          - is_in_team_space_folder
          - is_root
          - is_shared_space
          - is_team_space
          - is_team_space_folder
          example: ""
          title: visibility
          type: string
        drive_id:
          description: Drive identifier
          example: 1111
          title: drive_id
          type: integer
        depth:
          description: Current path depth of Directory
          example: 3
          title: depth
          type: integer
        created_by:
          description: The identifier of the user who first uploaded the Directory
          title: created_by
          type: integer
          nullable: true
        created_at:
          description: "Directory creation timestamp (in seconds), if available in\
            \ its metadata or specified on upload"
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        added_at:
          description: The timestamp (in seconds) at which the Directory has been
            uploaded for the first time
          format: timestamp
          title: added_at
          type: integer
        last_modified_at:
          description: "Directory creation timestamp (in seconds), if available in\
            \ its metadata or specified on upload"
          format: timestamp
          title: last_modified_at
          type: integer
        parent_id:
          description: Parent directory identifier
          title: parent_id
          type: integer
        deleted_at:
          description: "Timestamp of deleted resource Directory, only visible when\
            \ the Directory is trashed"
          format: timestamp
          title: deleted_at
          type: integer
        deleted_by:
          description: "User identifier of deleted resource Directory, only visible\
            \ when the Directory is trashed"
          title: deleted_by
          type: integer
        shared_root_id:
          description: "Root Directory identifier, only visible for shared user"
          example: 1
          title: shared_root_id
          type: integer
          nullable: true
        parents:
          items:
            $ref: '#/components/schemas/Directory'
          type: array
        users:
          description: Array of users identifiers that has access to the Directory
          items:
            description: Array of users identifiers that has access to the Directory
            title: users
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        teams:
          description: Array of teams identifiers that has access to the Directory
          items:
            description: Array of teams identifiers that has access to the Directory
            title: teams
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        is_favorite:
          description: Is Directory pinned as favorite
          title: is_favorite
          type: boolean
        activity:
          $ref: '#/components/schemas/activity'
        sharelink:
          $ref: '#/components/schemas/ShareLink'
        capabilities:
          $ref: '#/components/schemas/capabilities_2'
        lock:
          $ref: '#/components/schemas/lock'
        categories:
          items:
            $ref: '#/components/schemas/FileCategory'
          type: array
        etag:
          description: ETag of the file
          title: etag
          type: string
          nullable: true
        color:
          description: Color of the directory for the user requesting it
          example: '#0098ff'
          title: color
          type: string
          nullable: true
        dropbox:
          $ref: '#/components/schemas/Dropbox'
        external_import:
          $ref: '#/components/schemas/ExternalImportFile'
        rewind:
          $ref: '#/components/schemas/Rewind'
      required:
      - added_at
      - can_become_dropbox
      - can_become_sharelink
      - can_create_directory
      - can_create_file
      - can_delete
      - can_leave
      - can_move
      - can_move_into
      - can_read
      - can_rename
      - can_share
      - can_show
      - can_upload
      - can_use_favorite
      - can_use_team
      - can_write
      - color
      - created_at
      - created_by
      - depth
      - description
      - drive_id
      - id
      - last_accessed_at
      - last_modified_at
      - locked_at
      - name
      - parent_id
      - status
      - token
      - type
      - unlocked_at
      - visibility
      title: Directory
    CountFile:
      properties:
        user_id:
          description: User id
          title: user_id
          type: integer
        executed:
          description: Total of actions executed
          title: executed
          type: integer
        archived:
          description: Total of actions archived
          title: archived
          type: integer
        conflicted:
          description: Total of actions conflicted
          title: conflicted
          type: integer
      required:
      - archived
      - conflicted
      - executed
      - user_id
      title: Count File
    ShareLink:
      properties:
        url:
          description: Share link url
          example: https://kdrive.infomaniak.com/app/share/xxxx/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx
          title: url
          type: string
        file_id:
          title: file_id
          type: integer
        right:
          description: "Rights required to view the share link.<note><strong>inherit</strong>:\
            \ Share link is accessible only by users of the drive.</note><note><strong>password</strong>:\
            \ Share link is public but protected by a password.</note><note><strong>public</strong>:\
            \ Share link is public, no restriction set.</note>"
          enum:
          - inherit
          - password
          - public
          example: inherit
          title: right
          type: string
        valid_until:
          description: Until when the share link is valid
          format: timestamp
          title: valid_until
          type: integer
          nullable: true
        created_by:
          description: Unique identifier of the creator of the resource `Share Link`
          title: created_by
          type: integer
        created_at:
          description: Timestamp `Share Link` was created at
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        updated_at:
          description: Timestamp `Share Link` was updated at
          format: timestamp
          title: updated_at
          type: integer
          nullable: true
        capabilities:
          $ref: '#/components/schemas/capabilities_3'
        access_blocked:
          description: If the share link is blocked
          title: access_blocked
          type: boolean
        views:
          description: Number of views of share link (last 180 days only)
          title: views
          type: integer
      required:
      - access_blocked
      - capabilities
      - created_at
      - created_by
      - file_id
      - right
      - updated_at
      - url
      - valid_until
      title: Share Link
    FileCategory:
      properties:
        category_id:
          description: Category identifier
          title: category_id
          type: integer
        added_at:
          description: Time when the category was added to file
          format: timestamp
          title: added_at
          type: integer
        user_validation:
          description: State of user validation after auto assignment from AI.
          enum:
          - CORRECT
          - INCORRECT
          - TO_VALIDATE
          example: TO_VALIDATE
          title: user_validation
          type: string
          nullable: true
        is_generated_by_ai:
          description: Whether the Category was generated by an AI or not
          title: is_generated_by_ai
          type: boolean
        user_id:
          description: User identifier
          title: user_id
          type: integer
          nullable: true
        category:
          $ref: '#/components/schemas/Category'
      required:
      - added_at
      - category_id
      - is_generated_by_ai
      - user_id
      - user_validation
      title: File Category
    Dropbox:
      properties:
        id:
          description: Unique identifier of the resource `Dropbox`
          title: Unique identifier
          type: integer
        uuid:
          description: Dropbox unique identifier
          title: uuid
          type: string
        name:
          description: Name of the dropbox
          title: name
          type: string
        url:
          description: Public URL of the dropbox
          title: url
          type: string
        users_count:
          description: Number of recorded users that uploaded in the dropbox
          title: users_count
          type: integer
        created_by:
          description: Unique identifier of the creator of the resource `Dropbox`
          title: created_by
          type: integer
        created_at:
          description: Timestamp `Dropbox` was created at
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        updated_at:
          description: Timestamp `Dropbox` was updated at
          format: timestamp
          title: updated_at
          type: integer
          nullable: true
        last_uploaded_at:
          description: Last time someone uploaded a file in the dropbox
          format: timestamp
          title: last_uploaded_at
          type: integer
          nullable: true
        capabilities:
          $ref: '#/components/schemas/capabilities_4'
        user:
          $ref: '#/components/schemas/User'
      required:
      - capabilities
      - created_at
      - created_by
      - id
      - last_uploaded_at
      - name
      - updated_at
      - url
      - users_count
      - uuid
      title: Dropbox
    ExternalImportFile:
      properties:
        id:
          description: External file import identifier
          title: Unique identifier
          type: integer
        name:
          description: External file name
          title: name
          type: string
        status:
          description: "External file import status.<note><strong>downloading</strong>:\
            \ External file is currently downloading.</note><note><strong>error</strong>:\
            \ External file import failed, additional information in the message field.</note><note><strong>finished</strong>:\
            \ External file was successfully imported.</note><note><strong>uploading</strong>:\
            \ External file is currently uploading.</note><note><strong>waiting</strong>:\
            \ External file is not upload, waiting to be imported.</note>"
          enum:
          - downloading
          - error
          - finished
          - uploading
          - waiting
          example: downloading
          title: status
          type: string
        message:
          description: Message when error occur
          title: message
          type: string
        created_at:
          description: External file creation date
          format: timestamp
          title: created_at
          type: integer
      required:
      - created_at
      - id
      - message
      - name
      - status
      title: External Import File
    Drivepackprice:
      properties:
        type:
          description: "Drive pack price type, Base: standard price, User : Additional\
            \ user price, Storage_giga : Additional storage price"
          enum:
          - base
          - storage_giga
          - user
          title: type
          type: string
        unit:
          description: Unity of additional type
          title: unit
          type: integer
        period:
          description: Price by months
          title: period
          type: integer
        currency_id:
          description: Currency identifier
          title: currency_id
          type: integer
        amount_excl_vat:
          description: Price without the tax
          title: amount_excl_vat
          type: number
        amount_incl_vat:
          description: Price with the tax
          title: amount_incl_vat
          type: number
      required:
      - amount_excl_vat
      - amount_incl_vat
      - currency_id
      - period
      - type
      - unit
      title: Drive pack price
    PublicImage:
      properties:
        id:
          description: Unique identifier of the resource `PublicImage`
          title: Unique identifier
          type: integer
        public_url:
          example: '"https://kdrive.infomaniak.com/drive/xxxxx/public/d/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx/preview"'
          title: public_url
          type: string
      required:
      - id
      - public_url
      title: PublicImage
    DriveUserInvitation:
      properties:
        id:
          description: Unique identifier of the resource `Drive User Invitation`
          title: Unique identifier
          type: integer
        type:
          description: Type of `Invitation`
          enum:
          - file
          - user
          title: type
          type: string
        is_private:
          title: is_private
          type: boolean
        user_exist:
          title: user_exist
          type: boolean
        key:
          description: Random key used to uniquely identify the `Invitation`
          title: key
          type: string
        file_id:
          title: file_id
          type: integer
        lang:
          description: Language to invite the `User` in
          title: lang
          type: string
        user_id:
          description: User identifier
          title: user_id
          type: integer
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        invited_by:
          description: Identifier of `User` that sent the invitation
          title: invited_by
          type: integer
          nullable: true
        invited:
          $ref: '#/components/schemas/User'
        url:
          description: '`Invitation` url'
          title: url
          type: string
        is_valid:
          description: Whether the `Invitation` is still valid or not
          title: is_valid
          type: boolean
        status:
          description: Status of the `Invitation`
          enum:
          - accepted
          - cancelled
          - pending
          - rejected
          title: status
          type: string
        email:
          description: Email
          title: email
          type: string
        message:
          description: '`Invitation` message'
          title: message
          type: string
        expired_at:
          description: When the invitation expire
          format: timestamp
          title: expired_at
          type: integer
          nullable: true
        created_at:
          description: When the invitation was created
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        access_name:
          description: '`Drive` name displayed for user'
          title: access_name
          type: string
        role:
          description: Role that will be assigned to invited `User`
          title: role
          type: string
        drive:
          $ref: '#/components/schemas/Drive'
      required:
      - access_name
      - created_at
      - email
      - expired_at
      - file_id
      - id
      - invited_by
      - is_private
      - is_valid
      - key
      - lang
      - message
      - role
      - status
      - type
      - url
      - user_id
      title: Drive User Invitation
    DriveUser:
      properties:
        id:
          description: Unique identifier of the resource `Drive User`
          title: Unique identifier
          type: integer
        display_name:
          description: Display name
          title: display_name
          type: string
        first_name:
          description: First name
          title: first_name
          type: string
        last_name:
          description: Last name
          title: last_name
          type: string
        email:
          description: Email
          title: email
          type: string
        avatar:
          description: Avatar
          title: avatar
          type: string
        type:
          deprecated: true
          description: "Type of the access; this field is no longer used and has been\
            \ replaced by an additional role property `external`.<note><strong>main</strong>:\
            \ User has access to the drive.</note><note><strong>shared</strong>: User\
            \ has access to a shared file / directory only.</note>"
          enum:
          - main
          - shared
          example: main
          title: type
          type: string
        deleted_at:
          description: Timestamp `Drive User` was deleted at
          format: timestamp
          title: deleted_at
          type: integer
        teams:
          description: List of Team identifiers
          items:
            description: List of Team identifiers
            title: teams
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        security:
          $ref: '#/components/schemas/security_2'
        drive_id:
          description: Drive identifier
          example: 1111
          title: drive_id
          type: integer
        drive:
          $ref: '#/components/schemas/Drive'
        drive_name:
          title: drive_name
          type: string
        account_id:
          description: Account identifier of resource `Drive User`
          title: account_id
          type: integer
        created_at:
          description: Timestamp `Drive User` was created at
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Drive User` was updated at
          format: timestamp
          title: updated_at
          type: integer
        last_connection_at:
          description: Timestamp `User` was last connected at
          format: timestamp
          title: last_connection_at
          type: integer
          nullable: true
        product_id:
          description: Unique identifier of the `product` that is related to the resource
            `Drive User`
          title: product_id
          type: integer
        status:
          description: "Current access status of the user in the drive.<note><strong>active</strong>:\
            \ User has access to the Drive.</note><note><strong>deleted_kept</strong>:\
            \ User has been removed but his data remain in the drive.</note><note><strong>deleted_removed</strong>:\
            \ User has been removed.</note><note><strong>deleted_transferred</strong>:\
            \ User has been removed and his data has been transferred to another user.</note><note><strong>deleted_transferring</strong>:\
            \ User has been removed and is being transferred to another user.</note><note><strong>locked</strong>:\
            \ User has been locked, user can no longer access to the drive.</note><note><strong>pending</strong>:\
            \ User has not accepted the invitation request.</note>"
          enum:
          - active
          - deleted_kept
          - deleted_removed
          - deleted_transferred
          - deleted_transferring
          - locked
          - pending
          example: active
          title: status
          type: string
        role:
          description: "Administration level of the user.<note><strong>admin</strong>:\
            \ Administrator of the drive, can manage the drive (settings, invitations\
            \ and users) and the files.</note><note><strong>external</strong>: External\
            \ user can only access the files given by the others roles.</note><note><strong>user</strong>:\
            \ Internal user can invite user and manage the files of his private directory\
            \ and other directories with manage file access.</note>"
          enum:
          - admin
          - external
          - user
          example: admin
          title: role
          type: string
        preference:
          $ref: '#/components/schemas/preference'
        categories_permissions:
          description: Get user permissions on categories
          title: categories_permissions
          type: string
        capabilities:
          $ref: '#/components/schemas/capabilities_5'
        private_storage:
          description: Storage size of private files (bytes)
          title: private_storage
          type: integer
      required:
      - account_id
      - assistant_at
      - avatar
      - can_create_team_directory
      - can_set_trash_duration
      - color
      - created_at
      - default
      - default_page
      - deleted_at
      - display_name
      - double_auth_method
      - drive_id
      - drive_name
      - email
      - first_name
      - has_double_auth
      - has_private_folder
      - has_recovery_email
      - has_technical_permission
      - has_valid_email
      - has_valid_phone
      - hide
      - id
      - last_connection_at
      - last_name
      - last_password_at
      - preference
      - product_id
      - role
      - score
      - status
      - type
      - updated_at
      title: Drive User
    DriveDefaultLimits:
      properties:
        files_by_folders:
          description: Number of files/folders in the same folder
          title: files_by_folders
          type: integer
        files_size:
          description: Max file size
          title: files_size
          type: integer
        sub_folders:
          description: Max depth of folder
          title: sub_folders
          type: integer
        empty_trash_days:
          description: Number of days a file is conserved when trashed
          title: empty_trash_days
          type: integer
        versioning_days:
          description: Number of days a version of a file is conserved
          title: versioning_days
          type: integer
        versioning:
          description: Number of version of a fail
          title: versioning
          type: integer
        files_by_user:
          description: Max number of file for one user
          title: files_by_user
          type: integer
        shared_link:
          description: Max shared linkg
          title: shared_link
          type: integer
        bandwidth:
          description: Bandwidth authorize for a user in 24 hours
          title: bandwidth
          type: integer
        archive_files_download:
          description: Max files downloadable in a archive
          title: archive_files_download
          type: integer
        comments_per_file:
          description: Max number of comments per file
          title: comments_per_file
          type: integer
        min_size_for_hotcache:
          description: Minimum size of a file to be cached on kCache before moving
            to a "cold" storage
          title: min_size_for_hotcache
          type: integer
      required:
      - archive_files_download
      - bandwidth
      - comments_per_file
      - empty_trash_days
      - files_by_folders
      - files_by_user
      - files_size
      - min_size_for_hotcache
      - shared_link
      - sub_folders
      - versioning
      - versioning_days
      title: Drive Default Limits
    File:
      properties:
        id:
          description: Unique identifier of the resource `File`
          title: Unique identifier
          type: integer
        name:
          description: File name
          example: File
          title: name
          type: string
        sorted_name:
          description: Specific sortable name
          title: sorted_name
          type: string
        path:
          description: Full path of the File
          example: /full/path/File
          title: path
          type: string
        type:
          description: Type of returned element either a dir (Directory) or file (File)
          enum:
          - dir
          - file
          example: file
          title: type
          type: string
          nullable: true
        status:
          description: "Current state of File. The state can be null meaning that\
            \ the File has no specific state.<note><strong>erasing</strong>: File\
            \ is currently being erased from the drive.</note><note><strong>locked</strong>:\
            \ File is currently locked. No action can be made except unlocking by\
            \ the application which locked the File (such as office, webdav or external\
            \ import).</note><note><strong>trash_inherited</strong>: File is currently\
            \ in trash because a parent directory was trashed.</note><note><strong>trashed</strong>:\
            \ File is currently in trash and specifically trashed by the user.</note><note><strong>uploading</strong>:\
            \ File is currently being uploaded. The File is locked and no action can\
            \ be done excepting upload actions.</note>"
          enum:
          - erasing
          - locked
          - trash_inherited
          - trashed
          - uploading
          example: erasing
          title: status
          type: string
          nullable: true
        visibility:
          description: "Visibility of File, empty string if no specific visibility.\
            \ Add additional information about File to show different icons or more.<note><strong></strong>:\
            \ Empty visibility mean no special visibility.</note><note><strong>is_in_private_space</strong>:\
            \ Is a File inside the private directory of the user.</note><note><strong>is_in_shared_space</strong>:\
            \ Is a File inside the shared root directory, a special directory where\
            \ the files inside are the private files of other user shared with the\
            \ logged user.</note><note><strong>is_in_team_space_folder</strong>: Is\
            \ a File inside a Common Documents directory.</note><note><strong>is_private_space</strong>:\
            \ Is the private directory of the user.</note><note><strong>is_root</strong>:\
            \ Is the root directory of the user.</note><note><strong>is_shared_space</strong>:\
            \ Is the shared root directory, a special directory where the files inside\
            \ are the private files of other user shared with the logged user.</note><note><strong>is_team_space</strong>:\
            \ Is the Common Documents directory, a special directory where the files\
            \ inside are common to all users by default.</note><note><strong>is_team_space_folder</strong>:\
            \ Is the root directory inside the Common Documents.</note>"
          enum:
          - ""
          - is_in_private_space
          - is_in_shared_space
          - is_in_team_space_folder
          - is_private_space
          - is_root
          - is_shared_space
          - is_team_space
          - is_team_space_folder
          example: ""
          title: visibility
          type: string
        drive_id:
          description: Drive identifier
          example: 1111
          title: drive_id
          type: integer
        depth:
          description: Current path depth of File
          example: 3
          title: depth
          type: integer
        created_by:
          description: The identifier of the user who first uploaded the File
          title: created_by
          type: integer
          nullable: true
        created_at:
          description: "File creation timestamp (in seconds), if available in its\
            \ metadata or specified on upload"
          format: timestamp
          title: created_at
          type: integer
          nullable: true
        added_at:
          description: The timestamp (in seconds) at which the File has been uploaded
            for the first time
          format: timestamp
          title: added_at
          type: integer
        last_modified_at:
          description: "File creation timestamp (in seconds), if available in its\
            \ metadata or specified on upload"
          format: timestamp
          title: last_modified_at
          type: integer
        parent_id:
          description: Parent directory identifier
          title: parent_id
          type: integer
        deleted_at:
          description: "Timestamp of deleted resource File, only visible when the\
            \ File is trashed"
          format: timestamp
          title: deleted_at
          type: integer
        deleted_by:
          description: "User identifier of deleted resource File, only visible when\
            \ the File is trashed"
          title: deleted_by
          type: integer
        shared_root_id:
          description: "Root Directory identifier, only visible for shared user"
          example: 1
          title: shared_root_id
          type: integer
          nullable: true
        parents:
          items:
            $ref: '#/components/schemas/Directory'
          type: array
        users:
          description: Array of users identifiers that has access to the File
          items:
            description: Array of users identifiers that has access to the File
            title: users
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        teams:
          description: Array of teams identifiers that has access to the File
          items:
            description: Array of teams identifiers that has access to the File
            title: teams
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        is_favorite:
          description: Is File pinned as favorite
          title: is_favorite
          type: boolean
        activity:
          $ref: '#/components/schemas/activity_1'
        sharelink:
          $ref: '#/components/schemas/ShareLink'
        capabilities:
          $ref: '#/components/schemas/capabilities_6'
        lock:
          $ref: '#/components/schemas/lock_1'
        categories:
          items:
            $ref: '#/components/schemas/FileCategory'
          type: array
        etag:
          description: ETag of the file
          title: etag
          type: string
          nullable: true
        size:
          description: Size of File <note>The unit of size is defined in Bytes</note>
          example: 1700
          title: size
          type: integer
          nullable: true
        mime_type:
          description: Mime-type of file
          title: mime_type
          type: string
          nullable: true
        extension_type:
          description: File type
          example: spreadsheet
          title: extension_type
          type: string
          nullable: true
        supported_by:
          $ref: '#/components/schemas/supported_by'
        version:
          $ref: '#/components/schemas/version'
        conversion_capabilities:
          $ref: '#/components/schemas/conversion_capabilities'
        hash:
          description: Hash of the file content
          example: xxh3:00ec7bec63e548df
          title: hash
          type: string
          nullable: true
      required:
      - added_at
      - created_at
      - created_by
      - depth
      - drive_id
      - extension_type
      - id
      - last_modified_at
      - mime_type
      - name
      - parent_id
      - size
      - status
      - type
      - visibility
      title: File
    Chart:
      properties:
        name:
          description: X coordinate name
          title: name
          type: string
        unit:
          description: X coordinate unit
          title: unit
          type: string
        data:
          $ref: '#/components/schemas/data'
        metric:
          description: Metric of the requested chart
          title: metric
          type: string
      required:
      - data
      - name
      - unit
      title: Chart
    Drive_26fe3376:
      properties:
        id:
          description: Drive identifier
          title: Unique identifier
          type: string
        name:
          description: Drive name
          title: name
          type: string
      required:
      - id
      - name
      title: Drive
    SanitizedActivity:
      properties:
        target:
          $ref: '#/components/schemas/target'
        target_at:
          $ref: '#/components/schemas/target_at'
        action:
          description: "Action to do in rewind situation.<note><strong>archive</strong>:\
            \ File needs to be archived in a specific directory.</note><note><strong>archive_in_trash</strong>:\
            \ File needs to be archived in trash root.</note><note><strong>file_deleted</strong>:\
            \ File does not exist.</note><note><strong>move</strong>: File needs to\
            \ be moved.</note><note><strong>rename</strong>: File needs to be renamed.</note><note><strong>restore</strong>:\
            \ File needs to be restored from trash.</note><note><strong>trash</strong>:\
            \ File needs to be trashed.</note><note><strong>update</strong>: File\
            \ content need to be updated.</note><note><strong>version_deleted</strong>:\
            \ File content does not exist.</note>"
          enum:
          - archive
          - archive_in_trash
          - file_deleted
          - move
          - rename
          - restore
          - trash
          - update
          - version_deleted
          example: archive
          title: action
          type: string
        state:
          description: "State one action in the rewind process.<note><strong>not_executed</strong>:\
            \ Action was not executed yet.</note><note><strong>not_handled</strong>:\
            \ Action cannot be rewound.</note><note><strong>on_conflict</strong>:\
            \ Action lead to a conflict with another file/directory, this item was\
            \ moved to a specific directory.</note><note><strong>on_error</strong>:\
            \ Action lead to a fatal error, for instance the targeted version of a\
            \ file was unable to be restored.</note><note><strong>success</strong>:\
            \ Action was executed correctly.</note>"
          enum:
          - not_executed
          - not_handled
          - on_conflict
          - on_error
          - success
          example: not_executed
          title: state
          type: string
        special_parent_id:
          title: special_parent_id
          type: integer
          nullable: true
      required:
      - action
      - state
      title: Sanitized Activity
    Userfileaccess:
      properties:
        id:
          description: "User file access Identifier, can be team identifier, user\
            \ identifier, invitation identifier"
          title: Unique identifier
          type: integer
        access:
          description: Access type
          enum:
          - invitation
          - team
          - user
          title: access
          type: string
        name:
          description: User file access name
          title: name
          type: string
        right:
          description: Access right
          title: right
          type: string
          nullable: true
        color:
          description: Access color
          title: color
          type: integer
          nullable: true
        status:
          description: Status of access
          enum:
          - accepted
          - cancelled
          - expired
          - pending
          - rejected
          title: status
          type: string
      required:
      - access
      - color
      - id
      - name
      - right
      - status
      title: User file access
    TeamFileAccess:
      properties:
        id:
          description: "Team File Access Identifier, can be team identifier, user\
            \ identifier, invitation identifier"
          title: Unique identifier
          type: integer
        access:
          description: Access type
          example: team
          title: access
          type: string
        name:
          description: Team File Access name
          title: name
          type: string
        right:
          description: Access right
          title: right
          type: string
          nullable: true
        color:
          description: Access color
          title: color
          type: integer
          nullable: true
        status:
          description: Status of access
          enum:
          - accepted
          - cancelled
          - expired
          - pending
          - rejected
          title: status
          type: string
      required:
      - access
      - color
      - id
      - name
      - right
      - status
      title: Team File Access
    ExternInvitationFileAccess:
      properties:
        id:
          description: "Extern Invitation File Access Identifier, can be team identifier,\
            \ user identifier, invitation identifier"
          title: Unique identifier
          type: integer
        access:
          description: Access type
          example: invitation
          title: access
          type: string
        name:
          description: Extern Invitation File Access name
          title: name
          type: string
        right:
          description: Access right
          title: right
          type: string
          nullable: true
        color:
          description: Access color
          title: color
          type: integer
          nullable: true
        status:
          description: Status of access
          enum:
          - accepted
          - cancelled
          - expired
          - pending
          - rejected
          title: status
          type: string
        email:
          description: Email if available
          title: email
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        invitation_drive_id:
          description: Access was given with the access to the drive id
          title: invitation_drive_id
          type: integer
          nullable: true
      required:
      - access
      - color
      - email
      - id
      - invitation_drive_id
      - name
      - right
      - status
      title: Extern Invitation File Access
    Feedbackaccessresource:
      properties:
        id:
          $ref: '#/components/schemas/Unique_identifier'
        result:
          description: The invitation send
          example: true
          title: result
          type: boolean
        access:
          $ref: '#/components/schemas/access'
        message:
          description: Additional message about why email fail to be sent
          example: error_already_exist
          title: message
          type: string
      required:
      - access
      - id
      - message
      - result
      title: Feedback access resource
    Comment:
      properties:
        id:
          description: Unique identifier of the resource `Comment`
          title: Unique identifier
          type: integer
        parent_id:
          description: "Comment parent identifier. If present, this comment is a response\
            \ of another comment"
          title: parent_id
          type: integer
        body:
          description: Comment message
          title: body
          type: string
        is_resolved:
          description: "If a comment is set as resolved, solved."
          title: is_resolved
          type: boolean
        created_at:
          description: Timestamp `Comment` was created at
          format: timestamp
          title: created_at
          type: integer
        updated_at:
          description: Timestamp `Comment` was updated at
          format: timestamp
          title: updated_at
          type: integer
        liked:
          description: if the comment is liked
          title: liked
          type: boolean
        likes_count:
          description: Number of likes
          title: likes_count
          type: integer
        responses_count:
          description: Number of responses for this comment
          title: responses_count
          type: integer
        user:
          $ref: '#/components/schemas/User'
        responses:
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        likes:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - body
      - created_at
      - id
      - is_resolved
      - liked
      - likes_count
      - parent_id
      - responses_count
      - updated_at
      title: Comment
    ActivityFile_5e63f180:
      properties:
        id:
          description: Unique identifier of the resource `Activity File`
          title: Unique identifier
          type: integer
        created_at:
          description: Timestamp `Activity File` was created at
          format: timestamp
          title: created_at
          type: integer
        action:
          description: Activity type
          example: file_rename
          title: action
          type: string
        new_path:
          description: Current path of the activity file/directory
          example: /directory/file_renamed
          title: new_path
          type: string
        old_path:
          description: Previous path of the activity file/directory
          example: /directory/filename
          title: old_path
          type: string
        private_path_user_id:
          description: get private folder user id
          title: private_path_user_id
          type: integer
        file_id:
          description: Logged file identifier
          title: file_id
          type: integer
        user_id:
          description: "User identifier of the action, null if the user was not logged"
          title: user_id
          type: integer
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        source:
          $ref: '#/components/schemas/source'
        file:
          $ref: '#/components/schemas/file'
        parent:
          $ref: '#/components/schemas/Directory'
        entity:
          $ref: '#/components/schemas/entity'
      required:
      - action
      - created_at
      - device
      - file_id
      - id
      - ip
      - location
      - name
      - type
      - user_agent
      - user_id
      title: Activity File
    Cursor:
      properties:
        user_id:
          description: ID of the user who created the cursor
          title: user_id
          type: integer
        source_id:
          description: ID of the directory the cursor was created in
          title: source_id
          type: integer
        activity_id:
          description: ID of the last activity seen by the cursor
          title: activity_id
          type: integer
        created_at:
          description: Timestamp of the cursor's creation
          title: created_at
          type: integer
        recursive:
          description: Whether the cursor also reads children directories
          title: recursive
          type: boolean
        page:
          description: Current page of cursor data
          title: page
          type: integer
          nullable: true
        limit:
          description: Curent limit of cursor
          title: limit
          type: integer
          nullable: true
      required:
      - activity_id
      - created_at
      - limit
      - page
      - recursive
      - source_id
      - user_id
      title: Cursor
    Uploadsegment:
      properties:
        number:
          description: Index of the chunk to compute the final object correctly
          title: number
          type: integer
        status:
          description: "The chunk status during the upload.<note><strong>error</strong>:\
            \ Something was wrong chunk was not correctly received, retried to send\
            \ the same chunk.</note><note><strong>ok</strong>: Chunk has been received.</note><note><strong>uploading</strong>:\
            \ Chunks still uploading.</note>"
          enum:
          - error
          - ok
          - uploading
          example: error
          title: status
          type: string
        created_at:
          description: Timestamp `Upload segment` was created at
          format: timestamp
          title: created_at
          type: integer
        size:
          description: "Chunk uploaded size, computed"
          title: size
          type: integer
        hash:
          description: "Chunk uploaded hash, computed"
          title: hash
          type: string
      required:
      - created_at
      - hash
      - number
      - size
      - status
      title: Upload segment
    Periodicity:
      example:
        unite: 0
        id: 1
        value: MONTH
      properties:
        id:
          description: Unique identifier of the resource `Periodicity`
          enum:
          - "1"
          - "2"
          example: 1
          title: Unique identifier
          type: integer
        unite:
          title: unite
          type: integer
        value:
          description: The `PackPrice` time range
          enum:
          - MONTH
          - YEAR
          example: MONTH
          title: value
          type: string
      required:
      - id
      - unite
      - value
      title: Periodicity
    VodProduct:
      properties:
        vod_id:
          description: Unique identifier of the `vodProduct` that is related to the
            resource `VodProduct`
          example: 1980
          title: vod_id
          type: integer
        name:
          description: Name of the resource `VodProduct`
          title: name
          type: string
      required:
      - name
      - vod_id
      title: VodProduct
    PricingOption:
      example:
        periodicity:
          unite: 0
          id: 1
          value: MONTH
        currency:
          currency: currency
          currency_pretty: currency_pretty
          id: "1"
        id: 1
        amount_excl_tax: 6.027456183070403
      properties:
        id:
          description: Unique identifier of the resource `PricingOption`
          example: 1
          title: Unique identifier
          type: integer
        currency:
          $ref: '#/components/schemas/Admin'
        periodicity:
          $ref: '#/components/schemas/Periodicity'
        amount_excl_tax:
          title: amount_excl_tax
          type: number
      required:
      - amount_excl_tax
      - currency
      - id
      - periodicity
      title: PricingOption
    ChannelInvoiceableOption:
      example:
        next_deadline_at: 2
        updated_at: 5
        end_echeance_at: 7
        option_active: true
        ordered_at: 5
        option_id: 1
        free: true
        channel_id: 69001
        demo: true
        deleted_at: 3
        terminated_at: 9
      properties:
        channel_id:
          description: Unique identifier of the `channel` that is related to the resource
            `ChannelInvoiceableOption`
          example: 69001
          title: channel_id
          type: integer
        option_id:
          title: option_id
          type: integer
        updated_at:
          description: Timestamp `ChannelInvoiceableOption` has been updated
          format: datetime
          title: updated_at
          type: integer
        ordered_at:
          description: Timestamp `ChannelInvoiceableOption` has been ordered
          format: datetime
          title: ordered_at
          type: integer
        next_deadline_at:
          format: datetime
          title: next_deadline_at
          type: integer
        end_echeance_at:
          format: datetime
          title: end_echeance_at
          type: integer
        free:
          title: free
          type: boolean
        demo:
          title: demo
          type: boolean
        option_active:
          title: option_active
          type: boolean
        terminated_at:
          format: datetime
          title: terminated_at
          type: integer
        deleted_at:
          description: Timestamp `ChannelInvoiceableOption` has been deleted
          format: datetime
          title: deleted_at
          type: integer
      required:
      - channel_id
      - deleted_at
      - demo
      - end_echeance_at
      - free
      - next_deadline_at
      - option_active
      - option_id
      - ordered_at
      - terminated_at
      - updated_at
      title: ChannelInvoiceableOption
    Admin:
      example:
        currency: currency
        currency_pretty: currency_pretty
        id: "1"
      properties:
        id:
          description: Unique identifier of the resource `Admin`
          example: "1"
          title: Unique identifier
          type: string
        currency:
          title: currency
          type: string
        currency_pretty:
          title: currency_pretty
          type: string
      required:
      - currency
      - currency_pretty
      - id
      title: Admin
    SuccessResponseData:
      properties:
        data:
          $ref: '#/components/schemas/SuccessResponseData_data'
      required:
      - data
    SuccessResponse:
      allOf:
      - $ref: '#/components/schemas/Response'
      - $ref: '#/components/schemas/SuccessResponseData'
    ResponseSuccessTotalSpecific:
      properties:
        total:
          description: Total number of results
          type: integer
      required:
      - total
    TotalSuccessResponse:
      allOf:
      - $ref: '#/components/schemas/SuccessResponse'
      - $ref: '#/components/schemas/ResponseSuccessTotalSpecific'
    ResponseSuccessPaginatedSpecific:
      properties:
        pages:
          description: Total number of pages
          type: integer
        page:
          description: The current page
          type: integer
        items_per_page:
          description: Number of results per page
          type: integer
      required:
      - items_per_page
      - page
      - pages
    Error:
      title: Error
      type: object
    ApiError:
      properties:
        result:
          type: string
        error:
          $ref: '#/components/schemas/ApiError_error'
    PaginatedSuccessResponse:
      allOf:
      - $ref: '#/components/schemas/TotalSuccessResponse'
      - $ref: '#/components/schemas/ResponseSuccessPaginatedSpecific'
    _1_kmeet_rooms_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/PlannedConferenceReturn'
      example:
        result: success
        data:
          ending_at: 2020-06-01 20:00:00
          hostname: kmeet.infomaniak.com
          code: code
          event_id: 1
          updated_at: 2020-06-01 20:00:00
          user_id: 6
          name: name
          options:
          - enable_moderator_video: true
            password_enabled: true
            subject: subject
            drive_id: 5
            lobby_enabled: true
            e2ee_enabled: true
            start_audio_muted: true
            start_audio_only: true
            enable_recording: true
          - enable_moderator_video: true
            password_enabled: true
            subject: subject
            drive_id: 5
            lobby_enabled: true
            e2ee_enabled: true
            start_audio_muted: true
            start_audio_only: true
            enable_recording: true
          created_at: 2020-06-01 20:00:00
          id: 0
    _1_kmeet_rooms__room_id__settings_get_403_response_allOf_error:
      description: Error object
      example:
        code: not_authorized
        description: Forbidden
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          example: not_authorized
          type: string
        description:
          description: Description of the error
          example: Forbidden
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_kmeet_rooms__room_id__settings_get_403_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          error:
            $ref: '#/components/schemas/_1_kmeet_rooms__room_id__settings_get_403_response_allOf_error'
      example:
        result: success
        error:
          code: not_authorized
          description: Forbidden
          errors:
          - errors
          - errors
    _1_kmeet_rooms__room_id__settings_get_404_response_allOf_error:
      description: Error object
      example:
        code: not_found
        description: Not Found
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          example: not_found
          type: string
        description:
          description: Description of the error
          example: Not Found
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_kmeet_rooms__room_id__settings_get_404_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          error:
            $ref: '#/components/schemas/_1_kmeet_rooms__room_id__settings_get_404_response_allOf_error'
      example:
        result: success
        error:
          code: not_found
          description: Not Found
          errors:
          - errors
          - errors
    GetUsersByGroupChannelIds_200_response:
      example:
        <CHANNEL_ID>:
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
      properties:
        <CHANNEL_ID>:
          items:
            $ref: '#/components/schemas/User'
          type: array
    SearchUsers_request:
      properties:
        term:
          description: "The term to match against username, full name, nickname and\
            \ email"
          type: string
        team_id:
          description: "If provided, only search users on this team"
          type: string
        not_in_team_id:
          description: "If provided, only search users not on this team"
          type: string
        in_channel_id:
          description: "If provided, only search users in this channel"
          type: string
        not_in_channel_id:
          description: "If provided, only search users not in this channel. Must specifiy\
            \ `team_id` when using this option"
          type: string
        in_group_id:
          description: "If provided, only search users in this group. Must have `manage_system`\
            \ permission."
          type: string
        group_constrained:
          description: "When used with `not_in_channel_id` or `not_in_team_id`, returns\
            \ only the users that are allowed to join the channel or team based on\
            \ its group constrains."
          type: boolean
        allow_inactive:
          description: "When `true`, include deactivated users in the results"
          type: boolean
        without_team:
          description: "Set this to `true` if you would like to search for users that\
            \ are not on a team. This option takes precendence over `team_id`, `in_channel_id`,\
            \ and `not_in_channel_id`."
          type: boolean
        limit:
          default: 100
          description: |
            The maximum number of users to return in the results

            __Defaults to `100` if not provided.__
          type: integer
      required:
      - term
    PatchUser_request:
      properties:
        email:
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        locale:
          type: string
        position:
          type: string
        props:
          type: object
        notify_props:
          $ref: '#/components/schemas/UserNotifyProps'
    UpdateUserRoles_request:
      properties:
        roles:
          type: string
      required:
      - roles
    UpdateUserStatus_request:
      properties:
        user_id:
          description: User ID
          type: string
        status:
          description: "User status, can be `online`, `away`, `offline` and `dnd`"
          type: string
        dnd_end_time:
          description: Time in epoch seconds at which a dnd status would be unset.
          type: integer
      required:
      - status
      - user_id
    UpdateUserCustomStatus_request:
      properties:
        emoji:
          description: Any emoji
          type: string
        text:
          description: Any custom status text
          type: string
        duration:
          description: "Duration of custom status, can be `thirty_minutes`, `one_hour`,\
            \ `four_hours`, `today`, `this_week` or `date_and_time`"
          type: string
        expires_at:
          description: The time at which custom status should be expired. It should
            be in ISO format.
          type: string
      required:
      - emoji
      - text
    PostUserRecentCustomStatusDelete_request:
      properties:
        emoji:
          description: Any emoji
          type: string
        text:
          description: Any custom status text
          type: string
        duration:
          description: "Duration of custom status, can be `thirty_minutes`, `one_hour`,\
            \ `four_hours`, `today`, `this_week` or `date_and_time`"
          type: string
        expires_at:
          description: The time at which custom status should be expired. It should
            be in ISO format.
          type: string
      required:
      - duration
      - emoji
      - expires_at
      - text
    InviteGuestsToTeam_request:
      properties:
        emails:
          description: List of emails
          items:
            type: string
          type: array
        channels:
          description: List of channel ids
          items:
            type: string
          type: array
        message:
          description: Message to include in the invite
          type: string
      required:
      - channels
      - emails
    CreateChannel_request:
      properties:
        team_id:
          description: The team ID of the team to create the channel on
          type: string
        name:
          description: "The unique handle for the channel, will be present in the\
            \ channel URL"
          type: string
        display_name:
          description: The non-unique UI name for the channel
          type: string
        purpose:
          description: A short description of the purpose of the channel
          type: string
        header:
          description: Markdown-formatted text to display in the header of the channel
          type: string
        type:
          description: "'O' for a public channel, 'P' for a private channel"
          type: string
      required:
      - display_name
      - name
      - team_id
      - type
    SearchAllChannels_request:
      properties:
        term:
          description: "The string to search in the channel name, display name, and\
            \ purpose."
          type: string
        not_associated_to_group:
          description: A group id to exclude channels that are associated to that
            group via GroupChannel records.
          type: string
        exclude_default_channels:
          description: Exclude default channels from the results by setting this parameter
            to true.
          type: boolean
        team_ids:
          description: |+
            Filters results to channels belonging to the given team ids

          items:
            type: string
          type: array
        group_constrained:
          description: |+
            Filters results to only return channels constrained to a group

          type: boolean
        exclude_group_constrained:
          description: |+
            Filters results to exclude channels constrained to a group

          type: boolean
        public:
          description: |+
            Filters results to only return Public / Open channels, can be used in conjunction with `private` to return both `public` and `private` channels

          type: boolean
        private:
          description: |+
            Filters results to only return Private channels, can be used in conjunction with `public` to return both `private` and `public` channels

          type: boolean
        deleted:
          description: |+
            Filters results to only return deleted / archived channels

          type: boolean
        page:
          description: "The page number to return, if paginated. If this parameter\
            \ is not present with the `per_page` parameter then the results will be\
            \ returned un-paged."
          type: string
        per_page:
          description: "The number of entries to return per page, if paginated. If\
            \ this parameter is not present with the `page` parameter then the results\
            \ will be returned un-paged."
          type: string
        exclude_policy_constrained:
          default: false
          description: |+
            If set to true, only channels which do not have a granular retention policy assigned to them will be returned. The `sysconsole_read_compliance_data_retention` permission is required to use this parameter.

          type: boolean
        include_search_by_id:
          default: false
          description: |+
            If set to true, returns channels where given search 'term' matches channel ID.

          type: boolean
      required:
      - term
    SearchAllChannels_200_response:
      example:
        channels:
        - maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
        - maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
        total_count: 0.8008281904610115
      properties:
        channels:
          description: The channels that matched the query.
          items:
            $ref: '#/components/schemas/Channel'
          type: array
        total_count:
          description: "The total number of results, regardless of page and per_page\
            \ requested."
          type: number
    SearchGroupChannels_request:
      properties:
        term:
          description: The search term to match against the members' usernames of
            the group channels
          type: string
      required:
      - term
    UpdateChannel_request:
      properties:
        id:
          description: "The channel's id, not updatable"
          type: string
        name:
          description: "The unique handle for the channel, will be present in the\
            \ channel URL"
          type: string
        display_name:
          description: The non-unique UI name for the channel
          type: string
        purpose:
          description: A short description of the purpose of the channel
          type: string
        header:
          description: Markdown-formatted text to display in the header of the channel
          type: string
      required:
      - id
    PatchChannel_request:
      properties:
        name:
          description: "The unique handle for the channel, will be present in the\
            \ channel URL"
          type: string
        display_name:
          description: The non-unique UI name for the channel
          type: string
        purpose:
          description: A short description of the purpose of the channel
          type: string
        header:
          description: Markdown-formatted text to display in the header of the channel
          type: string
    UpdateChannelPrivacy_request:
      properties:
        privacy:
          description: "Channel privacy setting: 'O' for a public channel, 'P' for\
            \ a private channel"
          type: string
      required:
      - privacy
    MoveChannel_request:
      properties:
        team_id:
          type: string
        force:
          description: Remove members those are not member of target team before moving
            the channel.
          type: boolean
      required:
      - team_id
    SearchChannels_request:
      properties:
        term:
          description: The search term to match against the name or display name of
            channels
          type: string
      required:
      - term
    SearchArchivedChannels_request:
      properties:
        term:
          description: The search term to match against the name or display name of
            archived channels
          type: string
      required:
      - term
    AddChannelMember_request:
      properties:
        user_id:
          description: The ID of user to add into the channel
          type: string
        post_root_id:
          description: The ID of root post where link to add channel member originates
          type: string
      required:
      - user_id
    UpdateChannelMemberSchemeRoles_request:
      properties:
        scheme_admin:
          type: boolean
        scheme_user:
          type: boolean
      required:
      - scheme_admin
      - scheme_user
    ViewChannel_request:
      properties:
        channel_id:
          description: The channel ID that is being viewed. Use a blank string to
            indicate that all channels have lost focus.
          type: string
        prev_channel_id:
          description: "The channel ID of the previous channel, used when switching\
            \ channels. Providing this ID will cause push notifications to clear on\
            \ the channel being switched to."
          type: string
      required:
      - channel_id
    ViewChannel_200_response:
      example:
        last_viewed_at_times: "{}"
        status: status
      properties:
        status:
          description: Value should be "OK" if successful
          type: string
        last_viewed_at_times:
          description: A JSON object mapping channel IDs to the channel view times
          type: object
    UpdateChannelScheme_request:
      properties:
        scheme_id:
          description: The ID of the scheme.
          type: string
      required:
      - scheme_id
    CreatePost_request:
      properties:
        channel_id:
          description: The channel ID to post in
          type: string
        message:
          description: "The message contents, can be formatted with Markdown"
          type: string
        root_id:
          description: The post ID to comment on
          type: string
        file_ids:
          description: A list of file IDs to associate with the post. Note that posts
            are limited to 5 files maximum. Please use additional posts for more files.
          items:
            type: string
          type: array
        props:
          description: A general JSON property bag to attach to the post
          type: object
      required:
      - channel_id
      - message
    CreatePostEphemeral_request_post:
      description: Post object to create
      properties:
        channel_id:
          description: The channel ID to post in
          type: string
        message:
          description: "The message contents, can be formatted with Markdown"
          type: string
      required:
      - channel_id
      - message
    CreatePostEphemeral_request:
      properties:
        user_id:
          description: The target user id for the ephemeral post
          type: string
        post:
          $ref: '#/components/schemas/CreatePostEphemeral_request_post'
      required:
      - post
      - user_id
    UpdatePost_request:
      properties:
        id:
          description: ID of the post to update
          type: string
        is_pinned:
          description: Set to `true` to pin the post to the channel it is in
          type: boolean
        message:
          description: The message text of the post
          type: string
        has_reactions:
          description: Set to `true` if the post has reactions to it
          type: boolean
        props:
          description: A general JSON property bag to attach to the post
          type: string
      required:
      - id
    PatchPost_request:
      properties:
        is_pinned:
          description: Set to `true` to pin the post to the channel it is in
          type: boolean
        message:
          description: The message text of the post
          type: string
        file_ids:
          description: The list of files attached to this post
          items:
            type: string
          type: array
        has_reactions:
          description: Set to `true` if the post has reactions to it
          type: boolean
        props:
          description: A general JSON property bag to attach to the post
          type: string
    SearchPosts_request:
      properties:
        terms:
          description: "The search terms as inputed by the user. To search for posts\
            \ from a user include `from:someusername`, using a user's username. To\
            \ search in a specific channel include `in:somechannel`, using the channel\
            \ name (not the display name)."
          type: string
        is_or_search:
          description: Set to true if an Or search should be performed vs an And search.
          type: boolean
        time_zone_offset:
          default: 0
          description: Offset from UTC of user timezone for date searches.
          type: integer
        include_deleted_channels:
          description: Set to true if deleted channels should be included in the search.
            (archived channels)
          type: boolean
        page:
          default: 0
          description: The page to select. (Only works with Elasticsearch)
          type: integer
        per_page:
          default: 60
          description: The number of posts per page. (Only works with Elasticsearch)
          type: integer
      required:
      - is_or_search
      - terms
    SetPostReminder_request:
      properties:
        target_time:
          description: Target time for the reminder
          type: integer
      required:
      - target_time
    UploadFile_201_response:
      example:
        file_infos:
        - extension: extension
          has_preview_image: true
          post_id: post_id
          size: 4
          user_id: user_id
          mime_type: mime_type
          update_at: 3
          name: name
          width: 7
          delete_at: 2
          id: id
          create_at: 9
          height: 1
        - extension: extension
          has_preview_image: true
          post_id: post_id
          size: 4
          user_id: user_id
          mime_type: mime_type
          update_at: 3
          name: name
          width: 7
          delete_at: 2
          id: id
          create_at: 9
          height: 1
        client_ids:
        - client_ids
        - client_ids
      properties:
        file_infos:
          description: A list of file metadata that has been stored in the database
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        client_ids:
          description: A list of the client_ids that were provided in the request
          items:
            type: string
          type: array
    SearchFiles_request:
      properties:
        terms:
          description: "The search terms as inputed by the user. To search for files\
            \ from a user include `from:someusername`, using a user's username. To\
            \ search in a specific channel include `in:somechannel`, using the channel\
            \ name (not the display name). To search for specific extensions included\
            \ `ext:extension`."
          type: string
        is_or_search:
          description: Set to true if an Or search should be performed vs an And search.
          type: boolean
        time_zone_offset:
          default: 0
          description: Offset from UTC of user timezone for date searches.
          type: integer
        include_deleted_channels:
          description: Set to true if deleted channels should be included in the search.
            (archived channels)
          type: boolean
        page:
          default: 0
          description: The page to select. (Only works with Elasticsearch)
          type: integer
        per_page:
          default: 60
          description: The number of posts per page. (Only works with Elasticsearch)
          type: integer
      required:
      - is_or_search
      - terms
    CreateEmoji_request:
      properties:
        image:
          description: A file to be uploaded
          format: binary
          type: string
        emoji:
          description: A JSON object containing a `name` field with the name of the
            emoji and a `creator_id` field with the id of the authenticated user.
          type: string
      required:
      - emoji
      - image
    SearchEmoji_request:
      properties:
        term:
          description: The term to match against the emoji name.
          type: string
        prefix_only:
          description: Set to only search for names starting with the search term.
          type: string
      required:
      - term
    CreateIncomingWebhook_request:
      properties:
        channel_id:
          description: The ID of a public channel or private group that receives the
            webhook payloads.
          type: string
        user_id:
          description: "The ID of the owner of the webhook if different than the requester.\
            \ Required for [local mode](https://docs.mattermost.com/administration/mmctl-cli-tool.html#local-mode)."
          type: string
        display_name:
          description: The display name for this incoming webhook
          type: string
        description:
          description: The description for this incoming webhook
          type: string
        username:
          description: The username this incoming webhook will post as.
          type: string
        icon_url:
          description: The profile picture this incoming webhook will use when posting.
          type: string
      required:
      - channel_id
    UpdateIncomingWebhook_request:
      properties:
        id:
          description: Incoming webhook GUID
          type: string
        channel_id:
          description: The ID of a public channel or private group that receives the
            webhook payloads.
          type: string
        display_name:
          description: The display name for this incoming webhook
          type: string
        description:
          description: The description for this incoming webhook
          type: string
        username:
          description: The username this incoming webhook will post as.
          type: string
        icon_url:
          description: The profile picture this incoming webhook will use when posting.
          type: string
      required:
      - channel_id
      - description
      - display_name
      - id
    CreateOutgoingWebhook_request:
      properties:
        team_id:
          description: The ID of the team that the webhook watchs
          type: string
        channel_id:
          description: The ID of a public channel that the webhook watchs
          type: string
        creator_id:
          description: "The ID of the owner of the webhook if different than the requester.\
            \ Required in [local mode](https://docs.mattermost.com/administration/mmctl-cli-tool.html#local-mode)."
          type: string
        description:
          description: The description for this outgoing webhook
          type: string
        display_name:
          description: The display name for this outgoing webhook
          type: string
        trigger_words:
          description: List of words for the webhook to trigger on
          items:
            type: string
          type: array
        trigger_when:
          description: "When to trigger the webhook, `0` when a trigger word is present\
            \ at all and `1` if the message starts with a trigger word"
          type: integer
        callback_urls:
          description: The URLs to POST the payloads to when the webhook is triggered
          items:
            type: string
          type: array
        content_type:
          default: application/x-www-form-urlencoded
          description: "The format to POST the data in, either `application/json`\
            \ or `application/x-www-form-urlencoded`"
          type: string
      required:
      - callback_urls
      - display_name
      - team_id
      - trigger_words
    UpdateOutgoingWebhook_request:
      properties:
        id:
          description: Outgoing webhook GUID
          type: string
        channel_id:
          description: The ID of a public channel or private group that receives the
            webhook payloads.
          type: string
        display_name:
          description: The display name for this incoming webhook
          type: string
        description:
          description: The description for this incoming webhook
          type: string
      required:
      - channel_id
      - description
      - display_name
      - id
    CreateCommand_request:
      properties:
        team_id:
          description: Team ID to where the command should be created
          type: string
        method:
          description: "`'P'` for post request, `'G'` for get request"
          type: string
        trigger:
          description: Activation word to trigger the command
          type: string
        url:
          description: The URL that the command will make the request
          type: string
      required:
      - method
      - team_id
      - trigger
      - url
    RegenCommandToken_200_response:
      example:
        token: token
      properties:
        token:
          description: The new token
          type: string
    ExecuteCommand_request:
      properties:
        channel_id:
          description: Channel Id where the command will execute
          type: string
        command:
          description: "The slash command to execute, including parameters. Eg, `'/echo\
            \ bounces around the room'`"
          type: string
      required:
      - channel_id
      - command
    CreateBot_request:
      properties:
        username:
          type: string
        display_name:
          type: string
        description:
          type: string
      required:
      - username
    _1_vod_channel__channel__media__media__thumbnail_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/Api_Thumbnail'
      example:
        result: success
        updated_at: 2021-09-15T14:23:41+00:00
        link:
          size: 42
          size_human_readable: maria
          mimetype: maria
          url: https://infomaniak.com
        created_at: 2021-09-15T14:23:41+00:00
        id: 1jhvl2uqa5v8a
        deleted_at: 2021-09-15T14:23:41+00:00
    _1_vod_channel__channel__browse_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/multibvf'
      example:
        result: success
        data:
        - preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          files_count: 42
          streams: "[audio, video]"
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          folders_count: 42
          published: true
          type: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playlists_attached_count: 2
          tags:
          - tags
          - tags
          duration: "276.62"
          path: /foldera/folderb/file
          validated: true
          size: 2300000
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          name: ""
          progress: 50
          state: 42
          id: 1jhvl2uqa5v8a
        - preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          files_count: 42
          streams: "[audio, video]"
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          folders_count: 42
          published: true
          type: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playlists_attached_count: 2
          tags:
          - tags
          - tags
          duration: "276.62"
          path: /foldera/folderb/file
          validated: true
          size: 2300000
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          name: ""
          progress: 50
          state: 42
          id: 1jhvl2uqa5v8a
    _1_vod_channel__channel__browse_delete_request:
      properties:
        targets:
          description: uuid of medias/folders to move to trash
          example: "[1jhvl2uqacxj5]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_vod_channel__channel__browse_copy_post_request:
      properties:
        destination:
          description: uuid of destination folder
          example: 1jhvl2uqacxj5
          type: string
        targets:
          description: uuid of medias/folders to move to trash
          example: "[1jhvl2uqacxj5]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - destination
    _1_vod_channel__channel__browse_trash__file__restore_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_BrowsableVirtualFile'
      example:
        result: success
        data:
          preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          files_count: 42
          streams: "[audio, video]"
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          folders_count: 42
          published: true
          type: maria
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playlists_attached_count: 2
          tags:
          - tags
          - tags
          duration: "276.62"
          path: /foldera/folderb/file
          validated: true
          size: 2300000
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          name: ""
          progress: 50
          state: 42
          id: 1jhvl2uqa5v8a
    _1_vod_channel__channel__browse_update_put_request:
      properties:
        targets:
          items:
            $ref: '#/components/schemas/Fillable_App\Models\BrowsableVirtualFile'
          type: array
      targets:
        type: array
        items:
          type: string
        example: "[1jhvl2uqacxj5]"
      published:
        type: bool
        example: true
      validated:
        type: bool
        example: true
    _1_vod_channel__channel__browse__file__copy_post_request:
      properties:
        destination:
          description: uuid of destination folder
          example: 1jhvl2uqacxj5
          type: string
      required:
      - destination
    _1_vod_channel__channel__folder_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Api_Folder'
            type: array
      example:
        result: success
        data:
        - media_duration: maria
          discarded: ""
          media_count: 0.8008281904610115
          effective_encodings: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          allowed_ip:
          - 127.0.0.1
          - 127.0.0.1
          path: ""
          allowed_country:
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          validated: ""
          id: 1jhvl2uqa5v8a
          auto_validate: true
          key: maria
          player:
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          image: image
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          disallowed_country: ""
          published: ""
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_publish: true
          restricted: ""
          disallowed_ip: ""
          name: ""
        - media_duration: maria
          discarded: ""
          media_count: 0.8008281904610115
          effective_encodings: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          allowed_ip:
          - 127.0.0.1
          - 127.0.0.1
          path: ""
          allowed_country:
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          validated: ""
          id: 1jhvl2uqa5v8a
          auto_validate: true
          key: maria
          player:
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          image: image
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          disallowed_country: ""
          published: ""
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_publish: true
          restricted: ""
          disallowed_ip: ""
          name: ""
    _1_vod_channel__channel__folder_root_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Folder'
      example:
        result: success
        data:
          media_duration: maria
          discarded: ""
          media_count: 0.8008281904610115
          effective_encodings: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          allowed_ip:
          - 127.0.0.1
          - 127.0.0.1
          path: ""
          allowed_country:
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          - name: maria
            alpha3: maria
            id: maria
            official_state_name: maria
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          validated: ""
          id: 1jhvl2uqa5v8a
          auto_validate: true
          key: maria
          player:
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          - enable_facebook: true
            facebook_back_link: maria
            show_related: 42
            is_channel_default: true
            encoding_change_enabled: 42
            show_audio: true
            preload_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            media_thumbnail_anchor: TOP
            id: 1jhvl2uqa5v8a
            show_speed: true
            height: 42
            enable_twitter: true
            show_media_info: true
            deleted_at: 2021-09-15T14:23:41+00:00
            show_loop: true
            ads:
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            - offset: maria
              mimetype: maria
              id: 1jhvl2uqa5v8a
              href: maria
              type: PRE_ROLL
              url: https://infomaniak.com
              tracking_id: maria
            chromecast: true
            logo_margin_vertical: 42
            name: maria
            twitter_related: twitter_related
            default_speed: 1
            controlbar_color: '#FF0077'
            twitter_via: maria
            is360: 42
            control_color: '#FF0077'
            restrict_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            show_fullscreen: true
            encoding_limit: 42
            geoip_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            logo_percentage: 42
            show_default_logo: true
            auto_start: true
            show_replay: true
            play_related: 42
            logo_margin_horizontal: 42
            shares:
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            - target_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              target_id: maria
              encoding:
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              - container: FLV
                video_codec: H264
                streams:
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                - video_height: 42
                  updated_at: 2021-09-15T14:23:41+00:00
                  video_width: 42
                  created_at: 2021-09-15T14:23:41+00:00
                  audio_bitrate: 42
                  id: 1jhvl2uqa5v8a
                  audio_sampling: 42
                  encoding:
                  - null
                  - null
                  video_bitrate: 42
                  deleted_at: 2021-09-15T14:23:41+00:00
                audio_channel: MONO_1_0
                created_at: 2021-09-15T14:23:41+00:00
                audio_codec: AAC
                preset:
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                - template:
                    container: 2
                    streams:
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    - audio_bitrate: 64000
                      audio_sampling: 48000
                    audio_channel: 2
                    audio_codec: 1
                  name: maria
                  id: 1jhvl2uqa5v8a
                  type: PLAYBACK
                  deleted_at: 2021-09-15T14:23:41+00:00
                deleted_at: 2021-09-15T14:23:41+00:00
                updated_at: 2021-09-15T14:23:41+00:00
                owned: true
                name: maria
                id: 1jhvl2uqa5v8a
                copy: true
                video_aspect: LETTERBOX
                video_fps: video_fps
              deleted_at: 2021-09-15T14:23:41+00:00
              target: null
              valid_until: ""
              updated_at: 2021-09-15T14:23:41+00:00
              manifests: maria
              comment: maria
              links:
              - links
              - links
              id: 1jhvl2uqa5v8a
              validity: 42
              timestamp: maria
              player: null
            default: true
            updated_at: 2021-09-15T14:23:41+00:00
            show_controls: true
            facebook_player_embed: true
            force_media_ratio: true
            show_viewers: true
            show_progression: true
            enable_embed_code: true
            twitter_back_link: maria
            time_before_hide_cb: 42
            show_duration: true
            logo_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            control_active_color: '#FF0077'
            auto_hide_controls: true
            owned: true
            audio_volume: 42
            show_viewers_after: 42
            width: 42
            logo_anchor: TOP_LEFT
            show_viewers_only_after: true
            related_type: SIMILAR_TAGS
            show_media_thumbnail: true
            interrupt_image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
          image: image
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          disallowed_country: ""
          published: ""
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_publish: true
          restricted: ""
          disallowed_ip: ""
          name: ""
    _1_vod_channel__channel__folder__folder__playlist_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Api_Playlist'
            type: array
      example:
        result: success
        data:
        - image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          medias_duration: medias_duration
          auto_add_media_by_description: auto_add_media_by_description
          prepend: true
          medias_info: true
          live_reference_time: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          sort: CREATED_ASC
          published: true
          nav_position: ABOVE
          type: STATIC
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_add_media_by_name: auto_add_media_by_name
          tags:
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          mode: MERGE
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          validated: true
          medias_thumbnail: true
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          chapter_style: DARK
          id: 1jhvl2uqa5v8a
          medias_count: 42
        - image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          medias_duration: medias_duration
          auto_add_media_by_description: auto_add_media_by_description
          prepend: true
          medias_info: true
          live_reference_time: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          sort: CREATED_ASC
          published: true
          nav_position: ABOVE
          type: STATIC
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_add_media_by_name: auto_add_media_by_name
          tags:
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          mode: MERGE
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          validated: true
          medias_thumbnail: true
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          chapter_style: DARK
          id: 1jhvl2uqa5v8a
          medias_count: 42
    _1_vod_channel__channel__media_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Api_Media'
            type: array
      example:
        result: success
        data:
        - preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playbacks:
            encodingId:
              strategy:
                mimetype: video/mp4
                ' data':
                  encoding: Copy source
                  strategy: Progressive download (Best available)
                  key: "null"
                url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          shot_boundaries: "[1, 2,10]"
          chapters:
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          upload:
            ready_at: 2021-09-15T14:23:41+00:00
            meta:
              nb_programs: 42
              format_long_name: maria
              sample_aspect_ratio_source: ""
              created_at: 2021-09-15T14:23:41+00:00
              nb_streams: 42
              tags: tags
              duration: maria
              start_time: maria
              bit_rate: 42
              sample_aspect_ratio: ""
              size: 42
              updated_at: 2021-09-15T14:23:41+00:00
              probe_score: 42
              display_aspect_ratio_source: ""
              display_aspect_ratio: ""
              width: ""
              format_name: maria
              height: ""
            index: 0
            progress: 50
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            url: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          annotations:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbstrip:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          language:
          - endonym: maria
            name: maria
            id: maria
          - endonym: maria
            name: maria
            id: maria
          source:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          logos:
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          duration: "276.62"
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          path: ""
          journal:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          validated: true
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          state: 192
          published_at: 2021-09-15T14:23:41+00:00
          key_restricted: ""
          subtitles:
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          streams: "[audio, video]"
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          collected_at: 2021-09-15T14:23:41+00:00
          tags:
          - tags
          - tags
          ip_restricted: ""
          folder: 1jhvl2uqa5v8a
          name: ""
          manifests:
            xml:
              data:
                format: XML
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
            json:
              data:
                format: JSON
              mimetype: application/json
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
            yml:
              mimetype: text/yaml
              ' data':
                format: YAML
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
            v1xml:
              data:
                format: XML (v1 compatibility)
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
            yaml:
              data:
                format: YAML
              mimetype: text/yaml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
          scenes:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          progress: 50
          country_restricted: ""
          category: moto
          poster:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
        - preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playbacks:
            encodingId:
              strategy:
                mimetype: video/mp4
                ' data':
                  encoding: Copy source
                  strategy: Progressive download (Best available)
                  key: "null"
                url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          shot_boundaries: "[1, 2,10]"
          chapters:
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          upload:
            ready_at: 2021-09-15T14:23:41+00:00
            meta:
              nb_programs: 42
              format_long_name: maria
              sample_aspect_ratio_source: ""
              created_at: 2021-09-15T14:23:41+00:00
              nb_streams: 42
              tags: tags
              duration: maria
              start_time: maria
              bit_rate: 42
              sample_aspect_ratio: ""
              size: 42
              updated_at: 2021-09-15T14:23:41+00:00
              probe_score: 42
              display_aspect_ratio_source: ""
              display_aspect_ratio: ""
              width: ""
              format_name: maria
              height: ""
            index: 0
            progress: 50
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            url: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          annotations:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbstrip:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          language:
          - endonym: maria
            name: maria
            id: maria
          - endonym: maria
            name: maria
            id: maria
          source:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          logos:
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          duration: "276.62"
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          path: ""
          journal:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          validated: true
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          state: 192
          published_at: 2021-09-15T14:23:41+00:00
          key_restricted: ""
          subtitles:
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          streams: "[audio, video]"
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          collected_at: 2021-09-15T14:23:41+00:00
          tags:
          - tags
          - tags
          ip_restricted: ""
          folder: 1jhvl2uqa5v8a
          name: ""
          manifests:
            xml:
              data:
                format: XML
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
            json:
              data:
                format: JSON
              mimetype: application/json
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
            yml:
              mimetype: text/yaml
              ' data':
                format: YAML
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
            v1xml:
              data:
                format: XML (v1 compatibility)
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
            yaml:
              data:
                format: YAML
              mimetype: text/yaml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
          scenes:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          progress: 50
          country_restricted: ""
          category: moto
          poster:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
    _1_vod_channel__channel__media__media__get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Media'
      example:
        result: success
        data:
          preview:
            audio_raw:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          playbacks:
            encodingId:
              strategy:
                mimetype: video/mp4
                ' data':
                  encoding: Copy source
                  strategy: Progressive download (Best available)
                  key: "null"
                url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          shot_boundaries: "[1, 2,10]"
          chapters:
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          - image:
              data: b64encodedData
              mimetype: image/png
              encoding: encoding
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            description: maria
            created_at: 2021-09-15T14:23:41+00:00
            index: 42
            id: 1jhvl2uqa5v8a
            published: true
            deleted_at: 2021-09-15T14:23:41+00:00
            timestamp: timestamp
          upload:
            ready_at: 2021-09-15T14:23:41+00:00
            meta:
              nb_programs: 42
              format_long_name: maria
              sample_aspect_ratio_source: ""
              created_at: 2021-09-15T14:23:41+00:00
              nb_streams: 42
              tags: tags
              duration: maria
              start_time: maria
              bit_rate: 42
              sample_aspect_ratio: ""
              size: 42
              updated_at: 2021-09-15T14:23:41+00:00
              probe_score: 42
              display_aspect_ratio_source: ""
              display_aspect_ratio: ""
              width: ""
              format_name: maria
              height: ""
            index: 0
            progress: 50
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            url: ""
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          annotations:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            from: from
            id: 1jhvl2uqa5v8a
            published: true
            to: to
            body: maria
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbstrip:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          language:
          - endonym: maria
            name: maria
            id: maria
          - endonym: maria
            name: maria
            id: maria
          source:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          logos:
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          - margin: 42
            data: maria
            overlayLogos:
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            - logo_id: 42
              uuidSequence:
                uuidSequence: null
                model_type: maria
                created_at: 2021-09-15T14:23:41+00:00
                model: null
                model_id: 42
                id: 1jhvl2uqa5v8a
                uuid: maria
              link:
                size: 42
                size_human_readable: maria
                mimetype: maria
                url: https://infomaniak.com
              index: 42
              created_at: 2021-09-15T14:23:41+00:00
              media:
              - null
              - null
              uuid: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              activities:
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              - actor: null
                context: maria
                cause: ELOQUENT_CREATED
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
                message: maria
              media_id: 42
              progress: progress
              logo:
              - null
              - null
              id: 1jhvl2uqa5v8a
            uuidSequence:
              uuidSequence: null
              model_type: maria
              created_at: 2021-09-15T14:23:41+00:00
              model: null
              model_id: 42
              id: 1jhvl2uqa5v8a
              uuid: maria
            channel:
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            - auto_empty_trash: maria
              journal:
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              - updated_at: 2021-09-15T14:23:41+00:00
                created_at: 2021-09-15T14:23:41+00:00
                media:
                - null
                - null
              updated_at: 2021-09-15T14:23:41+00:00
              name: maria
              description: maria
              created_at: 2021-09-15T14:23:41+00:00
              id: maria
              deleted_at: 2021-09-15T14:23:41+00:00
              statistic_ignored_ip:
              - 127.0.0.1
              - 127.0.0.1
            created_at: 2021-09-15T14:23:41+00:00
            uuid: maria
            deleted_at: 2021-09-15T14:23:41+00:00
            mode: OVERLAY
            medias:
            - null
            - null
            size: 42
            updated_at: 2021-09-15T14:23:41+00:00
            width: 42
            mimetype: maria
            id: 1jhvl2uqa5v8a
            position: TOP_LEFT
            channel_id: 42
            height: 42
          duration: "276.62"
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          path: ""
          journal:
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          - updated_at: 2021-09-15T14:23:41+00:00
            created_at: 2021-09-15T14:23:41+00:00
            media:
            - null
            - null
          validated: true
          updated_at: 2021-09-15T14:23:41+00:00
          discarded_at: 2021-09-15T14:23:41+00:00
          id: 1jhvl2uqa5v8a
          state: 192
          published_at: 2021-09-15T14:23:41+00:00
          key_restricted: ""
          subtitles:
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          - default: true
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            link:
            - link
            - link
            created_at: 2021-09-15T14:23:41+00:00
            language:
            - endonym: maria
              name: maria
              id: maria
            - endonym: maria
              name: maria
              id: maria
            id: 1jhvl2uqa5v8a
            published: true
            lines: lines
            deleted_at: 2021-09-15T14:23:41+00:00
          thumbnail:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
          encodings:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          streams: "[audio, video]"
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          sample:
            audio:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            video:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
          collected_at: 2021-09-15T14:23:41+00:00
          tags:
          - tags
          - tags
          ip_restricted: ""
          folder: 1jhvl2uqa5v8a
          name: ""
          manifests:
            xml:
              data:
                format: XML
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
            json:
              data:
                format: JSON
              mimetype: application/json
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
            yml:
              mimetype: text/yaml
              ' data':
                format: YAML
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
            v1xml:
              data:
                format: XML (v1 compatibility)
              mimetype: application/xml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
            yaml:
              data:
                format: YAML
              mimetype: text/yaml
              url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
          scenes:
            updated_at: 2021-09-15T14:23:41+00:00
            link:
              size: 42
              size_human_readable: maria
              mimetype: maria
              url: https://infomaniak.com
            created_at: 2021-09-15T14:23:41+00:00
            id: 1jhvl2uqa5v8a
            deleted_at: 2021-09-15T14:23:41+00:00
          progress: 50
          country_restricted: ""
          category: moto
          poster:
            size: 42
            size_human_readable: maria
            mimetype: maria
            url: https://infomaniak.com
    _1_vod_channel__channel__media__media__chapter_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/shortChapter'
      example:
        result: success
        updated_at: 2022-01-18T08:59:20+00:00
        description: description
        created_at: 2022-01-18T08:59:20+00:00
        index: 0
        id: 1jhvl2uqae5sa
        published: true
        deleted_at: 2022-01-18T08:59:20+00:00
        timestamp: 2
    _1_vod_channel__channel__media__media__chapter__chapter__get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Chapter'
      example:
        result: success
        data:
          image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          index: 42
          id: 1jhvl2uqa5v8a
          published: true
          deleted_at: 2021-09-15T14:23:41+00:00
          timestamp: timestamp
    _1_vod_channel__channel__media__media__cut_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            example: New cut task dispatched
            type: string
      example:
        result: success
        data: New cut task dispatched
    _1_vod_channel__channel__player_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Api_Player'
            type: array
      example:
        result: success
        data:
        - enable_facebook: true
          facebook_back_link: maria
          show_related: 42
          is_channel_default: true
          encoding_change_enabled: 42
          show_audio: true
          preload_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          media_thumbnail_anchor: TOP
          id: 1jhvl2uqa5v8a
          show_speed: true
          height: 42
          enable_twitter: true
          show_media_info: true
          deleted_at: 2021-09-15T14:23:41+00:00
          show_loop: true
          ads:
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          chromecast: true
          logo_margin_vertical: 42
          name: maria
          twitter_related: twitter_related
          default_speed: 1
          controlbar_color: '#FF0077'
          twitter_via: maria
          is360: 42
          control_color: '#FF0077'
          restrict_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          show_fullscreen: true
          encoding_limit: 42
          geoip_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          logo_percentage: 42
          show_default_logo: true
          auto_start: true
          show_replay: true
          play_related: 42
          logo_margin_horizontal: 42
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          default: true
          updated_at: 2021-09-15T14:23:41+00:00
          show_controls: true
          facebook_player_embed: true
          force_media_ratio: true
          show_viewers: true
          show_progression: true
          enable_embed_code: true
          twitter_back_link: maria
          time_before_hide_cb: 42
          show_duration: true
          logo_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          control_active_color: '#FF0077'
          auto_hide_controls: true
          owned: true
          audio_volume: 42
          show_viewers_after: 42
          width: 42
          logo_anchor: TOP_LEFT
          show_viewers_only_after: true
          related_type: SIMILAR_TAGS
          show_media_thumbnail: true
          interrupt_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
        - enable_facebook: true
          facebook_back_link: maria
          show_related: 42
          is_channel_default: true
          encoding_change_enabled: 42
          show_audio: true
          preload_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          media_thumbnail_anchor: TOP
          id: 1jhvl2uqa5v8a
          show_speed: true
          height: 42
          enable_twitter: true
          show_media_info: true
          deleted_at: 2021-09-15T14:23:41+00:00
          show_loop: true
          ads:
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          chromecast: true
          logo_margin_vertical: 42
          name: maria
          twitter_related: twitter_related
          default_speed: 1
          controlbar_color: '#FF0077'
          twitter_via: maria
          is360: 42
          control_color: '#FF0077'
          restrict_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          show_fullscreen: true
          encoding_limit: 42
          geoip_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          logo_percentage: 42
          show_default_logo: true
          auto_start: true
          show_replay: true
          play_related: 42
          logo_margin_horizontal: 42
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          default: true
          updated_at: 2021-09-15T14:23:41+00:00
          show_controls: true
          facebook_player_embed: true
          force_media_ratio: true
          show_viewers: true
          show_progression: true
          enable_embed_code: true
          twitter_back_link: maria
          time_before_hide_cb: 42
          show_duration: true
          logo_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          control_active_color: '#FF0077'
          auto_hide_controls: true
          owned: true
          audio_volume: 42
          show_viewers_after: 42
          width: 42
          logo_anchor: TOP_LEFT
          show_viewers_only_after: true
          related_type: SIMILAR_TAGS
          show_media_thumbnail: true
          interrupt_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
    _1_vod_channel__channel__player__player__get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Player'
      example:
        result: success
        data:
          enable_facebook: true
          facebook_back_link: maria
          show_related: 42
          is_channel_default: true
          encoding_change_enabled: 42
          show_audio: true
          preload_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          media_thumbnail_anchor: TOP
          id: 1jhvl2uqa5v8a
          show_speed: true
          height: 42
          enable_twitter: true
          show_media_info: true
          deleted_at: 2021-09-15T14:23:41+00:00
          show_loop: true
          ads:
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          - offset: maria
            mimetype: maria
            id: 1jhvl2uqa5v8a
            href: maria
            type: PRE_ROLL
            url: https://infomaniak.com
            tracking_id: maria
          chromecast: true
          logo_margin_vertical: 42
          name: maria
          twitter_related: twitter_related
          default_speed: 1
          controlbar_color: '#FF0077'
          twitter_via: maria
          is360: 42
          control_color: '#FF0077'
          restrict_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          show_fullscreen: true
          encoding_limit: 42
          geoip_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          logo_percentage: 42
          show_default_logo: true
          auto_start: true
          show_replay: true
          play_related: 42
          logo_margin_horizontal: 42
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          default: true
          updated_at: 2021-09-15T14:23:41+00:00
          show_controls: true
          facebook_player_embed: true
          force_media_ratio: true
          show_viewers: true
          show_progression: true
          enable_embed_code: true
          twitter_back_link: maria
          time_before_hide_cb: 42
          show_duration: true
          logo_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          control_active_color: '#FF0077'
          auto_hide_controls: true
          owned: true
          audio_volume: 42
          show_viewers_after: 42
          width: 42
          logo_anchor: TOP_LEFT
          show_viewers_only_after: true
          related_type: SIMILAR_TAGS
          show_media_thumbnail: true
          interrupt_image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
    _1_vod_channel__channel__playlist__playlist__get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Playlist'
      example:
        result: success
        data:
          image:
            data: b64encodedData
            mimetype: image/png
            encoding: encoding
          medias_duration: medias_duration
          auto_add_media_by_description: auto_add_media_by_description
          prepend: true
          medias_info: true
          live_reference_time: maria
          description: maria
          created_at: 2021-09-15T14:23:41+00:00
          sort: CREATED_ASC
          published: true
          nav_position: ABOVE
          type: STATIC
          deleted_at: 2021-09-15T14:23:41+00:00
          auto_add_media_by_name: auto_add_media_by_name
          tags:
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          - color: 42
            updated_at: 2021-09-15T14:23:41+00:00
            name: maria
            created_at: 2021-09-15T14:23:41+00:00
            id: 42
          mode: MERGE
          shares:
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          - target_type: maria
            created_at: 2021-09-15T14:23:41+00:00
            target_id: maria
            encoding:
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            - container: FLV
              video_codec: H264
              streams:
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              - video_height: 42
                updated_at: 2021-09-15T14:23:41+00:00
                video_width: 42
                created_at: 2021-09-15T14:23:41+00:00
                audio_bitrate: 42
                id: 1jhvl2uqa5v8a
                audio_sampling: 42
                encoding:
                - null
                - null
                video_bitrate: 42
                deleted_at: 2021-09-15T14:23:41+00:00
              audio_channel: MONO_1_0
              created_at: 2021-09-15T14:23:41+00:00
              audio_codec: AAC
              preset:
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              - template:
                  container: 2
                  streams:
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  - audio_bitrate: 64000
                    audio_sampling: 48000
                  audio_channel: 2
                  audio_codec: 1
                name: maria
                id: 1jhvl2uqa5v8a
                type: PLAYBACK
                deleted_at: 2021-09-15T14:23:41+00:00
              deleted_at: 2021-09-15T14:23:41+00:00
              updated_at: 2021-09-15T14:23:41+00:00
              owned: true
              name: maria
              id: 1jhvl2uqa5v8a
              copy: true
              video_aspect: LETTERBOX
              video_fps: video_fps
            deleted_at: 2021-09-15T14:23:41+00:00
            target: null
            valid_until: ""
            updated_at: 2021-09-15T14:23:41+00:00
            manifests: maria
            comment: maria
            links:
            - links
            - links
            id: 1jhvl2uqa5v8a
            validity: 42
            timestamp: maria
            player: null
          validated: true
          medias_thumbnail: true
          updated_at: 2021-09-15T14:23:41+00:00
          name: maria
          chapter_style: DARK
          id: 1jhvl2uqa5v8a
          medias_count: 42
    _1_vod_channel__channel__share_post_request:
      properties:
        target:
          description: uuid of media or playlist
          example: 1jhvl2uqacxj5
          type: string
        player:
          description: uuid of player
          example: 1jhvl2uqacxj5
          type: string
        encoding:
          description: uuid of encoding
          example: 1jhvl2uqacxj5
          type: string
    _1_vod_channel__channel__share_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/shortShare'
      example:
        result: success
        updated_at: 2021-09-15T14:23:41+00:00
        target_type: maria
        created_at: 2021-09-15T14:23:41+00:00
        target_id: maria
        comment: maria
        links:
        - ""
        - ""
        id: 1jhvl2uqa5v8a
        validity: 42
        deleted_at: 2021-09-15T14:23:41+00:00
        timestamp: maria
    _1_vod_channel__channel__share__share__get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Api_Share'
      example:
        result: success
        data:
          target_type: maria
          created_at: 2021-09-15T14:23:41+00:00
          target_id: maria
          encoding:
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          - container: FLV
            video_codec: H264
            streams:
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            - video_height: 42
              updated_at: 2021-09-15T14:23:41+00:00
              video_width: 42
              created_at: 2021-09-15T14:23:41+00:00
              audio_bitrate: 42
              id: 1jhvl2uqa5v8a
              audio_sampling: 42
              encoding:
              - null
              - null
              video_bitrate: 42
              deleted_at: 2021-09-15T14:23:41+00:00
            audio_channel: MONO_1_0
            created_at: 2021-09-15T14:23:41+00:00
            audio_codec: AAC
            preset:
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            - template:
                container: 2
                streams:
                - audio_bitrate: 64000
                  audio_sampling: 48000
                - audio_bitrate: 64000
                  audio_sampling: 48000
                audio_channel: 2
                audio_codec: 1
              name: maria
              id: 1jhvl2uqa5v8a
              type: PLAYBACK
              deleted_at: 2021-09-15T14:23:41+00:00
            deleted_at: 2021-09-15T14:23:41+00:00
            updated_at: 2021-09-15T14:23:41+00:00
            owned: true
            name: maria
            id: 1jhvl2uqa5v8a
            copy: true
            video_aspect: LETTERBOX
            video_fps: video_fps
          deleted_at: 2021-09-15T14:23:41+00:00
          target: null
          valid_until: ""
          updated_at: 2021-09-15T14:23:41+00:00
          manifests: maria
          comment: maria
          links:
          - links
          - links
          id: 1jhvl2uqa5v8a
          validity: 42
          timestamp: maria
          player: null
    _1_vod_channel__channel__share__share__token_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties: {}
        type: object
      example:
        result: success
    _1_vod_channel__channel__statistics_media__media__viewers_get_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              description: TODO default missing array inner type to string
              type: string
            type: array
      example:
        result: success
        data:
        - data
        - data
    _1_vod_channel__channel__upload_post_request:
      properties:
        folder:
          description: A valid UUID for Folder
          example: 1jhvl2uqa5v8a
          format: uuid
          type: string
        url:
          description: Provide either url to import video from or file below
          example: http://infomaniak.com/video.mp4
          type: string
        file: {}
        name:
          example: video name
          type: string
        size:
          description: expected video size
          example: "230000"
          type: string
      required:
      - folder
    _1_vod_channel__channel__upload_post_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/success_media'
      example:
        result: success
        data:
          shot_boundaries: "[]"
          upload:
            ready_at: 2022-01-18T08:59:20+00:00
            index: 0
            progress: 50
            created_at: 2022-01-18T08:59:20+00:00
            id: 1jhvl2uqae5sa
            url: https://infomaniak.ch/url.mp4
          streams: "[audio,video]"
          description: video description
          created_at: 2022-01-18T08:59:20+00:00
          published: true
          ip_restricted: false
          folder:
            media_duration: 12.16
            image: image
            discarded: discarded
            media_count: 2
            description: folder description
            created_at: 2022-01-18T08:59:20+00:00
            allowed_ip:
            - 127.0.0.1
            - 127.0.0.1
            disallowed_country: ""
            published: true
            deleted_at: 2022-01-18T08:59:20+00:00
            auto_publish: true
            allowed_country:
            - name: maria
              alpha3: maria
              id: maria
              official_state_name: maria
            - name: maria
              alpha3: maria
              id: maria
              official_state_name: maria
            validated: true
            updated_at: 2022-01-18T08:59:20+00:00
            discarded_at: 2022-01-18T08:59:20+00:00
            restricted: false
            disallowed_ip: ""
            name: foldername
            id: 1jhvl2uqae5sa
            auto_validate: true
            key: key
          validated: true
          updated_at: 2022-01-18T08:59:20+00:00
          name: video name
          country_restricted: false
          id: 1jhvl2uqae5sa
          state: 4
          key_restricted: false
    Request_body:
      properties:
        email:
          description: Email
          example: myemail@mydomain.com
          title: email
          type: string
      required:
      - email
      title: Request body
    _1_swiss_backups__swiss_backup_id__admin_put_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              type: string
            type: array
      example:
        result: success
        data:
        - data
        - data
    _1_swiss_backups__swiss_backup_id__admin_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_swiss_backups__swiss_backup_id__admin_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_swiss_backups__swiss_backup_id__admin_put_404_response_allOf_error:
      description: Error object
      example:
        code: not_found
        description: Not Found
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - not_found
          example: not_found
          type: string
        description:
          description: Description of the error
          enum:
          - Not Found
          example: Not Found
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_swiss_backups__swiss_backup_id__admin_put_404_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_404_response_allOf_error'
      example:
        result: error
        error:
          code: not_found
          description: Not Found
          errors:
          - errors
          - errors
    _1_swiss_backups__swiss_backup_id__admin_put_500_response_allOf_error:
      description: Error object
      example:
        code: internal_server_error
        description: Internal Server Error
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - internal_server_error
          example: internal_server_error
          type: string
        description:
          description: Description of the error
          enum:
          - Internal Server Error
          example: Internal Server Error
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_swiss_backups__swiss_backup_id__admin_put_500_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_put_500_response_allOf_error'
      example:
        result: error
        error:
          code: internal_server_error
          description: Internal Server Error
          errors:
          - errors
          - errors
    _1_swiss_backups__swiss_backup_id__admin_post_403_response_allOf_error:
      description: Error object
      example:
        code: not_authorized
        description: Forbidden
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - not_authorized
          example: not_authorized
          type: string
        description:
          description: Description of the error
          enum:
          - Forbidden
          example: Forbidden
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_swiss_backups__swiss_backup_id__admin_post_403_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_post_403_response_allOf_error'
      example:
        result: error
        error:
          code: not_authorized
          description: Forbidden
          errors:
          - errors
          - errors
    _1_swiss_backups__swiss_backup_id__admin_request_password_post_200_response_allOf_data:
      oneOf:
      - $ref: '#/components/schemas/SwissBackupTokenPassword'
      - items:
          type: string
    _1_swiss_backups__swiss_backup_id__admin_request_password_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__admin_request_password_post_200_response_allOf_data'
      example:
        result: success
        data:
          token: token
    _1_swiss_backups__swiss_backup_id__slots_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SwissBackupSlot'
            type: array
      example:
        result: success
        data:
        - parent: "{}"
          IPS_key: IPS_key
          created_at: 1666354846
          type: slot
          directory: /identity/v3
          endpoint: https://swiss-backup.infomaniak.com
          domain_name: default
          subtype: swift
          locked_at: 1666354979
          id: 0
          locked: true
          lang: 1
          slot_name: My Slot
          unit_admin: true
          email: myemail@mydomain.com
          tenant_name: sb_project_SBI-AA000000
          connection_type: swift
          usage_last_check: 1666685147
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          activate_notifications: true
          size: 200000000000
          container_name: default
          customer_name: SwissBackup Slot
          config: config
          storage_used: 100000000000
          username: SBA-AA000000-ADMIN
        - parent: "{}"
          IPS_key: IPS_key
          created_at: 1666354846
          type: slot
          directory: /identity/v3
          endpoint: https://swiss-backup.infomaniak.com
          domain_name: default
          subtype: swift
          locked_at: 1666354979
          id: 0
          locked: true
          lang: 1
          slot_name: My Slot
          unit_admin: true
          email: myemail@mydomain.com
          tenant_name: sb_project_SBI-AA000000
          connection_type: swift
          usage_last_check: 1666685147
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          activate_notifications: true
          size: 200000000000
          container_name: default
          customer_name: SwissBackup Slot
          config: config
          storage_used: 100000000000
          username: SBA-AA000000-ADMIN
    Request_body_1:
      properties:
        connection_type:
          description: "Slot connection type (Swift, S3, FTP)"
          enum:
          - ftp
          - s3
          - swift
          example: swift
          title: connection_type
          type: string
        customer_name:
          description: "Customer name of the resource `{name}`"
          example: SwissBackup Slot
          maxLength: 255
          minLength: 2
          title: customer_name
          type: string
        email:
          description: Email
          example: myemail@mydomain.com
          title: email
          type: string
        firstname:
          example: Jean
          maxLength: 255
          title: firstname
          type: string
          nullable: true
        lang:
          description: Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5
            = es)
          example: 1
          title: lang
          type: integer
        lastname:
          example: Paul
          maxLength: 255
          title: lastname
          type: string
          nullable: true
        size:
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
          minimum: 1000000000
          title: size
          type: integer
        type:
          description: "Type of the resource `{name}`"
          enum:
          - acronis
          - linux
          - mobile
          - office
          - other
          - qnap
          - server
          - synology
          - virtual
          - workstation
          example: workstation
          title: type
          type: string
      required:
      - customer_name
      - email
      - size
      - type
      title: Request body
    _1_swiss_backups__swiss_backup_id__slots_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/SwissBackupSlot'
      example:
        result: success
        data:
          parent: "{}"
          IPS_key: IPS_key
          created_at: 1666354846
          type: slot
          directory: /identity/v3
          endpoint: https://swiss-backup.infomaniak.com
          domain_name: default
          subtype: swift
          locked_at: 1666354979
          id: 0
          locked: true
          lang: 1
          slot_name: My Slot
          unit_admin: true
          email: myemail@mydomain.com
          tenant_name: sb_project_SBI-AA000000
          connection_type: swift
          usage_last_check: 1666685147
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          activate_notifications: true
          size: 200000000000
          container_name: default
          customer_name: SwissBackup Slot
          config: config
          storage_used: 100000000000
          username: SBA-AA000000-ADMIN
    _1_swiss_backups__swiss_backup_id__slots__slot_id__disable_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            type: boolean
      example:
        result: success
        data: true
    _1_swiss_backups_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SwissBackup'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_locked: true
          storage_reserved_acronis: 100000000000
          nb_slots_free_storage: 2
          size_free_storage: 100000000000
          has_maintenance: true
          has_operation_in_progress: true
          internal_name: internal_name
          parent_service_name: parent_service_name
          max_slots_server: 3
          due_at: 7
          id: 0
          max_slots: 7
          storage_used_free_storage: 9000000000
          unique_id: 7
          fqdn: fqdn
          service_name: service_name
          storage_reserved: 200000000000
          deleted_at: 5
          version: 2
          users:
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          parent_service_id: 3
          new_interface: "false"
          nb_slots_server: 1
          size: 200000000000
          has_been_demo: "true"
          parent_id: 9
          is_migrated: "false"
          bill_reference: bill_reference
          is_trial: true
          max_slots_workstation: 5
          max_slots_mobile: 6
          status:
            activated_at: 2
            activated_by:
            - activated_by
            - activated_by
            locked:
              infomaniak: true
              superuser: true
            maintenance:
              technical: true
              infomaniak: true
              superuser: true
          nb_slots_mobile: 1
          IPS_key: IPS_key
          created_at: 1666354846
          description: description
          admin: admin
          expired_at: 5
          is_demo: "false"
          promo: 0
          nb_unallocated_slots: 0
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          account_name: Infomaniak SA
          storage_reserved_free_storage: 100000000000
          is_zero_price: true
          max_slots_free_storage: 7
          nb_slots: 5
          nb_unallocated_mobile_workstation: 0
          account_id: 6
          max_slots_virtual: 4
          is_free: true
          periodicity: 1
          nb_slots_virtual: 0
          customer_name: SwissBackup Slot
          nb_slots_workstation: 1
          storage_used: 100000000000
        - is_locked: true
          storage_reserved_acronis: 100000000000
          nb_slots_free_storage: 2
          size_free_storage: 100000000000
          has_maintenance: true
          has_operation_in_progress: true
          internal_name: internal_name
          parent_service_name: parent_service_name
          max_slots_server: 3
          due_at: 7
          id: 0
          max_slots: 7
          storage_used_free_storage: 9000000000
          unique_id: 7
          fqdn: fqdn
          service_name: service_name
          storage_reserved: 200000000000
          deleted_at: 5
          version: 2
          users:
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          parent_service_id: 3
          new_interface: "false"
          nb_slots_server: 1
          size: 200000000000
          has_been_demo: "true"
          parent_id: 9
          is_migrated: "false"
          bill_reference: bill_reference
          is_trial: true
          max_slots_workstation: 5
          max_slots_mobile: 6
          status:
            activated_at: 2
            activated_by:
            - activated_by
            - activated_by
            locked:
              infomaniak: true
              superuser: true
            maintenance:
              technical: true
              infomaniak: true
              superuser: true
          nb_slots_mobile: 1
          IPS_key: IPS_key
          created_at: 1666354846
          description: description
          admin: admin
          expired_at: 5
          is_demo: "false"
          promo: 0
          nb_unallocated_slots: 0
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          account_name: Infomaniak SA
          storage_reserved_free_storage: 100000000000
          is_zero_price: true
          max_slots_free_storage: 7
          nb_slots: 5
          nb_unallocated_mobile_workstation: 0
          account_id: 6
          max_slots_virtual: 4
          is_free: true
          periodicity: 1
          nb_slots_virtual: 0
          customer_name: SwissBackup Slot
          nb_slots_workstation: 1
          storage_used: 100000000000
        page: 2
    _1_swiss_backups__swiss_backup_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/SwissBackup'
      example:
        result: success
        data:
          is_locked: true
          storage_reserved_acronis: 100000000000
          nb_slots_free_storage: 2
          size_free_storage: 100000000000
          has_maintenance: true
          has_operation_in_progress: true
          internal_name: internal_name
          parent_service_name: parent_service_name
          max_slots_server: 3
          due_at: 7
          id: 0
          max_slots: 7
          storage_used_free_storage: 9000000000
          unique_id: 7
          fqdn: fqdn
          service_name: service_name
          storage_reserved: 200000000000
          deleted_at: 5
          version: 2
          users:
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          parent_service_id: 3
          new_interface: "false"
          nb_slots_server: 1
          size: 200000000000
          has_been_demo: "true"
          parent_id: 9
          is_migrated: "false"
          bill_reference: bill_reference
          is_trial: true
          max_slots_workstation: 5
          max_slots_mobile: 6
          status:
            activated_at: 2
            activated_by:
            - activated_by
            - activated_by
            locked:
              infomaniak: true
              superuser: true
            maintenance:
              technical: true
              infomaniak: true
              superuser: true
          nb_slots_mobile: 1
          IPS_key: IPS_key
          created_at: 1666354846
          description: description
          admin: admin
          expired_at: 5
          is_demo: "false"
          promo: 0
          nb_unallocated_slots: 0
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          account_name: Infomaniak SA
          storage_reserved_free_storage: 100000000000
          is_zero_price: true
          max_slots_free_storage: 7
          nb_slots: 5
          nb_unallocated_mobile_workstation: 0
          account_id: 6
          max_slots_virtual: 4
          is_free: true
          periodicity: 1
          nb_slots_virtual: 0
          customer_name: SwissBackup Slot
          nb_slots_workstation: 1
          storage_used: 100000000000
    Request_body_2:
      properties:
        periodicity:
          description: Commitment period (in years)
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          example: 1
          format: double
          title: periodicity
          type: number
        storage_reserved_acronis:
          description: Allocated storage size for Acronis (Bytes)
          example: 100000000
          title: storage_reserved_acronis
          type: integer
      title: Request body
    _1_swiss_backups__swiss_backup_id__put_422_response_allOf_error:
      description: Error object
      example:
        code: unprocessable_entity
        description: Unprocessable Entity
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - unprocessable_entity
          example: unprocessable_entity
          type: string
        description:
          description: Description of the error
          enum:
          - Unprocessable Entity
          example: Unprocessable Entity
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_swiss_backups__swiss_backup_id__put_422_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__put_422_response_allOf_error'
      example:
        result: error
        error:
          code: unprocessable_entity
          description: Unprocessable Entity
          errors:
          - errors
          - errors
    _1_swiss_backups__swiss_backup_id__acronis_informations_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/AcronisUsage'
      example:
        result: success
        data:
          nb_slots_server: 2
          nb_slots_mobile: 5
          nb_slots_virtual: 1
          storage_used_acronis: 123556789000
          nb_slots_workstation: 0
    Request_body_3:
      properties:
        activate_notifications:
          description: True if the user wants to receive Acronis notifications
          example: true
          title: activate_notifications
          type: boolean
        customer_name:
          description: "Customer name of the resource `{name}`"
          example: SwissBackup Slot
          maxLength: 255
          minLength: 2
          title: customer_name
          type: string
        email:
          description: Email
          example: myemail@mydomain.com
          title: email
          type: string
        lang:
          description: Language identifier (1 = fr / 2 = en / 3 = de / 4 = it / 5
            = es)
          example: 1
          title: lang
          type: integer
        send_mail:
          title: send_mail
          type: boolean
        size:
          description: Total storage size of the Swiss Backup product (Bytes)
          example: 200000000000
          minimum: 1000000000
          title: size
          type: integer
      title: Request body
    _1_swiss_backups__swiss_backup_id__slots__slot_id__delete_200_response_allOf_data:
      oneOf:
      - type: boolean
      - nullable: true
    _1_swiss_backups__swiss_backup_id__slots__slot_id__delete_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/_1_swiss_backups__swiss_backup_id__slots__slot_id__delete_200_response_allOf_data'
      example:
        result: success
        data: true
    _1_swiss_backups_pricing_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/SwissBackupPrice_2731a22e'
      example:
        result: success
        data:
          discounts:
          - periodicity: 2
            label: 2_years
            value: 20
          - periodicity: 2
            label: 2_years
            value: 20
          prices:
          - unit: 1
            amount: "2.000"
            amount_excl_vat: "1.860"
            currency: 1
            type: slot
          - unit: 1
            amount: "2.000"
            amount_excl_vat: "1.860"
            currency: 1
            type: slot
    _1_swiss_backups_calculate_get_200_response_allOf_data:
      oneOf:
      - type: number
      - type: integer
    _1_swiss_backups_calculate_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/_1_swiss_backups_calculate_get_200_response_allOf_data'
      example:
        result: success
        data: 0.8008281904610115
    Request_body_4:
      properties:
        mountpoint:
          description: Specify the mountpoint to check ip authorization
          example: /my-mountpoint.mp3
          title: mountpoint
          type: string
      required:
      - mountpoint
      title: Request body
    Request_body_5:
      properties:
        domain:
          description: Specify the domain to check authorization
          example: "infomaniak.ch,myradio.ch"
          title: domain
          type: string
      required:
      - domain
      title: Request body
    _1_radios_players__player_uuid__config_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/PlayerConfiguration'
      example:
        result: success
        data:
          date: "1671107301"
          is_auto_start: true
          is_facebook_embed: true
          is_logo_enable: true
          artist: Imagine Dragon
          unavailable: https://storage.infomaniak.com/player/my-unavailable.png
          facebook_link: facebook_link
          language: fr
          title: Radioactive
          cover: https://radiocover.storage5.infomaniak.com/cover/5fa592b4e019d.jpg
          is_spectrum: true
          twitter_account: MyAccount
          secondary_color: 0098FF
          id: 1
          twitter_backlink: my-radio.ch
          height: 144
          is_listeners: true
          is_embed: true
          thumbnail: https://storage.infomaniak.com/player/my-thumbnail.png
          listeners: 152
          is_cover: true
          stations:
          - stations
          - stations
          display_name: MyRadioPlayer
          loading: https://storage.infomaniak.com/player/my-loading.png
          volume: 50
          button_color: FFFFFF
          background_color: "202020"
          restriction: https://storage.infomaniak.com/player/my-restriction.png
          twitter_hashtag: "infomaniak,radio"
          width: 505
          timeline:
          - timeline
          - timeline
          is_station_thumbnail: true
    _1_radios__radio_product_id__stations_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Station_446a80a0'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - log_path: my_log_folder
          is_acpm: true
          created_at: 1478357542
          monthly_consumption: 1856473697
          log_login: MyLogin
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_enabled: true
          password: KeepItSecret
          updated_at: 1615838270
          stats:
          - stats
          - stats
          is_daily_restart: true
          options: options
          id: 1
          is_send_logs: true
          log_password: KeepItSecret
          cluster_name: plain
          thumbnail: https://storage.infomaniak.com/my-thumbnail.png
          listeners: 152
          streams:
          - null
          - null
          timezone_daily_restart: Europe/Zurich
          time_daily_restart: 15:03
          log_server: my-log-server.ch
          hls_stream:
            bitrates: "64,96,128"
            ip_include_list: ip_include_list
            is_hash_restriction: true
            buffer_size: 25
            domains: "infomaniak.com,my-radio.ch"
            created_at: 1478357542
            country_list: country_list
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_up: true
            ip_exclude_list: ip_exclude_list
            url: my-hls.infomaniak.com/my-hls/manifest.m3u8
            hash_key: my_hash_key
            updated_at: 1615838270
            name: myHls
            is_allow_country: true
            id: 1
            source_id: 1
            fragment_size: 25
          name: MyStation
          count_streams_up: 3
        - log_path: my_log_folder
          is_acpm: true
          created_at: 1478357542
          monthly_consumption: 1856473697
          log_login: MyLogin
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_enabled: true
          password: KeepItSecret
          updated_at: 1615838270
          stats:
          - stats
          - stats
          is_daily_restart: true
          options: options
          id: 1
          is_send_logs: true
          log_password: KeepItSecret
          cluster_name: plain
          thumbnail: https://storage.infomaniak.com/my-thumbnail.png
          listeners: 152
          streams:
          - null
          - null
          timezone_daily_restart: Europe/Zurich
          time_daily_restart: 15:03
          log_server: my-log-server.ch
          hls_stream:
            bitrates: "64,96,128"
            ip_include_list: ip_include_list
            is_hash_restriction: true
            buffer_size: 25
            domains: "infomaniak.com,my-radio.ch"
            created_at: 1478357542
            country_list: country_list
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_up: true
            ip_exclude_list: ip_exclude_list
            url: my-hls.infomaniak.com/my-hls/manifest.m3u8
            hash_key: my_hash_key
            updated_at: 1615838270
            name: myHls
            is_allow_country: true
            id: 1
            source_id: 1
            fragment_size: 25
          name: MyStation
          count_streams_up: 3
        page: 2
    Request_body_6:
      properties:
        cluster_id:
          description: Specify the cluster
          example: 1
          title: cluster_id
          type: integer
        is_acpm:
          description: Specify if you need the log for the ACPM
          example: true
          title: is_acpm
          type: boolean
        is_daily_restart:
          description: Specify if the station will restart daily
          example: true
          title: is_daily_restart
          type: boolean
        is_send_logs:
          description: Specify if we send you the log
          example: true
          title: is_send_logs
          type: boolean
        name:
          description: Specify the name of the station
          example: MyStation
          maxLength: 255
          title: name
          type: string
        time_daily_restart:
          description: Specify at which moment the daily restart begin
          example: 22:15
          maxLength: 255
          title: time_daily_restart
          type: string
        timezone_daily_restart:
          description: Specify the timezone of the daily restart
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Ciudad_Juarez
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zurich
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - UTC
          example: Europe/Zurich
          title: timezone_daily_restart
          type: string
      required:
      - name
      title: Request body
    Request_body_7:
      properties:
        thumbnail:
          description: Specify the new thumbnail file for the station
          format: binary
          maxLength: 3072
          title: thumbnail
          type: string
      required:
      - thumbnail
      title: Request body
    Request_body_8:
      properties:
        from:
          description: Specify the starting date to get logs
          example: "2022-01-01, 2022-01-01 00:00:00, 1640995200"
          title: from
          type: string
        to:
          description: Specify the ending date to get logs
          example: "2022-12-31, 2022-12-31 00:00:00, 1672444800"
          title: to
          type: string
      required:
      - from
      - to
      title: Request body
    _1_radios__radio_product_id__stations__station_id__streams_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Stream'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - null
        - null
        page: 2
    Request_body_9:
      properties:
        bitrate:
          description: Specify the bitrate of the stream
          enum:
          - 24
          - 32
          - 48
          - 64
          - 96
          - 128
          - 192
          - 256
          - 320
          - 512
          title: bitrate
          type: integer
        codec:
          description: Specify the codec of the stream
          enum:
          - 1
          - 2
          - 3
          - 4
          title: codec
          type: integer
        country_list:
          description: Specify the country list not allow accessing to the stream
          example: "IT,JP"
          maxLength: 255
          pattern: "/^([A-Z]{2}"
          title: country_list
          type: string
          nullable: true
        fallback_is_active_relay:
          description: Specify if the fallback is a relay stream
          example: true
          title: fallback_is_active_relay
          type: boolean
        fallback_relay_mountpoint:
          description: Specify the relay mountpoint for the fallback
          example: /myrelay-mountpoint.mp3
          maxLength: 255
          title: fallback_relay_mountpoint
          type: string
        fallback_relay_port:
          description: Specify the relay server port for the fallback
          example: 80
          maximum: 65535
          minimum: 1
          title: fallback_relay_port
          type: integer
        fallback_relay_server:
          description: Specify the relay server domain for the fallback
          example: myrelayradio.ch
          maxLength: 255
          title: fallback_relay_server
          type: string
        hash_key:
          description: Specify the token to protect the stream
          example: my-token
          maxLength: 255
          title: hash_key
          type: string
          nullable: true
        ip_exclude_list:
          description: Specify the ip list not allow accessing to the stream
          example: "127.0.0.3,127.0.0.4"
          maxLength: 255
          title: ip_exclude_list
          type: string
          nullable: true
        ip_include_list:
          description: Specify the ip list allow accessing to the stream
          example: "127.0.0.1,127.0.0.2"
          maxLength: 255
          title: ip_include_list
          type: string
          nullable: true
        is_active_relay:
          description: Specify if this is a relay stream
          example: true
          title: is_active_relay
          type: boolean
        is_allow_country:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_allow_country
          type: boolean
        is_fallback:
          description: Specify is the new stream have a fallback
          example: true
          title: is_fallback
          type: boolean
        is_hash_restriction:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_hash_restriction
          type: boolean
        mountpoint:
          description: Specify the mountpoint of the stream
          example: /my-mountpoint.mp3
          maxLength: 255
          title: mountpoint
          type: string
        relay_mountpoint:
          description: Specify the relay mountpoint
          example: /myrelay-mountpoint.mp3
          maxLength: 255
          title: relay_mountpoint
          type: string
        relay_port:
          description: Specify the relay server port
          example: 80
          maximum: 65535
          minimum: 1
          title: relay_port
          type: integer
        relay_server:
          description: Specify the relay server domain
          example: myrelayradio.ch
          maxLength: 255
          title: relay_server
          type: string
      required:
      - bitrate
      - codec
      - mountpoint
      title: Request body
    _1_radios__radio_product_id__stations__station_id__streams__stream_id__introduction_file_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            type: object
      example:
        result: success
        data: "{}"
    Request_body_10:
      properties:
        file:
          description: Specify the new introduction file for the stream
          format: binary
          maxLength: 2048
          title: file
          type: string
      title: Request body
    Request_body_11:
      properties:
        buffer_size:
          description: Specify the buffer size of the hls stream
          example: 5
          minimum: 25
          title: buffer_size
          type: integer
      title: Request body
    Request_body_12:
      properties:
        bitrate:
          description: Specify the bitrate for the new stream
          enum:
          - 24
          - 32
          - 48
          - 64
          - 96
          - 128
          - 192
          - 256
          - 320
          - 512
          title: bitrate
          type: integer
        codec:
          description: Specify the codec for the new stream
          enum:
          - 1
          - 2
          - 3
          - 4
          title: codec
          type: integer
      required:
      - bitrate
      - codec
      title: Request body
    _1_radios__radio_product_id__players_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Player'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        - logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
        page: 2
    item:
      properties:
        id:
          description: Specify the id of the station
          example: 1
          title: id
          type: integer
        is_main:
          description: Specify if the station is the main station to listen
          example: true
          title: is_main
          type: boolean
        order:
          description: Specify the order of the station in the list
          example: 1
          title: order
          type: integer
        streams:
          description: Specify the list of streams used in the super player by station
          items:
            $ref: '#/components/schemas/item'
          maxItems: 3
          type: array
        hls_stream:
          $ref: '#/components/schemas/hls_stream'
      title: item
    hls_stream:
      properties:
        id:
          description: Specify the HLS Stream id used in the player
          example: 2
          title: id
          type: integer
        is_main:
          description: Specify if the HLS stream is the main stream of this station
          example: true
          title: is_main
          type: boolean
      title: hls_stream
    Request_body_13:
      properties:
        background_color:
          description: Specify the background color used in the player
          example: "202020"
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: background_color
          type: string
        button_color:
          description: Specify the button color used in the player
          example: FFFFFF
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: button_color
          type: string
        display_name:
          description: Specify the name uses to display in the player
          example: Radio Player
          maxLength: 255
          title: display_name
          type: string
        domains:
          description: Specify the domains allow accessing to the player
          example: "infomaniak.ch,myradio.ch"
          maxLength: 255
          title: domains
          type: string
        facebook_link:
          description: Specify the Facebook link used in Facebook embed
          example: myradio.ch
          maxLength: 255
          title: facebook_link
          type: string
        height:
          description: Specify the height in px for display the player
          example: "144.00"
          pattern: "/^\\d+(\\.\\d{1"
          title: height
          type: string
        is_auto_start:
          description: Specify if the auto start is enabled
          example: true
          title: is_auto_start
          type: boolean
        is_cover:
          description: Specify if the cover will be displayed
          example: true
          title: is_cover
          type: boolean
        is_embed:
          description: Specify if the embed url will be displayed int the player
          example: true
          title: is_embed
          type: boolean
        is_facebook_embed:
          description: Specify if the Facebook embed url will be displayed int the
            player
          example: true
          title: is_facebook_embed
          type: boolean
        is_listeners:
          description: Specify if listeners information is displayed
          example: true
          title: is_listeners
          type: boolean
        is_listeners_hold:
          description: Specify if listeners hold is used
          example: true
          title: is_listeners_hold
          type: boolean
        is_logo:
          description: Specify if the logo Infomaniak is displayed
          example: true
          title: is_logo
          type: boolean
        is_metadata_display:
          description: Specify if the metadata title and artist will be visible
          example: true
          title: is_metadata_display
          type: boolean
        is_spectrum:
          description: Specify if the spectrum will be displayed
          example: true
          title: is_spectrum
          type: boolean
        is_station_thumbnail:
          description: Specify if the station thumbnail will be displayed
          example: true
          title: is_station_thumbnail
          type: boolean
        is_twitter_embed:
          description: Specify if the Twitter embed url will be displayed int the
            player
          example: true
          title: is_twitter_embed
          type: boolean
        language:
          description: Specify the language used in the player
          enum:
          - de
          - en
          - es
          - fr
          - it
          maxLength: 255
          title: language
          type: string
        listeners_hold:
          description: Specify listeners hold for listeners information
          example: 100
          title: listeners_hold
          type: integer
        name:
          description: "Specify the name of the player, it is not used in the player"
          example: MyPlayer
          maxLength: 255
          title: name
          type: string
        secondary_color:
          description: Specify the secondary color used in the player
          example: 0098FF
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: secondary_color
          type: string
        stations:
          description: Specify the list of stations used in the super player
          items:
            $ref: '#/components/schemas/item'
          type: array
        twitter_account:
          description: Specify the Twitter account will be used in Twitter embed
          example: MyAccount
          maxLength: 255
          title: twitter_account
          type: string
        twitter_backlink:
          description: Specify the Twitter backlink used in Twitter embed
          example: myradio.ch
          maxLength: 255
          title: twitter_backlink
          type: string
        twitter_hashtag:
          description: Specify the Twitter hashtag used in Twitter embed
          example: "radio,infomaniak"
          maxLength: 255
          title: twitter_hashtag
          type: string
        type:
          description: Specify the type of player
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 1
          title: type
          type: integer
        volume:
          description: Specify the default volume in the player
          example: 50
          maximum: 100
          title: volume
          type: integer
        width:
          description: Specify the width in px for display the player
          example: "505.00"
          pattern: "/^\\d+(\\.\\d{1"
          title: width
          type: string
      required:
      - display_name
      - name
      - stations
      - type
      title: Request body
    Request_body_14:
      properties:
        name:
          description: "Specify the name of the player, it is not used in the player"
          example: MySecondPlayer
          title: name
          type: string
      required:
      - name
      title: Request body
    Request_body_15:
      properties:
        thumbnail:
          description: Specify the new thumbnail file for the player
          format: binary
          maxLength: 3072
          title: thumbnail
          type: string
        type:
          description: Specify the type of thumbnail will be changed
          enum:
          - loading
          - restriction
          - thumbnail
          - unavailable
          example: "1"
          title: type
          type: string
      required:
      - thumbnail
      - type
      title: Request body
    _1_radios__radio_product_id__players__player_id__thumbnail_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            type: string
      example:
        result: success
        data: data
    Request_body_16:
      properties:
        type:
          description: Specify the type of thumbnail will be changed
          enum:
          - loading
          - restriction
          - thumbnail
          - unavailable
          example: "1"
          title: type
          type: string
      required:
      - type
      title: Request body
    Request_body_17:
      properties:
        mountpoint:
          description: Specify the mountpoint to check the availability
          example: /my-mountpoint.mp3
          title: mountpoint
          type: string
      required:
      - mountpoint
      title: Request body
    _1_radios_packs_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Pack'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - pack_id: 3
          available_space_vod: 100
          monthly_fee: 6
          bandwidth: 1
          name: Pro
          max_channel: 5
          order_info: 0
        - pack_id: 3
          available_space_vod: 100
          monthly_fee: 6
          bandwidth: 1
          name: Pro
          max_channel: 5
          order_info: 0
        page: 2
    _1_radios_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RadioProduct'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_locked: true
          product: product
          listeners: 152
          count_stations: 5
          monthly_consumption: 1856473697
          stations:
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          has_maintenance: true
          pack:
            pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          packs:
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          overquota_at: 6
          updated_at: 1615838270
          price: 0.8008281904610115
          locked_at: 1
          rights:
          - rights
          - rights
          options: options
          pack_price:
            periodicity_id: 1
            periodicity: MONTH
            price_excluding_vat: 15.2
            currency: CHF
            id: 1
          max_station: 5
          status: ""
        - is_locked: true
          product: product
          listeners: 152
          count_stations: 5
          monthly_consumption: 1856473697
          stations:
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          has_maintenance: true
          pack:
            pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          packs:
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          overquota_at: 6
          updated_at: 1615838270
          price: 0.8008281904610115
          locked_at: 1
          rights:
          - rights
          - rights
          options: options
          pack_price:
            periodicity_id: 1
            periodicity: MONTH
            price_excluding_vat: 15.2
            currency: CHF
            id: 1
          max_station: 5
          status: ""
        page: 2
    _1_radios__radio_product_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/RadioProduct'
      example:
        result: success
        data:
          is_locked: true
          product: product
          listeners: 152
          count_stations: 5
          monthly_consumption: 1856473697
          stations:
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          - log_path: my_log_folder
            is_acpm: true
            created_at: 1478357542
            monthly_consumption: 1856473697
            log_login: MyLogin
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_enabled: true
            password: KeepItSecret
            updated_at: 1615838270
            stats:
            - stats
            - stats
            is_daily_restart: true
            options: options
            id: 1
            is_send_logs: true
            log_password: KeepItSecret
            cluster_name: plain
            thumbnail: https://storage.infomaniak.com/my-thumbnail.png
            listeners: 152
            streams:
            - null
            - null
            timezone_daily_restart: Europe/Zurich
            time_daily_restart: 15:03
            log_server: my-log-server.ch
            hls_stream:
              bitrates: "64,96,128"
              ip_include_list: ip_include_list
              is_hash_restriction: true
              buffer_size: 25
              domains: "infomaniak.com,my-radio.ch"
              created_at: 1478357542
              country_list: country_list
              uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
              is_up: true
              ip_exclude_list: ip_exclude_list
              url: my-hls.infomaniak.com/my-hls/manifest.m3u8
              hash_key: my_hash_key
              updated_at: 1615838270
              name: myHls
              is_allow_country: true
              id: 1
              source_id: 1
              fragment_size: 25
            name: MyStation
            count_streams_up: 3
          has_maintenance: true
          pack:
            pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          packs:
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          - pack_id: 3
            available_space_vod: 100
            monthly_fee: 6
            bandwidth: 1
            name: Pro
            max_channel: 5
            order_info: 0
          overquota_at: 6
          updated_at: 1615838270
          price: 0.8008281904610115
          locked_at: 1
          rights:
          - rights
          - rights
          options: options
          pack_price:
            periodicity_id: 1
            periodicity: MONTH
            price_excluding_vat: 15.2
            currency: CHF
            id: 1
          max_station: 5
          status: ""
    Request_body_18:
      properties:
        customer_name:
          description: Specify the name of the product
          example: MyRadioProduct
          maxLength: 255
          title: customer_name
          type: string
      title: Request body
    _1_radios__radio_product_id__users_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/User'
            type: array
      example:
        result: success
        data:
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
        - security:
            score: 2
            has_recovery_email: true
            has_valid_phone: true
            has_private_folder: true
            assistant_at: 5
            last_password_at: 5
            double_auth_method: double_auth_method
            has_double_auth: true
            has_valid_email: 7
          teams:
          - 1
          - 1
          last_name: last_name
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          first_name: first_name
          deleted_at: 6
          email: email
    _1_radios__radio_product_id__stations__station_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Station_446a80a0'
      example:
        result: success
        data:
          log_path: my_log_folder
          is_acpm: true
          created_at: 1478357542
          monthly_consumption: 1856473697
          log_login: MyLogin
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_enabled: true
          password: KeepItSecret
          updated_at: 1615838270
          stats:
          - stats
          - stats
          is_daily_restart: true
          options: options
          id: 1
          is_send_logs: true
          log_password: KeepItSecret
          cluster_name: plain
          thumbnail: https://storage.infomaniak.com/my-thumbnail.png
          listeners: 152
          streams:
          - null
          - null
          timezone_daily_restart: Europe/Zurich
          time_daily_restart: 15:03
          log_server: my-log-server.ch
          hls_stream:
            bitrates: "64,96,128"
            ip_include_list: ip_include_list
            is_hash_restriction: true
            buffer_size: 25
            domains: "infomaniak.com,my-radio.ch"
            created_at: 1478357542
            country_list: country_list
            uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
            is_up: true
            ip_exclude_list: ip_exclude_list
            url: my-hls.infomaniak.com/my-hls/manifest.m3u8
            hash_key: my_hash_key
            updated_at: 1615838270
            name: myHls
            is_allow_country: true
            id: 1
            source_id: 1
            fragment_size: 25
          name: MyStation
          count_streams_up: 3
    Request_body_19:
      properties:
        cluster_id:
          description: Specify the cluster
          example: 1
          title: cluster_id
          type: integer
        is_acpm:
          description: Specify if you need the log for the ACPM
          example: true
          title: is_acpm
          type: boolean
        is_daily_restart:
          description: Specify if the station will restart daily
          example: true
          title: is_daily_restart
          type: boolean
        is_enabled:
          description: Specify if you enable or disable the diffusion of all streams
          example: true
          title: is_enabled
          type: boolean
        is_send_logs:
          description: Specify if we send you the log
          example: true
          title: is_send_logs
          type: boolean
        log_login:
          description: The login to connect to the log server
          example: MyLogin
          maxLength: 255
          title: log_login
          type: string
          nullable: true
        log_password:
          description: The password to connect to the log server
          example: KeepItSecret
          maxLength: 255
          title: log_password
          type: string
          nullable: true
        log_path:
          description: The path where the log is store
          example: /my_log_foler
          maxLength: 255
          title: log_path
          type: string
          nullable: true
        log_server:
          description: The server name to connect to the log server
          example: mylogserver.ch
          maxLength: 255
          title: log_server
          type: string
          nullable: true
        name:
          description: Specify the name of the station
          example: MyStation
          maxLength: 255
          title: name
          type: string
        time_daily_restart:
          description: Specify at which moment the daily restart begin
          example: 22:15
          maxLength: 255
          title: time_daily_restart
          type: string
        timezone_daily_restart:
          description: Specify the timezone of the daily restart
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Ciudad_Juarez
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zurich
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - UTC
          example: Europe/Zurich
          title: timezone_daily_restart
          type: string
      title: Request body
    _1_radios__radio_product_id__stations__station_id__server_events_get_200_response_allOf_data:
      oneOf:
      - items:
          $ref: '#/components/schemas/ServerEvent'
      - type: integer
    _1_radios__radio_product_id__stations__station_id__server_events_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__server_events_get_200_response_allOf_data'
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data: ""
        page: 2
    _1_radios__radio_product_id__stations__station_id__encoder_events_get_200_response_allOf_data:
      oneOf:
      - items:
          $ref: '#/components/schemas/EncoderEvent'
      - type: integer
    _1_radios__radio_product_id__stations__station_id__encoder_events_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/_1_radios__radio_product_id__stations__station_id__encoder_events_get_200_response_allOf_data'
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data: ""
        page: 2
    _1_radios__radio_product_id__stations__station_id__stats_listeners_per_minute_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/StatListenerPerMinute'
      example:
        result: success
        data:
          stats:
          - date: "1679754593"
            listeners: 10
          - date: "1679754593"
            listeners: 10
          average_per_minute: 10.05
          min_listeners: 1
          max_listeners: 20
    _1_radios__radio_product_id__stations__station_id__stats_countries_continent_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/StatCountryContinent'
      example:
        result: success
        data:
          EU: 15
          AS: 5
          NA: 2
          OC: 0
          AF: 9
          AN: 10
          SA: 3
    _1_radios__radio_product_id__stations__station_id__stats_stream_listeners_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatListenerByStation'
            type: array
      example:
        result: success
        data:
        - listeners_30s: 5
          min_listening_time: 1
          listeners: 10
          stream_id: 2
          uniques: 4
          average_listeners: 3.36
          min_listeners: 0
          listening_time: 120
          average_listening_time: 53.15
          type: hls
          max_listeners: 5
          max_listening_time: 20
        - listeners_30s: 5
          min_listening_time: 1
          listeners: 10
          stream_id: 2
          uniques: 4
          average_listeners: 3.36
          min_listeners: 0
          listening_time: 120
          average_listening_time: 53.15
          type: hls
          max_listeners: 5
          max_listening_time: 20
    _1_radios__radio_product_id__stations__station_id__stats_consumption_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatConsumption'
            type: array
      example:
        result: success
        data:
        - date: "1679754593"
          average_bytes_by_listeners: 15621
          bytes: 131315
        - date: "1679754593"
          average_bytes_by_listeners: 15621
          bytes: 131315
    _1_radios__radio_product_id__stations__station_id__stats_total_consumption_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            type: integer
      example:
        result: success
        data: 0
    _1_radios__radio_product_id__stations__station_id__stats_stream_consumption_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatConsumptionByStream'
            type: array
      example:
        result: success
        data:
        - average_bytes_by_listeners: 5165
          stream_id: 2
          total_bytes: 1012652
          average_bytes_by_day: 51132
          max_bytes: 15156
          type: hls
        - average_bytes_by_listeners: 5165
          stream_id: 2
          total_bytes: 1012652
          average_bytes_by_day: 51132
          max_bytes: 15156
          type: hls
    _1_radios__radio_product_id__stations__station_id__stats_total_players_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatTotalPlayer'
            type: array
      example:
        result: success
        data:
        - listeners: 10
          streams: "1,3,5"
          percent_listeners: 40.85
          stations: "10,15"
          player: Safari
          average_listeners_by_day: 20.05
        - listeners: 10
          streams: "1,3,5"
          percent_listeners: 40.85
          stations: "10,15"
          player: Safari
          average_listeners_by_day: 20.05
    _1_radios__radio_product_id__stations__station_id__stats_links_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/StatListLink'
      example:
        result: success
        data:
          hostname: https://api.infomaniak.com
          password: myPassword
          instant_customer: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners
          port: 80
          mediastats_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/mediastats?mountpoint=/my-mounpoint.aac
          status_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status?mountpoint=/my-mounpoint.aac
          instant_customer_per_stream: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/listeners?mountpoint=/my-mounpoint.aac
          update_metadata: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/metadata?data=artist
            - title
          username: myUsername
          status: https://myUsername:myPassword@api.infomaniak.com/1/radios/stats/status
    _1_radios__radio_product_id__stations__station_id__notification_get_station_id_parameter:
      oneOf:
      - type: integer
      - nullable: true
    _1_radios__radio_product_id__stations__station_id__notification_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Notification'
      example:
        result: success
        data:
          is_saturday: true
          is_wednesday: true
          is_sms: true
          is_thursday: true
          users: "1,5,10"
          is_sunday: true
          is_enabled: true
          is_tuesday: true
          is_mail: true
          start_hour: 14:25
          is_friday: true
          end_hour: 20:03
          is_monday: true
    Request_body_20:
      properties:
        end_hour:
          description: Specify the last hour of the day to receive notification
          example: 15:45:55
          title: end_hour
          type: string
        is_enabled:
          description: Specify if the notification is enabled
          example: true
          title: is_enabled
          type: boolean
        is_friday:
          description: Specify if the notification can be sent the friday
          example: true
          title: is_friday
          type: boolean
        is_mail:
          description: Specify if the notification will be sent by mail
          example: true
          title: is_mail
          type: boolean
        is_monday:
          description: Specify if the notification can be sent the monday
          example: true
          title: is_monday
          type: boolean
        is_saturday:
          description: Specify if the notification can be sent the saturday
          example: true
          title: is_saturday
          type: boolean
        is_sms:
          description: Specify if the notification will be sent by sms
          example: true
          title: is_sms
          type: boolean
        is_sunday:
          description: Specify if the notification can be sent the sunday
          example: true
          title: is_sunday
          type: boolean
        is_thursday:
          description: Specify if the notification can be sent the thursday
          example: true
          title: is_thursday
          type: boolean
        is_tuesday:
          description: Specify if the notification can be sent the tuesday
          example: true
          title: is_tuesday
          type: boolean
        is_wednesday:
          description: Specify if the notification can be sent the wednesday
          example: true
          title: is_wednesday
          type: boolean
        start_hour:
          description: Specify the begin hour of the day to receive notification
          example: 12:30:10
          title: start_hour
          type: string
        users:
          description: Specify the list of account id will receive the notification
          example: "1,2,5,7"
          maxLength: 255
          title: users
          type: string
          nullable: true
      title: Request body
    _1_radios__radio_product_id__stations__station_id__streams__stream_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Stream'
      example:
        result: success
        data: null
    Request_body_21:
      properties:
        bitrate:
          description: Specify the bitrate of the stream
          enum:
          - 24
          - 32
          - 48
          - 64
          - 96
          - 128
          - 192
          - 256
          - 320
          - 512
          title: bitrate
          type: integer
        codec:
          description: Specify the codec of the stream
          enum:
          - 1
          - 2
          - 3
          - 4
          title: codec
          type: integer
        country_list:
          description: Specify the country list not allow accessing to the stream
          example: "IT,JP"
          maxLength: 255
          pattern: "/^([A-Z]{2}"
          title: country_list
          type: string
          nullable: true
        fallback_is_active_relay:
          description: Specify if the fallback is a relay stream
          example: true
          title: fallback_is_active_relay
          type: boolean
        fallback_relay_mountpoint:
          description: Specify the relay mountpoint for the fallback
          example: /myrelay-mountpoint.mp3
          maxLength: 255
          title: fallback_relay_mountpoint
          type: string
          nullable: true
        fallback_relay_port:
          description: Specify the relay server port for the fallback
          example: 0
          maximum: 65535
          minimum: 1
          title: fallback_relay_port
          type: integer
          nullable: true
        fallback_relay_server:
          description: Specify the relay server domain for the fallback
          example: myrelayradio.ch
          maxLength: 255
          title: fallback_relay_server
          type: string
          nullable: true
        hash_key:
          description: Specify the token to protect the stream
          example: my-token
          maxLength: 255
          title: hash_key
          type: string
          nullable: true
        ip_exclude_list:
          description: Specify the ip list not allow accessing to the stream
          example: "127.0.0.3,127.0.0.4"
          maxLength: 255
          title: ip_exclude_list
          type: string
          nullable: true
        ip_include_list:
          description: Specify the ip list allow accessing to the stream
          example: "127.0.0.1,127.0.0.2"
          maxLength: 255
          title: ip_include_list
          type: string
          nullable: true
        is_active_relay:
          description: Specify if this is a relay stream
          example: true
          title: is_active_relay
          type: boolean
        is_allow_country:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_allow_country
          type: boolean
        is_fallback:
          description: Specify is the new stream have a fallback
          example: true
          title: is_fallback
          type: boolean
        is_hash_restriction:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_hash_restriction
          type: boolean
        mountpoint:
          description: Specify the mountpoint of the stream
          example: /my-mountpoint.mp3
          maxLength: 255
          title: mountpoint
          type: string
        password:
          description: Specify the password of the stream
          example: KeepItSecret
          maxLength: 255
          title: password
          type: string
        relay_mountpoint:
          description: Specify the relay mountpoint
          example: /myrelay-mountpoint.mp3
          maxLength: 255
          title: relay_mountpoint
          type: string
          nullable: true
        relay_port:
          description: Specify the relay server port
          example: 0
          maximum: 65535
          minimum: 1
          title: relay_port
          type: integer
          nullable: true
        relay_server:
          description: Specify the relay server domain
          example: myrelayradio.ch
          maxLength: 255
          title: relay_server
          type: string
          nullable: true
      title: Request body
    _1_radios__radio_product_id__stations__station_id__hls_stream_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/HlsStream'
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
          bitrates: "64,96,128"
          ip_include_list: ip_include_list
          is_hash_restriction: true
          buffer_size: 25
          domains: "infomaniak.com,my-radio.ch"
          created_at: 1478357542
          country_list: country_list
          uuid: b3ff3bf9-c390-4dfe-9341-5e3a5e408bc2
          is_up: true
          ip_exclude_list: ip_exclude_list
          url: my-hls.infomaniak.com/my-hls/manifest.m3u8
          hash_key: my_hash_key
          updated_at: 1615838270
          name: myHls
          is_allow_country: true
          id: 1
          source_id: 1
          fragment_size: 25
        page: 2
    Request_body_22:
      properties:
        bitrates:
          description: Specify the bitrates available in the hls stream
          example: "64,96,128"
          maxLength: 255
          title: bitrates
          type: string
        buffer_size:
          description: Specify the buffer size of the hls stream
          example: 5
          minimum: 5
          title: buffer_size
          type: integer
        country_list:
          description: Specify the country list not allow accessing to the hls stream
          example: "IT,CA"
          maxLength: 255
          pattern: "/^([A-Z]{2}"
          title: country_list
          type: string
          nullable: true
        domains:
          description: Specify the domains allow accessing to the hls stream
          example: "infomaniak.com,my-domain.com"
          title: domains
          type: string
          nullable: true
        hash_key:
          description: Specify the token to protect the hls stream
          example: my-token
          maxLength: 255
          title: hash_key
          type: string
          nullable: true
        ip_exclude_list:
          description: Specify the ip list not allow accessing to the hls stream
          example: "127.0.0.3,127.0.0.4"
          maxLength: 255
          title: ip_exclude_list
          type: string
          nullable: true
        ip_include_list:
          description: Specify the ip list allow accessing to the hls stream
          example: "127.0.0.1,127.0.0.2"
          maxLength: 255
          title: ip_include_list
          type: string
          nullable: true
        is_allow_country:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_allow_country
          type: boolean
        is_hash_restriction:
          description: Specify if the access restriction rules is enabled
          example: true
          title: is_hash_restriction
          type: boolean
        name:
          description: Specify the name of the hls stream
          example: MyHlsStream
          maxLength: 255
          title: name
          type: string
        source_id:
          description: Specify the source stream of the hls stream
          example: 1
          title: source_id
          type: integer
      title: Request body
    _1_radios__radio_product_id__players__player_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Player'
      example:
        result: success
        data:
          logo_margin_top: 50
          enable_facebook: true
          ads_url: ""
          facebook_back_link: my-lovely-stream.ch
          use_preload_img: true
          ads_enabled: true
          countdown_seconds: countdown_seconds
          channel: null
          stereo_projection360: stereo_projection360
          logo_margin_left: 50
          buffer: buffer
          use_restrict_img: true
          height: 720
          enable_twitter: true
          show_logo: true
          countdown: true
          restrictions: restrictions
          chromecast: true
          interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
          name: MyRadioPlayer
          twitter_related: infomaniak video live
          controlbar_color: '#000000'
          twitter_via: MyAccount
          integrations: integrations
          is360: true
          control_color: '#FFFFFF'
          countdown_txt: countdown_txt
          sound_enabled: true
          use_geo_ip_img: true
          preload_img: preload_img
          description: description
          restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
          created_at: 6
          logo_percentage: 50
          extract_preload_img: true
          title: title
          thumbnail_url: thumbnail_url
          auto_start: true
          player_id: 6
          countdown_minutes: countdown_minutes
          updated_at: 3
          show_controls: true
          facebook_player_embed: true
          countdown_hours: countdown_hours
          show_viewers: true
          enable_embed_code: true
          twitter_back_link: my-lovely-stream.ch
          time_before_hide_cb: 6
          sound_percentage: 50
          control_active_color: '#0098FF'
          auto_hide_controls: true
          countdown_stops_at: countdown_stops_at
          logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
          use_interrupt_img: true
          countdown_days: countdown_days
          show_viewers_after: 5
          width: 1280
          logo_anchor: bottom left
          show_viewers_only_after: true
          geo_ip_img: geo_ip_img
          allow_full_screen: true
          ratio: ratio
    item_1:
      properties:
        id:
          description: Specify the id of the station
          example: 1
          title: id
          type: integer
        is_main:
          description: Specify if the station is the main station to listen
          example: true
          title: is_main
          type: boolean
        order:
          description: Specify the order of the station in the list
          example: 1
          title: order
          type: integer
        streams:
          description: Specify the list of streams used in the super player by station
          items:
            $ref: '#/components/schemas/item_1'
          maxItems: 3
          type: array
        hls_stream:
          $ref: '#/components/schemas/hls_stream'
      title: item
    Request_body_23:
      properties:
        background_color:
          description: Specify the background color used in the player
          example: "202020"
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: background_color
          type: string
        button_color:
          description: Specify the button color used in the player
          example: FFFFFF
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: button_color
          type: string
        display_name:
          description: Specify the name uses to display in the player
          example: Radio Player
          maxLength: 255
          title: display_name
          type: string
        domains:
          description: Specify the domains allow accessing to the player
          example: "infomaniak.ch,myradio.ch"
          maxLength: 255
          title: domains
          type: string
        facebook_link:
          description: Specify the Facebook link used in Facebook embed
          example: myradio.ch
          maxLength: 255
          title: facebook_link
          type: string
        height:
          description: Specify the height in px for display the player
          example: "144.00"
          pattern: "/^\\d+(\\.\\d{1"
          title: height
          type: string
        is_auto_start:
          description: Specify if the auto start is enabled
          example: true
          title: is_auto_start
          type: boolean
        is_cover:
          description: Specify if the cover will be displayed
          example: true
          title: is_cover
          type: boolean
        is_embed:
          description: Specify if the embed url will be displayed int the player
          example: true
          title: is_embed
          type: boolean
        is_facebook_embed:
          description: Specify if the Facebook embed url will be displayed int the
            player
          example: true
          title: is_facebook_embed
          type: boolean
        is_listeners:
          description: Specify if listeners information is displayed
          example: true
          title: is_listeners
          type: boolean
        is_listeners_hold:
          description: Specify if listeners hold is used
          example: true
          title: is_listeners_hold
          type: boolean
        is_logo:
          description: Specify if the logo Infomaniak is displayed
          example: true
          title: is_logo
          type: boolean
        is_metadata_display:
          description: Specify if the metadata title and artist will be visible
          example: true
          title: is_metadata_display
          type: boolean
        is_spectrum:
          description: Specify if the spectrum will be displayed
          example: true
          title: is_spectrum
          type: boolean
        is_station_thumbnail:
          description: Specify if the station thumbnail will be displayed
          example: true
          title: is_station_thumbnail
          type: boolean
        is_twitter_embed:
          description: Specify if the Twitter embed url will be displayed int the
            player
          example: true
          title: is_twitter_embed
          type: boolean
        language:
          description: Specify the language used in the player
          enum:
          - de
          - en
          - es
          - fr
          - it
          maxLength: 255
          title: language
          type: string
        listeners_hold:
          description: Specify listeners hold for listeners information
          example: 100
          title: listeners_hold
          type: integer
        name:
          description: "Specify the name of the player, it is not used in the player"
          example: MyPlayer
          maxLength: 255
          title: name
          type: string
        secondary_color:
          description: Specify the secondary color used in the player
          example: 0098FF
          maxLength: 255
          pattern: "/^[0-9A-F]{6}$/"
          title: secondary_color
          type: string
        stations:
          description: Specify the list of stations used in the super player
          items:
            $ref: '#/components/schemas/item_1'
          type: array
        twitter_account:
          description: Specify the Twitter account will be used in Twitter embed
          example: MyAccount
          maxLength: 255
          title: twitter_account
          type: string
        twitter_backlink:
          description: Specify the Twitter backlink used in Twitter embed
          example: myradio.ch
          maxLength: 255
          title: twitter_backlink
          type: string
        twitter_hashtag:
          description: Specify the Twitter hashtag used in Twitter embed
          example: "radio,infomaniak"
          maxLength: 255
          title: twitter_hashtag
          type: string
        type:
          description: Specify the type of player
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 1
          title: type
          type: integer
        volume:
          description: Specify the default volume in the player
          example: 50
          maximum: 100
          title: volume
          type: integer
        width:
          description: Specify the width in px for display the player
          example: "505.00"
          pattern: "/^\\d+(\\.\\d{1"
          title: width
          type: string
      title: Request body
    _1_radios__radio_product_id__stats_station_listeners_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatListenerByStation_21e42669'
            type: array
      example:
        result: success
        data:
        - listeners_30s: 5
          min_listening_time: 1
          listeners: 10
          station_id: 2
          uniques: 4
          average_listeners: 3.36
          min_listeners: 0
          listening_time: 120
          average_listening_time: 53.15
          max_listeners: 5
          max_listening_time: 20
        - listeners_30s: 5
          min_listening_time: 1
          listeners: 10
          station_id: 2
          uniques: 4
          average_listeners: 3.36
          min_listeners: 0
          listening_time: 120
          average_listening_time: 53.15
          max_listeners: 5
          max_listening_time: 20
    _1_radios__radio_product_id__stats_station_consumption_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StatConsumptionByStation'
            type: array
      example:
        result: success
        data:
        - average_bytes_by_listeners: 5165
          station_id: 2
          total_bytes: 1012652
          average_bytes_by_day: 51132
          max_bytes: 15156
        - average_bytes_by_listeners: 5165
          station_id: 2
          total_bytes: 1012652
          average_bytes_by_day: 51132
          max_bytes: 15156
    _1_radios__radio_product_id__options_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RadioProductOptionShop'
            type: array
      example:
        result: success
        data:
        - quantity: 0
          price: 6.027456183070403
          option_subject_id: 1
          created_at: 1478357542
          id: 1
          type: 1
          option_subject_name: option_subject_name
          ended_at: 1600370552
          option_subject_type: option_subject_type
        - quantity: 0
          price: 6.027456183070403
          option_subject_id: 1
          created_at: 1478357542
          id: 1
          type: 1
          option_subject_name: option_subject_name
          ended_at: 1600370552
          option_subject_type: option_subject_type
    Request_body_24:
      properties:
        streams_id_to_unbind:
          description: Specify the stream id will be unbind
          example: "1,4,7"
          title: streams_id_to_unbind
          type: string
      required:
      - streams_id_to_unbind
      title: Request body
    Request_body_25:
      properties:
        content:
          maxLength: 65536
          title: content
          type: string
        default:
          title: default
          type: boolean
        name:
          description: "Name of the resource `{name}`"
          maxLength: 255
          title: name
          type: string
        position:
          enum:
          - bottom
          - top
          title: position
          type: string
      required:
      - content
      - name
      title: Request body
    Request_body_26:
      properties:
        image:
          title: image
          type: string
      required:
      - image
      title: Request body
    _1_mail_hostings__mail_hosting_id__signatures_upload_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/NewSignatureAsset'
      example:
        result: success
        data:
          image: http://example.com/aeiou
    Request_body_27:
      properties:
        dont_reply_to:
          description: List of emails the auto reply won't respond to
          example: "[test@tests.ch]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        ended_at:
          description: "Timestamp `{name}` has ended"
          title: ended_at
          type: integer
          nullable: true
        is_recurrent:
          description: "Is the `{name}` active in a cycle ? "
          title: is_recurrent
          type: boolean
        is_visible:
          title: is_visible
          type: boolean
        message:
          maxLength: 65536
          title: message
          type: string
        recurrent_days:
          description: List of the days when the auto reply is activated
          items:
            title: item
            type: boolean
          type: array
        started_at:
          description: "Timestamp `{name}` has been started"
          title: started_at
          type: integer
          nullable: true
      required:
      - is_recurrent
      - message
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Mailbox'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_removable: true
          aliases:
          - aliases
          - aliases
          is_dkim_updatable: true
          created_at: 1
          is_auth: true
          pop3_last_login_at: 9
          operation_in_progress: true
          is_free_mail: true
          permissions:
            has_technical_right: true
            is_linked_to_user: true
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          password_last_changed_at: 5
          has_mail_filtering: true
          size_checked_at: 2
          has_dkim_signature: true
          mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
          has_redirection: true
          has_auto_responder: true
          has_move_spam: true
          is_limited: true
          imap_last_login_at: 7
          users:
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          mailbox_idn: user@êxample.com
          redirections:
          - redirections
          - redirections
          auto_responder:
            is_enabled: true
            reply_from: reply_from
            is_active: true
            is_recurrent: true
            dont_reply_to:
            - dont_reply_to
            - dont_reply_to
            has_send_original_message: true
            started_at: 2000-01-23
            valid_emails:
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            recurrent_days:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            reply_message: reply_message
            ended_at: 2000-01-23
            reply_from_id: 0
          mailbox: user@xn--xample-hva.com
          full_name: full_name
          authorized_senders:
          - user@authorized-senders.com
          - user@authorized-senders.com
          size: 5
          mailbox_name: user
          mailbox_id: 2
          blocked_senders:
          - user@blocked-senders.com
          - user@blocked-senders.com
          mail_filtering_folder_commercials: mail_filtering_folder_commercials
          full_aliases:
          - full_aliases
          - full_aliases
        - is_removable: true
          aliases:
          - aliases
          - aliases
          is_dkim_updatable: true
          created_at: 1
          is_auth: true
          pop3_last_login_at: 9
          operation_in_progress: true
          is_free_mail: true
          permissions:
            has_technical_right: true
            is_linked_to_user: true
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          password_last_changed_at: 5
          has_mail_filtering: true
          size_checked_at: 2
          has_dkim_signature: true
          mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
          has_redirection: true
          has_auto_responder: true
          has_move_spam: true
          is_limited: true
          imap_last_login_at: 7
          users:
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          mailbox_idn: user@êxample.com
          redirections:
          - redirections
          - redirections
          auto_responder:
            is_enabled: true
            reply_from: reply_from
            is_active: true
            is_recurrent: true
            dont_reply_to:
            - dont_reply_to
            - dont_reply_to
            has_send_original_message: true
            started_at: 2000-01-23
            valid_emails:
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            recurrent_days:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            reply_message: reply_message
            ended_at: 2000-01-23
            reply_from_id: 0
          mailbox: user@xn--xample-hva.com
          full_name: full_name
          authorized_senders:
          - user@authorized-senders.com
          - user@authorized-senders.com
          size: 5
          mailbox_name: user
          mailbox_id: 2
          blocked_senders:
          - user@blocked-senders.com
          - user@blocked-senders.com
          mail_filtering_folder_commercials: mail_filtering_folder_commercials
          full_aliases:
          - full_aliases
          - full_aliases
        page: 2
    Request_body_28:
      properties:
        mailbox_name:
          description: Mailbox
          title: mailbox_name
          type: string
        password:
          description: Mailbox password
          title: password
          type: string
        link_to_current_user:
          description: Link mailbox to current user to access this address from the
            Mail tool. (default value is set to `true` if target is current_user)
          title: link_to_current_user
          type: boolean
        target:
          description: current_user|other_user
          title: target
          type: string
      required:
      - mailbox_name
      - password
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxStore'
      example:
        result: success
        data:
          total: 1
          mailbox:
            is_removable: true
            aliases:
            - aliases
            - aliases
            is_dkim_updatable: true
            created_at: 1
            is_auth: true
            pop3_last_login_at: 9
            operation_in_progress: true
            is_free_mail: true
            permissions:
              has_technical_right: true
              is_linked_to_user: true
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            password_last_changed_at: 5
            has_mail_filtering: true
            size_checked_at: 2
            has_dkim_signature: true
            mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
            has_redirection: true
            has_auto_responder: true
            has_move_spam: true
            is_limited: true
            imap_last_login_at: 7
            users:
            - last_login_at: "{}"
              is_deleted: true
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
              name: name
              id: 3
              avatar: http://example.com/aeiou
              email: email
              has_double_auth: true
            - last_login_at: "{}"
              is_deleted: true
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
              name: name
              id: 3
              avatar: http://example.com/aeiou
              email: email
              has_double_auth: true
            mailbox_idn: user@êxample.com
            redirections:
            - redirections
            - redirections
            auto_responder:
              is_enabled: true
              reply_from: reply_from
              is_active: true
              is_recurrent: true
              dont_reply_to:
              - dont_reply_to
              - dont_reply_to
              has_send_original_message: true
              started_at: 2000-01-23
              valid_emails:
              - is_removable: true
                email_idn: email_idn
                is_account: true
                id: 6
                is_verified: true
                email: email
              - is_removable: true
                email_idn: email_idn
                is_account: true
                id: 6
                is_verified: true
                email: email
              recurrent_days:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              reply_message: reply_message
              ended_at: 2000-01-23
              reply_from_id: 0
            mailbox: user@xn--xample-hva.com
            full_name: full_name
            authorized_senders:
            - user@authorized-senders.com
            - user@authorized-senders.com
            size: 5
            mailbox_name: user
            mailbox_id: 2
            blocked_senders:
            - user@blocked-senders.com
            - user@blocked-senders.com
            mail_filtering_folder_commercials: mail_filtering_folder_commercials
            full_aliases:
            - full_aliases
            - full_aliases
          quota: 0
          used: 6
          existing_user_email: true
    Request_body_29:
      properties:
        apply_all:
          title: apply_all
          type: boolean
        enabled:
          title: enabled
          type: boolean
        mailboxes:
          items:
            title: item
            type: string
          type: array
      required:
      - enabled
      title: Request body
    Request_body_30:
      properties:
        apply_all:
          title: apply_all
          type: boolean
        enabled:
          title: enabled
          type: boolean
        mailboxes:
          items:
            title: item
            type: string
          type: array
        service_mail_auto_reply_id:
          title: service_mail_auto_reply_id
          type: integer
      required:
      - enabled
      title: Request body
    Request_body_31:
      properties:
        apply_all:
          title: apply_all
          type: boolean
        mailboxes:
          items:
            title: item
            type: string
          type: array
      title: Request body
    Request_body_32:
      properties:
        apply_all:
          title: apply_all
          type: boolean
        mailboxes:
          items:
            title: item
            type: string
          type: array
        service_mail_signature_id:
          title: service_mail_signature_id
          type: integer
      required:
      - service_mail_signature_id
      title: Request body
    Request_body_33:
      properties:
        permissions:
          description: |-
            (can_manage_filters, can_manage_security, can_manage_aliases, can_manage_redirections,
            can_manage_signatures, can_manage_auto_reply, can_change_password, can_configure_mail_folders)
          items:
            type: string
          type: array
      required:
      - permissions
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/WorkspaceInvitation'
      example:
        result: success
        data:
          mailbox:
            mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
          permissions:
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          qrcode: qrcode
          is_valid: true
          sent_to: sent_to
          expired_at: 0
          key: key
          short_url: http://example.com/aeiou
          is_used: true
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - mailbox_is_blocked
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Mailbox is blocked
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_34:
      properties:
        name:
          description: Name of the filter
          title: name
          type: string
        is_enabled:
          description: Specify if the filter is enabled or disabled
          title: is_enabled
          type: string
      required:
      - is_enabled
      - name
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_set_activation_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_filter_name
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          - sieve_load_error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid filter name
          - Invalid mailbox password
          - Mailbox not linked to current user
          - Sieve load error
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_set_activation_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_set_activation_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_35:
      properties:
        order:
          description: Array of Filter names
          items:
            type: string
          type: array
      required:
      - order
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_reorder_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_mailbox_filters
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          - sieve_load_error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid mailbox filters
          - Invalid mailbox password
          - Mailbox not linked to current user
          - Sieve load error
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_reorder_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_reorder_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxFilter'
      example:
        result: success
        data:
          prevent_script: true
          use_scripts: true
          filters:
          - is_enabled: true
            name: name
            conditions:
            - property: property
              value: value
              operator: operator
            - property: property
              value: value
              operator: operator
            actions:
            - type: type
              value: value
            - type: type
              value: value
            has_all_of: true
          - is_enabled: true
            name: name
            conditions:
            - property: property
              value: value
              operator: operator
            - property: property
              value: value
              operator: operator
            actions:
            - type: type
              value: value
            - type: type
              value: value
            has_all_of: true
          scripts:
          - is_enabled: true
            name: name
            content: content
          - is_enabled: true
            name: name
            content: content
          script: script
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response_allOf_error:
      description: Error object
      example:
        code: invalid_mailbox_password
        description: Invalid mailbox password
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          example: invalid_mailbox_password
          type: string
        description:
          description: Description of the error
          enum:
          - Invalid mailbox password
          - Mailbox not linked to current user
          example: Invalid mailbox password
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_get_400_response_allOf_error'
      example:
        result: error
        error:
          code: invalid_mailbox_password
          description: Invalid mailbox password
          errors:
          - errors
          - errors
    Request_body_36:
      properties:
        body:
          $ref: '#/components/schemas/PostSieveFilter'
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_post_400_response_allOf_error:
      description: Error object
      example:
        code: sieve_load_error
        description: Sieve load error
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - invalid_filter_name
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          - sieve_load_error
          example: sieve_load_error
          type: string
        description:
          description: Description of the error
          enum:
          - Invalid filter name
          - Invalid mailbox password
          - Mailbox not linked to current user
          - Sieve load error
          example: Sieve load error
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: sieve_load_error
          description: Sieve load error
          errors:
          - errors
          - errors
    Request_body_37:
      properties:
        name:
          description: Name of the filter
          title: name
          type: string
      required:
      - name
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_delete_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          - sieve_load_error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid mailbox password
          - Mailbox not linked to current user
          - Sieve load error
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_38:
      properties:
        body:
          $ref: '#/components/schemas/PatchSieveFilter'
      title: Request body
    Request_body_39:
      properties:
        name:
          description: Filter script name
          title: name
          type: string
        content:
          description: Filter script content
          title: content
          type: string
        is_enabled:
          description: Specify if the script is enabled or disabled
          title: is_enabled
          type: boolean
      required:
      - content
      - is_enabled
      - name
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_post_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_filter_script_content
          - invalid_filter_script_name
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid filter script content
          - Invalid filter script name
          - Invalid mailbox password
          - Mailbox not linked to current user
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_40:
      properties:
        name:
          description: Filter name
          title: name
          type: string
      required:
      - name
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_filter_script_name
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid filter script name
          - Invalid mailbox password
          - Mailbox not linked to current user
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_41:
      properties:
        name:
          description: Filter script name
          title: name
          type: string
        old_name:
          description: Filter script old name
          title: old_name
          type: string
        content:
          description: Filter script content
          title: content
          type: string
        is_enabled:
          description: Specify if the script is enabled or disabled
          title: is_enabled
          type: boolean
      required:
      - content
      - is_enabled
      - name
      - old_name
      title: Request body
    Request_body_42:
      properties:
        name:
          description: Filter script name
          title: name
          type: string
        is_enabled:
          description: Specify if the script is enabled or disabled
          title: is_enabled
          type: string
      required:
      - is_enabled
      - name
      title: Request body
    Request_body_43:
      properties:
        name:
          description: Filter script name
          title: name
          type: string
        file:
          description: Base64 Filter script content
          title: file
          type: string
      required:
      - file
      - name
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_import_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - import_filter_script_error
          - invalid_filter_script_name
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Import filter script error
          - Invalid filter script name
          - Invalid mailbox password
          - Mailbox not linked to current user
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_import_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_filters_scripts_import_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxFolder'
      example:
        result: success
        data:
          social_networks_folder: social_networks_folder
          folders:
          - name: name
          - name: name
          draft_folder: draft_folder
          archives_folder: archives_folder
          sent_folder: sent_folder
          trash_folder: trash_folder
          spam_folder: spam_folder
          commercials_folder: commercials_folder
    Request_body_44:
      properties:
        draft_folder:
          description: Draft folder name
          title: draft_folder
          type: string
        trash_folder:
          description: Trash folder name
          title: trash_folder
          type: string
        sent_folder:
          description: Sent folder name
          title: sent_folder
          type: string
        spam_folder:
          description: Spam folder name
          title: spam_folder
          type: string
        archives_folder:
          description: Archives folder name
          title: archives_folder
          type: string
        commercials_folder:
          description: Folder for Commercial emails filter
          title: commercials_folder
          type: string
        social_networks_folder:
          description: Folder for SocialNetwork emails filter
          title: social_networks_folder
          type: string
      required:
      - archives_folder
      - commercials_folder
      - draft_folder
      - sent_folder
      - social_networks_folder
      - spam_folder
      - trash_folder
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_put_400_response_allOf_error:
      description: Error object
      example:
        code: invalid_mailbox_folders
        description: Invalid mailbox folders
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - invalid_mailbox_folders
          - invalid_mailbox_password
          - mailbox_not_linked_to_current_user
          example: invalid_mailbox_folders
          type: string
        description:
          description: Description of the error
          enum:
          - Invalid mailbox folders
          - Invalid mailbox password
          - Mailbox not linked to current user
          example: Invalid mailbox folders
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_folders_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: invalid_mailbox_folders
          description: Invalid mailbox folders
          errors:
          - errors
          - errors
    Request_body_45:
      properties:
        image:
          description: "Base64 image content (png,jpg,jpeg or gif MIME type)"
          title: image
          type: string
      required:
      - image
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxSignature'
      example:
        result: success
        data:
          default_signature_id: 5
          valid_emails:
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          position: bottom
          signatures:
          - full_name: full_name
            sender_idn: sender_idn
            reply_to: reply_to
            sender: sender
            name: name
            id: 0
            reply_to_idn: reply_to_idn
            is_default: true
            content: content
            sender_id: 1
            hash: hash
            reply_to_id: 6
          - full_name: full_name
            sender_idn: sender_idn
            reply_to: reply_to
            sender: sender
            name: name
            id: 0
            reply_to_idn: reply_to_idn
            is_default: true
            content: content
            sender_id: 1
            hash: hash
            reply_to_id: 6
    Request_body_46:
      properties:
        name:
          description: Signature's name
          title: name
          type: string
        reply_to_id:
          description: Validated sender/reply address identifier
          title: reply_to_id
          type: integer
        sender_id:
          description: Validated sender/reply address identifier
          title: sender_id
          type: integer
        content:
          description: HTML content of the signature
          title: content
          type: string
        position:
          description: Text location (top|bottom)
          title: position
          type: string
        full_name:
          description: The full name (generally first name and surname)
          title: full_name
          type: string
      required:
      - name
      - reply_to_id
      - sender_id
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_check_verified_post_400_response_allOf_error:
      description: Error object
      example:
        code: email_not_validated
        description: Email not validated
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - email_not_validated
          example: email_not_validated
          type: string
        description:
          description: Description of the error
          enum:
          - Email not validated
          example: Email not validated
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_check_verified_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_check_verified_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: email_not_validated
          description: Email not validated
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxForwarding'
      example:
        result: success
        data:
          is_enabled: true
          has_forward_spam: true
          redirect_adresses:
          - email_idn: email_idn
            email: email
          - email_idn: email_idn
            email: email
          has_dont_deliver: true
    Request_body_47:
      properties:
        redirect_address:
          description: Redirect address
          title: redirect_address
          type: string
      required:
      - redirect_address
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/NewMailboxForwarding'
      example:
        result: success
        data:
          email_idn: email_idn
          has_dont_deliver: true
          email: email
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_400_response_allOf_error:
      description: Error object
      example:
        code: too_much_redirections
        description: Too much redirections
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - incorrect_redirect_address
          - max_mailbox_redirection
          - redirect_address_already_exists
          - too_much_redirections
          example: too_much_redirections
          type: string
        description:
          description: Description of the error
          enum:
          - Incorrect redirect address
          - Max mailbox redirection
          - Redirect address already exists
          - Too much redirections
          example: Too much redirections
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: too_much_redirections
          description: Too much redirections
          errors:
          - errors
          - errors
    Request_body_48:
      properties:
        is_enabled:
          description: Enable or disable forwarding
          title: is_enabled
          type: boolean
        redirect_addresses: {}
        has_dont_deliver:
          description: Delete messages from the server after sending
          title: has_dont_deliver
          type: boolean
        has_forward_spam:
          description: Transmit spam messages
          title: has_forward_spam
          type: boolean
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_patch_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - redirect_address_alias_or_mailboxname
          - too_much_redirections
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Redirect address alias or mailboxname
          - Too much redirections
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_patch_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses_patch_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxAlias'
      example:
        result: success
        data:
          is_enabled: 0
          aliases:
          - name: name
          - name: name
    Request_body_49:
      properties:
        aliases:
          description: Aliases to update.
          items:
            type: string
          type: array
      required:
      - aliases
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - alias_limit_reached
          - cannot_create_alias_for_generic_mailbox
          - error
          - unknown_error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Alias limit reached
          - Bad Request
          - Cannot create alias for generic mailbox
          - Unknown error
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_50:
      properties:
        alias:
          description: New alias for the mailbox.
          title: alias
          type: string
      required:
      - alias
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_post_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - alias_already_exists
          - alias_limit_reached
          - cannot_create_alias_for_generic_mailbox
          - cannot_create_alias_with_a_redirection
          - error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Alias already exists
          - Alias limit reached
          - Bad Request
          - Cannot create alias for generic mailbox
          - Cannot create alias with a redirection
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_post_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases_post_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ServiceMail'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_locked: true
          created_at: 5
          description: description
          expired_at: 5
          used: 3
          has_maintenance: true
          has_operation_in_progress: true
          total: 2
          internal_name: internal_name
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          quota: 9
          main_fqdn: main_fqdn
          limit:
            alias_for_mailbox: true
            alias_for_mailbox_default: true
            alias_for_fqdn: true
            alias_for_fqdn_default: true
          is_zero_price: true
          id: 0
          main_fqdn_idn: main_fqdn_idn
          bill_periodicity: 7
          unique_id: 2
          diagnostic_dns:
            has_error: true
          service_name: service_name
          pack:
            is_starter: true
            has_newsletter_tool: true
            has_list_tool: true
            description: description
            additional_paid_email: 7
            id: 4
            free_additional_email: 1
          tags: "{}"
          account_id: 6
          is_free: true
          customer_name: customer_name
          bill_reference: bill_reference
        - is_locked: true
          created_at: 5
          description: description
          expired_at: 5
          used: 3
          has_maintenance: true
          has_operation_in_progress: true
          total: 2
          internal_name: internal_name
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          quota: 9
          main_fqdn: main_fqdn
          limit:
            alias_for_mailbox: true
            alias_for_mailbox_default: true
            alias_for_fqdn: true
            alias_for_fqdn_default: true
          is_zero_price: true
          id: 0
          main_fqdn_idn: main_fqdn_idn
          bill_periodicity: 7
          unique_id: 2
          diagnostic_dns:
            has_error: true
          service_name: service_name
          pack:
            is_starter: true
            has_newsletter_tool: true
            has_list_tool: true
            description: description
            additional_paid_email: 7
            id: 4
            free_additional_email: 1
          tags: "{}"
          account_id: 6
          is_free: true
          customer_name: customer_name
          bill_reference: bill_reference
        page: 2
    _1_mail_hostings_csv_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/MailHosting'
            type: array
      example:
        result: success
        data:
        - offer: offer
          expiration: expiration
          mailboxes: 0
          customer_name: customer_name
        - offer: offer
          expiration: expiration
          mailboxes: 0
          customer_name: customer_name
    _1_mail_hostings_invitations_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/WorkspaceInvitation'
            type: array
      example:
        result: success
        data:
        - mailbox:
            mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
          permissions:
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          qrcode: qrcode
          is_valid: true
          sent_to: sent_to
          expired_at: 0
          key: key
          short_url: http://example.com/aeiou
          is_used: true
        - mailbox:
            mailbox_idn: user@êxample.com
            mailbox: user@xn--xample-hva.com
            mailbox_name: user
          permissions:
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          - can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          qrcode: qrcode
          is_valid: true
          sent_to: sent_to
          expired_at: 0
          key: key
          short_url: http://example.com/aeiou
          is_used: true
    _1_mail_hostings__mail_hosting_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/ServiceMail'
      example:
        result: success
        data:
          is_locked: true
          created_at: 5
          description: description
          expired_at: 5
          used: 3
          has_maintenance: true
          has_operation_in_progress: true
          total: 2
          internal_name: internal_name
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          quota: 9
          main_fqdn: main_fqdn
          limit:
            alias_for_mailbox: true
            alias_for_mailbox_default: true
            alias_for_fqdn: true
            alias_for_fqdn_default: true
          is_zero_price: true
          id: 0
          main_fqdn_idn: main_fqdn_idn
          bill_periodicity: 7
          unique_id: 2
          diagnostic_dns:
            has_error: true
          service_name: service_name
          pack:
            is_starter: true
            has_newsletter_tool: true
            has_list_tool: true
            description: description
            additional_paid_email: 7
            id: 4
            free_additional_email: 1
          tags: "{}"
          account_id: 6
          is_free: true
          customer_name: customer_name
          bill_reference: bill_reference
    _1_mail_hostings__mail_hosting_id__preferences_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/ServiceMailpreferences'
      example:
        result: success
        data:
          default_permissions: "{}"
          spam_filter_enabled: true
          authorized_senders:
          - authorized_senders
          - authorized_senders
          updated_at: 6
          created_at: 0
          blocked_senders:
          - blocked_senders
          - blocked_senders
          promotion_filter_enabled: true
    Request_body_51:
      properties:
        authorized_senders:
          items:
            title: item
            type: string
          type: array
        blocked_senders:
          items:
            title: item
            type: string
          type: array
        default_permission:
          items:
            title: item
            type: boolean
          type: array
        dkim_enabled:
          title: dkim_enabled
          type: boolean
        promotion_filter_enabled:
          title: promotion_filter_enabled
          type: boolean
        spam_filter_enabled:
          title: spam_filter_enabled
          type: boolean
      title: Request body
    Request_body_52:
      properties:
        send_mail:
          title: send_mail
          type: boolean
      title: Request body
    Request_body_53:
      properties:
        content:
          maxLength: 65536
          title: content
          type: string
        default:
          title: default
          type: boolean
        name:
          description: "Name of the resource `{name}`"
          maxLength: 255
          title: name
          type: string
        position:
          enum:
          - bottom
          - top
          title: position
          type: string
        send_mail:
          title: send_mail
          type: boolean
      title: Request body
    Request_body_54:
      properties:
        dont_reply_to:
          description: List of emails the auto reply won't respond to
          example: "[test@tests.ch]"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        ended_at:
          description: "Timestamp `{name}` has ended"
          title: ended_at
          type: integer
          nullable: true
        is_visible:
          title: is_visible
          type: boolean
        message:
          maxLength: 65536
          title: message
          type: string
        recurrent_days:
          description: List of the days when the auto reply is activated
          items:
            title: item
            type: boolean
          type: array
        started_at:
          description: "Timestamp `{name}` has been started"
          title: started_at
          type: integer
          nullable: true
      title: Request body
    _1_mail_hostings__mail_hosting_id__users_get_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/WorkspaceUserList'
      example:
        result: success
        data:
          users:
          - is_deleted: true
            name: name
            mailboxes:
            - mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
            - mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
            id: 0
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
            is_unified: true
          - is_deleted: true
            name: name
            mailboxes:
            - mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
            - mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
              permissions:
                can_manage_auto_reply: true
                can_manage_redirections: true
                can_manage_aliases: true
                can_configure_mail_folders: true
                can_manage_security: true
                can_manage_signatures: true
                can_manage_filters: true
                can_change_password: true
            id: 0
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
            is_unified: true
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Mailbox'
      example:
        result: success
        data:
          is_removable: true
          aliases:
          - aliases
          - aliases
          is_dkim_updatable: true
          created_at: 1
          is_auth: true
          pop3_last_login_at: 9
          operation_in_progress: true
          is_free_mail: true
          permissions:
            has_technical_right: true
            is_linked_to_user: true
            can_manage_auto_reply: true
            can_manage_redirections: true
            can_manage_aliases: true
            can_configure_mail_folders: true
            can_manage_security: true
            can_manage_signatures: true
            can_manage_filters: true
            can_change_password: true
          password_last_changed_at: 5
          has_mail_filtering: true
          size_checked_at: 2
          has_dkim_signature: true
          mail_filtering_folder_social_networks: mail_filtering_folder_social_networks
          has_redirection: true
          has_auto_responder: true
          has_move_spam: true
          is_limited: true
          imap_last_login_at: 7
          users:
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          mailbox_idn: user@êxample.com
          redirections:
          - redirections
          - redirections
          auto_responder:
            is_enabled: true
            reply_from: reply_from
            is_active: true
            is_recurrent: true
            dont_reply_to:
            - dont_reply_to
            - dont_reply_to
            has_send_original_message: true
            started_at: 2000-01-23
            valid_emails:
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            - is_removable: true
              email_idn: email_idn
              is_account: true
              id: 6
              is_verified: true
              email: email
            recurrent_days:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            reply_message: reply_message
            ended_at: 2000-01-23
            reply_from_id: 0
          mailbox: user@xn--xample-hva.com
          full_name: full_name
          authorized_senders:
          - user@authorized-senders.com
          - user@authorized-senders.com
          size: 5
          mailbox_name: user
          mailbox_id: 2
          blocked_senders:
          - user@blocked-senders.com
          - user@blocked-senders.com
          mail_filtering_folder_commercials: mail_filtering_folder_commercials
          full_aliases:
          - full_aliases
          - full_aliases
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__delete_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - mailbox_cannot_delete_quarantine
          - mailbox_is_ldap_locked
          - mailbox_is_smtpban
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Mailbox cannot delete quarantine
          - Mailbox is ldap locked
          - Mailbox is smtpban
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_55:
      properties:
        password:
          description: Mailbox password
          title: password
          type: string
        full_name:
          description: Specify full name
          title: full_name
          type: string
        note:
          description: Add a note
          title: note
          type: string
        has_move_spam:
          description: Specify if spam are moved to spam folder
          title: has_move_spam
          type: boolean
        authorized_senders: {}
        blocked_senders: {}
        has_responder:
          description: Specify if mailbox responder is enabled
          title: has_responder
          type: boolean
        has_mail_filtering:
          description: Specify if mail filtering is enabled
          title: has_mail_filtering
          type: boolean
        mail_filtering_folder_commercials:
          description: Specify commercial folder
          title: mail_filtering_folder_commercials
          type: string
        mail_filtering_folder_social_networks:
          description: Specify social networks folder
          title: mail_filtering_folder_social_networks
          type: string
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__users_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/WorkspaceUser'
      example:
        result: success
        data:
          invitations:
          - mailbox:
              mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
            permissions:
            - can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            - can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            qrcode: qrcode
            is_valid: true
            sent_to: sent_to
            expired_at: 0
            key: key
            short_url: http://example.com/aeiou
            is_used: true
          - mailbox:
              mailbox_idn: user@êxample.com
              mailbox: user@xn--xample-hva.com
              mailbox_name: user
            permissions:
            - can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            - can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            qrcode: qrcode
            is_valid: true
            sent_to: sent_to
            expired_at: 0
            key: key
            short_url: http://example.com/aeiou
            is_used: true
          users:
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
          - last_login_at: "{}"
            is_deleted: true
            permissions:
              can_manage_auto_reply: true
              can_manage_redirections: true
              can_manage_aliases: true
              can_configure_mail_folders: true
              can_manage_security: true
              can_manage_signatures: true
              can_manage_filters: true
              can_change_password: true
            name: name
            id: 3
            avatar: http://example.com/aeiou
            email: email
            has_double_auth: true
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxSignatureElement'
      example:
        result: success
        data:
          full_name: full_name
          sender_idn: sender_idn
          reply_to: reply_to
          sender: sender
          name: name
          id: 0
          reply_to_idn: reply_to_idn
          is_default: true
          content: content
          sender_id: 1
          hash: hash
          reply_to_id: 6
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_400_response_allOf_error:
      description: Error object
      example:
        code: signature_does_not_exist
        description: Signature does not exist
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - signature_does_not_exist
          example: signature_does_not_exist
          type: string
        description:
          description: Description of the error
          enum:
          - Signature does not exist
          example: Signature does not exist
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__get_400_response_allOf_error'
      example:
        result: error
        error:
          code: signature_does_not_exist
          description: Signature does not exist
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__delete_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - signature_does_not_exist
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Signature does not exist
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_56:
      properties:
        reply_to_id:
          description: Validated sender/reply address identifier
          title: reply_to_id
          type: integer
        sender_id:
          description: Validated sender/reply address identifier
          title: sender_id
          type: integer
        is_default:
          description: Set signature as default
          title: is_default
          type: boolean
        position:
          description: Text location (top|bottom)
          title: position
          type: string
        content:
          description: HTML content of the signature
          title: content
          type: string
        full_name:
          description: The full name (generally first name and surname)
          title: full_name
          type: string
      required:
      - reply_to_id
      - sender_id
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__patch_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - invalid_reply_to_code
          - invalid_sender_code
          - signature_does_not_exist
          - signature_name_already_exists
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Invalid reply to code
          - Invalid sender code
          - Signature does not exist
          - Signature name already exists
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__patch_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__signatures__signature_id__patch_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/VerifiedEmail'
            type: array
      example:
        result: success
        data:
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
        - is_removable: true
          email_idn: email_idn
          is_account: true
          id: 6
          is_verified: true
          email: email
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auto_reply_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/MailboxAutoReply'
      example:
        result: success
        data:
          is_enabled: true
          reply_from: reply_from
          is_active: true
          is_recurrent: true
          dont_reply_to:
          - dont_reply_to
          - dont_reply_to
          has_send_original_message: true
          started_at: 2000-01-23
          valid_emails:
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          - is_removable: true
            email_idn: email_idn
            is_account: true
            id: 6
            is_verified: true
            email: email
          recurrent_days:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          reply_message: reply_message
          ended_at: 2000-01-23
          reply_from_id: 0
    Request_body_57:
      properties:
        body:
          $ref: '#/components/schemas/PatchAutoReply'
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auto_reply_model__model_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/ServiceMailResponder'
      example:
        result: success
        data:
          reply_from: reply_from
          is_active: true
          is_visible: true
          is_recurrent: is_recurrent
          recurrent_days: recurrent_days
          is_model: true
          message: message
          reply_from_id: 5
          dont_reply_to: "[test@tests.ch]"
          source_model_id: 6
          name: name
          started_at: 1
          valid_emails:
          - is_removable: is_removable
            email_idn: email_idn
            is_account: is_account
            id: 2
            is_verified: is_verified
            email: email
          - is_removable: is_removable
            email_idn: email_idn
            is_account: is_account
            id: 2
            is_verified: is_verified
            email: email
          id: 0
          ended_at: 5
    Request_body_58:
      properties:
        email:
          description: Email invitation
          title: email
          type: string
        key:
          description: Invitation identifier
          title: key
          type: string
      required:
      - email
      - key
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_send_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - cannot_send_invitation_email
          - error
          - invalid_password
          - too_many_attempts_try_again_in_1_minute
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Cannot send invitation email
          - Invalid password
          - Too many attempts try again in 1 minute
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_send_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__auth_invitations_send_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_59:
      properties:
        body:
          $ref: '#/components/schemas/PatchMailboxPermission'
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__invitations__key__patch_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - cannot_update_invitation
          - error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Cannot update invitation
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__invitations__key__patch_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__invitations__key__patch_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_60:
      properties:
        email:
          description: Sender/reply address to validate
          title: email
          type: string
      required:
      - email
      title: Request body
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_put_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - sender_reply_address_already_validated
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Sender reply address already validated
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_link_put_400_response_allOf_error:
      description: Error object
      example:
        code: sender_reply_address_already_validated
        description: Sender reply address already validated
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - sender_reply_address_already_validated
          example: sender_reply_address_already_validated
          type: string
        description:
          description: Description of the error
          enum:
          - Sender reply address already validated
          example: Sender reply address already validated
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_link_put_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__headers_addresses_send_validation_link_put_400_response_allOf_error'
      example:
        result: error
        error:
          code: sender_reply_address_already_validated
          description: Sender reply address already validated
          errors:
          - errors
          - errors
    Request_body_61:
      properties:
        email:
          description: Sender/reply address to validate
          title: email
          type: string
        code:
          description: Validation code
          title: code
          type: string
      required:
      - code
      - email
      title: Request body
    Request_body_62:
      properties:
        apply_all:
          title: apply_all
          type: boolean
        mailboxes:
          items:
            title: item
            type: string
          type: array
        password:
          title: password
          type: string
      required:
      - password
      title: Request body
    ? _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses__redirect_addresses__delete_400_response_allOf_error
    : description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - error
          - redirect_address_does_not_exist
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Bad Request
          - Redirect address does not exist
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses__redirect_addresses__delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__forwarding_addresses__redirect_addresses__delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases__alias__delete_400_response_allOf_error:
      description: Error object
      example:
        code: error
        description: Bad Request
        errors:
        - errors
        - errors
      properties:
        code:
          description: Error code
          enum:
          - alias_does_not_exist
          - error
          example: error
          type: string
        description:
          description: Description of the error
          enum:
          - Alias does not exist
          - Bad Request
          example: Bad Request
          type: string
        errors:
          description: Error details
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    _1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases__alias__delete_400_response:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          error:
            $ref: '#/components/schemas/_1_mail_hostings__mail_hosting_id__mailboxes__mailbox_name__aliases__alias__delete_400_response_allOf_error'
      example:
        result: error
        error:
          code: error
          description: Bad Request
          errors:
          - errors
          - errors
    Request_body_63:
      properties:
        avatar:
          description: Avatar
          title: avatar
          type: string
        encoding:
          title: encoding
          type: string
      required:
      - avatar
      - encoding
      title: Request body
    _2_profile_avatar_post_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Useravatar'
      example:
        result: success
        data:
          avatar: https://www.infomaniak.com/img/common/logo-infomaniak.svg
    _2_profile_applications_passwords_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/partialUserapplicationpassword'
            type: array
      example:
        result: success
        data:
        - last_used_at: 1630929640
          name: My application
          id: 1234
        - last_used_at: 1630929640
          name: My application
          id: 1234
    _2_profile_applications_passwords_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Userapplicationpassword'
      example:
        result: success
        data:
          last_used_at: 1630929640
          password: aaaabbbbccccdddd
          name: My application
          id: 1234
    _1_accounts_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Account'
            type: array
      example:
        result: success
        data:
        - addresses:
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          no_access: true
          timezone: Europe/Zurich
          vat_number: ""
          created_at: 1294959600
          language: language
          language_id: 1
          locale: fr_FR
          type: owner
          mailing: true
          legal_entity_type: company
          billing: true
          services_already_demo:
          - services_already_demo
          - services_already_demo
          logo: https://www.infomaniak.com/img/common/logo-infomaniak.svg
          blocked_at: 0
          id: 1234
          nb_users: 2
          fax: "+41220000000"
          beta: true
          order:
            waiting_payment: 1
            blocked_order_id:
            - blocked_order_id
            - blocked_order_id
            in_process: 0
          website: https://www.infomaniak.com
          billing_mailing: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          is_blocked: true
          field1: ""
          phone: "+41790000000"
          customization_url: "{}"
          name: Secret Organization
          workspace_only: true
          field2: ""
          nb_invitations: 2
        - addresses:
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          no_access: true
          timezone: Europe/Zurich
          vat_number: ""
          created_at: 1294959600
          language: language
          language_id: 1
          locale: fr_FR
          type: owner
          mailing: true
          legal_entity_type: company
          billing: true
          services_already_demo:
          - services_already_demo
          - services_already_demo
          logo: https://www.infomaniak.com/img/common/logo-infomaniak.svg
          blocked_at: 0
          id: 1234
          nb_users: 2
          fax: "+41220000000"
          beta: true
          order:
            waiting_payment: 1
            blocked_order_id:
            - blocked_order_id
            - blocked_order_id
            in_process: 0
          website: https://www.infomaniak.com
          billing_mailing: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          is_blocked: true
          field1: ""
          phone: "+41790000000"
          customization_url: "{}"
          name: Secret Organization
          workspace_only: true
          field2: ""
          nb_invitations: 2
    _1_accounts__account_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Account'
      example:
        result: success
        data:
          addresses:
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          - zip: "1227"
            country:
              locations:
              - locations
              - locations
              from: 0
              to: 6
            for_invoice: true
            city: Genève
            street: Rue Eugène-Marziano 25
            created_at: 1558601584
            id: 1234
            street2: ""
            type: professional
          no_access: true
          timezone: Europe/Zurich
          vat_number: ""
          created_at: 1294959600
          language: language
          language_id: 1
          locale: fr_FR
          type: owner
          mailing: true
          legal_entity_type: company
          billing: true
          services_already_demo:
          - services_already_demo
          - services_already_demo
          logo: https://www.infomaniak.com/img/common/logo-infomaniak.svg
          blocked_at: 0
          id: 1234
          nb_users: 2
          fax: "+41220000000"
          beta: true
          order:
            waiting_payment: 1
            blocked_order_id:
            - blocked_order_id
            - blocked_order_id
            in_process: 0
          website: https://www.infomaniak.com
          billing_mailing: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          is_blocked: true
          field1: ""
          phone: "+41790000000"
          customization_url: "{}"
          name: Secret Organization
          workspace_only: true
          field2: ""
          nb_invitations: 2
    _1_accounts__account_id__services_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Service'
            type: array
      example:
        result: success
        data:
        - name: hosting
          count: 4
          id: 1
        - name: hosting
          count: 4
          id: 1
    _1_async_tasks_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AsyncTask'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - updated_at: 6
          finished_at: 5
          executed_at: 1
          response: "{}"
          created_at: 0
          error: "{}"
          uuid: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
          status: running
        - updated_at: 6
          finished_at: 5
          executed_at: 1
          response: "{}"
          created_at: 0
          error: "{}"
          uuid: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
          status: running
        page: 2
    _1_async_tasks__task_uuid__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/AsyncTask'
      example:
        result: success
        data:
          updated_at: 6
          finished_at: 5
          executed_at: 1
          response: "{}"
          created_at: 0
          error: "{}"
          uuid: 5cb09b3c-d03a-11eb-b8bc-0242ac130003
          status: running
    _1_countries_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Country'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_enabled: true
          name: SWITZERLAND
          short_name: CH
          id: 203
        - is_enabled: true
          name: SWITZERLAND
          short_name: CH
          id: 203
        page: 2
    _1_countries__country_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Country'
      example:
        result: success
        data:
          is_enabled: true
          name: SWITZERLAND
          short_name: CH
          id: 203
    _1_languages_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Language'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - name: English
          short_locale: en
          short_name: E
          id: 2
          locale: en_GB
        - name: English
          short_locale: en
          short_name: E
          id: 2
          locale: en_GB
        page: 2
    _1_languages__language_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Language'
      example:
        result: success
        data:
          name: English
          short_locale: en
          short_name: E
          id: 2
          locale: en_GB
    _1_products_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Product'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - is_locked: true
          created_at: 5
          description: description
          admin:
            user_id: 4
            display_name: display_name
            email: email
          expired_at: 5
          has_maintenance: true
          has_operation_in_progress: true
          internal_name: internal_name
          parent_service_name: parent_service_name
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          is_zero_price: true
          id: 0
          is_managed_by_partner: true
          unique_id: 9
          service_name: service_name
          deleted_at: 2
          version: 7
          users:
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          parent_service_id: 2
          account_id: 6
          parent_id: 3
          is_free: true
          customer_name: customer_name
          bill_reference: bill_reference
          is_trial: true
          status:
            activated_at: 2
            activated_by:
            - activated_by
            - activated_by
            locked:
              infomaniak: true
              superuser: true
            maintenance:
              technical: true
              infomaniak: true
              superuser: true
        - is_locked: true
          created_at: 5
          description: description
          admin:
            user_id: 4
            display_name: display_name
            email: email
          expired_at: 5
          has_maintenance: true
          has_operation_in_progress: true
          internal_name: internal_name
          parent_service_name: parent_service_name
          service_id: 1
          rights:
            statistic: true
            sale: true
            technical: true
            check: true
          is_zero_price: true
          id: 0
          is_managed_by_partner: true
          unique_id: 9
          service_name: service_name
          deleted_at: 2
          version: 7
          users:
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          - user_id: 4
            rights:
              statistic: true
              sale: true
              technical: true
              check: true
          tags:
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          - color: 4
            product_count: 2
            name: My tag name
            id: 1234
          parent_service_id: 2
          account_id: 6
          parent_id: 3
          is_free: true
          customer_name: customer_name
          bill_reference: bill_reference
          is_trial: true
          status:
            activated_at: 2
            activated_by:
            - activated_by
            - activated_by
            locked:
              infomaniak: true
              superuser: true
            maintenance:
              technical: true
              infomaniak: true
              superuser: true
        page: 2
    _1_timezones_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Timezone'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - name: Europe/Zurich
          id: 414
          gmt: 01:00
        - name: Europe/Zurich
          id: 414
          gmt: 01:00
        page: 2
    _1_timezones__timezone_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Timezone'
      example:
        result: success
        data:
          name: Europe/Zurich
          id: 414
          gmt: 01:00
    _2_events_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Event'
            type: array
      example:
        result: success
        data:
        - comments: comments
          description:
            translations:
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            description: This maintenance is intended to increase the capacity of
              our network infrastructure in order to accompany the growth of our activities.
            title: Network maintenance
          started_at: 0
          id: 414
          services:
          - name: hosting
            id: 1
            type: null
          - name: hosting
            id: 1
            type: null
          type: enhancement
          url: ed4px6RxMG
          ended_at: 6
          status: terminated
        - comments: comments
          description:
            translations:
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            description: This maintenance is intended to increase the capacity of
              our network infrastructure in order to accompany the growth of our activities.
            title: Network maintenance
          started_at: 0
          id: 414
          services:
          - name: hosting
            id: 1
            type: null
          - name: hosting
            id: 1
            type: null
          type: enhancement
          url: ed4px6RxMG
          ended_at: 6
          status: terminated
    _2_events__event_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Event'
      example:
        result: success
        data:
          comments: comments
          description:
            translations:
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            - language: en
              title: Network maintenance
              body: This maintenance is intended to increase the capacity of our network
                infrastructure in order to accompany the growth of our activities.
            description: This maintenance is intended to increase the capacity of
              our network infrastructure in order to accompany the growth of our activities.
            title: Network maintenance
          started_at: 0
          id: 414
          services:
          - name: hosting
            id: 1
            type: null
          - name: hosting
            id: 1
            type: null
          type: enhancement
          url: ed4px6RxMG
          ended_at: 6
          status: terminated
    _2_profile_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/UserProfile'
      example:
        result: success
        data:
          emails: ""
          sessions:
          - browser: browser
            ip: ip
            location: location
            last_accessed_at: 6
            device: device
            user_agent: user_agent
          - browser: browser
            ip: ip
            location: location
            last_accessed_at: 6
            device: device
            user_agent: user_agent
          preferences:
            country:
              is_enabled: true
              name: SWITZERLAND
              short_name: CH
              id: 203
            security:
              remaining_rescue_code: 1
              last_login_at: 5
              yubikey: true
              auth_devices:
              - user_ip: user_ip
                updated_at: 3
                name: name
                last_connexion: 7
                created_at: 9
                id: 2
                device: device
                deleted_at: 2
                user_agent: user_agent
              - user_ip: user_ip
                updated_at: 3
                name: name
                last_connexion: 7
                created_at: 9
                id: 2
                device: device
                deleted_at: 2
                user_agent: user_agent
              sms: true
              otp: true
              sms_phone: sms_phone
              infomaniak_application: true
              date_last_changed_password: 5
              double_auth: true
              double_auth_method: double_auth_method
            timezone:
              name: Europe/Zurich
              id: 414
              gmt: 01:00
            connection:
              unsuccessful_rate_limit: 4
              successful_notification: true
              unsuccessful_notification: true
              unsuccessful_limit: true
            language:
              name: English
              short_locale: en
              short_name: E
              id: 2
              locale: en_GB
            account: account
          last_name: last_name
          phones:
          - reminder: "true"
            phone: "+41123456789"
            created_at: 1632896634
            checked: true
            id: 2
            type: phone
          - reminder: "true"
            phone: "+41123456789"
            created_at: 1632896634
            checked: true
            id: 2
            type: phone
          id: 0
          avatar: avatar
          display_name: display_name
          type: type
          login: login
          first_name: first_name
          email: email
    Request_body_64:
      properties:
        country_id:
          title: country_id
          type: integer
        current_account_id:
          title: current_account_id
          type: integer
        current_password:
          title: current_password
          type: string
        email:
          description: Email
          maxLength: 128
          title: email
          type: string
        firstname:
          maxLength: 128
          title: firstname
          type: string
        keep_session_ids:
          items:
            title: item
            type: string
          type: array
        language_id:
          description: "Unique identifier of the `language` that is related to the\
            \ resource `{name}`"
          title: language_id
          type: integer
        lastname:
          maxLength: 128
          title: lastname
          type: string
        locale:
          description: Represents a language identifier and a region identifier
          title: locale
          type: string
        password:
          title: password
          type: string
        reminder_email:
          maxLength: 200
          title: reminder_email
          type: string
        reminder_phone:
          maxLength: 15
          title: reminder_phone
          type: string
        successful_connexion_notification:
          title: successful_connexion_notification
          type: boolean
        timezone:
          title: timezone
          type: string
        timezone_id:
          title: timezone_id
          type: integer
        unsuccessful_connexion_limit:
          title: unsuccessful_connexion_limit
          type: boolean
        unsuccessful_connexion_notification:
          title: unsuccessful_connexion_notification
          type: boolean
        unsuccessful_connexion_rate_limit:
          maximum: 100
          minimum: 1
          title: unsuccessful_connexion_rate_limit
          type: integer
      required:
      - email
      title: Request body
    _2_profile_support_tickets_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Usersupportticket'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - subject: My ticket subject
          created: 1606205084
          closed: 1606221451
          id: 1234
          updated: 1606205084
          mask: INK-XXX-XXXXX-XXX
          status: closed
        - subject: My ticket subject
          created: 1606205084
          closed: 1606221451
          id: 1234
          updated: 1606205084
          mask: INK-XXX-XXXXX-XXX
          status: closed
        page: 2
    _2_profile_logs_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Useractivitylogs'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - product: My product name
          account_id: 1234
          service_id: 23
          product_id: 1234
          ip: 127.0.0.1
          description: description
          action: Edit
          created_at: 1628144523
          id: id
        - product: My product name
          account_id: 1234
          service_id: 23
          product_id: 1234
          ip: 127.0.0.1
          description: description
          action: Edit
          created_at: 1628144523
          id: id
        page: 2
    _2_profile_emails_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Useremail'
            type: array
      example:
        result: success
        data:
        - reminder: true
          created_at: 1632815150
          checked: true
          id: 123456
          type: other
          email: john.doe@infomaniak.com
        - reminder: true
          created_at: 1632815150
          checked: true
          id: 123456
          type: other
          email: john.doe@infomaniak.com
    _2_profile_emails__email_type___email_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Useremail'
      example:
        result: success
        data:
          reminder: true
          created_at: 1632815150
          checked: true
          id: 123456
          type: other
          email: john.doe@infomaniak.com
    _2_profile_phones_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Userphone'
            type: array
      example:
        result: success
        data:
        - reminder: "true"
          phone: "+41123456789"
          created_at: 1632896634
          checked: true
          id: 2
          type: phone
        - reminder: "true"
          phone: "+41123456789"
          created_at: 1632896634
          checked: true
          id: 2
          type: phone
    _2_profile_phones__phone_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Userphone'
      example:
        result: success
        data:
          reminder: "true"
          phone: "+41123456789"
          created_at: 1632896634
          checked: true
          id: 2
          type: phone
    _2_profile_applications_passwords__password_id__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/partialUserapplicationpassword'
      example:
        result: success
        data:
          last_used_at: 1630929640
          name: My application
          id: 1234
    _1_videos_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Channel'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
        - maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
        page: 2
    Request_body_65:
      properties:
        name:
          description: Specify the name of the channel
          minLength: -1
          title: name
          type: string
      required:
      - name
      title: Request body
    _1_videos_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Channel'
      example:
        result: success
        data:
          maintained_at: 6
          created_at: 8
          type: abr
          updated_at: 9
          blocked: true
          remember_to_config: true
          rights: rights
          options:
          - options
          - options
          blocked_at: 3
          free: true
          maintained: true
          live:
            server_name: server_name
            total_connections: 2
            application_instance: application_instance
            bytes_out: 7
            bytes_in: 2
            bytes_out_rate: 3
            bytes_in_rate: 9
          order: order
          players:
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          - logo_margin_top: 50
            enable_facebook: true
            ads_url: ""
            facebook_back_link: my-lovely-stream.ch
            use_preload_img: true
            ads_enabled: true
            countdown_seconds: countdown_seconds
            channel: null
            stereo_projection360: stereo_projection360
            logo_margin_left: 50
            buffer: buffer
            use_restrict_img: true
            height: 720
            enable_twitter: true
            show_logo: true
            countdown: true
            restrictions: restrictions
            chromecast: true
            interrupt_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/interrupted.png"
            name: MyRadioPlayer
            twitter_related: infomaniak video live
            controlbar_color: '#000000'
            twitter_via: MyAccount
            integrations: integrations
            is360: true
            control_color: '#FFFFFF'
            countdown_txt: countdown_txt
            sound_enabled: true
            use_geo_ip_img: true
            preload_img: preload_img
            description: description
            restrict_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/unauthorized.png"
            created_at: 6
            logo_percentage: 50
            extract_preload_img: true
            title: title
            thumbnail_url: thumbnail_url
            auto_start: true
            player_id: 6
            countdown_minutes: countdown_minutes
            updated_at: 3
            show_controls: true
            facebook_player_embed: true
            countdown_hours: countdown_hours
            show_viewers: true
            enable_embed_code: true
            twitter_back_link: my-lovely-stream.ch
            time_before_hide_cb: 6
            sound_percentage: 50
            control_active_color: '#0098FF'
            auto_hide_controls: true
            countdown_stops_at: countdown_stops_at
            logo_img: "https://static.infomaniak.ch/configvideo/video-streaming-v2/private/{channel}/players/{player}/logo.png"
            use_interrupt_img: true
            countdown_days: countdown_days
            show_viewers_after: 5
            width: 1280
            logo_anchor: bottom left
            show_viewers_only_after: true
            geo_ip_img: geo_ip_img
            allow_full_screen: true
            ratio: ratio
          streams:
          - null
          - null
          recording_status: recording_status
          source_type: camip
          consumption:
            from: 7
            to: 1
            value: 4.145608029883936
          deleted_at: 6
          tags: tags
          real_type: real_type
          deleted: true
          default_options:
          - default_options
          - default_options
          name: name
          restriction:
            restrictions_id: 1
            exception_ip: exception_ip
            forbidden_ip: forbidden_ip
            allow_domain: allow_domain
            player_token: player_token
            authorize_country: true
            access_country: access_country
            shared_key: shared_key
          machines:
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          - ip: ip
            name: name
            url_domain: url_domain
            type: edge
            pool_id: 2
            url: url
          channel_id: 69001
          status:
          - status
          - status
    _1_videos__channel__events_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RepeatablePlannedEvent'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - timezone: timezone
          repeat_until: 7
          planned_event_id: 0
          start_at: 5
          type: all
          deleted_at: 1
          authorize_country: true
          stop_live: true
          storage_machine_id: 6
          dvr_window: 3
          stream_id: stream_id
          weekdays_only: true
          record: true
          name: name
          weekends_only: true
          repeat_interval: 2
          record_name: record_name
          fragment_duration: 9
          access_country: access_country
          stop_at: 5
        - timezone: timezone
          repeat_until: 7
          planned_event_id: 0
          start_at: 5
          type: all
          deleted_at: 1
          authorize_country: true
          stop_live: true
          storage_machine_id: 6
          dvr_window: 3
          stream_id: stream_id
          weekdays_only: true
          record: true
          name: name
          weekends_only: true
          repeat_interval: 2
          record_name: record_name
          fragment_duration: 9
          access_country: access_country
          stop_at: 5
        page: 2
    item_2:
      properties:
        simulcast_config_id:
          title: simulcast_config_id
          type: integer
      required:
      - simulcast_config_id
      title: item
    Request_body_66:
      properties:
        access_country:
          title: access_country
          type: string
          nullable: true
        authorize_country:
          description: Authorise or Prohibit countries to view the stream
          example: true
          title: authorize_country
          type: boolean
        date:
          description: "Timestamp `{name}` has been created"
          title: date
          type: string
          nullable: true
        dvr_window:
          minimum: -1
          title: dvr_window
          type: integer
          nullable: true
        fragment_duration:
          description: Limit the size of files
          maximum: 420
          minimum: 1
          title: fragment_duration
          type: integer
        name:
          description: "Name of the resource `{name}`"
          example: My first event
          title: name
          type: string
        record:
          description: Activate the interupt the live event
          title: record
          type: boolean
        record_name:
          description: Name of the recording
          title: record_name
          type: string
        repeat_interval:
          minimum: 3600
          title: repeat_interval
          type: integer
          nullable: true
        repeat_until:
          minimum: 1693188895
          title: repeat_until
          type: integer
          nullable: true
        simulcasts:
          items:
            $ref: '#/components/schemas/item_2'
          type: array
        start_at:
          description: Start of the event
          example: 1234567890
          minimum: 1
          title: start_at
          type: integer
        stop_at:
          description: End of the event
          example: 1234567890
          minimum: 1
          title: stop_at
          type: integer
        stop_live:
          description: Add geographical restrictions
          example: true
          title: stop_live
          type: boolean
        storage_machine_id:
          description: Unique identifier of the `storage space`
          title: storage_machine_id
          type: integer
        timezone:
          title: timezone
          type: string
        weekdays_only:
          title: weekdays_only
          type: boolean
          nullable: true
        weekends_only:
          title: weekends_only
          type: boolean
          nullable: true
      required:
      - authorize_country
      - fragment_duration
      - name
      - start_at
      - stop_at
      - stop_live
      - timezone
      title: Request body
    _1_videos__channel__events_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/RepeatablePlannedEvent'
      example:
        result: success
        data:
          timezone: timezone
          repeat_until: 7
          planned_event_id: 0
          start_at: 5
          type: all
          deleted_at: 1
          authorize_country: true
          stop_live: true
          storage_machine_id: 6
          dvr_window: 3
          stream_id: stream_id
          weekdays_only: true
          record: true
          name: name
          weekends_only: true
          repeat_interval: 2
          record_name: record_name
          fragment_duration: 9
          access_country: access_country
          stop_at: 5
    _1_videos__channel__options_recording_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/RecordingConfig'
      example:
        result: success
        data:
          recording_config_id: 0
          auto_record: true
          storage_machines:
          - auto_record_name: auto_record_name
            use_path: true
            pass: pass
            vod_id: 1980
            login: login
            deleted_at: 2
            valid: true
            recording_config_id: 5
            path: path
            storage_machine_id: 6
            protocol: protocol
            default: true
            port: 1
            auto_fragment_duration: 5
            name: name
            host: host
            url_http: url_http
            full: true
          - auto_record_name: auto_record_name
            use_path: true
            pass: pass
            vod_id: 1980
            login: login
            deleted_at: 2
            valid: true
            recording_config_id: 5
            path: path
            storage_machine_id: 6
            protocol: protocol
            default: true
            port: 1
            auto_fragment_duration: 5
            name: name
            host: host
            url_http: url_http
            full: true
    Request_body_67:
      properties:
        auto_record:
          title: auto_record
          type: boolean
      title: Request body
    _1_videos__channel__options_recording_storage_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StorageMachine'
            type: array
      example:
        result: success
        data:
        - auto_record_name: auto_record_name
          use_path: true
          pass: pass
          vod_id: 1980
          login: login
          deleted_at: 2
          valid: true
          recording_config_id: 5
          path: path
          storage_machine_id: 6
          protocol: protocol
          default: true
          port: 1
          auto_fragment_duration: 5
          name: name
          host: host
          url_http: url_http
          full: true
        - auto_record_name: auto_record_name
          use_path: true
          pass: pass
          vod_id: 1980
          login: login
          deleted_at: 2
          valid: true
          recording_config_id: 5
          path: path
          storage_machine_id: 6
          protocol: protocol
          default: true
          port: 1
          auto_fragment_duration: 5
          name: name
          host: host
          url_http: url_http
          full: true
    _1_videos__channel__options_recording_storage_post_201_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/StorageMachine'
      example:
        result: success
        data:
          auto_record_name: auto_record_name
          use_path: true
          pass: pass
          vod_id: 1980
          login: login
          deleted_at: 2
          valid: true
          recording_config_id: 5
          path: path
          storage_machine_id: 6
          protocol: protocol
          default: true
          port: 1
          auto_fragment_duration: 5
          name: name
          host: host
          url_http: url_http
          full: true
    _1_videos__channel__options_watermark_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/TranscodingOverlay'
      example:
        result: success
        data:
          z_index: 6
          size_percentage: 9
          opacity_percentage: 5
          encoder_preset: encoder_preset
          image_url: image_url
          horizontal_offset: 2
          description: description
          was_enabled: true
          align: align
          follow_update: true
          enabled: true
          overlay_id: 0
          name: name
          width: 1
          image_base_64: image_base_64
          height: 5
          vertical_offset: 7
    _1_videos__channel__options_timeshift_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/TimeshiftConfig'
      example:
        result: success
        data:
          recorder: recorder
          record_window_duration: 6
          dvr_option_id: 0
          enabled: true
    Request_body_68:
      properties:
        allowed_excess:
          description: Specify a limit before the interruption of live events in case
            of overrun
          minimum: -1
          title: allowed_excess
          type: integer
      title: Request body
    Request_body_69:
      properties:
        from:
          description: Specify the starting date to get Consumption
          example: "1640995200"
          title: from
          type: string
        per:
          description: Specify
          enum:
          - day
          - hour
          - minute
          - month
          - week
          - year
          title: per
          type: string
        to:
          description: Specify the ending date to get Consumption
          example: "1672444800"
          title: to
          type: string
      required:
      - from
      title: Request body
    _1_videos_stats_consumption_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Consumptionressource'
      example:
        result: success
        data:
          from: 7
          to: 1
          value: 4.145608029883936
    _1_videos_stats_viewers_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Viewersressource'
      example:
        result: success
        data:
          from: 6
          to: 1
          value: 0.8008281904610115
    _1_videos_stats_viewers_histogram_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Histogramviewersressource'
      example:
        result: success
        data:
          histogram:
          - histogram
          - histogram
    item_3:
      properties:
        audio_bitrate:
          title: audio_bitrate
          type: integer
        height:
          title: height
          type: integer
        pass:
          title: pass
          type: string
        resolution:
          title: resolution
          type: integer
        url:
          title: url
          type: string
        username:
          title: username
          type: string
        video_bitrate:
          title: video_bitrate
          type: integer
        width:
          title: width
          type: integer
      title: item
    Request_body_70:
      properties:
        auto_transcode:
          title: auto_transcode
          type: boolean
        name:
          description: "Name of the resource `{name}`"
          title: name
          type: string
        remember_to_config:
          title: remember_to_config
          type: boolean
        source_type:
          enum:
          - camip
          - encoder
          - maniak
          - mobile
          - webcam
          title: source_type
          type: string
        streams:
          items:
            $ref: '#/components/schemas/item_3'
          type: array
        transcode:
          title: transcode
          type: boolean
        type:
          enum:
          - abr
          - mono
          title: type
          type: string
      required:
      - name
      - remember_to_config
      - streams
      - transcode
      title: Request body
    _1_videos__channel__stats_geolocation_countries_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Geolocationressource'
      example:
        result: success
        data:
          locations:
          - locations
          - locations
          from: 0
          to: 6
    _1_videos__channel__stats_geolocation_clusters_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Clusterressource'
      example:
        result: success
        data:
          locations:
          - locations
          - locations
          resolutions:
          - resolutions
          - resolutions
    _1_videos__channel__stats_viewers_resolutions_shares_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Resolutionsresource'
      example:
        result: success
        data:
          total: 0
          resolutions:
          - resolutions
          - resolutions
          from: 6
          to: 1
    _1_videos__channel__stats_viewers_resolutions_histogram_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Resolutionsandhistogramressource'
      example:
        result: success
        data:
          histogram:
          - histogram
          - histogram
          resolutions:
          - resolutions
          - resolutions
          from: 0
          to: 6
    _1_videos__channel__integrations_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Integrationsressource'
            type: array
      example:
        result: success
        data:
        - dvr_available: true
          stream_id: maniak_tv
          constant_url: true
          dvr_enabled: true
          type: hls
          url: https://maniak_tv.vedge.infomaniak.com/livecast/ik:maniak_tv/manifest.f4m
        - dvr_available: true
          stream_id: maniak_tv
          constant_url: true
          dvr_enabled: true
          type: hls
          url: https://maniak_tv.vedge.infomaniak.com/livecast/ik:maniak_tv/manifest.f4m
    _1_videos__channel__players__player__embed_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Embedressource'
      example:
        result: success
        data:
          embed: <iframe style='border:0;' allowfullscreen width='1280' height='720'
            src='https://player.infomaniak.com?channel=69069&player=4242'></iframe>
    _1_videos__channel__players__player__embed_url_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Urlressource'
      example:
        result: success
        data:
          src: https://player.infomaniak.com?channel=69069&player=4242
    _1_videos__channel__options_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Options'
            type: array
      example:
        result: success
        data:
        - option_active: true
          name: name
          available: true
          description: description
          invoiceable_option:
            next_deadline_at: 2
            updated_at: 5
            end_echeance_at: 7
            option_active: true
            ordered_at: 5
            option_id: 1
            free: true
            channel_id: 69001
            demo: true
            deleted_at: 3
            terminated_at: 9
          included: true
          pricing:
            periodicity:
              unite: 0
              id: 1
              value: MONTH
            currency:
              currency: currency
              currency_pretty: currency_pretty
              id: "1"
            id: 1
            amount_excl_tax: 6.027456183070403
        - option_active: true
          name: name
          available: true
          description: description
          invoiceable_option:
            next_deadline_at: 2
            updated_at: 5
            end_echeance_at: 7
            option_active: true
            ordered_at: 5
            option_id: 1
            free: true
            channel_id: 69001
            demo: true
            deleted_at: 3
            terminated_at: 9
          included: true
          pricing:
            periodicity:
              unite: 0
              id: 1
              value: MONTH
            currency:
              currency: currency
              currency_pretty: currency_pretty
              id: "1"
            id: 1
            amount_excl_tax: 6.027456183070403
    _1_videos__channel__options__video_option__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Options'
      example:
        result: success
        data:
          option_active: true
          name: name
          available: true
          description: description
          invoiceable_option:
            next_deadline_at: 2
            updated_at: 5
            end_echeance_at: 7
            option_active: true
            ordered_at: 5
            option_id: 1
            free: true
            channel_id: 69001
            demo: true
            deleted_at: 3
            terminated_at: 9
          included: true
          pricing:
            periodicity:
              unite: 0
              id: 1
              value: MONTH
            currency:
              currency: currency
              currency_pretty: currency_pretty
              id: "1"
            id: 1
            amount_excl_tax: 6.027456183070403
    _1_videos__channel__options_simulcast_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SimulcastConfig'
            type: array
      - $ref: '#/components/schemas/Pagination'
      example:
        result: success
        items_per_page: 15
        total: 221
        pages: 15
        data:
        - simulcast_platform_id: simulcast_platform_id
          application_instance: application_instance
          scheme: scheme
          dest_stream: dest_stream
          previously_enabled_by_event: true
          was_enabled: true
          deleted_at: 1
          enabled: true
          facebook_config: facebook_config
          platform: platform
          force_disabled: true
          simulcast_config_id: 0
          application_name: application_name
          port: 6
          stream_id: stream_id
          host: host
          name: name
        - simulcast_platform_id: simulcast_platform_id
          application_instance: application_instance
          scheme: scheme
          dest_stream: dest_stream
          previously_enabled_by_event: true
          was_enabled: true
          deleted_at: 1
          enabled: true
          facebook_config: facebook_config
          platform: platform
          force_disabled: true
          simulcast_config_id: 0
          application_name: application_name
          port: 6
          stream_id: stream_id
          host: host
          name: name
        page: 2
    _1_videos__channel__options_simulcast__video_simulcast_config__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SimulcastConfig'
            type: array
      example:
        result: success
        data:
        - simulcast_platform_id: simulcast_platform_id
          application_instance: application_instance
          scheme: scheme
          dest_stream: dest_stream
          previously_enabled_by_event: true
          was_enabled: true
          deleted_at: 1
          enabled: true
          facebook_config: facebook_config
          platform: platform
          force_disabled: true
          simulcast_config_id: 0
          application_name: application_name
          port: 6
          stream_id: stream_id
          host: host
          name: name
        - simulcast_platform_id: simulcast_platform_id
          application_instance: application_instance
          scheme: scheme
          dest_stream: dest_stream
          previously_enabled_by_event: true
          was_enabled: true
          deleted_at: 1
          enabled: true
          facebook_config: facebook_config
          platform: platform
          force_disabled: true
          simulcast_config_id: 0
          application_name: application_name
          port: 6
          stream_id: stream_id
          host: host
          name: name
    _1_videos_countries_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Countriesressource'
      example:
        result: success
        data: null
    _1_videos_timezones_get_200_response:
      allOf:
      - $ref: '#/components/schemas/Response'
      - properties:
          data:
            $ref: '#/components/schemas/Timezonesressource'
      example:
        result: success
        data: null
    security:
      example:
        score: 2
        has_recovery_email: true
        has_valid_phone: true
        has_private_folder: true
        assistant_at: 5
        last_password_at: 5
        double_auth_method: double_auth_method
        has_double_auth: true
        has_valid_email: 7
      properties:
        assistant_at:
          description: The last date the assistant was used
          format: timestamp
          title: assistant_at
          type: integer
          nullable: true
        double_auth_method:
          description: Double authentication method used to log in
          title: double_auth_method
          type: string
        has_double_auth:
          description: Whether the `User` has double authentication enabled
          title: has_double_auth
          type: boolean
        last_password_at:
          description: Last time `User`'s password was changed
          format: timestamp
          title: last_password_at
          type: integer
          nullable: true
        score:
          description: Security score of the `User`
          title: score
          type: integer
        has_valid_email:
          description: Whether the `User` has a valid email
          title: has_valid_email
          type: integer
        has_recovery_email:
          description: Whether the `User` has a recovery email
          title: has_recovery_email
          type: boolean
        has_valid_phone:
          description: Whether the `User` has a valid phone number
          title: has_valid_phone
          type: boolean
        has_private_folder:
          description: Whether the `User` has a private folder
          title: has_private_folder
          type: boolean
      title: security
    MailboxFilter_scripts_inner:
      example:
        is_enabled: true
        name: name
        content: content
      properties:
        name:
          description: Script name
          type: string
        is_enabled:
          description: True if this script is enabled
          type: boolean
        content:
          description: Sieve script content
          type: string
    MailboxFilter_filters_inner_conditions_inner:
      example:
        property: property
        value: value
        operator: operator
      properties:
        property:
          description: Property
          type: string
        operator:
          description: Operator
          type: string
        value:
          description: Value
          type: string
    MailboxFilter_filters_inner_actions_inner:
      example:
        type: type
        value: value
      properties:
        type:
          description: Type
          type: string
        value:
          description: Value
          type: string
    MailboxFilter_filters_inner:
      example:
        is_enabled: true
        name: name
        conditions:
        - property: property
          value: value
          operator: operator
        - property: property
          value: value
          operator: operator
        actions:
        - type: type
          value: value
        - type: type
          value: value
        has_all_of: true
      properties:
        name:
          description: Name
          type: string
        is_enabled:
          description: True if this filter is enabled
          type: boolean
        has_all_of:
          description: All of
          type: boolean
        conditions:
          description: Conditions
          items:
            $ref: '#/components/schemas/MailboxFilter_filters_inner_conditions_inner'
          type: array
        actions:
          description: Actions
          items:
            $ref: '#/components/schemas/MailboxFilter_filters_inner_actions_inner'
          type: array
    PostSieveFilter_conditions:
      description: List of condition
      properties:
        property:
          enum:
          - body
          - cc
          - from
          - reply-to
          - size
          - subject
          - to
          - x-infomaniak-type
          type: string
        operator:
          enum:
          - begin
          - contains
          - end
          - is
          - not
          type: string
        value:
          type: string
      required:
      - operator
      - property
      - value
    PostSieveFilter_actions:
      description: List of action
      properties:
        type:
          enum:
          - copy
          - discard
          - flag_seen
          - forward
          - move
          - stop
          type: string
        value:
          type: string
        create_a_folder:
          type: string
      required:
      - type
    MailboxFolder_folders_inner:
      example:
        name: name
      properties:
        name:
          description: Folder name
          type: string
    MailboxForwarding_redirect_adresses_inner:
      example:
        email_idn: email_idn
        email: email
      properties:
        email:
          description: Email
          format: email
          type: string
        email_idn:
          description: EmailIDN
          format: email
          type: string
    MailboxAlias_aliases_inner:
      example:
        name: name
      properties:
        name:
          description: Alias value
          type: string
    limit:
      description: |2+

      example:
        alias_for_mailbox: true
        alias_for_mailbox_default: true
        alias_for_fqdn: true
        alias_for_fqdn_default: true
      properties:
        alias_for_fqdn:
          description: |2+

          title: alias_for_fqdn
          type: boolean
        alias_for_fqdn_default:
          description: |2+

          title: alias_for_fqdn_default
          type: boolean
        alias_for_mailbox:
          description: |2+

          title: alias_for_mailbox
          type: boolean
        alias_for_mailbox_default:
          description: |2+

          title: alias_for_mailbox_default
          type: boolean
      title: limit
    recurrent_days:
      description: ""
      example:
        sunday: true
        saturday: true
        tuesday: true
        wednesday: true
        thursday: true
        friday: true
        monday: true
      properties:
        monday:
          description: |+
            Activated on mondays

          title: monday
          type: boolean
        tuesday:
          description: |+
            Activated on tuesdays

          title: tuesday
          type: boolean
        wednesday:
          description: |+
            Activated on wednesdays

          title: wednesday
          type: boolean
        thursday:
          description: |+
            Activated on thursday

          title: thursday
          type: boolean
        friday:
          description: |+
            Activated on friday

          title: friday
          type: boolean
        saturday:
          description: |+
            Activated on saturdays

          title: saturday
          type: boolean
        sunday:
          description: |+
            Activated on sundays

          title: sunday
          type: boolean
      title: recurrent_days
    PatchAutoReply_recurrent_days:
      description: Recurrent days when auto reply is activated
      properties:
        monday:
          minLength: 1
          type: boolean
        tuesday:
          minLength: 1
          type: boolean
        wednesday:
          minLength: 1
          type: boolean
        thursday:
          minLength: 1
          type: boolean
        friday:
          minLength: 1
          type: boolean
        saturday:
          minLength: 1
          type: boolean
        sunday:
          minLength: 1
          type: boolean
    PatchMailboxPermission_permissions:
      description: Permissions
      properties:
        can_manage_filters:
          description: Manage sieve filters
          type: boolean
        can_manage_security:
          description: Manage security settings
          type: boolean
        can_manage_aliases:
          description: Manage aliases
          type: boolean
        can_manage_redirections:
          description: Manage redirections
          type: boolean
        can_manage_signatures:
          description: Manage signatures
          type: boolean
        can_manage_auto_reply:
          description: Manage auto reply
          type: boolean
        can_change_password:
          description: Can change mailbox password
          type: boolean
        can_configure_mail_folders:
          description: Can configure folders
          type: boolean
    order:
      example:
        waiting_payment: 1
        blocked_order_id:
        - blocked_order_id
        - blocked_order_id
        in_process: 0
      properties:
        waiting_payment:
          example: 1
          title: waiting_payment
          type: integer
        in_process:
          example: 0
          title: in_process
          type: integer
        blocked_order_id:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      title: order
    security_1:
      example:
        remaining_rescue_code: 1
        last_login_at: 5
        yubikey: true
        auth_devices:
        - user_ip: user_ip
          updated_at: 3
          name: name
          last_connexion: 7
          created_at: 9
          id: 2
          device: device
          deleted_at: 2
          user_agent: user_agent
        - user_ip: user_ip
          updated_at: 3
          name: name
          last_connexion: 7
          created_at: 9
          id: 2
          device: device
          deleted_at: 2
          user_agent: user_agent
        sms: true
        otp: true
        sms_phone: sms_phone
        infomaniak_application: true
        date_last_changed_password: 5
        double_auth: true
        double_auth_method: double_auth_method
      properties:
        otp:
          description: One-time password
          title: otp
          type: boolean
        sms:
          title: sms
          type: boolean
        sms_phone:
          title: sms_phone
          type: string
        yubikey:
          title: yubikey
          type: boolean
        infomaniak_application:
          title: infomaniak_application
          type: boolean
        double_auth:
          description: Double auth
          title: double_auth
          type: boolean
        remaining_rescue_code:
          title: remaining_rescue_code
          type: integer
        last_login_at:
          description: Timestamp `User Profile` has been logged
          format: timestamp
          title: last_login_at
          type: integer
        date_last_changed_password:
          format: timestamp
          title: date_last_changed_password
          type: integer
        double_auth_method:
          description: Double auth method
          title: double_auth_method
          type: string
        auth_devices:
          items:
            $ref: '#/components/schemas/Userauthdevice'
          type: array
      title: security
    preferences:
      example:
        country:
          is_enabled: true
          name: SWITZERLAND
          short_name: CH
          id: 203
        security:
          remaining_rescue_code: 1
          last_login_at: 5
          yubikey: true
          auth_devices:
          - user_ip: user_ip
            updated_at: 3
            name: name
            last_connexion: 7
            created_at: 9
            id: 2
            device: device
            deleted_at: 2
            user_agent: user_agent
          - user_ip: user_ip
            updated_at: 3
            name: name
            last_connexion: 7
            created_at: 9
            id: 2
            device: device
            deleted_at: 2
            user_agent: user_agent
          sms: true
          otp: true
          sms_phone: sms_phone
          infomaniak_application: true
          date_last_changed_password: 5
          double_auth: true
          double_auth_method: double_auth_method
        timezone:
          name: Europe/Zurich
          id: 414
          gmt: 01:00
        connection:
          unsuccessful_rate_limit: 4
          successful_notification: true
          unsuccessful_notification: true
          unsuccessful_limit: true
        language:
          name: English
          short_locale: en
          short_name: E
          id: 2
          locale: en_GB
        account: account
      properties:
        security:
          $ref: '#/components/schemas/security_1'
        account:
          title: account
          type: string
        connection:
          $ref: '#/components/schemas/Userconnection'
        language:
          $ref: '#/components/schemas/Language'
        country:
          $ref: '#/components/schemas/Country'
        timezone:
          $ref: '#/components/schemas/Timezone'
      title: preferences
    emails:
      oneOf:
      - items:
          $ref: '#/components/schemas/Useremail'
        title: array
      - items:
          $ref: '#/components/schemas/Useremail_f4611cfe'
        title: array
      title: emails
    PostMetadata_embeds_inner:
      example:
        data: "{}"
        type: image
        url: url
      properties:
        type:
          description: The type of content that is embedded in this point.
          enum:
          - image
          - message_attachment
          - opengraph
          - link
          type: string
        url:
          description: "The URL of the embedded content, if one exists."
          type: string
        data:
          description: |
            Any additional information about the embedded content. Only used at this time to store OpenGraph metadata.
            This field will be null for non-OpenGraph embeds.
          type: object
    encoding_preset_template_streams_inner:
      example:
        audio_bitrate: 64000
        audio_sampling: 48000
      properties:
        audio_bitrate:
          example: 64000
          type: number
        audio_sampling:
          example: 48000
          type: number
    media_manifests_json_data:
      example:
        format: JSON
      properties:
        format:
          example: JSON
          type: string
    media_manifests_json:
      example:
        data:
          format: JSON
        mimetype: application/json
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.json
          type: string
        mimetype:
          example: application/json
          type: string
        data:
          $ref: '#/components/schemas/media_manifests_json_data'
    media_manifests_xml_data:
      example:
        format: XML
      properties:
        format:
          example: XML
          type: string
    media_manifests_xml:
      example:
        data:
          format: XML
        mimetype: application/xml
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.xml
          type: string
        mimetype:
          example: application/xml
          type: string
        data:
          $ref: '#/components/schemas/media_manifests_xml_data'
    media_manifests_v1xml_data:
      example:
        format: XML (v1 compatibility)
      properties:
        format:
          example: XML (v1 compatibility)
          type: string
    media_manifests_v1xml:
      example:
        data:
          format: XML (v1 compatibility)
        mimetype: application/xml
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.v1xml
          type: string
        mimetype:
          example: application/xml
          type: string
        data:
          $ref: '#/components/schemas/media_manifests_v1xml_data'
    media_manifests_yaml_data:
      example:
        format: YAML
      properties:
        format:
          example: YAML
          type: string
    media_manifests_yaml:
      example:
        data:
          format: YAML
        mimetype: text/yaml
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yaml
          type: string
        mimetype:
          example: text/yaml
          type: string
        data:
          $ref: '#/components/schemas/media_manifests_yaml_data'
    media_manifests_yml:
      example:
        mimetype: text/yaml
        ' data':
          format: YAML
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          type: string
        mimetype:
          example: text/yaml
          type: string
        ' data':
          $ref: '#/components/schemas/media_manifests_yaml_data'
    media_playbacks_encodingId_strategy__data:
      example:
        encoding: Copy source
        strategy: Progressive download (Best available)
        key: "null"
      properties:
        encoding:
          example: Copy source
          type: string
        strategy:
          example: Progressive download (Best available)
          type: string
        key:
          example: "null"
          type: string
    media_playbacks_encodingId_strategy:
      example:
        mimetype: video/mp4
        ' data':
          encoding: Copy source
          strategy: Progressive download (Best available)
          key: "null"
        url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
      properties:
        url:
          example: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
          type: string
        mimetype:
          example: video/mp4
          type: string
        ' data':
          $ref: '#/components/schemas/media_playbacks_encodingId_strategy__data'
    media_playbacks_encodingId:
      example:
        strategy:
          mimetype: video/mp4
          ' data':
            encoding: Copy source
            strategy: Progressive download (Best available)
            key: "null"
          url: https://api.vod2.infomaniak.com/res/media/1jhvl2uqa5v8a.yml
      properties:
        strategy:
          $ref: '#/components/schemas/media_playbacks_encodingId_strategy'
    maintenance:
      example:
        technical: true
        infomaniak: true
        superuser: true
      properties:
        technical:
          title: technical
          type: boolean
        superuser:
          title: superuser
          type: boolean
        infomaniak:
          title: infomaniak
          type: boolean
      title: maintenance
    locked:
      example:
        infomaniak: true
        superuser: true
      properties:
        superuser:
          title: superuser
          type: boolean
        infomaniak:
          title: infomaniak
          type: boolean
      title: locked
    config:
      description: |2+

      properties:
        count:
          description: |+
            count

          title: count
          type: integer
        last_error:
          description: |+
            last_error

          title: last_error
          type: integer
        last_error_code:
          description: |+
            last_error_code

          title: last_error_code
          type: integer
      title: config
    users:
      description: All users identifiers by types
      properties:
        account:
          description: Users identifiers of the account group
          items:
            description: Users identifiers of the account group
            title: account
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        drive:
          description: Users identifiers of the kDrive
          items:
            description: Users identifiers of the kDrive
            title: drive
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        external:
          description: Users identifiers of the drive (only externals users)
          items:
            description: Users identifiers of the drive (only externals users)
            title: external
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        internal:
          description: Users identifiers of the drive (only internal users)
          items:
            description: Users identifiers of the drive (only internal users)
            title: internal
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
      title: users
    teams:
      description: All teams identifiers by types
      properties:
        account:
          description: Teams identifiers of the account group
          items:
            description: Teams identifiers of the account group
            title: account
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
        drive:
          description: Teams identifiers of the kDrive
          items:
            description: Teams identifiers of the kDrive
            title: drive
            type: integer
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: true
          type: array
      title: teams
    k_suite:
      description: The kSuite in which the kDrive is
      properties:
        id:
          description: Id of the kSuite
          title: Unique identifier
          type: integer
        name:
          description: Name of the kSuite
          title: name
          type: string
        pack_id:
          description: Id of the type of kSuite
          title: pack_id
          type: integer
        pack:
          description: Name of the type of kSuite
          title: pack
          type: string
      title: k_suite
    capabilities:
      properties:
        use_versioning:
          description: Is versioning activated
          title: use_versioning
          type: boolean
        use_upload_compression:
          description: During upload compression is allowed
          title: use_upload_compression
          type: boolean
        use_team_space:
          description: Shared/Team directory feature
          title: use_team_space
          type: boolean
        can_add_user:
          description: Can add an user in the kDrive
          title: can_add_user
          type: boolean
        can_see_stats:
          description: Can see stats of the kDrive
          title: can_see_stats
          type: boolean
        can_upgrade_to_ksuite:
          description: Can the drive be upgraded to a kSuite
          title: can_upgrade_to_ksuite
          type: boolean
        can_rewind:
          description: Can rewind the kDrive
          title: can_rewind
          type: boolean
      title: capabilities
    ai_scan:
      properties:
        is_enabled:
          description: Is AI scanning enabled
          title: is_enabled
          type: boolean
        has_approved:
          description: Is AI scanning approved
          title: has_approved
          type: boolean
          nullable: true
        has_approved_ai_categories:
          description: Are AI categories approved
          title: has_approved_ai_categories
          type: boolean
          nullable: true
        updated_at:
          description: When AI scanning was approved at
          format: timestamp
          title: updated_at
          type: integer
          nullable: true
      title: ai_scan
    versioning:
      properties:
        max_numbers:
          description: Number of versions that can be kept if active
          title: max_numbers
          type: integer
        max_days:
          description: Maximum number of days versions are kept
          title: max_days
          type: integer
      title: versioning
    settings:
      description: Settings of the current users for this kDrive
      properties:
        ai_scan:
          $ref: '#/components/schemas/ai_scan'
        versioning:
          $ref: '#/components/schemas/versioning'
        max_keep_deleted_user:
          description: Max time the files of an user deleted is kept
          title: max_keep_deleted_user
          type: string
      title: settings
    preferences_1:
      properties:
        color:
          description: Default color for kDrive
          title: color
          type: string
        hide:
          description: Is the drive hidden for the current user
          title: hide
          type: boolean
        default:
          description: "The default drive chosen by the user, if none the first drive\
            \ in the list should be considered the default. There should only be one\
            \ default drive."
          title: default
          type: boolean
        default_page:
          description: User's default landing page
          title: default_page
          type: string
      title: preferences
    total:
      properties:
        to_execute:
          title: to_execute
          type: integer
        files_found:
          title: files_found
          type: integer
        to_move:
          title: to_move
          type: integer
        to_rename:
          title: to_rename
          type: integer
        to_update:
          title: to_update
          type: integer
        to_archive:
          title: to_archive
          type: integer
        not_handled_versions:
          title: not_handled_versions
          type: integer
        not_handled_files:
          title: not_handled_files
          type: integer
      title: total
    team:
      properties:
        to_execute:
          title: to_execute
          type: integer
        files_found:
          title: files_found
          type: integer
        to_move:
          title: to_move
          type: integer
        to_rename:
          title: to_rename
          type: integer
        to_update:
          title: to_update
          type: integer
        to_archive:
          title: to_archive
          type: integer
        not_handled_versions:
          title: not_handled_versions
          type: integer
        not_handled_files:
          title: not_handled_files
          type: integer
      title: team
    me:
      properties:
        to_execute:
          title: to_execute
          type: integer
        files_found:
          title: files_found
          type: integer
        to_move:
          title: to_move
          type: integer
        to_rename:
          title: to_rename
          type: integer
        to_update:
          title: to_update
          type: integer
        to_archive:
          title: to_archive
          type: integer
        not_handled_versions:
          title: not_handled_versions
          type: integer
        not_handled_files:
          title: not_handled_files
          type: integer
      title: me
    sanitizer:
      description: "Sanitizer resume, returned only when the rewind has done the sanitizing\
        \ process"
      properties:
        sanitized:
          title: sanitized
          type: integer
        total:
          $ref: '#/components/schemas/total'
        team:
          $ref: '#/components/schemas/team'
        me:
          $ref: '#/components/schemas/me'
        others:
          title: others
          type: string
      title: sanitizer
    total_1:
      properties:
        executed:
          title: executed
          type: integer
        archived:
          title: archived
          type: integer
        conflicted:
          title: conflicted
          type: integer
      title: total
    team_1:
      properties:
        executed:
          title: executed
          type: integer
        archived:
          title: archived
          type: integer
        conflicted:
          title: conflicted
          type: integer
        directory_id:
          title: directory_id
          type: integer
          nullable: true
        directory_archive_id:
          title: directory_archive_id
          type: integer
          nullable: true
        directory_conflict_id:
          title: directory_conflict_id
          type: integer
          nullable: true
      title: team
    me_1:
      properties:
        executed:
          title: executed
          type: integer
        archived:
          title: archived
          type: integer
        conflicted:
          title: conflicted
          type: integer
        directory_id:
          title: directory_id
          type: integer
          nullable: true
        directory_archive_id:
          title: directory_archive_id
          type: integer
          nullable: true
        directory_conflict_id:
          title: directory_conflict_id
          type: integer
          nullable: true
      title: me
    summary:
      description: "Rewind resume, returned only when the rewind is finished"
      properties:
        total:
          $ref: '#/components/schemas/total_1'
        team:
          $ref: '#/components/schemas/team_1'
        me:
          $ref: '#/components/schemas/me_1'
        others:
          items:
            $ref: '#/components/schemas/CountFile'
          type: array
      title: summary
    users_1:
      description: Get users number limit of the Pricing Plan
      properties:
        base:
          description: Included/Allowed number of user
          title: base
          type: integer
        min:
          description: Minimum number of additional user
          title: min
          type: integer
          nullable: true
        max:
          description: Maximum number of additional user
          title: max
          type: integer
          nullable: true
      title: users
    storage:
      description: Get the limits of the pricing plan
      properties:
        giga:
          description: Included/Allowed storage (in gigabyte)
          title: giga
          type: integer
        min:
          description: Minimum number of additional storage (in gigabyte)
          title: min
          type: integer
          nullable: true
        max:
          description: Maximum number of additional storage (in gigabyte)
          title: max
          type: integer
          nullable: true
      title: storage
    limits:
      description: Get the users and storage limits of the Pricing Plan
      properties:
        users:
          $ref: '#/components/schemas/users_1'
        storage:
          $ref: '#/components/schemas/storage'
      title: limits
    capabilities_1:
      description: Locked/Unlocked features of the Pricing Plan
      properties:
        use_vault:
          description: Vault directory feature
          title: use_vault
          type: boolean
        use_manage_right:
          description: Can use additional manage right
          title: use_manage_right
          type: boolean
        can_set_trash_duration:
          description: Can change the max days in trash
          title: can_set_trash_duration
          type: boolean
        use_dropbox:
          description: Dropboxes feature
          title: use_dropbox
          type: boolean
        can_rewind:
          description: Can access/use restoration feature
          title: can_rewind
          type: boolean
        use_folder_custom_color:
          description: Can set a custom color on a folder
          title: use_folder_custom_color
          type: boolean
        can_access_dashboard:
          description: Can access the managing dashboard
          title: can_access_dashboard
          type: boolean
        can_set_sharelink_password:
          description: Public link can expire
          title: can_set_sharelink_password
          type: boolean
        can_set_sharelink_expiration:
          description: Public link can be protected by password
          title: can_set_sharelink_expiration
          type: boolean
        can_set_sharelink_custom_url:
          description: Public link can have custom theme
          title: can_set_sharelink_custom_url
          type: boolean
      title: capabilities
    activity:
      description: Activities information about the Directory
      properties:
        last_accessed_at:
          description: Timestamp of the last user access of the Directory
          format: timestamp
          title: last_accessed_at
          type: integer
      title: activity
    capabilities_2:
      description: Directory rights
      properties:
        can_use_favorite:
          description: Right to set file as favorite
          title: can_use_favorite
          type: boolean
        can_become_sharelink:
          description: Right to share file by link (share_link)
          title: can_become_sharelink
          type: boolean
        can_use_team:
          description: Right to use and give team access
          title: can_use_team
          type: boolean
        can_show:
          description: Right to see Directory information
          title: can_show
          type: boolean
        can_read:
          description: Right to read Directory content
          title: can_read
          type: boolean
        can_write:
          description: Right to write Directory
          title: can_write
          type: boolean
        can_share:
          description: Right to share Directory or manage access to Directory
          title: can_share
          type: boolean
        can_leave:
          description: Right to leave shared Directory
          title: can_leave
          type: boolean
        can_delete:
          description: Right to delete Directory
          title: can_delete
          type: boolean
        can_rename:
          description: Right to rename Directory
          title: can_rename
          type: boolean
        can_move:
          description: Right to move Directory
          title: can_move
          type: boolean
        can_create_directory:
          description: Right to add new child directory
          title: can_create_directory
          type: boolean
        can_create_file:
          description: Right to add new child file
          title: can_create_file
          type: boolean
        can_upload:
          description: Right to upload a child file
          title: can_upload
          type: boolean
        can_move_into:
          description: right to move directory
          title: can_move_into
          type: boolean
        can_become_dropbox:
          description: Right to use convert directory into collaborative directory
          title: can_become_dropbox
          type: boolean
      title: capabilities
    lock:
      description: "When Directory is locked, locked information"
      properties:
        locked_at:
          description: "When Directory is locked, locked timestamp"
          format: timestamp
          title: locked_at
          type: integer
          nullable: true
        unlocked_at:
          description: "When Directory is locked, automatic lock release timestamp"
          format: timestamp
          title: unlocked_at
          type: integer
          nullable: true
        description:
          description: "When Directory is locked, locked reason"
          example: onlyoffice
          title: description
          type: string
          nullable: true
        token:
          description: "When Directory is locked, locked token"
          example: onlyoffice:123456
          title: token
          type: string
          nullable: true
      title: lock
    capabilities_3:
      properties:
        can_edit:
          description: Does share link allow editing
          title: can_edit
          type: boolean
        can_see_stats:
          description: Does share link allow stats to be seen
          title: can_see_stats
          type: boolean
        can_see_info:
          description: Does share link allow info to be seen
          title: can_see_info
          type: boolean
        can_download:
          description: Does share link allow download
          title: can_download
          type: boolean
        can_comment:
          description: Does share link allow adding comments
          title: can_comment
          type: boolean
      title: capabilities
    capabilities_4:
      properties:
        has_password:
          description: A password was defined to access to the dropbox
          title: has_password
          type: boolean
        has_notification:
          description: "Notification was enabled on the dropbox, email we be send\
            \ to dropbox owner when someone upload a file"
          title: has_notification
          type: boolean
        has_validity:
          description: "A validity period was set to the dropbox, after the date define\
            \ the dropbox is not accessible"
          title: has_validity
          type: boolean
        has_size_limit:
          description: "A limit size was defined to the dropbox, after the date define\
            \ the dropbox is not accessible"
          title: has_size_limit
          type: boolean
        validity:
          title: validity
          type: string
        size:
          title: size
          type: string
      title: capabilities
    security_2:
      properties:
        assistant_at:
          description: The last date the assistant was used
          format: timestamp
          title: assistant_at
          type: integer
          nullable: true
        double_auth_method:
          description: Double authentication method used to log in
          title: double_auth_method
          type: string
        has_double_auth:
          description: Whether the `Drive User` has double authentication enabled
          title: has_double_auth
          type: boolean
        last_password_at:
          description: Last time `Drive User`'s password was changed
          format: timestamp
          title: last_password_at
          type: integer
          nullable: true
        score:
          description: Security score of the `Drive User`
          title: score
          type: integer
        has_valid_email:
          description: Whether the `Drive User` has a valid email
          title: has_valid_email
          type: integer
        has_recovery_email:
          description: Whether the `Drive User` has a recovery email
          title: has_recovery_email
          type: boolean
        has_valid_phone:
          description: Whether the `Drive User` has a valid phone number
          title: has_valid_phone
          type: boolean
        has_private_folder:
          description: Whether the `Drive User` has a private folder
          title: has_private_folder
          type: boolean
      title: security
    preference:
      properties:
        color:
          description: Default color for drive
          title: color
          type: string
        hide:
          description: Is the drive hidden for the current user
          title: hide
          type: boolean
        default:
          description: "The default drive chosen by the user, if none the first drive\
            \ in the list should be considered the default. There should only be one\
            \ default drive."
          title: default
          type: boolean
        default_page:
          description: User's default landing page
          title: default_page
          type: string
      title: preference
    capabilities_5:
      properties:
        can_create_team_directory:
          title: can_create_team_directory
          type: boolean
        can_set_trash_duration:
          title: can_set_trash_duration
          type: boolean
        has_technical_permission:
          description: Whether the `Drive User` has the permission to perform technical
            operations
          title: has_technical_permission
          type: boolean
      title: capabilities
    activity_1:
      description: Activities information about the File
      properties:
        last_accessed_at:
          description: Timestamp of the last user access of the File
          format: timestamp
          title: last_accessed_at
          type: integer
      title: activity
    capabilities_6:
      description: Capabilities of File
      properties:
        can_use_favorite:
          description: Right to set file as favorite
          title: can_use_favorite
          type: boolean
        can_become_sharelink:
          description: Right to share file by link (share_link)
          title: can_become_sharelink
          type: boolean
        can_use_team:
          description: Right to use and give team access
          title: can_use_team
          type: boolean
        can_show:
          description: Right to see File information
          title: can_show
          type: boolean
        can_read:
          description: Right to read File content
          title: can_read
          type: boolean
        can_write:
          description: Right to write File
          title: can_write
          type: boolean
        can_share:
          description: Right to share File or manage access to File
          title: can_share
          type: boolean
        can_leave:
          description: Right to leave shared File
          title: can_leave
          type: boolean
        can_delete:
          description: Right to delete File
          title: can_delete
          type: boolean
        can_rename:
          description: Right to rename File
          title: can_rename
          type: boolean
        can_move:
          description: Right to move File
          title: can_move
          type: boolean
      title: capabilities
    lock_1:
      description: "When File is locked, locked information"
      properties:
        locked_at:
          description: "When File is locked, locked timestamp"
          format: timestamp
          title: locked_at
          type: integer
          nullable: true
        unlocked_at:
          description: "When File is locked, automatic lock release timestamp"
          format: timestamp
          title: unlocked_at
          type: integer
          nullable: true
        description:
          description: "When File is locked, locked reason"
          example: onlyoffice
          title: description
          type: string
          nullable: true
        token:
          description: "When File is locked, locked token"
          example: onlyoffice:123456
          title: token
          type: string
          nullable: true
      title: lock
    supported_by:
      description: "List of app of where the file can be opened.<note><strong>kmail</strong>:\
        \ File is handled by the kmail app webview.</note><note><strong>onlyoffice</strong>:\
        \ File is handled by only-office route.</note><note><strong>thumbnail</strong>:\
        \ File is handled by preview and thumbnail route.</note>"
      enum:
      - kmail
      - onlyoffice
      - thumbnail
      example: kmail
      oneOf:
      - title: array
      - title: string
        type: string
      title: supported_by
    version:
      description: Information when file has multi-version
      properties:
        is_multiple:
          description: File has multi-version
          title: is_multiple
          type: boolean
        number:
          description: Get number of version
          title: number
          type: integer
        total_size:
          description: Size of the file with all version  (byte unit)
          title: total_size
          type: integer
          nullable: true
        keep_forever:
          description: "True if the current version of this file should be kept forever,\
            \ otherwise false or empty"
          title: keep_forever
          type: boolean
      title: version
    conversion_capabilities:
      description: The available ways to convert the file
      properties:
        when_downloading:
          description: Whether the file may be converted upon download
          title: when_downloading
          type: boolean
        download_extensions:
          description: "Available extensions to which the file may be converted upon\
            \ download, if possible"
          items:
            description: "Available extensions to which the file may be converted\
              \ upon download, if possible"
            title: download_extensions
            type: string
            ref: false
            primitive: false
            collection: false
            one-of: false
            optional: false
            conditional: false
          type: array
        when_onlyoffice_opening:
          description: Whether the file may be converted for live edition with OnlyOffice
          title: when_onlyoffice_opening
          type: boolean
        onlyoffice_extension:
          description: "Available extension to which the file may be converted by\
            \ OnlyOffice, if possible"
          example: docx
          title: onlyoffice_extension
          type: string
          nullable: true
      title: conversion_capabilities
    data:
      description: X coordinate data points
      oneOf:
      - title: "timestamp[]"
      - title: "string[]"
      title: data
    target:
      description: Path of the activity
      example: /directory/file
      oneOf:
      - title: string
        type: string
      - title: int
        type: integer
      title: target
    target_at:
      description: Target date of the activity
      oneOf:
      - format: timestamp
        title: timestamp
        type: integer
      - title: int
        type: integer
      title: target_at
    Unique_identifier:
      description: "The email,team or user identifier filled in the parameters"
      example: "1000"
      oneOf:
      - title: int
        type: integer
      - title: string
        type: string
      title: Unique identifier
    access:
      description: "The invitation send, null if access was not found"
      oneOf:
      - $ref: '#/components/schemas/ExternInvitationFileAccess'
      - $ref: '#/components/schemas/TeamFileAccess'
      - $ref: '#/components/schemas/Userfileaccess'
      title: access
      nullable: true
    source:
      description: Information about where the Activity was generated
      properties:
        name:
          description: Name of the source
          enum:
          - api
          - job
          - webdav
          title: name
          type: string
        ip:
          description: Ip of the source
          title: ip
          type: string
        user_agent:
          description: User Agent of the source
          title: user_agent
          type: string
        device:
          description: Device of the source
          title: device
          type: string
        location:
          description: Location of the source
          title: location
          type: string
      title: source
    file:
      description: "Associated File or Directory, null is element was deleted"
      oneOf:
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/Directory'
      title: file
      nullable: true
    entity:
      description: Object the Activity is about
      properties:
        id:
          description: Id of the object
          title: Unique identifier
          type: integer
        type:
          description: Type of the object
          title: type
          type: integer
      title: entity
    SuccessResponseData_data:
      anyOf:
      - type: string
      - type: number
      - type: integer
      - type: boolean
      - {}
      - type: object
      description: Effective response
      nullable: false
    ApiError_error:
      properties:
        code:
          type: string
        description:
          type: string
        context:
          type: object
  securitySchemes:
    oAuth:
      flows:
        authorizationCode:
          authorizationUrl: https://login.infomaniak.com/authorize
          scopes: {}
          tokenUrl: https://login.infomaniak.com/token
      type: oauth2
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

