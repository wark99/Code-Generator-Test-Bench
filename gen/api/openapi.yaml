openapi: 3.1.0
info:
  description: Communication API
  title: Communication API
  version: 1.0.2
servers:
- description: Local development server
  url: http://localhost:8000/v1
tags:
- description: Authentication API for retrieving tokens
  name: Authentication API
- description: Manage Communication Gateways
  name: Communication Gateway API
- description: Manage Communication Schedules
  name: Schedule API
- description: Manage Communication Preferences
  name: Preferences API
- description: Query previous communications and status
  name: History API
paths:
  /auth:
    post:
      operationId: getJwtToken
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Scopes to request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJwtToken_200_response'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      summary: Get a JWT token for the given scopes
      tags:
      - Authentication API
      x-content-type: application/json
      x-accepts: application/json
  /gateway:
    get:
      description: requires gateway:read scope
      operationId: getCommunicationGateways
      parameters:
      - description: The page number to retrieve
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: The friendly name to search for
        explode: true
        in: query
        name: friendlyName
        required: false
        schema:
          type: string
        style: form
      - description: The endpointUrl to search for
        explode: true
        in: query
        name: endpointUrl
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCommunicationGateways_200_response'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - gateway:read
      summary: Get all communication gateways
      tags:
      - Communication Gateway API
      x-accepts: application/json
    post:
      description: requires gateway:write scope
      operationId: createCommunicationGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommunicationGateway'
        description: Communication gateway to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationGateway'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - bearerAuth:
        - gateway:write
      summary: Create a communication gateway
      tags:
      - Communication Gateway API
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: requires gateway:write scope
      operationId: updateCommunicationGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationGateway'
        description: Communication gateway to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationGateway'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - bearerAuth:
        - gateway:write
      summary: Update a communication gateway
      tags:
      - Communication Gateway API
      x-content-type: application/json
      x-accepts: application/json
  /gateway/{gatewayId}:
    delete:
      description: requires gateway:delete scope
      operationId: deleteCommunicationGateway
      parameters:
      - description: ID of the communication gateway to delete
        explode: false
        in: path
        name: gatewayId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - gateway:delete
      summary: Delete a communication gateway
      tags:
      - Communication Gateway API
      x-accepts: application/json
    get:
      description: requires gateway:read scope
      operationId: getCommunicationGatewayById
      parameters:
      - description: ID of the communication gateway to return
        explode: false
        in: path
        name: gatewayId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - bearerAuth:
        - gateway:read
      summary: Get gateway by ID
      tags:
      - Communication Gateway API
      x-accepts: application/json
  /schedule:
    get:
      description: requires schedule:read scope
      operationId: getCommunicationSchedules
      parameters:
      - description: The page number to retrieve
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCommunicationSchedules_200_response'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - schedule:read
      summary: Get all communication schedules
      tags:
      - Schedule API
      x-accepts: application/json
    post:
      description: requires schedule:write scope
      operationId: createCommunicationSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommunicationSchedule'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationSchedule'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "409":
          description: Conflict - already exists
      security:
      - bearerAuth:
        - schedule:write
      summary: Create a new communication schedule
      tags:
      - Schedule API
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: requires schedule:write scope
      operationId: updateCommunicationSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCommunicationSchedule_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationSchedule'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict - already exists
      security:
      - bearerAuth:
        - schedule:write
      summary: Updates an existing communication schedule
      tags:
      - Schedule API
      x-content-type: application/json
      x-accepts: application/json
  /schedule/{scheduleId}:
    delete:
      description: requires schedule:delete scope
      operationId: deleteCommunicationSchedule
      parameters:
      - explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - schedule:delete
      summary: Delete an existing communication schedule by id
      tags:
      - Schedule API
      x-accepts: application/json
    get:
      description: requires schedule:read scope
      operationId: getCommunicationSchedulesByScheduleId
      parameters:
      - description: The schedules to retrieve by scheduleId
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationSchedule'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - bearerAuth:
        - schedule:read
      summary: Get communication schedule by scheduleId
      tags:
      - Schedule API
      x-accepts: application/json
  /schedule/gateway/{gatewayId}:
    delete:
      description: requires schedule:delete scope
      operationId: deleteCommunicationSchedulesByGatewayId
      parameters:
      - description: The schedules to retrieve by gatewayId
        explode: false
        in: path
        name: gatewayId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - schedule:delete
      summary: Delete all communication schedules by gatewayId
      tags:
      - Schedule API
      x-accepts: application/json
    get:
      description: requires schedule:read scope
      operationId: getCommunicationSchedulesByGatewayId
      parameters:
      - description: The page number to retrieve
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: The schedules to retrieve by gatewayId
        explode: false
        in: path
        name: gatewayId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCommunicationSchedules_200_response'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - bearerAuth:
        - schedule:read
      summary: Get all communication schedules by gatewayId
      tags:
      - Schedule API
      x-accepts: application/json
    put:
      description: requires schedule:write scope
      operationId: updateCommunicationSchedulesByGatewayId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCommunicationSchedulesByGatewayId_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationSchedule'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict - already exists
      security:
      - bearerAuth:
        - schedule:write
      summary: Updates all communication schedules by gatewayId to the given request
        body
      tags:
      - Schedule API
      x-content-type: application/json
      x-accepts: application/json
  /schedule/user/{userId}:
    delete:
      description: requires schedule:delete scope
      operationId: deleteCommunicationSchedulesByUserId
      parameters:
      - description: The schedules to retrieve by userId
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - schedule:delete
      summary: Delete all communication schedules by userId
      tags:
      - Schedule API
      x-accepts: application/json
    get:
      description: requires schedule:read scope
      operationId: getCommunicationSchedulesByUserId
      parameters:
      - description: The page number to retrieve
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: The schedules to retrieve by userId
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCommunicationSchedules_200_response'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - bearerAuth:
        - schedule:read
      summary: Get all communication schedules by userId
      tags:
      - Schedule API
      x-accepts: application/json
    put:
      description: requires schedule:write scope
      operationId: updateCommunicationSchedulesByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCommunicationSchedulesByUserId_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationSchedule'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict - already exists
      security:
      - bearerAuth:
        - schedule:write
      summary: Updates all communication schedules by userId to the given request
        body
      tags:
      - Schedule API
      x-content-type: application/json
      x-accepts: application/json
  /preferences/retry-policy:
    get:
      description: requires preferences:read scope
      operationId: getRetryPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryPolicy'
          description: OK
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - preferences:read
      summary: Get the retry policy for communications
      tags:
      - Preferences API
      x-accepts: application/json
    put:
      description: requires preferences:write scope
      operationId: updateRetryPolicy
      requestBody:
        $ref: '#/components/schemas/RetryPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryPolicy'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - preferences:write
      summary: Update the retry policy for communications
      tags:
      - Preferences API
      x-accepts: application/json
  /history:
    get:
      description: requires history:read scope
      operationId: getPreviousCommunications
      parameters:
      - description: The userId
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The gatewayId
        explode: true
        in: query
        name: gatewayId
        required: false
        schema:
          type: integer
        style: form
      - description: The integer representing the temporal status
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The page number to retrieve
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPreviousCommunications_200_response'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - history:read
      summary: "Get the previous communication workflows by status, userId or gatewayId"
      tags:
      - History API
      x-accepts: application/json
  /history/total:
    get:
      description: requires history:read scope
      operationId: getCommunicationWorkflowTotalByQuery
      parameters:
      - description: The userId
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The gatewayId
        explode: true
        in: query
        name: gatewayId
        required: false
        schema:
          type: integer
        style: form
      - description: The integer ENUM value representing the temporal status
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCommunicationWorkflowTotalByQuery_200_response'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - history:read
      summary: Get the total number of workflows that match the query
      tags:
      - History API
      x-accepts: application/json
  /history/workflowId/{workflowId}:
    get:
      description: requires history:read scope
      operationId: getCommunicationWorkflowById
      parameters:
      - description: The workflowId to search for
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationWorkflow'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorised
        "403":
          description: Forbidden
      security:
      - bearerAuth:
        - history:read
      summary: Get the workflow by its Id
      tags:
      - History API
      x-accepts: application/json
components:
  requestBodies:
    RetryPolicy:
      description: Retry policy for communications
  schemas:
    CommunicationWorkflow:
      example:
        start_time:
          seconds: 6.027456183070403
          nanos: 1.4658129805029452
        end_time:
          seconds: 6.027456183070403
          nanos: 1.4658129805029452
        id: id
        type: type
        taskQueue: taskQueue
        status: 5.962133916683182
      properties:
        id:
          description: ID of workflow
          type: string
        type:
          description: Workflow type
          type: string
        start_time:
          $ref: '#/components/schemas/Timestamp'
        end_time:
          $ref: '#/components/schemas/Timestamp'
        taskQueue:
          type: string
        status:
          default: 0
          description: ENUM value of the temporal status
          type: number
    RetryPolicy:
      description: Retry policy for communications
      example:
        startToCloseTimeout: PT0S
        maximumAttempts: PT0S
        initialInterval: PT1S
        maximumInterval: PT100S
        backoffCoefficient: 0.8008281904610115
      properties:
        maximumAttempts:
          default: PT0S
          description: "0 means unlimited, otherwise the maximum number of attempts"
          format: duration
          type: string
        backoffCoefficient:
          default: 2.0
          description: The backoff coefficient to use for exponential backoff. 1.0
            means no backoff and always use the initial interval value.
          type: number
        initialInterval:
          default: PT1S
          description: Amount of time before the first retry. Subsequent retries will
            also be at this interval if backoff coefficient is set to > 1.0
          format: duration
          type: string
        maximumInterval:
          default: PT100S
          description: Maximum amount of time between retries. The interval will not
            exceed this value to stop waiting exponentially due to the backoff coefficient.
          format: duration
          type: string
        startToCloseTimeout:
          default: PT0S
          description: Maximum amount of time for the workflow to be scheduled and
            to complete. Set to "PT0S" to disable
          format: duration
          type: string
    CreateCommunicationGateway:
      example:
        endpointUrl: https://openapi-generator.tech
        description: description
        friendlyName: friendlyName
      properties:
        endpointUrl:
          format: uri
          type: string
        friendlyName:
          type: string
        description:
          type: string
      required:
      - endpointUrl
      - friendlyName
    CommunicationGateway:
      allOf:
      - properties:
          id:
            format: uuid
            type: string
      - $ref: '#/components/schemas/CreateCommunicationGateway'
      example:
        endpointUrl: https://openapi-generator.tech
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendlyName: friendlyName
      required:
      - endpointUrl
      - friendlyName
    CreateCommunicationSchedule:
      example:
        paused: false
        calendarSpec:
          seconds:
          - start: 6
            end: 1
            step: 5
          - start: 6
            end: 1
            step: 5
          dayOfWeek: ""
          hour: ""
          month:
            start: 6
            end: 1
            step: 5
          dayOfMonth: ""
          year: ""
          minutes: ""
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        gatewayId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        gatewayId:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        calendarSpec:
          $ref: '#/components/schemas/CalendarSpec'
        paused:
          default: false
          type: boolean
      required:
      - calendarSpec
      - gatewayId
      - paused
      - userId
    CommunicationSchedule:
      allOf:
      - properties:
          id:
            format: uuid
            type: string
          recentActions:
            items:
              $ref: '#/components/schemas/ScheduleActionResult'
            type: array
          nextActionTimes:
            items:
              format: uuid
              type: string
            type: array
      - $ref: '#/components/schemas/CreateCommunicationSchedule'
      example:
        recentActions:
        - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scheduledAt: 2000-01-23T04:56:07.000+00:00
        - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scheduledAt: 2000-01-23T04:56:07.000+00:00
        paused: false
        calendarSpec:
          seconds:
          - start: 6
            end: 1
            step: 5
          - start: 6
            end: 1
            step: 5
          dayOfWeek: ""
          hour: ""
          month:
            start: 6
            end: 1
            step: 5
          dayOfMonth: ""
          year: ""
          minutes: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nextActionTimes:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        gatewayId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      required:
      - calendarSpec
      - gatewayId
      - userId
    CalendarSpec:
      example:
        seconds:
        - start: 6
          end: 1
          step: 5
        - start: 6
          end: 1
          step: 5
        dayOfWeek: ""
        hour: ""
        month:
          start: 6
          end: 1
          step: 5
        dayOfMonth: ""
        year: ""
        minutes: ""
      properties:
        seconds:
          items:
            $ref: '#/components/schemas/ScheduledRange'
          type: array
        minutes:
          items:
            $ref: '#/components/schemas/ScheduledRange'
        hour:
          items:
            $ref: '#/components/schemas/ScheduledRange'
        dayOfMonth:
          items:
            $ref: '#/components/schemas/ScheduledRange'
        month:
          $ref: '#/components/schemas/ScheduledRange'
        year:
          items:
            $ref: '#/components/schemas/ScheduledRange'
        dayOfWeek:
          items:
            $ref: '#/components/schemas/ScheduledRange'
    ScheduledRange:
      example:
        start: 6
        end: 1
        step: 5
      properties:
        start:
          type: integer
        end:
          type: integer
        step:
          type: integer
    ScheduleActionResult:
      example:
        runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduledAt: 2000-01-23T04:56:07.000+00:00
      properties:
        scheduledAt:
          format: date-time
          type: string
        runId:
          format: uuid
          type: string
    Timestamp:
      example:
        seconds: 6.027456183070403
        nanos: 1.4658129805029452
      properties:
        seconds:
          type: number
        nanos:
          type: number
    Pageable:
      example:
        pageNumber: 6
        pageSize: 1
      properties:
        pageNumber:
          type: integer
        pageSize:
          type: integer
    getJwtToken_200_response:
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        token:
          type: string
        expires:
          format: date-time
          type: string
    getCommunicationGateways_200_response:
      example:
        total: 0
        pageable:
          pageNumber: 6
          pageSize: 1
        content:
        - endpointUrl: https://openapi-generator.tech
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendlyName: friendlyName
        - endpointUrl: https://openapi-generator.tech
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendlyName: friendlyName
      properties:
        total:
          type: integer
        content:
          items:
            $ref: '#/components/schemas/CommunicationGateway'
          type: array
        pageable:
          $ref: '#/components/schemas/Pageable'
    getCommunicationSchedules_200_response:
      example:
        total: 0
        pageable:
          pageNumber: 6
          pageSize: 1
        content:
        - recentActions:
          - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            scheduledAt: 2000-01-23T04:56:07.000+00:00
          - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            scheduledAt: 2000-01-23T04:56:07.000+00:00
          paused: false
          calendarSpec:
            seconds:
            - start: 6
              end: 1
              step: 5
            - start: 6
              end: 1
              step: 5
            dayOfWeek: ""
            hour: ""
            month:
              start: 6
              end: 1
              step: 5
            dayOfMonth: ""
            year: ""
            minutes: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nextActionTimes:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          gatewayId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - recentActions:
          - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            scheduledAt: 2000-01-23T04:56:07.000+00:00
          - runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            scheduledAt: 2000-01-23T04:56:07.000+00:00
          paused: false
          calendarSpec:
            seconds:
            - start: 6
              end: 1
              step: 5
            - start: 6
              end: 1
              step: 5
            dayOfWeek: ""
            hour: ""
            month:
              start: 6
              end: 1
              step: 5
            dayOfMonth: ""
            year: ""
            minutes: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nextActionTimes:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          gatewayId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        total:
          type: integer
        content:
          items:
            $ref: '#/components/schemas/CommunicationSchedule'
          type: array
        pageable:
          $ref: '#/components/schemas/Pageable'
    updateCommunicationSchedule_request:
      allOf:
      - properties:
          id:
            format: uuid
            type: string
      - $ref: '#/components/schemas/CreateCommunicationSchedule'
    updateCommunicationSchedulesByGatewayId_request_anyOf:
      description: Gateway Id
      properties:
        gatewayId:
          format: uuid
          type: string
    updateCommunicationSchedulesByGatewayId_request_anyOf_1:
      description: Paused
      properties:
        paused:
          type: boolean
    updateCommunicationSchedulesByGatewayId_request:
      anyOf:
      - $ref: '#/components/schemas/updateCommunicationSchedulesByGatewayId_request_anyOf'
      - $ref: '#/components/schemas/updateCommunicationSchedulesByGatewayId_request_anyOf_1'
      - $ref: '#/components/schemas/CalendarSpec'
    updateCommunicationSchedulesByUserId_request_anyOf:
      description: user Id
      properties:
        gatewayId:
          format: uuid
          type: string
    updateCommunicationSchedulesByUserId_request:
      anyOf:
      - $ref: '#/components/schemas/updateCommunicationSchedulesByUserId_request_anyOf'
      - $ref: '#/components/schemas/updateCommunicationSchedulesByGatewayId_request_anyOf_1'
      - $ref: '#/components/schemas/CalendarSpec'
    getPreviousCommunications_200_response:
      example:
        total: 0.8008281904610115
        pageable:
          pageNumber: 6
          pageSize: 1
        content:
        - start_time:
            seconds: 6.027456183070403
            nanos: 1.4658129805029452
          end_time:
            seconds: 6.027456183070403
            nanos: 1.4658129805029452
          id: id
          type: type
          taskQueue: taskQueue
          status: 5.962133916683182
        - start_time:
            seconds: 6.027456183070403
            nanos: 1.4658129805029452
          end_time:
            seconds: 6.027456183070403
            nanos: 1.4658129805029452
          id: id
          type: type
          taskQueue: taskQueue
          status: 5.962133916683182
      properties:
        total:
          type: number
        content:
          items:
            $ref: '#/components/schemas/CommunicationWorkflow'
          type: array
        pageable:
          $ref: '#/components/schemas/Pageable'
    getCommunicationWorkflowTotalByQuery_200_response:
      example:
        total: 0.8008281904610115
      properties:
        total:
          type: number
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

