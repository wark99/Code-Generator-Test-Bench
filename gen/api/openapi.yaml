openapi: 3.1.0
info:
  description: It is blog website where you can socially connect to share your views
    on a common platform.
  title: Story Sage
  version: 1.0.1
servers:
- url: /
paths:
  /blog/create:
    post:
      operationId: create_blog_blog_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlogRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Blog
      x-content-type: application/json
      x-accepts: application/json
  /blog/user/{user_id}:
    get:
      operationId: get_user_post_blog_user__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get User Post
      x-accepts: application/json
  /blog/:
    get:
      operationId: get_all_blog_blog__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get All Blog
      x-accepts: application/json
  /blog/delete/{blog_id}:
    delete:
      operationId: delete_user_post_blog_delete__blog_id__delete
      parameters:
      - explode: false
        in: path
        name: blog_id
        required: true
        schema:
          title: Blog Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete User Post
      x-accepts: application/json
  /blog/update/{user_id}:
    put:
      operationId: update_blog_blog_update__user_id__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlogRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Blog
      x-content-type: application/json
      x-accepts: application/json
  /blog/comments/{blog_id}:
    get:
      operationId: get_blog_comments_blog_comments__blog_id__get
      parameters:
      - explode: false
        in: path
        name: blog_id
        required: true
        schema:
          title: Blog Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Blog Comments
      x-accepts: application/json
  /blog/comment/{blog_id}:
    patch:
      operationId: add_comment_blog_comment__blog_id__patch
      parameters:
      - explode: false
        in: path
        name: blog_id
        required: true
        schema:
          title: Blog Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Add Comment
      x-content-type: application/json
      x-accepts: application/json
  /user/signup:
    post:
      operationId: user_signup_user_signup_post
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserSchema'
              title: User
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User Signup
      x-content-type: application/json
      x-accepts: application/json
  /user/login:
    post:
      operationId: user_login_user_login_post
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserLoginSchema'
              title: User
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User Login
      x-content-type: application/json
      x-accepts: application/json
  /user/:
    get:
      operationId: get_all_user_user__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get All User
      x-accepts: application/json
components:
  schemas:
    CreateBlogRequest:
      example:
        image:
          url: Url
          fileId: Fileid
        description: description
        title: title
        userId: userId
      properties:
        userId:
          title: Userid
          type: string
        title:
          title: Title
          type: string
        image:
          $ref: '#/components/schemas/ImageSchema'
        description:
          title: Description
          type: string
      required:
      - description
      - image
      - title
      - userId
      title: CreateBlogRequest
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    ImageSchema:
      example:
        url: Url
        fileId: Fileid
      properties:
        url:
          $ref: '#/components/schemas/Url'
        fileId:
          $ref: '#/components/schemas/Fileid'
      required:
      - fileId
      - url
      title: ImageSchema
    UpdateBlogRequest:
      example:
        image:
          url: Url
          fileId: Fileid
        description: description
        title: title
      properties:
        image:
          $ref: '#/components/schemas/ImageSchema'
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
      required:
      - description
      - image
      - title
      title: UpdateBlogRequest
    UpdateCommentRequest:
      example:
        name: name
        comment: comment
      properties:
        name:
          title: Name
          type: string
        comment:
          title: Comment
          type: string
      required:
      - comment
      - name
      title: UpdateCommentRequest
    UserLoginSchema:
      example:
        password: password
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          title: Password
          type: string
      title: UserLoginSchema
    UserSchema:
      example:
        image:
          url: Url
          fileId: Fileid
        password: password
        name: name
        about: About
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        image:
          $ref: '#/components/schemas/UserSchema_image'
        about:
          $ref: '#/components/schemas/About'
      required:
      - about
      - email
      - image
      - name
      - password
      title: UserSchema
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Url:
      anyOf:
      - type: string
      - nullable: true
      title: Url
    Fileid:
      anyOf:
      - type: string
      - nullable: true
      title: Fileid
    UserSchema_image:
      anyOf:
      - $ref: '#/components/schemas/ImageSchema'
      - nullable: true
    About:
      anyOf:
      - type: string
      - nullable: true
      title: About
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer

