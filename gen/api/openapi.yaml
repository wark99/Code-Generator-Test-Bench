openapi: 3.1.0
info:
  description: "# **RCS Biz Center API Version 1.1.12** \n\n본 문서는 기업과 대행사에 제공되는 RCS\
    \ Biz Center Open API의 규격을 기술합니다.\n\nOpen API의 사용을 위해서는 사전에 RCS Biz Center에 기업\
    /대행사 등록이 필요합니다.\n\n추가적인 보안을 위해 API를 연동하는 Client의 IP 를 RCS Biz Center에 사전 등록하여야\
    \ 합니다.  RCS Biz Center 홈페이지 \\\"내 계정관리\\\"에서 등록하실 수 있습니다.\n\nOpen API를 연동하고자 하\
    는 경우 사전 개발 단계에서는 검수(STG) 환경에 별도 가입 및 승인 후 이용할 수 있습니다.  \n검수(STG) 환경에서 개발이 완료된\
    \ 이후 상용(PRD) 연동을 하는 것을 권고합니다.      \n\n1. 검수(STG) - https://api-qa.rcsbizcenter.com/api/1.1\n\
    2. 상용(PRD) - https://api.rcsbizcenter.com/api/1.1  \n\nRCS Biz Center Open API는\
    \ 이통 3사가 정의한 정책에 의거하여 정보를 제공합니다. 따라서 일부 정보 제공상의 제약이 있을 수 있습니다.  \n\n**Open API\
    \ 문의처 : tech@rcsbizcenter.com**\n\n`참고문서`  \n  + **[버튼 Action 목록 Link (2023.12.14)](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**\n\
    \  + **[RCS A2P(단방향) 포맷 리스트 (24.02.07 공유버전)](https://file-qa.rcsbizcenter.com/240319170900114/TS-240319170900114-segSiw_1.xlsx)**\
    \   \n  + **[RCS 양방향 포맷 리스트 (22.10.28 공유 버전)](https://file-qa.rcsbizcenter.com/221027084901492/TS-221027084901492-mIfP_1.xlsx)**\
    \  \n\n\n`수정 이력`  \n**1.1.12 주요 변경사항**  \n\n+ RBC 기본 아이콘 및 브랜드 로고 신규 API 추가 [신\
    규로고 API](#/logo)\n  - 브랜드 로고는 승인 후 사용 가능\n  - GET /logo/common : RBC 제공 기본 아이콘\
    \ 조회\n  - GET /brand/{brandId}/logo : 브랜드 로고 조회\n  - POST /brand/{brandId}/logo\
    \ : 브랜드 로고 등록\n  - GET /brand/{brandId}/logo/{fileId} : 브랜드 로고 단건 조회\n  - PUT\
    \ /brand/{brandId}/logo/{fileId} : 브랜드 로고 수정\n  - DELETE /brand/{brandId}/logo/{fileId}\
    \ : 브랜드 로고 단건 삭제\n  - PUT /brand/{brandId}/logo/{fileId}/cancel : 브랜드 로고 승인요청\
    \ 취소\n+ 템플릿 또는 메시지 발송 시, 변수 mTitleMedia, itemMedia 에 사용할 이미지는 브랜드 로고(logo) 등록\
    \ 후 발급된 fileId를 지정해야 합니다.  \n+ 브랜드 로고 추가에 따른 Webhook Noti 추가\n  - notiType logo\
    \ 추가 [스키마](#/NotiLogo)\n  \n    \n**1.1.11 주요 변경사항**  \n\n+ 고객반응 메시지/대화방메뉴 통계\
    \ 제공 필드 추가\n  - GET /statQuery/message/{brandId} 응답 결과 내 messagebaseId 필드 추가 >\
    \ 관련 스키마 [MessageStatData](#/MessageStatData)\n  - GET /statQuery/messageButton/{brandId}\
    \ 응답 결과 내 reactionType, cardNum, buttonNum 필드 추가 > 관련 스키마 [MessageButtonStatData](#/MessageButtonStatData)\n\
    \  - GET /statQuery/persistentMenu/{brandId} 응답 결과 내 자동응답메시지인 경우, messagebaseId,\
    \ reactionType, cardNum, buttonNum 필드 추가 > 관련 스키마 [PersistentMenuStatData.menuList.subList](#/MenuStatData)\n\
    \  - 동영상 스트리밍 actionType 구분 iframeplayB 추가\n  \n  \n**1.1.10 주요 변경사항**  \n\n+\
    \ 계정, 권한 구분 용어 변경\n  - 기업관리자 : 마스터\n  - 기업담당자 : 매니저\n  - 브랜드 관리자 : 대표운영자\n  -\
    \ 브랜드 부관리자 : 운영자\n  - 브랜드 대행사 : 운영자\n+ 브랜드 생성 권한 확대 : 마스터, 매니저 계정\n+ 브랜드 수정 권한\
    \ 확대 : 브랜드 대표운영자(마스터), 브랜드 운영자(마스터, 매니저, 대행사)\n+ 브랜드 영업정보, 브랜드 컬러 등 추가 설정 사항 \
    \ \n+ 대화방 안심마크 표시 여부 설정\n+ 양방향 대화방 전환, 양방향 대행사 설정 없는 botId 대화방 등록\n+ 양방향 대행사 설\
    정 없는 대화방메뉴 등록/수정\n+ 텍스트 템플릿 타이틀 선택형의 아이콘 이미지 변경  \n  - 아이콘 이미지 변경으로 formattedString\
    \ 상의 fileId 변경  \n+ 자동응답메시지 간 연결(버튼, 칩리스트)\n+ 자동응답메시지, 대화방메뉴 브랜드 소식 연결\n+ 대행사\
    \ 대상 레이아웃 기능\n+ 신규 템플릿 상품 지원(규격 변경 사항 없음)\n+ 신규 또는 기능 추가/변경된 API\n  - POST /corp/brand\n\
    \  - PUT /corp/brand/{brandId}\n  - PUT /corp/{personId}/brand/{brandId}\n  -\
    \ GET /corp/{personId}/brand/{brandId}\n  - DELETE /corp/{personId}/brand/{brandId}\n\
    \  - DELETE /corp/{personId}/brand/{brandId}/privilege  \n  - POST /brand/{brandId}/chatbot\
    \ \n  - GET /brand/{brandId}/chatbot\n  - PUT /brand/{brandId}/chatbot/{chatbotId}\n\
    \  - GET /brand/{brandId}/chatbot/{chatbotId}\n  - GET /brand/{brandId}/bidirectional/chatbot\
    \ \n  - POST /brand/{brandId}/bidirectional/chatbot \n  - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId}\
    \ \n  - GET /brand/{brandId}/bidirectional/chatbot/{chatbotId}\n  - DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}\
    \  \n  - POST /brand/{brandId}/autoreplymsg        \n  - PUT /brand/{brandId}/autoreplymsg/{autoReplyMsgId}\
    \        \n  - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu\n\
    \  - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu\n \
    \ - (신규) PUT /corp/brand/{brandId}/cancel\n  - (신규) PUT /corp/{personId}/brand/{brandId}/cancel\n\
    \  - (신규) PUT /agency/{agencyId}/brand/{brandId}\n  - (신규) GET /messagebase/messagebaseform/{messagebaseformId}/logo\n\
    \  - (신규) GET /baselayout/component        \n  - (신규) GET /baselayout/sample \
    \       \n  - (신규) GET /baselayout/sample/{sampleLayoutId}        \n  - (신규) GET\
    \ /baselayout/product/rule        \n  - (신규) GET /brand/{brandId}/layout     \
    \   \n  - (신규) POST /brand/{brandId}/layout    \n  - (신규) GET /brand/{brandId}/layout/{layoutId}\
    \        \n  - (신규) PUT /brand/{brandId}/layout/{layoutId}        \n  - (신규) DELETE\
    \ /brand/{brandId}/layout/{layoutId}  \n\n\n**1.1.9 추가 변경사항(2023.03.16 변경 사항)**\n\
    + 대화방 승인 취소 API 추가\n  - PUT /brand/{brandId}/chatbot/{chatbotId}/cancel\n+ 대화방\
    명 변경 시 운영자 검수 승인 필요\n  - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId}\
    \ 발신번호 양방향 대화방 전환 시 대화방명 수정된 경우\n  - POST /brand/{brandId}/bidirectional/chatbot/{chatbotId}\
    \ 대화방ID  양방향 대화방의 대화방명\n  - PUT /brand/{brandId}/chatbot/{chatbotId} 발신번호 대화방명\
    \ 수정 시\n  - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId} 양방향 대화방 대화방\
    명 수정 시\n+ 브랜드 채널 노출/검색 허용에 따른 대화방(chatbot) API display value 허용값 변경\n  - '11'\
    \ : 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시\n  - '10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시\n  - '01'\
    \ : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시\n  - '00' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 비전시\n\n\n**1.1.9\
    \ 추가 변경사항**\n+ 메시지 보안성 강화 agencyKey API 추가\n  - GET /agency/{agencyId}/agencyKey\n\
    \  - RBC 홈페이지에서 agencyKey 재발급시 Webhook noti 전송(notiType agencyKey)\n+ 양방향 대화방\
    \ ID 정책변경에 따라 service 구분이 'CHAT'인 대화방ID(chatbotId)의 포맷 규칙이 변경\n  - POST /brand/{brandId}/bidirectional/chatbot\n\
    \  - GET /usableQuery/chatbotId/{chatbotId}\n+ 브랜드 등록 시 브랜드 홈 기본 탭 선택 항목 추가\n\
    \  - POST /corp/brand\n  - properties 추가: initTab, initFeedItem \n  - 추가 항목은 별\
    도 지정하지 않더라도 기본값으로 처리됨\n\n**1.1.8 추가 변경사항(2022.12.08 상용 배포)**\n+ 대화방ID 등록 가능여부\
    \ 조회 API 추가\n  - GET /usableQuery/chatbotId/{chatbotId}\n  - 대화방ID 등록 전 등록 가능여\
    부 조회\n  \n\n**1.1.8 변경사항**\n+ 이미지 템플릿 추가에 따른 신규 템플릿 등록 API 추가\n  - 이미지 템플릿 및 모\
    든 템플릿 등록 시 사용 가능 ( api/1.1 지원, api/1.0 미지원 )\n  - 이미지 템플릿용 파일 등록 POST /brand/{brandId}/v2/messagebase/file\n\
    \  - 이미지 템플릿용 파일 상세 조회 GET /brand/{brandId}/v2/messagebase/file/{fileId}\n  -\
    \ 템플릿 등록(v2) POST /brand/{brandId}/v2/messagebase\n  - 템플릿 수정(v2) POST /brand/{brandId}/v2/messagebase/{messagebaseId}\n\
    + 타이틀 자유형(구 테마 강조형A) Description 우측 타이틀 허용\n  - 타이틀 자유형의 타이틀 영역 중 우측 타이틀 영역에 Cell\
    \ 템플릿과 마찬가지로 본문과 버튼에 설정한 변수부 중 1개를 설정할 수 있도록 변경\n\n**1.1.7 변경사항**\n+ 타이틀 자유형(구\
    \ 테마 강조형A) 템플릿 messagebaseform 조회 지원\n  - 타이틀 자유형(구 테마 강조형A) Description, Cell\n\
    + 타이틀 자유형(구 테마 강조형A) 템플릿 messagebase 조회/등록/수정/삭제 지원\n  - 타이틀 자유형(구 테마 강조형A) 등록\
    \ JSON 예시 추가(POST /brand/{brandId}/messagebase)\n  - 타이틀 자유형(구 테마 강조형A) 조회 시 버\
    튼 정보 표시 방식 변경(신규 openrichcard 규격)\n+ 대행사용 API 추가\n  - RBC 등록된 사업자 확인 GET /agency/{agencyId}/corp/{corpRegNum}\n\
    \  - RBC 에 등록된 발신번호 확인 GET /agency/{agencyId}/corp/{corpRegNum}/chatbot/{chatbotId}\n\
    + 고객반응통계 조회 API 수정\n  - 대화방 메뉴 자동응답메시지 설정 정책 변경에 따른 Data Object 구조 변경\n  - 대상\
    \ API GET /statQuery/persistentMenu/{brandId}\n+ 양방향 대화방 메뉴 설정 정책 변경 반영\n  - 하\
    위 메뉴 자동응답메시지 설정 허용\n  - 액션 버튼 설정 dialerAction 만 가능(지정 불가 액션 버튼 - urlAction, mapAction,\
    \ calendarAction, clipboardAction, composeAction, localBrowserAction)\n\n**1.1.6\
    \ 변경사항**\n+ 고객반응통계 조회 API 추가\n  - 캠페인 발송/읽음확인 통계 GET /statQuery/message/{brandId}\n\
    \  - 캠페인 메시지 버튼 클릭 통계 GET /statQuery/messageButton/{brandId}\n  - 대화방 메뉴 클릭 통계\
    \ GET /statQuery/persistentMenu/{brandId}\n+ 신규 공통템플릿 정보 추가\n  - 규격 상의 변경점은 없으\
    며 추가된 공통템플릿 정보 데이터 제공되도록 변경함\n  - GET /messagebase/common\n  - GET /messagebase/common/{messagebaseId}\n\
    \n**1.1.5 변경사항**\n+ [주의] 신규 추가된 API는 /api/1.1 만 지원됨\n+ Brand 정보 내 브랜드 소식 URL 정\
    보 추가 \n  - botFeedUrl (브랜드 소식 등록 시 자동 추가)\n+ 양방향 대화방 API 추가\n  - POST, GET /brand/{brandId}/bidirectional/chatbot\n\
    \  - PUT, DELETE, GET /brand/{brandId}/bidirectional/chatbot/{chatbotId}\n  -\
    \ POST, PUT, DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu\n\
    \  - POST, GET /brand/{brandId}/autoreplymsg\n  - PUT, DELETE, GET /brand/{brandId}/autoreplymsg/{autoReplyMsgId}\n\
    \  - POST /brand/{brandId}/autoreplymsg/file\n  - GET /brand/{brandId}/autoreplymsg/file/{fileId}\n\
    + 양방향 대화방 중계사 연동 Webhook 추가\n  - POST /{webhookUrl}/bidirectional\n  - PUT /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu/pause\n\
    + 대행사 Noti webhook NotiType 추가\n  - 자동응답메시지(notiType: autoreplymsg)\n\n\n**1.1.4\
    \ 추가 변경사항**\n+ 템플릿 승인 후 수정 허용\n  - 기승인 템플릿의 내용 수정 허용(수정 시 재승인 필요)\n  - 수정 허용에\
    \ 따른 approvalResult 제공 값 변경\n+ 템플릿 승인요청 취소 API 추가\n  - PUT /brand/{brandId}/messagebase/{messagebaseId}/cancel\n\
    \  - approvalResult가 승인대기, 승인대기(수정) 인 경우만 취소 가능\n+ 템플릿 승인상태 구분 추가 : 검수시작, 검수시작\
    (수정), 승인대기(수정), 반려(수정), 검수완료(수정) \n+ 대화방 승인상태 구분 추가 : 검수시작 \n+ 브랜드 승인상태 구분 추가\
    \ : 검수시작, 검수시작(수정) \n+ 스타일(Cell) 템플릿 formattedString 구성 시 textStyle 허용값 중 italic\
    \ 제외(예, bold|italic 설정 시 bold 로 처리됨)\n\n**1.1.3 추가 변경사항**\n+ 브랜드 상세조회 제공 항목 추가\
    (2021/02/25)\n  - fileName - 업로드 된 파일의 이름\n  - approvalReason - 검수 시 반려 사유\n+\
    \ 브랜드 상세조회/수정/삭제 API 추가\n  - PUT /corp/brand/{brand}\n  - GET /corp/{personId}/brand/{brandId}\n\
    \  - PUT /corp/{personId}/brand/{brandId}\n  - DELETE /corp/{personId}/brand/{brandId}\n\
    \  - POST /corp/{personId}/brand/{brandId}/privilege\n  - PUT /corp/{personId}/brand/{brandId}/privilege\n\
    \  - GET /corp/{personId}/brand/{brandId}/privilege\n  - DELETE /corp/{personId}/brand/{brandId}/privilege/{id}\n\
    + 기업/대행사/규격서 버전별 API 분류(TAG) \n+ 템플릿 API 등 설명 내용 보완\n+ **2020년 12월 3일 기준 브랜드 등\
    록 항목 menus 중 app 은 이통사 정책에 의거 한시적으로 등록이 불가하며 app 등록 시 error 리턴됩니다.**\n+ 브랜드 상태\
    \ 구분 추가 : 승인대기(수정), 반려(수정), 검수완료(수정)\n\n**1.1.2 변경사항**\n+ 브랜드 등록 API 추가\n  - 기\
    업관리자 계정으로만 등록 가능\n  - 브랜드 등록 시 입력되는 카테고리1, 2 정보 조회 API 추가 \n  - GET /corp/brand/categories\n\
    \  - POST /corp/brand\n\n**1.1.1 변경사항**\n+ GuideInfo 내 리치카드용 세부 정보 추가\n  - GET\
    \ /messagebase/common/{messagebaseId} 조회 상세 정보 중 guideInfo.detailInfo 추가\n  -\
    \ 리치카드를 이용하여 발송된 RCS 메시지가 단말에서 표시될 경우 잘림 없이 표시 가능한 조건 정보 제공을 위하여 추가\n\n**1.1.0\
    \ 변경사항**\n+ API 1.0, 1.1 버전 병행 지원 - 이후 일부 개선 사항은 API 1.0에 제공이 불가 할 수 있으므로 1.1\
    \ 버전 사용 권장\n+ ContractInfo.regDate, ContractInfo.modDate Key Name 변경 \\\n-> ContractInfo.registerDate,\
    \ ContractInfo.updateDate\n+ 각 API별 Response Body의 result key의 type을 array로 통일\
    하였으며 변경된 API는 다음과 같음\n  - GET /agency/{agencyId}/brand/{brandId}\n  - GET /messagebase/common\n\
    \  - GET /messagebase/common/{messagebaseId}\n  - GET /messagebase/messagebaseform/{messagebaseformId}\n\
    \  - POST /brand/{brandId}/messagebase\n  - GET /brand/{brandId}/messagebase\n\
    \  - GET /brand/{brandId}/messagebase/{messagebaseId}\n  - PUT /brand/{brandId}/messagebase/{messagebaseId}\n\
    \  - DELETE /brand/{brandId}/messagebase/{messagebaseId}\n  - POST /brand/{brandId}/chatbot\n\
    \  - GET /brand/{brandId}/chatbot\n  - GET /brand/{brandId}/chatbot/{chatbotId}\n\
    \  - PUT /brand/{brandId}/chatbot/{chatbotId}\n  - DELETE /brand/{brandId}/chatbot/{chatbotId}\n\
    \n**2020.07.07 수정사항**\n+ BrandInfo 내 제공 정보 추가\n  - brandKey : API를 이용하여 브랜드Key\
    \ 확인 가능\n  - chatbotDate : 브랜드 하위 대화방 데이터 최종 변경 일시 정보\n  - messagebaseDate : 브\
    랜드 하위 템플릿 최종 변경 일시 정보\n+ Get List API Pagination 기능 추가\n  - Query 파라미터를 이용하여 전\
    체를 페이징하여 조회하도록 제공\n  - offset : 조회 기준 ROW (default = 0)\n  - limit : offset 으로\
    부터 조회되는 건수 제한(default = 100, max = 1000)\n  - Response body 내 pagination, links\
    \ 제공\n+ messagebaseform 조회시 bizCondition 정보가 코드로 표시되는 문제 수정\n\n**2020.05.19 수정\
    사항**\n+ 대행사-브랜드 계약 정보인 ContractInfo 내에 key 추가\n  - GET /agency/{agencyId}/contract\
    \ \n  - GET /agency/{agencyId}/corp/{corpRegNum}/brand\n  - 추가 Key : brandDate,\
    \ chatbotDate, messagebaseDate\n  - 브랜드, 해당 브랜드 하위 대화방/템플릿 데이터의 최종 변경 일시 정보를 제\
    공하여\n  상세 조회 이전에 변경사항 여부를 판단할 수 있도록 개선\n  \n**2020.03.12 수정사항**\n+ date-time 예\
    시 추가\n\n**2020.02.19 수정사항**\n+ ParamInfo 내 isMandatory 추가\n\n**2020.02.11 수정사항\
    **\n+ GET /brand/{brandId}/chatbot Chatbots 를 chatbots로 수정\n\n**2020.02.07 수정사\
    항**\n+ Widget, WidgetPolicy 설명 추가\n+ API 문의처 정보 추가\n+ POST /brand/{brandId}/chatbot\
    \ 시 rcsReply 필수 입력 추가(2/13 상용 적용)\n\n**2020.01.06 수정사항**\n+ API 서버 구분 추가\n\n**2019.12.17\
    \ 수정사항**\n+ X-RCS-Brandkey의 format 변경 (uuid -> random key)\n\n**2019.11.25 수정사\
    항**\n+ 템플릿, 발신번호(대화방) UPDATE, DELETE Method 처리가능 상태 설명 추가\n+ 전체 200 OK 응답 형식 수\
    정\n+ chatbot UPDATE시 profileImage 삭제\n+ chatbot UPDATE시 통신서비스이용증명원 업로드 추가\n\n\
    **2019.11.19 수정사항**\n+ messagebaseform의 bizService 오타 수정\n+ BrandInfo.mediaUrl\
    \ 추가\n+ ChabotDetail.mediaUrl 추가\n\n**2019.11.05 수정사항**\n+ RegChatbotInfo.smsMo\
    \ 삭제\n+ ChatbotDetail 수정\n  - smsMo 삭제, rcsReply 추가\n  - rcsReply default 1(RCS\
    \ Postback 수신)\n\n**2019.10.29 수정사항**\n+ {webhookUrl} NotiTemplate.brandId 추가\n\
    + chatbot Attributes 설명 수정\n\n**2019.10.23 수정사항**\n+ {webhookUrl} 설명 내용 수정\n \
    \ - Brand Key 제공 내용 삭제\n  - nType을 notiType으로 명칭 변경\n+ webhook notification에 대\
    한 대행사 return code 추가\n+ messagebase, messagebaseform 의 formattedString type\n\
    \  string에서 object로 변경\n+ messagebaseform의 bizCondition type을 string 에서 array로\
    \ 변경\n+ messagebaseform 상세 조회시 양식 유형 이미지 링크 제공\n  - MessagebaseFormInfo.mediaUrl\
    \ 추가\n  \n**2019.10.02 RCS Biz Center API 1.0.1 배포**\n"
  title: RCS Biz Center API 규격
  version: 1.1.12-oas3.1
servers:
- description: RCS Biz Center API for Staging
  url: https://api-qa.rcsbizcenter.com/api/1.1
- description: RCS Biz Center API for Production
  url: https://api.rcsbizcenter.com/api/1.1
security:
- jwtAuth: []
tags:
- description: "인증용 토큰 발급/갱신 API 목록입니다.  \n마스터, 매니저, 대행사의 계정 ID와 API KEY로 인증 발급됩니다\
    . 발급된 token은 모든 API의 header에 삽입되어야 합니다.\n"
  name: token
- description: "기업에서 사용 가능한 API 목록입니다.  \n마스터(구 기업관리자) 또는 매니저(구 기업담당자) ID로 이용 가능하며\
    \ Path Parameter에 personId가 존재하는 API는 token 내 ID와 personId가 동일해야 합니다.\n"
  name: corporation
- description: "대행사에서 사용 가능한 API 목록입니다.  \n대행사 ID로 이용 가능하며 Path paramter에 agencyId가\
    \ 존재하는 API는 token 내 ID와 agencyId가 동일해야 합니다.\n"
  name: agency
- description: |
    메시지 (공통포맷, 템플릿) 관리용 API 목록입니다.
  name: messagebase
- description: |
    대화방(발신번호) 관리용 API 목록입니다.
  name: chatbot
- description: |
    자동응답메시지 관리용 API 목록입니다.
  name: autoreplymsg
- description: |
    대화방메뉴, 양방향 대화방 관리용 API 목록입니다.
  name: bidirectional
- description: |
    고객반응 통계 조회용 API 목록입니다.
  name: stat
- description: |
    사용 편의를 위해 제공되는 API 목록입니다.
  name: usable
- description: |
    대행사에 제공되는 레이아웃 관리용 API 목록입니다.
  name: layout
- description: |
    상징성을 갖는 300*300px 크기의 이미지를 관리하는 API 목록 입니다.
    로고 이미지는 레이아웃 또는 신규 공통 포맷을 이용한 메시지 발송 시, 템플릿 등록 시 사용 가능합니다.
  name: logo
- description: |
    RBC openAPI v1.1.12에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.12
- description: |
    RBC openAPI v1.1.10에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.10
- description: |
    RBC openAPI v1.1.9에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.9
- description: |
    RBC openAPI v1.1.8에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.8
- description: |
    RBC openAPI v1.1.7에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.7
- description: |
    RBC openAPI v1.1.6에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.6
- description: |
    RBC openAPI v1.1.5에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.5
- description: |
    RBC openAPI v1.1.4에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.4
- description: |
    RBC openAPI v1.1.3에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.3
- description: |
    RBC openAPI v1.1.2에 신규 추가된 API 목록입니다.
  name: SINCE v1.1.2
- description: |
    RBC openAPI v1.0부터 제공되는 API 목록입니다.
  name: SINCE v1.0
paths:
  /token:
    post:
      description: "Access 토큰을 발급 요청합니다.  \nRCS Biz Center 웹에서 가입 시 등록한 ID(마스터 또는\
        \ 매니저, 대행사)와 계정 가입 시 자동 생성되는 API Key(RCS Biz Center 내 계정관리에서 확인)를 이용하여 토큰\
        \ 발급을 요청합니다.  \nresponse로 전달되는 expiresIn 시간이 초과하면 토큰을 새로 발급 받아야 합니다.     \
        \     \n\n  + **API 사용 Client의 IP는 RCS Biz Center에서 등록하여야 합니다.  \n    Client\
        \ IP 등록은 내 계정관리에서 ID별 최대 10개까지 등록할 수 있습니다.**          \n  + **계정 권한 : 마스터\
        , 매니저, 대행사**\n"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_token_post_request'
        description: |
          required: true
      responses:
        "200":
          $ref: '#/components/responses/SuccessForToken'
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        Access 토큰을 발급 요청합니다.
      tags:
      - SINCE v1.0
      - token
      x-content-type: application/json
      x-accepts: application/json
  /corp/{personId}/brand:
    get:
      description: "마스터 또는 매니저 계정으로 운영 권한이 있는 브랜드 목록을 조회합니다.  \n\n  + **계정 권한 : 마스\
        터, 매니저**\n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: "브랜드 대표운영자 또는 운영자의 계정(마스터, 매니저) ID 입니다."
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        마스터 또는 매니저 계정으로 운영 권한이 있는 브랜드 목록을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      x-accepts: application/json
  /corp/{personId}/brand/{brandId}:
    delete:
      description: "브랜드를 삭제합니다.  \n브랜드 삭제를 위해서는 토큰 발급계정과 personId가 동일해야 하며 brandId에\
        \ 대한 브랜드 대표운영자 권한이 있어야 합니다.  \n승인을 받지 않은 '반려', '저장' 상태의 브랜드는 즉시 삭제 가능합니다.\
        \  \n**승인된 브랜드의 경우 등록된 발신번호, 템플릿을 먼저 삭제한 후 브랜드를 삭제해야 처리됩니다.**  \n\n  + **계\
        정 권한 : 마스터**  \n  + **브랜드 권한 : 대표운영자**  \n  + **삭제 가능 상태 : 승인, 반려, 저장**\n"
      parameters:
      - description: 브랜드 대표운영자 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__delete_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드를 삭제합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-accepts: application/json
    get:
      description: "관리 중인 브랜드의 상세 정보를 조회합니다.  \n\n  + **계정 권한 : 마스터, 매니저**  \n  +\
        \ **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__get_200_response'
          description: |
            정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 상세 정보를 조회합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-accepts: application/json
    put:
      description: "현재 운영 중인 브랜드 정보를 수정 합니다.   \n브랜드 대표운영자 또는 운영자 권한이 있어야 수정이 가능합니\
        다.  \n**브랜드명** 또는 **프로필 이미지**가 수정되면 다시 승인을 받아야 합니다.  \n이외 정보 수정은 별도의 승인 과정\
        \ 없이 업데이트 됩니다.  \n수정된 데이터가 이통 3사로 전송되는 과정에서 전송이 지연되거나 장애로 인해 이통 3사 모두 전송이\
        \ 완료되지 못한 경우,   브랜드 정보 조회 데이터와 단말에서 표시되는 브랜드 홈 정보가 상이할 수 있습니다.  \n\n  + **계\
        정 권한 : 마스터, 매니저**  \n  + **브랜드 권한 : 대표운영자, 운영자**  \n  + **수정 가능 상태 : 승인, 반\
        려(수정승인)**  \n"
      parameters:
      - description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_corp__personId__brand__brandId__put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__put_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        현재 운영 중인 브랜드 정보를 수정 합니다. 브랜드명, 프로필 이미지가 수정되면 다시 승인을 받아야 합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-content-type: multipart/form-data
      x-accepts: application/json
  /corp/{personId}/brand/{brandId}/cancel:
    put:
      description: "승인대기 중인 브랜드의 승인요청을 취소합니다.  \n브랜드 대표운영자 또는 운영자 권한이 있어야 승인요청 취소가\
        \ 가능합니다.  \n검수가 시작된 브랜드는 승인취소가 불가 합니다.  \n\n  + **계정 권한 : 마스터, 매니저**  \n \
        \ + **브랜드 권한 : 대표운영자, 운영자**  \n  + **가능 상태 : 승인대기**  \n"
      parameters:
      - description: 브랜드 대표운영자 또는 운영자의 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__cancel_put_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: "승인대기 중인 브랜드의 승인요청을 취소합니다.  \n"
      tags:
      - SINCE v1.1.10
      - corporation
      x-accepts: application/json
  /corp/{personId}/brand/{brandId}/privilege:
    get:
      description: "브랜드에 등록된 운영 권한 정보를 조회합니다. 브랜드에 등록된 브랜드 대표운영자, 운영자, 권한 지정 대행사 정\
        보를 제공합니다.  \n\n  + **계정 권한: 마스터, 매니저**\n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: 브랜드 대표운영자 또는 운영자 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 운영 권한 정보를 조회합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-accepts: application/json
    post:
      description: "브랜드 대표운영자가 브랜드 내 운영자(기업의 마스터/매니저, 대행사) 권한을 부여 합니다.  \n\n  + **계\
        정 권한 : 마스터**\n  + **브랜드 권한 : 브랜드 대표운영자**\n"
      parameters:
      - description: 브랜드 대표운영자의 계정 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_post_request'
        description: "+ privilegeType이 SubManager 인 경우, 소속된 기업 내 다른 마스터, 매니저 계정을 운\
          영자로 지정할 수 있습니다.  \n+ privilegeType이 Agency 인 경우, 별도의 RCS 발송 계약을 맺은 대행사를\
          \ 운영자로 지정합니다.  \n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 대표운영자가 브랜드 내 운영자(기업의 마스터/매니저, 대행사) 권한을 부여 합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "브랜드 대표운영자 권한을 지정된 마스터에게 위임합니다.  \n브랜드 대표운영자 변경 시 위임전 대표운영자는 운영\
        자로 변경됩니다.  \n\n  + **계정 권한 : 마스터**  \n  + **브랜드 권한 : 브랜드 대표운영자**\n"
      parameters:
      - description: 브랜드 대표운영자 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_put_request'
        description: "- privilegeType이 Manager 만 허용되며 지정한 마스터 ID를 대표운영자로 설정합니다. \n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 대표운영자 권한을 위임합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-content-type: application/json
      x-accepts: application/json
  /corp/{personId}/brand/{brandId}/privilege/{id}:
    delete:
      description: "브랜드 운영자(마스터, 매니저), 운영자(대행사) 권한 중 지정한 대상을 삭제합니다.  \n대행사가 양방향 대행\
        사인 경우, 권한 삭제 시 대행사가 연결된 양방향 대화방의 연결을 해지합니다.  \n브랜드 대표운영자는 삭제할 수 없으며 브랜드 대표\
        운영자를 변경하고자 할 경우 PUT 메서드를 사용하여야 합니다.\n\n  + **계정 권한 : 마스터**\n  + **브랜드 권한:\
        \ 브랜드 대표운영자**\n"
      parameters:
      - description: 브랜드 대표운영자 ID 입니다.
        explode: false
        in: path
        name: personId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "브랜드 운영자(마스터, 매니저) 또는 운영자(대행사) ID 입니다."
        explode: false
        in: path
        name: id
        required: true
        schema:
          maximum: 13
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__privilege_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 운영자 권한 중 지정한 대상을 삭제합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-accepts: application/json
  /corp/brand/categories:
    get:
      description: "RCS Biz Center에서 브랜드를 등록할 때 필수 요구되는 카테고리(categoryId, categoryName),\
        \ 하위 카테고리(subCategoryId, subCategoryName)에 해당하는 카테고리 목록을 조회합니다.  \n조회된 카테고\
        리, 하위 카테고리 를 이용하여 브랜드 등록 시 지정합니다.  \n\n  + **계정 권한 : 마스터, 매니저**\n  + **브랜드\
        \ 권한 : 브랜드 대표운영자**\n  \n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp_brand_categories_get_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: "브랜드 등록 시 사용 가능한 카테고리 목록을 조회합니다. \n"
      tags:
      - SINCE v1.1.2
      - corporation
      x-accepts: application/json
  /corp/brand:
    post:
      description: "마스터, 매니저 계정을 이용하여 신규 브랜드 등록 승인을 요청합니다.(매니저 계정도 브랜드 등록이 가능하도록 권\
        한이 변경되었습니다.)  \n또한 필수 항목이었던 발신번호는 옵션으로 변경되었습니다.   따라서 발신번호를 함께 등록하는 경우에만 발\
        신번호에 대한 '통신서비스 가입증명원'을 함께 등록하면 됩니다.    \n브랜드를 등록한 계정은 브랜드의 대표운영자로 설정되며, 매니\
        저 권한으로 등록한 브랜드는 마스터 권한 승급을 받아야 승인을 받을 수 있습니다.    \n\n  + **계정 권한 : 마스터, 매니\
        저**  \n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_corp_brand_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp_brand_post_200_response'
          description: |
            정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        마스터, 매니저 계정을 이용하여 신규 브랜드 등록 승인을 요청합니다.
      tags:
      - SINCE v1.1.2
      - corporation
      x-content-type: multipart/form-data
      x-accepts: application/json
  /corp/brand/{brandId}:
    delete:
      description: |
        마스터 계정을 이용하여 승인 이력이 없는 해당 계정이 신규 개설한 브랜드 삭제를 요청합니다. 정상적으로 승인요청된 브랜드는 **승인대기** 상태가 되므로 삭제가 불가합니다.\
        **- 사용 권한 계정 : 마스터**\
        **- 삭제 가능 상태 : 저장, 반려**
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__delete_200_response'
          description: 정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        마스터 계정을 이용하여 승인 이력이 없는 신규 개설 브랜드 삭제를 요청합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-accepts: application/json
    put:
      description: "RBC 웹에서 임시저장으로 등록한 브랜드 또는 신규 브랜드 등록 검수 시 반려된 경우 브랜드 수정 후 승인요청\
        \ 시 사용합니다.  \n브랜드 등록 POST API를 통해 **승인** 요청하였으나 검수 시 **반려**되어 재승인 요청 또는  \n\
        **RBC 홈페이지**에서 **임시저장**한 브랜드 정보를 수정하여 승인 요청하는 경우 사용합니다.  \n\n  + **계정 권한 :\
        \ 마스터, 매니저**\n  + **브랜드 권한 : 브랜드 대표운영자(브랜드를 등록한 마스터 또는 매니저)**  \n  + **수정\
        \ 대상 브랜드 상태 : 반려, 저장**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_corp_brand_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp_brand_post_200_response'
          description: |
            정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        RBC 웹에서 임시저장으로 등록한 브랜드 또는 신규 브랜드 등록 검수 시 반려된 경우 브랜드 수정 후 승인요청 시 사용합니다.
      tags:
      - SINCE v1.1.3
      - corporation
      x-content-type: multipart/form-data
      x-accepts: application/json
  /corp/brand/{brandId}/cancel:
    put:
      description: "신규 개설한 승인대기 중인 브랜드의 승인요청을 취소합니다.  \n\n검수가 시작된 브랜드는 승인취소가 불가 합니\
        다.  \n\n  + **계정 권한 : 마스터, 매니저**  \n  + **가능 상태 : 승인대기**  \n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__cancel_put_200_response'
          description: ""
        default:
          $ref: '#/components/responses/Fail'
      summary: "신규 개설한 승인대기 중인 브랜드의 승인요청을 취소합니다.  \n"
      tags:
      - SINCE v1.1.10
      - corporation
      x-accepts: application/json
  /messagebase/common:
    get:
      description: "이통사가 기본 제공하는 공통템플릿을 조회합니다.  \n공통템플릿은 SMS, LMS, MMS와 양방향 대화방용 CHAT\
        \ 상품으로 구성되어 있습니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**\n"
      parameters:
      - description: 리치카드 메시지 유형 구분값 입니다.
        explode: true
        in: query
        name: productCode
        required: false
        schema:
          enum:
          - sms
          - lms
          - mms
          - chat
          type: string
        style: form
      - description: MMS에서 제공되는 메시지 카드 형태 구분값 입니다.
        explode: true
        in: query
        name: cardType
        required: false
        schema:
          enum:
          - standalone
          - standalone media top
          - standalone horizontal
          - carousel medium
          - carousel small
          - Highlighted Image n Title
          - Highlighted Image
          - Thumbnail
          - SNS
          - format
          type: string
        style: form
      - deprecated: true
        description: |
          현재 공통템플릿은 유형별 제공되는 항목이 없으므로 본 파라미터는 사용되지 않습니다.
        explode: true
        in: query
        name: bizService
        required: false
        schema:
          enum:
          - 승인
          - 입금
          - 출금
          - 출고
          - 주문
          - 배송
          - 예약
          - 회원가입
          - 인증
          type: string
        style: form
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_common_get_200_response'
          description: |
            공통템플릿 목록을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        이통사가 기본 제공하는 공통템플릿을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /messagebase/common/{messagebaseId}:
    get:
      description: "이통사가 기본 제공하는 공통템플릿 별 상세 내용을 조회합니다.  \n상품별 SMS, LMS, MMS, CHAT용\
        \ 세부 정보를 조회할 수 있습니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**\n"
      parameters:
      - explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_common__messagebaseId__get_200_response'
          description: |
            공통템플릿 상세 내용을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        이통사가 기본 제공하는 공통템플릿 별 상세 내용을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /messagebase/messagebaseform:
    get:
      description: "템플릿 양식 목록을 조회합니다.  \n템플릿 작성이 필요한 경우 조회된 템플릿 양식 ID를 이용하여 템플릿 양식\
        \ 세부정보를 조회합니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**\n"
      parameters:
      - explode: true
        in: query
        name: cardType
        required: false
        schema:
          enum:
          - Cell
          - Description
          - Highlighted Image n Title
          - Highlighted Image
          - Thumbnail
          - SNS
          - descriptionNew
          - cellNew
          type: string
        style: form
      - explode: true
        in: query
        name: bizCondition
        required: false
        schema:
          example: all
          type: string
        style: form
      - explode: true
        in: query
        name: bizCategory
        required: false
        schema:
          example: 금융
          type: string
        style: form
      - explode: true
        in: query
        name: bizService
        required: false
        schema:
          example: 입금
          type: string
        style: form
      - description: "시작 offset 번호(default: 0)"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_messagebaseform_get_200_response'
          description: |
            템플릿 양식 목록을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        템플릿 양식 목록을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /messagebase/messagebaseform/{messagebaseformId}:
    get:
      description: "템플릿 유형의 상세 내용을 조회합니다.  \nformattedString을 이용하여 원하는 브랜드용 템플릿을 작\
        성할 수 있습니다.  \n+ **계정 권한 : 마스터, 매니저, 대행사**\n"
      parameters:
      - explode: false
        in: path
        name: messagebaseformId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_messagebaseform__messagebaseformId__get_200_response'
          description: |
            템플릿 유형 상세 내용을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        템플릿 유형의 상세 내용을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /messagebase/messagebaseform/{messagebaseformId}/logo:
    get:
      description: "RBC에서 템플릿용으로 제공되는 기본 로고 이미지 정보를 조회합니다.  \n조회된 이미지 파일 ID를 템플릿 등\
        록 시 사용할 수 있습니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**\n"
      parameters:
      - explode: false
        in: path
        name: messagebaseformId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_messagebaseform__messagebaseformId__logo_get_200_response'
          description: |
            템플릿 유형 별 제공되는 기본 로고 이미지 리스트를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        RBC에서 템플릿용으로 제공되는 기본 로고 이미지 정보를 조회합니다.
      tags:
      - SINCE v1.1.10
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /brand/{brandId}/messagebase:
    get:
      description: "브랜드에 등록된 템플릿을 조회합니다.   템플릿 별 승인 상태를 확인할 수 있습니다.  \n\n  + **계정\
        \ 권한: 마스터, 매니저, 대행사**\n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플\
        릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_messagebase_common_get_200_response'
          description: |
            브랜드에 등록된 템플릿 ID 목록이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 템플릿을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
    post:
      description: "브랜드 내에서 사용할 텍스트 템플릿을 등록합니다.  \n등록된 템플릿은 RCS Biz Center 운영자의 승인\
        \ 후 사용 가능합니다.  \n템플릿 등록 시 사용되는 messagebaseformId의 formattedString을 이용하여 템플\
        릿의 formattedString을 등록해야 합니다.\n추가된 신규 템플릿 유형은 POST /brand/{brandId}/v2/messagebase\
        \ 을 이용해야 합니다. \n\n**[템플릿 등록을 위한 formattedString 처리 방법]**  \n\n  1. messagebaseform\
        \ 리스트 조회  \n\n  2. 템플릿 생성 시 사용하고자 하는 messagebaseformId 상세 조회를 통해 formattedString\
        \ 확인(messagebaseform의 formattedString은 수시 업데이트 될 수 있음)  \n  \n  3. Messagebaseform\
        \ formattedString 의 각 widget Object 의 widgetPolicy.allowedAttributes 에 지정된\
        \ key의 value만 수정할 수 있음(이외 수정 시 오류)  \n  \n  4. Cell의 경우, ROOT.regMessagebases[0].formattedString.RCSMessage.openrichcardMessage.layout.children[1].children\
        \ 내 object 단위 제거 할 수 있음  \n    단, 1개 이상의 Object(LinearLayout)는 존재해야 함  \n\
        \  \n  5. Cell의 경우, ROOT.regMessagebases[0].formattedString.RCSMessage.openrichcardMessage.layout.children[1].children[n].children\
        \ 내 Object(TextView) 2개 중 1개는 삭제 가능함   \n  \n  6. 타이틀 자유형(구 테마 강조형A) 제목 좌측\
        \ 영역은 고정문자열 8자까지 허용(변수 사용 불가)  \n  \n  7. 타이틀 자유형(구 테마 강조형A) 제목 우측 영역에 해당하\
        는 ROOT.formattedString.RCSMessage.openrichcardMessage.layout.children[0].children[0].children[1]\
        \ 삭제 가능  \n  \n  8. 타이틀 자유형(구 테마 강조형A) 제목 우측 영역에 해당하는 ROOT.formattedString.RCSMessage.openrichcardMessage.layout.children[0].children[0].children[1].text\
        \ 값(value)은 템플릿 내 정의된 변수만 입력 가능(예시 참조)  \n\n  + **계정 권한: 마스터, 매니저, 대행사**\n\
        \  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형)**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_brand__brandId__messagebase_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase_post_200_response'
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 내에서 사용할 구형 텍스트 템플릿을 등록합니다.
        추가된 신규 템플릿 유형은 POST /brand/{brandId}/v2/messagebase 을 이용해야 합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/messagebase/{messagebaseId}:
    delete:
      description: "브랜드 내 지정된 템플릿을 삭제합니다.  \n템플릿의 삭제는 상태에 따라 처리 여부가 결정됩니다.  \n한번 삭\
        제된 템플릿은 복원이 불가능하며 동일한 ID로 생성할 수 없습니다.\n\n  + **계정 권한: 마스터, 매니저, 대행사**\n  +\
        \ **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지\
        \ 템플릿, LMS 템플릿**\n  + **삭제 가능 상태 : 저장, 반려, 반려(수정), 승인**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
        explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase__messagebaseId__put_200_response'
          description: |
            템플릿이 성공적으로 삭제되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 내 지정된 템플릿을 삭제합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
    get:
      description: "브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사\
        **\n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형\
        ), 이미지 템플릿, LMS 템플릿**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
        explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase__messagebaseId__get_200_response'
          description: |
            해당 템플릿의 상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 지정 템플릿 상세 내역을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
    put:
      description: "지정 템플릿을 업데이트 합니다.  \n템플릿의 업데이트는 승인상태에 따라 처리 여부가 결정됩니다.  \n\n \
        \ + **계정 권한: 마스터, 매니저, 대행사**\n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위\
        : 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형)**\n  + **수정 가능 상태 : 저장, 반려, 반려(수정), 승인**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
        explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegMessagebaseInfo'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase__messagebaseId__put_200_response'
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정 템플릿을 업데이트 합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - messagebase
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/messagebase/{messagebaseId}/cancel:
    put:
      description: "지정된 템플릿의 승인요청을 취소합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**\n  + **브\
        랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿\
        , LMS 템플릿**\n\n각 상태별 취소 요청 동작은 다음과 같습니다.  \n\n  + **승인대기 : 저장 상태로 변경**   \
        \       \n  + **승인대기(수정) : 직전 승인 상태 및 데이터로 롤백**\n  + **반려(수정) : 직전 승인 상태 및\
        \ 데이터로 롤백**\n  + **이외의 경우 에러 리턴**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
        explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase__messagebaseId__put_200_response'
          description: |
            템플릿 승인요청이 정상적으로 취소된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정된 템플릿의 승인요청을 취소합니다.
      tags:
      - SINCE v1.1.4
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /brand/{brandId}/v2/messagebase:
    post:
      description: "브랜드 내에서 사용할 템플릿을 등록합니다.  \n모든 템플릿 등록이 가능하며,   템플릿 등록 시 사용되는 messagebaseformId의\
        \ params의 각 항목 중 템플릿에 표시될 내용을 입력하여 원하는 템플릿을 등록할 수 있습니다.\n등록된 템플릿은 RCS Biz\
        \ Center 운영자의 승인이 필요합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**\n  + **브랜드 권한:\
        \ 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS\
        \ 템플릿**\n"
      parameters:
      - description: "RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜\
          드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연\
          동 시 Header에 설정되어야 합니다.           \n"
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegTemplateInfo'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase_post_200_response'
          description: |
            템플릿이 정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 내에서 사용할 템플릿을 등록합니다.   Openrichcard 규격의 모든 템플릿 등록이 가능합니다.
      tags:
      - SINCE v1.1.8
      - corporation
      - agency
      - messagebase
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/v2/messagebase/{messagebaseId}:
    put:
      description: "이미 등록된 템플릿의 내용을 수정합니다. messagebase의 ID를 유지하면서 내용을 변경하고자 하는 경우\
        \ 사용이 가능합니다.\n수정 등록된 템플릿은 RCS Biz Center 운영자의 승인이 필요합니다.  \n\n  + **계정 권한\
        : 마스터, 매니저, 대행사**\n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **지원 범위: 텍스트 템플릿(타이\
        틀 선택형 / 타이틀 자유형), 이미지 템플릿, LMS 템플릿**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 템플릿 정보 접근시 사용되는 템플릿ID Path Parameter 입니다.
        explode: false
        in: path
        name: messagebaseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModTemplateInfo'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__messagebase_post_200_response'
          description: |
            템플릿이 정상적으로 수정된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        이미 등록된 템플릿의 내용을 수정합니다.
      tags:
      - SINCE v1.1.8
      - corporation
      - agency
      - messagebase
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/v2/messagebase/file:
    post:
      description: "이미지 템플릿에서 사용할 이미지 파일을 등록합니다.  \n파일을 먼저 등록해야 이미지 템플릿 등록 시 file\
        \ Id를 템플릿 내 지정할 수 있습니다.\n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브\
        랜드 대표운영자, 운영자**  \n  + **지원 범위: 이미지 템플릿, LMS 템플릿**  \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_brand__brandId__v2_messagebase_file_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__v2_messagebase_file_post_200_response'
          description: |
            성공적으로 등록되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        이미지 템플릿에서 사용할 이미지 파일을 등록합니다.
      tags:
      - SINCE v1.1.8
      - corporation
      - agency
      - messagebase
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/v2/messagebase/file/{fileId}:
    get:
      description: "이미지 템플릿 용으로 등록한 이미지 파일 정보를 조회 합니다.  \n\n  + **계정 권한: 마스터, 매니저\
        , 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**  \n  + **지원 범위: 이미지 템플릿, LMS 템플릿\
        **  \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          파일ID Path Parameter 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__v2_messagebase_file_post_200_response'
          description: |
            조회 결과가 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        이미지 템플릿 용으로 등록한 이미지 파일 정보를 조회 합니다.
      tags:
      - SINCE v1.1.8
      - corporation
      - agency
      - messagebase
      x-accepts: application/json
  /brand/{brandId}/chatbot:
    get:
      description: "브랜드 내에 등록된 대화방(발신번호) 목록을 조회합니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대\
        행사**  \n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot_get_200_response'
          description: |
            브랜드에 등록된 대화방 목록이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 내에 등록된 대화방 목록을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      x-accepts: application/json
    post:
      description: "지정된 브랜드에 대화방(발신번호)을 등록합니다.  \n대화방 등록 시 RBC 운영자 검수 승인 후 사용이 가능합\
        니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_brand__brandId__chatbot_post_request'
        description: |
          대화방(발신번호) 등록시 통신서비스이용증명원을 함께 업로드해야 합니다.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot_post_200_response'
          description: |
            대화방 등록 상태가 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정된 브랜드에 대화방(발신번호)을 등록합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/chatbot/{chatbotId}:
    delete:
      description: "대화방(발신번호)을 삭제합니다.\n양방향 대화방의 회신번호로 등록된 발신번호 삭제 시, 대상 양방향 대화방도 함\
        께 삭제 처리 됩니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브랜드 권한 : 브랜드 대표운영\
        자, 운영자**\n  + **삭제 가능 상태 : 저장, 반려, 승인**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__delete_200_response'
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방(발신번호)을 삭제합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      x-accepts: application/json
    get:
      description: "지정된 대화방(발신번호)의 상세 정보를 조회합니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사\
        **  \n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__get_200_response'
          description: |
            해당 대화방의 상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정된 대화방(발신번호)의 상세 정보를 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      x-accepts: application/json
    put:
      description: "지정된 대화방(발신번호)의 정보를 업데이트합니다.  \n저장, 반려, 승인 상태의 대화방(발신번호)만 수정이 가\
        능하며, 대화방명이 변경되면 RBC 운영자의 검수를 받아야 합니다.    \n\n  + **계정 권한 : 마스터, 매니저, 대행사**\
        \  \n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n  + **수정 가능 상태 : 저장, 반려, 승인**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__get_200_response'
          description: |
            상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정된 대화방(발신번호)의 정보를 업데이트합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/chatbot/{chatbotId}/cancel:
    put:
      description: "지정된 대화방(발신번호, 양방향ID)의 승인요청을 취소합니다.  \n\n  + **계정 권한: 마스터, 매니저\
        , 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**  \n\n각 상태별 취소 요청 동작은 다음과 같습니다.\n\
        \        \n  + **승인대기 : 저장 상태로 변경**          \n  + **승인대기(수정) : 직전 승인 상태 및\
        \ 데이터로 롤백**        \n  + **반려(수정) : 직전 승인 상태 및 데이터로 롤백**  \n  + **이외의 경우 에\
        러 리턴**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__cancel_put_200_response'
          description: |
            대화방 승인요청이 정상적으로 취소된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        지정된 대화방(발신번호, 양방향ID)의 승인요청을 취소합니다.
      tags:
      - SINCE v1.1.9
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-accepts: application/json
  /brand/{brandId}/bidirectional/chatbot:
    get:
      description: "브랜드에 등록된 양방향ID 또는 대화방메뉴, 양방향 대행사가 연결된 대화방 목록을 조회합니다.  \n\n  +\
        \ **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot_get_200_response'
          description: |
            브랜드에 등록된 대화방(양방향) 목록이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 대화방(양방향) 목록을 조회합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-accepts: application/json
    post:
      description: "양방향ID를 이용한 대화방을 등록하거나 대화방에 다음과 같은 사항을 연결을 하고자 하는 경우 사용합니다.  \n\
        \  \n  + 양방향ID 대화방 등록  \n  + 발신번호 또는 양방향ID 대화방에 대화방 메뉴 등록  \n  + 발신번호 또는 양\
        방향ID 대화방에 양방향 서비스 대행사 연결(자동응답메시지, 챗봇 사용)  \n\n대화방명 등록/변경 시 RBC 운영자 검수 승인 후\
        \ 등록됩니다.    \n\n  + 발신번호를 이용한 양방향 대화방 전환 등록 시 대화방명이 변경된 경우  \n  + 사용자 입력 양\
        방향ID를 이용한 신규 양방향 대화방 등록 시  \n\n  - **계정 권한 : 마스터, 매니저, 대행사**  \n  - **브랜드\
        \ 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot_post_200_response'
          description: |
            등록 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방(양방향)을 등록합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}:
    delete:
      description: "양방향ID 대화방 삭제 또는 양방향 대행사가 연결된 발신번호 대화방에서 양방향 대행사 정보를 제거합니다.  \n\
        \n  + 양방향ID 대화방 삭제  \n  + 발신번호 대화방에 연결된 양방향 대행사 정보 제거(양방향 서비스 속성 제거)   \n\
        \  + 양방향 대행사 정보가 없는 발신번호 대화방 삭제(DELETE /brand/{brandId}/chatbot/{chatbotId}\
        \ 동일) \n\n  - **계정 권한 : 마스터, 매니저, 대행사**  \n  - **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response'
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방(양방향)을 삭제합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-accepts: application/json
    get:
      description: "대화방(양방향)의 상세 정보를 조회합니다.  \n양방향ID 또는 대화방메뉴, 양방향 대행사가 연결된 대화방의 상\
        세 정보를 조회합니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브랜드 권한 : 브랜드 대표운영\
        자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__get_200_response'
          description: |
            대화방(양방향)의 상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방(양방향)의 상세 정보를 조회합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-accepts: application/json
    put:
      description: "대화방(양방향) 정보를 수정 합니다.  \n양방향ID를 이용한 대화방을 수정하거나 대화방에 다음과 같은 사항을\
        \ 연결을 하고자 하는 경우 사용합니다.  \n  \n  + 양방향ID 대화방 수정  \n  + 발신번호 또는 양방향ID 대화방에 대\
        화방 메뉴 등록  \n  + 발신번호 또는 양방향ID 대화방에 양방향 서비스 대행사 연결/해제(자동응답메시지, 챗봇 사용)  \n\n\
        대화방명 등록/변경 시 RBC 운영자 검수 승인 후 등록됩니다.  \n\n  + 발신번호를 이용한 양방향 대화방 전환 등록 시 대화방\
        명이 변경된 경우  \n  + 사용자 입력 양방향ID를 이용한 신규 양방향 대화방 등록 시   \n\n  - **계정 권한 : 마스터\
        , 매니저, 대행사**  \n  - **브랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot_post_200_response'
          description: |
            상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방(양방향) 정보를 수정 합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu:
    delete:
      description: "대화방의 대화방메뉴를 삭제합니다.   \n삭제 요청한 대화방의 대화방메뉴만 삭제되며 대화방은 삭제되지 않습니다\
        .  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**  \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response'
          description: |
            성공적으로 삭제된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방의 대화방메뉴를 삭제합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-accepts: application/json
    post:
      description: "대화방에 대화방메뉴를 등록합니다.\n대화방 메뉴 개편으로 상위 메뉴, 하위 메뉴 구분 없이 최대 5개까지 메뉴를\
        \ 지정할 수 있습니다.    \n\n※  대표번호 문자서비스가 설정된 대화방에는 대화방메뉴를 등록할 수 없습니다. 즉, rcsReply\
        \ 값이 1인 대화방에만 대화방메뉴를 설정할 수 있습니다.\n\n  + **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브\
        랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response'
          description: |
            성공적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방에 대화방메뉴를 등록합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "대화방의 대화방메뉴를 수정합니다.\n대화방 메뉴 개편으로 상위 메뉴, 하위 메뉴 구분 없이 최대 5개까지 메뉴를\
        \ 지정할 수 있습니다.    \n\n※  대표번호 문자서비스가 설정된 대화방에는 대화방메뉴를 등록할 수 없습니다. 즉, rcsReply\
        \ 값이 1인 대화방에만 대화방메뉴를 설정할 수 있습니다.\n\n  + **계정 권한 : 마스터, 매니저, 대행사**  \n  + **브\
        랜드 권한 : 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response'
          description: |
            성공적으로 수정된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방의 대화방메뉴를 수정합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/autoreplymsg:
    get:
      description: "브랜드 내에 등록된 자동응답메시지 목록을 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사\
        **  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg_get_200_response'
          description: |
            브랜드에 등록된 자동응답 목록이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 내에 등록된 자동응답메시지 목록을 조회합니다.
      tags:
      - SINCE v1.0
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-accepts: application/json
    post:
      description: "브랜드에 자동응답메시지를 등록합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  +\
        \ **브랜드 권한: 브랜드 대표운영자, 운영자**  \n\n자동응답메시지에 등록 가능한 액션이 추가 되었습니다.  \n\n  + 전\
        화걸기\n  + 웹사이트(내부브라우져)\n  + 웹사이트(외부브라우져)\n  + 대화방연결(메시지작성)\n  + 캘린더(일정)\n \
        \ + 지도(좌표)\n  + 지도(키워드)\n  + 지도(현재위치)\n  + <신규>자동응답메시지연결\n  + <신규>챗봇연결\n\n\
        제공되는 productcode = chat 해당 messagebaseId를 지정하여 사용하며 다음과 같이 처리 됩니다.  \n   \
        \ \n  + 기본 말풍선(SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  \n  + 세\
        로형_Meduim(SCwThM00), 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리\n  + 슬라\
        이드형_Medium, 슬라이드형_Small은 슬라이드형_Medium으로 처리  \n    - 슬라이드형 Medium ID: CCwMhM0200\
        \ ~ CCwMhM0600  \n    \n**따라서 지정된 messagebaseId에만 존재하는 필드가 전환되는 messagebaseId에\
        \ 존재하지 않는 경우 무시됩니다.**   \n예를 들어, 텍스트 카드로 등록 시 title을 입력하더라도 기본 말풍선은 title을\
        \ 지원하지 않으므로 title이 적용되지 않습니다.\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegAutoReplyMsgInfo'
        description: |
          자동응답메시지 등록 정보를 전송합니다.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg_post_200_response'
          description: |
            자동응답메시지 등록 결과가 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 자동응답메시지를 등록합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/autoreplymsg/{autoReplyMsgId}:
    delete:
      description: "자동응답메시지를 삭제합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드\
        \ 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
        explode: false
        in: path
        name: autoReplyMsgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg_post_200_response'
          description: |
            성공적으로 삭제되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        자동응답메시지를 삭제합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-accepts: application/json
    get:
      description: "자동응답메시지의 상세 정보를 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n \
        \ + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
        explode: false
        in: path
        name: autoReplyMsgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg__autoReplyMsgId__get_200_response'
          description: |
            상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        자동응답메시지의 상세 정보를 조회합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-accepts: application/json
    put:
      description: "자동응답메시지의 정보를 업데이트합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  +\
        \ **브랜드 권한: 브랜드 대표운영자, 운영자** \n\n자동응답메시지에 등록 가능한 액션이 추가 되었습니다.  \n\n  + 전화\
        걸기\n  + 웹사이트(내부브라우져)\n  + 웹사이트(외부브라우져)\n  + 대화방연결(메시지작성)\n  + 캘린더(일정)\n  +\
        \ 지도(좌표)\n  + 지도(키워드)\n  + 지도(현재위치)\n  + <신규>자동응답메시지연결\n  + <신규>챗봇연결\n  \n\
        제공되는 productcode = chat 해당 messagebaseId를 지정하여 사용하며 다음과 같이 처리 됩니다.  \n   \
        \ \n  + 기본 말풍선(SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  \n  + 세\
        로형_Meduim(SCwThM00), 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리\n  + 슬라\
        이드형_Medium, 슬라이드형_Small은 슬라이드형_Medium으로 처리  \n    - 슬라이드형 Medium ID: CCwMhM0200\
        \ ~ CCwMhM0600  \n    \n**따라서 지정된 messagebaseId에만 존재하는 필드가 전환되는 messagebaseId에\
        \ 존재하지 않는 경우 무시됩니다.**   \n예를 들어, 텍스트 카드로 등록 시 title을 입력하더라도 기본 말풍선은 title을\
        \ 지원하지 않으므로 title이 적용되지 않습니다.\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 자동응답메시지 정보 접근시 사용되는 자동응답메시지ID Path Parameter 입니다.
        explode: false
        in: path
        name: autoReplyMsgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegAutoReplyMsgInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg__autoReplyMsgId__get_200_response'
          description: |
            상세 내역이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        자동응답메시지의 정보를 업데이트합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/autoreplymsg/file:
    post:
      description: "자동응답메시지에서 사용할 이미지 파일을 등록합니다.\n파일을 먼저 등록해야 자동응답메시지를 등록할 때 fileId를\
        \ 메시지 내 지정할 수 있습니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브랜드\
        \ 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_brand__brandId__autoreplymsg_file_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg_file_post_200_response'
          description: |
            성공적으로 등록되었을 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        자동응답메시지에서 사용할 이미지 파일을 등록합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/autoreplymsg/file/{fileId}:
    get:
      description: "자동응답메시지에서 사용할 이미지 파일 상세 정보를 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저\
        , 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          파일ID Path Parameter 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__autoreplymsg_file_post_200_response'
          description: |
            등록된 파일 정보를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        자동응답메시지에서 사용할 이미지 파일 상세 정보를 조회합니다.
      tags:
      - SINCE v1.1.5
      - corporation
      - agency
      - chatbot
      - autoreplymsg
      - bidirectional
      x-accepts: application/json
  /agency/{agencyId}/contract:
    get:
      description: "대행사가 계약된 브랜드 리스트를 제공합니다.  \n브랜드별 기업의 사업자등록번호를 함께 전달 하여 대행사에 등록\
        된 기업 정보와 맵핑할 수 있습니다.  \n\n  + **계정 권한: 대행사**  \n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_agency__agencyId__contract_get_200_response'
          description: |
            정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대행사가 계약된 브랜드 리스트를 제공합니다.
      tags:
      - SINCE v1.0
      - agency
      x-accepts: application/json
  /agency/{agencyId}/corp/{corpRegNum}/brand:
    get:
      description: "대행사가 계약된 브랜드를 기업 단위로 조회합니다.  \n기업 단위 조회 시 사업자등록번호를 이용합니다.  \n\n\
        \  + **계정 권한: 대행사**  \n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: 대상 기업의 사업자등록번호(10자리) 입니다.
        explode: false
        in: path
        name: corpRegNum
        required: true
        schema:
          maximum: 10
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_agency__agencyId__contract_get_200_response'
          description: |
            계약된 브랜드 목록이 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대행사가 계약된 브랜드를 기업 단위로 조회합니다.
      tags:
      - SINCE v1.0
      - agency
      x-accepts: application/json
  /agency/{agencyId}/brand/{brandId}:
    get:
      description: "계약된 브랜드 정보를 개별 조회 합니다.  \n승인된 브랜드만 조회가 가능합니다.  \n  + **계정 권한:\
        \ 대행사**  \n  + **브랜드 권한: 운영자**\n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__get_200_response'
          description: |
            조회된 브랜드 정보를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        계약된 브랜드 정보를 개별 조회 합니다.
      tags:
      - SINCE v1.0
      - agency
      x-accepts: application/json
    put:
      description: "대행사 계정으로 현재 운영 중인 브랜드 정보를 수정 합니다.   \n브랜드 권한(Contract)이 있어야 수정\
        이 가능하며 Header에 브랜드 Key를 삽입하여야 합니다.  \n**브랜드명** 또는 **프로필 이미지**가 수정되면 다시 승인을\
        \ 받아야 합니다. 상태가 **승인대기**로 변경 됩니다.  \n이외 정보 수정은 별도의 승인 과정 없이 업데이트 됩니다.  \n수정\
        된 데이터가 이통 3사로 전송되는 과정에서 전송이 지연되거나 장애로 인해 이통 3사 모두 전송이 완료되지 못한 경우,   브랜드 정보\
        \ 조회 데이터와 단말에서 표시되는 브랜드 홈 정보가 상이할 수 있습니다.  \n\n  + **계정 권한 : 대행사**  \n  +\
        \ **브랜드 권한 : 운영자**  \n  + **수정 가능 상태 : 승인, 반려(수정승인)**  \n  + **수정 승인 요청 시\
        \ 상태 : 승인대기(수정승인)**\n"
      parameters:
      - description: 브랜드의 운영 권한이 있는 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_agency__agencyId__brand__brandId__put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_corp__personId__brand__brandId__put_200_response'
          description: |
            정상적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대행사가 운영 중인 브랜드 정보를 수정 합니다. 브랜드명, 프로필 이미지가 수정되면 다시 승인을 받아야 합니다.
      tags:
      - SINCE v1.1.10
      - agency
      x-content-type: multipart/form-data
      x-accepts: application/json
  /agency/{agencyId}/agencyKey:
    get:
      description: "RBC 에서 발급된 최종 대행사 키를 조회합니다.  \n\n  + **계정 권한: 대행사**  \n\n대행사 키\
        의 재발급, 삭제는 RBC 홈페이지에서만 가능합니다.  \n대행사 키 재발급 시,  \n\n  + 이전 대행사 키는 재발급 후 24시\
        간 동안 유효하며, 24시간 경과 후 자동 삭제됩니다.  \n\n  + 대행사키의 유출이 우려되어 즉시 삭제를 원할 경우, RBC 웹\
        사이트를 통해 직전 대행사키를 수동 삭제할 수 있습니다.  \n    이 경우 신규 대행사키로만 메시지 전송이 성공되며, 직전 대행사\
        키로 메시지 전송 시 실패됩니다.  \n    ( 경로 : RBC대행사 계정 로그인 > 내 계정관리 > Agency Key )\n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_agency__agencyId__agencyKey_get_200_response'
          description: |
            현재 대행사 키 정보를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        RBC에서 발급된 최종 대행사 키를 조회합니다.
      tags:
      - SINCE v1.1.9
      - agency
      x-accepts: application/json
  /{webhookUrl}:
    post:
      description: "대행사에서 등록한 수신서버 URL을 통해 RBC에서 발생하는 데이터의 등록/수정/삭제 이벤트 정보를 전달합니다\
        .  \n등록/수정/삭제 알림 대상은 다음과 같습니다.  \n  + 브랜드 계약(권한) 등록  \n  + 브랜드 수정/반려  \n \
        \ + 대화방 승인/수정/반려/삭제  \n  + 템플릿 승인/수정/반려/삭제  \n  + 자동응답메시지 등록/수정/삭제  \n  +\
        \ 신규 포멧/템플릿 상품 등록  \n  + 대행사 키 재발급\n  + 레아아웃 등록/수정/삭제\n  + 로고 승인/수정/반려/삭제\n"
      parameters:
      - description: |
          대행사에서 등록한 Webhook URL 정보
        explode: false
        in: path
        name: webhookUrl
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/__webhookUrl__post_request'
        description: "notiType에 설정된 다음의 대상 정보를 구분하여 Object를 제공합니다.\n\n  - contract:\
          \ 브랜드 계약              \n  - chatbot: 대화방              \n  - messagebaseform:\
          \ 템플릿 양식              \n  - template: 템플릿              \n  - format: 포멧\
          (이통 제공 공통템플릿)              \n  - brand: 브랜드              \n  - autoreplymsg:\
          \ 자동응답메시지              \n  - agencykey: 대행사 키\n  - formatbr: 브랜드에 등록된 레이\
          아웃으로 만든 포멧  \n  - logo: 브랜드 로고\n"
      responses:
        "200":
          description: |
            성공적으로 알림을 수신하였을 경우 응답합니다.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookErrorInfo'
          description: |
            대행사 측 청약이 우선 처리되지 않은 상태에서 'contract'가 전달된 경우 필히 응답되어야 합니다.
      summary: |
        대행사에서 등록한 수신서버 URL을 통해 RBC에서 발생하는 데이터의 등록/수정/삭제 이벤트 정보를 전달합니다.
      tags:
      - SINCE v1.0
      - agency
      x-content-type: application/json
      x-accepts: application/json
  /{webhookUrl}/bidirectional:
    post:
      description: "양방향 서비스 제공 중계사에서 구현해야 하는 Webhook URI 입니다.\nRBC 대행사 정보의 수신서버 URL하\
        위에 bidirctional 경로를 구현 제공해야 합니다.  \n양방향 서비스 제공 중계사는 RBC에 등록되는 대행사의 양방향 메시지\
        \ 중계사 지정, 양방향 대화방 등록, 대화방 메뉴 사용 시 청약 여부와 같이 양방향 서비스 제공을 위해 필수 정보 연동이 필요합니다\
        .  \n"
      parameters:
      - description: |
          양방향 중계사에서 등록한 수신서버(Webhook) URL 정보 입니다.
        explode: false
        in: path
        name: webhookUrl
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              notiType: registration
              value:
                agencyId: noagency
                brandId: BR.Q63creSjku
                brandKey: BK.SD8X63r9uJaApN9
                chatbotId: bd_chatbot_v1
                corpRegNum: "1148196221"
            schema:
              $ref: '#/components/schemas/NotiBidirectional'
        description: "notiType에 설정된 다음의 대상 정보를 구분하여 Object를 제공합니다.  \npersistentmenu는\
          \ registration의 의미를 포함하고 있습니다.  \n예를 들어, A중계사로 지정되어 있던 대화방메뉴를 갖는 양방향 대화방\
          의 중계사를 B중계사로 변경한 경우, B중계사는 registration 수신 없이 persistentmenu를 수신하게 됩니다.\
          \  \n  \n- 'appointment': 일반 대행사가 양방향 서비스 중계사로 지정 알림\n  + 중계사는 대행사 지정에 대\
          한 판단 후 성공(200) 또는 실패(404) 응답을 리턴하여야 함\n  \n  **[예시]**  \n  {\n    \"notiType\"\
          : \"appointment\",\n    \"value\": {\n      \"agencyCorpRegNum\": \"1148196221\"\
          \n    }\n  }\n  \n- 'registration': 양방향 대화방 등록 알림 (agencyId는 RBC에 등록된 대행\
          사 ID 이며, noti를 받은 중계사를 지정한 대행사의 ID 또는 중계사의 ID) \n  + 양방향 대화방 생성 후 단순 통지\
          , 중계사는 수신시 성공(200) 응답을 리턴하여야 함 \n\n  **[예시]**  \n  {\n    \"notiType\":\
          \ \"registration\",\n    \"value\": {\n      \"agencyId\": \"noagency\"\
          ,\n      \"brandId\": \"BR.Q63creSjku\",\n      \"brandKey\": \"BK.SD8X63r9uJaApN9\"\
          ,\n      \"chatbotId\": \"bd_chatbot_v1\",\n      \"corpRegNum\": \"1148196221\"\
          \n    }\n  }\n\n- 'subscription': 대화방메뉴 자동응답메시지 사용 청약 확인을 RBC가 중계사로 요청함\
          \  \n  + 중계사는 corpRegNum으로 대화방메뉴 자동응답메시지 사용 청약 여부를 확인 후 성공(200) 또는 실패(404)\
          \ 응답을 리턴하여야 함\n  \n  **[예시]**  \n  {\n    \"notiType\": \"subscription\"\
          ,\n    \"value\": {\n      \"agencyId\": \"noagency\",\n      \"brandId\"\
          : \"BR.Q63creSjku\",\n      \"brandKey\": \"BK.SD8X63r9uJaApN9\",\n    \
          \  \"chatbotId\": \"bd_chatbot_v1\",\n      \"corpRegNum\": \"1148196221\"\
          \n    }\n  }\n\n- 'persistentmenu': 대화방메뉴 등록 알림 (agencyId는 RBC에 등록된 대행사\
          \ ID 이며, noti를 받은 중계사를 지정한 대행사의 ID 또는 중계사의 ID)\n  + 양방향 대화방 대화방메뉴 등록 후 단\
          순 통지, 중계사는 수신시 성공(200) 응답을 리턴하여야 함\n\n  **[예시]**  \n  {\n    \"notiType\"\
          : \"persistentmenu\",\n    \"value\": {\n      \"agencyId\": \"noagency\"\
          ,\n      \"brandId\": \"BR.Q63creSjku\",\n      \"brandKey\": \"BK.SD8X63r9uJaApN9\"\
          ,\n      \"chatbotId\": \"bd_chatbot_v1\",\n      \"corpRegNum\": \"1148196221\"\
          \n    }\n  }\n"
      responses:
        "200":
          description: |
            전송된 정보가 정상 처리된 경우 응답합니다.
        "404":
          description: |
            appointment, subscription 수신 시 판단 결과 실패에 해당하는 경우 리턴 합니다.
      summary: |
        양방향 서비스 제공 중계사에서 구현해야 하는 Webhook URI 입니다.
      tags:
      - SINCE v1.1.5
      - agency
      - bidirectional
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/bidirectional/chatbot/{chatbotId}/persistentmenu/pause:
    put:
      description: "양방향 대화방에 대화방메뉴 사용을 중지 또는 재개합니다.  \n양방향 대화방에 등록된 중계사만 사용이 가능합니다\
        .  \n과금 미납 발생 등 특이사항이 발생한 경우 사용하며 대화방메뉴 중지에 대한 정보가 사용자에게 RBC 홈페이지에서 표시됩니다\
        .  \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          브랜드 내 대화방 정보 접근시 사용되는 대화방ID Path Parameter 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PausePersistentMenu'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_pause_put_200_response'
          description: |
            성공적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        중계사만 사용이 가능하며, 양방향 대화방의 대화방메뉴 사용을 중지 또는 재개합니다.
      tags:
      - SINCE v1.1.5
      - agency
      x-content-type: application/json
      x-accepts: application/json
  /statQuery/message/{brandId}:
    get:
      description: "고객반응 통계 - 캠페인 메시지 발송/읽음확인 통계를 조회합니다.\n\n  - 동일 Group ID에 발송일 기\
        준 3일간 (D+3) 집계됩니다. 단, 이통사별 발송 성공건수 100건 이상인 경우에 한해 집계됩니다.  \n  - 통계 조회 기간은\
        \ 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.  \n\n  + **계정 권한: 마스터, 매니저\
        , 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          type: string
        style: form
      - description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          type: string
        style: form
      - description: 발송 캠페인 구분 ID 입니다.
        explode: true
        in: query
        name: groupId
        required: true
        schema:
          type: string
        style: form
      - description: 대화방ID 입니다.
        explode: true
        in: query
        name: chatbotId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_statQuery_message__brandId__get_200_response'
          description: |
            성공적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        고객반응 통계 - 캠페인 메시지 발송/읽음확인 통계를 조회합니다.
      tags:
      - SINCE v1.1.6
      - corporation
      - agency
      - stat
      x-accepts: application/json
  /statQuery/messageButton/{brandId}:
    get:
      description: "고객반응 통계 - 캠페인 메시지 버튼 클릭 통계를 조회합니다.\n\n  - 동일 Group ID에 발송일 기준\
        \ 4일간(D+3) 집계됩니다. 단, 이통사별 발송 성공건수 100건 이상인 경우에 한해 집계됩니다.  \n  - 통계 조회 기간은\
        \ 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.\n\n  + **계정 권한: 마스터, 매니저,\
        \ 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          type: string
        style: form
      - description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          type: string
        style: form
      - description: 발송 캠페인 구분 ID 입니다.
        explode: true
        in: query
        name: groupId
        required: true
        schema:
          type: string
        style: form
      - description: 대화방ID 입니다.
        explode: true
        in: query
        name: chatbotId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_statQuery_messageButton__brandId__get_200_response'
          description: |
            성공적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        고객반응 통계 - 캠페인 메시지 버튼 클릭 통계를 조회합니다.
      tags:
      - SINCE v1.1.6
      - corporation
      - agency
      - stat
      x-accepts: application/json
  /statQuery/persistentMenu/{brandId}:
    get:
      description: "고객반응 통계 - 대화방 메뉴 클릭 통계를 조회합니다.\n\n  - 대화방별 1건 이상 사용자선택이 일어난 경우\
        에 대해 집계됩니다.  \n  - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다\
        .\n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          type: string
        style: form
      - description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          type: string
        style: form
      - description: 대화방ID 입니다.
        explode: true
        in: query
        name: chatbotId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_statQuery_persistentMenu__brandId__get_200_response'
          description: |
            성공적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        고객반응 통계 - 대화방 메뉴 클릭 통계를 조회합니다.
      tags:
      - SINCE v1.1.6
      - corporation
      - agency
      - stat
      x-accepts: application/json
  /statQuery/brandprofile/{brandId}:
    get:
      description: "(준비중)   \n브랜드프로필 노출 통계를 조회합니다.\n\n  - 브랜드 프로필 이미지가 단말에 표시되면 일자\
        별로 집계됩니다. \n  - 단말에서 브랜드 프로필은 대화방별로 노출되므로 통계 데이터는 브랜드에 등록된 대화방별 건수로 제공됩니다\
        .\n  - 통계 조회 기간은 데이터 존재 시 최근 1년 6개월 이내 기간 중 최대 31일까지 검색 가능합니다.\n\n  + **계정\
        \ 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자** \n"
      parameters:
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 통계 조회 기간 시작일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          type: string
        style: form
      - description: 통계 조회 기간 종료일자(yyyymmdd) 입니다.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_statQuery_brandprofile__brandId__get_200_response'
          description: |
            성공적으로 처리된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        (준비중) 브랜드프로필 노출 통계를 조회합니다.
      tags:
      - SINCE v1.1.10
      - corporation
      - agency
      - stat
      x-accepts: application/json
  /agency/{agencyId}/corp/{corpRegNum}:
    get:
      description: "사업자등록번호로 RBC 가입 여부와 브랜드 대행사 지정 상태를 확인할 수 있습니다.  \n\n  + **계정 권\
        한: 대행사**  \n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: 조회 대상 사업자등록번호(10자리) 입니다.
        explode: false
        in: path
        name: corpRegNum
        required: true
        schema:
          maximum: 10
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_agency__agencyId__corp__corpRegNum__get_200_response'
          description: "가입 여부, 대행사 지정 상태를 응답합니다.  \n"
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        사업자등록번호로 RBC 가입 여부와 브랜드 대행사 지정 상태를 확인할 수 있습니다.
      tags:
      - SINCE v1.1.7
      - agency
      x-accepts: application/json
  /agency/{agencyId}/corp/{corpRegNum}/chatbot/{chatbotId}:
    get:
      description: "발신번호가 RBC에 대상 사업자의 발신번호로 등록되어 있는지 확인할 수 있습니다.\n\n  + **계정 권한:\
        \ 대행사**  \n"
      parameters:
      - description: RCS Biz Center에 등록된 대행사 ID 입니다.
        explode: false
        in: path
        name: agencyId
        required: true
        schema:
          maximum: 20
          type: string
        style: simple
      - description: 조회 대상 사업자등록번호(10자리) 입니다.
        explode: false
        in: path
        name: corpRegNum
        required: true
        schema:
          maximum: 10
          type: string
        style: simple
      - description: 확인하고자 하는 발신번호 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          maximum: 15
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_agency__agencyId__corp__corpRegNum__chatbot__chatbotId__get_200_response'
          description: "등록 여부 확인 결과를 제공합니다.  \n"
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        발신번호가 RBC에 대상 사업자의 발신번호로 등록되어 있는지 확인할 수 있습니다.
      tags:
      - SINCE v1.1.7
      - agency
      x-accepts: application/json
  /usableQuery/chatbotId/{chatbotId}:
    get:
      description: "대화방ID 등록 가능 여부를 조회 합니다. 등록 가능한 경우 200 OK 응답으로 리턴되며, 대화방ID 형식 부\
        적합, 이미 등록된 대화방ID 등  등록이 불가능한 경우 400 Error 리턴됩니다.\n\n  + 발신번호 조회 시에는 숫자만 입력\
        해야 합니다.  \n    - 발신번호 조회 시 숫자 이외 '-'을 삽입할 경우 양방향 대화방ID로 인식될 수 있으므로 주의해 주세요\
        .  \n  + 양방향 대화방ID 조회 시에는 영문, 숫자, '-', '_' 사용이 가능합니다.  \n    - 양방향 대화방ID 영\
        문 대문자는 소문자로 변환됩니다.  \n\n  + **계정 권한: 대행사**  \n"
      parameters:
      - description: 확인하고자 하는 대화방ID 입니다.
        explode: false
        in: path
        name: chatbotId
        required: true
        schema:
          maximum: 15
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_usableQuery_chatbotId__chatbotId__get_200_response'
          description: |
            대화방ID 등록이 가능할 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        대화방ID 등록 가능 여부를 조회 합니다.
      tags:
      - SINCE v1.1.8
      - corporation
      - agency
      - usable
      x-accepts: application/json
  /baselayout/component:
    get:
      description: "레이아웃 등록/수정 시 사용 가능한 컴포넌트 목록을 조회 합니다.  \n컴포넌트 별 상세 내역이 제공되므로 별도\
        의 컴포넌트별 상세 조회 API는 제공하지 않습니다.  \n\n  + **계정 권한: 대행사**\n"
      parameters:
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_baselayout_component_get_200_response'
          description: |
            컴포넌트 리스트를 제공합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        레이아웃 등록/수정 시 사용 가능한 컴포넌트 목록을 조회 합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
  /baselayout/sample:
    get:
      description: "레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 목록 입니다.  \n\n  + **계정 권한: 대행\
        사**\n"
      parameters:
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_baselayout_sample_get_200_response'
          description: |
            샘플 레이아웃 목록을 제공합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 목록 입니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
  /baselayout/sample/{sampleLayoutId}:
    get:
      description: "레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 상세 정보를 조회합니다.  \n\n  + **계정\
        \ 권한: 대행사**\n"
      parameters:
      - description: 샘플레이아웃 ID 입니다.
        explode: false
        in: path
        name: sampleLayoutId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_baselayout_sample__sampleLayoutId__get_200_response'
          description: |
            샘플 레이아웃 상세 조회 결과를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        레이아웃 등록/수정을 위해 참조용으로 제공되는 샘플 레이아웃 상세 정보를 조회합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
  /baselayout/product/rule:
    get:
      description: "메시지 상품별 레이아웃 구성 규칙을 조회합니다.  \n본 규칙에 부합해야만 레이아웃 등록/수정이 가능합니다. \
        \ \n\n  + **계정 권한: 대행사**\n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_baselayout_product_rule_get_200_response'
          description: |
            상품별 레이아웃 구성 규칙 정보를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        메시지 상품별 레이아웃 구성 규칙을 조회합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
  /brand/{brandId}/layout:
    get:
      description: "브랜드 별 등록된 레이아웃 목록을 조회합니다.  \n\n  + **계정 권한: 대행사**  \n  + **브랜드\
        \ 권한: 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__layout_get_200_response'
          description: |
            브랜드 내 등록된 레이아웃 목록을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
    post:
      description: "브랜드 내에서 사용할 수 있는 레이아웃을 등록 합니다.  \n\n  + **계정 권한: 대행사**  \n  +\
        \ **브랜드 권한: 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegBrandLayout'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__layout_post_200_response'
          description: |
            레이아웃이 정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: "브랜드 내에서 사용할 수 있는 레이아웃을 등록 합니다.  \n"
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/layout/{layoutId}:
    delete:
      description: "브랜드 별 등록된 레이아웃을 삭제합니다.  \n\n  + **계정 권한: 대행사**  \n  + **브랜드 권한\
        : 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 레이아웃ID 입니다.
        explode: false
        in: path
        name: layoutId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__layout__layoutId__delete_200_response'
          description: |
            브랜드 내 레이아웃 정상 삭제 시 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 별 등록된 레이아웃을 삭제합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
    get:
      description: "브랜드 별 등록된 레이아웃 목록을 조회합니다.  \n\n  + **계정 권한: 대행사**  \n  + **브랜드\
        \ 권한: 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 레이아웃ID 입니다.
        explode: false
        in: path
        name: layoutId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__layout__layoutId__get_200_response'
          description: |
            브랜드 내 등록된 레이아웃 상세 정보를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 별 등록된 레이아웃 목록을 조회합니다.
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-accepts: application/json
    put:
      description: "브랜드 내 레이아웃을 수정 합니다.  \n\n  + **계정 권한: 대행사**  \n  + **브랜드 권한: 운\
        영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: 레이아웃ID 입니다.
        explode: false
        in: path
        name: layoutId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegBrandLayout'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__layout__layoutId__put_200_response'
          description: |
            레이아웃이 정상적으로 수정된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: "브랜드 내 레이아웃을 수정 합니다.  \n"
      tags:
      - SINCE v1.1.10
      - agency
      - layout
      x-content-type: application/json
      x-accepts: application/json
  /brand/{brandId}/logo:
    get:
      description: "브랜드 별 등록된 로고 목록을 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n\
        \  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: "시작 offset 번호(default: 0) 입니다."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "조회 최대 건수(default: 100, maximum: 1000) 입니다."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo_get_200_response'
          description: |
            브랜드 내 등록된 로고 목록을 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드 별 등록된 로고 목록을 조회합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-accepts: application/json
    post:
      description: "브랜드 내에서 사용할 수 있는 로고를 등록 합니다.  \n\n등록한 로고는 영구적으로 사용 가능합니다.\n\n\
        \  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegBrandLogo'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo_post_200_response'
          description: |
            정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: "브랜드 내에서 사용할 수 있는 로고를 등록 합니다.  \n"
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/logo/{fileId}:
    delete:
      description: "브랜드에 등록된 승인 이전 상태의 로고를 삭제 합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사\
        **  \n  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **삭제 가능 상태 : 저장, 반려**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: 로고 ID 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo__fileId__delete_200_response'
          description: |
            성공적으로 삭제된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 승인 이전 상태의 로고를 삭제 합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-accepts: application/json
    get:
      description: "브랜드에 등록된 로고를 단건 상세 조회합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n\
        \  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: 로고 이미지 파일 ID 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo__fileId__get_200_response'
          description: |
            조회 요청한 로고 상세 정보입니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 로고를 단건 상세 조회합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-accepts: application/json
    put:
      description: "브랜드에 등록된 로고를 수정 승인요청 합니다.  \n\n  + **계정 권한: 마스터, 매니저, 대행사**  \n\
        \  + **브랜드 권한: 브랜드 대표운영자, 운영자**\n  + **수정 가능 상태 : 저장, 반려, 반려(수정), 승인**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: 로고 ID 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegBrandLogo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo__fileId__put_200_response'
          description: |
            정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        브랜드에 등록된 로고를 수정 승인요청 합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-content-type: multipart/form-data
      x-accepts: application/json
  /brand/{brandId}/logo/{fileId}/cancel:
    put:
      description: "로고의 승인요청을 취소합니다.  \n  + **계정 권한: 마스터, 매니저, 대행사**  \n  + **브랜드\
        \ 권한: 브랜드 대표운영자, 운영자**  \n  \n\n  \n각 상태별 취소 요청 동작은 다음과 같습니다.  \n  + **승인대\
        기 : 저장 상태로 변경**          \n  + **승인대기(수정) : 직전 승인 상태 및 데이터로 롤백**\n  + **반려\
        (수정) : 직전 승인 상태 및 데이터로 롤백**\n  + **이외의 경우 에러 리턴**\n"
      parameters:
      - description: |
          브랜드 내 정보 접근시 사용되는 브랜드ID Path Parameter 입니다.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: |
          RCS Biz Center에서 브랜드 등록 시 자동 생성되는 Key 입니다.<br>    대행사가 해당 브랜드에 대한 권한 여부를 판단하는데 사용됩니다.<br>     따라서, 대행사 계정으로 브랜드 내 정보를 조회/등록/수정 API 연동 시 Header에 설정되어야 합니다.
        explode: false
        in: header
        name: X-RCS-Brandkey
        required: false
        schema:
          maximum: 18
          type: string
        style: simple
      - description: 로고 이미지 파일 ID 입니다.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_brand__brandId__logo_post_200_response'
          description: |
            정상적으로 등록된 경우 응답됩니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        로고의 승인요청을 취소합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-accepts: application/json
  /logo/common:
    get:
      description: "RBC에서 제공되는 기본 아이콘 이미지 정보를 조회합니다.  \n조회된 파일 ID를 메시지 발송 시 또는 템플릿\
        \ 등록 시 사용할 수 있습니다.  \n\n  + **계정 권한 : 마스터, 매니저, 대행사**\n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_logo_common_get_200_response'
          description: |
            기본 아이콘 이미지 리스트를 응답합니다.
        default:
          $ref: '#/components/responses/Fail'
      summary: |
        RBC에서 제공되는 기본 아이콘 이미지 정보를 조회합니다.
      tags:
      - SINCE v1.1.12
      - corporation
      - agency
      - logo
      x-accepts: application/json
components:
  responses:
    Fail:
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/401ErrorInfo'
            - $ref: '#/components/schemas/403ErrorInfo'
            - $ref: '#/components/schemas/400ErrorInfo'
            - $ref: '#/components/schemas/204ErrorInfo'
      description: 처리 실패 응답입니다.
    SuccessForToken:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenInfo'
      description: Token 발급
  schemas:
    "204ErrorInfo":
      description: "request 처리 결과는 성공적이나 제공할 데이터가 없는 경우 응답됩니다.<br> --------------------------------------------------------------------<br>\
        \ 60004  No Content  \n  : 요청을 성공적으로 처리했으나 데이터가 없음\\\n--------------------------------------------------------------------<br>\n"
      properties:
        status:
          example: 204
          type: integer
        error:
          $ref: '#/components/schemas/_204ErrorInfo_error'
    "401ErrorInfo":
      description: "인증에 필요한 정보가 누락되거나 값이 잘못된 경우 응답됩니다.\n- 61001  \"Missing Authorization\
        \ header Authorization\" \n- 61002  \"Missing Token  Authorization\"\n- 61003\
        \  \"Invalid token  \"\n- 61004  \"Token has expired\"\n- 61005  \"Invalid\
        \ client id\"\n- 61006  \"Invalid secret key\"\n- 61007 \"not allowed IP.\
        \ unregistered %s\"\n"
      properties:
        status:
          example: 401
          type: integer
        error:
          $ref: '#/components/schemas/_401ErrorInfo_error'
    "403ErrorInfo":
      description: |
        대상에 대한 접근 권한이 없는 경우 응답됩니다.<br>
        - 63001 "No Brand Permission"
        - 63002 "No Permission"
      properties:
        status:
          example: 403
          type: integer
        error:
          $ref: '#/components/schemas/_403ErrorInfo_error'
    "400ErrorInfo":
      description: "잘못된 Request에 대하여 응답됩니다. 요구되는 헤더가 누락되거나 Request에 필요한 데이터 누락/오류\
        \ 등에 해당하는 경우 응답됩니다.\n- 64001 \"Missing X-RCS-BrandKey header\"\n- 64002  \"\
        Invalid Brand Key\"  \n- 64101  \"Invalid brandId on path parameter\"  \n\
        - 64102  \"Invalid agencyId on path parameter\"  \n- 64103  \"Invalid corpRegNum\
        \ on path parameter\"  \n- 64104  \"Invalid personId on path parameter\" \
        \ \n- 64105  \"Invalid chatbotId on path parameter\"  \n- 64106  \"Invalid\
        \ messagebaseId on path parameter\"  \n- 64107  \"Invalid messagebaseformId\
        \ on path parameter\"  \n- 64108 \"Invalid autoReplyMsgId on path parameter\"\
        \n- 64109 \"Invalid fileId on path parameter\"\n- 64201  \"Invalid query parameter\
        \ ({name of paramter})\"  \n- 64202  \"Invalid query parameter value ({name\
        \ of paramter}:{value})\"  \n- 64203  \"query paramter required ({name of\
        \ paramter})\"  \n- 64301  \"Missing Body data\"  \n- 64302  \"Invalid JSON\
        \ format\"  \n- 64303  \"Invalid type of Attribute ({name  of attribute})\"\
        \  \n- 64304  \"Over specified size ({name of attribute})\"  \n- 64305  \"\
        Missing Certification document\"  \n- 64306  \"Exceed MDN registration quantity\"\
        \  \n- 64307  \"Missing MDN\"  \n- 64308  \"Invalid MDN format\"  \n- 64309\
        \  \"Missing chatbot name\"  \n- 64310  \"Invalid display format\"  \n- 64311\
        \  \"Invalid rcsReply format\"  \n- 64312  \"Missing messagebaseformId\" \
        \ \n- 64313  \"Invalid messagebaseformId\"  \n- 64314  \"Missing Template\
        \ name\" \n- 64315  \"Missing brandId\"  \n- 64316  \"Invalid brandId\"  \n\
        - 64317  \"Invalid agencyId\"  \n- 64318  \"Invalid formattedString format\"\
        \  \n- 64319  \"Duplicate MDN\"   \n- 64320  \"Duplicate messagebaseId\" \
        \  \n- 64321  \"Invalid approval status\"  \n- 64322  \"File no exist\"  \n\
        - 64323  \"No changes\"  \n- 64324  \"Invalid custTmpltId format\"  \n- 64325\
        \  \"Invalid chatbot service type\"  \n- 64326  \"Invalid chatbot webhook\
        \ format\"  \n- 64327  \"Not allowed delete\"  \n- 64328  \"Not allowed modification\"\
        \  \n- 64329  \"Missing profile image\"  \n- 64330  \"brand creation permission\
        \ denied\"  \n- 64331  \"brand Image File Capacity Overflow\"   \n  : 이미지\
        \ 파일 최대 용량 초과(1MB 이하)\n  \n- 64332  \"brand profile file is only png\"   \n\
        \  : 브랜드 프로파일 이미지 PNG만 허용\n  \n- 64333  \"Not Allowed Brand Image File Extension\"\
        \ \n- 64334  \"Not Matched Brand Image File Property\"  \n- 64335  \"Brand\
        \ Image File Image Size Error\"  \n  : 이미지 가로/세로 크기 초과\n  \n- 64336  \"Brand\
        \ Creation Property Required\"  \n- 64337  \"Brand Creation Property Value\
        \ Error\"  \n- 64338  \"Brand Creation Property Value Error With Reason\"\
        \  \n- 64339  \"Brand Creation Property Size Limit\"  \n- 64340  \"Brand Creation\
        \ Default MDN Required\"  \n- 64341  \"Brand Creation MDN Duplicated\"  \n\
        - 64342  \"Brand Creation RegBrand Error\"  \n- 64343  \"Brand Creation Chatbots\
        \ Array Error\"  \n- 64344  \"can not regist deleted mdn in this brand\"\n\
        - 64345  \"invalid brand status\"\n- 64346  \"user not found: %s\"\n- 64347\
        \  \"%s is not registered\"\n- 64348  \"%s is already registered\"\n- 64349\
        \  \"%s has not qualified\"\n- 64350 \"Templateform not found.\"\n- 64351\
        \  \"%s exists. need to delete all %s before deleting the brand\"\n- 64352\
        \  \"can not delete yourself\"\n- 64353  \"%s is temporarily unavailable.\"\
        \n- 64354 \"Attached File Capacity Overflow\"\n- 64355 \"Not allowed file\
        \ extension\"\n- 64356 \"can not deleted chatbot. This mdn is being used by\
        \ twoway chatbot.\"\n- 64357 \"Invalid body format [%s]\"\n- 64358 \"Invalid\
        \ buttons format [%s]\"\n- 64359 \"Invalid chipList format [%s]\"\n- 64360\
        \ \"chatbot is not twoway\"\n- 64361 \"chatbotId does not match subNum\"\n\
        - 64362 \"subNum dose not found.\"\n- 64363 \"botAgencyId dose not found.\"\
        \n- 64364 \"Invalid inputField format\"\n- 64365 \"chatbot was deleted\"\n\
        - 64366 \"chabotId is duplicated\"\n- 64367 \"Used by Twoway Chatbot [%s]\"\
        \n- 64368 \"Missing service\"\n- 64369 \"Missing chatbotId\"\n- 64370 \"Missing\
        \ subNum\"\n- 64371 \"Missing botAgencyId\"\n- 64372 \"Missing subTitle\"\n\
        - 64373 \"Invalid chatbotId format\"\n- 64374 \"Invalid subTitle format\"\n\
        - 64375 \"AutoReplyMsgId not found\"\n- 64376 \"Missing Menu Title\"\n- 64377\
        \ \"Invalid_menu_format [%s]\"\n- 64378 \"Failed to confirm subscription status\"\
        \n- 64379 \"Persistent menu was deleted\"\n- 64380 \"This Agency is not support\
        \ chat service\"\n- 64381 \"Invalid subNum format\"\n- 64382 \"The contracted\
        \ information could not be found\"\n- 64383 \"chatbotId dose not found.\"\n\
        - 64384 \"Duplicated PostbackId [%s]\"\n- 64385 \"This Menu dose not regist\"\
        \n- 64386 \"This Menu status dose not pause\"\n- 64387 \"This Menu being used\"\
        \n- 64388 \"This chatbot dose not using the persistentMenu\"\n- 64389 \"Invalid\
        \ isPause format\"\n- 64390 \"This agency dose not support relay\"\n- 64391\
        \ \"This agency has not permission\"\n- 64392 \"botAgencyId does not match\
        \ userId\"\n- 64393 \"Unable to delete agency privilege (agencyId is registered\
        \ in the twoway chatbot)\"\n- 64394 \"brand profile / background image must\
        \ be 1:1 ratio\"\n- 64395 \"file is up to %sMb\"\n- 64396 \"check file extension\
        \ (%s)\"\n- 64397 \"invalid body %s\"\n- 64397 \"required %s\"\n- 64398 \"\
        must be entered in pairs, following:%s / required:%s\"\n- 64399 \"there is\
        \ no value for image size (param:%s, fileId:%s)\"\n- 64400 \"required %sx%s,\
        \  image resolution is %sx%s (param:%s, fileId:%s)\"\n- 64541 \"The associated\
        \ autoReplyMsg is invalid\"\n  : 연결된 자동응답메시지가 유효하지 않습니다.\n\n- 64543 \"chatbotId\
        \ is not a bidirectional chatbot\"\n  : 양방향 대화방이 아닙니다. \n\n- 64545 \"Invalid\
        \ layoutId\"\n  : 레이아웃 정보가 없습니다.\n\n- 64546 \"Invalid product code\"  \n \
        \ : 상품코드가 없습니다.\n\n- 64549 \"The bodyComposition is required.\"\n  : 레이아웃의\
        \ 바디 영역은 필수 입력요소 입니다.      \n\n- 64550 \"Only one component is available for\
        \ headerComposition.\"\n  : 헤더 영역에는 하나의 컴포넌트만 사용 가능합니다.      \n\n- 64552 \"\
        %s component is not available for %s.\"\n  : X 컴포넌트는 Y 에 올 수 없습니다.      \n\
        \n- 64600 \"Invalid componetId\"\n  : \"해당 컴포넌트는 레이아웃 전용이 아닙니다. / 컴포넌트 아이디\
        가 없습니다.\"      \n\n- 64601 \"Only one component is available for footerComposition.\"\
        \n- 64603 \"Invalid sampleLayoutId\"\n  : 샘플 레이아웃 ID가 아닙니다.\n\n- 64604 \"\
        Different components that belong to the same groupComponentId cannot be used\
        \ together.\"\n  : 같은 그룹 컴포넌트는 하나만 쓸 수 있습니다.   \n  \n- 64606 \"only one size\
        \ (300x300px) can be uploaded.\"\n  : 300x300px 사이즈의 파일만 업로드 가능합니다.  \n  \n\
        - 64607 \"The maximum number of logos allowed: %s\"\n  : 로고는 최대 %s개까지 등록 가\
        능합니다.\n"
      properties:
        status:
          example: 400
          type: integer
        error:
          $ref: '#/components/schemas/_400ErrorInfo_error'
    WebhookErrorInfo:
      description: |
        기업고객이 대행사에 청약전 상태로 RCS Biz Center에서  브랜드-대행사 계약 설정을 먼저 실행하여 webhook Notification 전달된 경우 대행사가 RCS Biz Center에 응답합니다.<br>
      example:
        error:
          code: 69999
          message: No Subscription
        status: 400
      properties:
        status:
          example: 400
          type: string
        error:
          $ref: '#/components/schemas/WebhookErrorInfo_error'
    TokenInfo:
      description: |
        access Token, expire 시간을 포함한 JSON Object 입니다.
      properties:
        accessToken:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6Ik5vQWJlMjAxOSIsImlhdCI6MTUxNjIzOTAyMn0.60wyqqCDOsWfl6qhjaMwyU_9fJUQqCZIhVy8nL71_qs
          type: string
        expiresIn:
          example: "1568694883"
          type: string
        userId:
          example: userId
          maximum: 20
          type: string
        allowedIp:
          items:
            example: 10.10.1.11
            type: string
          type: array
      required:
      - accessToken
      - expiresIn
    ContractInfo:
      description: |
        브랜드와 대행사의 계약관계 정보입니다.
      example:
        chatbotDate: 2020-03-12T06:22:55.418+09
        messagebaseDate: 2020-03-12T06:22:55.418+09
        brandName: brandName
        updateDate: 2020-03-12T06:22:55.418+09
        corpRegNum: corpRegNum
        corpId: corpId
        brandId: brandId
        agencyId: agencyId
        logoDate: 2024-04-12T06:22:55.418+09
        contracts:
        - a2p
        - a2p
        brandDate: 2020-03-12T06:22:55.418+09
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        corpId:
          description: RCS Biz Center에 등록된 기업 ID 입니다.
          maximum: 13
          type: string
        corpRegNum:
          description: RCS Biz Center에 등록된 기업의 사업자등록번호 입니다.
          maximum: 10
          type: string
        brandId:
          description: 브랜드 ID 입니다.
          maximum: 13
          type: string
        brandName:
          description: 브랜드 명 입니다.
          maximum: 20
          type: string
        agencyId:
          description: 대행사 ID 입니다.
          maximum: 20
          type: string
        contracts:
          description: 계약 유형 입니다.
          items:
            enum:
            - a2p
            - chat
            type: string
          type: array
        registerDate:
          description: 계약정보 등록일시 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 계약정보 수정일시 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        brandDate:
          description: |
            계약된 대상 브랜드의 최종 변경 일시 정보 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        chatbotDate:
          description: |
            브랜드 내 등록된 대화방 중 가장 최근에 변경된 대화방의 일시  정보 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        messagebaseDate:
          description: |
            브랜드 내 등록된 템플릿 중 가장 최근에 변경된 템플릿의 일시  정보 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        logoDate:
          description: |
            브랜드 내 등록된 브랜드 로고 중 가장 최근에 변경된 로고의 일시 정보 입니다.
          example: 2024-04-12T06:22:55.418+09
          format: date-time
          type: string
      required:
      - agencyId
      - brandId
      - corpId
    MenuItemInfo:
      description: |
        브랜드 홈에 표시 가능한 버튼 정보 객체입니다. AppLink와 WebLink가 모두 설정된 경우 단말에 app 이 설치되어 있으면 app을 실행하고 설치되지 않은 경우 weblink로 연결됩니다.
      properties:
        buttonType:
          description: 버튼 유형
          enum:
          - call
          - web
          - app
          - store
          - order
          - buy
          - tickets
          - moreinfo
          maximum: 20
          type: string
        applink:
          $ref: '#/components/schemas/AppLinkItemInfo'
        weblink:
          description: |
            buttonType call 을 제외한 모든 버튼은 Web URL을 입력해야 합니다. URL은 http:// 또는 https:// 로 시작하여야 합니다.
          maximum: 128
          type: string
      required:
      - buttonType
    AppLinkItemInfo:
      description: |
        APP Link의 패키지 Name, Action, URL 정보 객체입니다.
      properties:
        packageName:
          description: App 실행을 위한 package name
          example: com.android.mobile.cs
          maximum: 40
          type: string
        action:
          description: App 실행을 위한 Action
          example: android.intent.action.VIEW
          maximum: 40
          type: string
        uri:
          description: App 실행을 위한 URI
          example: abc://gizmos/foo/bar
          maximum: 40
          type: string
      required:
      - action
      - packageName
      - uri
    Category:
      description: 브랜드 카테고리 정보 객체입니다.
      example:
        updateDate: 2020-11-10T06:22:55.418+09
        categoryName: 금융
        categoryId: FIN
        subCategories:
        - subCategoryId: FIN001
          subCategoryName: 은행
        - subCategoryId: FIN001
          subCategoryName: 은행
      properties:
        categoryId:
          description: 브랜드 카테고리 ID 입니다.
          example: FIN
          maximum: 64
          type: string
        categoryName:
          description: 브랜드 카테고리 명 입니다.
          example: 금융
          maximum: 64
          type: string
        subCategories:
          description: 하위 카테고리 목록 입니다.
          items:
            $ref: '#/components/schemas/Category_subCategories_inner'
          type: array
        updateDate:
          description: 수정일시 - 카테고리 수정 일시 입니다.
          example: 2020-11-10T06:22:55.418+09
          format: date-time
          type: string
    RegBrandInfo:
      description: "브랜드 등록 정보 객체입니다.  \nObject 세부구성은 [RegBrandInfo](#/RegBrandInfo)를\
        \ 참고하시기 바랍니다.  \n"
      properties:
        regBrand:
          $ref: '#/components/schemas/RegBrandInfo_regBrand'
    BrandInfo:
      description: |
        브랜드 기본 정보 객체입니다.
      example:
        chatbotDate: 2020-03-12T06:22:55.418+09
        messagebaseDate: 2020-03-12T06:22:55.418+09
        updateDate: 2020-03-12T06:22:55.418+09
        approvalDate: 2020-03-12T06:22:55.418+09
        brandKey: BK.Vlkjz2c53kMx0kZ
        mediaUrl:
        - fileName: fileName
          typeName: icon
          url: url
          fileId: fileId
        - fileName: fileName
          typeName: icon
          url: url
          fileId: fileId
        brandId: BR.abcdefghij
        name: FAN
        registerDate: 2020-03-12T06:22:55.418+09
        status: 승인대기
      properties:
        brandId:
          description: 브랜드ID - 브랜드 등록 시 자동 생성됩니다.
          example: BR.abcdefghij
          maximum: 13
          type: string
        name:
          description: 브랜드 이름 - 브랜드 등록 시 지정합니다.
          example: FAN
          maximum: 20
          type: string
        brandKey:
          description: 브랜드 Key - 브랜드 등록 시 자동 생성됩니다.
          example: BK.Vlkjz2c53kMx0kZ
          maximum: 18
          type: string
        registerDate:
          description: 등록일시 - 브랜드 등록 일시입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        approvalDate:
          description: 승인일시 - 브랜드가 검수에서 승인된 일시입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 수정일시 - 브랜드의 정보가 수정된 일시입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        status:
          description: "브랜드의 상태 입니다.  \n\n  + 저장 : RCS Biz Center 홈페이지에서 브랜드 정보를 입\
            력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  \n \
            \ + 승인대기 : 브랜드 등록 직후 검수 이전 상태입니다.  \n  + 검수시작 : 브랜드 검수가 시작된 상태입니다.  \n\
            \  + 승인 : 검수가 완료되어 이통3사에 브랜드 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.\
            \  \n  + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 브랜드는 수정 후 다시 승인요청 할 수 있습니다\
            .  \n  + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS\
            \ 메시지를 발송할 수 없습니다.  \n  + 승인대기(수정) : 승인된 브랜드 변경 시 검수 대상으로 판단되어 검수 요청된\
            \ 상태입니다.  \n  + 검수시작(수정) : 승인된 브랜드 변경으로 승인요청된 브랜드 검수가 시작된 상태입니다.  \n \
            \ + 반려(수정) : 승인된 브랜드 변경 검수 처리 결과 반려된 상태입니다.  \n  + 검수완료(수정) : 승인된 브랜드\
            \ 변경 검수 승인은 되었으나 이통3사 정보 등록이 완료되지 않은 상태입니다.  \n    현재 상태에서는 이통사에 따라 단말\
            \ 브랜드 홈 정보가 다를 수 있습니다.  \n    브랜드 조회 API 호출 시 수정 이전 브랜드 정보가 제공됩니다.  \n"
          enum:
          - 승인대기
          - 검수시작
          - 승인
          - 반려
          - 검수완료
          - 저장
          - 승인대기(수정)
          - 검수시작(수정)
          - 반려(수정)
          - 검수완료(수정)
          type: string
        mediaUrl:
          description: |
            이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
          items:
            $ref: '#/components/schemas/MediaUrl_inner'
          type: array
        chatbotDate:
          description: |
            브랜드 내 등록된 대화방 중 가장 최근에 변경된 대화방의 일시 정보 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        messagebaseDate:
          description: |
            브랜드 내 등록된 템플릿 중 가장 최근에 변경된 템플릿의 일시 정보 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
      required:
      - brandId
      - name
    BrandDetail:
      allOf:
      - $ref: '#/components/schemas/BrandInfo'
      description: 브랜드 상세 정보 객체입니다.
      example:
        bizInfoYn: ""
        zipCode: ""
        initTab: ""
        description: ""
        initFeedItem: ""
        subCategoryId: FIN001
        approvalReason: ""
        categoryName: 금융
        webSiteUrl: ""
        subCategoryName: 은행
        templateColor: ""
        bizInfoContent: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
        roadAddress: ""
        detailAddress: ""
        tel: ""
        menus: ""
        initFeedItems:
        - call
        - web
        - moreinfo
        - portalsearch
        categoryOpt: ""
        bizInfoTitle: 영업시간 안내
        categoryId: FIN
        email: ""
        brandFeedUrl: ""
      properties:
        description:
          description: 브랜드 설명에 등록된 내용입니다.
          maximum: 150
        tel:
          description: |
            브랜드홈에 노출될 전화번호(대표발신번호와 별개) 입니다.
          maximum: 12
        menus:
          description: "브랜드 홈에는 최대 4개까지 표시됩니다. chat은 기본 등록 되므로 지정할 수 있는 최대 menu는 3개\
            이며, 등록 시 call을 포함하지 않고 2개 이하 지정할 경우 call을 기본 추가합니다."
          items:
            $ref: '#/components/schemas/MenuItemInfo'
          maximum: 3
        categoryId:
          description: 브랜드 카테고리 ID 입니다.
          example: FIN
          maximum: 64
        categoryName:
          description: 브랜드 카테고리 명 입니다.
          example: 금융
          maximum: 64
        subCategoryId:
          description: 브랜드 하위 카테고리 ID 입니다.
          example: FIN001
          maximum: 64
        subCategoryName:
          description: 브랜드 하위 카테고리 명 입니다.
          example: 은행
          maximum: 64
        categoryOpt:
          description: 검색용 키워드 임의 등록 할 수 있습니다.
          maximum: 20
        zipCode:
          description: 브랜드 홈에 표시될 우편번호(5자리) 입니다.
          maximum: 5
        roadAddress:
          description: 브랜드 홈에 표시되는 도로명주소 입니다.
          maximum: 200
        detailAddress:
          description: 브랜드 홈에 표시되는 상세주소 입니다.
          maximum: 200
        email:
          description: 브랜드 홈에 표시되는 이메일주소 입니다.
          format: email
          maximum: 30
        webSiteUrl:
          description: 브랜드 홈에 표시되는 홈페이지 주소 입니다.
          maximum: 128
        approvalReason:
          description: 검수 시 반려 사유가 제공됩니다.
        brandFeedUrl:
          description: |
            브랜드 소식 URL 입니다. 브랜드 소식을 최초 등록하거나 브랜드 홈 기본 탭을 소식탭(FEED)로 설정하면 자동 생성됩니다.
        initTab:
          default: FEED
          description: |
            단말에 표시되는 브랜드 홈의 기본 탭을 지정하는 항목입니다. 미지정 시 기본값은 FEED 입니다.
            + FEED: 소식탭을 기본 탭으로 지정합니다.
            + INFO: 정보탭을 기본 탭으로 지정합니다.
            브랜드 최초 승인 시에만 선택이 가능하며 승인 이후에는 수정이 불가합니다.
          enum:
          - FEED
          - INFO
          maximum: 5
        initFeedItem:
          deprecated: true
          description: "하위 호환성을 위해 필드는 유지되지만, 동일한 용도의 initFeedItems 사용을 권고합니다.   \n\
            + TEL: 소식탭에 전화걸기(=퀵버튼 call) 버튼이 표시됩니다.   + HOME: 소식탭에 Web 연결(=퀵버튼 web)\
            \ 버튼이 표시됩니다.   + SEARCH: 소식탭에 포털검색 버튼이 표시되며, 소식탭 전용 퀵버튼입니다.  \n"
          enum:
          - TEL
          - HOME
          - SEARCH
          maximum: 6
        initFeedItems:
          description: "initTab FEED인 경우, 소식탭에 표시할 메뉴를 지정합니다.  \nmenus에서 설정한 항목 중\
            \ 소식탭에 표시할 항목을 지정합니다. 즉, menus에 지정되지 않은 항목을 설정하면 error 처리 됩니다.  \nmenus는\
            \ 최대 3개까지 지정할 수 있으며, menus에 설정한 3개항목과 소식탭에만 표시가능한 portalsearch를 추가로 등록\
            할 경우 최대 4개가 등록됩니다.  \n"
          example:
          - call
          - web
          - moreinfo
          - portalsearch
          items:
            enum:
            - call
            - web
            - store
            - order
            - buy
            - tickets
            - moreinfo
            - portalsearch
        templateColor:
          description: |
            브랜드 내 등록되는 템플릿의 버튼 컬러 값을 지정합니다.   컬러값은 Hex code 형식만 유효합니다.
          maximum: 10
          example: null
        bizInfoYn:
          default: "N"
          description: "브랜드 소식탭에 운영정보 사용 여부를 설정합니다.  \n"
          enum:
          - "Y"
          - "N"
        bizInfoTitle:
          description: "bizInfoYn = 'Y'인 경우, 운영정보 제목을 지정합니다.  \n"
          example: 영업시간 안내
          maximum: 20
        bizInfoContent:
          description: |
            bizInfoYn = 'Y'인 경우, 운영정보 내용을 지정합니다.
          example: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
          maximum: 200
    RegChatbotInfo:
      description: "대화방(발신번호) 등록 정보 객체입니다.  \nObject 구성은 [RegChatbotInfo](#/RegChatbotInfo)를\
        \ 참고하시기 바랍니다.\n"
      properties:
        mdn:
          description: |
            등록할 발신번호입니다.  국가번호는 제외하고 등록하며, 현재 정책적으로 휴대전화번호는 등록이 불가합니다.
          maximum: 40
          type: string
        subNum:
          description: |
            회신번호 입니다. 발신번호(mdn)와 회신번호가 동일해야 합니다.  발신번호와 동일하게 설정됩니다.
          maximum: 40
          type: string
        subTitle:
          description: 대화방명입니다.
          maximum: 20
          type: string
        rcsReply:
          default: "1"
          description: "SMS MO 수신 0, RCS Postback 수신 1"
          enum:
          - "0"
          - "1"
          type: string
        display:
          default: "01"
          description: "대화방 전시 설정값 입니다. 설정하지 않을 경우 기본 '01'로 설정됩니다.  \n\n  + '11' :\
            \ 브랜드채널 노출,브랜드검색 허용,브랜드홈 전시  \n  + '10' : 브랜드채널 노출,브랜드검색 허용,브랜드홈 비전시 \
            \ \n  + '01' : 브랜드채널 노출,브랜드검색 불허,브랜드홈 전시  \n  + '00' : 브랜드채널 노출,브랜드검색\
            \ 불허,브랜드홈 비전시  \n"
          enum:
          - "11"
          - "10"
          - "01"
          - "00"
          type: string
        inputField:
          default: 1
          description: "단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  \n\n  + 0 : 비활성화  \n \
            \ + 1 : 활성화\n"
          enum:
          - 0
          - 1
          type: integer
        subDescr:
          description: "대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  \n"
          maximum: 50
          type: string
        saftyStatusYn:
          default: "Y"
          description: "안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  \n\n  + Y : 안심마\
            크 표시\n  + N : 안심마크 미표시\n"
          enum:
          - "Y"
          - "N"
          type: string
      required:
      - mdn
      - rcsReply
      - subTitle
    ModBiChatbot:
      description: |
        양방향 대화방 정보 객체입니다.
      properties:
        subNum:
          description: "회신번호 입니다.  \nA2P는 chatbotId와 동일하며, 생략 가능합니다.  \nservice가 chat인\
            \ 경우 사전에 승인된 대화방(발신번호) 중 하나를 반드시 지정해야 합니다.\n"
          maximum: 40
          type: string
        subTitle:
          description: 대화방명입니다.
          maximum: 20
          type: string
        display:
          default: "01"
          description: "단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  \n브랜드홈 전시로 설정되면 대화방은\
            \ RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지 수신이 불가능합니다.  \n\n  +\
            \ '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  \n  + '10' : 브랜드채널 노출 및 브랜드검색\
            \ 허용 & 브랜드홈 비전시  \n  + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  \n  + '00'\
            \ : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시\n"
          enum:
          - "11"
          - "10"
          - "01"
          - "00"
          type: string
        inputField:
          default: 1
          description: "단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  \n\n  + 0 : 비활성화  \n \
            \ + 1 : 활성화\n"
          enum:
          - 0
          - 1
          type: integer
        botAgencyId:
          description: "양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.  \
            \  \n예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  \n대화방(발신번호)를\
            \ 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  \n이미 양방향 대화방으로 전환된 발신번호의 경우,   botAgencyId를\
            \ 빈값으로 설정하면 일반 발신번호로 전환됩니다.(DELETE /brand/{brandId}/bidirectional/chatbot/{chatbotId}과\
            \ 동일)\n\n  + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중 양방향 서비스가 가능한 대행사ID 지정  \n  +\
            \ 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC 등록ID 지정(RBC 등록 ID는 해당 중계사에\
            \ 직접 확인)\n"
          maximum: 20
          type: string
        subDescr:
          description: "대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  \n"
          maximum: 50
          type: string
        saftyStatusYn:
          default: "Y"
          description: "안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  \n\n  + Y : 안심마\
            크 표시\n  + N : 안심마크 미표시\n"
          enum:
          - "Y"
          - "N"
          type: string
    RegBiChatbot:
      description: |
        대화방(양방향) 정보 객체입니다.
      properties:
        chatbotId:
          description: "대화방(양방향)으로 등록/전환하고자 하는 chatbotId를 지정합니다.  \n\n  + 발신번호(service\
            \ = 'A2P')인 경우, 사전에 승인된 발신번호의 chatbotId를 입력합니다.\n  + 양방향ID(service = 'CHAT')를\
            \ 새로 등록하는 경우, 원하는 문자열을 입력합니다.  \n\n**양방향ID(service 구분값: 'CHAT')의 포맷 규칙\
            은 다음과 같습니다.**  \n\n  + chatbotId는 생략할 수 있으며 RBC에서 랜덤으로 chatbotId 생성하여\
            \ 리턴합니다.  \n  + 등록 시 사용 가능한 문자는 alphanumeric, '-', '_' 만 허용 됩니다.  \n \
            \ + 알파벳은 대문자 입력시 소문자로 변환되어 처리됩니다.  \n  + 'bot-' prefix 가 기본 삽입됩니다.  \n\
            \  + 'bot-' prefix 삽입된 된 문자열 사용이 가능하며, 이때는 'bot-' prefix를 RBC에서 추가하지 않\
            습니다.  \n  + 'bot-' prefix 포함 시 최대 15자리 입력이 가능하므로 'bot-'외 사용 가능한 문자열의 길\
            이는 11자리 입니다.\n  + API 호출 시 입력한 chatbotId에 bot- prefix 삽입, 소문자 변환 등 변경이\
            \ 발생할 수 있으므로 반드시 API 응답으로 리턴되는 chatbotId를 취득 사용해야 합니다.\n"
          maximum: 15
          type: string
        subNum:
          description: "회신번호 입니다.  \nA2P는 chatbotId와 동일하며, 생략 가능합니다.  \nservice가 chat인\
            \ 경우 사전에 승인된 대화방(발신번호) 중 하나를 반드시 지정해야 합니다.\n"
          maximum: 40
          type: string
        subTitle:
          description: 대화방명입니다.
          maximum: 20
          type: string
        display:
          default: "01"
          description: "단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  \n브랜드홈 전시로 설정되면 대화방은\
            \ RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지 수신이 불가능합니다.  \n\n  +\
            \ '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  \n  + '10' : 브랜드채널 노출 및 브랜드검색\
            \ 허용 & 브랜드홈 비전시  \n  + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  \n  + '00'\
            \ : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시\n"
          enum:
          - "11"
          - "10"
          - "01"
          - "00"
          type: string
        service:
          default: a2p
          description: "대화방 유형입니다.  \n\n  + a2p : 발신번호를 이용한 대화방\n  + chat : 양방향ID를\
            \ 이용한 대화방\n"
          enum:
          - a2p
          - chat
          type: string
        inputField:
          default: 1
          description: "단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  \n\n  + 0 : 비활성화  \n \
            \ + 1 : 활성화\n"
          enum:
          - 0
          - 1
          type: integer
        botAgencyId:
          description: "양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.  \
            \  \n예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  \n대화방(발신번호)를\
            \ 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  \n\n  + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중\
            \ 양방향 서비스가 가능한 대행사ID 지정  \n  + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC\
            \ 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)\n"
          maximum: 20
          type: string
        subDescr:
          description: "대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  \n"
          maximum: 50
          type: string
        saftyStatusYn:
          default: "Y"
          description: "안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  \n\n  + Y : 안심마\
            크 표시\n  + N : 안심마크 미표시\n"
          enum:
          - "Y"
          - "N"
          type: string
      required:
      - chatbotId
      - inputField
      - service
      - subNum
      - subTitle
    Chatbot:
      description: |
        대화방(발신번호) 기본 정보입니다.
      example:
        updateDate: 2020-03-12T06:22:55.418+09
        approvalDate: 2020-03-12T06:22:55.418+09
        groupId: groupId
        display: "11"
        subDescr: subDescr
        botAgencyId: botAgencyId
        psMenuUse: false
        inputField: 0
        updateId: updateId
        chatbotId: chatbotId
        subTitle: subTitle
        approvalResult: 승인대기
        registerId: registerId
        service: a2p
        brandId: brandId
        isMainNum: true
        saftyStatusYn: "Y"
        subNum: subNum
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        groupId:
          description: |
            대화방이 대량등록된 경우 그룹ID 입니다.
          maximum: 10
          type: string
        chatbotId:
          description: |
            대화방(발신번호)ID, A2P의 경우 발신번호(mdn)과 동일합니다.
          maximum: 15
          type: string
        brandId:
          description: 브랜드ID
          maximum: 13
          type: string
        subNum:
          description: |
            회신번호 A2P의 경우 발신번호, 즉 chatbotId와 동일합니다.
          maximum: 40
          type: string
        isMainNum:
          description: "대표번호 개념은 더 이상 유효하지 않습니다.  \n브랜드에 등록된 대화방 중 유효한 첫번째 대화방이 표시\
            됩니다.\n"
          type: boolean
        subTitle:
          description: 대화방명입니다.
          maximum: 20
          type: string
        service:
          default: a2p
          description: "대화방 유형입니다.  \n\n  + a2p : 발신번호를 이용한 대화방\n  + chat : 양방향ID를\
            \ 이용한 대화방\n"
          enum:
          - a2p
          - chat
          type: string
        display:
          description: "단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  \n브랜드홈 전시로 설정되면 대화방은\
            \ RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지 수신이 불가능합니다.  \n\n  +\
            \ '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  \n  + '10' : 브랜드채널 노출 및 브랜드검색\
            \ 허용 & 브랜드홈 비전시  \n  + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  \n  + '00'\
            \ : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시  \n"
          enum:
          - "11"
          - "10"
          - "01"
          - "00"
          type: string
        inputField:
          default: 1
          description: "단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  \n\n  + 0 : 비활성화  \n \
            \ + 1 : 활성화\n"
          enum:
          - 0
          - 1
          type: integer
        subDescr:
          description: "대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  \n"
          maximum: 50
          type: string
        botAgencyId:
          description: "양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.  \
            \  \n예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  \n대화방(발신번호)를\
            \ 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  \n\n  + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중\
            \ 양방향 서비스가 가능한 대행사ID 지정  \n  + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC\
            \ 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)\n"
          maximum: 20
          type: string
        saftyStatusYn:
          default: "Y"
          description: "안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  \n\n  + Y : 안심마\
            크 표시\n  + N : 안심마크 미표시\n"
          enum:
          - "Y"
          - "N"
          type: string
        psMenuUse:
          default: false
          description: "대화방메뉴 사용 여부입니다.  \n\n  + true : 사용  \n  + false : 미사용\n"
          type: boolean
        approvalResult:
          description: "대화방의 승인 상태입니다.  \n\n  + 저장 : RCS Biz Center 홈페이지에서 대화방 정보를\
            \ 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  \n\
            \  + 승인대기 : 대화방 등록 직후 검수 이전 상태입니다.  \n  + 검수시작 : 대화방 검수가 시작된 상태입니다.  \n\
            \  + 승인 : 검수가 완료되어 이통3사에 대화방 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.\
            \  \n  + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 대화방은 수정 후 다시 승인요청 할 수 있습니다\
            .  \n  + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS\
            \ 메시지를 발송할 수 없습니다.  \n  + 검수완료(수정) : 승인된 대화방의 이름을 변경하였으나 이통3사 정보 등록이 완\
            료되지 않은 상태입니다.  \n    현재 상태에서는 이통사에 따라 단말 표시 대화방 이름이 다를 수 있습니다.\n  \n"
          enum:
          - 승인대기
          - 검수시작
          - 승인
          - 반려
          - 검수완료
          - 검수완료(수정)
          - 저장
          type: string
        registerDate:
          description: 대화방 등록일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        approvalDate:
          description: 대화방 승인일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 대화방 수정일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        registerId:
          description: 대화방 등록 계정 ID
          maximum: 20
          type: string
        updateId:
          description: 대화방 수정 계정 ID
          maximum: 20
          type: string
      required:
      - brandId
      - chatbotId
    ChatbotDetail:
      allOf:
      - $ref: '#/components/schemas/Chatbot'
      description: |
        대화방(발신번호) 상세 정보 객체입니다.
      example:
        botTcPage: ""
        webhook: ""
        mediaUrl:
        - fileName: fileName
          typeName: icon
          url: url
          fileId: fileId
        - fileName: fileName
          typeName: icon
          url: url
          fileId: fileId
        rcsReply: ""
        searchWeight: ""
        approvalReason: ""
        persistentMenu: ""
        status: ""
      properties:
        mediaUrl:
          description: |
            이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
          items:
            $ref: '#/components/schemas/MediaUrl_inner'
          type: array
        rcsReply:
          default: "1"
          description: "service가 'chat' 이거나 양방향 대화방으로 설정하고자 한다면 반드시 '1'로 설정해야 합니다\
            .  \n\n  + 0 : SMS MO 수신  \n  + 1 : RCS Postback 수신 \n"
          enum:
          - "0"
          - "1"
        approvalReason:
          description: 승인 사유
        status:
          description: "대화방 상태를 나타내는 필드입니다.  \n현재는 단일 값인 \"published\" 만 존재하며, 대행사\
            나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.\n"
          enum:
          - published
        searchWeight:
          default: 512
          deprecated: true
          description: |
            검색 우선 순위로 사용자 단말에서 검색 시 검색 결과가 여러 개라면 이 값이 높은 순서로 보여집니다.
            대행사나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.
          maximum: 10
        webhook:
          description: 양방향 대화방 서비스 중계사 webhook URL 정보이며 botAgencyId 지정 시 자동으로 등록됩니다.
          maximum: 128
        botTcPage:
          deprecated: true
          description: "이용약관페이지 URL 입니다.  \n대행사나 기업에서 API를 통해 등록/수정은 제공하지 않습니다.\n"
          maximum: 128
        persistentMenu:
          items:
            $ref: '#/components/schemas/PersistentMenu'
    BiChatbot:
      description: |
        대화방 기본 정보입니다.
      example:
        updateDate: 2020-03-12T06:22:55.418+09
        approvalDate: 2020-03-12T06:22:55.418+09
        display: "11"
        groupId: groupId
        subDescr: subDescr
        botAgencyId: botAgencyId
        psMenuUse: false
        inputField: 0
        updateId: updateId
        chatbotId: chatbotId
        subTitle: subTitle
        approvalResult: 승인대기
        registerId: registerId
        service: a2p
        brandId: brandId
        saftyStatusYn: "Y"
        isMainNum: true
        subNum: subNum
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        chatbotId:
          description: "발신번호 또는 양방향ID로 등록된 대화방의 고유 식별값입니다.  \n"
          maximum: 15
          type: string
        brandId:
          description: |
            대화방이 속한 브랜드ID 입니다.
          maximum: 13
          type: string
        subNum:
          description: |
            양방향 대화방에 지정된 회신번호 입니다. A2P의 경우 chatbotId와 동일합니다.
          maximum: 40
          type: string
        subTitle:
          description: 대화방명입니다.
          maximum: 20
          type: string
        service:
          default: a2p
          description: "대화방 유형입니다.  \n\n  + a2p : 발신번호를 이용한 대화방\n  + chat : 양방향ID를\
            \ 이용한 대화방\n"
          enum:
          - a2p
          - chat
          type: string
        display:
          description: "단말에서 대화방의 검색 및 RCS대화방 노출 여부를 설정합니다.  \n브랜드홈 전시로 설정되면 대화방은\
            \ RCS메시지 수신이 가능하게 되며, 반대로 브랜드홈 비전시 설정 시에는 RCS메시지 수신이 불가능합니다.  \n\n  +\
            \ '11' : 브랜드채널 노출 및 브랜드검색 허용 & 브랜드홈 전시  \n  + '10' : 브랜드채널 노출 및 브랜드검색\
            \ 허용 & 브랜드홈 비전시  \n  + '01' : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 전시  \n  + '00'\
            \ : 브랜드채널 노출 및 브랜드검색 불허 & 브랜드홈 비전시  \n"
          enum:
          - "11"
          - "10"
          - "01"
          - "00"
          type: string
        inputField:
          default: 1
          description: "단말 대화방에서 사용자 입력창을 활성화 또는 비활성화 합니다.  \n\n  + 0 : 비활성화  \n \
            \ + 1 : 활성화\n"
          enum:
          - 0
          - 1
          type: integer
        botAgencyId:
          description: "양방향 대화방 서비스 계약 관계에 있는 대행사ID로 자동응답메시지 과금 및 챗봇 연동에 사용됩니다.  \
            \  \n예를들어 양방향ID 대화방을 생성하는 경우 대행사ID를 지정하지 않아도 생성이 가능합니다.  \n대화방(발신번호)를\
            \ 전환하는 경우에는 반드시 대행사ID를 지정해야 합니다.  \n\n  + 기업에서 양방향 대화방 등록 시: 브랜드 대행사 중\
            \ 양방향 서비스가 가능한 대행사ID 지정  \n  + 양방향 서비스 대행사에서 양방향 대화방 등록 시: 연계된 중계사의 RBC\
            \ 등록ID 지정(RBC 등록 ID는 해당 중계사에 직접 확인)\n"
          maximum: 20
          type: string
        subDescr:
          description: "대화방 검색 시 노출되는 소개글을 입력할 수 있습니다.  \n"
          maximum: 50
          type: string
        saftyStatusYn:
          default: "Y"
          description: "안심마크 지정된 기업에 한하여, 대화방의 안심마크 표시 여부를 지정합니다.  \n\n  + Y : 안심마\
            크 표시\n  + N : 안심마크 미표시\n"
          enum:
          - "Y"
          - "N"
          type: string
        psMenuUse:
          default: false
          description: |
            대화방메뉴 사용 여부입니다.
          type: boolean
        approvalResult:
          description: "대화방의 승인 상태입니다.  \n\n  + 저장 : RCS Biz Center 홈페이지에서 대화방 정보를\
            \ 입력하고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 브랜드는 승인요청을 해야 승인대기 상태로 변경됩니다.  \n\
            \  + 승인대기 : 대화방 등록 직후 검수 이전 상태입니다.  \n  + 검수시작 : 대화방 검수가 시작된 상태입니다.  \n\
            \  + 승인 : 검수가 완료되어 이통3사에 대화방 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.\
            \  \n  + 반려 : 검수 시 승인이 불가하여 반려된 상태입니다. 반려된 대화방은 수정 후 다시 승인요청 할 수 있습니다\
            .  \n  + 검수완료 : RCS Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS\
            \ 메시지를 발송할 수 없습니다.  \n  + 검수완료(수정) : 승인된 대화방의 이름을 변경하였으나 이통3사 정보 등록이 완\
            료되지 않은 상태입니다.  \n    현재 상태에서는 이통사에 따라 단말 표시 대화방 이름이 다를 수 있습니다.  \n  \n"
          enum:
          - 승인대기
          - 검수시작
          - 승인
          - 반려
          - 검수완료
          - 검수완료(수정)
          - 저장
          type: string
        registerDate:
          description: 대화방 등록일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        approvalDate:
          description: 대화방 승인일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 대화방 수정일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        registerId:
          description: 대화방 등록 계정 ID
          maximum: 20
          type: string
        updateId:
          description: 대화방 수정 계정 ID
          maximum: 20
          type: string
        groupId:
          description: |
            대화방이 대량등록된 경우 그룹ID 입니다.
          type: string
        isMainNum:
          description: "대표번호 개념은 더 이상 유효하지 않습니다.  \n브랜드에 등록된 대화방 중 유효한 첫번째 대화방이 표시\
            됩니다.\n"
          type: boolean
      required:
      - brandId
      - chatbotId
      - subNum
    BiChatbotDetail:
      allOf:
      - $ref: '#/components/schemas/BiChatbot'
      - properties:
          mediaUrl:
            $ref: '#/components/schemas/MediaUrl'
          rcsReply:
            default: "1"
            description: |
              SMS MO 수신 '0', RCS Postback 수신 '1'입니다. service가 'chat' 이거나 양방향 대화방으로 설정하고자 한다면 반드시 '1'로 설정해야 합니다.
            enum:
            - "0"
            - "1"
            type: string
          approvalReason:
            description: 승인 사유
            type: string
          status:
            description: "대화방 상태를 나타내는 필드입니다.  \n현재는 단일 값인 \"published\" 만 존재하며, 대\
              행사나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.\n"
            enum:
            - published
            type: string
          searchWeight:
            default: 512
            deprecated: true
            description: |
              검색 우선 순위로 사용자 단말에서 검색 시 검색 결과가 여러 개라면 이 값이 높은 순서로 보여집니다. 대행사나 기업에서 API를 통한 등록/수정은 제공하지 않습니다.
            maximum: 10
            type: string
          webhook:
            description: |
              양방향 대화방 서비스 중계사 webhook URL 정보이며 botAgencyId 지정시 자동으로 등록됩니다.
            maximum: 128
            type: string
          botTcPage:
            deprecated: true
            description: "이용약관페이지 URL 입니다.  \n대행사나 기업에서 API를 통해 등록/수정은 제공하지 않습니다.\n"
            maximum: 128
            type: string
          persistentMenu:
            items:
              $ref: '#/components/schemas/PersistentMenu'
            type: array
      description: |
        양방향 대화방 상세 정보 객체입니다.
      example:
        updateDate: 2020-03-12T06:22:55.418+09
        approvalDate: 2020-03-12T06:22:55.418+09
        webhook: webhook
        groupId: groupId
        approvalReason: approvalReason
        psMenuUse: false
        inputField: 0
        updateId: updateId
        chatbotId: chatbotId
        botTcPage: botTcPage
        subTitle: subTitle
        registerId: registerId
        rcsReply: "1"
        persistentMenu:
        - actionType: dialerAction
          ordNo: 6.027456183070403
          upPostbackId: upPostbackId
          action:
            dialerAction:
              dialPhoneNumber:
                phoneNumber: phoneNumber
                fallbackUrl: https://openapi-generator.tech
          postbackId: postbackId
          autoReplyMsgId: autoReplyMsgId
          type: reply
          title: title
        - actionType: dialerAction
          ordNo: 6.027456183070403
          upPostbackId: upPostbackId
          action:
            dialerAction:
              dialPhoneNumber:
                phoneNumber: phoneNumber
                fallbackUrl: https://openapi-generator.tech
          postbackId: postbackId
          autoReplyMsgId: autoReplyMsgId
          type: reply
          title: title
        registerDate: 2020-03-12T06:22:55.418+09
        mediaUrl: null
        display: "11"
        searchWeight: "512"
        subDescr: subDescr
        botAgencyId: botAgencyId
        approvalResult: 승인대기
        service: a2p
        brandId: brandId
        saftyStatusYn: "Y"
        isMainNum: true
        subNum: subNum
        status: published
    GuideInfo:
      description: |
        템플릿 작성에 필요한 가이드 정보를 제공하기 위하여 양식 정의 시 포함되는 정보입니다. 리치카드의 경우 messagebaseInfo에서 제공됩니다.
      example:
        imageWidth: 5
        maxDescriptionSize: 1
        maxLineCount: 0
        maxDisplayText: 6
        detailInfo:
          summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한 가이드
            정보입니다.
          charactersPerLine:
            buttonName: 17
            description: 18
            title: 16
          combinations:
          - condition:
              mediaPhase: Tall
              numberOfButtons: 1
              numberOfLinesOnTitle: 2
            numberOfLinesOnDescription: 5
          - condition:
              mediaPhase: Tall
              numberOfButtons: 1
              numberOfLinesOnTitle: 2
            numberOfLinesOnDescription: 5
          releaseDate: 2020-07-31T00:00:00.000+09
          productCardType: Standalone Media Top Tall
        imageHeight: 5
      properties:
        maxLineCount:
          description: "max 라인수 \n"
          type: integer
        maxDisplayText:
          description: "버튼명 글자수 \n"
          type: integer
        maxDescriptionSize:
          description: "카드별 max 본문 글자수  \n"
          type: integer
        imageWidth:
          description: |
            이미지 권고 가로 사이즈 단위는 Pixel
          type: integer
        imageHeight:
          description: |
            이미지 권고 세로 사이즈 단위는 Pixel
          type: integer
        detailInfo:
          $ref: '#/components/schemas/DetailInfo'
    PolicyInfo:
      description: |
        리치카드, 오픈리치카드에 포함된 content(title, description, media, button) 에 대한 검증 정책 저장을 위한 객체입니다.
      example:
        buttonsAllowed: true
        maxButtonCount: 9
        adHeaderAllowed: true
        maxDescriptionSize: 3
        cardCount: 2
        maxTitleSize: 7
        adBodyAllowed: true
        maxMediaSize: 2
      properties:
        buttonsAllowed:
          description: |
            MaaP FE /message의 buttons 사용 유무 true : buttons 필드 사용 false : buttons 에 값이 들어오면 실패 처리
          type: boolean
        adHeaderAllowed:
          description: |
            header에 광고 인입 허가 여부 true : 광고인입 허용(MaaP FE /message의 header 체크안함) false : 광고인입 불허(MaaP FE /message이 header가 1(광고)
                    이면 실패 처리)
          type: boolean
        adBodyAllowed:
          description: |
            광고 문구 허용 여부 true : 본문 광고 문구를 체크하지 않음 false : 본문이 "(광고)"로 시작하면 실패 처리
          type: boolean
        cardCount:
          description: 카드 개수
          type: integer
        maxTitleSize:
          default: 30
          description: 개별 타이틀 글자 최대 수. 사용하지 않음.
          type: integer
        maxButtonCount:
          description: 버튼 최대 개수
          type: integer
        maxDescriptionSize:
          description: |
            RichCard인 경우(Carousel포함) Description들의 글자수 총합.<br> OpenRichCard인 경우 변수부 글자수 총합.<br> <=0 인 경우 사용하지 않음.<br>
          type: integer
        maxMediaSize:
          description: "Byte단위 미디어 크기 총합의 최대 크기, <=0 인 경우 사용하지 않음."
          type: integer
    ParamInfo:
      description: |
        템플릿의 개별 파라미터를 검수하기 위한 대상 파라미터 정보 객체입니다. <br> 크기 관련 필드는 <=0 인 경우 체크하지 않습니다.
      properties:
        param:
          description: "검수 파라미터명. (영문, 한글, 숫자, '_' 만 사용)"
          maximum: 20
          type: string
        isMandatory:
          default: false
          description: |
            필수여부. true인 경우 중계사에서 메시지 전송 요청 시 해당 필드가 없는 경우 MaaP FE에서 실패처리한다. false인 경우는 해당 필드가 없는 경우도 메시지 전송이 되도록 MaaP FE에서 적절하게 처리한다.
          type: boolean
        type:
          description: |
            기술검사타입을 지정합니다.<br> - string: 문자열 검사 대상<br> - file: 파일 검사 대상<br> - button: formattedString 내 button 제어 대상<br> - layout: formattedString 내 button외 제어 대상<br>
          enum:
          - string
          - file
          - button
          - layout
          type: string
        contentType:
          description: |
            컨텐츠 유형, PolicyInfo 정책을 검사하는데 사용됩니다.
          enum:
          - title
          - description
          - maapfile
          - cell
          - displayText
          - url
          - etc
          - buttonName
          - visibility
          type: string
        strSize:
          description: "글자 최대 크기, type이 string인 경우"
          type: integer
        fileSize:
          description: "파일 최대 크기, type이 file인 경우."
          type: integer
        strRegx:
          description: "java regular expression, null 인경우 사용하지 않음. 예)  \n\n  1) 숫자\
            만 : '^[0-9]\\*$'  \n  2) 영문자만 : '[a-zA-Z]\\*$'  \n  3) 한글만 : '^[가-힣]\\\
            *$'  \n  4) 영어 & 숫자만 : '^[a-zA-Z0-9]\\*$'  \n  5) E-Mail : '^[a-zA-Z0-9]+@[a-zA-Z0-9]+$'\
            \  \n  6) 휴대폰 : '^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$'  \n  7) 일\
            반전화 : '^\\d{2,3}-\\d{3,4}-\\d{4}$'  \n  8) 주민등록번호 : '\\d{6}\\-[1-4]\\\
            d{6}'  \n  9) IP 주소 : '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})'\
            \  \n"
          maximum: 65535
          type: string
        verification:
          description: |
            문장 패턴 정의 (SKT향) "안녕하세요", "님 ", "원입니다."
          items:
            type: string
          type: array
        imageWidth:
          description: 이미지 해상도 가로 크기 (지정된 크기의 이미지를 등록해야 정상 발송 가능)
          example: 936
          type: integer
        imageHeight:
          description: 이미지 해상도 세로 크기 (지정된 크기의 이미지를 등록해야 정상 발송 가능)
          example: 1248
          type: integer
        couplingId:
          description: |
            파라미터 간 함께 처리되어야 하는 경우 동일한 값을 부여<br> 즉, 같은 값의 couplingId가 지정되는 경우 지정된 파라미터는 모두 조건을 만족해야 정상 발송 처리됨
          example: optSet1
          maximum: 20
          type: string
        inputText:
          description: |
            템플릿 등록시 사용자 입력한 원본 문장(고정부 & 변수부)을 제공합니다. 단, cell방식의 타이틀 선택형은 제공되지 않습니다.
          maximum: 65535
          type: string
        relationId:
          description: |
            param과 관계가 있는 param을 의미합니다. 주로 현재 param이 입력되지 않을 경우 메시지 상에 노출여부와 연관된 visibility에 지정된 param을 표시합니다. <br> 메시지 발송시 이통MaaP FE에서 핸들링하는 것으로 템플릿 등록이나 메시지 발송 param과는 무관하며, 참조 용도로 제공됩니다.
          example: descVsblty
          type: string
      required:
      - param
    RegMessagebaseInfo:
      description: |
        템플릿 등록 정보 객체입니다.  템플릿 등록시 지정된 messagebaseform의 widgetPolicy 의 속성만 수정/삭제가 가능합니다. formattedString에 템플릿이 정의되며 지정된 형식에 맞게 등록되어야 합니다. formattedString 내 suggestions에 추가 가능한 버튼 Action은 다음 링크에서 확인 가능합니다.

        **[버튼 Action 목록 Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**
      example:
        messagebaseformId: messagebaseformId
        tmpltName: tmpltName
        custTmpltId: custTmpltId
        brandId: brandId
        formattedString:
          RCSMessage:
            trafficType: ""
        agencyId: agencyId
      properties:
        messagebaseformId:
          description: 텡플릿 양식 ID
          maximum: 10
          type: string
        custTmpltId:
          description: 사용자 지정 템플릿ID로 영문/숫자 25자 이내만 가능
          maximum: 25
          type: string
        tmpltName:
          description: 템플릿명
          maximum: 40
          type: string
        brandId:
          description: 브랜드ID
          maximum: 13
          type: string
        agencyId:
          description: 대행사ID
          maximum: 20
          type: string
        formattedString:
          $ref: '#/components/schemas/RegRCSMessage'
      required:
      - brandId
      - custTmpltId
      - messagebaseformId
      - tmpltName
    widgetPolicy:
      description: |
        오픈리치카드를 구성하는 Property 중  템플릿 정의시 변경 가능한 속성 정보 객체입니다.   클라이언트가 변경할 수 있는 속성 리스트를 widget별 표시합니다.  클라이언트에서 템플릿 정의 시 사용하는 openrichcard용 messagebaseform 에 정의되며 템플릿 정의시 widgetPolicy에 표시된 속성만 클라이언트에서 수정/삭제가 가능합니다.
      properties:
        allowedAttributes:
          example:
          - text
          - textAlignment
          items:
            type: string
          type: array
      required:
      - allowedAttributes
    Messagebase:
      description: Messagebase 기본 정보입니다.
      example:
        updateDate: 2020-03-12T06:22:55.418+09
        approvalDate: 2020-03-12T06:22:55.418+09
        messagebaseformId: messagebaseformId
        tmpltName: tmpltName
        groupId: groupId
        approvalReason: approvalReason
        messagebaseId: messagebaseId
        updateId: updateId
        approvalResult: 승인대기
        registerId: registerId
        brandId: common
        status: ready
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        groupId:
          description: 템플릿이 대량등록된 경우 그룹ID 입니다.
          type: string
        messagebaseId:
          description: 템플릿 ID
          maximum: 40
          type: string
        tmpltName:
          description: 템플릿 등록시 입력된 템플릿 명칭입니다.
          maximum: 40
          type: string
        messagebaseformId:
          description: 템플릿의 원형인 템플릿 양식 ID 입니다.
          maximum: 40
          type: string
        brandId:
          description: |
            템플릿이 등록되어 있는 브랜드 ID 입니다.<br> 공통으로 사용하는 템플릿인 경우 'common'으로 표시됩니다.
          enum:
          - common
          type: string
        status:
          description: |
            템플릿의 상태를 표시합니다.<br> ready : 사용 <br> pause : 사용중지
          enum:
          - ready
          - pause
          type: string
        approvalResult:
          description: "템플릿의 승인 상태입니다.\n\n- 저장 : RCS Biz Center 홈페이지에서 템플릿 정보를 입력하\
            고 승인요청 하지 않고 저장해 둔 상태입니다. 저장 상태의 템플릿은 승인요청을 해야 승인대기 상태로 변경됩니다.\n\n- 승인\
            대기 : 템플릿 등록 직후 검수 이전 상태입니다.\n\n- 검수시작 : 템플릿 검수가 시작된 상태입니다.\n\n- 승인 : 검\
            수가 완료되어 이통3사에 정보 등록까지 최종 완료되어 RCS 메시지를 발송할 수 있는 상태입니다.\n\n- 반려 : 검수 시\
            \ 승인이 불가하여 반려된 상태입니다. 반려된 템플릿은 수정 후 다시 승인요청 할 수 있습니다.\n\n- 검수완료 : RCS\
            \ Biz Center에서 검수 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를 발송할 수 없습니다.\n\
            \n- 승인대기(수정) : 승인된 템플릿 변경 승인요청 직후 검수 이전 상태입니다.\n  \n  \n- 검수시작(수정) : 승\
            인된 템플릿 변경으로 승인요청된 템플릿 검수가 시작된 상태입니다.\n\n- 반려(수정) : 승인된 템플릿 변경 검수 처리 결과\
            \ 반려된 상태입니다.\n\n- 검수완료(수정) : 승인된 브랜드 변경 검수 승인은 되었으나 이통3사 정보 등록이 완료되지 않\
            은 상태입니다.\n  현재 상태에서는 이통사에 따라 단말 브랜드 홈 정보가 다를 수 있습니다.\n"
          enum:
          - 승인대기
          - 검수시작
          - 승인
          - 반려
          - 검수완료
          - 저장
          - 승인대기(수정)
          - 검수시작(수정)
          - 반려(수정)
          - 검수완료(수정)
          type: string
        approvalReason:
          description: 승인 사유
          type: string
        registerDate:
          description: 템플릿 등록일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        approvalDate:
          description: 템플릿 승인일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 템플릿 수정일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        registerId:
          description: 템플릿 등록 계정 ID
          maximum: 20
          type: string
        updateId:
          description: 템플릿 수정 계정 ID
          maximum: 20
          type: string
    MessagebaseInfo:
      allOf:
      - $ref: '#/components/schemas/Messagebase'
      description: |
        Messagebase 객체입니다.
      example:
        productCode: ""
        policyInfo:
          buttonsAllowed: true
          maxButtonCount: 9
          adHeaderAllowed: true
          maxDescriptionSize: 3
          cardCount: 2
          maxTitleSize: 7
          adBodyAllowed: true
          maxMediaSize: 2
        cardType: ""
        inputText: ""
        files: ""
        formattedString:
          RCSMessage:
            trafficType: ""
        agencyId: ""
        attribute: ""
        params: ""
        guideInfo:
          imageWidth: 5
          maxDescriptionSize: 1
          maxLineCount: 0
          maxDisplayText: 6
          detailInfo:
            summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
              가이드 정보입니다.
            charactersPerLine:
              buttonName: 17
              description: 18
              title: 16
            combinations:
            - condition:
                mediaPhase: Tall
                numberOfButtons: 1
                numberOfLinesOnTitle: 2
              numberOfLinesOnDescription: 5
            - condition:
                mediaPhase: Tall
                numberOfButtons: 1
                numberOfLinesOnTitle: 2
              numberOfLinesOnDescription: 5
            releaseDate: 2020-07-31T00:00:00.000+09
            productCardType: Standalone Media Top Tall
          imageHeight: 5
        spec: ""
      properties:
        productCode:
          description: 메시지 상품 종류 구분값입니다.
          enum:
          - sms
          - lms
          - mms
          - tmplt
        spec:
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
          enum:
          - richcard
          - openrichcard
        cardType:
          description: |
            카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [공통템플릿]<br> - standalone<br> - standalone horizontal<br> - standalone media top - carousel<br> - carousel medium<br> - carousel small<br> - Highlighted Image n Title<br> - Highlighted Image<br> - Thumbnail<br> - SNS<br> [템플릿]<br> - Description<br> - Cell<br> - Free<br>
          maximum: 64
        agencyId:
          description: "템플릿을 대행사가 등록한 경우, 등록한 대행사ID 입니다."
          maximum: 20
        inputText:
          description: "정보성 텍스트 템플릿 서술(Description)인 경우, 템플릿 등록시 입력한 원본 문장을 제공합니다."
          maximum: 300
        attribute:
          description: |
            통계용 속성 정보 제공 목적의 필드이며, messagebaseform의  [bizCondition, bizCategory, bizService] 로 구성된 배열입니다.
          items: {}
          maximum: 256
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
        params:
          items:
            $ref: '#/components/schemas/ParamInfo'
        files:
          items:
            $ref: '#/components/schemas/TemplateFileInfo'
        formattedString:
          $ref: '#/components/schemas/RCSMessage'
      required:
      - productCode
    MessagebaseForm:
      description: MessagebaseForm 기본 정보입니다.
      example:
        bizCondition:
        - bizCondition
        - bizCondition
        updateDate: 2020-03-12T06:22:55.418+09
        messagebaseformId: messagebaseformId
        bizCategory: bizCategory
        formName: formName
        cardType: cardType
        bizService: bizService
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        messagebaseformId:
          description: 템플릿 양식 ID 입니다.
          maximum: 40
          type: string
        formName:
          description: 템플릿 양식명 입니다.
          maximum: 40
          type: string
        cardType:
          description: |
            카드종류를 구분합니다. 향후 추가될 수 있습니다.<br> [openrichcard]<br> - Description<br> - Cell<br> - Free<br>
          maximum: 64
          type: string
        bizCondition:
          description: |
            양식을 사용할 수 있는 대상 업태의 목록입니다.
          items:
            type: string
          type: array
        bizCategory:
          description: |
            Description, Cell의 유형그룹 입니다.<br> 예)<br> -  일반<br> -  금융<br> -  유통/커머스<br> -  교통<br> -  엔터테인먼트<br> -  IT서비스<br> -  공공<br> -  타이틀 자유형<br>
          maximum: 20
          type: string
        bizService:
          description: |
            Description, Cell의 세부 유형 입니다.<br> 예)<br> -  승인<br> -  입금<br> -  출금<br> -  출고<br> -  주문<br> -  배송<br> -  예약<br> -  회원가입<br> -  인증<br> -  타이틀 자유형<br>
          maximum: 20
          type: string
        registerDate:
          description: 템플릿 양식 등록일시 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 템플릿 양식 수정일시 입니다.
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
      required:
      - formName
      - messagebaseformId
    MessagebaseFormInfo:
      allOf:
      - $ref: '#/components/schemas/MessagebaseForm'
      description: |
        템플릿 생성을 위한 양식 정보 객체입니다.
      properties:
        mediaUrl:
          description: |
            이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
          items:
            $ref: '#/components/schemas/MediaUrl_inner'
          type: array
        productCode:
          description: 메시지 상품종류 구분값입니다.
          enum:
          - sms
          - lms
          - mms
          - tmplt
        spec:
          description: |
            양식의 레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
          enum:
          - richcard
          - openrichcard
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
        params:
          items:
            $ref: '#/components/schemas/ParamInfo'
        formattedString:
          $ref: '#/components/schemas/RCSMessage'
    NotiBrand:
      properties:
        notiType:
          type: string
        brandId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'modified': 수정 <br>
          enum:
          - rejected
          - modified
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiContract:
      properties:
        notiType:
          type: string
        corpId:
          type: string
        corpRegNum:
          type: string
        brandId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiChatbot:
      properties:
        notiType:
          type: string
        brandId:
          type: string
        chatbotId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiMessagebaseForm:
      properties:
        notiType:
          type: string
        messagebaseformId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiTemplate:
      properties:
        notiType:
          type: string
        brandId:
          type: string
        messagebaseformId:
          type: string
        messagebaseId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiFormat:
      properties:
        notiType:
          default: format
          type: string
        messagebaseformId:
          type: string
        messagebaseId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'rejected': 반려 <br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiAgencyKey:
      description: 대행사 키가 재발급된 경우에 한하여 전달됩니다. 삭제 시에는 전송되지 않습니다.
      properties:
        notiType:
          default: agencykey
          description: webhook 알림 타입 구분값 입니다.
          type: string
        agencyKey:
          description: |
            재발급으로 새로 생성된 agencyKey 입니다.
          type: string
        method:
          description: |
            대상의 CRUD 정보를 제공합니다.<br> 'created': 재발급으로 새로운 agencyKey가 생성된 경우 표시됩니다. <br>
          enum:
          - created
          type: string
        date:
          description: |
            재발급 일시입니다..
          example: 2023-01-12T06:22:55.418+09
          type: string
        userName:
          description: |
            대행사 키를 재발급한 대행사 담당자의 이름입니다.
          type: string
      required:
      - agencyKey
      - notiType
    NotiBidirectional:
      example:
        notiType: appointment
        value:
          chatbotId: chatbotId
          corpRegNum: corpRegNum
          brandKey: brandKey
          agencyCorpRegNum: agencyCorpRegNum
          brandId: brandId
          agencyId: agencyId
      properties:
        notiType:
          description: |
            + appointment: 일반 대행사가 양방향 서비스 중계사 지정 알림
            + registration: 양방향 대화방 등록 알림
            + subscription: 대화방메뉴 사용 청약 확인 요청
            + persistentmenu: 대화방메뉴 등록 알림
          enum:
          - appointment
          - registration
          - subscription
          - persistentmenu
          type: string
        value:
          $ref: '#/components/schemas/NotiBidirectional_value'
      required:
      - notiType
    NotiAutoReplyMsg:
      properties:
        notiType:
          default: autoreplymsg
          type: string
        brandId:
          type: string
        autoReplyMsgId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'created': 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiFormatBr:
      properties:
        notiType:
          default: formatbr
          type: string
        brandId:
          type: string
        messagebaseId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'created': 승인 또는 신규등록 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    NotiLogo:
      properties:
        notiType:
          default: logo
          type: string
        brandId:
          type: string
        fileId:
          type: string
        method:
          description: |
            대상별 처리 정보를 제공합니다.<br> 'created': 승인 또는 신규등록 <br> 'rejected': 반려 <br> 'modified': 수정 <br> 'deleted': 삭제 <br>
          enum:
          - rejected
          - created
          - modified
          - deleted
          type: string
        reason:
          description: |
            "method가 rejected 인 경우 사유를 제공합니다."
          type: string
      required:
      - notiType
    MediaUrl:
      description: |
        이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
      items:
        $ref: '#/components/schemas/MediaUrl_inner'
      type: array
    Pagination:
      description: 전체 건수와 페이징 조건을 제공합니다.
      example:
        total: 6
        offset: 0
        limit: 596
      properties:
        total:
          description: 전체 건수 입니다.
          type: integer
        offset:
          default: 0
          description: 조회 기준 위치(기준 ROW) 입니다.
          minimum: 0
          type: integer
        limit:
          default: 100
          description: 페이지 당 조회 건수 입니다.
          maximum: 1000
          minimum: 1
          type: integer
    Links:
      description: |
        이전/다음 페이지 링크를 제공합니다. offset을 0이 아닌 limit보다 작은 양수값으로 설정한 경우 prev 는 null로 응답됩니다.
      example:
        next: next
        prev: prev
      properties:
        prev:
          description: 이전 페이지 URL 입니다.
          type: string
        next:
          description: 다음 페이지 URL 입니다.
          type: string
    DetailInfo:
      description: |
        리치카드 메시지 상품별 1라인당 글자수, 타이틀 라인수 및 버튼 수에 따라 메시지가 잘려 보이지 않는 최대 라인수 정보를 제공합니다. 메시지가 수신된 단말에 따라 상이할 수 있으나 리치카드 RCS메시지 발송 시 권장사항으로 참고하시기 바랍니다. LMS와 MMS 12종 총 13종에 대해 개별 제공됩니다.
      example:
        summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한 가이드
          정보입니다.
        charactersPerLine:
          buttonName: 17
          description: 18
          title: 16
        combinations:
        - condition:
            mediaPhase: Tall
            numberOfButtons: 1
            numberOfLinesOnTitle: 2
          numberOfLinesOnDescription: 5
        - condition:
            mediaPhase: Tall
            numberOfButtons: 1
            numberOfLinesOnTitle: 2
          numberOfLinesOnDescription: 5
        releaseDate: 2020-07-31T00:00:00.000+09
        productCardType: Standalone Media Top Tall
      properties:
        productCardType:
          description: 상품 카드 종류
          example: Standalone Media Top Tall
          type: string
        releaseDate:
          description: 정보 제공 일자(내용 수정시 일시 변경)
          example: 2020-07-31T00:00:00.000+09
          type: string
        summary:
          description: 요약 정보
          example: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한 가이드
            정보입니다.
          type: string
        charactersPerLine:
          $ref: '#/components/schemas/DetailInfo_charactersPerLine'
        combinations:
          description: 디스크립션 권장 라인수 조합
          items:
            $ref: '#/components/schemas/DetailInfo_combinations_inner'
          type: array
    RegPrivilegeInfo:
      description: |
        브랜드의 권한 정보 객체입니다.
      properties:
        privilegeType:
          description: "권한은 다음과 같이 구분됩니다.  \n\n  - Manager : 대표운영자  \n  - SubManager\
            \ : 운영자(기업의 마스터 또는 매니저)\n  - Agency : 운영자(대행사)\n"
          enum:
          - Agency
          - SubManager
          - Manager
          type: string
        id:
          description: |
            마스터, 매니저 또는 대행사의 ID입니다.
          maximum: 20
          type: string
      required:
      - id
      - privilegeType
    PrivilegeInfo:
      description: |
        브랜드의 권한 정보 객체입니다.
      example:
        id: id
        privilegeType: Agency
        status: Ok
      properties:
        privilegeType:
          description: "권한은 다음과 같이 구분됩니다. \n- Manager : 브랜드 관리자(=마스터)\n- SubManager\
            \ : 브랜드 부관리자(=마스터, 매니저)\n- Agency : 브랜드 대행사\n"
          enum:
          - Agency
          - SubManager
          - Manager
          type: string
        id:
          description: |
            마스터, 매니저 또는 대행사의 ID입니다.
          maximum: 20
          type: string
        status:
          description: "권한 처리 상태를 표시합니다. \n- Waiting : RCS Biz Center 웹에서 제공되는 기능인\
            \ '브랜드 운영권한 신청'을 이용하여 신청 후 대기 브랜드 관리자의 승인을 대기 중인 상태입니다.\n  Waiting 상태의\
            \ 대상은 POST를 이용하여 등록하면 승인이 되고 Ok 상태로 변경됩니다.\n\n- Processing : 권한 정보를 이통\
            3사에 동기화 중인 경우 processing 상태로 표시됩니다.\n  Processing 상태가 짧은 시간 동안 발생할 수 있\
            으며 지속될 경우 RCS Biz Center에 문의하시기 바랍니다. \n\n- Ok : 권한 상태가 정상적인 경우 표시됩니다\
            .\n"
          enum:
          - Ok
          - Processing
          - Waiting
          type: string
      required:
      - id
      - privilegeType
      - status
    RCSMessage:
      description: |
        GSMA 및 TTA RCS 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.
      example:
        RCSMessage:
          trafficType: ""
      properties:
        RCSMessage:
          $ref: '#/components/schemas/RCSMessage_RCSMessage'
    RegRCSMessage:
      description: |
        TTA RCS 오픈리치카드 규격이며 JSON 형식으로 정의된 템플릿의 레이아웃 데이터입니다.
      example:
        RCSMessage:
          trafficType: ""
      properties:
        RCSMessage:
          $ref: '#/components/schemas/RegRCSMessage_RCSMessage'
    RegAutoReplyMsgInfo:
      description: |
        자동응답메시지 등록 정보입니다.
      example:
        buttons:
        - suggestions:
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: set_by_chatbot_open_url
          - action:
              urlAction:
                openUrl:
                  url: https://www.google2.com
              displayText: Open website or deep link
              postback:
                data: set_by_chatbot_open_url_2
        - {}
        - suggestions:
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
        autoReplyMsgName: autoReplyMsgName
        body:
          title1: 제목
          description1: 본문 텍스트
          media1: file1.jpg
          title2: 제목 2번째 카드
          description2: 본문 텍스트
          media2: file2.jpg
          title3: 제목 3번째 카드
          description3: 본문 텍스트
          media3: image1.jpg
        messagebaseId: messagebaseId
        copyAllowed: true
        chipList:
        - action:
            urlAction:
              openUrl:
                url: https://www.naver.com
            displayText: Open website
            postback:
              data: postbackId:111
        - action:
            urlAction:
              openUrl:
                url: https://www.google.com
            displayText: Open website or deep link
            postback:
              data: postbackId:222
        - reply:
            autoReplyMsgId: ARMLKmnxenL40cm
            postback:
              data: ""
            displayText: 다른 자동응답 메세지 연결
        - reply:
            postback:
              data: ""
            displayText: 챗봇 연결
      properties:
        autoReplyMsgName:
          description: 자동응답메시지 명을 지정합니다.
          maximum: 100
          type: string
        messagebaseId:
          description: "메시지 상품코드 chat에 속하는 messagebase ID를 지정합니다.  \n제공되는 productcode\
            \ = chat 해당 messagebaseId를 지정하여 사용 가능하나 다음과 같이 처리 됩니다.  \n\n  + 기본 말풍선\
            (SCS00000), 텍스트 카드(SCL00000)는 기본 말풍선(SCS00000)으로 처리  \n  + 세로형_Meduim(SCwThM00),\
            \ 세로형_Tall(SCwThT00)은 세로형_Meduim(SCwThM00)으로 처리\n  + 슬라이드형_Medium, 슬라이\
            드형_Small은 슬라이드형_Medium으로 처리  \n    - 슬라이드형 Medium ID: CCwMhM0200 ~ CCwMhM0600\
            \  \n    \n지정된 ID에만 존재하는 필드가 전환되는 ID에 존재하지 않는 경우 무시됩니다.  \n예를 들어, 텍스트\
            \ 카드로 등록시 title을 입력하더라도 기본 말풍선은 title을 지원하지 않으므로 title이 적용되지 않습니다.\n"
          maximum: 40
          type: string
        copyAllowed:
          default: true
          description: "단말에서 메시지 복사 가능 여부를 지정합니다.  \n\n  + true : 복사 가능\n  + false\
            \ : 복사 불가\n"
          type: boolean
        body:
          description: "이통 발송규격 중 /message API의 body object와 동일한 방식으로 값을 지정합니다.  \n"
          example:
            title1: 제목
            description1: 본문 텍스트
            media1: file1.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: file2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: image1.jpg
          type: object
        buttons:
          description: "자동응답메시지에 버튼을 등록합니다.\n지원하는 action 유형은 다음과 같습니다.  \n\n  + urlAction\
            \ : 기본 브라우저에서 웹페이지 링크  \n  + localBrowserAction : 채팅+ 내부 브라우저에서 웹페이지 표\
            시\n  + mapAction : 지도 상의 특정 위치 표시 또는 현재 위치 공유 \n  + calendarAction : 캘\
            린더에 일정 공유  \n  + clipboardAction : 클립보드로 복사  \n  + composeAction : 지정\
            \ 대화방에 메시지 작성  \n  + dialerAction : 전화걸기  \n  + reply : 다른 자동응답메시지 연결\
            , 챗봇응답\n\n다른 자동응답메시지 연결 시에는 reply JSON object 내에 autoReplyMsgId 필드에 자동\
            응답메시지ID를 지정하며, postback.data는 자동할당 됩니다.  \n"
          example:
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google2.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url_2
          - {}
          - suggestions:
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ""
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ""
                displayText: 챗봇 연결
          items:
            $ref: '#/components/schemas/RegAutoReplyMsgInfo_buttons_inner'
          type: array
        chipList:
          description: "자동응답메시지에 칩리스트를 지정합니다. 지원하는 action 유형은 다음과 같습니다.  \n\n  + urlAction\
            \ : 기본 브라우저에서 웹페이지 링크  \n  + localBrowserAction : 채팅+ 내부 브라우저에서 웹페이지 표\
            시\n  + mapAction : 지도 상의 특정 위치 표시 또는 현재 위치 공유 \n  + calendarAction : 캘\
            린더에 일정 공유  \n  + clipboardAction : 클립보드로 복사  \n  + composeAction : 지정\
            \ 대화방에 메시지 작성  \n  + dialerAction : 전화걸기  \n  + reply : 다른 자동응답메시지 연결\
            , 챗봇응답\n\n다른 자동응답메시지 연결 시에는 reply JSON object 내에 autoReplyMsgId 필드에 자동\
            응답메시지ID를 지정하며, postback.data는 자동할당 됩니다.  \n"
          example:
          - action:
              urlAction:
                openUrl:
                  url: https://www.naver.com
              displayText: Open website
              postback:
                data: postbackId:111
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: postbackId:222
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
          items:
            $ref: '#/components/schemas/AutoReplyMsgActions'
          type: array
      required:
      - autoReplyMsgName
      - body
      - messagebaseId
    AutoReplyMsg:
      description: |
        자동응메시지 기본 정보입니다.
      example:
        updateId: updateId
        updateDate: 2020-03-12T06:22:55.418+09
        approvalResult: 등록완료
        registerId: registerId
        brandId: brandId
        autoReplyMsgName: autoReplyMsgName
        autoReplyMsgId: autoReplyMsgId
        messagebaseId: messagebaseId
        registerDate: 2020-03-12T06:22:55.418+09
      properties:
        brandId:
          maximum: 13
          type: string
        autoReplyMsgId:
          maximum: 40
          type: string
        autoReplyMsgName:
          maximum: 100
          type: string
        messagebaseId:
          maximum: 40
          type: string
        approvalResult:
          description: "자동응답메시지 등록 상태입니다. 자동응답메시지는 운영자 검수 없이 자동 등록됩니다.  \n  \n  -\
            \ 등록완료 : 이통3사에 자동응답메시지가 정상 등록된 상태입니다.                \n  - 저장 : RBC 웹에\
            서 저장만 했을 경우 상태이며 별도 등록요청을 해야 합니다.   \n  - 처리중 : 이통 3사 등록 중 에러로 인해 최종 완\
            료가 되지 않은 상태로 수정이나 삭제가 불가능한 상태입니다.\n  \n"
          enum:
          - 등록완료
          - 저장
          - 처리중
          type: string
        registerDate:
          description: 등록일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 수정일시
          example: 2020-03-12T06:22:55.418+09
          format: date-time
          type: string
        registerId:
          description: 등록 계정 ID
          maximum: 20
          type: string
        updateId:
          description: 수정 계정 ID
          maximum: 20
          type: string
      required:
      - autoReplyMsgId
      - autoReplyMsgName
      - brandId
      - messagebaseId
    AutoReplyMsgInfo:
      allOf:
      - $ref: '#/components/schemas/AutoReplyMsg'
      description: |
        자동응메시지 상세 정보입니다.
      example:
        buttons:
        - suggestions:
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: set_by_chatbot_open_url
          - action:
              urlAction:
                openUrl:
                  url: https://www.google2.com
              displayText: Open website or deep link
              postback:
                data: set_by_chatbot_open_url_2
        - {}
        - suggestions:
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
        body:
          title1: 제목
          description1: 본문 텍스트
          media1: maapfile://sample.jpg
          title2: 제목 2번째 카드
          description2: 본문 텍스트
          media2: maapfile://sample_2.jpg
          title3: 제목 3번째 카드
          description3: 본문 텍스트
          media3: maapfile://sample_3.jpg
        copyAllowed: ""
        chipList:
        - action:
            urlAction:
              openUrl:
                url: https://www.naver.com
            displayText: Open website
            postback:
              data: postbackId:111
        - action:
            urlAction:
              openUrl:
                url: https://www.google.com
            displayText: Open website or deep link
            postback:
              data: postbackId:222
        - reply:
            autoReplyMsgId: ARMLKmnxenL40cm
            postback:
              data: ""
            displayText: 다른 자동응답 메세지 연결
        - reply:
            postback:
              data: ""
            displayText: 챗봇 연결
      properties:
        copyAllowed:
          default: true
        body:
          example:
            title1: 제목
            description1: 본문 텍스트
            media1: maapfile://sample.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: maapfile://sample_2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: maapfile://sample_3.jpg
        buttons:
          example:
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google2.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url_2
          - {}
          - suggestions:
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ""
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ""
                displayText: 챗봇 연결
          items:
            properties:
              suggestions:
                items:
                  $ref: '#/components/schemas/AutoReplyMsgActions'
        chipList:
          example:
          - action:
              urlAction:
                openUrl:
                  url: https://www.naver.com
              displayText: Open website
              postback:
                data: postbackId:111
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: postbackId:222
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
          items:
            $ref: '#/components/schemas/AutoReplyMsgActions'
      required:
      - body
    AutoReplyMsgFileInfo:
      description: 자동응답메시지용 파일 등록 정보입니다.
      example:
        fileName: fileName
        url: url
        fileId: fileId
      properties:
        fileId:
          description: 등록된 파일의 ID 입니다.
          maximum: 64
          type: string
        url:
          description: 등록된 파일의 URL 정보 입니다.
          maximum: 128
          type: string
        fileName:
          description: 등록한 파일의 이름입니다.
          maximum: 256
          type: string
    RegPersistentMenu_L0:
      description: 대화방메뉴 최상위 메뉴 버튼 정보입니다.
      properties:
        type:
          description: "대화방 메뉴를 구성하는 메뉴버튼의 유형입니다.\n- menu : 하위메뉴를 갖는 메뉴 버튼\n- reply\
            \ : 응답 메뉴 버튼(챗봇응답 or 자동메시지)\n- action : RCS 액션 지정 버튼 \n"
          enum:
          - menu
          - reply
          - action
          type: string
        title:
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
          type: string
        ordNo:
          description: |
            메뉴버튼 순서 값입니다.
          type: number
        autoReplyMsgId:
          description: |
            type이 'reply' 인 경우, 자동응답메시지ID 지정 시 자동응답메시지가 할당됩니다. 자동응답메시지ID를 지정하지 않은 경우에는 챗봇응답으로 할당됩니다.
          type: string
        actionType:
          description: |
            type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다. 2022년 7월 28일 대화방 메뉴 정책 변경으로 dialerAction만 지정할 수 있습니다.
          enum:
          - dialerAction
          type: string
        action:
          $ref: '#/components/schemas/RegPersistentMenu_L0_action'
        subMenu:
          items:
            $ref: '#/components/schemas/RegPersistentMenu_L1'
          type: array
      required:
      - ordNo
      - title
      - type
    PersistentMenu:
      description: 대화방메뉴 정보입니다.
      example:
        actionType: dialerAction
        ordNo: 6.027456183070403
        upPostbackId: upPostbackId
        action:
          dialerAction:
            dialPhoneNumber:
              phoneNumber: phoneNumber
              fallbackUrl: https://openapi-generator.tech
        postbackId: postbackId
        autoReplyMsgId: autoReplyMsgId
        type: reply
        title: title
      properties:
        postbackId:
          description: "메뉴에 자동 부여되는 고유ID이며, RBC 자동할당하므로 별도 입력이 불가합니다."
          maximum: 40
          type: string
        upPostbackId:
          description: "현재 메뉴가 속한 상위 메뉴 버튼의 Postback ID, RBC 자동할당하므로 별도 입력이 불가합니다."
          maximum: 40
          type: string
        type:
          description: "대화방 메뉴를 구성하는 메뉴버튼의 유형입니다.  \nRBC 개편 이후 하위메뉴(type menu)는 허용\
            하지 않습니다.  \n\n  + menu : 하위메뉴를 갖는 메뉴 버튼 (deprecated)  \n  + reply : 응답\
            \ 메뉴 버튼(챗봇응답 or 자동메시지)  \n  + feed : 브랜드 소식 연결 버튼\n  + action : RCS 액션\
            \ 지정 버튼 \n"
          enum:
          - reply
          - feed
          - action
          type: string
        title:
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
          type: string
        ordNo:
          description: |
            메뉴버튼 순서 값입니다.
          type: number
        autoReplyMsgId:
          description: |
            type이 'reply' 인 경우, 자동응답메시지ID 지정 시 자동응답메시지가 할당됩니다. 자동응답메시지ID를 지정하지 않은 경우에는 챗봇응답으로 할당됩니다.
          type: string
        actionType:
          description: |
            type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다. 2022년 7월 28일 대화방 메뉴 정책 변경으로 dialerAction만 지정할 수 있습니다.
          enum:
          - dialerAction
          type: string
        action:
          $ref: '#/components/schemas/RegPersistentMenu_L0_action'
      required:
      - ordNo
      - title
      - type
    RegPersistentMenu_L1:
      description: 대화방메뉴 버튼 정보입니다.
      properties:
        type:
          description: "대화방 메뉴를 구성하는 메뉴 버튼의 유형입니다.\n\n  - reply : 응답 메뉴 버튼(챗봇응답 or\
            \ 자동메시지)\n  - feed : 브랜드 소식 연결 버튼\n  - action : RCS 액션 지정 버튼 \n"
          enum:
          - reply
          - feed
          - action
          type: string
        title:
          description: |
            메뉴버튼에 표시되는 메뉴명입니다.
          maximum: 25
          type: string
        ordNo:
          description: |
            메뉴버튼 순서 값입니다.
          type: number
        autoReplyMsgId:
          description: |
            type이 'reply' 인 경우, 자동응답메시지 ID 지정 시 자동응답메시지가 할당됩니다.   자동응답메시지 ID를 지정하지 않은 경우에는 챗봇응답으로 할당됩니다.
          type: string
        feedId:
          description: "type이 'feed' 인 경우, 브랜드 소식 ID 지정 시 해당 소식이 연결됩니다.  \n"
          type: string
        actionType:
          description: "type이 'action'인 경우, 사용할 RCS 액션 유형을 지정합니다.  \n\n  - dialerAction\
            \ : 전화연결  \n  - urlAction : 웹사이트 연결\n"
          enum:
          - dialerAction
          - urlAction
          type: string
        action:
          $ref: '#/components/schemas/RegPersistentMenu_L1_action'
      required:
      - ordNo
      - title
      - type
    RegPersistentMenu:
      properties:
        menu:
          items:
            $ref: '#/components/schemas/RegPersistentMenu_L1'
          type: array
    PausePersistentMenu:
      example:
        isPause: true
      properties:
        isPause:
          default: true
          description: 대화방메뉴 중지 여부
          type: boolean
    PersistentMenuStatData:
      description: 대화방메뉴 통계 Data
      example:
        statDate: 20220505
        chatbotId: chatbotId
        menuList:
        - actionType: urlAction
          subList:
          - actionType: urlAction
            cardNum: 6
            clickCount: 5
            reactionType: NA
            buttonNum: 1
            postbackId: postbackId
            menuType: action
            title: title
            subActionList:
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            messagebaseId: CCwMhM0200
          - actionType: urlAction
            cardNum: 6
            clickCount: 5
            reactionType: NA
            buttonNum: 1
            postbackId: postbackId
            menuType: action
            title: title
            subActionList:
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            messagebaseId: CCwMhM0200
          clickCount: 0
          postbackId: postbackId
          menuType: action
          title: title
        - actionType: urlAction
          subList:
          - actionType: urlAction
            cardNum: 6
            clickCount: 5
            reactionType: NA
            buttonNum: 1
            postbackId: postbackId
            menuType: action
            title: title
            subActionList:
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            messagebaseId: CCwMhM0200
          - actionType: urlAction
            cardNum: 6
            clickCount: 5
            reactionType: NA
            buttonNum: 1
            postbackId: postbackId
            menuType: action
            title: title
            subActionList:
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            - actionType: urlAction
              clickCount: 5
              postbackId: postbackId
              title: title
            messagebaseId: CCwMhM0200
          clickCount: 0
          postbackId: postbackId
          menuType: action
          title: title
        corpRegNum: 1234567890
        corpId: CO.06XDA87k2q
        brandId: BR.seCbCPN6U1
      properties:
        statDate:
          description: 통계일자
          example: 20220505
          maximum: 8
          type: string
        corpId:
          description: RCS Biz Center에 등록된 기업ID
          example: CO.06XDA87k2q
          maximum: 13
          type: string
        corpRegNum:
          description: 기업사업자 등록 번호
          example: 1234567890
          maximum: 10
          type: string
        brandId:
          description: 브랜드 ID
          example: BR.seCbCPN6U1
          maximum: 13
          type: string
        chatbotId:
          description: 대화방 ID
          maximum: 15
          type: string
        menuList:
          description: 대화방메뉴 별 상세 Data
          items:
            $ref: '#/components/schemas/MenuStatData'
          type: array
    MenuStatData:
      description: 대화방메뉴 별 상세 Data Object
      example:
        actionType: urlAction
        subList:
        - actionType: urlAction
          cardNum: 6
          clickCount: 5
          reactionType: NA
          buttonNum: 1
          postbackId: postbackId
          menuType: action
          title: title
          subActionList:
          - actionType: urlAction
            clickCount: 5
            postbackId: postbackId
            title: title
          - actionType: urlAction
            clickCount: 5
            postbackId: postbackId
            title: title
          messagebaseId: CCwMhM0200
        - actionType: urlAction
          cardNum: 6
          clickCount: 5
          reactionType: NA
          buttonNum: 1
          postbackId: postbackId
          menuType: action
          title: title
          subActionList:
          - actionType: urlAction
            clickCount: 5
            postbackId: postbackId
            title: title
          - actionType: urlAction
            clickCount: 5
            postbackId: postbackId
            title: title
          messagebaseId: CCwMhM0200
        clickCount: 0
        postbackId: postbackId
        menuType: action
        title: title
      properties:
        postbackId:
          description: 메뉴에 할당된 postbackId
          maximum: 40
          type: string
        menuType:
          description: |
            메뉴 할당된 액션 구분
            - action: RCS 액션 버튼(urlAction, mapAction, ...) 메뉴
            - reply: 기본응답 메뉴
            - autoreply: 자동응답 메뉴
            - menu: 하위 메뉴를 갖는 상위 메뉴
          enum:
          - action
          - reply
          - autoreply
          - menu
          maximum: 40
          type: string
        actionType:
          description: "menuType이 action인 경우 할당된 RCS 액션 유형  \n이미지 영역에 동영상 스트리밍을 설정\
            한 경우 iframeplayB로 별도 구분(현재 자동응답메시지는 iframepalyB 설정 미지원)\n"
          enum:
          - urlAction
          - dialerAction
          - mapAction
          - calendarAction
          - composeAction
          - clipboardAction
          - iframeplayB
          type: string
        title:
          description: |
            버튼명, 이미지는 image_1, image_2, ..., image_# 형식으로 제공되며, 동영상 스트리밍의 경우는 iframeplayB_1, iframeplayB_2, ..., iframeplayB_# 형식으로 제공
          maximum: 40
          type: string
        clickCount:
          description: |
            menuType이 action, reply, autoreply 인 경우 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
          type: integer
        subList:
          description: 하위 메뉴 또는 자동응답메시지 상의 버튼 상세 Data
          items:
            $ref: '#/components/schemas/SubStatData'
          type: array
      required:
      - menuType
      - postbackId
      - title
    SubStatData:
      description: 하위 메뉴 또는 자동응답메시지 버튼 별 상세 Data Object
      example:
        actionType: urlAction
        cardNum: 6
        clickCount: 5
        reactionType: NA
        buttonNum: 1
        postbackId: postbackId
        menuType: action
        title: title
        subActionList:
        - actionType: urlAction
          clickCount: 5
          postbackId: postbackId
          title: title
        - actionType: urlAction
          clickCount: 5
          postbackId: postbackId
          title: title
        messagebaseId: CCwMhM0200
      properties:
        postbackId:
          description: 하위 메뉴 또는 버튼에 할당된 postbackId
          maximum: 40
          type: string
        menuType:
          description: |
            하위 메뉴에 할당된 액션 구분
            - action: RCS 액션 버튼(urlAction, mapAction, ...) 메뉴
            - reply: 기본응답 메뉴
            - autoreply: 자동응답 메뉴
          enum:
          - action
          - reply
          - autoreply
          maximum: 40
          type: string
        messagebaseId:
          default: NA
          description: "menuType이 autoreply인 경우, 자동응답메시지의 messagebaseId(식별 불가시 NA)"
          example: CCwMhM0200
          maximum: 40
          type: string
        reactionType:
          default: NA
          description: 고객이 클릭 반응한 대상(messagebaseId 식별 불가시 NA)
          enum:
          - NA
          - button
          - chipList
          - image
          maximum: 20
          type: string
        cardNum:
          default: 0
          description: "menuType이 autoreply인 경우, 이미지 또는 버튼이 있는 card 의 위치(식별 불가시 0)\
            \  \n\n  - ex1) Standalone 인 경우 1\n  - ex2) Card 4장 Carousel 1,2,3,4 중\
            \ 버튼이 위치한 카드 번호\n  - ex3) 칩리스트인 경우 1\n"
          type: integer
        buttonNum:
          default: 0
          description: "menuType이 autoreply인 경우, 이미지, 칩리스트 또는 버튼의  메시지 내 위치를 나타내는\
            \ 번호(식별 불가시 0)  \n좌에서 우, 위에서 아래로 1부터 번호 부여하며 Carousel은 각 카드별로 1부터 부여\n"
          type: integer
        actionType:
          description: |
            menuType이 action인 경우 할당된 RCS 액션 유형
          enum:
          - urlAction
          - dialerAction
          - mapAction
          - calendarAction
          - composeAction
          - clipboardAction
          type: string
        title:
          description: 메뉴명
          maximum: 40
          type: string
        clickCount:
          description: |
            menuType이 action, reply 인 경우 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
          type: integer
        subActionList:
          description: menuType이 autoReply인 경우 자동응답메시지 상의 상세 버튼 Data
          items:
            $ref: '#/components/schemas/SubActionData'
          type: array
      required:
      - clickCount
      - postbackId
      - title
    SubActionData:
      description: 자동응답메시지 버튼 별 상세 Data Object
      example:
        actionType: urlAction
        clickCount: 5
        postbackId: postbackId
        title: title
      properties:
        postbackId:
          description: 하위 메뉴 또는 버튼에 할당된 postbackId
          maximum: 40
          type: string
        actionType:
          description: |
            자동응답메시지에 할당된 RCS 액션 유형
          enum:
          - urlAction
          - dialerAction
          - mapAction
          - calendarAction
          - composeAction
          - clipboardAction
          type: string
        title:
          description: 버튼명
          maximum: 40
          type: string
        clickCount:
          description: |
            자동응답메시지 내 버튼, 칩리스트 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
          type: integer
      required:
      - actionType
      - clickCount
      - postbackId
      - title
    MessageStatData:
      description: 메시지 발송 읽음 확인 통계 Data
      example:
        statDate: 20220505
        chatbotId: 15225739
        corpRegNum: 1234567890
        corpId: CO.06XDA87k2q
        brandId: BR.seCbCPN6U1
        groupId: groupdId_0001
        deliveredCount: 0
        displayedCount: 6
        messagebaseId: CMwMhM0200
      properties:
        statDate:
          description: 통계일자
          example: 20220505
          maximum: 8
          type: string
        corpId:
          description: RCS Biz Center에 등록된 기업ID
          example: CO.06XDA87k2q
          maximum: 13
          type: string
        corpRegNum:
          description: 기업사업자 등록 번호
          example: 1234567890
          maximum: 10
          type: string
        brandId:
          description: 브랜드 ID
          example: BR.seCbCPN6U1
          maximum: 13
          type: string
        chatbotId:
          description: 대화방 ID
          example: 15225739
          maximum: 15
          type: string
        groupId:
          description: 발송 캠페인 구분 ID
          example: groupdId_0001
          maximum: 20
          type: string
        messagebaseId:
          default: NA
          description: 발송 메시지의 messagebaseId(식별 불가시 NA)
          example: CMwMhM0200
          maximum: 40
          type: string
        deliveredCount:
          description: 발송 건수
          type: integer
        displayedCount:
          description: 읽음확인 건수
          type: integer
    MessageButtonStatData:
      description: 메시지 버튼 클릭 카운트
      example:
        statDate: 20220505
        chatbotId: 15225739
        cardNum: 0
        corpRegNum: 1234567890
        corpId: CO.06XDA87k2q
        reactionType: NA
        brandId: BR.seCbCPN6U1
        groupId: groupdId_0001
        buttonList:
        - actionType: urlAction
          clickCount: 1
          buttonNum: 6
          title: title
        - actionType: urlAction
          clickCount: 1
          buttonNum: 6
          title: title
        messagebaseId: CMwMhM0200
      properties:
        statDate:
          description: 통계일자
          example: 20220505
          maximum: 8
          type: string
        corpId:
          description: RCS Biz Center에 등록된 기업ID
          example: CO.06XDA87k2q
          maximum: 13
          type: string
        corpRegNum:
          description: 기업사업자 등록 번호
          example: 1234567890
          maximum: 10
          type: string
        brandId:
          description: 브랜드 ID
          example: BR.seCbCPN6U1
          maximum: 13
          type: string
        chatbotId:
          description: 대화방 ID
          example: 15225739
          maximum: 15
          type: string
        groupId:
          description: 발송 캠페인 구분 ID
          example: groupdId_0001
          maximum: 20
          type: string
        messagebaseId:
          default: NA
          description: 발송 메시지의 messagebaseId(식별 불가시 NA)
          example: CMwMhM0200
          maximum: 40
          type: string
        reactionType:
          default: NA
          description: 고객이 클릭 반응한 대상(messagebaseId 식별 불가시 NA)
          enum:
          - NA
          - button
          - chipList
          - image
          maximum: 20
          type: string
        cardNum:
          default: 0
          description: "클릭한 이미지 또는 버튼이 있는 card 의 위치(식별 불가시 0)  \n\n  - ex1) Standalone\
            \ 인 경우 1\n  - ex2) Card 4장 Carousel 1,2,3,4 중 버튼이 위치한 카드 번호\n  - ex3)\
            \ 칩리스트인 경우 1  \n"
          type: integer
        buttonList:
          description: 발송 캠페인 메시지에 포함된 RCS 액션 버튼 통계 Data
          items:
            $ref: '#/components/schemas/ButtonStatData'
          type: array
    ButtonStatData:
      description: RCS 액션 버튼 통계 Object
      example:
        actionType: urlAction
        clickCount: 1
        buttonNum: 6
        title: title
      properties:
        buttonNum:
          default: 0
          description: "이미지, 칩리스트 또는 버튼 reactionType별 메시지 내 위치를 나타내는 번호(식별 불가시 0)\
            \  \n\n좌에서 우, 위에서 아래로 1부터 번호 부여하며 Carousel은 각 카드별로 1부터 부여 \n"
          type: integer
        actionType:
          description: |
            메시지 버튼에 할당된 RCS 액션 유형
            이미지 영역에 동영상 스트리밍을 설정한 경우 iframeplayB로 별도 구분
          enum:
          - urlAction
          - dialerAction
          - mapAction
          - calendarAction
          - composeAction
          - clipboardAction
          - iframeplayB
          type: string
        title:
          description: "버튼명, 이미지는 image_1, image_2, ..., image_# 형식으로 제공되며, 동영상 스트\
            리밍의 경우는 iframeplayB_1, iframeplayB_2, ..., iframeplayB_# 형식으로 제공 \n"
          maximum: 40
          type: string
        clickCount:
          description: |
            버튼 클릭수 (1일 내 동일 고객의 버튼 클릭 수 제외)
          type: integer
    TextDecoration:
      description: "StringObject에서 사용되는 text 서식입니다. \n서식을 지원하는 템플릿 상품인 경우 설정이 적용되며\
        , 서식을 지원하지 않는 템플릿 상품에 설정하면 무시됩니다.\n"
      example:
        textSize: 16dp
        textAlignment: textStart
        textStyle: bold
        textColor: '#232323'
      properties:
        textSize:
          description: "글자 크기 지정시 사용합니다. \n숫자 뒤에 단위 dp를 반드시 붙여서 입력하여야 합니다.\n"
          example: 16dp
          maximum: 6
          type: string
        textAlignment:
          description: |
            문장 정렬 지정시 사용합니다. 지원하는 정렬의 종류는 다음과 같습니다.
            - textStart: 왼쪽 정렬
            - center: 중앙 정렬
            - textEnd: 오른쪽 정렬
          enum:
          - textStart
          - center
          - textEnd
          type: string
        textStyle:
          description: 문장의 글자를 굵게 표현할 때 사용합니다.
          enum:
          - bold
          type: string
        textColor:
          description: 문장의 글자 색상을 지정한 색상 값으로 설정합니다. - 색상코드 Hex 표현식
          example: '#232323'
          maximum: 7
          minimum: 7
          type: string
    LineDecoration:
      description: "LineObject에서 사용되는 서식입니다. \n서식을 지원하는 템플릿 상품인 경우 설정이 적용되며, 서식을 지\
        원하지 않는 템플릿 상품에 설정하면 무시됩니다.\n"
      properties:
        height:
          description: "Line의 굵기 지정시 사용합니다. \n숫자 뒤에 단위 dp를 반드시 붙여서 입력하여야 합니다.\n"
          example: 0.3dp
          maximum: 6
          type: string
        background:
          description: Line 색상을 지정한 색상 값으로 설정합니다. - 색상코드 Hex 표현식
          example: '#232323'
          maximum: 7
          minimum: 7
          type: string
    StringObject:
      description: |
        messagebaseform JSON의 ROOT.params[n-1].type이 string 인 경우, 템플릿에 등록할 Text 입력에 사용되는 Object 입니다.
        type 하위 속성인 contentType의 값에 따라 입력 가능 형식에 차이가 있습니다.
      example:
        param: description
        value: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다."
        decoration:
          textSize: 16dp
          textAlignment: textStart
          textStyle: bold
          textColor: '#232323'
      properties:
        param:
          description: "messagebaseform JSON의 ROOT.params[n-1].param 과 동일한 값으로 템플릿\
            \ 구성 Text의 표시 위치에 해당"
          example: description
          maximum: 20
          type: string
        value:
          description: |
            영역에 지정할 Text 형식에 맞게 입력해야 합니다.
            - messagebaseform의 ROOT.params[n-1].contentType이 title, description, cell 인 경우: 고정부와 변수부로 이루어진 문장
            - messagebaseform의 ROOT.params[n-1].contentType이 url인 경우: http(s)://로 시작하는 URL 입력
          example: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니\
            다."
          maximum: 20
          type: string
        decoration:
          $ref: '#/components/schemas/TextDecoration'
      required:
      - param
      - value
    FileObject:
      description: |
        messagebaseform JSON의 ROOT.params[n-1].type이 file 인 경우, 템플릿에 등록할 File 입력에 사용되는 Object 입니다.(현재는 이미지만 지원)
      properties:
        param:
          description: "messagebaseform JSON의 ROOT.params[n-1].param 과 동일한 값으로 템플릿\
            \ 구성 File(이미지)의 표시 위치에 해당합니다."
          example: media
          maximum: 20
          type: string
        value:
          description: "템플릿에 지정할 File(이미지) - maapfile://{fileId} 형식으로 입력합니다."
          example: maapfile://LT-BR.FW8SB30996-A46w
          maximum: 20
          type: string
      required:
      - param
      - value
    LineObject:
      description: |
        Line을 표현할 수 있는 템플릿 상품인 경우 설정 시 적용되며 지원하지 않는 상품은 무시됩니다.(현재 스타일 템플릿만 Line을 사용할 수 있습니다.) lineIndex만 사용되며 향후 속성이 추가될 수 있습니다.
      properties:
        lineIndex:
          description: "템플릿에 Line을 행별로 표시합니다. \n현재는 스타일(Cell) 템플릿에서 Text 행 아래 삽입되며\
            \ 총 9개까지 지원합니다.  \nlineIndex 값은 템플릿 내의 지정 위치 값을 의미 합니다. 예를 들어 lineIndex\
            \ 2는 두번째 Text 행 아래 입니다.\n"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          example: 2
          type: integer
        decoration:
          $ref: '#/components/schemas/LineDecoration'
      required:
      - lineIndex
    RegTemplateInfo:
      description: |
        템플릿 등록 시 사용되는 Object 입니다.
      example:
        buttons:
        - - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼1
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼2
          - {}
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: 카드3버튼1
                postback:
                  data: set_by_chatbot_open_url
        - - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼1
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼2
          - {}
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: 카드3버튼1
                postback:
                  data: set_by_chatbot_open_url
        messagebaseformId: ITHITV
        tmpltName: RBC 승인안내
        brandId: BR.FW8SB30996
        custTmpltId: imageTemplate001
        agencyId: rcsbizsub
        body:
        - param: description
          value: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다."
          decoration:
            textSize: 16dp
            textAlignment: textStart
            textStyle: bold
            textColor: '#232323'
        - param: description
          value: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다."
          decoration:
            textSize: 16dp
            textAlignment: textStart
            textStyle: bold
            textColor: '#232323'
      properties:
        brandId:
          description: 브랜드ID
          example: BR.FW8SB30996
          maximum: 13
          type: string
        messagebaseformId:
          description: 텡플릿 양식 ID
          example: ITHITV
          maximum: 10
          type: string
        custTmpltId:
          description: 사용자 지정 템플릿ID로 영문/숫자 25자 이내만 가능
          example: imageTemplate001
          maximum: 25
          type: string
        tmpltName:
          description: 템플릿명
          example: RBC 승인안내
          maximum: 40
          type: string
        agencyId:
          description: 대행사ID
          example: rcsbizsub
          maximum: 20
          type: string
        body:
          description: "messagebaseform JSON의 ROOT.params[n-1] object의 type 이 file,\
            \ string 인 경우, 각 속성에 맞는 데이터 Object를 사용하여 템플릿을 구성합니다.\nmessageabseform\
            \ JSON의 ROOT.params[n-1].isMandatory 가 true 이면 템플릿 등록을 위해 필수로 등록해야 하는\
            \ 요소이므로 반드시 데이터를 설정해야 템플릿 등록이 가능합니다.  \n변수 mTitleMedia, itemMedia 에 사용\
            할 이미지는 브랜드 로고(logo) 등록 후 발급된 fileId를 지정해야 합니다.\n"
          items:
            $ref: '#/components/schemas/RegTemplateInfo_body_inner'
          type: array
        buttons:
          description: "템플릿에 버튼을 설정하는 경우 지정합니다.  \n이통사 발송규격에서 제공되는 buttons와 동일한 사용\
            \ 방식으로 템플릿에 표시되는 버튼을 지정할수 있습니다.\n이미지 템플릿 슬라이드형의 경우 buttons 배열 내 object가\
            \ 각 카드에 해당하며, object 하위 suggestions 배열 내에 messagebaseform의 policyInfo.maxButtonCount\
            \ 지정 숫자만큼 버튼을 등록할 수 있습니다.\n지정 가능한 RCS 버튼 액션은 아래 링크의 파일을 확인해 주세요.\n\n**[버\
            튼 Action 목록 Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**\n\
            \nactiond의 displayText, postback을 제외한 action 하위 항목에 다음과 같이 변수부를 지정할 수\
            \ 있습니다.\n- urlAction: openUrl 하위 url 설정 값 중 URL 하위 경로만 변수 지정 가능 (예, https://www.rcsbizcenter.com/{{변\
            수}})\n- mapAction(좌표, 쿼리 방식): location 하위 속성의 값\n- calendarAction: createCalendarEvent\
            \ 하위 속성의 값\n- clipboardAction: copyToClipboard 하위 속성의 값\n- composeAction:\
            \ composeTextMessage 하위 속성 값\n- dialerAction: dialPhoneNumber 하위 속성의 값\
            \n"
          items:
            $ref: '#/components/schemas/RegTemplateInfo_buttons_inner'
          type: array
      required:
      - body
      - brandId
      - custTmpltId
      - messagebaseformId
      - tmpltName
    ModTemplateInfo:
      description: |
        템플릿 수정 시 사용되는 Object 입니다.
      example:
        buttons:
        - - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼1
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼2
          - {}
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: 카드3버튼1
                postback:
                  data: set_by_chatbot_open_url
        - - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼1
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.rcsbizcenter.com
                displayText: 카드1버튼2
          - {}
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: 카드3버튼1
                postback:
                  data: set_by_chatbot_open_url
        messagebaseformId: ITHITS
        tmpltName: RBC 승인안내(v2)
        brandId: BR.FW8SB30996
        agencyId: rcsbizsub
        body:
        - param: description
          value: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다."
          decoration:
            textSize: 16dp
            textAlignment: textStart
            textStyle: bold
            textColor: '#232323'
        - param: description
          value: "title이나 description, cell에 표시될 고정부 문자열 및 {{변수1}}와 같은 변수부를 입력합니다."
          decoration:
            textSize: 16dp
            textAlignment: textStart
            textStyle: bold
            textColor: '#232323'
      properties:
        brandId:
          description: 브랜드ID
          example: BR.FW8SB30996
          maximum: 13
          type: string
        messagebaseformId:
          description: 텡플릿 양식 ID
          example: ITHITS
          maximum: 10
          type: string
        tmpltName:
          description: 템플릿명
          example: RBC 승인안내(v2)
          maximum: 40
          type: string
        agencyId:
          description: 대행사ID
          example: rcsbizsub
          maximum: 20
          type: string
        body:
          description: |
            messagebaseform JSON의 ROOT.params[n-1] object의 type 이 file, string 인 경우, 각 속성에 맞는 데이터 Object를 사용하여 템플릿을 구성합니다.
            messageabseform JSON의 ROOT.params[n-1].isMandatory 가 true 이면 템플릿 등록을 위해 필수로 등록해야 하는 요소이므로 반드시 데이터를 설정해야 템플릿 등록이 가능합니다.
          items:
            $ref: '#/components/schemas/RegTemplateInfo_body_inner'
          type: array
        buttons:
          description: "템플릿에 버튼을 설정하는 경우 지정합니다.  \n이통사 발송규격에서 제공되는 buttons와 동일한 사용\
            \ 방식으로 템플릿에 표시되는 버튼을 지정할수 있습니다.\n이미지 템플릿 슬라이드형의 경우 buttons 배열 내 object가\
            \ 각 카드에 해당하며, object 하위 suggestions 배열 내에 messagebaseform의 policyInfo.maxButtonCount\
            \ 지정 숫자만큼 버튼을 등록할 수 있습니다.\n지정 가능한 RCS 버튼 액션은 아래 링크의 파일을 확인해 주세요.\n\n**[버\
            튼 Action 목록 Link](https://file.rcsbizcenter.com/231214143124234/TS-231214143124234-fVDQnA_1.xlsx)**\n\
            \nactiond의 displayText, postback을 제외한 action 하위 항목에 다음과 같이 변수부를 지정할 수\
            \ 있습니다.\n- urlAction: openUrl 하위 url 설정 값 중 URL 하위 경로만 변수 지정 가능 (예, https://www.rcsbizcenter.com/{{변\
            수}})\n- mapAction(좌표, 쿼리 방식): location 하위 속성의 값\n- calendarAction: createCalendarEvent\
            \ 하위 속성의 값\n- clipboardAction: copyToClipboard 하위 속성의 값\n- composeAction:\
            \ composeTextMessage 하위 속성 값\n- dialerAction: dialPhoneNumber 하위 속성의 값\
            \n"
          items:
            $ref: '#/components/schemas/RegTemplateInfo_buttons_inner'
          type: array
      required:
      - body
      - brandId
      - tmpltName
    TemplateFileInfo:
      description: 이미지 템플릿용 파일 등록 정보입니다.
      example:
        imageWidth: 0
        fileName: fileName
        url: url
        imageHeight: 6
        fileId: fileId
      properties:
        fileId:
          description: 등록된 파일의 ID 입니다.
          maximum: 64
          type: string
        url:
          description: 등록된 파일의 URL 정보 입니다.
          maximum: 128
          type: string
        fileName:
          description: 등록한 파일의 이름입니다.
          maximum: 256
          type: string
        imageWidth:
          description: 이미지 가로 크기 입니다.
          type: integer
        imageHeight:
          description: 이미지 세로 크기 입니다.
          type: integer
      required:
      - fileId
    AgencyKeyInfo:
      description: 대행사 키 정보입니다.
      example:
        agencyKey: AK.123abcABC456Def
        userName: userName
        isSync: true
        registerDate: 2022-12-25T06:22:55.418+09
      properties:
        agencyKey:
          description: 대행사 키 입니다.
          example: AK.123abcABC456Def
          maximum: 18
          type: string
        registerDate:
          description: 대행사키 등록일시 입니다.
          example: 2022-12-25T06:22:55.418+09
          format: date-time
          type: string
        userName:
          description: 대행사키 발급을 실행한 대상자 이름입니다.
          type: string
        isSync:
          description: 대행사키 이통사 동기화 완료 여부
          example: true
          type: boolean
    CustomReply:
      description: 자동응답메시지 reply 지정 필드 추가
      properties:
        reply:
          $ref: '#/components/schemas/CustomReply_reply'
      required:
      - reply
    AutoReplyMsgActions:
      oneOf:
      - $ref: '#/components/schemas/action'
      - $ref: '#/components/schemas/CustomReply'
    TableOption:
      description: "Table / StyleTable등 테이블 컴포넌트의 옵션 정보 객체 입니다.  \n"
      example:
        rightTextStyle: normal
        rightAlign: right
        leftAlign: left
        leftTextStyle: normal
        maxCount: 0
      properties:
        leftAlign:
          default: left
          description: "좌측 컬럼(열) 전체의 글자 정렬 위치를 설정합니다.  \n\n  + left : 좌측 정렬  \n  +\
            \ right : 우측 정렬  \n  + center : 중앙 정렬\n"
          enum:
          - left
          - right
          - center
          type: string
        rightAlign:
          default: right
          description: "우측 컬럼(열) 전체의 글자 정렬 위치를 설정합니다.  \n\n  + left : 좌측 정렬  \n  +\
            \ right : 우측 정렬  \n  + center : 중앙 정렬\n"
          enum:
          - left
          - right
          - center
          type: string
        leftTextStyle:
          default: normal
          description: "좌측 컬럼(열)에 입력되는 글자 스타일을 지정합니다.  \n\n  + normal : 기본 스타일\n \
            \ + bold : bold 스타일 적용\n"
          enum:
          - normal
          - bold
          type: string
        rightTextStyle:
          default: normal
          description: "우측 컬럼(열)에 입력되는 글자 스타일을 지정합니다.  \n\n  + normal : 기본 스타일\n \
            \ + bold : bold 스타일 적용\n"
          enum:
          - normal
          - bold
          type: string
        maxCount:
          default: 5
          description: "테이블의 행 개수를 지정합니다. 정의된 숫자 이외에는 지정할 수 없습니다.  \n\n  + 5 : 5행\n\
            \  + 10 : 10행\n"
          enum:
          - 5
          - 10
          type: integer
    ButtonOption:
      description: "VButton / HButton 등 버튼 컴포넌트의 옵션 정보 객체 입니다.  \n"
      properties:
        color:
          description: "버튼의 색상 설정 옵션입니다.  \n버튼의 색상은 브랜드 정보에서 지정한 templateColor 컬러\
            \ Hex 값과 동일해야 합니다.  \n빈값 지정 시 기본 버튼 컬러로 적용되며, 지정된 컬러 Hex 값이 templateColor의\
            \ 값과 다르면 templateColor로 강제 설정됩니다.  \n"
          example: '#FFFFFF'
          type: string
    ComponentInfo:
      description: 컴포넌트 정보 객체입니다.
      example:
        bodyYn: "Y"
        componentId: componentId
        headerYn: "Y"
        groupComponentId: groupComponentId
        iconImgFileUrl: iconImgFileUrl
        footerYn: "Y"
        options:
          rightTextStyle: normal
          rightAlign: right
          leftAlign: left
          leftTextStyle: normal
          maxCount: 0
        componentName: componentName
        status: status
      properties:
        componentId:
          description: 컴포넌트 ID 입니다.
          maximum: 40
          type: string
        componentName:
          description: 컴포넌트 이름 입니다.
          maximum: 40
          type: string
        iconImgFileUrl:
          description: 컴포넌트 모양을 아이콘으로 표현한 이미지 파일 주소입니다.
          maximum: 1000
          type: string
        status:
          description: "컴포넌트의 사용 가능 여부, 범위를 표시합니다.  \n\n  + public: 레이아웃 등록/수정 시 사\
            용 가능한 컴포넌트 입니다.  \n  + private: RBC에서 특정 케이스별 추가하는 컴포넌트로 레이아웃 등록/수정 시\
            \ 별도 사용할 수 없습니다.  \n  + tpl: 템플릿에서 사용되는 컴포넌트로 레이아웃 등록/수정 시 사용할 수 없습니다\
            .  \n  + disable: 사용할 수 없는 컴포넌트 입니다. 제공 중이던 컴포넌트가 사용 중지된 경우 설정됩니다.\n"
          type: string
        headerYn:
          description: "레이아웃의 Header 영역 내 사용 가능 여부입니다.  \n\n  + Y: 가능\n  + N: 불가능\n"
          enum:
          - "Y"
          - "N"
          type: string
        bodyYn:
          description: "레이아웃의 Body 영역 내 사용 가능 여부입니다.  \n\n  + Y: 가능\n  + N: 불가능\n"
          enum:
          - "Y"
          - "N"
          type: string
        footerYn:
          description: "레이아웃의 footer 영역 내 사용 가능 여부입니다.  \n\n  + Y: 가능\n  + N: 불가능\n"
          enum:
          - "Y"
          - "N"
          type: string
        options:
          $ref: '#/components/schemas/ComponentInfo_options'
        groupComponentId:
          description: "컴포넌트 그룹 ID 입니다.  \n동일한 컴포넌트 그룹ID를 갖는 컴포넌트는 레이아웃의 body 영역에서\
            \ 함께 사용될 수 없습니다.\n"
          type: string
    LayoutComponent:
      description: 레이아웃 내 사용되는 컴포넌트 객체입니다.
      example:
        componentId: componentId
        options:
          rightTextStyle: normal
          rightAlign: right
          leftAlign: left
          leftTextStyle: normal
          maxCount: 0
        index: 0
      properties:
        index:
          description: "레이아웃 내 컴포넌트의 순번을 표시합니다.  \n등록 시에는 index를 지정하지 않으며, 배열 내 순서\
            를 기준으로 처리됩니다.  \n"
          type: integer
        componentId:
          description: |
            지정할 컴포넌트 ID 입니다.
          maximum: 40
          type: string
        options:
          $ref: '#/components/schemas/ComponentInfo_options'
      required:
      - componentId
    SampleLayout:
      description: |
        샘플레이아웃 기본 정보 입니다.
      example:
        updateDate: 2023-10-25T06:22:55.418+09
        productCode: sms
        registerId: registerId
        approvalResult: 등록완료
        sampleLayoutId: sampleLayoutId
        sampleLayoutName: sampleLayoutName
        status: ready
        registerDate: 2023-10-25T06:22:55.418+09
      properties:
        sampleLayoutId:
          description: 샘플 레이아웃 ID 입니다.
          maximum: 40
          type: string
        sampleLayoutName:
          description: 샘플 레이아웃 이름 입니다.
          maximum: 40
          type: string
        productCode:
          description: 샘플 레이아웃의 메시지 상품 코드 입니다.
          enum:
          - sms
          - lms
          - mms
          maximum: 20
          type: string
        status:
          description: "샘플 레이아웃의 상태를 표시합니다.  \n\n  + ready : 사용  \n  + pause : 사용중\
            지\n"
          enum:
          - ready
          - pause
          type: string
        registerId:
          description: 등록자 ID 입니다.
          maximum: 20
          type: string
        registerDate:
          description: 등록일시 입니다.
          example: 2023-10-25T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 수정일시 입니다.
          example: 2023-10-25T06:22:55.418+09
          format: date-time
          type: string
        approvalResult:
          description: "레이아웃 등록 상태입니다. 레이아웃은 운영자 검수 없이 자동 등록됩니다.  \n  \n  - 등록완료 :\
            \ 이통3사에 정상 등록된 상태입니다.                \n  - 저장 : RBC 웹에서 저장만 했을 경우 상태이며\
            \ 별도 등록요청을 해야 합니다.  \n  - 처리중 : 이통 3사 등록 중 에러로 인해 최종 완료가 되지 않은 상태로 수정이\
            나 삭제가 불가능한 상태입니다.\n  \n"
          enum:
          - 등록완료
          - 저장
          - 처리중
          type: string
    SampleLayoutDetail:
      allOf:
      - $ref: '#/components/schemas/SampleLayout'
      description: 샘플 레이아웃 상세 정보 입니다.
      example:
        buttonColor: ""
        headerComposition: ""
        cardType: ""
        formattedString: ""
        footerComposition: ""
        spec: ""
        bodyComposition: ""
      properties:
        spec:
          default: openrichcard
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
            샘플 레이아웃은 오픈리치카드로 구성되어 있습니다.
          enum:
          - openrichcard
        cardType:
          description: "카드 종류를 구분합니다.  \n레이아웃에 표시되는 카드 타입은 다음 두 가지로 제한됩니다.\n  + format\
            \ : 이통사 제공 공통포맷의 카드 타입입니다.  \n  + formatBr : 사용자가 등록한 레이아웃의 카드 타입입니다.\n"
          enum:
          - format
          - formatBr
          maximum: 64
        buttonColor:
          description: "버튼에 지정된 컬러 값을 표시합니다.   지정된 경우 컬러 Hex 값(예,'#FFFFFF')이 표시되며\
            , 미지정 시 빈값 입니다.  \n"
        headerComposition:
          description: "카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 headerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        bodyComposition:
          description: "카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중\
            \ bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  \n예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며\
            , 최대 개수 범위 내에서 각 영역별 배분할 수 있습니다.     \n  \n  + Header 1개 지정 시 body 최대\
            \ 5개  \n  + body만 지정 시 최대 6개\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        footerComposition:
          description: "카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 footerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.  \n현재는 footer에 사용자가 직접 지정하는 컴포넌트는 없습니다.\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        formattedString:
          allOf:
          - $ref: '#/components/schemas/OpenrichcardMessage'
          description: "샘플 레이아웃을 구성한 openrichcard 메시지 구조 정보 입니다.  \n레이아웃 등록/수정 시에는\
            \ 컴포넌트를 활용하므로 formattedString 은 참조 데이터로 제공됩니다.  \n"
    LayoutRule:
      example:
        componentCount: 6
        componentLimit:
          ItemGroup: 1
          TableGroup: 2
          ThumbnailGroup: 1
          NoticeGroup: 1
          ThumbDescGroup: 1
          ButtonGroup: 2
          DescriptionGroup: 2
          ImageGroup: 1
          TitleGroup: 1
          BannerGroup: 1
        productCode: lms
        buttonCount: 3
        componentMinCount: 1
      properties:
        productCode:
          description: 레이아웃 사용이 가능한 메시지 상품 코드 입니다.
          enum:
          - sms
          - lms
          - mms
          example: lms
          maximum: 20
          type: string
        componentCount:
          description: 레이아웃 정의 시 지정 가능한 최대 컴포넌트 개수 입니다.
          example: 6
          type: integer
        componentMinCount:
          description: 레이아웃 정의 시 필요한 최소 컴포넌트 개수 입니다.
          example: 1
          type: integer
        buttonCount:
          description: 레이아웃 정의 시 지정 가능한 버튼 컴포넌트 개수 입니다.
          example: 3
          type: integer
        componentLimit:
          $ref: '#/components/schemas/LayoutRule_componentLimit'
    BrandLayout:
      description: |
        레이아웃 기본 정보 입니다.
      example:
        updateDate: 2023-10-25T06:22:55.418+09
        productCode: sms
        registerId: registerId
        approvalResult: 등록완료
        sampleLayoutId: sampleLayoutId
        sampleLayoutName: sampleLayoutName
        status: ready
        registerDate: 2023-10-25T06:22:55.418+09
      properties:
        sampleLayoutId:
          description: 레이아웃 ID 입니다.
          maximum: 40
          type: string
        sampleLayoutName:
          description: 레이아웃 이름 입니다.
          maximum: 40
          type: string
        productCode:
          description: 레이아웃의 메시지 상품 코드 입니다.
          enum:
          - sms
          - lms
          - mms
          maximum: 20
          type: string
        status:
          description: "레이아웃의 상태를 표시합니다.  \n\n  + ready : 사용  \n  + pause : 사용중지\n"
          enum:
          - ready
          - pause
          type: string
        registerId:
          description: 등록자 ID 입니다.
          maximum: 20
          type: string
        registerDate:
          description: 등록일시 입니다.
          example: 2023-10-25T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 수정일시 입니다.
          example: 2023-10-25T06:22:55.418+09
          format: date-time
          type: string
        approvalResult:
          description: "레이아웃 등록 상태입니다. 레이아웃은 운영자 검수 없이 자동 등록됩니다.  \n  \n  - 승인 : 이\
            통3사에 정상 등록된 상태입니다.                \n  - 저장 : RBC 웹에서 저장만 했을 경우 상태이며 별도\
            \ 등록요청을 해야 합니다.  \n  - 검수완료 : 이통 3사 등록 중 에러로 인해 최종 완료가 되지 않은 상태로 수정이나\
            \ 삭제가 불가능한 상태입니다.\n  \n"
          enum:
          - 등록완료
          - 저장
          - 처리중
          type: string
    BrandLayoutDetail:
      allOf:
      - $ref: '#/components/schemas/BrandLayout'
      description: 레이아웃 상세 정보 입니다.
      example:
        buttonColor: ""
        policyInfo:
          buttonsAllowed: true
          maxButtonCount: 9
          adHeaderAllowed: true
          maxDescriptionSize: 3
          cardCount: 2
          maxTitleSize: 7
          adBodyAllowed: true
          maxMediaSize: 2
        headerComposition: ""
        cardType: ""
        formattedString: ""
        footerComposition: ""
        params: ""
        guideInfo:
          imageWidth: 5
          maxDescriptionSize: 1
          maxLineCount: 0
          maxDisplayText: 6
          detailInfo:
            summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
              가이드 정보입니다.
            charactersPerLine:
              buttonName: 17
              description: 18
              title: 16
            combinations:
            - condition:
                mediaPhase: Tall
                numberOfButtons: 1
                numberOfLinesOnTitle: 2
              numberOfLinesOnDescription: 5
            - condition:
                mediaPhase: Tall
                numberOfButtons: 1
                numberOfLinesOnTitle: 2
              numberOfLinesOnDescription: 5
            releaseDate: 2020-07-31T00:00:00.000+09
            productCardType: Standalone Media Top Tall
          imageHeight: 5
        spec: ""
        bodyComposition: ""
      properties:
        spec:
          default: openrichcard
          description: |
            레이아웃 구조가 리치카드인지 오픈리치카드인지 구분합니다.
            레이아웃은 오픈리치카드로 구성되어 있습니다.
          enum:
          - openrichcard
        cardType:
          description: "카드 종류를 구분합니다.  \n레이아웃에 표시되는 카드 타입은 다음 두 가지로 제한됩니다.\n  + format\
            \ : 이통사 제공 공통포맷의 카드 타입입니다.  \n  + formatBr : 사용자가 등록한 레이아웃의 카드 타입입니다.\n"
          enum:
          - format
          - formatBr
          maximum: 64
        buttonColor:
          description: "버튼에 지정된 컬러 값을 표시합니다.   지정된 경우 컬러 Hex 값(예,'#FFFFFF')이 표시되며\
            , 미지정 시 빈값 입니다.  \n"
        headerComposition:
          description: "카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 headerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        bodyComposition:
          description: "카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중\
            \ bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  \n예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며\
            , 최대 개수 범위 내에서 각 영역별 배분할 수 있습니다.     \n  \n  + Header 1개 지정 시 body 최대\
            \ 5개  \n  + body만 지정 시 최대 6개\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        footerComposition:
          description: "카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 footerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.  \n현재는 footer에 사용자가 직접 지정하는 컴포넌트는 없습니다.\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
        formattedString:
          allOf:
          - $ref: '#/components/schemas/OpenrichcardMessage'
          description: "레이아웃을 구성한 openrichcard 메시지 구조 정보 입니다.  \n레이아웃 등록/수정 시에는 컴포\
            넌트를 활용하므로 formattedString 은 참조 데이터로 제공됩니다.\n"
        params:
          items:
            $ref: '#/components/schemas/ParamInfo'
        guideInfo:
          $ref: '#/components/schemas/GuideInfo'
        policyInfo:
          $ref: '#/components/schemas/PolicyInfo'
    RegBrandLayout:
      description: |
        레이아웃 등록 객체 정보 입니다.
      example:
        productCode: sms
        headerComposition:
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
        sampleLayoutId: sampleLayoutId
        footerComposition:
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
        layoutName: layoutName
        bodyComposition:
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
        - componentId: componentId
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          index: 0
      properties:
        layoutName:
          description: |
            레이아웃 이름을 지정합니다.
          maximum: 40
          type: string
        productCode:
          description: 레이아웃의 메시지 상품 코드 입니다.
          enum:
          - sms
          - lms
          - mms
          maximum: 20
          type: string
        sampleLayoutId:
          description: |-
            샘플 레이아웃 ID 입니다.
            샘플 레이아웃을 이용하여 부분적으로 컴포넌트 변경하여 등록하는 경우 설정합니다.
          maximum: 40
          type: string
        headerComposition:
          description: "카드 내의 최상위 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 headerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.  \n컴포넌트를 지정하지 않을 경우 빈 배열로 등록 합니다.  \n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
          type: array
        bodyComposition:
          description: "카드 내의 중간 영역으로 메시지 상품에서 지정한 개수의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중\
            \ bodyYn = 'Y' 인 컴포넌트만 등록이 가능합니다.  \n예를 들어 LMS는 최대 6개의 컴포넌트를 지정할 수 있으며\
            , 최대 개수 범위 내에서 각 영역별 배분할 수 있습니다.     \n  \n  + Header 1개 지정 시 body 최대\
            \ 5개  \n  + body만 지정 시 최대 6개\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
          type: array
        footerComposition:
          description: "카드 내의 최하단 영역으로 1개의 컴포넌트를 지정할 수 있습니다.  \n컴포넌트 중 footerYn =\
            \ 'Y' 인 컴포넌트만 등록이 가능합니다.  \n컴포넌트를 지정하지 않을 경우 빈 배열로 등록 합니다.  \n현재는 footer에\
            \ 사용자가 직접 지정하는 컴포넌트는 없습니다.\n"
          items:
            $ref: '#/components/schemas/LayoutComponent'
          type: array
      required:
      - bodyComposition
      - footerComposition
      - headerComposition
      - layoutName
      - productCode
    MessagebaseformLogo:
      description: |
        이미지 파일ID와 URL 및 사용 유형 정보를 제공합니다.
      example:
        fileName: fileName
        fileUrl: fileUrl
        fileId: fileId
      properties:
        fileId:
          description: 로고 이미지 파일 ID 입니다.
          type: string
        fileUrl:
          description: 로고 이미지 파일 URL 입니다.
          type: string
        fileName:
          description: 로고 이미지 파일 이름 입니다.
          maximum: 256
          type: string
    BrandProfileStatData:
      description: |
        일자별, 대화방별 브랜드 프로필 노출 통계 Data
      example:
        statDate: 20231201
        chatbotId: chatbotId
        displayedCount: 1048576
      properties:
        statDate:
          description: 통계일자
          example: 20231201
          maximum: 8
          type: string
        chatbotId:
          description: 대화방 ID
          maximum: 15
          type: string
        displayedCount:
          description: 대화방별 브랜드 프로필 노출 건수
          example: 1048576
          type: integer
    RegBrandLogo:
      description: |
        브랜드 로고 등록시 사용됩니다.
      properties:
        name:
          description: 로고명 입니다.
          example: RBC브랜드로고
          maximum: 30
          type: string
        description:
          description: 100자 이내의 로고 설명 입니다.
          example: 등록하는 로고에 대한 설명을 100자 이내로 작성 가능
          maximum: 100
          type: string
        file:
          description: "업로드 로고 이미지 파일을 지칭합니다.  \n        \n**파일형식 : gif, png, jpeg,\
            \ jpg, bmp (최대 1MB)**\n"
          format: binary
          type: object
      required:
      - file
      - name
    BrandLogo:
      description: |
        브랜드 로고 정보 입니다.
      example:
        updateId: userId
        fileName: 300x300.gif
        updateDate: 2024-03-12T06:22:55.418+09
        approvalDate: 2024-03-12T06:22:55.418+09
        approvalResult: 승인
        registerId: userId
        name: OO용 로고
        description: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
        fileUrl: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
        approvalReason: 승인완료
        fileId: BLG-BR.5nOGE1R3y6-8PMn
        registerDate: 2024-03-12T06:22:55.418+09
      properties:
        fileId:
          description: 로고 이미지 파일 ID 입니다.
          example: BLG-BR.5nOGE1R3y6-8PMn
          maximum: 64
          type: string
        fileUrl:
          description: 로고 이미지 파일 URL 입니다.
          example: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
          maximum: 1000
          type: string
        name:
          description: 로고명 입니다.
          example: OO용 로고
          maximum: 30
          type: string
        fileName:
          description: 원본 파일명 입니다.
          example: 300x300.gif
          maximum: 256
          type: string
        description:
          description: 로고 설명입니다.
          example: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
          maximum: 100
          type: string
        approvalResult:
          description: "로고 승인 상태입니다.  \n- 저장 : RCS Biz Center 홈페이지에서 승인요청 하지 않고 저장\
            \ 또는 승인요청 취소된 상태입니다. 저장 상태의 로고는 승인요청을 해야 승인대기 상태로 변경됩니다.\n- 승인대기 : 로고\
            \ 등록 직후 검수 이전 상태입니다.\n- 검수시작 : 로고 검수가 시작된 상태입니다.\n- 승인 : 검수가 완료되어 이통3사\
            에 정보 등록까지 최종 완료되어 RCS 메시지 발송시 사용 가능한 상태입니다.\n- 반려 : 검수 시 승인이 불가하여 반려된\
            \ 상태입니다. 반려된 로고는 수정 후 다시 승인요청 할 수 있습니다.\n- 검수완료 : RCS Biz Center에서 검수\
            \ 승인 하였으나 이통사 3사 등록이 완료되지 않은 상태로 RCS 메시지를 발송시 사용할 수 없습니다.\n- 승인대기(수정)\
            \ : 승인된 로고를 수정하여 다시 승인요청한  상태입니다.\n  \n- 검수시작(수정) : 승인된 로고를 수정하여 다시 승인\
            요청된 로고의 검수가 시작된 상태입니다.\n- 반려(수정) : 승인된 로고를 수정하여 다시 승인요청 후 검수 처리 결과 반려된\
            \ 상태입니다.\n- 검수완료(수정) : 승인된 로고를 수정하여 다시 승인요청 후  검수 승인은 되었으나 이통3사 정보 갱신이\
            \ 완료되지 않은 상태입니다.\n  현재 상태에서는 이통사에 따라 로고가 다르게 표시될 수 있습니다.\n"
          enum:
          - 승인대기
          - 검수시작
          - 승인
          - 반려
          - 검수완료
          - 저장
          - 승인대기(수정)
          - 검수시작(수정)
          - 반려(수정)
          - 검수완료(수정)
          example: 승인
          type: string
        approvalReason:
          description: 승인 사유
          example: 승인완료
          type: string
        registerDate:
          description: 로고 등록일시
          example: 2024-03-12T06:22:55.418+09
          format: date-time
          type: string
        approvalDate:
          description: 로고 승인일시
          example: 2024-03-12T06:22:55.418+09
          format: date-time
          type: string
        updateDate:
          description: 로고 수정일시
          example: 2024-03-12T06:22:55.418+09
          format: date-time
          type: string
        registerId:
          description: 로고 등록 계정 ID
          example: userId
          maximum: 20
          type: string
        updateId:
          description: 로고 수정 계정 ID
          example: userId
          maximum: 20
          type: string
    CommonLogo:
      description: |
        RBC에서 제공되는 기본 로고 정보를 제공합니다.
      example:
        fileName: fileName
        fileUrl: fileUrl
        fileId: fileId
      properties:
        fileId:
          description: 기본 로고 이미지 파일 ID 입니다.
          maximum: 64
          type: string
        fileUrl:
          description: 기본 로고 이미지 파일 URL 입니다.
          type: string
        fileName:
          description: 기본 로고명 입니다.
          maximum: 30
          type: string
    suggestion:
      description: Common base definition for suggested replies and suggested actions.
      properties:
        displayText:
          maxLength: 25
          minLength: 1
          type: string
        postback:
          $ref: '#/components/schemas/CustomReply_reply_postback'
      required:
      - displayText
      - postback
    reply:
      description: Definition of a suggested reply.
      properties:
        reply:
          allOf:
          - $ref: '#/components/schemas/suggestion'
      required:
      - reply
    action:
      description: Common base definition of a suggested action.
      properties:
        action:
          $ref: '#/components/schemas/action_action'
      required:
      - action
    urlAction:
      description: Suggested actions to interact a website or deep app link.
      properties:
        urlAction:
          $ref: '#/components/schemas/urlAction_urlAction'
      required:
      - urlAction
    dialerAction:
      description: Suggested actions for interacting with a phone number.
      example:
        dialerAction:
          dialPhoneNumber:
            phoneNumber: phoneNumber
            fallbackUrl: https://openapi-generator.tech
      properties:
        dialerAction:
          $ref: '#/components/schemas/dialerAction_dialerAction'
      required:
      - dialerAction
    mapAction:
      description: Suggested actions for interacting with a location on a map.
      properties:
        mapAction:
          $ref: '#/components/schemas/mapAction_mapAction'
      required:
      - mapAction
    calendarAction:
      description: Suggested actions for interacting with a calendar event.
      properties:
        calendarAction:
          $ref: '#/components/schemas/calendarAction_calendarAction'
      required:
      - calendarAction
    composeAction:
      description: Suggested actions for composing draft messages.
      properties:
        composeAction:
          $ref: '#/components/schemas/composeAction_composeAction'
      required:
      - composeAction
    deviceAction:
      description: (현재 미제공)Suggested actions for interacting with the user's device.
      properties:
        deviceAction:
          $ref: '#/components/schemas/deviceAction_deviceAction'
      required:
      - deviceAction
    settingsAction:
      description: (현재 미제공)Suggested actions for interacting with app settings
      properties:
        settingsAction:
          $ref: '#/components/schemas/settingsAction_settingsAction'
      required:
      - settingsAction
    clipboardAction:
      description: Text to be copied to clipboard.
      properties:
        clipboardAction:
          $ref: '#/components/schemas/clipboardAction_clipboardAction'
      required:
      - clipboardAction
    localBrowserAction:
      description: (템플릿 버튼 등록 불가)Suggested actions using Internal Web browser to interact
        a website or deep app link.
      properties:
        localBrowserAction:
          $ref: '#/components/schemas/localBrowserAction_localBrowserAction'
      required:
      - localBrowserAction
    shareAction:
      description: (현재 미제공)Text to be shared to other applications
      properties:
        shareAction:
          $ref: '#/components/schemas/shareAction_shareAction'
      required:
      - shareAction
    view:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - View
            type: string
          width:
            $ref: '#/components/schemas/width_height'
          height:
            $ref: '#/components/schemas/width_height'
          widgetPolicy:
            $ref: '#/components/schemas/widgetPolicy'
        required:
        - height
        - widget
        - width
    linear_layout:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - LinearLayout
            type: string
          orientation:
            enum:
            - vertical
            - horizontal
            type: string
          gravity:
            $ref: '#/components/schemas/gravity'
          children:
            items:
              $ref: '#/components/schemas/linear_layout_allOf_children'
            type: array
          width:
            $ref: '#/components/schemas/width_height'
          height:
            $ref: '#/components/schemas/width_height'
        required:
        - height
        - orientation
        - widget
        - width
    linear_layout_L1:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - LinearLayout
            type: string
          orientation:
            enum:
            - vertical
            - horizontal
            type: string
          gravity:
            $ref: '#/components/schemas/gravity'
          children:
            items:
              $ref: '#/components/schemas/linear_layout_L1_allOf_children'
            type: array
          width:
            $ref: '#/components/schemas/width_height'
          height:
            $ref: '#/components/schemas/width_height'
        required:
        - height
        - orientation
        - widget
        - width
    linear_layout_L2:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - LinearLayout
            type: string
          orientation:
            enum:
            - vertical
            - horizontal
            type: string
          gravity:
            $ref: '#/components/schemas/gravity'
          children:
            items:
              $ref: '#/components/schemas/linear_layout_L2_allOf_children'
            type: array
          width:
            $ref: '#/components/schemas/width_height'
          height:
            $ref: '#/components/schemas/width_height'
        required:
        - height
        - orientation
        - widget
        - width
    text_view:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - TextView
            type: string
          text:
            maxLength: 2000
            minLength: 0
            type: string
          textAlignment:
            pattern: ((\|)?(center|gravity|inherit|textEnd|textStart|viewEnd|viewStart))+
            type: string
          textStyle:
            pattern: ((\|)?(bold|normal))*
            type: string
          textColor:
            $ref: '#/components/schemas/color'
          textSize:
            $ref: '#/components/schemas/dimen'
          width:
            $ref: '#/components/schemas/width_height'
          height:
            $ref: '#/components/schemas/width_height'
          widgetPolicy:
            $ref: '#/components/schemas/widgetPolicy'
        required:
        - height
        - widget
        - width
    image_view:
      allOf:
      - $ref: '#/components/schemas/Views'
      - properties:
          widget:
            enum:
            - ImageView
            type: string
          mediaUrl:
            format: uri
            type: string
          mediaContentType:
            type: string
          mediaFileSize:
            description: Media file size in bytes
            minimum: 0
            type: integer
          scaleType:
            enum:
            - center
            - centerCrop
            - centerInside
            - fitCenter
            - fitEnd
            - fitStart
            - fitXY
            - matrix
            type: string
          width:
            $ref: '#/components/schemas/dimen'
          height:
            $ref: '#/components/schemas/dimen'
          widgetPolicy:
            $ref: '#/components/schemas/widgetPolicy'
        required:
        - height
        - mediaContentType
        - mediaFileSize
        - mediaUrl
        - widget
        - width
    Views:
      properties:
        weight:
          type: number
        visibility:
          $ref: '#/components/schemas/visibility'
        background:
          pattern: "bot_color|#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})"
          type: string
        corner_radius:
          pattern: "[0-9]+dp"
          type: string
        padding:
          pattern: "-?[0-9]+dp"
          type: string
        paddingTop:
          pattern: "-?[0-9]+dp"
          type: string
        paddingLeft:
          pattern: "-?[0-9]+dp"
          type: string
        paddingRight:
          pattern: "-?[0-9]+dp"
          type: string
        paddingBottom:
          pattern: "-?[0-9]+dp"
          type: string
        margin:
          pattern: "-?[0-9]+dp"
          type: string
        marginTop:
          pattern: "-?[0-9]+dp"
          type: string
        marginBottom:
          pattern: "-?[0-9]+dp"
          type: string
        marginLeft:
          pattern: "-?[0-9]+dp"
          type: string
        marginRight:
          pattern: "-?[0-9]+dp"
          type: string
        click:
          $ref: '#/components/schemas/Views_click'
    width_height:
      pattern: "match|content|[0-9]+dp"
      type: string
    visibility:
      enum:
      - visible
      - invisible
      - gone
      type: string
    color:
      pattern: "bot_color|#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})"
      type: string
    dimen:
      pattern: "[0-9]+dp"
      type: string
    offset:
      pattern: "-?[0-9]+dp"
      type: string
    gravity:
      pattern: ((\|)?(bottom|center|center_horizontal|center_vertical|clip_horizontal|clip_vertical|end|fill|fill_horizontal|fill_vertical|left|right|start|top))+
      type: string
    OpenrichcardMessage:
      description: TTA TTAK.KO-06.0410/R4 부록D 오픈리치카드 스키마 참조
      properties:
        openrichcardMessage:
          $ref: '#/components/schemas/OpenrichcardMessage_openrichcardMessage'
    cardMedia:
      properties:
        mediaUrl:
          format: uri
          type: string
        mediaContentType:
          type: string
        mediaFileSize:
          description: Media file size in bytes
          minimum: 0
          type: integer
        thumbnailUrl:
          format: uri
          type: string
        thumbnailContentType:
          type: string
        thumbnailFileSize:
          description: Thumbnail file size in bytes
          minimum: 0
          type: integer
        height:
          enum:
          - SHORT_HEIGHT
          - MEDIUM_HEIGHT
          - TALL_HEIGHT
          type: string
        contentDescription:
          description: Accessiblity text for use with screen readers. Will not be
            shown on screen.
          maxLength: 200
          minLength: 1
          type: string
      required:
      - height
      - mediaContentType
      - mediaFileSize
      - mediaUrl
    cardTitle:
      maxLength: 200
      minLength: 1
      type: string
    cardDescription:
      maxLength: 2000
      minLength: 1
      type: string
    fontStyle:
      items:
        enum:
        - italics
        - bold
        - underline
        type: string
      maxItems: 3
      minItems: 1
      type: array
    cardStyle:
      description: A reference to a CSS for the rendering of the Rich Card(s).
      format: uri
      type: string
    generalPurposeCardMessage:
      description: "This defines a general-purpose, standalone Rich Card message."
      properties:
        generalPurposeCard:
          $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard'
      required:
      - generalPurposeCard
    generalPurposeCardCarouselMessage:
      description: This defines a message containing a carousel of general-purpose
        Rich Cards.
      properties:
        generalPurposeCardCarousel:
          $ref: '#/components/schemas/generalPurposeCardCarouselMessage_generalPurposeCardCarousel'
      required:
      - generalPurposeCardCarousel
    RichcardMessage:
      description: GSMA RCC.07-v11.0 참조
      properties:
        richcardMessage:
          $ref: '#/components/schemas/RichcardMessage_richcardMessage'
    _token_post_request:
      properties:
        clientId:
          description: RCS Biz Center에 계정 가입시 등록한 ID 입니다.
          example: myMemberId
          maximum: 20
          type: string
        clientSecret:
          description: RCS Biz Center 내 계정관리에서 확인 가능합니다.
          example: SK.atIs4g04r6PJepf
          maximum: 18
          type: string
      required:
      - clientId
      - clientSecret
    _corp__personId__brand_get_200_response:
      example:
        result:
        - chatbotDate: 2020-03-12T06:22:55.418+09
          messagebaseDate: 2020-03-12T06:22:55.418+09
          updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          brandKey: BK.Vlkjz2c53kMx0kZ
          mediaUrl:
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          brandId: BR.abcdefghij
          name: FAN
          registerDate: 2020-03-12T06:22:55.418+09
          status: 승인대기
        - chatbotDate: 2020-03-12T06:22:55.418+09
          messagebaseDate: 2020-03-12T06:22:55.418+09
          updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          brandKey: BK.Vlkjz2c53kMx0kZ
          mediaUrl:
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          brandId: BR.abcdefghij
          name: FAN
          registerDate: 2020-03-12T06:22:55.418+09
          status: 승인대기
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _corp__personId__brand__brandId__get_200_response:
      example:
        result:
        - bizInfoYn: ""
          zipCode: ""
          initTab: ""
          description: ""
          initFeedItem: ""
          subCategoryId: FIN001
          approvalReason: ""
          categoryName: 금융
          webSiteUrl: ""
          subCategoryName: 은행
          templateColor: ""
          bizInfoContent: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
          roadAddress: ""
          detailAddress: ""
          tel: ""
          menus: ""
          initFeedItems:
          - call
          - web
          - moreinfo
          - portalsearch
          categoryOpt: ""
          bizInfoTitle: 영업시간 안내
          categoryId: FIN
          email: ""
          brandFeedUrl: ""
        - bizInfoYn: ""
          zipCode: ""
          initTab: ""
          description: ""
          initFeedItem: ""
          subCategoryId: FIN001
          approvalReason: ""
          categoryName: 금융
          webSiteUrl: ""
          subCategoryName: 은행
          templateColor: ""
          bizInfoContent: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
          roadAddress: ""
          detailAddress: ""
          tel: ""
          menus: ""
          initFeedItems:
          - call
          - web
          - moreinfo
          - portalsearch
          categoryOpt: ""
          bizInfoTitle: 영업시간 안내
          categoryId: FIN
          email: ""
          brandFeedUrl: ""
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _corp__personId__brand__brandId__put_request:
      properties:
        regBrand:
          $ref: '#/components/schemas/RegBrandInfo'
        brandProfile:
          description: "브랜드 프로필 이미지를 업로드합니다.  \n**최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px\
            \ / 1:1 비율 권장 / 파일형식 : png (최대1MB)**\n"
          format: binary
          type: string
        brandBackground:
          description: "브랜드 백그라운드 이미지를 업로드합니다.  \n등록되어 있는 브랜드 백그라운드 이미지를 제거하기 위해서는\
            \ 파일 없이 brandBackground form key만 전송하면 됩니다.\\\n**최소사이즈 : 388X388px / 최\
            대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식 : jpg, png (최대1MB)**\n"
          format: binary
          type: string
        mainMdn:
          deprecated: true
          description: 대표발신번호 개념 제거되어 더 이상 유효하지 않습니다.
          example: "15225739"
          maximum: 40
          type: string
    _corp__personId__brand__brandId__put_200_response:
      example:
        result:
        - bizInfoYn: ""
          zipCode: ""
          initTab: ""
          description: ""
          initFeedItem: ""
          subCategoryId: FIN001
          approvalReason: ""
          categoryName: 금융
          webSiteUrl: ""
          subCategoryName: 은행
          templateColor: ""
          bizInfoContent: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
          roadAddress: ""
          detailAddress: ""
          tel: ""
          menus: ""
          initFeedItems:
          - call
          - web
          - moreinfo
          - portalsearch
          categoryOpt: ""
          bizInfoTitle: 영업시간 안내
          categoryId: FIN
          email: ""
          brandFeedUrl: ""
        - bizInfoYn: ""
          zipCode: ""
          initTab: ""
          description: ""
          initFeedItem: ""
          subCategoryId: FIN001
          approvalReason: ""
          categoryName: 금융
          webSiteUrl: ""
          subCategoryName: 은행
          templateColor: ""
          bizInfoContent: 월~금 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다.
          roadAddress: ""
          detailAddress: ""
          tel: ""
          menus: ""
          initFeedItems:
          - call
          - web
          - moreinfo
          - portalsearch
          categoryOpt: ""
          bizInfoTitle: 영업시간 안내
          categoryId: FIN
          email: ""
          brandFeedUrl: ""
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _corp__personId__brand__brandId__delete_200_response_result_inner:
      example:
        brandId: brandId
      properties:
        brandId:
          description: 삭제한 브랜드 ID 입니다.
          maximum: 13
          type: string
    _corp__personId__brand__brandId__delete_200_response:
      example:
        result:
        - brandId: brandId
        - brandId: brandId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_corp__personId__brand__brandId__delete_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _corp__personId__brand__brandId__cancel_put_200_response_result_inner:
      example:
        brandId: brandId
      properties:
        brandId:
          description: 승인취소 된 브랜드 ID 입니다.
          maximum: 13
          type: string
    _corp__personId__brand__brandId__cancel_put_200_response:
      example:
        result:
        - brandId: brandId
        - brandId: brandId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_corp__personId__brand__brandId__cancel_put_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _corp__personId__brand__brandId__privilege_get_200_response:
      example:
        result:
        - id: id
          privilegeType: Agency
          status: Ok
        - id: id
          privilegeType: Agency
          status: Ok
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/PrivilegeInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _corp__personId__brand__brandId__privilege_put_request:
      properties:
        regPrivilege:
          $ref: '#/components/schemas/RegPrivilegeInfo'
    _corp__personId__brand__brandId__privilege_post_request:
      properties:
        regPrivileges:
          items:
            $ref: '#/components/schemas/RegPrivilegeInfo'
          type: array
    _corp_brand_categories_get_200_response:
      example:
        result:
        - updateDate: 2020-11-10T06:22:55.418+09
          categoryName: 금융
          categoryId: FIN
          subCategories:
          - subCategoryId: FIN001
            subCategoryName: 은행
          - subCategoryId: FIN001
            subCategoryName: 은행
        - updateDate: 2020-11-10T06:22:55.418+09
          categoryName: 금융
          categoryId: FIN
          subCategories:
          - subCategoryId: FIN001
            subCategoryName: 은행
          - subCategoryId: FIN001
            subCategoryName: 은행
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _corp_brand_post_request_chatbots:
      description: "등록할 대화방(발신번호) 정보를 최대 1000개까지 등록합니다.  \nObject 구성은 [RegChatbotInfo](#/RegChatbotInfo)를\
        \ 참고하시기 바랍니다.\n"
      properties:
        chatbots:
          items:
            $ref: '#/components/schemas/RegChatbotInfo'
          maxItems: 1000
          minItems: 1
          type: array
    _corp_brand_post_request:
      properties:
        regBrand:
          $ref: '#/components/schemas/RegBrandInfo'
        brandProfile:
          description: "브랜드 프로필 이미지를 업로드합니다.  \n**최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px\
            \ / 1:1 비율 / 파일형식 : png (최대1MB)**\n"
          format: binary
          type: object
        brandBackground:
          description: "브랜드 백그라운드 이미지를 업로드합니다.  \n**최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px\
            \ / 1:1 비율 / 파일형식 : jpg, png (최대1MB)**\n"
          format: binary
          type: object
        mainMdn:
          deprecated: true
          description: 대표발신번호 개념 제거되어 더 이상 유효하지 않습니다.
          example: "15225739"
          maximum: 40
          type: string
        chatbots:
          $ref: '#/components/schemas/_corp_brand_post_request_chatbots'
        subNumCertificate:
          description: "통신서비스이용증명원을 업로드합니다.  \n대화방(발신번호) 등록을 위해 chatbots 지정한 경우 필수\
            로 함께 업로드해야 합니다.  \n**허용되는 파일형식 : jpg, png, pdf, tiff, zip (최대20MB)** \
            \ \n"
          format: binary
          type: object
      required:
      - brandProfile
      - regBrand
    _corp_brand_post_200_response_result_inner:
      example:
        brandId: brandId
      properties:
        brandId:
          description: 등록된 브랜드ID 입니다.
          maximum: 13
          type: string
    _corp_brand_post_200_response:
      example:
        result:
        - brandId: brandId
        - brandId: brandId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_corp_brand_post_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _messagebase_common_get_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          messagebaseformId: messagebaseformId
          tmpltName: tmpltName
          groupId: groupId
          approvalReason: approvalReason
          messagebaseId: messagebaseId
          updateId: updateId
          approvalResult: 승인대기
          registerId: registerId
          brandId: common
          status: ready
          registerDate: 2020-03-12T06:22:55.418+09
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          messagebaseformId: messagebaseformId
          tmpltName: tmpltName
          groupId: groupId
          approvalReason: approvalReason
          messagebaseId: messagebaseId
          updateId: updateId
          approvalResult: 승인대기
          registerId: registerId
          brandId: common
          status: ready
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/Messagebase'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _messagebase_common__messagebaseId__get_200_response:
      example:
        result:
        - productCode: ""
          policyInfo:
            buttonsAllowed: true
            maxButtonCount: 9
            adHeaderAllowed: true
            maxDescriptionSize: 3
            cardCount: 2
            maxTitleSize: 7
            adBodyAllowed: true
            maxMediaSize: 2
          cardType: ""
          inputText: ""
          files: ""
          formattedString:
            RCSMessage:
              trafficType: ""
          agencyId: ""
          attribute: ""
          params: ""
          guideInfo:
            imageWidth: 5
            maxDescriptionSize: 1
            maxLineCount: 0
            maxDisplayText: 6
            detailInfo:
              summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
                가이드 정보입니다.
              charactersPerLine:
                buttonName: 17
                description: 18
                title: 16
              combinations:
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              releaseDate: 2020-07-31T00:00:00.000+09
              productCardType: Standalone Media Top Tall
            imageHeight: 5
          spec: ""
        - productCode: ""
          policyInfo:
            buttonsAllowed: true
            maxButtonCount: 9
            adHeaderAllowed: true
            maxDescriptionSize: 3
            cardCount: 2
            maxTitleSize: 7
            adBodyAllowed: true
            maxMediaSize: 2
          cardType: ""
          inputText: ""
          files: ""
          formattedString:
            RCSMessage:
              trafficType: ""
          agencyId: ""
          attribute: ""
          params: ""
          guideInfo:
            imageWidth: 5
            maxDescriptionSize: 1
            maxLineCount: 0
            maxDisplayText: 6
            detailInfo:
              summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
                가이드 정보입니다.
              charactersPerLine:
                buttonName: 17
                description: 18
                title: 16
              combinations:
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              releaseDate: 2020-07-31T00:00:00.000+09
              productCardType: Standalone Media Top Tall
            imageHeight: 5
          spec: ""
        code: "20000000"
        status: 4
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessagebaseInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _messagebase_messagebaseform_get_200_response:
      example:
        result:
        - bizCondition:
          - bizCondition
          - bizCondition
          updateDate: 2020-03-12T06:22:55.418+09
          messagebaseformId: messagebaseformId
          bizCategory: bizCategory
          formName: formName
          cardType: cardType
          bizService: bizService
          registerDate: 2020-03-12T06:22:55.418+09
        - bizCondition:
          - bizCondition
          - bizCondition
          updateDate: 2020-03-12T06:22:55.418+09
          messagebaseformId: messagebaseformId
          bizCategory: bizCategory
          formName: formName
          cardType: cardType
          bizService: bizService
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessagebaseForm'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _messagebase_messagebaseform__messagebaseformId__get_200_response:
      example:
        code: "20000000"
        desc: null
        result:
        - messagebaseformId: ITTBNV
          formName: 썸네일형 (세로)
          cardType: Thumbnail
          bizCondition:
          - all
          bizCategory: null
          bizService: null
          registerDate: 2022-09-06T10:42:53.000+09
          updateDate: 2022-09-13T13:04:24.000+09
          mediaUrl: []
          productCode: itmpl
          spec: openrichcard
          guideInfo:
            maxLineCount: 0
            maxDisplayText: 16
            maxDescriptionSize: 150
            imageWidth: "900"
            imageHeight: "560"
            detailInfo: null
          policyInfo:
            cardCount: 1
            maxTitleSize: 30
            maxButtonCount: 2
            maxDescriptionSize: 500
            maxMediaSize: 1048576
            buttonsAllowed: false
            adHeaderAllowed: true
            adBodyAllowed: true
          params:
          - param: description
            isMandatory: false
            type: string
            contentType: description
            strSize: 150
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          - param: media
            isMandatory: true
            type: file
            contentType: maapfile
            strSize: -1
            fileSize: 1048576
            strRegx: ""
            verification: []
            imageWidth: 900
            imageHeight: 560
            couplingId: ""
            inputText: null
          - param: mediaUrl
            isMandatory: false
            type: string
            contentType: url
            strSize: -1
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          - param: subDesc1
            isMandatory: true
            type: string
            contentType: description
            strSize: 33
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: sub1
            inputText: null
          - param: subDesc2
            isMandatory: true
            type: string
            contentType: description
            strSize: 33
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: sub2
            inputText: null
          - param: subDesc3
            isMandatory: false
            type: string
            contentType: description
            strSize: 33
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: sub3
            inputText: null
          - param: subMedia1
            isMandatory: true
            type: file
            contentType: maapfile
            strSize: -1
            fileSize: 1048576
            strRegx: ""
            verification: []
            imageWidth: 300
            imageHeight: 300
            couplingId: sub1
            inputText: null
          - param: subMedia2
            isMandatory: true
            type: file
            contentType: maapfile
            strSize: -1
            fileSize: 1048576
            strRegx: ""
            verification: []
            imageWidth: 300
            imageHeight: 300
            couplingId: sub2
            inputText: null
          - param: subMedia3
            isMandatory: false
            type: file
            contentType: maapfile
            strSize: -1
            fileSize: 1048576
            strRegx: ""
            verification: []
            imageWidth: 300
            imageHeight: 300
            couplingId: sub3
            inputText: null
          - param: subMediaUrl1
            isMandatory: false
            type: string
            contentType: url
            strSize: -1
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          - param: subMediaUrl2
            isMandatory: false
            type: string
            contentType: url
            strSize: -1
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          - param: subMediaUrl3
            isMandatory: false
            type: string
            contentType: url
            strSize: -1
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          - param: title
            isMandatory: false
            type: string
            contentType: title
            strSize: 30
            fileSize: 0
            strRegx: ""
            verification: []
            imageWidth: 0
            imageHeight: 0
            couplingId: ""
            inputText: null
          formattedString:
            RCSMessage:
              trafficType: advertisement
              openrichcardMessage:
                card: open_rich_card
                version: 1.0.0
                zoomAllowed: true
                scaleAllowed: true
                layout:
                  widget: LinearLayout
                  width: match
                  height: content
                  orientation: vertical
                  background: '#F2F2F2'
                  children:
                  - widget: LinearLayout
                    width: match
                    height: content
                    orientation: horizontal
                    children:
                    - widget: ImageView
                      width: match
                      height: content
                      scaleType: fitXY
                      mediaUrl: "{{media}}"
                      click:
                        action:
                          urlAction:
                            openUrl:
                              url: "{{mediaUrl}}"
                          displayText: 메인이미지
                          postback:
                            data: set_by_chatbot_open_url
                  - widget: LinearLayout
                    width: match
                    height: content
                    orientation: vertical
                    padding: 20dp
                    children:
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: vertical
                      children:
                      - widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        text: "{{title}}"
                        textColor: '#232323'
                        textSize: 17dp
                        marginBottom: 10dp
                        visibility: "{{titleVsblty}}"
                      - widget: TextView
                        width: match
                        height: content
                        textStyle: normal
                        text: "{{description}}"
                        textColor: '#232323'
                        textSize: 16dp
                        weight: "1"
                        marginBottom: 16dp
                        visibility: "{{descVsblty}}"
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: vertical
                      children:
                      - widget: LinearLayout
                        width: match
                        height: content
                        orientation: horizontal
                        children:
                        - widget: LinearLayout
                          width: 68dp
                          height: 68dp
                          orientation: horizontal
                          corner_radius: 4dp
                          children:
                          - widget: ImageView
                            width: match
                            height: match
                            scaleType: fitXY
                            mediaUrl: "{{subMedia1}}"
                            click:
                              action:
                                urlAction:
                                  openUrl:
                                    url: "{{subMediaUrl1}}"
                                displayText: 서브이미지1
                                postback:
                                  data: set_by_chatbot_open_url
                        - widget: TextView
                          width: match
                          height: content
                          textStyle: normal
                          marginLeft: 12dp
                          gravity: center_vertical
                          text: "{{subDesc1}}"
                          textColor: '#232323'
                          textSize: 16dp
                          weight: "1"
                      - widget: LinearLayout
                        width: match
                        height: content
                        orientation: horizontal
                        marginTop: 10dp
                        children:
                        - widget: LinearLayout
                          width: 68dp
                          height: 68dp
                          orientation: horizontal
                          corner_radius: 4dp
                          children:
                          - widget: ImageView
                            width: match
                            height: match
                            scaleType: fitXY
                            mediaUrl: "{{subMedia2}}"
                            click:
                              action:
                                urlAction:
                                  openUrl:
                                    url: "{{subMediaUrl2}}"
                                displayText: 서브이미지2
                                postback:
                                  data: set_by_chatbot_open_url
                        - widget: TextView
                          width: match
                          height: content
                          textStyle: normal
                          marginLeft: 12dp
                          gravity: center_vertical
                          text: "{{subDesc2}}"
                          textColor: '#232323'
                          textSize: 16dp
                          weight: "1"
                      - widget: LinearLayout
                        width: match
                        height: content
                        orientation: horizontal
                        marginTop: 10dp
                        visibility: "{{subVsblty3}}"
                        children:
                        - widget: LinearLayout
                          width: 68dp
                          height: 68dp
                          orientation: horizontal
                          corner_radius: 4dp
                          children:
                          - widget: ImageView
                            width: match
                            height: match
                            scaleType: fitXY
                            mediaUrl: "{{subMedia3}}"
                            click:
                              action:
                                urlAction:
                                  openUrl:
                                    url: "{{subMediaUrl3}}"
                                displayText: 서브이미지3
                                postback:
                                  data: set_by_chatbot_open_url
                        - widget: TextView
                          width: match
                          height: content
                          textStyle: normal
                          marginLeft: 12dp
                          gravity: center_vertical
                          text: "{{subDesc3}}"
                          textColor: '#232323'
                          textSize: 16dp
                          weight: "1"
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: vertical
                      children:
                      - widget: Button
                        width: match
                        height: 42dp
                        background: '#E4E4E4'
                        textColor: '#0094ff'
                        textSize: 16dp
                        text: "{{btnName1}}"
                        textStyle: normal
                        textAlignment: center
                        marginTop: 16dp
                        click:
                          action:
                            urlAction:
                              openUrl:
                                url: ""
                            displayText: dummy
                        corner_radius: 8dp
                        visibility: "{{btnVsblty1}}"
                      - widget: Button
                        width: match
                        height: 42dp
                        background: '#E4E4E4'
                        textColor: '#0094ff'
                        textSize: 16dp
                        text: "{{btnName2}}"
                        textStyle: normal
                        textAlignment: center
                        click:
                          action:
                            urlAction:
                              openUrl:
                                url: ""
                            displayText: dummy
                        corner_radius: 8dp
                        visibility: "{{btnVsblty2}}"
                        marginTop: 8dp
        status: 200
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessagebaseFormInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _messagebase_messagebaseform__messagebaseformId__logo_get_200_response:
      example:
        result:
        - fileName: fileName
          fileUrl: fileUrl
          fileId: fileId
        - fileName: fileName
          fileUrl: fileUrl
          fileId: fileId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessagebaseformLogo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__messagebase_post_request:
      example:
        regMessagebases:
        - brandId: BR.1E9K8eF5NY
          custTmpltId: test2022072604
          messagebaseformId: TATA001C
          tmpltName: test2022072604
          agencyId: ""
          formattedString:
            RCSMessage:
              trafficType: advertisement
              openrichcardMessage:
                card: open_rich_card
                version: 1.0.0
                zoomAllowed: true
                scaleAllowed: true
                layout:
                  widget: LinearLayout
                  width: match
                  height: content
                  orientation: vertical
                  children:
                  - widget: LinearLayout
                    width: match
                    height: content
                    orientation: vertical
                    padding: 20dp
                    children:
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: horizontal
                      visibility: visible
                      children:
                      - widgetPolicy:
                          allowedAttributes:
                          - text
                        widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textStart
                        text: 카드승인알림
                        textColor: '#232323'
                        textSize: 19dp
                        weight: "1"
                      - widgetPolicy:
                          allowedAttributes:
                          - text
                        widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textEnd
                        text: "{{금액}}"
                        textColor: '#0094ff'
                        textSize: 19dp
                        weight: "1"
                        visibility: visible
                    - widgetPolicy:
                        allowedAttributes: []
                      width: match
                      height: 3dp
                      widget: View
                      background: '#232323'
                      visibility: visible
                      marginTop: 10dp
                      marginBottom: 12dp
                    - width: match
                      height: content
                      widget: LinearLayout
                      orientation: vertical
                      children:
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 거래일자
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{거래일자}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 결제구분
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{결제구분}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 결제카드
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{결제카드}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 카드소지자
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{카드소지자}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 승인번호
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{승인번호}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 승인상태
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{승인상태}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: gone
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: 결제금액
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{금액}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textEnd
                      - widgetPolicy:
                          allowedAttributes:
                          - visibility
                        width: match
                        height: 1dp
                        widget: View
                        background: '#232323'
                        visibility: visible
                        marginTop: 12dp
                        marginBottom: 12dp
                      - width: match
                        height: content
                        widget: LinearLayout
                        visibility: visible
                        orientation: horizontal
                        children:
                        - widgetPolicy:
                            allowedAttributes:
                            - text
                            - textAlignment
                            - textColor
                            - textSize
                            - textStyle
                          text: "{{가맹점주소}}"
                          width: match
                          height: content
                          weight: 1
                          widget: TextView
                          textSize: 16dp
                          textColor: '#232323'
                          textAlignment: textStart
                suggestions:
                - action:
                    dialerAction:
                      dialPhoneNumber:
                        phoneNumber: "{{B1}}"
                    displayText: 고객센터
                    postback:
                      data: set_by_chatbot_dial_phone_number
        - brandId: BR.1E9K8eF5NY
          custTmpltId: test2022072601
          messagebaseformId: TATA001D
          tmpltName: test2022072601
          agencyId: ""
          formattedString:
            RCSMessage:
              trafficType: advertisement
              openrichcardMessage:
                card: open_rich_card
                version: 1.0.0
                zoomAllowed: true
                scaleAllowed: true
                layout:
                  widget: LinearLayout
                  width: match
                  height: content
                  orientation: vertical
                  children:
                  - widget: LinearLayout
                    width: match
                    height: content
                    orientation: vertical
                    padding: 20dp
                    children:
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: horizontal
                      visibility: visible
                      children:
                      - widgetPolicy:
                          allowedAttributes:
                          - text
                        widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textStart
                        text: 고정부 제목
                        textColor: '#232323'
                        textSize: 19dp
                        weight: "1"
                      - widgetPolicy:
                          allowedAttributes:
                          - text
                        widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textEnd
                        text: ""
                        textColor: '#0094ff'
                        textSize: 19dp
                        weight: "1"
                        visibility: visible
                    - widgetPolicy:
                        allowedAttributes: []
                      width: match
                      height: 3dp
                      widget: View
                      background: '#232323'
                      visibility: visible
                      marginTop: 10dp
                      marginBottom: 12dp
                    - widgetPolicy:
                        allowedAttributes:
                        - text
                      widget: TextView
                      width: match
                      height: content
                      text: "타이틀 자유형 서술 템플릿을 등록 예시입니다. {{1}}"
                      textColor: '#232323'
                      textSize: 16dp
                suggestions:
                - action:
                    dialerAction:
                      dialPhoneNumber:
                        phoneNumber: "{{2}}"
                    displayText: 고객센터
                    postback:
                      data: set_by_chatbot_dial_phone_number
      properties:
        regMessagebases:
          items:
            $ref: '#/components/schemas/RegMessagebaseInfo'
          maxItems: 1000
          minItems: 1
          type: array
    _brand__brandId__messagebase_post_200_response_result_inner:
      example:
        messagebaseId: messagebaseId
      properties:
        messagebaseId:
          description: 등록된 템플릿ID(= messagebaseId) 입니다.
          type: string
    _brand__brandId__messagebase_post_200_response:
      example:
        result:
        - messagebaseId: messagebaseId
        - messagebaseId: messagebaseId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__messagebase_post_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__messagebase__messagebaseId__get_200_response:
      example:
        code: "20000000"
        desc: null
        result:
        - groupId: null
          messagebaseId: UBR.1E9K8eF5NY-test2022072601
          tmpltName: test2022072601
          messagebaseformId: TATA001D
          brandId: BR.1E9K8eF5NY
          status: ready
          approvalResult: 승인대기
          approvalReason: null
          registerDate: 2022-07-26T13:23:11.000+09
          approvalDate: null
          updateDate: 2022-07-26T13:23:11.000+09
          registerId: smoonchoml
          updateId: null
          productCode: tmplt
          spec: openrichcard
          cardType: description
          agencyId: null
          inputText: "타이틀 자유형 서술 템플릿을 등록합니다. {{1}}"
          attribute:
          - IT 정보
          - 타이틀 자유형
          - 타이틀 자유형
          guideInfo:
            maxLineCount: 0
            maxDisplayText: 16
            maxDescriptionSize: 90
            imageWidth: "0"
            imageHeight: "0"
            detailInfo: null
          policyInfo:
            cardCount: 1
            maxTitleSize: 0
            maxButtonCount: 2
            maxDescriptionSize: 90
            maxMediaSize: 0
            buttonsAllowed: false
            adHeaderAllowed: false
            adBodyAllowed: true
          params:
          - param: "2"
            isMandatory: true
            type: String
            contentType: etc
            strSize: -1
            fileSize: null
            strRegx: null
            verification: []
            imageWidth: null
            imageHeight: null
            couplingId: null
          - param: description
            isMandatory: true
            type: String
            contentType: description
            strSize: -1
            fileSize: null
            strRegx: ^(타이틀 자유형 서술 템플릿을 등록합니다\. ).+$
            verification:
            - 타이틀 자유형 서술 템플릿을 등록합니다. |¶|
            imageWidth: null
            imageHeight: null
            couplingId: null
            relationId: null
          formattedString:
            RCSMessage:
              trafficType: advertisement
              openrichcardMessage:
                card: open_rich_card
                version: 1.0.0
                zoomAllowed: true
                scaleAllowed: true
                layout:
                  widget: LinearLayout
                  width: match
                  height: content
                  orientation: vertical
                  children:
                  - widget: LinearLayout
                    width: match
                    height: content
                    orientation: vertical
                    padding: 20dp
                    children:
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: horizontal
                      visibility: visible
                      children:
                      - widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textStart
                        text: 고정부 제목
                        textColor: '#232323'
                        textSize: 19dp
                        weight: "1"
                      - widget: TextView
                        width: match
                        height: content
                        textStyle: bold
                        textAlignment: textEnd
                        text: ""
                        textColor: '#0094ff'
                        textSize: 19dp
                        weight: "1"
                        visibility: gone
                    - width: match
                      height: 3dp
                      widget: View
                      background: '#232323'
                      visibility: visible
                      marginTop: 10dp
                      marginBottom: 12dp
                    - widget: TextView
                      width: match
                      height: content
                      text: "{{description}}"
                      textColor: '#232323'
                      textSize: 16dp
                    - widget: LinearLayout
                      width: match
                      height: content
                      orientation: vertical
                      children:
                      - widget: Button
                        width: match
                        height: 42dp
                        background: '#EAEAEA'
                        textColor: '#0094ff'
                        textSize: 16dp
                        text: 가장많이쓸까?
                        textStyle: normal
                        textAlignment: center
                        click:
                          action:
                            dialerAction:
                              dialPhoneNumber:
                                phoneNumber: "{{2}}"
                            displayText: 가장많이쓸까?
                            postback:
                              data: set_by_chatbot_dial_phone_number
                        corner_radius: 8dp
                        visibility: visible
                        marginTop: 12dp
                      - widget: Button
                        width: match
                        height: 42dp
                        background: '#EAEAEA'
                        textColor: '#0094ff'
                        textSize: 16dp
                        text: Show location
                        textStyle: normal
                        textAlignment: center
                        click:
                          action:
                            mapAction:
                              showLocation:
                                location:
                                  latitude: 37.4220041
                                  longitude: -122.0862515
                                  label: Googleplex
                                fallbackUrl: "https://www.google.com/maps/@37.4219162,-122.078063,15z"
                            displayText: Show location
                            postback:
                              data: set_by_chatbot_show_location
                        corner_radius: 8dp
                        visibility: visible
                        marginTop: 8dp
        status: 200
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessagebaseInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__messagebase__messagebaseId__put_200_response_result_inner:
      example:
        messagebaseId: messagebaseId
      properties:
        messagebaseId:
          description: 템플릿ID(= messagebaseId)
          type: string
    _brand__brandId__messagebase__messagebaseId__put_200_response:
      example:
        result:
        - messagebaseId: messagebaseId
        - messagebaseId: messagebaseId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__messagebase__messagebaseId__put_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__v2_messagebase_file_post_request:
      properties:
        file:
          description: |
            이미지 템플릿에 사용할 이미지 파일입니다.
          format: binary
          type: object
      required:
      - file
    _brand__brandId__v2_messagebase_file_post_200_response:
      example:
        result:
        - imageWidth: 0
          fileName: fileName
          url: url
          imageHeight: 6
          fileId: fileId
        - imageWidth: 0
          fileName: fileName
          url: url
          imageHeight: 6
          fileId: fileId
        code: "20000000"
        status: 1
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/TemplateFileInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__chatbot_get_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          groupId: groupId
          display: "11"
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          isMainNum: true
          saftyStatusYn: "Y"
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          groupId: groupId
          display: "11"
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          isMainNum: true
          saftyStatusYn: "Y"
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 6
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/Chatbot'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _brand__brandId__chatbot_post_request:
      properties:
        subNumCertificate:
          description: "통신서비스 가입증명원 입니다.  \n입력한 발신번호와 통신서비스 가입증명원의 전화번호가 일치해야 발신번호\
            \ 등록이 가능하며 최근 1개월 이내 발급된 서류로 제출해야 합니다.  \n**파일형식 : jpg, png, pdf, tiff,\
            \ zip (최대20MB)**\n"
          format: binary
          type: object
        chatbots:
          $ref: '#/components/schemas/_corp_brand_post_request_chatbots'
    _brand__brandId__chatbot_post_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          groupId: groupId
          display: "11"
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          isMainNum: true
          saftyStatusYn: "Y"
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          groupId: groupId
          display: "11"
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          isMainNum: true
          saftyStatusYn: "Y"
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/Chatbot'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__chatbot__chatbotId__get_200_response:
      example:
        result:
        - botTcPage: ""
          webhook: ""
          mediaUrl:
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          rcsReply: ""
          searchWeight: ""
          approvalReason: ""
          persistentMenu: ""
          status: ""
        - botTcPage: ""
          webhook: ""
          mediaUrl:
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          - fileName: fileName
            typeName: icon
            url: url
            fileId: fileId
          rcsReply: ""
          searchWeight: ""
          approvalReason: ""
          persistentMenu: ""
          status: ""
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/ChatbotDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__chatbot__chatbotId__put_request:
      properties:
        subNumCertificate:
          description: "통신서비스 가입증명원 입니다.  \n입력한 발신번호와 통신서비스 가입증명원의 전화번호가 일치해야 발신번호\
            \ 등록이 가능하며 최근 1개월 이내 발급된 서류로 제출해야 합니다.  \n**파일형식 : jpg, png, pdf, tiff,\
            \ zip (최대20MB)**\n"
          format: binary
          type: object
        chatbot:
          $ref: '#/components/schemas/RegChatbotInfo'
    _brand__brandId__chatbot__chatbotId__delete_200_response_result_inner_releatedChatbots_inner:
      example:
        chatbotId: chatbotId
      properties:
        chatbotId:
          description: 대화방ID(=chatbotId)
          type: string
    _brand__brandId__chatbot__chatbotId__delete_200_response_result_inner:
      example:
        chatbotId: chatbotId
        releatedChatbots:
        - chatbotId: chatbotId
        - chatbotId: chatbotId
      properties:
        chatbotId:
          description: 대화방ID(=chatbotId)
          type: string
        releatedChatbots:
          description: 삭제된 chatbotId를 회신번호로 사용하는 함께 삭제된 양방향대화방 리스트
          items:
            $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__delete_200_response_result_inner_releatedChatbots_inner'
          type: array
    _brand__brandId__chatbot__chatbotId__delete_200_response:
      example:
        result:
        - chatbotId: chatbotId
          releatedChatbots:
          - chatbotId: chatbotId
          - chatbotId: chatbotId
        - chatbotId: chatbotId
          releatedChatbots:
          - chatbotId: chatbotId
          - chatbotId: chatbotId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__delete_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__chatbot__chatbotId__cancel_put_200_response:
      example:
        result:
        - chatbotId: chatbotId
        - chatbotId: chatbotId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__chatbot__chatbotId__delete_200_response_result_inner_releatedChatbots_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__bidirectional_chatbot_get_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          display: "11"
          groupId: groupId
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          display: "11"
          groupId: groupId
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 6
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BiChatbot'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _brand__brandId__bidirectional_chatbot_post_request:
      properties:
        chatbot:
          $ref: '#/components/schemas/RegBiChatbot'
    _brand__brandId__bidirectional_chatbot_post_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          display: "11"
          groupId: groupId
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          display: "11"
          groupId: groupId
          subDescr: subDescr
          botAgencyId: botAgencyId
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          subTitle: subTitle
          approvalResult: 승인대기
          registerId: registerId
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BiChatbot'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__bidirectional_chatbot__chatbotId__get_200_response:
      example:
        result:
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          webhook: webhook
          groupId: groupId
          approvalReason: approvalReason
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          botTcPage: botTcPage
          subTitle: subTitle
          registerId: registerId
          rcsReply: "1"
          persistentMenu:
          - actionType: dialerAction
            ordNo: 6.027456183070403
            upPostbackId: upPostbackId
            action:
              dialerAction:
                dialPhoneNumber:
                  phoneNumber: phoneNumber
                  fallbackUrl: https://openapi-generator.tech
            postbackId: postbackId
            autoReplyMsgId: autoReplyMsgId
            type: reply
            title: title
          - actionType: dialerAction
            ordNo: 6.027456183070403
            upPostbackId: upPostbackId
            action:
              dialerAction:
                dialPhoneNumber:
                  phoneNumber: phoneNumber
                  fallbackUrl: https://openapi-generator.tech
            postbackId: postbackId
            autoReplyMsgId: autoReplyMsgId
            type: reply
            title: title
          registerDate: 2020-03-12T06:22:55.418+09
          mediaUrl: null
          display: "11"
          searchWeight: "512"
          subDescr: subDescr
          botAgencyId: botAgencyId
          approvalResult: 승인대기
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          status: published
        - updateDate: 2020-03-12T06:22:55.418+09
          approvalDate: 2020-03-12T06:22:55.418+09
          webhook: webhook
          groupId: groupId
          approvalReason: approvalReason
          psMenuUse: false
          inputField: 0
          updateId: updateId
          chatbotId: chatbotId
          botTcPage: botTcPage
          subTitle: subTitle
          registerId: registerId
          rcsReply: "1"
          persistentMenu:
          - actionType: dialerAction
            ordNo: 6.027456183070403
            upPostbackId: upPostbackId
            action:
              dialerAction:
                dialPhoneNumber:
                  phoneNumber: phoneNumber
                  fallbackUrl: https://openapi-generator.tech
            postbackId: postbackId
            autoReplyMsgId: autoReplyMsgId
            type: reply
            title: title
          - actionType: dialerAction
            ordNo: 6.027456183070403
            upPostbackId: upPostbackId
            action:
              dialerAction:
                dialPhoneNumber:
                  phoneNumber: phoneNumber
                  fallbackUrl: https://openapi-generator.tech
            postbackId: postbackId
            autoReplyMsgId: autoReplyMsgId
            type: reply
            title: title
          registerDate: 2020-03-12T06:22:55.418+09
          mediaUrl: null
          display: "11"
          searchWeight: "512"
          subDescr: subDescr
          botAgencyId: botAgencyId
          approvalResult: 승인대기
          service: a2p
          brandId: brandId
          saftyStatusYn: "Y"
          isMainNum: true
          subNum: subNum
          status: published
        code: "20000000"
        status: 1
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BiChatbotDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__bidirectional_chatbot__chatbotId__put_request:
      properties:
        chatbot:
          $ref: '#/components/schemas/ModBiChatbot'
    _brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response_result_inner:
      example:
        chatbotId: chatbotId
      properties:
        chatbotId:
          description: 대화방Id(=chatbotId)
          type: string
    _brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response:
      example:
        result:
        - chatbotId: chatbotId
        - chatbotId: chatbotId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__delete_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_put_request:
      properties:
        persistentMenu:
          $ref: '#/components/schemas/RegPersistentMenu'
    _brand__brandId__autoreplymsg_get_200_response:
      example:
        result:
        - updateId: updateId
          updateDate: 2020-03-12T06:22:55.418+09
          approvalResult: 등록완료
          registerId: registerId
          brandId: brandId
          autoReplyMsgName: autoReplyMsgName
          autoReplyMsgId: autoReplyMsgId
          messagebaseId: messagebaseId
          registerDate: 2020-03-12T06:22:55.418+09
        - updateId: updateId
          updateDate: 2020-03-12T06:22:55.418+09
          approvalResult: 등록완료
          registerId: registerId
          brandId: brandId
          autoReplyMsgName: autoReplyMsgName
          autoReplyMsgId: autoReplyMsgId
          messagebaseId: messagebaseId
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/AutoReplyMsg'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _brand__brandId__autoreplymsg_post_200_response_result_inner:
      example:
        autoReplyMsgId: autoReplyMsgId
      properties:
        autoReplyMsgId:
          description: 자동응답메시지 ID
          maximum: 40
          type: string
    _brand__brandId__autoreplymsg_post_200_response:
      example:
        result:
        - autoReplyMsgId: autoReplyMsgId
        - autoReplyMsgId: autoReplyMsgId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__autoreplymsg_post_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__autoreplymsg__autoReplyMsgId__get_200_response:
      example:
        result:
        - buttons:
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google2.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url_2
          - {}
          - suggestions:
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ""
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ""
                displayText: 챗봇 연결
          body:
            title1: 제목
            description1: 본문 텍스트
            media1: maapfile://sample.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: maapfile://sample_2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: maapfile://sample_3.jpg
          copyAllowed: ""
          chipList:
          - action:
              urlAction:
                openUrl:
                  url: https://www.naver.com
              displayText: Open website
              postback:
                data: postbackId:111
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: postbackId:222
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
        - buttons:
          - suggestions:
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url
            - action:
                urlAction:
                  openUrl:
                    url: https://www.google2.com
                displayText: Open website or deep link
                postback:
                  data: set_by_chatbot_open_url_2
          - {}
          - suggestions:
            - reply:
                autoReplyMsgId: ARMLKmnxenL40cm
                postback:
                  data: ""
                displayText: 다른 자동응답 메세지 연결
            - reply:
                postback:
                  data: ""
                displayText: 챗봇 연결
          body:
            title1: 제목
            description1: 본문 텍스트
            media1: maapfile://sample.jpg
            title2: 제목 2번째 카드
            description2: 본문 텍스트
            media2: maapfile://sample_2.jpg
            title3: 제목 3번째 카드
            description3: 본문 텍스트
            media3: maapfile://sample_3.jpg
          copyAllowed: ""
          chipList:
          - action:
              urlAction:
                openUrl:
                  url: https://www.naver.com
              displayText: Open website
              postback:
                data: postbackId:111
          - action:
              urlAction:
                openUrl:
                  url: https://www.google.com
              displayText: Open website or deep link
              postback:
                data: postbackId:222
          - reply:
              autoReplyMsgId: ARMLKmnxenL40cm
              postback:
                data: ""
              displayText: 다른 자동응답 메세지 연결
          - reply:
              postback:
                data: ""
              displayText: 챗봇 연결
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/AutoReplyMsgInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__autoreplymsg_file_post_request:
      properties:
        file:
          description: |
            자동응답메시지에 사용할 이미지 파일입니다.
          format: binary
          type: object
    _brand__brandId__autoreplymsg_file_post_200_response:
      example:
        result:
        - fileName: fileName
          url: url
          fileId: fileId
        - fileName: fileName
          url: url
          fileId: fileId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/AutoReplyMsgFileInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _agency__agencyId__contract_get_200_response:
      example:
        result:
        - chatbotDate: 2020-03-12T06:22:55.418+09
          messagebaseDate: 2020-03-12T06:22:55.418+09
          brandName: brandName
          updateDate: 2020-03-12T06:22:55.418+09
          corpRegNum: corpRegNum
          corpId: corpId
          brandId: brandId
          agencyId: agencyId
          logoDate: 2024-04-12T06:22:55.418+09
          contracts:
          - a2p
          - a2p
          brandDate: 2020-03-12T06:22:55.418+09
          registerDate: 2020-03-12T06:22:55.418+09
        - chatbotDate: 2020-03-12T06:22:55.418+09
          messagebaseDate: 2020-03-12T06:22:55.418+09
          brandName: brandName
          updateDate: 2020-03-12T06:22:55.418+09
          corpRegNum: corpRegNum
          corpId: corpId
          brandId: brandId
          agencyId: agencyId
          logoDate: 2024-04-12T06:22:55.418+09
          contracts:
          - a2p
          - a2p
          brandDate: 2020-03-12T06:22:55.418+09
          registerDate: 2020-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/ContractInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _agency__agencyId__brand__brandId__put_request:
      properties:
        regBrand:
          $ref: '#/components/schemas/RegBrandInfo'
        brandProfile:
          description: "브랜드 프로필 이미지를 업로드합니다.  \n**최소사이즈 : 388X388px / 최대사이즈 : 1080X1080px\
            \ / 1:1 비율 권장 / 파일형식 : png (최대1MB)**\n"
          format: binary
          type: string
        brandBackground:
          description: "브랜드 백그라운드 이미지를 업로드합니다.  \n등록되어 있는 브랜드 백그라운드 이미지를 제거하기 위해서는\
            \ 파일 없이 brandBackground form key만 전송하면 됩니다.\\\n**최소사이즈 : 388X388px / 최\
            대사이즈 : 1080X1080px / 1:1 비율 권장 / 파일형식 : jpg, png (최대1MB)**\n"
          format: binary
          type: string
    _agency__agencyId__agencyKey_get_200_response:
      example:
        result:
        - agencyKey: AK.123abcABC456Def
          userName: userName
          isSync: true
          registerDate: 2022-12-25T06:22:55.418+09
        - agencyKey: AK.123abcABC456Def
          userName: userName
          isSync: true
          registerDate: 2022-12-25T06:22:55.418+09
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/AgencyKeyInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    __webhookUrl__post_request:
      discriminator:
        propertyName: notiType
      example:
        notiType: contract
        method: created
        reason: null
        corpId: CO.lR4JLOeOn3
        corpRegNum: "1148196221"
        brandId: BR.7EU1Ea9Bxb
      oneOf:
      - $ref: '#/components/schemas/NotiContract'
      - $ref: '#/components/schemas/NotiChatbot'
      - $ref: '#/components/schemas/NotiMessagebaseForm'
      - $ref: '#/components/schemas/NotiTemplate'
      - $ref: '#/components/schemas/NotiFormat'
      - $ref: '#/components/schemas/NotiBrand'
      - $ref: '#/components/schemas/NotiAutoReplyMsg'
      - $ref: '#/components/schemas/NotiAgencyKey'
      - $ref: '#/components/schemas/NotiFormatBr'
      - $ref: '#/components/schemas/NotiLogo'
    _brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_pause_put_200_response_result_inner:
      example:
        chatbotId: chatbotId
        isPause: true
        pausedDate: 2000-01-23T04:56:07.000+00:00
        resumeDate: 2000-01-23T04:56:07.000+00:00
      properties:
        chatbotId:
          description: 대화방ID
          type: string
        isPause:
          description: 중지여부
          type: boolean
        pausedDate:
          description: "isPause true 인 경우, 중지일시"
          format: date-time
          type: string
        resumeDate:
          description: "isPause false인 경우, 재개일시"
          format: date-time
          type: string
    _brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_pause_put_200_response:
      example:
        result:
        - chatbotId: chatbotId
          isPause: true
          pausedDate: 2000-01-23T04:56:07.000+00:00
          resumeDate: 2000-01-23T04:56:07.000+00:00
        - chatbotId: chatbotId
          isPause: true
          pausedDate: 2000-01-23T04:56:07.000+00:00
          resumeDate: 2000-01-23T04:56:07.000+00:00
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__bidirectional_chatbot__chatbotId__persistentmenu_pause_put_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _statQuery_message__brandId__get_200_response:
      example:
        result:
        - statDate: 20220505
          chatbotId: 15225739
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          brandId: BR.seCbCPN6U1
          groupId: groupdId_0001
          deliveredCount: 0
          displayedCount: 6
          messagebaseId: CMwMhM0200
        - statDate: 20220505
          chatbotId: 15225739
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          brandId: BR.seCbCPN6U1
          groupId: groupdId_0001
          deliveredCount: 0
          displayedCount: 6
          messagebaseId: CMwMhM0200
        code: "20000000"
        status: 1
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessageStatData'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _statQuery_messageButton__brandId__get_200_response:
      example:
        result:
        - statDate: 20220505
          chatbotId: 15225739
          cardNum: 0
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          reactionType: NA
          brandId: BR.seCbCPN6U1
          groupId: groupdId_0001
          buttonList:
          - actionType: urlAction
            clickCount: 1
            buttonNum: 6
            title: title
          - actionType: urlAction
            clickCount: 1
            buttonNum: 6
            title: title
          messagebaseId: CMwMhM0200
        - statDate: 20220505
          chatbotId: 15225739
          cardNum: 0
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          reactionType: NA
          brandId: BR.seCbCPN6U1
          groupId: groupdId_0001
          buttonList:
          - actionType: urlAction
            clickCount: 1
            buttonNum: 6
            title: title
          - actionType: urlAction
            clickCount: 1
            buttonNum: 6
            title: title
          messagebaseId: CMwMhM0200
        code: "20000000"
        status: 5
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/MessageButtonStatData'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _statQuery_persistentMenu__brandId__get_200_response:
      example:
        result:
        - statDate: 20220505
          chatbotId: chatbotId
          menuList:
          - actionType: urlAction
            subList:
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            clickCount: 0
            postbackId: postbackId
            menuType: action
            title: title
          - actionType: urlAction
            subList:
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            clickCount: 0
            postbackId: postbackId
            menuType: action
            title: title
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          brandId: BR.seCbCPN6U1
        - statDate: 20220505
          chatbotId: chatbotId
          menuList:
          - actionType: urlAction
            subList:
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            clickCount: 0
            postbackId: postbackId
            menuType: action
            title: title
          - actionType: urlAction
            subList:
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            - actionType: urlAction
              cardNum: 6
              clickCount: 5
              reactionType: NA
              buttonNum: 1
              postbackId: postbackId
              menuType: action
              title: title
              subActionList:
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              - actionType: urlAction
                clickCount: 5
                postbackId: postbackId
                title: title
              messagebaseId: CCwMhM0200
            clickCount: 0
            postbackId: postbackId
            menuType: action
            title: title
          corpRegNum: 1234567890
          corpId: CO.06XDA87k2q
          brandId: BR.seCbCPN6U1
        code: "20000000"
        status: 2
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/PersistentMenuStatData'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _statQuery_brandprofile__brandId__get_200_response:
      example:
        result:
        - statDate: 20231201
          chatbotId: chatbotId
          displayedCount: 1048576
        - statDate: 20231201
          chatbotId: chatbotId
          displayedCount: 1048576
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandProfileStatData'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _agency__agencyId__corp__corpRegNum__get_200_response_result_inner:
      example:
        corpRegNum: 1148196221
        conditionValue: 0
        conditionDescription: RBC 미등록 사업자등록번호
      properties:
        corpRegNum:
          description: 조회 요청한 사업자등록번호
          example: 1148196221
          type: string
        conditionValue:
          description: |
            등록 여부 및 브랜드, 대행사 지정 현황 상태값 0: RBC 미등록 사업자등록번호<br> 1: RBC 등록 사업자등록번호이나 브랜드 등록 없음<br> 2: 1건 이상의 브랜드 등록있으나 대행사 지정 건 없음<br> 3: 1건 이상 브랜드 등록 및 1개 이상 대행사 지정 존재
          enum:
          - 0
          - 1
          - 2
          - 3
          example: 0
          type: integer
        conditionDescription:
          description: |
            conditionValue 에 대한 설명
          enum:
          - RBC 미등록 사업자등록번호
          - RBC 등록 사업자등록번호이나 브랜드 등록 없음
          - 1건 이상의 브랜드 등록있으나 대행사 지정 건 없음
          - 1건 이상 브랜드 등록 및 1개 이상 대행사 지정 존재
          type: string
    _agency__agencyId__corp__corpRegNum__get_200_response:
      example:
        result:
        - corpRegNum: 1148196221
          conditionValue: 0
          conditionDescription: RBC 미등록 사업자등록번호
        - corpRegNum: 1148196221
          conditionValue: 0
          conditionDescription: RBC 미등록 사업자등록번호
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_agency__agencyId__corp__corpRegNum__get_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _agency__agencyId__corp__corpRegNum__chatbot__chatbotId__get_200_response_result_inner:
      example:
        chatbotId: 15225739
        corpRegNum: 1148196221
        conditionValue: 0
        conditionDescription: RBC 미등록 발신번호
      properties:
        corpRegNum:
          description: 조회 요청한 사업자등록번호
          example: 1148196221
          type: string
        chatbotId:
          description: 조회 요청한 발신번호
          example: 15225739
          type: string
        conditionValue:
          description: |
            발신번호 등록 여부 상태값 0: RBC 미등록 발신번호<br> 1: 해당 사업자로 등록된 발신번호<br> 2: 해당 사업자로 등록된 발신번호가 아님
          enum:
          - 0
          - 1
          - 2
          example: 0
          type: integer
        conditionDescription:
          description: |
            conditionValue 에 대한 설명
          enum:
          - RBC 미등록 발신번호
          - 해당 사업자로 등록된 발신번호
          - 해당 사업자로 등록된 발신번호가 아님
          type: string
    _agency__agencyId__corp__corpRegNum__chatbot__chatbotId__get_200_response:
      example:
        result:
        - chatbotId: 15225739
          corpRegNum: 1148196221
          conditionValue: 0
          conditionDescription: RBC 미등록 발신번호
        - chatbotId: 15225739
          corpRegNum: 1148196221
          conditionValue: 0
          conditionDescription: RBC 미등록 발신번호
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_agency__agencyId__corp__corpRegNum__chatbot__chatbotId__get_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _usableQuery_chatbotId__chatbotId__get_200_response:
      example:
        result:
        - bot-chat2212
        - bot-chat2212
        code: "20000000"
        status: 0
        desc: registration available
      properties:
        result:
          items:
            example: bot-chat2212
            type: string
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          example: registration available
          type: string
    _baselayout_component_get_200_response:
      example:
        result:
        - bodyYn: "Y"
          componentId: componentId
          headerYn: "Y"
          groupComponentId: groupComponentId
          iconImgFileUrl: iconImgFileUrl
          footerYn: "Y"
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          componentName: componentName
          status: status
        - bodyYn: "Y"
          componentId: componentId
          headerYn: "Y"
          groupComponentId: groupComponentId
          iconImgFileUrl: iconImgFileUrl
          footerYn: "Y"
          options:
            rightTextStyle: normal
            rightAlign: right
            leftAlign: left
            leftTextStyle: normal
            maxCount: 0
          componentName: componentName
          status: status
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 6
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/ComponentInfo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _baselayout_sample_get_200_response:
      example:
        result:
        - updateDate: 2023-10-25T06:22:55.418+09
          productCode: sms
          registerId: registerId
          approvalResult: 등록완료
          sampleLayoutId: sampleLayoutId
          sampleLayoutName: sampleLayoutName
          status: ready
          registerDate: 2023-10-25T06:22:55.418+09
        - updateDate: 2023-10-25T06:22:55.418+09
          productCode: sms
          registerId: registerId
          approvalResult: 등록완료
          sampleLayoutId: sampleLayoutId
          sampleLayoutName: sampleLayoutName
          status: ready
          registerDate: 2023-10-25T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/SampleLayout'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _baselayout_sample__sampleLayoutId__get_200_response:
      example:
        result:
        - buttonColor: ""
          headerComposition: ""
          cardType: ""
          formattedString: ""
          footerComposition: ""
          spec: ""
          bodyComposition: ""
        - buttonColor: ""
          headerComposition: ""
          cardType: ""
          formattedString: ""
          footerComposition: ""
          spec: ""
          bodyComposition: ""
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/SampleLayoutDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _baselayout_product_rule_get_200_response:
      example:
        result:
        - componentCount: 6
          componentLimit:
            ItemGroup: 1
            TableGroup: 2
            ThumbnailGroup: 1
            NoticeGroup: 1
            ThumbDescGroup: 1
            ButtonGroup: 2
            DescriptionGroup: 2
            ImageGroup: 1
            TitleGroup: 1
            BannerGroup: 1
          productCode: lms
          buttonCount: 3
          componentMinCount: 1
        - componentCount: 6
          componentLimit:
            ItemGroup: 1
            TableGroup: 2
            ThumbnailGroup: 1
            NoticeGroup: 1
            ThumbDescGroup: 1
            ButtonGroup: 2
            DescriptionGroup: 2
            ImageGroup: 1
            TitleGroup: 1
            BannerGroup: 1
          productCode: lms
          buttonCount: 3
          componentMinCount: 1
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/LayoutRule'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__layout_get_200_response:
      example:
        result:
        - updateDate: 2023-10-25T06:22:55.418+09
          productCode: sms
          registerId: registerId
          approvalResult: 등록완료
          sampleLayoutId: sampleLayoutId
          sampleLayoutName: sampleLayoutName
          status: ready
          registerDate: 2023-10-25T06:22:55.418+09
        - updateDate: 2023-10-25T06:22:55.418+09
          productCode: sms
          registerId: registerId
          approvalResult: 등록완료
          sampleLayoutId: sampleLayoutId
          sampleLayoutName: sampleLayoutName
          status: ready
          registerDate: 2023-10-25T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandLayout'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _brand__brandId__layout_post_200_response_result_inner:
      example:
        layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
      properties:
        layoutId:
          description: |-
            등록된 레이아웃 ID(= messagebaseId) 입니다.
            레이아웃 ID는 RCS 발송에 사용하는 messagebaseId 로 사용됩니다.
          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
          type: string
    _brand__brandId__layout_post_200_response:
      example:
        result:
        - layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        - layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__layout_post_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__layout__layoutId__get_200_response:
      example:
        result:
        - buttonColor: ""
          policyInfo:
            buttonsAllowed: true
            maxButtonCount: 9
            adHeaderAllowed: true
            maxDescriptionSize: 3
            cardCount: 2
            maxTitleSize: 7
            adBodyAllowed: true
            maxMediaSize: 2
          headerComposition: ""
          cardType: ""
          formattedString: ""
          footerComposition: ""
          params: ""
          guideInfo:
            imageWidth: 5
            maxDescriptionSize: 1
            maxLineCount: 0
            maxDisplayText: 6
            detailInfo:
              summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
                가이드 정보입니다.
              charactersPerLine:
                buttonName: 17
                description: 18
                title: 16
              combinations:
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              releaseDate: 2020-07-31T00:00:00.000+09
              productCardType: Standalone Media Top Tall
            imageHeight: 5
          spec: ""
          bodyComposition: ""
        - buttonColor: ""
          policyInfo:
            buttonsAllowed: true
            maxButtonCount: 9
            adHeaderAllowed: true
            maxDescriptionSize: 3
            cardCount: 2
            maxTitleSize: 7
            adBodyAllowed: true
            maxMediaSize: 2
          headerComposition: ""
          cardType: ""
          formattedString: ""
          footerComposition: ""
          params: ""
          guideInfo:
            imageWidth: 5
            maxDescriptionSize: 1
            maxLineCount: 0
            maxDisplayText: 6
            detailInfo:
              summary: 모든 RCS A2P 대상 단말에서 메시지가 짤려 보이지 않을 최대 보장 description 라인 수에 대한
                가이드 정보입니다.
              charactersPerLine:
                buttonName: 17
                description: 18
                title: 16
              combinations:
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              - condition:
                  mediaPhase: Tall
                  numberOfButtons: 1
                  numberOfLinesOnTitle: 2
                numberOfLinesOnDescription: 5
              releaseDate: 2020-07-31T00:00:00.000+09
              productCardType: Standalone Media Top Tall
            imageHeight: 5
          spec: ""
          bodyComposition: ""
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandLayoutDetail'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__layout__layoutId__put_200_response_result_inner:
      example:
        body:
          mTitle: ""
          description: ""
          mTitleMedia: ""
          mediaUrl1: ""
        layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
      properties:
        layoutId:
          description: "수정된 레이아웃 ID(= messagebaseId) 입니다.  \n레이아웃 ID는 RCS 발송에 사용하는\
            \ messagebaseId 로 사용됩니다.\n"
          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
          type: string
        body:
          description: "중계사 발송 API /message 의 body에 사용되는 발송 전문 필드 정보입니다.  \n규격서에 나\
            열된 항목 이외에도 지정한 컴포넌트별 입력 가능한 항목을 추출하여 구성 제공합니다.\n"
          example:
            mTitle: ""
            description: ""
            mTitleMedia: ""
            mediaUrl1: ""
          type: object
    _brand__brandId__layout__layoutId__put_200_response:
      example:
        result:
        - body:
            mTitle: ""
            description: ""
            mTitleMedia: ""
            mediaUrl1: ""
          layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        - body:
            mTitle: ""
            description: ""
            mTitleMedia: ""
            mediaUrl1: ""
          layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__layout__layoutId__put_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__layout__layoutId__delete_200_response_result_inner:
      example:
        layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
      properties:
        layoutId:
          description: "삭제된 레이아웃 ID(= messagebaseId) 입니다.  \n레이아웃 ID는 RCS 발송에 사용하는\
            \ messagebaseId 로 사용됩니다.\n"
          example: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
          type: string
    _brand__brandId__layout__layoutId__delete_200_response:
      example:
        result:
        - layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        - layoutId: CLLBR.7PmB4yrmf1-W3c87N1aDBitQfzb0qm9
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__layout__layoutId__delete_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__logo_get_200_response:
      example:
        result:
        - updateId: userId
          fileName: 300x300.gif
          updateDate: 2024-03-12T06:22:55.418+09
          approvalDate: 2024-03-12T06:22:55.418+09
          approvalResult: 승인
          registerId: userId
          name: OO용 로고
          description: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
          fileUrl: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
          approvalReason: 승인완료
          fileId: BLG-BR.5nOGE1R3y6-8PMn
          registerDate: 2024-03-12T06:22:55.418+09
        - updateId: userId
          fileName: 300x300.gif
          updateDate: 2024-03-12T06:22:55.418+09
          approvalDate: 2024-03-12T06:22:55.418+09
          approvalResult: 승인
          registerId: userId
          name: OO용 로고
          description: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
          fileUrl: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
          approvalReason: 승인완료
          fileId: BLG-BR.5nOGE1R3y6-8PMn
          registerDate: 2024-03-12T06:22:55.418+09
        code: "20000000"
        pagination:
          total: 6
          offset: 0
          limit: 596
        links:
          next: next
          prev: prev
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandLogo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        links:
          $ref: '#/components/schemas/Links'
    _brand__brandId__logo_post_200_response_result_inner:
      example:
        fileId: BLG-BR.275F8GY6nR-uylr
      properties:
        fileId:
          description: 등록된 로고 ID 입니다.
          example: BLG-BR.275F8GY6nR-uylr
          type: string
    _brand__brandId__logo_post_200_response:
      example:
        result:
        - fileId: BLG-BR.275F8GY6nR-uylr
        - fileId: BLG-BR.275F8GY6nR-uylr
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__logo_post_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__logo__fileId__get_200_response:
      example:
        result:
        - updateId: userId
          fileName: 300x300.gif
          updateDate: 2024-03-12T06:22:55.418+09
          approvalDate: 2024-03-12T06:22:55.418+09
          approvalResult: 승인
          registerId: userId
          name: OO용 로고
          description: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
          fileUrl: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
          approvalReason: 승인완료
          fileId: BLG-BR.5nOGE1R3y6-8PMn
          registerDate: 2024-03-12T06:22:55.418+09
        - updateId: userId
          fileName: 300x300.gif
          updateDate: 2024-03-12T06:22:55.418+09
          approvalDate: 2024-03-12T06:22:55.418+09
          approvalResult: 승인
          registerId: userId
          name: OO용 로고
          description: 300x300 사이즈 GIF 이미지를 이용한 로고 입니다.
          fileUrl: https://file-qa.rcsbizcenter.com/brand/BR.5nOGE1R3y6/logo/BLG-BR.5nOGE1R3y6-8PMn_1.gif
          approvalReason: 승인완료
          fileId: BLG-BR.5nOGE1R3y6-8PMn
          registerDate: 2024-03-12T06:22:55.418+09
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/BrandLogo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__logo__fileId__put_200_response_result_inner:
      example:
        fileId: BLG-BR.275F8GY6nR-uylr
      properties:
        fileId:
          description: 수정된 로고 ID 입니다.
          example: BLG-BR.275F8GY6nR-uylr
          type: string
    _brand__brandId__logo__fileId__put_200_response:
      example:
        result:
        - fileId: BLG-BR.275F8GY6nR-uylr
        - fileId: BLG-BR.275F8GY6nR-uylr
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__logo__fileId__put_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _brand__brandId__logo__fileId__delete_200_response_result_inner:
      example:
        fileId: BLG-BR.275F8GY6nR-uylr
      properties:
        fileId:
          description: 삭제된 로고 ID 입니다.
          example: BLG-BR.275F8GY6nR-uylr
          type: string
    _brand__brandId__logo__fileId__delete_200_response:
      example:
        result:
        - fileId: BLG-BR.275F8GY6nR-uylr
        - fileId: BLG-BR.275F8GY6nR-uylr
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/_brand__brandId__logo__fileId__delete_200_response_result_inner'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _logo_common_get_200_response:
      example:
        result:
        - fileName: fileName
          fileUrl: fileUrl
          fileId: fileId
        - fileName: fileName
          fileUrl: fileUrl
          fileId: fileId
        code: "20000000"
        status: 0
        desc: desc
      properties:
        result:
          items:
            $ref: '#/components/schemas/CommonLogo'
          type: array
        code:
          default: 20000000
          type: string
        status:
          default: 200
          type: integer
        desc:
          type: string
    _204ErrorInfo_error:
      properties:
        code:
          example: 60004
          type: string
        message:
          example: No Content
          type: string
    _401ErrorInfo_error:
      properties:
        code:
          example: 61001
          type: string
        message:
          example: Missing Authorization header
          type: string
    _403ErrorInfo_error:
      properties:
        code:
          example: 63001
          type: string
        message:
          example: No Brand Permission
          type: string
    _400ErrorInfo_error:
      properties:
        code:
          example: 64001
          type: string
        message:
          example: Missing X-RCS-BrandKey header
          type: string
    WebhookErrorInfo_error:
      example:
        code: 69999
        message: No Subscription
      properties:
        code:
          example: 69999
          type: string
        message:
          example: No Subscription
          type: string
    Category_subCategories_inner:
      example:
        subCategoryId: FIN001
        subCategoryName: 은행
      properties:
        subCategoryId:
          description: 브랜드 하위 카테고리 ID 입니다.
          example: FIN001
          maximum: 64
          type: string
        subCategoryName:
          description: 브랜드 하위 카테고리 명 입니다.
          example: 은행
          maximum: 64
          type: string
    RegBrandInfo_regBrand:
      properties:
        name:
          description: 브랜드 홈에 표시되는 브랜드 이름 입니다니다.
          example: FAN
          maximum: 20
          type: string
        description:
          description: 브랜드 홈에 표시되는 브랜드 설명 입니다.
          maximum: 150
          type: string
        tel:
          description: |
            브랜드 홈에 노출될 전화번호(대표발신번호와 별개) 입니다.
          maximum: 12
          type: string
        menus:
          description: "브랜드 홈에는 최대 4개까지 표시됩니다.  \nchat은 기본 등록 되므로 지정할 수 있는 최대 menu는\
            \ 3개이며, 등록 시 call을 포함하지 않고 2개 이하 지정할 경우 call을 기본 추가합니다.  \n\n  + **2020년\
            \ 12월 3일 기준 브랜드 menus 중 app 은 이통사 정책에 의거 한시적으로 등록이 불가하며 app 등록 시 error\
            \ 리턴됩니다.**\n"
          items:
            $ref: '#/components/schemas/MenuItemInfo'
          type: array
        categoryId:
          description: 브랜드 카테고리 ID 입니다.
          maximum: 64
          type: string
        subCategoryId:
          description: 브랜드 하위 카테고리 ID 입니다.
          maximum: 64
          type: string
        categoryOpt:
          description: 검색용 키워드 임의 등록 할 수 있습니다.
          maximum: 20
          type: string
        zipCode:
          description: 브랜드 홈에 표시될 우편번호(5자리) 입니다.
          maximum: 5
          type: string
        roadAddress:
          description: 브랜드 홈에 표시되는 도로명주소 입니다.
          maximum: 200
          type: string
        detailAddress:
          description: 브랜드 홈에 표시되는 상세주소 입니다.
          maximum: 200
          type: string
        email:
          description: 브랜드 홈에 표시되는 이메일주소 입니다.
          format: email
          maximum: 30
          type: string
        webSiteUrl:
          description: 브랜드 홈에 표시되는 홈페이지 주소 입니다.
          maximum: 128
          type: string
        initTab:
          default: FEED
          description: "단말에 표시되는 브랜드 홈의 기본 탭을 지정하는 항목입니다.  \n미지정 시 기본값은 FEED 입니다.\
            \  \n+ FEED: 소식탭을 기본 탭으로 지정합니다.   + INFO: 정보탭을 기본 탭으로 지정합니다.  \n"
          enum:
          - FEED
          - INFO
          maximum: 5
          type: string
        initFeedItem:
          deprecated: true
          description: "하위 호환성을 위해 필드는 유지되지만, 동일한 용도의 initFeedItems 사용을 권고합니다.   \n\
            + TEL: 소식탭에 전화걸기(= 퀵버튼 call) 버튼이 표시됩니다.   + HOME: 소식탭에 Web 연결(= 퀵버튼 web)\
            \ 버튼이 표시됩니다.   + SEARCH: 소식탭에 포털검색(= portalsearch) 버튼이 표시되며, 소식탭 전용 퀵버\
            튼입니다.  \n"
          enum:
          - TEL
          - HOME
          - SEARCH
          maximum: 6
          type: string
        initFeedItems:
          description: "initTab FEED인 경우, 소식탭에 표시할 메뉴를 지정합니다.  \nmenus에서 설정한 항목 중\
            \ 소식탭에 표시할 항목을 지정합니다. 즉, menus에 지정되지 않은 항목을 설정하면 error 처리 됩니다.  \nmenus는\
            \ 최대 3개까지 지정할 수 있으며, menus에 설정한 3개항목과 소식탭에만 표시가능한 portalsearch를 추가로 등록\
            할 경우 최대 4개가 등록됩니다.  \n"
          example:
          - call
          - web
          - moreinfo
          - portalsearch
          items:
            enum:
            - call
            - web
            - store
            - order
            - buy
            - tickets
            - moreinfo
            - portalsearch
            type: string
          type: array
        templateColor:
          description: |
            브랜드 내 등록되는 템플릿의 버튼 컬러 값을 지정합니다.   컬러값은 Hex code 형식만 유효합니다.
          maximum: 10
          type: string
          example: null
        bizInfoYn:
          default: "N"
          description: "브랜드 소식탭에 운영정보 사용 여부를 설정합니다.  \n"
          enum:
          - "Y"
          - "N"
          type: string
        bizInfoTitle:
          description: "bizInfoYn = 'Y'인 경우, 운영정보 제목을 지정합니다.  \n"
          example: 영업시간 안내
          maximum: 20
          type: string
        bizInfoContent:
          description: |
            bizInfoYn = 'Y'인 경우, 운영정보 내용을 지정합니다.
          example: "월~금 : 10:30 ~ 20:00 주말 및 공휴일은 휴무입니다."
          maximum: 200
          type: string
      required:
      - categoryId
      - description
      - name
      - subCategoryId
      - tel
    NotiBidirectional_value:
      example:
        chatbotId: chatbotId
        corpRegNum: corpRegNum
        brandKey: brandKey
        agencyCorpRegNum: agencyCorpRegNum
        brandId: brandId
        agencyId: agencyId
      properties:
        agencyCorpRegNum:
          description: 대행사 사업자등록번호
          maximum: 10
          type: string
        agencyId:
          description: 대행사 ID
          maximum: 20
          type: string
        brandId:
          description: 브랜드 ID
          maximum: 13
          type: string
        brandKey:
          description: 브랜드 Key
          maximum: 18
          type: string
        chatbotId:
          description: 대화방 ID
          maximum: 15
          type: string
        corpRegNum:
          description: 기업 사업자등록번호
          maximum: 10
          type: string
    MediaUrl_inner:
      example:
        fileName: fileName
        typeName: icon
        url: url
        fileId: fileId
      properties:
        fileId:
          type: string
        url:
          type: string
        typeName:
          description: |
            이미지의 사용 유형을 구분합니다.\
            icon - 템플릿 양식 아이콘 이미지<br> profile - 브랜드 프로필 이미지<br> background - 브랜드 백그라운드 이미지<br>
          enum:
          - icon
          - profile
          - background
          type: string
        fileName:
          description: 등록한 파일의 이름입니다.
          maximum: 256
          type: string
    DetailInfo_charactersPerLine:
      description: 각 항목 별 권장 라인당 글자수
      example:
        buttonName: 17
        description: 18
        title: 16
      properties:
        title:
          description: 타이틀 라인당 글자수
          example: 16
          type: integer
        description:
          description: 디스크립션 라인당 글자수
          example: 18
          type: integer
        buttonName:
          description: 버튼명 라인당 글자수
          example: 17
          type: integer
    DetailInfo_combinations_inner_condition:
      description: 디스크립션 라인수에 영향을 미치는 조건
      example:
        mediaPhase: Tall
        numberOfButtons: 1
        numberOfLinesOnTitle: 2
      properties:
        mediaPhase:
          description: "미디어 위상(위치, 크기)"
          example: Tall
          type: string
        numberOfLinesOnTitle:
          description: 타이틀 라인수
          example: 2
          type: integer
        numberOfButtons:
          description: 버튼수
          example: 1
          type: integer
    DetailInfo_combinations_inner:
      example:
        condition:
          mediaPhase: Tall
          numberOfButtons: 1
          numberOfLinesOnTitle: 2
        numberOfLinesOnDescription: 5
      properties:
        condition:
          $ref: '#/components/schemas/DetailInfo_combinations_inner_condition'
        numberOfLinesOnDescription:
          description: 조건에 따른 권장 디스크립션 라인수
          example: 5
          type: integer
    RCSMessage_RCSMessage:
      example:
        trafficType: ""
      oneOf:
      - $ref: '#/components/schemas/RichcardMessage'
      - $ref: '#/components/schemas/OpenrichcardMessage'
      properties:
        trafficType:
          enum:
          - advertisment
    RegRCSMessage_RCSMessage:
      allOf:
      - $ref: '#/components/schemas/OpenrichcardMessage'
      example:
        trafficType: ""
      properties:
        trafficType:
          enum:
          - advertisment
    RegAutoReplyMsgInfo_buttons_inner:
      properties:
        suggestions:
          items:
            $ref: '#/components/schemas/AutoReplyMsgActions'
          type: array
    RegPersistentMenu_L0_action:
      oneOf:
      - $ref: '#/components/schemas/dialerAction'
    RegPersistentMenu_L1_action:
      oneOf:
      - $ref: '#/components/schemas/urlAction'
      - $ref: '#/components/schemas/dialerAction'
    RegTemplateInfo_body_inner:
      oneOf:
      - $ref: '#/components/schemas/StringObject'
      - $ref: '#/components/schemas/FileObject'
      - $ref: '#/components/schemas/LineObject'
    RegTemplateInfo_buttons_inner:
      example:
      - suggestions:
        - action:
            urlAction:
              openUrl:
                url: https://www.rcsbizcenter.com
            displayText: 카드1버튼1
            postback:
              data: set_by_chatbot_open_url
        - action:
            urlAction:
              openUrl:
                url: https://www.rcsbizcenter.com
            displayText: 카드1버튼2
      - {}
      - suggestions:
        - action:
            urlAction:
              openUrl:
                url: https://www.google.com
            displayText: 카드3버튼1
            postback:
              data: set_by_chatbot_open_url
      properties:
        suggestions:
          items:
            $ref: '#/components/schemas/action'
          type: array
    CustomReply_reply_postback:
      description: Definition of data to be posted back from UE to chatbot.
      properties:
        data:
          maxLength: 2048
          type: string
      required:
      - data
    CustomReply_reply:
      properties:
        autoReplyMsgId:
          description: 자동응답메시지ID 입니다.
          maximum: 40
          type: string
        displayText:
          description: 버튼명(표시문자열)으로 표시되는 항목입니다.
          maxLength: 25
          minLength: 1
          type: string
        postback:
          $ref: '#/components/schemas/CustomReply_reply_postback'
      required:
      - autoReplyMsgId
    ComponentInfo_options:
      description: |
        레이아웃 사용 시 컴포넌트에 적용될 수 있는 옵션입니다.   옵션 지정이 가능한 경우 표기됩니다.
      oneOf:
      - $ref: '#/components/schemas/TableOption'
      - $ref: '#/components/schemas/ButtonOption'
    LayoutRule_componentLimit:
      description: |
        현재 제공되는 컴포넌트 그룹ID 별 레이아웃 내 설정 가능한 컴포넌트 그룹의 지정 가능 개수를 표시합니다.
      example:
        ItemGroup: 1
        TableGroup: 2
        ThumbnailGroup: 1
        NoticeGroup: 1
        ThumbDescGroup: 1
        ButtonGroup: 2
        DescriptionGroup: 2
        ImageGroup: 1
        TitleGroup: 1
        BannerGroup: 1
      properties:
        ImageGroup:
          example: 1
          type: integer
        TitleGroup:
          example: 1
          type: integer
        BannerGroup:
          example: 1
          type: integer
        DescriptionGroup:
          example: 2
          type: integer
        ItemGroup:
          example: 1
          type: integer
        ThumbDescGroup:
          example: 1
          type: integer
        TableGroup:
          example: 2
          type: integer
        ThumbnailGroup:
          example: 1
          type: integer
        NoticeGroup:
          example: 1
          type: integer
        ButtonGroup:
          example: 2
          type: integer
    action_action:
      allOf:
      - $ref: '#/components/schemas/suggestion'
      - oneOf:
        - $ref: '#/components/schemas/urlAction'
        - $ref: '#/components/schemas/dialerAction'
        - $ref: '#/components/schemas/mapAction'
        - $ref: '#/components/schemas/calendarAction'
        - $ref: '#/components/schemas/composeAction'
        - $ref: '#/components/schemas/clipboardAction'
        - $ref: '#/components/schemas/localBrowserAction'
    urlAction_urlAction_oneOf_openUrl:
      properties:
        url:
          format: uri
          type: string
      required:
      - url
    urlAction_urlAction_oneOf:
      properties:
        openUrl:
          $ref: '#/components/schemas/urlAction_urlAction_oneOf_openUrl'
      required:
      - openUrl
    urlAction_urlAction:
      oneOf:
      - $ref: '#/components/schemas/urlAction_urlAction_oneOf'
    dialerAction_dialerAction_oneOf_dialPhoneNumber:
      example:
        phoneNumber: phoneNumber
        fallbackUrl: https://openapi-generator.tech
      properties:
        phoneNumber:
          type: string
        fallbackUrl:
          format: uri
          type: string
      required:
      - phoneNumber
    dialerAction_dialerAction_oneOf:
      example:
        dialPhoneNumber:
          phoneNumber: phoneNumber
          fallbackUrl: https://openapi-generator.tech
      properties:
        dialPhoneNumber:
          $ref: '#/components/schemas/dialerAction_dialerAction_oneOf_dialPhoneNumber'
      required:
      - dialPhoneNumber
    dialerAction_dialerAction:
      oneOf:
      - $ref: '#/components/schemas/dialerAction_dialerAction_oneOf'
    mapAction_mapAction_oneOf_showLocation_location:
      properties:
        latitude:
          type: number
        longitude:
          type: number
        label:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - latitude
      - longitude
    mapAction_mapAction_oneOf_showLocation:
      description: Shows a given location on a map.
      properties:
        location:
          $ref: '#/components/schemas/mapAction_mapAction_oneOf_showLocation_location'
        fallbackUrl:
          format: uri
          type: string
      required:
      - location
    mapAction_mapAction_oneOf:
      properties:
        showLocation:
          $ref: '#/components/schemas/mapAction_mapAction_oneOf_showLocation'
      required:
      - showLocation
    mapAction_mapAction_oneOf_1_requestLocationPush:
      description: One-time request to send a geo location push from UE to chatbot
      properties:
        currentLocation:
          description: set true to send current location without location selection
          type: boolean
    mapAction_mapAction_oneOf_1:
      properties:
        requestLocationPush:
          $ref: '#/components/schemas/mapAction_mapAction_oneOf_1_requestLocationPush'
      required:
      - requestLocationPush
    mapAction_mapAction:
      oneOf:
      - $ref: '#/components/schemas/mapAction_mapAction_oneOf'
      - $ref: '#/components/schemas/mapAction_mapAction_oneOf_1'
    calendarAction_calendarAction_oneOf_createCalendarEvent:
      properties:
        startTime:
          example: 2021-05-24T10:35:00.000Z
          format: date-time
          type: string
        endTime:
          example: 2021-05-24T19:35:04.147Z
          format: date-time
          type: string
        title:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 500
          minLength: 1
          type: string
        fallbackUrl:
          format: uri
          type: string
      required:
      - endTime
      - startTime
      - title
    calendarAction_calendarAction_oneOf:
      properties:
        createCalendarEvent:
          $ref: '#/components/schemas/calendarAction_calendarAction_oneOf_createCalendarEvent'
      required:
      - createCalendarEvent
    calendarAction_calendarAction:
      oneOf:
      - $ref: '#/components/schemas/calendarAction_calendarAction_oneOf'
    composeAction_composeAction_oneOf_composeTextMessage:
      description: Compose a draft text message.
      properties:
        phoneNumber:
          type: string
        text:
          maxLength: 100
          type: string
      required:
      - phoneNumber
      - text
    composeAction_composeAction_oneOf:
      properties:
        composeTextMessage:
          $ref: '#/components/schemas/composeAction_composeAction_oneOf_composeTextMessage'
      required:
      - composeTextMessage
    composeAction_composeAction_oneOf_1_composeRecordingMessage:
      description: Compose a draft message with a media recording.
      properties:
        phoneNumber:
          type: string
        type:
          enum:
          - AUDIO
          - VIDEO
          type: string
    composeAction_composeAction_oneOf_1:
      properties:
        composeRecordingMessage:
          $ref: '#/components/schemas/composeAction_composeAction_oneOf_1_composeRecordingMessage'
      required:
      - composeRecordingMessage
    composeAction_composeAction:
      oneOf:
      - $ref: '#/components/schemas/composeAction_composeAction_oneOf'
      - $ref: '#/components/schemas/composeAction_composeAction_oneOf_1'
    deviceAction_deviceAction_oneOf:
      properties:
        requestDeviceSpecifics:
          description: Request specifics about the user's device.
          type: object
      required:
      - requestDeviceSpecifics
    deviceAction_deviceAction:
      oneOf:
      - $ref: '#/components/schemas/deviceAction_deviceAction_oneOf'
    settingsAction_settingsAction_oneOf:
      properties:
        disableAnonymization:
          description: Ask the user to disable the anonymization setting.
          type: object
      required:
      - disableAnonymization
    settingsAction_settingsAction_oneOf_1:
      properties:
        enableDisplayedNotifications:
          description: Ask the user to enable sending displayed notifications.
          type: object
      required:
      - enableDisplayedNotifications
    settingsAction_settingsAction:
      oneOf:
      - $ref: '#/components/schemas/settingsAction_settingsAction_oneOf'
      - $ref: '#/components/schemas/settingsAction_settingsAction_oneOf_1'
    clipboardAction_clipboardAction_oneOf_copyToClipboard:
      properties:
        text:
          type: string
      required:
      - text
    clipboardAction_clipboardAction_oneOf:
      properties:
        copyToClipboard:
          $ref: '#/components/schemas/clipboardAction_clipboardAction_oneOf_copyToClipboard'
      required:
      - copyToClipboard
    clipboardAction_clipboardAction:
      oneOf:
      - $ref: '#/components/schemas/clipboardAction_clipboardAction_oneOf'
    localBrowserAction_localBrowserAction_oneOf_openUrl:
      properties:
        url:
          format: uri
          type: string
        isHalfView:
          default: false
          description: set true to show Internal Web browser in vertical half size
            of screen
          type: boolean
        postParameter:
          description: parameters to be sent as POST method when open url
          type: object
      required:
      - url
    localBrowserAction_localBrowserAction_oneOf:
      properties:
        openUrl:
          $ref: '#/components/schemas/localBrowserAction_localBrowserAction_oneOf_openUrl'
      required:
      - openUrl
    localBrowserAction_localBrowserAction:
      oneOf:
      - $ref: '#/components/schemas/localBrowserAction_localBrowserAction_oneOf'
    shareAction_shareAction_oneOf:
      properties:
        shareText:
          $ref: '#/components/schemas/clipboardAction_clipboardAction_oneOf_copyToClipboard'
      required:
      - shareText
    shareAction_shareAction:
      oneOf:
      - $ref: '#/components/schemas/shareAction_shareAction_oneOf'
    linear_layout_allOf_children:
      oneOf:
      - $ref: '#/components/schemas/view'
      - $ref: '#/components/schemas/linear_layout_L1'
      - $ref: '#/components/schemas/text_view'
      - $ref: '#/components/schemas/image_view'
    linear_layout_L1_allOf_children:
      oneOf:
      - $ref: '#/components/schemas/view'
      - $ref: '#/components/schemas/linear_layout_L2'
      - $ref: '#/components/schemas/text_view'
      - $ref: '#/components/schemas/image_view'
    linear_layout_L2_allOf_children:
      oneOf:
      - $ref: '#/components/schemas/view'
      - $ref: '#/components/schemas/text_view'
      - $ref: '#/components/schemas/image_view'
    Views_click:
      oneOf:
      - $ref: '#/components/schemas/reply'
      - $ref: '#/components/schemas/action'
    OpenrichcardMessage_openrichcardMessage_layout:
      oneOf:
      - $ref: '#/components/schemas/view'
      - $ref: '#/components/schemas/linear_layout'
      - $ref: '#/components/schemas/text_view'
      - $ref: '#/components/schemas/image_view'
    OpenrichcardMessage_openrichcardMessage_suggestions_inner:
      oneOf:
      - $ref: '#/components/schemas/action'
    OpenrichcardMessage_openrichcardMessage:
      properties:
        card:
          enum:
          - open_rich_card
          type: string
        copyAllowed:
          description: set true to allow text copy of card text
          type: boolean
        zoomAllowed:
          description: 메시지 확대/축소 가능 여부
          type: boolean
        scaleAllowed:
          description: 이미지 비율 맞춤 활성화 여부
          type: boolean
        layout:
          $ref: '#/components/schemas/OpenrichcardMessage_openrichcardMessage_layout'
        suggestions:
          description: "Suggested replies and/or suggested actions for a chatbot message,\
            \ send from chatbot platform to client."
          items:
            $ref: '#/components/schemas/OpenrichcardMessage_openrichcardMessage_suggestions_inner'
          maxItems: 11
          minItems: 1
          type: array
      required:
      - card
      - layout
    generalPurposeCardMessage_generalPurposeCard_layout_oneOf:
      properties:
        cardOrientation:
          enum:
          - VERTICAL
          type: string
        titleFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        descriptionFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        style:
          description: A reference to a CSS for the rendering of the Rich Card(s).
          format: uri
          type: string
      required:
      - cardOrientation
    generalPurposeCardMessage_generalPurposeCard_layout_oneOf_1:
      properties:
        cardOrientation:
          enum:
          - HORIZONTAL
          type: string
        imageAlignment:
          enum:
          - LEFT
          - RIGHT
          type: string
        titleFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        descriptionFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        style:
          description: A reference to a CSS for the rendering of the Rich Card(s).
          format: uri
          type: string
      required:
      - cardOrientation
      - imageAlignment
    generalPurposeCardMessage_generalPurposeCard_layout:
      oneOf:
      - $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard_layout_oneOf'
      - $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard_layout_oneOf_1'
    generalPurposeCardMessage_generalPurposeCard_content:
      anyOf:
      - required:
        - media
      - required:
        - title
      - required:
        - description
      properties:
        media:
          $ref: '#/components/schemas/cardMedia'
        title:
          maxLength: 200
          minLength: 1
          type: string
        description:
          maxLength: 2000
          minLength: 1
          type: string
    generalPurposeCardMessage_generalPurposeCard:
      properties:
        layout:
          $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard_layout'
        content:
          $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard_content'
        zoomAllowed:
          description: 메시지 확대/축소 가능 여부
          type: boolean
      required:
      - content
      - layout
    generalPurposeCardCarouselMessage_generalPurposeCardCarousel_layout:
      properties:
        cardWidth:
          default: SMALL_WIDTH
          enum:
          - SMALL_WIDTH
          - MEDIUM_WIDTH
          type: string
        titleFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        descriptionFontStyle:
          items:
            enum:
            - italics
            - bold
            - underline
            type: string
          maxItems: 3
          minItems: 1
          type: array
        style:
          description: A reference to a CSS for the rendering of the Rich Card(s).
          format: uri
          type: string
      required:
      - cardWidth
    generalPurposeCardCarouselMessage_generalPurposeCardCarousel:
      properties:
        layout:
          $ref: '#/components/schemas/generalPurposeCardCarouselMessage_generalPurposeCardCarousel_layout'
        content:
          items:
            $ref: '#/components/schemas/generalPurposeCardMessage_generalPurposeCard_content'
          maxItems: 12
          minItems: 2
          type: array
        zoomAllowed:
          description: 메시지 확대/축소 가능 여부
          type: boolean
      required:
      - content
      - layout
    RichcardMessage_richcardMessage_message:
      description: "A chatbot message, sent from chatbot platform to client."
      oneOf:
      - $ref: '#/components/schemas/generalPurposeCardMessage'
      - $ref: '#/components/schemas/generalPurposeCardCarouselMessage'
    RichcardMessage_richcardMessage:
      properties:
        message:
          $ref: '#/components/schemas/RichcardMessage_richcardMessage_message'
  securitySchemes:
    jwtAuth:
      bearerFormat: JWT
      description: |
        인증방식은 JWT인증을 사용합니다. 토큰의 갱신은 없으며 토큰 만료 시 항상 재발급 받아야 합니다.
      scheme: bearer
      type: http

