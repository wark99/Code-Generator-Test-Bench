openapi: 3.1.0
info:
  description: "API for managing customers, orders, products, and categories in an\
    \ Inventory Management System."
  title: Inventory Management System API
  version: 1.0.0
servers:
- description: Main production server
  url: https://api.InventoryManagementSysteminventory.com/v1
paths:
  /customers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerArray'
          description: A list of customers is returned
      summary: List all customers
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: The customer was created successfully
      summary: Create a new customer
      x-content-type: application/json
      x-accepts: application/json
  /customers/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The customer was deleted successfully
      summary: Delete a customer by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Detailed customer information is returned
      summary: Get a customer by ID
      x-accepts: application/json
    parameters:
    - explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      style: simple
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_customers__id__patch_request'
        required: true
      responses:
        "200":
          description: The customer's information was partially updated
      summary: Partially update a customer's information by ID
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: The customer was updated successfully
      summary: Update a customer's information by ID
      x-content-type: application/json
      x-accepts: application/json
  /orders:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderArray'
          description: A list of orders is returned
      summary: List all orders
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: The order was created successfully
      summary: Create a new order
      x-content-type: application/json
      x-accepts: application/json
  /orders/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The order was deleted successfully
      summary: Delete an order by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Detailed order information is returned
      summary: Get an order by ID
      x-accepts: application/json
    parameters:
    - explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      style: simple
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_orders__id__patch_request'
        required: true
      responses:
        "200":
          description: The order's information was partially updated
      summary: Partially update an order's information by ID
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      responses:
        "200":
          description: The order was updated successfully
      summary: Update an order's information by ID
      x-content-type: application/json
      x-accepts: application/json
  /products:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductArray'
          description: A list of products is returned
      summary: List all products
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: The product was created successfully
      summary: Create a new product
      x-content-type: application/json
      x-accepts: application/json
  /products/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The product was deleted successfully
      summary: Delete a product by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Detailed product information is returned
      summary: Get a product by ID
      x-accepts: application/json
    parameters:
    - explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      style: simple
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_products__id__patch_request'
        required: true
      responses:
        "200":
          description: The product's information was partially updated
      summary: Partially update a product's information by ID
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: The product was updated successfully
      summary: Update a product's information by ID
      x-content-type: application/json
      x-accepts: application/json
  /categories:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryArray'
          description: A list of categories is returned
      summary: List all categories
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: The category was created successfully
      summary: Create a new category
      x-content-type: application/json
      x-accepts: application/json
  /categories/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The category was deleted successfully
      summary: Delete a category by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Detailed category information is returned
      summary: Get a category by ID
      x-accepts: application/json
    parameters:
    - explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      style: simple
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_categories__id__patch_request'
        required: true
      responses:
        "200":
          description: The category's information was partially updated
      summary: Partially update a category's information by ID
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          description: The category was updated successfully
      summary: Update a category's information by ID
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Customer:
      example:
        Email: Email
        CustomerID: 0
        Name: Name
      properties:
        CustomerID:
          description: Unique identifier for the customer
          type: integer
        Name:
          description: Customer's name
          type: string
        Email:
          description: Customer's email address
          format: email
          type: string
      required:
      - Email
      - Name
    CustomerArray:
      items:
        $ref: '#/components/schemas/Customer'
      type: array
    Order:
      example:
        TotalPrice: 6.027456183070403
        CustomerID: 1
        OrderID: 0
        Date: 2000-01-23
      properties:
        OrderID:
          description: Unique identifier for the order
          type: integer
        Date:
          description: Date when the order was placed
          format: date
          type: string
        TotalPrice:
          description: Total price of the order
          type: number
        CustomerID:
          description: Identifier for the customer who placed the order
          type: integer
      required:
      - CustomerID
      - TotalPrice
    OrderCreate:
      example:
        ProductIDs:
        - 6
        - 6
        TotalPrice: 1.4658129805029452
        CustomerID: 0
        Date: 2000-01-23
      properties:
        CustomerID:
          description: Identifier for the customer who is placing the order
          type: integer
        ProductIDs:
          description: List of product identifiers for the order
          items:
            type: integer
          type: array
        Date:
          description: Date when the order is placed
          format: date
          type: string
        TotalPrice:
          description: Total price of the order
          type: number
      required:
      - CustomerID
      - ProductIDs
      - TotalPrice
    OrderArray:
      items:
        $ref: '#/components/schemas/Order'
      type: array
    Product:
      example:
        CategoryID: 1
        Description: Description
        Price: 6.027456183070403
        ProductID: 0
        Name: Name
      properties:
        ProductID:
          description: Unique identifier for the product
          type: integer
        Name:
          description: Name of the product
          type: string
        Description:
          description: Description of the product
          type: string
        Price:
          description: Price of the product
          type: number
        CategoryID:
          description: Identifier for the category to which the product belongs
          type: integer
      required:
      - CategoryID
      - Description
      - Name
      - Price
    ProductArray:
      items:
        $ref: '#/components/schemas/Product'
      type: array
    Category:
      example:
        CategoryID: 0
        Description: Description
        Name: Name
      properties:
        CategoryID:
          description: Unique identifier for the category
          type: integer
        Name:
          description: Name of the category
          type: string
        Description:
          description: Description of the category
          type: string
      required:
      - Description
      - Name
    CategoryArray:
      items:
        $ref: '#/components/schemas/Category'
      type: array
    _customers__id__patch_request:
      properties:
        name:
          type: string
        email:
          format: email
          type: string
      required:
      - email
    _orders__id__patch_request:
      properties:
        TotalPrice:
          type: number
        ProductIDs:
          items:
            type: integer
          type: array
      required:
      - ProductIDs
    _products__id__patch_request:
      properties:
        Price:
          type: number
        Description:
          type: string
      required:
      - Price
    _categories__id__patch_request:
      properties:
        Description:
          type: string
      required:
      - Description

