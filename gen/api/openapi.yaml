openapi: 3.1.0
info:
  contact:
    email: xavier@gamestream.biz
  description: |-
    REST API for Gamestream Cloud Gaming game saves backups management
    Some useful links:
    - [Gamestream](https://www.gamestream?biz)
    - [Pleio](https://www.pleio.games)
  license: {}
  title: Gamestream Backup Service API
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://glusterfs1.sgx.io:8443
tags:
- description: Authentication methods
  name: auth
- description: Management operations about game saves backups
  name: backup
paths:
  /auth:
    post:
      description: Authenticate to Gamestream Backup Service. This step is mandatory
        to acess backup management methods. Authentication is purely cookie based.
        The JWT Token returned is response body if purely informational.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPasswordParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: successful operation
        "401":
          description: authentication failed
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Authenticate
      tags:
      - auth
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /logout:
    post:
      description: "Logout from Gamestream Backup Service. When logout is successfull,\
        \ the auuthorization cookie is automatically removed, and backup management\
        \ methods are no longer accessible."
      responses:
        "200":
          content:
            application/xhtml+xml:
              schema:
                type: string
          description: successful operation
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Logout
      tags:
      - auth
      x-accepts: application/xhtml+xml
  /backup/user/list:
    post:
      description: Get the list of players having at least one game save in the system.
      requestBody:
        $ref: '#/components/requestBodies/UsersBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: successful operation
        "500":
          description: Request error
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Get the list of players
      tags:
      - backup
      x-content-type: application/json
      x-accepts: application/json
  /backup/profile/list:
    post:
      description: Get the list of profiles for a given user
      requestBody:
        $ref: '#/components/requestBodies/ProfilesBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: successful operation
        "500":
          description: Request error
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Get the list of profiles
      tags:
      - backup
      x-content-type: application/json
      x-accepts: application/json
  /backup/item/list:
    post:
      description: Get the list of saves for a profile for a given user
      requestBody:
        $ref: '#/components/requestBodies/ItemsBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: successful operation
        "500":
          description: Request error
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Get the list of saves
      tags:
      - backup
      x-content-type: application/json
      x-accepts: application/json
  /backup/item/delete:
    post:
      description: Delete a save for a profile for a given user
      requestBody:
        $ref: '#/components/requestBodies/RestoreDeleteBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "500":
          description: Request error
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Delete a save
      tags:
      - backup
      x-content-type: application/json
      x-accepts: application/json
  /backup/item/restore:
    post:
      description: Restore a save for a profile for a given user
      requestBody:
        $ref: '#/components/requestBodies/RestoreDeleteBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreResponse'
          description: successful operation
        "500":
          description: Request error
      security:
      - cookieAuth: []
      - sessionCookieAuth: []
      summary: Restore a save
      tags:
      - backup
      x-content-type: application/json
      x-accepts: application/json
components:
  requestBodies:
    UsersBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUserParameters'
      description: Request body to retrieve the list of users
      required: true
    ProfilesBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProfileParameters'
      description: Request body to retrieve the list of profiles for a given user
      required: true
    ItemsBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestItemParameters'
      description: Request body to retrieve the list of saves of a profile for a given
        user
      required: true
    RestoreDeleteBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RestoreDeleteParameters'
      description: Request body to restore or delete a save of a profile for a given
        user
      required: true
  schemas:
    RequestUserSharedParameters:
      example:
        limit_length: 0
        draw: 1
        needle: ""
        limit_start: 0
      properties:
        draw:
          default: 1
          description: "draw parameter, must be set to 1"
          maximum: 1
          minimum: 1
          type: integer
        needle:
          default: ""
          description: case sensitive string to filter output data (empty string means
            no filtering)
          type: string
        limit_start:
          default: 0
          description: first index of the output data to be returned (first item index
            is 0)
          minimum: 0
          type: integer
        limit_length:
          default: 15
          description: maximum number of items to be returned (0 means all items)
          minimum: 0
          type: integer
      required:
      - draw
      - limit_length
      - limit_start
      - needle
      title: Shared user request parameters
    RequestUserParameters:
      $ref: '#/components/schemas/RequestUserSharedParameters'
    RequestProfileParameters:
      allOf:
      - $ref: '#/components/schemas/RequestUserSharedParameters'
      - properties:
          userid:
            default: ""
            description: ID of the user
            type: string
        required:
        - userid
      example:
        limit_length: 0
        draw: 1
        needle: ""
        limit_start: 0
        userid: ""
      title: Profile list request parameters
    RequestItemParameters:
      allOf:
      - $ref: '#/components/schemas/RequestProfileParameters'
      - properties:
          profile:
            default: ""
            description: ID of the profile of the user
            type: string
        required:
        - profile
      example:
        profile: ""
      title: Item list request parameters
    RestoreDeleteParameters:
      example:
        item: ""
        profile: ""
        userid: ""
      properties:
        userid:
          default: ""
          description: ID of the user
          type: string
        profile:
          default: ""
          description: ID of the profile of the user
          type: string
        item:
          default: ""
          description: item name to delete
          type: string
      required:
      - item
      - profile
      - userid
      title: Restore and delete RequestItemParameters
    UserPasswordParameters:
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    AuthResponse:
      example:
        access_token: JWTToken
        token_type: Bearer
      properties:
        access_token:
          default: JWTToken
          type: string
        token_type:
          default: Bearer
          type: string
    UsersResponse:
      example:
        recordsFiltered: 0
        data:
        - name: name
          timestamp: 5
        - name: name
          timestamp: 5
        draw: 1
        recordsTotal: 0
      properties:
        draw:
          default: 1
          description: "draw parameter, always set to 1"
          maximum: 1
          minimum: 1
          type: integer
        recordsTotal:
          description: total count of records (whatever the parameters)
          minimum: 0
          type: integer
        recordsFiltered:
          description: count records which have been filtered through needle parameter
          minimum: 0
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UsersResponse_data_inner'
          type: array
    RestoreResponse:
      example:
        new_item_revision: ""
      properties:
        new_item_revision:
          default: ""
          description: new name of the restored item
          type: string
    UsersResponse_data_inner:
      example:
        name: name
        timestamp: 5
      properties:
        name:
          description: "name of user, profile or game save"
          type: string
        timestamp:
          description: timestamp of last modification
          type: integer
  securitySchemes:
    cookieAuth:
      in: cookie
      name: secure:token
      type: apiKey
    sessionCookieAuth:
      in: cookie
      name: secure:sessionHash
      type: apiKey

