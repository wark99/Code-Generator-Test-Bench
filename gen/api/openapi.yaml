openapi: 3.1.0
info:
  description: CRM Cotización
  title: CRM Cotización
  version: 1.0.0
servers:
- url: /
paths:
  /api/v1/login/token:
    post:
      operationId: login_for_access_token_api_v1_login_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_api_v1_login_token_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login For Access Token
      tags:
      - login
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /api/v1/public/contact-form/{formId}:
    post:
      operationId: post_form_data_api_v1_public_contact_form__formId__post
      parameters:
      - explode: false
        in: path
        name: formId
        required: true
        schema:
          title: Formid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema: {}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Form Data
      tags:
      - public
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/public/contact-form/schema/{formId}:
    get:
      operationId: get_form_schema_api_v1_public_contact_form_schema__formId__get
      parameters:
      - explode: false
        in: path
        name: formId
        required: true
        schema:
          title: Formid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Form Schema
      tags:
      - public
      x-accepts: application/json
  /api/v1/public/user/register:
    post:
      operationId: register_api_v1_public_user_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Register
      tags:
      - public
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/pipelines/:
    post:
      operationId: create_pipeline_api_v1_pipelines__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_pipeline_api_v1_pipelines__post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Pipeline
      tags:
      - pipelines
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/pipelines/{pipelineId}/phases/:
    get:
      operationId: list_pipeline_phases_api_v1_pipelines__pipelineId__phases__get
      parameters:
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          title: Pipelineid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Pipeline Phases
      tags:
      - pipelines
      x-accepts: application/json
  /api/v1/contacts/schema:
    post:
      operationId: create_contact_schema_api_v1_contacts_schema_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_contact_schema_api_v1_contacts_schema_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Contact Schema
      tags:
      - contacts
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/contacts/schema/{organizationId}:
    get:
      operationId: list_contact_schema_api_v1_contacts_schema__organizationId__get
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          title: Organizationid
          type: string
        style: simple
      - explode: true
        in: query
        name: populate
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Contact Schema
      tags:
      - contacts
      x-accepts: application/json
  /api/v1/contacts/schema/{schemaId}/fields:
    get:
      operationId: get_schema_fields_api_v1_contacts_schema__schemaId__fields_get
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          title: Schemaid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Schema Fields
      tags:
      - contacts
      x-accepts: application/json
  /api/v1/contacts/:
    post:
      operationId: create_contact_api_v1_contacts__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_contact_api_v1_contacts__post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Contact
      tags:
      - contacts
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/contacts/{organizationId}:
    get:
      operationId: list_contacts_api_v1_contacts__organizationId__get
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          title: Organizationid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Contacts
      tags:
      - contacts
      x-accepts: application/json
  /api/v1/businesses/:
    post:
      operationId: create_bussines_api_v1_businesses__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_bussines_api_v1_businesses__post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Bussines
      tags:
      - businesses
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/businesses/{businessId}/phase:
    put:
      operationId: change_business_phase_api_v1_businesses__businessId__phase_put
      parameters:
      - explode: false
        in: path
        name: businessId
        required: true
        schema:
          title: Businessid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_change_business_phase_api_v1_businesses__businessId__phase_put'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Change Business Phase
      tags:
      - businesses
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/businesses/pipeline/{pipelineId}:
    get:
      operationId: get_business_in_pipeline_api_v1_businesses_pipeline__pipelineId__get
      parameters:
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          title: Pipelineid
          type: string
        style: simple
      - explode: true
        in: query
        name: populate
        required: false
        schema:
          default: false
          title: Populate
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_get_business_in_pipeline_api_v1_businesses_pipeline__pipelineId__get'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Business In Pipeline
      tags:
      - businesses
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/businesses/{businessId}:
    get:
      operationId: get_business_api_v1_businesses__businessId__get
      parameters:
      - explode: false
        in: path
        name: businessId
        required: true
        schema:
          title: Businessid
          type: string
        style: simple
      - explode: true
        in: query
        name: populate
        required: false
        schema:
          default: false
          title: Populate
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Business
      tags:
      - businesses
      x-accepts: application/json
  /api/v1/organizations/all:
    get:
      operationId: get_all_organizations_api_v1_organizations_all_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get All Organizations
      tags:
      - organizations
      x-accepts: application/json
  /api/v1/organizations/:
    post:
      operationId: create_organization_api_v1_organizations__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganzationDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Organization
      tags:
      - organizations
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/forms/:
    get:
      operationId: get_all_forms_api_v1_forms__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get All Forms
      tags:
      - forms
      x-accepts: application/json
    post:
      operationId: create_form_api_v1_forms__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_form_api_v1_forms__post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Form
      tags:
      - forms
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/forms/{formId}/iframe:
    get:
      operationId: get_form_iframe_api_v1_forms__formId__iframe_get
      parameters:
      - explode: false
        in: path
        name: formId
        required: true
        schema:
          title: Formid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Form Iframe
      tags:
      - forms
      x-accepts: application/json
components:
  schemas:
    AuthResponse:
      example:
        access_token: access_token
        token_type: token_type
        user:
          user_id: user_id
          last_name: last_name
          created_at: 2000-01-23T04:56:07.000+00:00
          first_name: first_name
          email: email
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'
      required:
      - access_token
      - token_type
      - user
      title: AuthResponse
    Body_change_business_phase_api_v1_businesses__businessId__phase_put:
      properties:
        phaseId:
          title: Phaseid
          type: string
        organizationId:
          title: Organizationid
          type: string
      required:
      - organizationId
      - phaseId
      title: Body_change_business_phase_api_v1_businesses__businessId__phase_put
    Body_create_bussines_api_v1_businesses__post:
      properties:
        bussines:
          $ref: '#/components/schemas/CreateBusiness'
        organizationId:
          title: Organizationid
          type: string
      required:
      - bussines
      - organizationId
      title: Body_create_bussines_api_v1_businesses__post
    Body_create_contact_api_v1_contacts__post:
      properties:
        contact:
          $ref: '#/components/schemas/CreateContactDTO'
        organizationId:
          title: Organizationid
          type: string
      required:
      - contact
      - organizationId
      title: Body_create_contact_api_v1_contacts__post
    Body_create_contact_schema_api_v1_contacts_schema_post:
      properties:
        contact_schema:
          $ref: '#/components/schemas/ContactSchemaDTO'
        organizationId:
          title: Organizationid
          type: string
      required:
      - contact_schema
      - organizationId
      title: Body_create_contact_schema_api_v1_contacts_schema_post
    Body_create_form_api_v1_forms__post:
      properties:
        form:
          $ref: '#/components/schemas/CreateFormDTO'
        organizationId:
          title: Organizationid
          type: string
      required:
      - form
      - organizationId
      title: Body_create_form_api_v1_forms__post
    Body_create_pipeline_api_v1_pipelines__post:
      properties:
        pipeline:
          $ref: '#/components/schemas/CreatePipeline'
        organizationId:
          title: Organizationid
          type: string
      required:
      - organizationId
      - pipeline
      title: Body_create_pipeline_api_v1_pipelines__post
    Body_get_business_in_pipeline_api_v1_businesses_pipeline__pipelineId__get:
      properties:
        organizationId: {}
      required:
      - organizationId
      title: Body_get_business_in_pipeline_api_v1_businesses_pipeline__pipelineId__get
    Body_login_for_access_token_api_v1_login_token_post:
      properties:
        grant_type:
          $ref: '#/components/schemas/Grant_Type'
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ""
          title: Scope
          type: string
        client_id:
          $ref: '#/components/schemas/Client_Id'
        client_secret:
          $ref: '#/components/schemas/Client_Secret'
      required:
      - password
      - username
      title: Body_login_for_access_token_api_v1_login_token_post
    ContactSchemaDTO:
      properties:
        name:
          title: Name
          type: string
        description:
          $ref: '#/components/schemas/Description'
        fields:
          items:
            $ref: '#/components/schemas/ContactSchemaFieldDTO'
          type: array
      required:
      - fields
      - name
      title: ContactSchemaDTO
    ContactSchemaFieldDTO:
      properties:
        isIndex:
          title: Isindex
          type: boolean
        name:
          title: Name
          type: string
        type:
          $ref: '#/components/schemas/FormFieldTypeEnum'
        required:
          title: Required
          type: boolean
        order:
          title: Order
          type: integer
        label:
          title: Label
          type: string
        placeholder:
          title: Placeholder
          type: string
        options:
          $ref: '#/components/schemas/Options'
        metadata:
          title: Metadata
          type: string
      required:
      - isIndex
      - label
      - name
      - order
      - required
      - type
      title: ContactSchemaFieldDTO
    ContactSchemaOptionsFieldDTO:
      properties:
        value:
          title: Value
          type: string
        label:
          title: Label
          type: string
      required:
      - label
      - value
      title: ContactSchemaOptionsFieldDTO
    CreateBusiness:
      properties:
        name:
          title: Name
          type: string
        description:
          $ref: '#/components/schemas/Description'
        pipelineId:
          title: Pipelineid
          type: string
        pipelinePhaseId:
          $ref: '#/components/schemas/Pipelinephaseid'
        contactId:
          title: Contactid
          type: string
        operatorId:
          $ref: '#/components/schemas/Operatorid'
      required:
      - contactId
      - name
      - pipelineId
      title: CreateBusiness
    CreateContactDTO:
      properties:
        schemaId:
          title: Schemaid
          type: string
        data:
          items:
            $ref: '#/components/schemas/CreateContactDataDTO'
          type: array
      required:
      - data
      - schemaId
      title: CreateContactDTO
    CreateContactDataDTO:
      properties:
        fieldName:
          title: Fieldname
          type: string
        value:
          title: Value
          type: string
      required:
      - fieldName
      - value
      title: CreateContactDataDTO
    CreateFormDTO:
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        contactSchemaId:
          title: Contactschemaid
          type: string
        selectedFieldsId:
          items:
            type: string
          type: array
        customFields:
          $ref: '#/components/schemas/Customfields'
        pipelineId:
          title: Pipelineid
          type: string
      required:
      - contactSchemaId
      - description
      - name
      - pipelineId
      - selectedFieldsId
      title: CreateFormDTO
    CreateOrganzationDTO:
      example:
        name: name
        description: description
        ownerId: ownerId
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        ownerId:
          title: Ownerid
          type: string
      required:
      - description
      - name
      - ownerId
      title: CreateOrganzationDTO
    CreatePipeline:
      properties:
        name:
          title: Name
          type: string
        description:
          $ref: '#/components/schemas/Description'
        phases:
          items:
            $ref: '#/components/schemas/PipelinePhase'
          type: array
        config:
          allOf:
          - $ref: '#/components/schemas/PipelineConfig'
      required:
      - name
      - phases
      title: CreatePipeline
    FormFieldTypeEnum:
      enum:
      - text
      - select
      - radio
      - phone
      - email
      title: FormFieldTypeEnum
      type: string
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    PipelineConfig:
      properties:
        defaultMaxDays:
          minimum: 0
          title: Defaultmaxdays
          type: integer
        defaultPhase:
          minimum: 0
          title: Defaultphase
          type: integer
      required:
      - defaultMaxDays
      - defaultPhase
      title: PipelineConfig
    PipelinePhase:
      properties:
        name:
          title: Name
          type: string
        description:
          $ref: '#/components/schemas/Description'
        order:
          minimum: 0
          title: Order
          type: integer
        status:
          title: Status
          type: string
      required:
      - name
      - order
      - status
      title: PipelinePhase
    UserRegisterDTO:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        email: email
      properties:
        firstName:
          title: Firstname
          type: string
        lastName:
          title: Lastname
          type: string
        email:
          format: email
          title: Email
          type: string
        password:
          format: password
          maxLength: 128
          minLength: 6
          title: Password
          type: string
          writeOnly: true
      required:
      - email
      - firstName
      - lastName
      - password
      title: UserRegisterDTO
    UserResponse:
      example:
        user_id: user_id
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        first_name: first_name
        email: email
      properties:
        user_id:
          title: User Id
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        email:
          title: Email
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
      required:
      - created_at
      - email
      - first_name
      - last_name
      - user_id
      title: UserResponse
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Grant_Type:
      anyOf:
      - pattern: password
        type: string
      - nullable: true
      title: Grant Type
    Client_Id:
      anyOf:
      - type: string
      - nullable: true
      title: Client Id
    Client_Secret:
      anyOf:
      - type: string
      - nullable: true
      title: Client Secret
    Description:
      anyOf:
      - type: string
      - nullable: true
      title: Description
    Options:
      anyOf:
      - items:
          $ref: '#/components/schemas/ContactSchemaOptionsFieldDTO'
      - nullable: true
      title: Options
    Pipelinephaseid:
      anyOf:
      - type: string
      - nullable: true
      title: Pipelinephaseid
    Operatorid:
      anyOf:
      - type: string
      - nullable: true
      title: Operatorid
    Customfields:
      anyOf:
      - items:
          $ref: '#/components/schemas/ContactSchemaFieldDTO'
      - nullable: true
      title: Customfields
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2

