openapi: 3.1.0
info:
  description: Documentation for the Public API
  title: Syntax Public API
  version: 1.0.0
servers:
- url: /
paths:
  /public-api/v1/users/{userid}:
    get:
      description: Retrieve user information by user ID.
      parameters:
      - description: The ID of the user.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_400_response'
          description: User Not Found
      summary: Get User by ID
      tags:
      - Get User Info
      x-accepts: application/json
  /public-api/v1/users/{username}:
    get:
      description: Retrieve user information by username.
      parameters:
      - description: The username of the user.
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_400_response'
          description: User Not Found
      summary: Get User by Username
      tags:
      - Get User Info
      x-accepts: application/json
  /public-api/v1/asset/{assetid}:
    get:
      description: Retrieve asset information by asset ID.
      parameters:
      - description: The ID of the asset.
        explode: false
        in: path
        name: assetid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_asset__assetid__get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_asset__assetid__get_400_response'
          description: Asset Not Found
      summary: Get Asset by ID
      tags:
      - Get Asset Info
      x-accepts: application/json
  /public-api/v1/inventory/collectibles/{userid}:
    get:
      description: Retrieve a user's collectibles.
      parameters:
      - description: The ID of the user.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: integer
        style: simple
      - description: The page number (optional).
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_inventory_collectibles__userid__get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_400_response'
          description: User Not Found
      summary: Get User's Collectibles
      tags:
      - Inventory and Collectibles
      x-accepts: application/json
  /public-api/v1/inventory/assets/{userid}/{assettypeid}:
    get:
      description: Retrieve a user's assets of a specific type.
      parameters:
      - description: The ID of the user.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: integer
        style: simple
      - description: "The ID of the asset type. Refer to the [Roblox Documentation](https://create.roblox.com/docs/reference/engine/enums/AssetType)\
          \ for valid values."
        explode: false
        in: path
        name: assettypeid
        required: true
        schema:
          type: integer
        style: simple
      - description: The page number (optional).
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_inventory_assets__userid___assettypeid__get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users__userid__get_400_response'
          description: User Not Found
      summary: Get User's Assets by Type
      tags:
      - Inventory and Collectibles
      x-accepts: application/json
  /public-api/v1/economy/my-balance:
    get:
      description: Retrieve the balance of the authenticated user.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_economy_my_balance_get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_economy_my_balance_get_400_response'
          description: Not Logged In
      summary: Get My Balance
      tags:
      - Economy
      x-accepts: application/json
  /public-api/v1/users/my-profile:
    get:
      description: Retrieve the profile for the authenticated user.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_users_my_profile_get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_economy_my_balance_get_400_response'
          description: Not Logged In
      summary: Get My Profile
      tags:
      - Get User Info
      x-accepts: application/json
  /public-api/v1/trade/list:
    get:
      description: List trades for the authenticated user.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_list_get_200_response'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_public_api_v1_economy_my_balance_get_400_response'
          description: Not Logged In
      summary: List Trades
      tags:
      - Trading
      x-accepts: application/json
  /public-api/v1/trade/{tradeid}:
    get:
      description: Retrieve trade information by trade ID.
      parameters:
      - description: The ID of the trade.
        explode: false
        in: path
        name: tradeid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: Unix Timestamp
                  expires_at: Unix Timestamp
                  id: Trade ID
                  recipient_items:
                  - asset:
                      asset_rap: Asset Rap
                      asset_type: Asset Type
                      asset_type_value: Asset Type Value
                      created_at: Unix Timestamp
                      creator_id: Asset Creator ID
                      creator_type: Type of Creator (group or user)
                      description: Will the test be successful? Or go up in flames?!
                      id: Asset ID
                      is_for_sale: Asset Status
                      is_limited: Asset Limted
                      is_limited_unique: Asset Limited U
                      name: Asset Name
                      price_robux: Asset Price (R)
                      price_tickets: Asset Price (T)
                      sales: Amount Of Sales
                      updated_at: Unix Timestamp
                    price: Resell Price
                    serial: Serial Owned
                    uaid: User Asset ID
                  recipient_robux: Robux Offered
                  recipient_userid: User ID
                  sender_items:
                  - asset:
                      asset_rap: Asset Rap
                      asset_type: Asset Type
                      asset_type_value: Asset Type Value
                      created_at: Unix Timestamp
                      creator_id: Asset Creator ID
                      creator_type: Type of Creator (group or user)
                      description: Asset Description
                      id: Asset ID
                      is_for_sale: Asset Status
                      is_limited: Asset Limited
                      is_limited_unique: Asset Limited U
                      name: Asset Name
                      price_robux: Asset Price (R)
                      price_tickets: Asset Price (T)
                      sales: Amount Of Sales
                      updated_at: Unix Timestamp
                    price: Resell Price
                    serial: Serial Owned
                    uaid: User Asset ID
                  sender_robux: Robux Offered
                  sender_userid: User ID
                  status: Trade Status
                message: ""
                success: true
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade__tradeid__get_200_response'
          description: Successful operation
      summary: Get Trade by ID
      tags:
      - Trading
      x-accepts: application/json
  /public-api/v1/trade/create/{recipient_userid}:
    parameters:
    - description: The ID of the recipient user.
      explode: false
      in: path
      name: recipient_userid
      required: true
      schema:
        type: integer
      style: simple
    post:
      description: Create a trade request with the specified recipient user.
      parameters:
      - description: The ID of the recipient user.
        explode: false
        in: path
        name: recipient_userid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_public_api_v1_trade_create__recipient_userid__post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
                message: ""
                tradeId: 1
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_create__recipient_userid__post_200_response'
          description: Trade request was successful
        "400":
          content:
            application/json:
              example:
                success: false
                message: error
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_create__recipient_userid__post_400_response'
          description: Bad request or error in trade creation
      summary: Create Trade
      tags:
      - Trading
      x-content-type: application/json
      x-accepts: application/json
  /public-api/v1/trade/accept/{tradeid}:
    parameters:
    - description: The ID of the trade.
      explode: false
      in: path
      name: tradeid
      required: true
      schema:
        type: integer
      style: simple
    post:
      description: Accept a trade with the specified trade ID.
      parameters:
      - description: The ID of the trade.
        explode: false
        in: path
        name: tradeid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
                message: success
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Trade acceptance was successful
        "400":
          content:
            application/json:
              example:
                success: false
                message: error
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Bad request or error in trade acceptance
      summary: Accept Trade
      tags:
      - Trading
      x-content-type: application/json
      x-accepts: application/json
  /public-api/v1/trade/decline/{tradeid}:
    parameters:
    - description: The ID of the trade.
      explode: false
      in: path
      name: tradeid
      required: true
      schema:
        type: integer
      style: simple
    post:
      description: Accept a trade with the specified trade ID.
      parameters:
      - description: The ID of the trade.
        explode: false
        in: path
        name: tradeid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
                message: success
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Trade acceptance was successful
        "400":
          content:
            application/json:
              example:
                success: false
                message: error
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Bad request or error in trade acceptance
      summary: Accept Trade
      tags:
      - Trading
      x-accepts: application/json
  /public-api/v1/trade/cancel/{tradeid}:
    parameters:
    - description: The ID of the trade.
      explode: false
      in: path
      name: tradeid
      required: true
      schema:
        type: integer
      style: simple
    post:
      description: Accept a trade with the specified trade ID.
      parameters:
      - description: The ID of the trade.
        explode: false
        in: path
        name: tradeid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
                message: success
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Trade acceptance was successful
        "400":
          content:
            application/json:
              example:
                success: false
                message: error
                data: null
              schema:
                $ref: '#/components/schemas/_public_api_v1_trade_accept__tradeid__post_200_response'
          description: Bad request or error in trade acceptance
      summary: Accept Trade
      tags:
      - Trading
      x-accepts: application/json
components:
  schemas:
    _public_api_v1_users__userid__get_200_response_data:
      properties:
        created_at:
          type: integer
        description:
          type: string
        id:
          type: integer
        is_banned:
          type: boolean
        last_online:
          type: integer
        membership:
          type: string
        username:
          type: string
    _public_api_v1_economy_my_balance_get_200_response_data:
      properties:
        robux:
          description: The amount of Robux in the user's account.
          type: integer
        tickets:
          description: The amount of Tickets in the user's account.
          type: integer
    _public_api_v1_asset__assetid__get_400_response:
      example:
        data: null
        message: Asset not found
        success: false
      properties:
        description:
          type: string
    _public_api_v1_inventory_collectibles__userid__get_200_response_data_inner:
      properties:
        asset:
          $ref: '#/components/schemas/_public_api_v1_inventory_collectibles__userid__get_200_response_data_inner_asset'
        price:
          type: integer
        serial:
          type: integer
        uaid:
          type: integer
    _public_api_v1_trade_accept__tradeid__post_request:
      properties:
        TOTPCode:
          type: integer
    _public_api_v1_trade__tradeid__get_200_response_data:
      example:
        recipient_items:
        - asset: "{}"
        - asset: "{}"
        sender_items:
        - asset: "{}"
        - asset: "{}"
      properties:
        recipient_items:
          items:
            $ref: '#/components/schemas/_public_api_v1_trade__tradeid__get_200_response_data_recipient_items_inner'
          type: array
        sender_items:
          items:
            $ref: '#/components/schemas/_public_api_v1_trade__tradeid__get_200_response_data_recipient_items_inner'
          type: array
    _public_api_v1_users__userid__get_200_response:
      example:
        data:
          created_at: Unix Timestamp
          description: Example Description
          id: Input ID
          is_banned: Input Status
          last_online: Unix Timestamp
          membership: Input Membership
          username: Input Username
        message: ""
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_public_api_v1_users__userid__get_200_response_data'
        message:
          type: string
        success:
          type: boolean
    _public_api_v1_trade_create__recipient_userid__post_400_response:
      example:
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          type: string
    _public_api_v1_trade__tradeid__get_200_response:
      example:
        data:
          recipient_items:
          - asset: "{}"
          - asset: "{}"
          sender_items:
          - asset: "{}"
          - asset: "{}"
      properties:
        data:
          $ref: '#/components/schemas/_public_api_v1_trade__tradeid__get_200_response_data'
    _public_api_v1_economy_my_balance_get_400_response:
      example:
        message: You are not logged in
        success: false
      properties:
        description:
          type: string
    _public_api_v1_trade_list_get_200_response:
      example:
        data:
        - created_at: Unix Timetamp
          expires_at: Unix Timestamp
          id: Trade ID
          recipient_userid: User ID
          sender_userid: Target User ID
          status: Trade Status
        message: ""
        next_page: Next Page
        page: Current Page
        success: true
        total_pages: Total Pages
      properties:
        data:
          example:
          - created_at: Unix Timestamp
            expires_at: Unix Timestamp
            id: Trade ID
            recipient_userid: User ID
            sender_userid: Target User ID
            status: Trade Status
          items:
            $ref: '#/components/schemas/_public_api_v1_trade_list_get_200_response_data_inner'
          type: array
        message:
          type: string
        next_page:
          type: integer
        page:
          type: integer
        success:
          type: boolean
        total_pages:
          type: integer
    _public_api_v1_trade_create__recipient_userid__post_request:
      properties:
        RequesterOfferRobux:
          type: integer
        TargetOfferRobux:
          type: integer
        RequesterOfferUAIDs:
          items:
            type: integer
          type: array
        TargetOfferUAIDs:
          items:
            type: integer
          type: array
        TOTPCode:
          type: integer
    _public_api_v1_asset__assetid__get_200_response_data:
      properties:
        asset_rap:
          type: integer
          nullable: true
        asset_type:
          type: string
        asset_type_value:
          type: integer
        created_at:
          type: integer
        creator:
          $ref: '#/components/schemas/_public_api_v1_asset__assetid__get_200_response_data_creator'
        creator_id:
          type: integer
        creator_type:
          type: integer
        description:
          type: string
        id:
          type: integer
        is_for_sale:
          type: boolean
        is_limited:
          type: boolean
        is_limited_unique:
          type: boolean
        name:
          type: string
        price_robux:
          type: integer
        price_tickets:
          type: integer
        sales:
          type: integer
        updated_at:
          type: integer
    _public_api_v1_inventory_collectibles__userid__get_200_response_data_inner_asset:
      properties:
        asset_rap:
          type: integer
          nullable: true
        asset_type:
          type: string
        asset_type_value:
          type: integer
        created_at:
          type: integer
        creator_id:
          type: integer
        creator_type:
          type: integer
        description:
          type: string
        id:
          type: integer
        is_for_sale:
          type: boolean
        is_limited:
          type: boolean
        is_limited_unique:
          type: boolean
        name:
          type: string
        price_robux:
          type: integer
        price_tickets:
          type: integer
        sales:
          type: integer
        updated_at:
          type: integer
    _public_api_v1_trade_list_get_200_response_data_inner:
      properties:
        created_at:
          type: integer
        expires_at:
          type: integer
        id:
          type: integer
        recipient_userid:
          type: integer
        sender_userid:
          type: integer
        status:
          type: string
    _public_api_v1_users__userid__get_400_response:
      example:
        data: null
        message: User not found
        success: false
      properties:
        description:
          type: string
    _public_api_v1_users_my_profile_get_200_response:
      example:
        data:
          created_at: Unix Timestamp
          description: User Description
          id: User ID
          is_banned: User Status
          last_online: Unix Timestamp
          membership: User Memberhip
          username: Username
        message: ""
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_public_api_v1_users__userid__get_200_response_data'
    _public_api_v1_economy_my_balance_get_200_response:
      example:
        data:
          robux: User Robux Amount
          tickets: User Tickets Amount
        message: ""
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_public_api_v1_economy_my_balance_get_200_response_data'
    _public_api_v1_trade_accept__tradeid__post_200_response:
      example:
        data: ""
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          type: string
        data: {}
    _public_api_v1_asset__assetid__get_200_response:
      example:
        data:
          asset_rap: Rap of the item
          asset_type: asset type
          asset_type_value: asset type value
          created_at: Unix Timestamp
          creator:
            creator_created_at: Unix Timestamp
            creator_description: User Description
            creator_id: User ID
            creator_is_banned: User Status
            creator_last_online: Unix Timestamp
            creator_membership: User Membership
            creator_username: Creator Name
          creator_id: User ID
          creator_type: Type of Creator (group or user)
          description: Asset Description
          id: Asset ID
          is_for_sale: Asset Status
          is_limited: Asset Limited
          is_limited_unique: Asset Limited U
          name: Asset Name
          price_robux: Asset Price (R)
          price_tickets: Asset Price (T)
          sales: Amount Of Sales
          updated_at: Unix Timestamp
        message: ""
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_public_api_v1_asset__assetid__get_200_response_data'
    _public_api_v1_trade_create__recipient_userid__post_200_response:
      example:
        success: true
        message: message
        tradeId: 0
      properties:
        success:
          type: boolean
        message:
          type: string
        tradeId:
          type: integer
    _public_api_v1_inventory_assets__userid___assettypeid__get_200_response:
      example:
        data:
        - asset:
            asset_rap: Asset Rap
            asset_type: Asset Type
            asset_type_value: Asset Type Value
            created_at: Unix Timestamp
            creator_id: User ID
            creator_type: Type of Creator (group or user)
            description: Asset Description
            id: Asset ID
            is_for_sale: Asset Status
            is_limited: Asset Limited
            is_limited_unique: Asset Limted U
            name: Asset Name
            price_robux: Asset Price (R)
            price_tickets: Asset Price (T)
            sales: Amount Of Sales
            updated_at: Unix Timestamp
          price: Resell Price
          serial: Serial Owner
          uaid: User Asset ID
        message: ""
        next_page: Next Page
        page: Current Page
        success: true
        total_pages: Total Pages
      properties:
        data:
          items:
            $ref: '#/components/schemas/_public_api_v1_inventory_collectibles__userid__get_200_response_data_inner'
          type: array
    _public_api_v1_inventory_collectibles__userid__get_200_response:
      example:
        data:
        - asset:
            asset_rap: Asset Rap
            asset_type: Asset Type
            asset_type_value: Asset Type Value
            created_at: Unix Timestamp
            creator_id: User ID
            creator_type: Type of Creator (group or user)
            description: Asset Description
            id: Asset ID
            is_for_sale: Asset Status
            is_limited: Asset Limited
            is_limited_unique: Asset Limited U
            name: Asset Name
            price_robux: Asset Price (R)
            price_tickets: Asset Price (T)
            sales: Amount Of Sales
            updated_at: Unis Timestamp
          price: Resell Price
          serial: Serial Owned
          uaid: User Asset ID
        message: ""
        next_page: Next Page
        page: Current Page
        success: true
        total_pages: Total Pages
      properties:
        data:
          items:
            $ref: '#/components/schemas/_public_api_v1_inventory_collectibles__userid__get_200_response_data_inner'
          type: array
    _public_api_v1_asset__assetid__get_200_response_data_creator:
      properties:
        creator_created_at:
          type: integer
        creator_description:
          type: string
        creator_id:
          type: integer
        creator_is_banned:
          type: boolean
        creator_last_online:
          type: integer
        creator_membership:
          type: string
        creator_username:
          type: string
    _public_api_v1_trade__tradeid__get_200_response_data_recipient_items_inner:
      example:
        asset: "{}"
      properties:
        asset:
          properties: {}
          type: object

