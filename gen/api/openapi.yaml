openapi: 3.1.0
info:
  contact:
    email: SLP-02@ucf.edu
  description: COP4331 - Processes of Object Oriented Software Development
  title: SLP-02-Small-Project
  version: 1.0.0
servers:
- description: Main (production) server
  url: http://poosd.com/api/v1
tags:
- description: Operations related to contacts
  name: Contact
- description: Operations related to users
  name: User
paths:
  /PHP/createContact.php:
    post:
      description: This endpoint allows for the creation of a new contact by providing
        the necessary details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_PHP_createContact_php_post_request'
        required: true
      responses:
        "200":
          description: The contact has been successfully created.
      summary: Create a new contact
      tags:
      - Contact
      x-content-type: application/json
      x-accepts: application/json
  /PHP/deleteContact.php:
    delete:
      description: This endpoint allows for the deletion of a contact by providing
        the contact's ID.
      parameters:
      - description: The ID of the contact to be deleted.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: The contact has been successfully deleted.
      summary: Delete a contact
      tags:
      - Contact
      x-accepts: application/json
  /PHP/deleteUser.php:
    delete:
      description: This endpoint allows for the deletion of a user by providing the
        user's ID.
      parameters:
      - description: The ID of the user to be deleted.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: The user has been successfully deleted.
      summary: Delete a user
      tags:
      - User
      x-accepts: application/json
  /PHP/loginUser.php:
    post:
      description: This endpoint allows users to log in by providing their login credentials.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_PHP_loginUser_php_post_request'
        required: true
      responses:
        "200":
          description: The user has been successfully logged in.
      summary: Log in a user
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /PHP/registerUser.php:
    post:
      description: This endpoint allows for the registration of a new user by providing
        the necessary details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_PHP_registerUser_php_post_request'
        required: true
      responses:
        "200":
          description: The user has been successfully registered.
      summary: Register a new user
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /PHP/searchContact.php:
    get:
      description: This endpoint allows users to search for a contact by providing
        a search query and user ID.
      parameters:
      - description: The query used to search for the contact.
        explode: true
        in: query
        name: searchquery
        required: true
        schema:
          type: string
        style: form
      - description: The user ID associated with the contact.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: The search results have been returned.
      summary: Search for a contact
      tags:
      - Contact
      x-accepts: application/json
  /PHP/updateContact.php:
    put:
      description: This endpoint allows users to update the details of an existing
        contact by providing the new information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_PHP_updateContact_php_put_request'
        required: true
      responses:
        "200":
          description: The contact has been successfully updated.
      summary: Update a contact
      tags:
      - Contact
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    _PHP_loginUser_php_post_request:
      properties:
        login:
          description: The login name of the user.
          type: string
        password:
          description: The password of the user.
          type: string
    _PHP_updateContact_php_put_request:
      properties:
        id:
          description: The ID of the contact to be updated.
          type: string
        name:
          description: The updated full name of the contact.
          type: string
        phone:
          description: The updated phone number of the contact.
          type: string
        email:
          description: The updated email address of the contact.
          type: string
        userid:
          description: The user ID associated with the contact.
          type: string
    _PHP_createContact_php_post_request:
      properties:
        name:
          description: The full name of the contact.
          type: string
        email:
          description: The email address of the contact.
          type: string
        phone:
          description: The phone number of the contact.
          type: string
        userid:
          description: The user ID associated with the contact.
          type: integer
    _PHP_registerUser_php_post_request:
      properties:
        firstName:
          description: The first name of the user.
          type: string
        lastName:
          description: The last name of the user.
          type: string
        login:
          description: The login name of the user.
          type: string
        password:
          description: The password of the user.
          type: string
        confirm_password:
          description: The confirmation of the password.
          type: string

