openapi: 3.1.0
info:
  contact:
    email: engineering@lifebeacon.com
    name: API Support
  description: |
    The Personal Emergency Response System (PERS) API enables partners to receive PERS alarms and location data via HTTP webhook.

    **Alarm Types**

    | Code | Alarm Type | Description |
    |---|---|---|
    | E100 | Medical Alarm (Primary Button) | The medical alarm button was activated. |
    | E101 | Personal Emergency Alarm (Pendant Button) | The personal emergency button was activated. |
    | E111 | Smoke Alarm | Smoke was detected by a compatible smoke detector. |
    | E301 | AC Power Loss | The device has lost AC power. |
    | E302 | Low Battery | The device battery is low. |
    | E308 | System Shutdown | The device is powering off due to low battery. |
    | E601 | Manual Test | A manually triggered test signal. |
    | E602 | Periodic Test | The device sent a recurring test signal. |
    | E641 | Fall Alarm | The device detected a fall. |
    | E643 | Geofence Exit | The user has exited a geofence area. |
    | E644 | Geofence Enter | The user has entered a geofence area. |
    | E646 | Remote Patient Monitoring (RPM) Alarm | A compatible remote patient monitoring device reported an alarm. |
    | R100 | Medical Alarm Cancel | A medical alarm was cancelled by the user. |
    **Provisioning**

    Webhooks must be configured by LiveFree support. To configure your webhook, contact support with your webhook URL and authentication info.
  title: LiveFree PERS API
  version: 1.0.0
servers:
- url: /
components:
  responses:
    "4XXClientError":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ClientErrorResult'
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorResult'
        text/plain:
          schema:
            $ref: '#/components/schemas/TextErrorResult'
      description: Client error
    "5XXServerError":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ServerErrorResult'
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorResult'
        text/plain:
          schema:
            $ref: '#/components/schemas/TextErrorResult'
      description: Server error
  schemas:
    ClientErrorResult:
      description: A problem details object (see https://datatracker.ietf.org/doc/html/rfc7807).
      properties:
        type:
          description: A URI reference that identifies the problem type.
          format: uri-reference
          nullable: true
          type: string
        title:
          description: A summary of the problem type.
          nullable: true
          type: string
        status:
          description: The HTTP status code.
          format: int32
          nullable: true
          type: integer
        detail:
          description: An explanation specific to this occurrence of the problem.
          nullable: true
          type: string
    DeviceEvent:
      anyOf:
      - required:
        - event
      - required:
        - location
      description: This is the request body that will be sent to your webhook URL.
      properties:
        id:
          description: A unique identifier for this event.
          format: uuid
        device:
          $ref: '#/components/schemas/DeviceEventDevice'
        event:
          $ref: '#/components/schemas/DeviceEventEvent'
        location:
          $ref: '#/components/schemas/DeviceEventLocation'
      required:
      - device
      - id
    DeviceEventDevice:
      description: Information about the device that reported the event.
      properties:
        id:
          description: A unique identifier for the customer device where this event
            originated. The format of this ID may vary depending on the station where
            the device is assigned.
          type: string
        type:
          $ref: '#/components/schemas/DeviceType'
        serialNumber:
          description: The manufacturer serial number for the device.
          type: string
        imei:
          description: International Mobile Equipment Identity.
          type: string
        phoneNumber:
          description: This is an E.164 formatted phone number. Examples include +14035551111
            and +918067218000. This will always lead with a + and include only numbers
            afterwards (no dashes).
          pattern: "^\\+[1-9]\\d{1,14}$"
          type: string
        batteryPercentage:
          description: The battery percentage at the time when this event occurred.
            This is an integer between 0 and 100. This value may not be present for
            all events.
          format: int32
          maximum: 100
          minimum: 0
          nullable: true
          type: integer
      required:
      - id
      - phoneNumber
      - type
    DeviceEventEvent:
      description: Information about the event/alarm that was reported by the customer
        device. This property may be null or not present if this is a location-only
        message.
      properties:
        timestamp:
          description: The time when the event occurred.
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/DeviceEventType'
        code:
          description: The Contact ID event code.
          type: string
        zone:
          description: The zone number reporting the event/alarm.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - code
      - timestamp
      - type
      - zone
    DeviceEventLocation:
      description: Information about the location where the device was located at
        the time of this event/alarm. Thie property may not be present for all events.
      properties:
        timestamp:
          description: The time when the event occurred.
          format: date-time
          type: string
        fixType:
          $ref: '#/components/schemas/GpsFixType'
        latitude:
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          format: double
          maximum: 180
          minimum: -180
          type: number
        speed:
          format: double
          minimum: 0
          nullable: true
          type: number
        heading:
          format: double
          maximum: 360
          minimum: 0
          nullable: true
          type: number
        gpsText:
          description: The raw location data reported by the device. For GPS fix types
            this will be in NMEA message structure.
          nullable: true
          type: string
      required:
      - fixType
      - latitude
      - longitude
      - timestamp
    DeviceEventType:
      description: |
        The type of event. This will determine the format of the code property. At this time all events use Contact ID (CID) format.
        * CID - A Contact ID event.
      enum:
      - CID
      format: DeviceEventType
      type: string
    DeviceType:
      description: |
        The model of device that reported the event.
        * LifeBeacon - LifeBeacon Gen-1
        * EZCare - EZ-Care (7700, Landline)
        * EZCarePlus - EZ-Care Plus (7600, Cellular)
        * LifeBeaconGen2 - LifeBeacon Gen-2 (8200, Mobile PERS)
        * Duo - Duo (7800, Landline + Cellular)
        * Unknown - An unknown device type
      enum:
      - LifeBeacon
      - EZCare
      - EZCarePlus
      - LifeBeaconGen2
      - Duo
      - Unknown
      format: DeviceType
      type: string
    GpsFixType:
      description: |
        The type of signal or technique being used by the GPS receiver to determine its location.
        * GPS - A standard GPS signal.
        * DGPS - A differential GPS signal, which provides increased accuracy over standard GPS.
        * Estimated - An estimated location, which is based on a known point of origin and measurements of speed, heading, and elapsed time.
        * Manual - A location that has been manually entered.
        * Wifi - A location based on available Wifi networks in the area.
        * CellTower - A location based on cell towers detected in the area.
        * Invalid - There is no GPS signal being received or there are not enough sources available for proper location determination.
      enum:
      - GPS
      - DGPS
      - Estimated
      - Manual
      - Wifi
      - CellTower
      - Invalid
      format: GpsFixType
      type: string
    ServerErrorResult:
      description: A problem details object (see https://datatracker.ietf.org/doc/html/rfc7807).
      properties:
        type:
          description: A URI reference that identifies the problem type.
          format: uri-reference
          nullable: true
          type: string
        title:
          description: A summary of the problem type.
          nullable: true
          type: string
        status:
          description: The HTTP status code.
          format: int32
          nullable: true
          type: integer
        detail:
          description: An explanation specific to this occurrence of the problem.
          nullable: true
          type: string
    SimpleErrorResult:
      properties:
        message:
          description: An explanation of the problem.
          nullable: true
          type: string
    TextErrorResult:
      nullable: true
      type: string

