openapi: 3.1.0
info:
  description: "Документация к API проекта [sila-app](https://github.com/YuryVolynets/sila-app)"
  title: sila-app
  version: 1.0.0
servers:
- url: /
tags:
- description: Действия с пользователями
  name: user
- description: Действия с категориями
  name: folder
- description: Действия с товарами
  name: product
- description: Действия с корзиной
  name: cart
- description: Действия с заказами
  name: order
paths:
  /api/user/register:
    post:
      operationId: userRegister
      requestBody:
        $ref: '#/components/requestBodies/userRegiser'
      responses:
        "200":
          $ref: '#/components/responses/user_200'
        "422":
          $ref: '#/components/responses/user_422'
      summary: Регистрация пользователя
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
  /api/user/login:
    post:
      operationId: userLogin
      requestBody:
        $ref: '#/components/requestBodies/userLogin'
      responses:
        "200":
          $ref: '#/components/responses/user_200'
        "401":
          $ref: '#/components/responses/401'
        "422":
          $ref: '#/components/responses/user_422'
      summary: Авторизация пользователя
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
  /api/folder/tree:
    get:
      operationId: folderTree
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: OK
      summary: Получить дерево категорий
      tags:
      - folder
      x-accepts: application/json
  /api/product/{slug}:
    get:
      operationId: productGet
      parameters:
      - description: ЧПУ товара
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        "404":
          $ref: '#/components/responses/404'
      summary: Получить товар по ЧПУ
      tags:
      - product
      x-accepts: application/json
  /api/product/filter:
    post:
      operationId: productFilter
      requestBody:
        $ref: '#/components/requestBodies/productFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: OK
        "422":
          $ref: '#/components/responses/user_422'
      summary: Отфильтровать товары
      tags:
      - product
      x-content-type: application/json
      x-accepts: application/json
  /api/cart/{uuid}:
    get:
      operationId: cartGet
      parameters:
      - description: UUID корзины
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: OK
        "404":
          $ref: '#/components/responses/404'
      summary: Получить корзину
      tags:
      - cart
      x-accepts: application/json
  /api/cart:
    delete:
      operationId: cartDelete
      requestBody:
        $ref: '#/components/requestBodies/cartDelete'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartEdit_200_response'
          description: OK
        "422":
          $ref: '#/components/responses/user_422'
      summary: Удалить товар из корзины
      tags:
      - cart
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: cartEdit
      requestBody:
        $ref: '#/components/requestBodies/cartEdit'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartEdit_200_response'
          description: OK
        "422":
          $ref: '#/components/responses/user_422'
      summary: Изменить корзину
      tags:
      - cart
      x-content-type: application/json
      x-accepts: application/json
  /api/order/{uuid}:
    get:
      operationId: orderGet
      parameters:
      - description: UUID заказа
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: OK
        "404":
          $ref: '#/components/responses/404'
      summary: Получить заказ
      tags:
      - order
      x-accepts: application/json
  /api/order:
    get:
      operationId: ordersGet
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: OK
        "401":
          $ref: '#/components/responses/401'
      security:
      - bearerAuth: []
      summary: Получить заказы пользователя
      tags:
      - order
      x-accepts: application/json
    post:
      operationId: orderMake
      requestBody:
        $ref: '#/components/requestBodies/orderMake'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartEdit_200_response'
          description: OK
        "422":
          $ref: '#/components/responses/user_422'
      security:
      - bearerAuth: []
      summary: Создать заказ
      tags:
      - order
      x-content-type: application/json
      x-accepts: application/json
components:
  examples:
    Folder:
      value:
        id: 1
        name: folder_1
        children:
        - id: 2
          name: folder_1_1
          children: []
  requestBodies:
    userRegiser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userRegister_request'
      required: true
    userLogin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userLogin_request'
      required: true
    productFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/productFilter_request'
      required: true
    cartEdit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cartEdit_request'
      required: true
    cartDelete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cartDelete_request'
      required: true
    orderMake:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderMake_request'
      required: true
  responses:
    "401":
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            required:
            - message
      description: Ошибка авторизации
    "404":
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            required:
            - message
      description: Не найдено
    user_200:
      content:
        application/json:
          schema:
            properties:
              status:
                type: boolean
              message:
                type: string
              token:
                type: string
            required:
            - message
            - status
            - token
      description: OK
    user_422:
      content:
        application/json:
          schema:
            properties:
              status:
                type: boolean
              message:
                type: string
              errors:
                type: object
            required:
            - errors
            - message
            - status
      description: Ошибка валидации
  schemas:
    Cart:
      example:
        uuid: uuid
        products:
        - number: 6
          id: 0
        - number: 6
          id: 0
      properties:
        uuid:
          type: string
        products:
          items:
            $ref: '#/components/schemas/Cart_products_inner'
          type: array
      required:
      - products
      - uuid
    Folder:
      example:
        children:
        - null
        - null
        name: name
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        children:
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      required:
      - children
      - id
      - name
    Order:
      example:
        phone: phone
        uuid: uuid
        email: email
        products:
        - number: 6
          price: 0.8008281904610115
          name: name
        - number: 6
          price: 0.8008281904610115
          name: name
      properties:
        uuid:
          type: string
        email:
          type: string
        phone:
          type: string
        products:
          items:
            $ref: '#/components/schemas/Order_products_inner'
          type: array
      required:
      - products
      - uuid
    Product:
      example:
        price: 1.4658129805029452
        name: name
        length: 5.962133916683182
        width: 5.637376656633329
        description: description
        weight: 7.061401241503109
        id: 0
        folder_id: 6
        slug: slug
        height: 2.3021358869347655
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        folder_id:
          type: integer
        price:
          type: number
        length:
          type: number
        width:
          type: number
        height:
          type: number
        weight:
          type: number
      required:
      - folder_id
      - id
      - name
      - price
      - slug
    userRegister_request:
      properties:
        name:
          type: string
        email:
          format: email
          type: string
        phone:
          type: string
        password:
          format: password
          type: string
      required:
      - email
      - name
      - password
    userLogin_request:
      properties:
        email:
          format: email
          type: string
        password:
          format: password
          type: string
      required:
      - email
      - password
    productFilter_request_price:
      properties:
        min:
          type: number
        max:
          type: number
    productFilter_request_param:
      properties:
        length:
          $ref: '#/components/schemas/productFilter_request_price'
        width:
          $ref: '#/components/schemas/productFilter_request_price'
        height:
          $ref: '#/components/schemas/productFilter_request_price'
        weight:
          $ref: '#/components/schemas/productFilter_request_price'
    productFilter_request:
      properties:
        folders:
          items:
            type: integer
          type: array
        price:
          $ref: '#/components/schemas/productFilter_request_price'
        param:
          $ref: '#/components/schemas/productFilter_request_param'
    cartEdit_request_products_inner:
      properties:
        id:
          type: integer
        number:
          type: integer
      required:
      - id
      - number
    cartEdit_request:
      properties:
        uuid:
          type: string
        products:
          items:
            $ref: '#/components/schemas/cartEdit_request_products_inner'
          type: array
      required:
      - products
    cartEdit_200_response:
      example:
        uuid: uuid
      properties:
        uuid:
          type: string
      required:
      - uuid
    cartDelete_request:
      properties:
        uuid:
          type: string
        products:
          items:
            type: integer
          type: array
      required:
      - products
      - uuid
    orderMake_request:
      properties:
        cart_uuid:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
      - cart_uuid
    Cart_products_inner:
      example:
        number: 6
        id: 0
      properties:
        id:
          type: integer
        number:
          type: integer
    Order_products_inner:
      example:
        number: 6
        price: 0.8008281904610115
        name: name
      properties:
        name:
          type: string
        price:
          type: number
        number:
          type: integer
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http

