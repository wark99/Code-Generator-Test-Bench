openapi: 3.1.0
info:
  description: This is the API specification for the Semantic Browse for Cuisines
    application.
  title: Semantic Cuisine
  version: 1.0.1
externalDocs:
  description: Refer to the requirements
  url: https://github.com/bounswe/bounswe2024group1/wiki/Requirements
servers:
- url: https://localhost:3000
tags:
- description: Operations about authentication
  name: auth
- description: Operations about dishes
  name: dish
- description: Operations about cuisines
  name: cuisines
- description: Operations about user
  name: user
- description: Operations about recipes
  name: recipe
paths:
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      responses:
        "201":
          $ref: '#/components/responses/CreatedResponse'
        "400":
          $ref: '#/components/responses/BadRequestResponse'
      summary: Register a new user
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
  /users/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_users_login_post_200_response'
          description: OK
        "401":
          $ref: '#/components/responses/UnauthorizedResponse'
      summary: User login
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
  /users/{userId}:
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_users__userId__get_200_response'
          description: OK
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      security:
      - auth_jwt: []
      summary: Get user profile
      tags:
      - user
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_users__userId__get_200_response'
          description: OK
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      security:
      - auth_jwt: []
      summary: Update user profile
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
  /users/{userId}/following:
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_users__userId__following_get_200_response'
          description: OK
      security:
      - auth_jwt: []
      summary: Get users being followed
      tags:
      - user
      x-accepts: application/json
  /users/{userId}/followers:
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_users__userId__following_get_200_response'
          description: OK
      summary: Get user's followers
      tags:
      - user
      x-accepts: application/json
  /users/follow:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_users_follow_post_request'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/OkResponse'
        "400":
          $ref: '#/components/responses/BadRequestResponse'
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      security:
      - auth_jwt: []
      summary: Follow a user
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
  /users/unfollow:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_users_follow_post_request'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/OkResponse'
        "400":
          $ref: '#/components/responses/BadRequestResponse'
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      security:
      - auth_jwt: []
      summary: Unfollow a user
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
  /search/users:
    get:
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_users_get_200_response'
          description: OK
      summary: Search for users
      tags:
      - user
      x-accepts: application/json
  /search/dishes:
    get:
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cuisine
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: foodType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_dishes_get_200_response'
          description: OK
      summary: Search for dishes
      tags:
      - dish
      x-accepts: application/json
  /dishes/{dishId}:
    get:
      parameters:
      - explode: false
        in: path
        name: dishId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_dishes__dishId__get_200_response'
          description: OK
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      summary: Get dish details
      tags:
      - dish
      x-accepts: application/json
  /cuisines/{cuisineId}:
    get:
      parameters:
      - explode: false
        in: path
        name: cuisineId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cuisines__cuisineId__get_200_response'
          description: OK
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      summary: Get cuisine details
      tags:
      - cuisine
      x-accepts: application/json
  /recipes:
    get:
      parameters:
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - recent
          - topRated
          type: string
        style: form
      - explode: true
        in: query
        name: dishId
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: cuisineId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_recipes_get_200_response'
          description: OK
      summary: "Get recipes for dish, cuisine"
      tags:
      - recipe
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_recipes_post_201_response'
          description: Created
        "400":
          $ref: '#/components/responses/BadRequestResponse'
      security:
      - auth_jwt: []
      summary: Create a new recipe
      tags:
      - recipe
      x-content-type: application/json
      x-accepts: application/json
  /recipes/{recipeId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: recipeId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No content
        "403":
          $ref: '#/components/responses/ForbiddenResponse'
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      security:
      - auth_jwt: []
      summary: Delete a recipe
      tags:
      - recipe
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: recipeId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_recipes__recipeId__get_200_response'
          description: OK
        "404":
          $ref: '#/components/responses/NotFoundResponse'
      summary: Get recipe details
      tags:
      - recipe
      x-accepts: application/json
  /recipes/{recipeId}/rating:
    post:
      parameters:
      - explode: false
        in: path
        name: recipeId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_recipes__recipeId__rating_post_request'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/OkResponse'
        "400":
          $ref: '#/components/responses/BadRequestResponse'
      security:
      - auth_jwt: []
      summary: Rate a recipe
      tags:
      - recipe
      x-content-type: application/json
      x-accepts: application/json
  /recipes/{recipeId}/bookmark:
    post:
      parameters:
      - explode: false
        in: path
        name: recipeId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          $ref: '#/components/responses/OkResponse'
        "400":
          $ref: '#/components/responses/BadRequestResponse'
      security:
      - auth_jwt: []
      summary: Bookmark a recipe
      tags:
      - recipe
      x-accepts: application/json
  /feed:
    get:
      parameters:
      - explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - explore
          - following
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_recipes_get_200_response'
          description: OK
        "400":
          $ref: '#/components/responses/BadRequestResponse'
      security:
      - auth_jwt: []
      summary: Get user's feed
      tags:
      - user
      x-accepts: application/json
components:
  responses:
    OkResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
              data:
                type: object
      description: OK
    CreatedResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
              data:
                type: object
      description: Created
    BadRequestResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
      description: Bad Request
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                example: 401
                type: integer
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
      description: Unauthorized
    ForbiddenResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                example: 403
                type: integer
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
      description: Forbidden
    NotFoundResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                example: 404
                type: integer
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
      description: Not Found
    ConflictResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                example: 409
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
      description: Conflict
    InternalServerErrorResponse:
      content:
        application/json:
          schema:
            properties:
              code:
                example: 500
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
      description: Internal Server Error
  schemas:
    UserRegistration:
      example:
        firstName: firstName
        lastName: lastName
        country: country
        password: password
        email: email
        username: username
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
      required:
      - country
      - email
      - firstName
      - lastName
      - password
      - username
    UserLogin:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    AuthToken:
      example:
        token: token
      properties:
        token:
          type: string
    UserProfile:
      example:
        gender: male
        name: name
        bio: bio
        id: 0
        diets:
        - diets
        - diets
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        bio:
          type: string
        gender:
          enum:
          - male
          - female
          - neither
          type: string
        diets:
          items:
            type: string
          type: array
    UserSummary:
      example:
        name: name
        recipeCount: 1
        avgRating: 5.962134
        id: 0
        followersCount: 6
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        followersCount:
          type: integer
        recipeCount:
          type: integer
        avgRating:
          format: float
          type: number
    UserSearchResult:
      example:
        name: name
        bio: bio
        recipeCount: 1
        avgRating: 5.962134
        id: 0
        followersCount: 6
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        bio:
          type: string
        followersCount:
          type: integer
        recipeCount:
          type: integer
        avgRating:
          format: float
          type: number
    DishSearchResult:
      example:
        image: https://openapi-generator.tech
        name: name
        description: description
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          format: uri
          type: string
    DishDetails:
      example:
        image: https://openapi-generator.tech
        name: name
        description: description
        cuisine:
          name: name
          id: 6
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          format: uri
          type: string
        cuisine:
          $ref: '#/components/schemas/CuisineSummary'
    CuisineDetails:
      example:
        image: https://openapi-generator.tech
        name: name
        description: description
        dishes:
        - name: name
          id: 6
        - name: name
          id: 6
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          format: uri
          type: string
        dishes:
          items:
            $ref: '#/components/schemas/DishSummary'
          type: array
    RecipeSummary:
      example:
        images:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        author:
          name: name
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
        name: name
        rating: 6.0274563
        description: description
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        images:
          items:
            format: uri
            type: string
          type: array
        rating:
          format: float
          type: number
        author:
          $ref: '#/components/schemas/UserSummary'
    RecipeDetails:
      example:
        instructions:
        - instructions
        - instructions
        images:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        author:
          name: name
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
        cookTime: cookTime
        rating: 1.4658129
        description: description
        cuisine:
          name: name
          id: 6
        prepTime: prepTime
        allergens:
        - allergens
        - allergens
        dish:
          name: name
          id: 6
        name: name
        ingredients:
        - ingredients
        - ingredients
        ratingsCount: 5
        id: 0
        servingSize: 6
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        instructions:
          items:
            type: string
          type: array
        ingredients:
          items:
            type: string
          type: array
        images:
          items:
            format: uri
            type: string
          type: array
        prepTime:
          type: string
        cookTime:
          type: string
        servingSize:
          type: integer
        allergens:
          items:
            type: string
          type: array
        cuisine:
          $ref: '#/components/schemas/CuisineSummary'
        dish:
          $ref: '#/components/schemas/DishSummary'
        rating:
          format: float
          type: number
        ratingsCount:
          type: integer
        author:
          $ref: '#/components/schemas/UserSummary'
    NewRecipe:
      example:
        instructions:
        - instructions
        - instructions
        images:
        - ""
        - ""
        dishId: 6
        name: name
        cookTime: cookTime
        description: description
        ingredients:
        - ingredients
        - ingredients
        servingSize: 0
        prepTime: prepTime
        allergens:
        - allergens
        - allergens
      properties:
        name:
          type: string
        description:
          type: string
        instructions:
          items:
            type: string
          type: array
        ingredients:
          items:
            type: string
          type: array
        images:
          items:
            format: binary
            type: string
          type: array
        prepTime:
          type: string
        cookTime:
          type: string
        servingSize:
          type: integer
        allergens:
          items:
            type: string
          type: array
        dishId:
          type: integer
      required:
      - cookTime
      - ingredients
      - instructions
      - name
      - prepTime
      - servingSize
    CuisineSummary:
      example:
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
    DishSummary:
      example:
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
    ApiResponse:
      properties:
        code:
          type: integer
        data:
          type: object
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
      required:
      - code
    ApiError:
      properties:
        message:
          type: string
        field:
          type: string
      required:
      - message
    _users_login_post_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/AuthToken'
      example:
        data:
          token: token
    _users__userId__get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/UserProfile'
      example:
        data:
          gender: male
          name: name
          bio: bio
          id: 0
          diets:
          - diets
          - diets
          username: username
    _users__userId__following_get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/UserSummary'
            type: array
      example:
        data:
        - name: name
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
        - name: name
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
    _users_follow_post_request:
      properties:
        followingUserId:
          type: integer
    _search_users_get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/UserSearchResult'
            type: array
      example:
        data:
        - name: name
          bio: bio
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
        - name: name
          bio: bio
          recipeCount: 1
          avgRating: 5.962134
          id: 0
          followersCount: 6
          username: username
    _search_dishes_get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/DishSearchResult'
            type: array
      example:
        data:
        - image: https://openapi-generator.tech
          name: name
          description: description
          id: 0
        - image: https://openapi-generator.tech
          name: name
          description: description
          id: 0
    _dishes__dishId__get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/DishDetails'
      example:
        data:
          image: https://openapi-generator.tech
          name: name
          description: description
          cuisine:
            name: name
            id: 6
          id: 0
    _cuisines__cuisineId__get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/CuisineDetails'
      example:
        data:
          image: https://openapi-generator.tech
          name: name
          description: description
          dishes:
          - name: name
            id: 6
          - name: name
            id: 6
          id: 0
    _recipes_get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RecipeSummary'
            type: array
      example:
        data:
        - images:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          author:
            name: name
            recipeCount: 1
            avgRating: 5.962134
            id: 0
            followersCount: 6
            username: username
          name: name
          rating: 6.0274563
          description: description
          id: 0
        - images:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          author:
            name: name
            recipeCount: 1
            avgRating: 5.962134
            id: 0
            followersCount: 6
            username: username
          name: name
          rating: 6.0274563
          description: description
          id: 0
    _recipes_post_201_response:
      allOf:
      - $ref: '#/components/responses/CreatedResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/RecipeDetails'
      example:
        data:
          instructions:
          - instructions
          - instructions
          images:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          author:
            name: name
            recipeCount: 1
            avgRating: 5.962134
            id: 0
            followersCount: 6
            username: username
          cookTime: cookTime
          rating: 1.4658129
          description: description
          cuisine:
            name: name
            id: 6
          prepTime: prepTime
          allergens:
          - allergens
          - allergens
          dish:
            name: name
            id: 6
          name: name
          ingredients:
          - ingredients
          - ingredients
          ratingsCount: 5
          id: 0
          servingSize: 6
    _recipes__recipeId__get_200_response:
      allOf:
      - $ref: '#/components/responses/OkResponse/content/application%2Fjson/schema'
      - properties:
          data:
            $ref: '#/components/schemas/RecipeDetails'
      example:
        data:
          instructions:
          - instructions
          - instructions
          images:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          author:
            name: name
            recipeCount: 1
            avgRating: 5.962134
            id: 0
            followersCount: 6
            username: username
          cookTime: cookTime
          rating: 1.4658129
          description: description
          cuisine:
            name: name
            id: 6
          prepTime: prepTime
          allergens:
          - allergens
          - allergens
          dish:
            name: name
            id: 6
          name: name
          ingredients:
          - ingredients
          - ingredients
          ratingsCount: 5
          id: 0
          servingSize: 6
    _recipes__recipeId__rating_post_request:
      properties:
        rating:
          maximum: 5
          minimum: 1
          type: integer
  securitySchemes:
    auth_jwt:
      bearerFormat: JWT
      description: A bearer token is used to authenticate a user.
      scheme: bearer
      type: http

