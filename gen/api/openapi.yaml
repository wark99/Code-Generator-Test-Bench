openapi: 3.1.0
info:
  contact:
    email: filipe.xavier@sennatech.com.br
  description: Contrato de API referente aos recursos de gestão de sinistros e seguros
    que atendem como fonte de dados para o SDDO.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: API SDDO - Seguros
  version: 0.0.8
servers:
- description: DEV
  url: https://hostname-dev.sennatech.com.br/api/sddo/insurance/v1
- description: HML
  url: https://hostname-uat.sennatech.com.br/api/sddo/insurance/v1
- description: PRD
  url: https://hostname.sennatech.com.br/api/sddo/insurance/v1
tags:
- description: Recursos gestão de usuários
  name: Usuários
- description: Recursos gestão de clientes
  name: Clientes
- description: Recursos gestão de coberturas
  name: Coberturas
- description: Recursos gestão de cotações
  name: Cotação
- description: Recursos gestão de pagamentos
  name: Pagamento
- description: Recursos gestão de emissões
  name: Emissão
- description: Recursos gestão de apólices
  name: Apólices
paths:
  /users:
    get:
      description: Lista todos os usuários cadastrados
      operationId: get-users
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Lista todos os usuários cadastrados
      tags:
      - Usuários
      x-accepts: application/json
    post:
      description: Cadastra novo usuário
      operationId: post-users
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Recebe um evento
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Cadastra novo usuário
      tags:
      - Usuários
      x-content-type: application/json
      x-accepts: application/json
  /users-validation/{hash}:
    get:
      description: Valida acesso do cliente com base no usuário e senha criptografados
      operationId: get-users-validation
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: base64(user:pass)
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Valida acesso do cliente com base no usuário e senha criptografados
      tags:
      - Usuários
      x-accepts: application/json
  /users/{documentNumber}:
    delete:
      description: remove usuário
      operationId: delete-users
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do usuário
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Remove usuários
      tags:
      - Usuários
      x-accepts: application/json
    get:
      description: Consulta detalhes de usuário por e-mail
      operationId: get-users-by-email
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do usuário
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta detalhes de usuário por e-mail
      tags:
      - Usuários
      x-accepts: application/json
    put:
      description: Atualiza usuário
      operationId: put-users
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do usuário
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Recebe um evento
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Atualiza usuário
      tags:
      - Usuários
      x-content-type: application/json
      x-accepts: application/json
  /users/password/{documentNumber}:
    put:
      description: Atualiza senha de usuário
      operationId: put-user-password
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do usuário
        explode: false
        in: header
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Atualiza senha de usuário
      tags:
      - Usuários
      x-content-type: application/json
      x-accepts: application/json
  /users/password/recovery:
    post:
      description: Solicita recuperação de senha de usuário
      operationId: post-user-password-recovery
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRecovery'
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Solicita recuperação de senha de usuário
      tags:
      - Usuários
      x-content-type: application/json
      x-accepts: application/json
  /users/password/recovery/{hash}:
    put:
      description: Efetua a atualização de senha por fluxo de recuperação
      operationId: put-user-password-recovery
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: hash
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRecovery'
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua a atualização de senha por fluxo de recuperação
      tags:
      - Usuários
      x-content-type: application/json
      x-accepts: application/json
  /users/password/hash-validation/{hash}:
    get:
      description: Efetua a validação do hash de recuperação de senha
      operationId: put-user-password-hash-validation
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: hash
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua a validação do hash de recuperação de senha
      tags:
      - Usuários
      x-accepts: application/json
  /customers:
    get:
      description: Lista todos os usuários cadastrados
      operationId: get-customers
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomersResponse'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Lista todos os clientes cadastrados
      tags:
      - Clientes
      x-accepts: application/json
    post:
      description: Cadastra novo cliente
      operationId: post-customers
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Recebe um evento
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Cadastra novo cliente
      tags:
      - Clientes
      x-content-type: application/json
      x-accepts: application/json
  /customers/{documentNumber}:
    get:
      description: Consulta detalhes de usuário por número de documento
      operationId: get-customers-by-documentNumber
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Documento de identificação do cliente
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta detalhes de usuário por número de documento
      tags:
      - Clientes
      x-accepts: application/json
    put:
      description: Atualiza cliente
      operationId: put-customers
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCustomerRequest'
        description: Recebe um evento
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Atualiza cliente
      tags:
      - Clientes
      x-content-type: application/json
      x-accepts: application/json
  /customers-validation/{hash}:
    get:
      description: Valida acesso do cliente com base no usuário e senha criptografados
      operationId: get-customers-validation
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: base64(user:pass)
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Valida acesso do cliente com base no usuário e senha criptografados
      tags:
      - Clientes
      x-accepts: application/json
  /customers/password/{documentNumber}:
    put:
      description: Atualiza senha de cliente
      operationId: put-customer-password
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do cliente
        explode: false
        in: header
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Atualiza senha de cliente
      tags:
      - Clientes
      x-content-type: application/json
      x-accepts: application/json
  /customers/password/recovery:
    post:
      description: Solicita recuperação de senha de usuário
      operationId: post-customers-password-recovery
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRecovery'
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Solicita recuperação de senha de usuário
      tags:
      - Clientes
      x-content-type: application/json
      x-accepts: application/json
  /customers/password/recovery/{hash}:
    put:
      description: Efetua a atualização de senha por fluxo de recuperação
      operationId: put-customers-password-recovery
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: hash
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRecovery'
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua a atualização de senha por fluxo de recuperação
      tags:
      - Clientes
      x-content-type: application/json
      x-accepts: application/json
  /customers/password/hash-validation/{hash}:
    get:
      description: Efetua a validação do hash de recuperação de senha
      operationId: put-customers-password-hash-validation
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: hash
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua a validação do hash de recuperação de senha
      tags:
      - Clientes
      x-accepts: application/json
  /coverages:
    get:
      description: Consulta coberturas existentes
      operationId: get-coverages
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverages'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta coberturas existentes
      tags:
      - Coberturas
      x-accepts: application/json
    post:
      description: Cadastra coberturas novas
      operationId: post-coverages
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverageRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Cadastra coberturas novas
      tags:
      - Coberturas
      x-content-type: application/json
      x-accepts: application/json
  /coverages/{code}:
    delete:
      description: Remove coberturas existentes
      operationId: delete-coverages
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Código de cobertura
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Remove coberturas existentes
      tags:
      - Coberturas
      x-accepts: application/json
    put:
      description: Atualiza coberturas existentes
      operationId: put-coverages
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Código de cobertura
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverageRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Atualiza coberturas existentes
      tags:
      - Coberturas
      x-content-type: application/json
      x-accepts: application/json
  /coverages/{policy}:
    get:
      description: Consulta coberturas de uma apólice
      operationId: get-coverages-by-policy
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número e apólice
        explode: false
        in: path
        name: policy
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverages'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta coberturas de uma apólice
      tags:
      - Coberturas
      x-accepts: application/json
  /quotation:
    post:
      description: Efetua cotação de seguro
      operationId: post-quotation
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationResponse'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua cotação de seguro
      tags:
      - Cotação
      x-content-type: application/json
      x-accepts: application/json
  /issuances:
    post:
      description: Efetua emissão de seguro
      operationId: post-issuance
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuanceRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuanceResponse'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua emissão de seguro
      tags:
      - Emissão
      x-content-type: application/json
      x-accepts: application/json
  /payments:
    post:
      description: Efetua emissão de seguro
      operationId: post-payment
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Efetua emissão de seguro
      tags:
      - Pagamento
      x-content-type: application/json
      x-accepts: application/json
  /policies/{documentNumber}:
    get:
      description: Consulta de apólices por cliente
      operationId: get-policies-by-documentNumber
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número de documento do usuário
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesResponse'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta de apólices por cliente
      tags:
      - Apólices
      x-accepts: application/json
  /policies/{policyNumber}:
    get:
      description: Consulta de detalhes e apólice
      operationId: get-policies-details
      parameters:
      - description: Api-Key
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Número da apólice
        explode: false
        in: path
        name: documentNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDetailsResponse'
          description: Ok
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server error
      summary: Consulta de detalhes e apólice
      tags:
      - Apólices
      x-accepts: application/json
components:
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: Objeto de evento
  schemas:
    User:
      description: Objeto de usuário
      example:
        password: password
        birthdate: 2000-01-23
        documentNumber: documentNumber
        profile: profile
        name: name
        email: email
      properties:
        documentNumber:
          type: string
        name:
          type: string
        birthdate:
          format: date
          type: string
        email:
          type: string
        profile:
          type: string
        password:
          type: string
    GetUsersResponse:
      items:
        $ref: '#/components/schemas/GetUserResponse'
      type: array
    GetUserResponse:
      example:
        documentNumber: documentNumber
        name: name
        email: email
      properties:
        name:
          type: string
        email:
          type: string
        documentNumber:
          type: string
    Customer:
      example:
        password: password
        areaCode: areaCode
        birthdate: 2000-01-23
        address:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        gender: gender
        phone: phone
        documentNumber: documentNumber
        name: name
        login: login
        email: email
      properties:
        documentNumber:
          type: string
        name:
          type: string
        birthdate:
          format: date
          type: string
        gender:
          type: string
        login:
          type: string
        password:
          type: string
        email:
          type: string
        areaCode:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      example:
        zipcode: zipcode
        number: number
        country: country
        city: city
        street: street
        neighbourhood: neighbourhood
        state: state
      properties:
        street:
          type: string
        number:
          type: string
        neighbourhood:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipcode:
          type: string
    GetCustomersResponse:
      items:
        $ref: '#/components/schemas/GetCustomerResponse'
      type: array
    GetCustomerResponse:
      example:
        documentNumber: documentNumber
        name: name
      properties:
        documentNumber:
          type: string
        name:
          type: string
    PutCustomerRequest:
      example:
        password: password
        areaCode: areaCode
        birthdate: 2000-01-23
        address:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        gender: gender
        phone: phone
        name: name
        user: user
        email: email
      properties:
        name:
          type: string
        birthdate:
          format: date
          type: string
        gender:
          type: string
        user:
          type: string
        password:
          type: string
        email:
          type: string
        areaCode:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Coverages:
      items:
        $ref: '#/components/schemas/Coverage'
      type: array
    Coverage:
      description: Objeto de cobertura
      example:
        amount: 6.027456183070403
        code: 0
        sumInsured: 1.4658129805029452
        name: name
        description: description
        type: type
        required: true
      properties:
        code:
          type: integer
        type:
          type: string
        name:
          type: string
        description:
          type: string
        amount:
          type: number
        sumInsured:
          type: number
        required:
          type: boolean
    CoverageRequest:
      description: Objeto de cobertura
      example:
        amount: 0.8008281904610115
        sumInsured: 6.027456183070403
        name: name
        description: description
        type: type
        required: true
      properties:
        type:
          type: string
        name:
          type: string
        description:
          type: string
        amount:
          type: number
        sumInsured:
          type: number
        required:
          type: boolean
    QuotationRequest:
      example:
        insuredAddress:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        coverages:
        - amount: amount
          code: 0
          name: name
        - amount: amount
          code: 0
          name: name
      properties:
        coverages:
          items:
            $ref: '#/components/schemas/CoverageId'
          type: array
        insuredAddress:
          $ref: '#/components/schemas/Address'
    CoverageId:
      example:
        amount: amount
        code: 0
        name: name
      properties:
        code:
          format: int32
          type: integer
        name:
          type: string
        amount:
          type: string
    QuotationResponse:
      example:
        number: number
        amount: 0.8008281904610115
      properties:
        number:
          type: string
        amount:
          type: number
    IssuanceRequest:
      example:
        documentNumber: documentNumber
        paymentId: paymentId
        insuredAddress:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        coverages:
        - amount: 6.027456183070403
          code: 0
          sumInsured: 1.4658129805029452
          name: name
          description: description
          type: type
          required: true
        - amount: 6.027456183070403
          code: 0
          sumInsured: 1.4658129805029452
          name: name
          description: description
          type: type
          required: true
      properties:
        coverages:
          items:
            $ref: '#/components/schemas/Coverage'
          type: array
        documentNumber:
          type: string
        paymentId:
          type: string
        insuredAddress:
          $ref: '#/components/schemas/Address'
    IssuanceResponse:
      example:
        holder:
          areaCode: areaCode
          birthdate: 2000-01-23
          address:
            zipcode: zipcode
            number: number
            country: country
            city: city
            street: street
            neighbourhood: neighbourhood
            state: state
          gender: gender
          phone: phone
          documentNumber: documentNumber
          name: name
          email: email
        policy:
          number: 0
          amount: 6.027456183070403
          validity:
            start: start
            end: end
          insuredAddress:
            zipcode: zipcode
            number: number
            country: country
            city: city
            street: street
            neighbourhood: neighbourhood
            state: state
          coverages:
          - amount: 6.027456183070403
            code: 0
            sumInsured: 1.4658129805029452
            name: name
            description: description
            type: type
            required: true
          - amount: 6.027456183070403
            code: 0
            sumInsured: 1.4658129805029452
            name: name
            description: description
            type: type
            required: true
      properties:
        policy:
          $ref: '#/components/schemas/IssuanceResponse_policy'
        holder:
          $ref: '#/components/schemas/Holder'
    Holder:
      example:
        areaCode: areaCode
        birthdate: 2000-01-23
        address:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        gender: gender
        phone: phone
        documentNumber: documentNumber
        name: name
        email: email
      properties:
        documentNumber:
          type: string
        name:
          type: string
        birthdate:
          format: date
          type: string
        gender:
          type: string
        email:
          type: string
        areaCode:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    PaymentRequest:
      example:
        amount: 0.8008281904610115
        installments:
        - number: 6
          amount: 1.4658129805029452
        - number: 6
          amount: 1.4658129805029452
        document: document
        cardToken: cardToken
      properties:
        amount:
          type: number
        cardToken:
          type: string
        document:
          type: string
        installments:
          items:
            $ref: '#/components/schemas/Installments'
          type: array
    Installments:
      example:
        number: 6
        amount: 1.4658129805029452
      properties:
        number:
          format: int32
          type: integer
        amount:
          type: number
    PaymentResponse:
      example:
        amount: 6
        id: 0
        transactionId: transactionId
      properties:
        transactionId:
          type: string
        id:
          type: integer
        amount:
          type: integer
    ChangePassword:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
    PasswordRecovery:
      example:
        email: email
      properties:
        email:
          type: string
    UpdatePasswordRecovery:
      example:
        newPassword: newPassword
      properties:
        newPassword:
          type: string
    PoliciesResponse:
      items:
        $ref: '#/components/schemas/PolicyResponse'
      type: array
    PolicyResponse:
      example:
        number: 0.8008281904610115
        amount: 6.027456183070403
        documentNumber: documentNumber
        validity:
          start: start
          end: end
      properties:
        number:
          type: number
        documentNumber:
          type: string
        amount:
          type: number
        validity:
          $ref: '#/components/schemas/Validity'
    Validity:
      example:
        start: start
        end: end
      properties:
        start:
          type: string
        end:
          type: string
    PolicyDetailsResponse:
      example:
        number: 0.8008281904610115
        amount: 6.027456183070403
        documentNumber: documentNumber
        paymentId: 1
        validity:
          start: start
          end: end
        insuredAddress:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        coverages:
        - amount: amount
          code: 0
          name: name
        - amount: amount
          code: 0
          name: name
      properties:
        number:
          type: number
        documentNumber:
          type: string
        amount:
          type: number
        paymentId:
          type: integer
        coverages:
          items:
            $ref: '#/components/schemas/CoverageId'
          type: array
        validity:
          $ref: '#/components/schemas/Validity'
        insuredAddress:
          $ref: '#/components/schemas/Address'
    Tag:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
    IssuanceResponse_policy_validity:
      example:
        start: start
        end: end
      properties:
        start:
          type: string
        end:
          type: string
    IssuanceResponse_policy:
      example:
        number: 0
        amount: 6.027456183070403
        validity:
          start: start
          end: end
        insuredAddress:
          zipcode: zipcode
          number: number
          country: country
          city: city
          street: street
          neighbourhood: neighbourhood
          state: state
        coverages:
        - amount: 6.027456183070403
          code: 0
          sumInsured: 1.4658129805029452
          name: name
          description: description
          type: type
          required: true
        - amount: 6.027456183070403
          code: 0
          sumInsured: 1.4658129805029452
          name: name
          description: description
          type: type
          required: true
      properties:
        number:
          type: integer
        validity:
          $ref: '#/components/schemas/IssuanceResponse_policy_validity'
        insuredAddress:
          $ref: '#/components/schemas/Address'
        amount:
          type: number
        coverages:
          items:
            $ref: '#/components/schemas/Coverage'
          type: array
  securitySchemes:
    api_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey

