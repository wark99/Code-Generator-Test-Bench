openapi: 3.1.0
info:
  contact:
    name: AIRBIT
    url: https://air-bit.ru/
  description: This API is intended to work with the application **AIRBIT IoT Workspace**
    .
  title: AIRBIT IoT Workspace REST API
  version: 2.0.1
servers:
- description: Mock Server
  url: http://geo-api.air-bit.ru:8081/
paths:
  /auth/login/:
    post:
      deprecated: true
      description: User login
      operationId: login_user
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: User login
      tags:
      - Auth
      x-accepts: application/json
  /auth/logout/:
    post:
      deprecated: true
      description: User logout
      operationId: logout_user
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: User logout
      tags:
      - Auth
      x-accepts: application/json
  /auth/register/:
    post:
      description: User register
      operationId: register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User register
      tags:
      - Auth
      x-content-type: application/json
      x-accepts: application/json
  /auth/confirm-register/{token}/:
    post:
      description: User confirm register
      operationId: confirm_register
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          title: Token
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User confirm register
      tags:
      - Auth
      x-accepts: application/json
  /auth/recovery/:
    post:
      description: User recovery password by email or phone
      operationId: recovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRecoveryPasswordScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Bad Request
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User recovery password by email or phone
      tags:
      - Auth
      x-content-type: application/json
      x-accepts: application/json
  /auth/reset/{token}/:
    post:
      description: Reset user password
      operationId: reset_password
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          title: Token
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Bad Request
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Reset user password
      tags:
      - Auth
      x-content-type: application/json
      x-accepts: application/json
  /dashboard/:
    get:
      description: Get a list of dashboards
      operationId: get_dashboards
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDictItemScheme'
          description: Successful Response
      security:
      - AWSAuthenticator: []
      summary: Get a list of dashboards
      tags:
      - Dashboard
      x-accepts: application/json
  /dashboard/{id}/:
    delete:
      description: Delete dashboard by id
      operationId: delete_dashboard
      parameters:
      - description: unique dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique dashboard id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete dashboard by id
      tags:
      - Dashboard
      x-accepts: application/json
    get:
      description: Get a list of dashboards
      operationId: get_dashboard
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictItemScheme'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of dashboards
      tags:
      - Dashboard
      x-accepts: application/json
    put:
      description: Update dashboard by id
      operationId: update_dashboard
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictItemBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update dashboard by id
      tags:
      - Dashboard
      x-content-type: application/json
      x-accepts: application/json
  /dashboard/{id}/full-struct/:
    get:
      description: Get full struct dashboard by id
      operationId: get_dashboard_full_struct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get full struct dashboard by id
      tags:
      - Dashboard
      x-accepts: application/json
  /dashboard/{dash_type}/:
    post:
      description: Add dashboard
      operationId: add_dashboard
      parameters:
      - explode: false
        in: path
        name: dash_type
        required: true
        schema:
          $ref: '#/components/schemas/DashboardType'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardScheme'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictItemBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add dashboard
      tags:
      - Dashboard
      x-content-type: application/json
      x-accepts: application/json
  /addresses/:
    get:
      deprecated: true
      description: Get a list of addresses
      operationId: get_addresses
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_AddressNodeScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of addresses
      tags:
      - Addresses
      x-accepts: application/json
    post:
      deprecated: true
      description: Add address
      operationId: add_address
      requestBody:
        content:
          application/json:
            examples:
              address_root:
                description: Address node(root)
                summary: Address node(root)
                value:
                  company_id: 1
                  status: 2
                  name: Volodarskogo
                  prefix: str.
                  postfix: 62k2
              address_node:
                description: Address node
                summary: Address node
                value:
                  company_id: 1
                  status: 2
                  parent_id: 1
                  name: Volodarskogo
                  prefix: str.
                  postfix: 62k2
            schema:
              $ref: '#/components/schemas/CreateAddressNodeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add address
      tags:
      - Addresses
      x-content-type: application/json
      x-accepts: application/json
  /addresses/{id}/:
    delete:
      deprecated: true
      description: Delete address by id
      operationId: delete_address
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete address by id
      tags:
      - Addresses
      x-accepts: application/json
    get:
      deprecated: true
      description: Get address by id
      operationId: get_address
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get address by id
      tags:
      - Addresses
      x-accepts: application/json
    put:
      deprecated: true
      description: Update address by id
      operationId: update_address
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressNode'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update address by id
      tags:
      - Addresses
      x-content-type: application/json
      x-accepts: application/json
  /addresses/{addr_id}/norm/:
    get:
      deprecated: true
      description: Get a list of norms
      operationId: get_norms
      parameters:
      - description: address id
        explode: false
        in: path
        name: addr_id
        required: true
        schema:
          description: address id
          title: Addr Id
          type: integer
        style: simple
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - description: object metric group id
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          description: object metric group id
          title: Group Id
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_AddressNodeNormScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of norms
      tags:
      - Addresses
      x-accepts: application/json
    post:
      deprecated: true
      description: Add address norm
      operationId: create_norm
      parameters:
      - description: address id
        explode: false
        in: path
        name: addr_id
        required: true
        schema:
          description: address id
          title: Addr Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressNormScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeNormScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add address norm
      tags:
      - Addresses
      x-content-type: application/json
      x-accepts: application/json
  /addresses/{addr_id}/norm/{id}/:
    delete:
      deprecated: true
      description: Delete address norm by id
      operationId: delete_norm
      parameters:
      - description: address norm id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: address norm id
          title: Id
          type: integer
        style: simple
      - description: address id
        explode: false
        in: path
        name: addr_id
        required: true
        schema:
          description: address id
          title: Addr Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete address norm by id
      tags:
      - Addresses
      x-accepts: application/json
    get:
      deprecated: true
      description: Get address norm
      operationId: get_norm
      parameters:
      - description: norm id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: norm id
          title: Id
          type: integer
        style: simple
      - description: address id
        explode: false
        in: path
        name: addr_id
        required: true
        schema:
          description: address id
          title: Addr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeNormScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get address norm
      tags:
      - Addresses
      x-accepts: application/json
    put:
      deprecated: true
      description: Update address norm
      operationId: update_norm
      parameters:
      - description: address id
        explode: false
        in: path
        name: addr_id
        required: true
        schema:
          description: address id
          title: Addr Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressNormScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNodeNormScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update address norm
      tags:
      - Addresses
      x-content-type: application/json
      x-accepts: application/json
  /devices/:
    get:
      description: Get a list of devices
      operationId: get_devices
      parameters:
      - description: unique address identifier
        explode: true
        in: query
        name: addr_id
        required: false
        schema:
          description: unique address identifier
          title: Addr Id
          type: integer
        style: form
      - description: list of unique group identifiers
        explode: true
        in: query
        name: group_ids
        required: false
        schema:
          description: list of unique group identifiers
          items:
            type: integer
          type: array
        style: form
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_DeviceScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of devices
      tags:
      - Device
      x-accepts: application/json
    post:
      description: Add device
      operationId: add_device
      requestBody:
        content:
          application/json:
            examples:
              base_device:
                description: Base example device scheme
                summary: Base device
                value:
                  name: Test device
                  net_id_type_id: 1
                  net_id: FFFFFFFFFFFFFFFA
                  conv_group_id: 1
                  groups:
                  - 1
                  - 2
                  longitude: 73.86035
                  latitude: 67.63456
                  altitude: 87
                  comments: This test Device base dcheme
              template_device:
                description: Base example template device scheme
                summary: Template device
                value:
                  name: Test device
                  net_id_type_id: 1
                  net_id: FFFFFFFFFFFFFFFA
                  templ_id: 1
                  groups:
                  - 1
                  - 2
                  longitude: 73.86035
                  latitude: 67.63456
                  altitude: 87
                  comments: This test Device base dcheme
            schema:
              $ref: '#/components/schemas/CreateDeviceScheme'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add device
      tags:
      - Device
      x-content-type: application/json
      x-accepts: application/json
  /devices/{id}/:
    delete:
      description: Delete device by id
      operationId: delete_device
      parameters:
      - description: unique device id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique device id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete device by id
      tags:
      - Device
      x-accepts: application/json
    get:
      description: Get device by id
      operationId: get_device
      parameters:
      - description: unique device id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique device id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get device by id
      tags:
      - Device
      x-accepts: application/json
    put:
      description: Update device by id
      operationId: update_device
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update device by id
      tags:
      - Device
      x-content-type: application/json
      x-accepts: application/json
  /groups/{type}/:
    get:
      description: Get a list of groups
      operationId: get_groups
      parameters:
      - description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
          \ \n * 3 - ObjectMetricGroup \n "
        explode: false
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
            \ \n * 3 - ObjectMetricGroup \n "
          title: Type
        style: simple
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_GroupScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of groups
      tags:
      - Groups
      x-accepts: application/json
    post:
      deprecated: true
      description: Add group
      operationId: add_group
      parameters:
      - description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
          \ \n * 3 - ObjectMetricGroup \n "
        explode: false
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
            \ \n * 3 - ObjectMetricGroup \n "
          title: Type
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              device_group:
                description: Device group
                summary: Device group
                value:
                  company_id: 1
                  status: 2
                  name: Test device group
                  comments: This test device group
                  color: '#a94d4d'
                  is_virtual: false
              object_group:
                description: Object group
                summary: Object group
                value:
                  company_id: 1
                  status: 2
                  name: Test object group
                  comments: This test device group
                  color: '#a94d4d'
                  is_virtual: true
                  num_expr: og
                  tagged_groups:
                  - tag: og
                    tagged_group_id: 1
              object_metric_group:
                description: Object group
                summary: Object metric group
                value:
                  company_id: 1
                  status: 2
                  name: Test object metric group
                  comments: This test object metric group
                  color: '#a94d4d'
                  is_virtual: true
                  num_expr: m+g
                  tagged_groups:
                  - tag: m
                    tagged_group_id: 1
                  - tag: g
                    tagged_group_id: 2
            schema:
              $ref: '#/components/schemas/CreateGroupScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /groups/{type}/{id}/:
    delete:
      description: Delete group by id
      operationId: delete_group
      parameters:
      - description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
          \ \n * 3 - ObjectMetricGroup \n "
        explode: false
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
            \ \n * 3 - ObjectMetricGroup \n "
          title: Type
        style: simple
      - description: unique group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique group id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete group by id
      tags:
      - Groups
      x-accepts: application/json
    get:
      description: Get group by id
      operationId: get_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      - description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
          \ \n * 3 - ObjectMetricGroup \n "
        explode: false
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
            \ \n * 3 - ObjectMetricGroup \n "
          title: Type
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get group by id
      tags:
      - Groups
      x-accepts: application/json
    put:
      deprecated: true
      description: Update group by id
      operationId: update_group
      parameters:
      - description: unique group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique group id
          title: Id
          type: integer
        style: simple
      - description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
          \ \n * 3 - ObjectMetricGroup \n "
        explode: false
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupType'
          description: "Group type: \n * 1 - DeviceGroup \n \n * 2 - ObjectGroup \n\
            \ \n * 3 - ObjectMetricGroup \n "
          title: Type
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update group by id
      tags:
      - Groups
      x-accepts: application/json
  /device-netid-types/:
    get:
      description: Get a list of device net id types
      operationId: get_device_net_id_types
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_DeviceNetIdTypeScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of device net id types
      tags:
      - Device NetId types
      x-accepts: application/json
    post:
      description: Add device net id type
      operationId: add_device_net_id_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceNetIdTypeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNetIdTypeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add device net id type
      tags:
      - Device NetId types
      x-content-type: application/json
      x-accepts: application/json
  /device-netid-types/{id}/:
    delete:
      description: Delete device net id type by id
      operationId: delete_device_net_id_type
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete device net id type by id
      tags:
      - Device NetId types
      x-accepts: application/json
    get:
      description: Get device net id type by id
      operationId: get_device_net_id_type
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNetIdTypeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get device net id type by id
      tags:
      - Device NetId types
      x-accepts: application/json
    put:
      description: Update device net id type by id
      operationId: update_device_net_id_type
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceNetIdTypeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNetIdTypeScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update device net id type by id
      tags:
      - Device NetId types
      x-content-type: application/json
      x-accepts: application/json
  /objects/favorite/:
    post:
      deprecated: true
      description: Add object to dashboard
      operationId: favorite_object
      parameters:
      - explode: true
        in: query
        name: obj_id
        required: true
        schema:
          title: Obj Id
          type: integer
        style: form
      - explode: true
        in: query
        name: dash_id
        required: true
        schema:
          title: Dash Id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add object to dashboard
      tags:
      - Object
      x-accepts: application/json
  /objects/{id}/full-object-struct/:
    get:
      description: Metrics of the object
      operationId: full_object_struct
      parameters:
      - description: unique object id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Metrics of the object
      tags:
      - Object
      x-accepts: application/json
  /objects/:
    get:
      description: Get a list of objects
      operationId: get_objects
      parameters:
      - description: unique address identifier
        explode: true
        in: query
        name: addr_id
        required: false
        schema:
          description: unique address identifier
          title: Addr Id
          type: integer
        style: form
      - description: list of unique group identifiers
        explode: true
        in: query
        name: group_ids
        required: false
        schema:
          description: list of unique group identifiers
          items:
            type: integer
          type: array
        style: form
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ObjectBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of objects
      tags:
      - Object
      x-accepts: application/json
    post:
      description: Add object
      operationId: add_object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectScheme'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add object
      tags:
      - Object
      x-content-type: application/json
      x-accepts: application/json
  /objects/{id}/:
    delete:
      description: Delete object by id
      operationId: delete_object
      parameters:
      - description: unique object id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete object by id
      tags:
      - Object
      x-accepts: application/json
    get:
      description: Get object by id
      operationId: get_object
      parameters:
      - description: unique object id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get object by id
      tags:
      - Object
      x-accepts: application/json
    put:
      description: Update object by id
      operationId: update_object
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update object by id
      tags:
      - Object
      x-content-type: application/json
      x-accepts: application/json
  /objects/object-types/:
    get:
      description: Get a list of object types
      operationId: get_object_types
      parameters:
      - description: "ConvAttach: \n * 1 - Sync \n \n * 2 - Unsync \n "
        explode: true
        in: query
        name: conv_attach
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ConvAttach'
          description: "ConvAttach: \n * 1 - Sync \n \n * 2 - Unsync \n "
          title: Conv Attach
        style: form
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ObjectTypeBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of object types
      tags:
      - Object
      x-accepts: application/json
  /objects/object-types/{id}/:
    get:
      description: Get object type by id
      operationId: get_object_type
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTypeBaseScheme'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get object type by id
      tags:
      - Object
      x-accepts: application/json
  /objects/object-types/{id}/full-struct/:
    get:
      description: Get full struct of object type by id
      operationId: get_object_type_full_struct
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTypeFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get full struct of object type by id
      tags:
      - Object
      x-accepts: application/json
  /objects/object-type/:
    post:
      deprecated: true
      description: Add object type
      operationId: create_object_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectTypeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTypeFullStructScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add object type
      tags:
      - Object
      x-content-type: application/json
      x-accepts: application/json
  /objects/object-type/{id}/:
    delete:
      description: Delete object type by id
      operationId: delete_object_type
      parameters:
      - description: unique object id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete object type by id
      tags:
      - Object
      x-accepts: application/json
    put:
      deprecated: true
      description: Update object type by id
      operationId: update_object_types
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update object type by id
      tags:
      - Object
      x-accepts: application/json
  /templates/:
    get:
      description: Get a list of templates
      operationId: get_templates
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_TemplateScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of templates
      tags:
      - Templates
      x-accepts: application/json
    post:
      description: Add template
      operationId: add_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add template
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /templates/{id}/:
    delete:
      description: Delete template by id
      operationId: delete_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete template by id
      tags:
      - Templates
      x-accepts: application/json
    get:
      description: Get template by id
      operationId: get_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get template by id
      tags:
      - Templates
      x-accepts: application/json
    put:
      description: Update template by id
      operationId: update_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update template by id
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /utility-resources/:
    get:
      description: Get a list utility resources
      operationId: get_consumption_groups
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConsumptionGroupBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list utility resources
      tags:
      - Utility resources
      x-accepts: application/json
    post:
      description: Add utility resource
      operationId: create_consumption_groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsumptionGroupScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionGroupBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add utility resource
      tags:
      - Utility resources
      x-content-type: application/json
      x-accepts: application/json
  /utility-resources/{id}/:
    delete:
      description: Delete utility resource by id
      operationId: delete_consumption_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete utility resource by id
      tags:
      - Utility resources
      x-accepts: application/json
    get:
      description: Get utility resource by id
      operationId: get_consumption_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionGroupBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get utility resource by id
      tags:
      - Utility resources
      x-accepts: application/json
    put:
      description: Update utility resource by id
      operationId: update_consumption_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsumptionGroupScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionGroupBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update utility resource by id
      tags:
      - Utility resources
      x-content-type: application/json
      x-accepts: application/json
  /data-converters-group/{id}/features/:
    post:
      deprecated: true
      description: Set features to converter group
      operationId: set_features
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Set features to converter group
      tags:
      - Data converters
      x-accepts: application/json
  /data-converters-group/{id}/copy/:
    post:
      deprecated: true
      description: Copy converter group by id
      operationId: copy_conv_group
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Copy converter group by id
      tags:
      - Data converters
      x-accepts: application/json
  /data-converters-group/:
    get:
      description: Get a list of data converter groups
      operationId: get_data_converter_groups
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConverterGroupBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of data converter groups
      tags:
      - Data converters
      x-accepts: application/json
    post:
      description: Add data converter group
      operationId: create_data_converter_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConverterGroupScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConverterGroupBaseScheme-Output'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add data converter group
      tags:
      - Data converters
      x-content-type: application/json
      x-accepts: application/json
  /data-converters-group/{id}/:
    delete:
      description: Delete data converter group by id
      operationId: delete_data_converter_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete data converter group by id
      tags:
      - Data converters
      x-accepts: application/json
    get:
      description: Get data converter group by id
      operationId: get_data_converter_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConverterGroupBaseScheme-Output'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get data converter group by id
      tags:
      - Data converters
      x-accepts: application/json
    put:
      description: Update data converter group by id
      operationId: update_data_converter_group
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConverterGroupBaseScheme-Input'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConverterGroupBaseScheme-Output'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update data converter group by id
      tags:
      - Data converters
      x-content-type: application/json
      x-accepts: application/json
  /data-converters-group/{conv_gr_id}/data-converters/:
    get:
      deprecated: true
      description: Get a list of data converters
      operationId: get_data_converters
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: conv_gr_id
        required: true
        schema:
          description: unique object type id
          title: Conv Gr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of data converters
      tags:
      - Data converters
      x-accepts: application/json
    post:
      deprecated: true
      description: Add data converter
      operationId: create_data_converter
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: conv_gr_id
        required: true
        schema:
          description: unique object type id
          title: Conv Gr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add data converter
      tags:
      - Data converters
      x-accepts: application/json
  /data-converters-group/{conv_gr_id}/data-converters/{id}/:
    delete:
      deprecated: true
      description: Delete data converter by id
      operationId: delete_data_converter
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      - description: unique object type id
        explode: false
        in: path
        name: conv_gr_id
        required: true
        schema:
          description: unique object type id
          title: Conv Gr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete data converter by id
      tags:
      - Data converters
      x-accepts: application/json
    get:
      deprecated: true
      description: Get data converter by id
      operationId: get_data_converter
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      - description: unique object type id
        explode: false
        in: path
        name: conv_gr_id
        required: true
        schema:
          description: unique object type id
          title: Conv Gr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get data converter by id
      tags:
      - Data converters
      x-accepts: application/json
    put:
      deprecated: true
      description: Update data converter by id
      operationId: update_data_converter
      parameters:
      - description: unique object type id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique object type id
          title: Id
          type: integer
        style: simple
      - description: unique object type id
        explode: false
        in: path
        name: conv_gr_id
        required: true
        schema:
          description: unique object type id
          title: Conv Gr Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update data converter by id
      tags:
      - Data converters
      x-accepts: application/json
  /data-channels/:
    get:
      description: Get a list of data channels
      operationId: get_data_channels
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_DataChannelBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of data channels
      tags:
      - Data channels
      x-accepts: application/json
    post:
      description: Add data channel
      operationId: create_data_channel
      requestBody:
        content:
          application/json:
            examples:
              dc_airbit_lns_http:
                description: "AIRBIT-LNS [HTTP]"
                summary: "AIRBIT-LNS [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 1
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_airbit_lns_amqp_uri_on:
                description: "AIRBIT-LNS [AMQP](uri on)"
                summary: "AIRBIT-LNS [AMQP](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 2
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: amqp://airbit:airbit@127.0.0.1:5000/?exchange=airbit.lns&heartbeat=60&queue=airbit.lns.link
                  uri_unblock: true
              dc_airbit_lns_amqp_uri_off:
                description: "AIRBIT-LNS [AMQP](uri off)"
                summary: "AIRBIT-LNS [AMQP](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 2
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 2
                    virtual_host: /
                    exchange: airbit.lns
                    queue: airbit.lns.link
              dc_airbit_lns_mqtt_uri_on:
                description: "AIRBIT-LNS [MQTT](uri on)"
                summary: "AIRBIT-LNS [MQTT](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 3
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: mqtt://airbit:airbit@127.0.0.1:5000/controller/data/#?retain=false
                  uri_unblock: true
              dc_airbit_lns_mqtt_uri_off:
                description: "AIRBIT-LNS [MQTT](uri off)"
                summary: "AIRBIT-LNS [MQTT](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 3
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 3
                    client_id: cl_id
                    topic: topic
                    qos: 0
                    retain: false
              dc_airbit_lns_kafka_uri_on:
                description: "AIRBIT-LNS [KAFKA](uri on)"
                summary: "AIRBIT-LNS [KAFKA](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 4
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: kafka://airbit:airbit@127.0.0.1:5000/topic?client_id=1&partition=10&no_verify=False
                  uri_unblock: true
              dc_airbit_lns_kafka_uri_off:
                description: "AIRBIT-LNS [KAFKA](uri off)"
                summary: "AIRBIT-LNS [KAFKA](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 4
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 4
                    topic: topic
                    client_id: cl_id
                    partition: 10
              dc_airbit_lns_chirp_stark_http:
                description: "AIRBIT-LNS ChirpStark [HTTP]"
                summary: "AIRBIT-LNS ChirpStark [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 5
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_airbit_lns_er_telecom_http:
                description: "AIRBIT-LNS ChirpStark [HTTP]"
                summary: "AIRBIT-LNS ChirpStark [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 6
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_tnn_http:
                description: "TNN [HTTP]"
                summary: "TNN [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 7
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_tnn_mqtt_uri_on:
                description: "TNN [MQTT](uri on)"
                summary: "TNN [MQTT](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 8
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: mqtt://airbit:airbit@127.0.0.1:5000/controller/data/#?retain=false
                  uri_unblock: true
              dc_tnn_mqtt_uri_off:
                description: "TNN [MQTT](uri off)"
                summary: "TNN [MQTT](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 8
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 3
                    client_id: cl_id
                    topic: topic
                    qos: 0
                    retain: false
              dc_universal_http:
                description: "TNN [HTTP]"
                summary: "TNN [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 10
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_universal_amqp_uri_on:
                description: "Universal [AMQP](uri on)"
                summary: "Universal [AMQP](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 9
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: amqp://airbit:airbit@127.0.0.1:5000/?exchange=airbit.lns&heartbeat=60&queue=airbit.lns.link
                  uri_unblock: true
              dc_universal_amqp_uri_off:
                description: "Universal [AMQP](uri off)"
                summary: "Universal [AMQP](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 9
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 2
                    virtual_host: /
                    exchange: airbit.lns
                    queue: airbit.lns.link
              dc_universal_mqtt_uri_on:
                description: "Universal [MQTT](uri on)"
                summary: "Universal [MQTT](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 12
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: mqtt://airbit:airbit@127.0.0.1:5000/controller/data/#?retain=false
                  uri_unblock: true
              dc_universal_mqtt_uri_off:
                description: "Universal [MQTT](uri off)"
                summary: "Universal [MQTT](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 12
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 3
                    client_id: cl_id
                    topic: topic
                    qos: 0
                    retain: false
              dc_universal_kafka_uri_on:
                description: "Universal [KAFKA](uri on)"
                summary: "Universal [KAFKA](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 11
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: kafka://airbit:airbit@127.0.0.1:5000/topic?client_id=1&partition=10&no_verify=False
                  uri_unblock: true
              dc_universal_kafka_uri_off:
                description: "Universal [KAFKA](uri off)"
                summary: "Universal [KAFKA](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 11
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 4
                    topic: topic
                    client_id: cl_id
                    partition: 10
              dc_ws_transport_http:
                description: "WS-Transport [HTTP]"
                summary: "WS-Transport [HTTP]"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 1
                  class_converter: 14
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: https://127.0.0.1/api/callback/wsdev/
                  uri_unblock: true
              dc_ws_transport_amqp_uri_on:
                description: "WS-Transport [AMQP](uri on)"
                summary: "WS-Transport [AMQP](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 13
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: amqp://airbit:airbit@127.0.0.1:5000/?exchange=airbit.lns&heartbeat=60&queue=airbit.lns.link
                  uri_unblock: true
              dc_ws_transport_amqp_uri_off:
                description: "WS-Transport [AMQP](uri off)"
                summary: "WS-Transport [AMQP](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 2
                  class_converter: 13
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 2
                    virtual_host: /
                    exchange: airbit.lns
                    queue: airbit.lns.link
              dc_ws_transport_uri_on:
                description: "WS-Transport [MQTT](uri on)"
                summary: "WS-Transport [MQTT](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 16
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: mqtt://airbit:airbit@127.0.0.1:5000/controller/data/#?retain=false
                  uri_unblock: true
              dc_ws_transport_mqtt_uri_off:
                description: "WS-Transport [MQTT](uri off)"
                summary: "WS-Transport [MQTT](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 3
                  class_converter: 16
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 3
                    client_id: cl_id
                    topic: topic
                    qos: 0
                    retain: false
              dc_ws_transport_kafka_uri_on:
                description: "WS-Transport [KAFKA](uri on)"
                summary: "WS-Transport [KAFKA](uri on)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 15
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_full_manual: kafka://airbit:airbit@127.0.0.1:5000/topic?client_id=1&partition=10&no_verify=False
                  uri_unblock: true
              dc_ws_transport_kafka_uri_off:
                description: "WS-Transport [KAFKA](uri off)"
                summary: "WS-Transport [KAFKA](uri off)"
                value:
                  company_id: 1
                  status: 2
                  direct: 1
                  proto: 4
                  class_converter: 15
                  net_id_type_id: 1
                  name: WSdev
                  slug: wsdev
                  save_to_db: true
                  uri_unblock: false
                  account: 1
                  uri_detailed_field:
                    proto: 4
                    topic: topic
                    client_id: cl_id
                    partition: 10
            schema:
              $ref: '#/components/schemas/CreateDataChannelScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataChannelBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add data channel
      tags:
      - Data channels
      x-content-type: application/json
      x-accepts: application/json
  /data-channels/{id}/:
    delete:
      description: Delete data channel by id
      operationId: delete_data_channel
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete data channel by id
      tags:
      - Data channels
      x-accepts: application/json
    get:
      description: Get data channel by id
      operationId: get_data_channel
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataChannelBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get data channel by id
      tags:
      - Data channels
      x-accepts: application/json
    put:
      description: Update data channel by id
      operationId: update_data_channel
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataChannelScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataChannelBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update data channel by id
      tags:
      - Data channels
      x-content-type: application/json
      x-accepts: application/json
  /external-accounts/:
    get:
      description: Get a list of external accounts
      operationId: get_external_accounts
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ExternalAccountBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of external accounts
      tags:
      - External accounts
      x-accepts: application/json
    post:
      description: Add external account
      operationId: create_external_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalAccountScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add external account
      tags:
      - External accounts
      x-content-type: application/json
      x-accepts: application/json
  /external-accounts/{id}/:
    delete:
      description: Delete external account by id
      operationId: delete_external_account
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete external account by id
      tags:
      - External accounts
      x-accepts: application/json
    get:
      description: Get external account by id
      operationId: get_external_account
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get external account by id
      tags:
      - External accounts
      x-accepts: application/json
    put:
      description: Update external account by id
      operationId: update_external_account
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalAccountScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update external account by id
      tags:
      - External accounts
      x-content-type: application/json
      x-accepts: application/json
  /libraries/:
    get:
      deprecated: true
      description: Get a list of libraries
      operationId: get_libraries
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - AWSAuthenticator: []
      summary: Get a list of libraries
      tags:
      - Libraries
      x-accepts: application/json
  /libraries/{id}/:
    delete:
      deprecated: true
      description: Delete library by id
      operationId: delete_library
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete library by id
      tags:
      - Libraries
      x-accepts: application/json
    get:
      deprecated: true
      description: Get library by id
      operationId: get_library
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get library by id
      tags:
      - Libraries
      x-accepts: application/json
    put:
      deprecated: true
      description: Update library by id
      operationId: update_library
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update library by id
      tags:
      - Libraries
      x-accepts: application/json
  /libraries/add/:
    post:
      deprecated: true
      description: Add library from source code
      operationId: create_library
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - AWSAuthenticator: []
      summary: Add library from source code
      tags:
      - Libraries
      x-accepts: application/json
  /libraries/from-file/:
    post:
      deprecated: true
      description: Add library from file
      operationId: create_library_from_file
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - AWSAuthenticator: []
      summary: Add library from file
      tags:
      - Libraries
      x-accepts: application/json
  /libraries/from-url/:
    post:
      deprecated: true
      description: Add library from url
      operationId: create_library_from_url
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - AWSAuthenticator: []
      summary: Add library from url
      tags:
      - Libraries
      x-accepts: application/json
  /modbus/registers/:
    get:
      description: Get a list of modbus registers
      operationId: get_registers
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ModbusRegisterBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of modbus registers
      tags:
      - Modbus
      x-accepts: application/json
    post:
      description: Add modbus register
      operationId: create_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModbusRegisterScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModbusRegisterBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add modbus register
      tags:
      - Modbus
      x-content-type: application/json
      x-accepts: application/json
  /modbus/registers/{id}/:
    delete:
      description: Delete modbus register by id
      operationId: delete_register
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete modbus register by id
      tags:
      - Modbus
      x-accepts: application/json
    get:
      description: Get modbus register by id
      operationId: get_register
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModbusRegisterBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get modbus register by id
      tags:
      - Modbus
      x-accepts: application/json
    put:
      description: Update modbus register by id
      operationId: update_register
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModbusRegisterScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModbusRegisterBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update modbus register by id
      tags:
      - Modbus
      x-content-type: application/json
      x-accepts: application/json
  /data/device/{id}/:
    get:
      deprecated: true
      operationId: get_data_device
      parameters:
      - description: unique device id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique device id
          title: Id
          type: integer
        style: simple
      - description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: Start Date
          type: string
        style: form
      - description: end date of filtering period (format YYYY-MM-DDThh:mm:ss)
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          description: end date of filtering period (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: End Date
          type: string
        style: form
      - description: "Period, grouping of data by period: \n * 0 - Asis \n \n * 1\
          \ - Hour \n \n * 2 - Day \n \n * 3 - Week \n \n * 4 - Month \n  "
        explode: true
        in: query
        name: period
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Period'
          default: 0
          description: "Period, grouping of data by period: \n * 0 - Asis \n \n *\
            \ 1 - Hour \n \n * 2 - Day \n \n * 3 - Week \n \n * 4 - Month \n  "
          title: Period
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_DeviceDataScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get device data
      tags:
      - Data
      x-accepts: application/json
  /data/object/:
    get:
      description: Get object data
      operationId: get_data_object
      parameters:
      - description: Unique object ids
        explode: true
        in: query
        name: obj_ids
        required: true
        schema:
          description: Unique object ids
          items:
            type: integer
          type: array
        style: form
      - description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
        explode: true
        in: query
        name: start_date
        required: true
        schema:
          description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: Start Date
          type: string
        style: form
      - description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
        explode: true
        in: query
        name: end_date
        required: true
        schema:
          description: start date of filtering period (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: End Date
          type: string
        style: form
      - description: "Period, grouping of data by period: \n * 0 - Asis \n \n * 1\
          \ - Hour \n \n * 2 - Day \n \n * 3 - Week \n \n * 4 - Month \n  "
        explode: true
        in: query
        name: date_period
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Period'
          default: 0
          description: "Period, grouping of data by period: \n * 0 - Asis \n \n *\
            \ 1 - Hour \n \n * 2 - Day \n \n * 3 - Week \n \n * 4 - Month \n  "
          title: Date Period
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ObjectDataScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get object data
      tags:
      - Data
      x-accepts: application/json
  /data/object/last-data/:
    get:
      description: Get object last data
      operationId: get_last_data_object
      parameters:
      - description: Unique object ids
        explode: true
        in: query
        name: obj_ids
        required: true
        schema:
          description: Unique object ids
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ObjectLastDataScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get object last data
      tags:
      - Data
      x-accepts: application/json
  /dicts/auth-methods/:
    get:
      description: Get a list of enabled auth methods from config
      operationId: get_auth_methods
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthMethods'
          description: Successful Response
      summary: Get a list of enabled auth methods from config
      tags:
      - Dicts
      x-accepts: application/json
  /dicts/approved-companies/:
    get:
      description: Get a list of companies available to the user
      operationId: approved_companies_user
      parameters:
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_DictItemScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of companies available to the user
      tags:
      - Dicts
      x-accepts: application/json
  /dicts/user-roles/:
    get:
      description: Get a list of user roles
      operationId: get_user_roles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDictItemScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
      security:
      - AWSAuthenticator: []
      summary: Get a list of user roles
      tags:
      - Dicts
      x-accepts: application/json
  /dicts/languages/:
    get:
      description: |-
        Get a list of user languages

        Args:
            curr_user: Data of the current user

        Returns:
            Data scheme of language list
      operationId: get_languages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDictItemScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
      security:
      - AWSAuthenticator: []
      summary: Get a list of user languages
      tags:
      - Dicts
      x-accepts: application/json
  /tasks/:
    get:
      deprecated: true
      description: Get a list of tasks
      operationId: get_tasks
      parameters:
      - description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Status: \n * 1 - Inactive \n \n * 2 - Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_TaskTimeScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of tasks
      tags:
      - Tasks
      x-accepts: application/json
    post:
      deprecated: true
      description: Add task
      operationId: create_task
      requestBody:
        content:
          application/json:
            examples:
              task_simple_time_day:
                description: Task simple time
                summary: Task simple time (day)
                value:
                  company_id: 1
                  status: 2
                  name: Test task
                  crontab_advanced: false
                  time_field:
                    start_date: 2024-12-14T09:41:00
                    interval_type: Day
                    ending_type: 0
                  tz: Europe/Moscow
                  regular: true
              task_simple_time_week:
                description: Task simple time
                summary: Task simple time (week)
                value:
                  company_id: 1
                  status: 2
                  name: Test task
                  crontab_advanced: false
                  time_field:
                    start_date: 2024-12-14T09:41:00
                    interval_type: Week
                    week_choices:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    repetitions_count: 20
                    ending_type: 2
                  tz: Europe/Moscow
                  regular: true
              task_simple_time_month:
                description: Task simple time
                summary: Task simple time (month)
                value:
                  company_id: 1
                  status: 2
                  name: Test task
                  crontab_advanced: false
                  time_field:
                    start_date: 2024-12-14T09:41:00
                    interval_type: Month
                    end_date: 2024-12-30T09:41:00
                    ending_type: 1
                  tz: Europe/Moscow
                  regular: true
              task_simple_time_year:
                description: Task simple time
                summary: Task simple time (year)
                value:
                  company_id: 1
                  status: 2
                  name: Test task
                  crontab_advanced: false
                  time_field:
                    start_date: 2024-12-14T09:41:00
                    interval_type: Year
                    end_date: 2024-12-30T09:41:00
                    ending_type: 1
                  tz: Europe/Moscow
                  regular: true
              task_advanced_time:
                description: Task advanced time
                summary: Task advanced time
                value:
                  company_id: 1
                  status: 2
                  name: Test task
                  crontab_advanced: true
                  time_field:
                    minutes: "30"
                    hours: "12"
                    day_of_month: "1"
                    month: "1"
                    day_of_week: "1"
                    start_date: 2023-12-14T09:41:00
                    end_date: 2024-12-14T09:41:00
                  tz: Europe/Moscow
                  regular: true
            schema:
              $ref: '#/components/schemas/CreateTaskTimeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimeBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add task
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /tasks/{id}/:
    delete:
      deprecated: true
      description: Delete task by id
      operationId: delete_task
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete task by id
      tags:
      - Tasks
      x-accepts: application/json
    get:
      deprecated: true
      description: Get task by id
      operationId: get_task
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimeBaseScheme'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get task by id
      tags:
      - Tasks
      x-accepts: application/json
    put:
      deprecated: true
      description: Update task by id
      operationId: update_task
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskTimeScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimeBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update task by id
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /tasks/{task_id}/process/{id}/:
    delete:
      deprecated: true
      description: Delete process by id
      operationId: delete_task_process
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete process by id
      tags:
      - Tasks
      x-accepts: application/json
    get:
      deprecated: true
      description: Get process by id
      operationId: get_task_process
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get process by id
      tags:
      - Tasks
      x-accepts: application/json
    put:
      deprecated: true
      description: Update process by id
      operationId: update_task_process
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProcessScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update process by id
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /tasks/{task_id}/process/:
    post:
      deprecated: true
      description: Add process
      operationId: create_task_process
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProcessScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add process
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /tasks/process/{proc_id}/action/{id}/:
    delete:
      deprecated: true
      description: Delete action by id
      operationId: delete_process_action
      parameters:
      - explode: false
        in: path
        name: proc_id
        required: true
        schema:
          title: Proc Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete action by id
      tags:
      - Tasks
      x-accepts: application/json
    get:
      deprecated: true
      description: Get action by id
      operationId: get_process_action
      parameters:
      - explode: false
        in: path
        name: proc_id
        required: true
        schema:
          title: Proc Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessActionBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get action by id
      tags:
      - Tasks
      x-accepts: application/json
    put:
      deprecated: true
      description: Update action by id
      operationId: update_process_action
      parameters:
      - explode: false
        in: path
        name: proc_id
        required: true
        schema:
          title: Proc Id
          type: integer
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddActionScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessActionBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update action by id
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /tasks/process/{proc_id}/action/:
    post:
      deprecated: true
      description: Add action
      operationId: create_process_action
      parameters:
      - explode: false
        in: path
        name: proc_id
        required: true
        schema:
          title: Proc Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddActionScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessActionBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add action
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /users/change-company/:
    post:
      description: User change company
      operationId: change_company_user
      parameters:
      - description: unique company id
        explode: true
        in: query
        name: company_id
        required: true
        schema:
          description: unique company id
          title: Company Id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: User change company
      tags:
      - User
      x-accepts: application/json
  /users/clear-session/:
    post:
      description: User clear session
      operationId: clear_session_user
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
      summary: User clear session
      tags:
      - User
      x-accepts: application/json
  /users/me/:
    get:
      description: |-
        Get data of the current user

        Args:
            request: Request
            curr_user: Date of the current user

        Returns:
            Data scheme of the current user
      operationId: get_me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBaseScheme'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
      security:
      - AWSAuthenticator: []
      summary: Get Me
      tags:
      - User
      x-accepts: application/json
  /users/:
    get:
      description: Get a list of users
      operationId: get_users
      parameters:
      - description: "Roles user: \n * 0 - Superadmin \n \n * 1 - Administrator \n\
          \ \n * 2 - Operator \n \n * 3 - User \n \n * 4 - Partner \n "
        explode: true
        in: query
        name: role
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserRole'
          description: "Roles user: \n * 0 - Superadmin \n \n * 1 - Administrator\
            \ \n \n * 2 - Operator \n \n * 3 - User \n \n * 4 - Partner \n "
          title: Role
        style: form
      - description: "Status user: \n * 1 - Inactive \n \n * 2 - New \n \n * 3 - Active\
          \ \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/StatusUser'
          description: "Status user: \n * 1 - Inactive \n \n * 2 - New \n \n * 3 -\
            \ Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_UserBaseScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of users
      tags:
      - User
      x-accepts: application/json
    post:
      description: Add user
      operationId: add_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserScheme'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add user
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /users/{id}/:
    delete:
      description: Delete user by id
      operationId: delete_user
      parameters:
      - description: unique user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique user id
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete user by id
      tags:
      - User
      x-accepts: application/json
    get:
      description: Get user by id
      operationId: get_user
      parameters:
      - description: unique user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique user id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get user by id
      tags:
      - User
      x-accepts: application/json
    put:
      description: Update user by id
      operationId: update_user
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBaseScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update user by id
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /companies/:
    get:
      description: Get a list of companies available to the user
      operationId: get_companies
      parameters:
      - description: "Status user: \n * 1 - Inactive \n \n * 2 - New \n \n * 3 - Active\
          \ \n "
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/StatusUser'
          description: "Status user: \n * 1 - Inactive \n \n * 2 - New \n \n * 3 -\
            \ Active \n "
          title: Status
        style: form
      - description: text value for search by name
        explode: true
        in: query
        name: text
        required: false
        schema:
          description: text value for search by name
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_CompanyScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get a list of companies available to the user
      tags:
      - Companies
      x-accepts: application/json
    post:
      description: Add company
      operationId: create_company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add company
      tags:
      - Companies
      x-content-type: application/json
      x-accepts: application/json
  /companies/{id}/:
    delete:
      description: Delete company by id
      operationId: delete_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete company by id
      tags:
      - Companies
      x-accepts: application/json
    get:
      description: Get company by id
      operationId: get_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get company by id
      tags:
      - Companies
      x-accepts: application/json
    put:
      description: Update company by id
      operationId: update_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update company by id
      tags:
      - Companies
      x-content-type: application/json
      x-accepts: application/json
  /widgets/favorite/:
    post:
      deprecated: true
      description: Add widget to dashboard
      operationId: favorite_widget
      parameters:
      - explode: true
        in: query
        name: widget_id
        required: true
        schema:
          title: Widget Id
          type: integer
        style: form
      - explode: true
        in: query
        name: dash_id
        required: true
        schema:
          title: Dash Id
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add widget to dashboard
      tags:
      - Widgets
      x-accepts: application/json
  /widgets/{display_type}/:
    get:
      description: Get list of widgets
      operationId: get_widgets
      parameters:
      - description: "Status: \n * 1 - Graphic \n \n * 2 - Card \n "
        explode: false
        in: path
        name: display_type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/WidgetDisplayType'
          description: "Status: \n * 1 - Graphic \n \n * 2 - Card \n "
          title: Display Type
        style: simple
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 1000
          title: Per Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ObjectWidgetScheme_'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get list of widgets
      tags:
      - Widgets
      x-accepts: application/json
  /widgets/{id}/:
    delete:
      description: Delete widget by id
      operationId: delete_widget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "204":
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Delete widget by id
      tags:
      - Widgets
      x-accepts: application/json
    get:
      description: Get widget by id
      operationId: get_widget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectWidgetScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Get widget by id
      tags:
      - Widgets
      x-accepts: application/json
    put:
      description: Update widget
      operationId: update_widget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectWidget'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectWidgetScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Update widget
      tags:
      - Widgets
      x-content-type: application/json
      x-accepts: application/json
  /widgets/:
    post:
      description: Add widget
      operationId: add_widget
      requestBody:
        content:
          application/json:
            examples:
              widget_graphs:
                description: Widget graphs
                summary: Widget graphs
                value:
                  company_id: 1
                  name: Test widget graphs
                  display_type: 1
                  plots:
                  - obj_id: 1
                    obj_param_id: 17
                    param_name: temperature
                    plot_type_id: 2
                    color: '#2770bf'
              widget_cards:
                description: Widget cards
                summary: Widget cards
                value:
                  company_id: 1
                  name: Test widget graphs
                  display_type: 2
                  plots:
                  - obj_id: 1
                    obj_param_id: 17
                    param_name: temperature
                    plot_type_id: 1
                    color: '#2770bf'
                  - obj_id: 1
                    obj_param_id: 9
                    param_name: humidity
                    plot_type_id: 1
                    color: '#27bf3c'
            schema:
              $ref: '#/components/schemas/CreateObjectWidgetScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectWidgetScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - AWSAuthenticator: []
      summary: Add widget
      tags:
      - Widgets
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    AddActionScheme:
      example:
        name: name
        action_params:
          action_class: ""
          exchange: exchange
          account: 0
          queue: queue
          virtual_host: virtual_host
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        name:
          $ref: '#/components/schemas/name'
        action_params:
          $ref: '#/components/schemas/action_params'
      required:
      - action_params
      - status
      title: AddActionScheme
    AddProcessScheme:
      example:
        process_params:
          fpend: false
          data: data
          fport: 1
          nodel: false
          up_id: 6
          conf: false
          dev_eui: 0
          process_class: ""
          prio: ""
          imme: false
          mac: mac
        name: name_1
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        name:
          $ref: '#/components/schemas/name_1'
        process_params:
          $ref: '#/components/schemas/process_params'
      required:
      - process_params
      - status
      title: AddProcessScheme
    AddressNodeNormScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        month: 2
        consumption_group_id: 6
        group_id: 1
        year: 7
        created: 2000-01-23T04:56:07.000+00:00
        id: 0
        updated: 2000-01-23T04:56:07.000+00:00
        addr_id: 5
        updater: null
        norm: 5
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: unique address norm id
          title: id
          type: integer
        consumption_group_id:
          description: consumption group id
          title: consumption_group_id
          type: integer
        group_id:
          title: Group Id
          type: integer
        addr_id:
          title: Addr Id
          type: integer
        norm:
          description: address norm for month
          title: norm
          type: integer
        month:
          description: number of month
          title: month
          type: integer
        year:
          description: year
          title: year
          type: integer
      required:
      - addr_id
      - consumption_group_id
      - created
      - creator
      - group_id
      - id
      - month
      - norm
      - updated
      - updater
      - year
      title: AddressNodeNormScheme
    AddressNodeScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        prefix: prefix
        name: name
        id: 6
        postfix: prefix_1
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Address id
          title: id
          type: integer
        name:
          description: Address name
          title: name
          type: string
        prefix:
          $ref: '#/components/schemas/prefix'
        postfix:
          $ref: '#/components/schemas/prefix_1'
      required:
      - company_id
      - created
      - creator
      - id
      - name
      - postfix
      - prefix
      - status
      - updated
      - updater
      title: AddressNodeScheme
    AdvancedTimeBaseScheme:
      properties:
        minutes:
          $ref: '#/components/schemas/minutes'
        hours:
          $ref: '#/components/schemas/hours'
        day_of_month:
          $ref: '#/components/schemas/day_of_month'
        month:
          $ref: '#/components/schemas/month'
        day_of_week:
          $ref: '#/components/schemas/day_of_week'
        start_date:
          description: start date
          format: date-time
          title: start_date
          type: string
        end_date:
          $ref: '#/components/schemas/end_date'
      required:
      - day_of_month
      - day_of_week
      - end_date
      - hours
      - minutes
      - month
      - start_date
      title: AdvancedTimeBaseScheme
    AuthMethods:
      example:
        methods: ""
      properties:
        methods:
          $ref: '#/components/schemas/Methods'
      required:
      - methods
      title: AuthMethods
    CommonError:
      example:
        detail: detail
      properties:
        detail:
          $ref: '#/components/schemas/detail'
      required:
      - detail
      title: CommonError
    CompanyScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        comments: comments
        created: 2000-01-23T04:56:07.000+00:00
        updater: null
        site: site
        full_name: full_name
        phone: phone
        wl_enabled: false
        short_name: short_name
        id: 0
        post_address: post_address
        wl_domain: wl_domain
        updated: 2000-01-23T04:56:07.000+00:00
        slug: slug
        email: email
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: unique company id
          title: id
          type: integer
        short_name:
          description: company short name
          title: short_name
          type: string
        full_name:
          $ref: '#/components/schemas/full_name'
        slug:
          description: unique company slug
          title: slug
          type: string
        post_address:
          $ref: '#/components/schemas/post_address'
        phone:
          $ref: '#/components/schemas/phone'
        site:
          $ref: '#/components/schemas/site'
        email:
          $ref: '#/components/schemas/email'
        comments:
          $ref: '#/components/schemas/comments'
        wl_enabled:
          default: false
          description: white label enabled
          title: wl_enabled
          type: boolean
        wl_domain:
          $ref: '#/components/schemas/wl_domain'
      required:
      - comments
      - created
      - creator
      - email
      - full_name
      - id
      - phone
      - post_address
      - short_name
      - site
      - slug
      - status
      - updated
      - updater
      - wl_domain
      - wl_enabled
      title: CompanyScheme
    ConsumptionGroupBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        unit: unit
        color: color
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        icon: icon
        id: 0
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: utility resource id
          title: id
          type: integer
        name:
          description: utility resource name
          title: name
          type: string
        unit:
          $ref: '#/components/schemas/unit'
        icon:
          $ref: '#/components/schemas/icon'
        color:
          $ref: '#/components/schemas/color'
      required:
      - color
      - created
      - creator
      - icon
      - id
      - name
      - status
      - unit
      - updated
      - updater
      title: ConsumptionGroupBaseScheme
    ConvAttach:
      enum:
      - 1
      - 2
      title: ConvAttach
      type: integer
    ConvClass:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      title: ConvClass
      type: integer
    ConverterGroupBaseScheme-Input:
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/ConverterGroupBaseScheme_Input_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/ConverterGroupBaseScheme_Input_creator'
        id:
          description: unique data converter group id
          title: id
          type: integer
        name:
          description: data converter group name
          title: name
          type: string
        data_format_input:
          description: Input data format
          title: data_format_input
          type: string
        data_format_output:
          description: Output data format
          title: data_format_output
          type: string
      required:
      - data_format_input
      - data_format_output
      - id
      - name
      - status
      title: ConverterGroupBaseScheme
    ConverterGroupBaseScheme-Output:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        data_format_output: data_format_output
        name: name
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        data_format_input: data_format_input
        status: ""
        updater: null
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: unique data converter group id
          title: id
          type: integer
        name:
          description: data converter group name
          title: name
          type: string
        data_format_input:
          description: Input data format
          title: data_format_input
          type: string
        data_format_output:
          description: Output data format
          title: data_format_output
          type: string
      required:
      - company_id
      - created
      - creator
      - data_format_input
      - data_format_output
      - id
      - name
      - status
      - updated
      - updater
      title: ConverterGroupBaseScheme
    CreateAddressNode:
      example:
        company_id: 0
        prefix: prefix_2
        name: name
        postfix: prefix_3
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: Address name
          maxLength: 128
          title: name
          type: string
        prefix:
          $ref: '#/components/schemas/prefix_2'
        postfix:
          $ref: '#/components/schemas/prefix_3'
      required:
      - name
      - status
      title: CreateAddressNode
    CreateAddressNodeScheme:
      example:
        company_id: 0
        prefix: prefix_2
        parent_id: 6
        name: name
        postfix: prefix_3
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: Address name
          maxLength: 128
          title: name
          type: string
        prefix:
          $ref: '#/components/schemas/prefix_2'
        postfix:
          $ref: '#/components/schemas/prefix_3'
        parent_id:
          $ref: '#/components/schemas/parent_id'
      required:
      - name
      - status
      title: CreateAddressNodeScheme
    CreateAddressNormScheme:
      example:
        month: 7
        consumption_group_id: 0
        group_id: 6
        year: 2
        addr_id: 1
        norm: 5
      properties:
        consumption_group_id:
          description: consumption group id
          title: consumption_group_id
          type: integer
        group_id:
          title: Group Id
          type: integer
        addr_id:
          title: Addr Id
          type: integer
        norm:
          description: address norm for month
          title: norm
          type: integer
        month:
          description: number of month
          maximum: 12.0
          minimum: 1.0
          title: month
          type: integer
        year:
          description: year
          title: year
          type: integer
      required:
      - addr_id
      - consumption_group_id
      - group_id
      - month
      - norm
      - year
      title: CreateAddressNormScheme
    CreateAdvancedTimeScheme:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        hours: hours
        month: month
        minutes: minutes
        day_of_month: day_of_month
        day_of_week: day_of_week
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        minutes:
          $ref: '#/components/schemas/minutes'
        hours:
          $ref: '#/components/schemas/hours'
        day_of_month:
          $ref: '#/components/schemas/day_of_month'
        month:
          $ref: '#/components/schemas/month'
        day_of_week:
          $ref: '#/components/schemas/day_of_week'
        start_date:
          description: start date
          format: date-time
          title: start_date
          type: string
        end_date:
          $ref: '#/components/schemas/end_date'
      required:
      - start_date
      title: CreateAdvancedTimeScheme
    CreateAmqpDetailedUriScheme:
      example:
        proto: ""
        exchange: exchange
        queue: queue
        virtual_host: virtual_host
      properties:
        proto: {}
        virtual_host:
          description: Virtual host
          title: virtual_host
          type: string
        exchange:
          description: Exchange
          title: exchange
          type: string
        queue:
          description: Queue
          title: queue
          type: string
      required:
      - exchange
      - proto
      - queue
      - virtual_host
      title: CreateAmqpDetailedUriScheme
    CreateCompanyScheme:
      example:
        site: site_1
        full_name: full_name_1
        comments: comments_1
        phone: phone_1
        wl_enabled: false
        short_name: short_name
        post_address: post_address_1
        wl_domain: wl_domain_1
        slug: slug
        email: email
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        short_name:
          description: company short name
          maxLength: 128
          title: short_name
          type: string
        full_name:
          $ref: '#/components/schemas/full_name_1'
        slug:
          description: "unique company slug. The following characters are valid: A-Z,\
            \ a-z, 0-9, \"-\", \"_\", \".\""
          maxLength: 128
          pattern: "^[0-9a-zA-Z\\-_.]+$"
          title: slug
          type: string
        post_address:
          $ref: '#/components/schemas/post_address_1'
        phone:
          $ref: '#/components/schemas/phone_1'
        site:
          $ref: '#/components/schemas/site_1'
        email:
          $ref: '#/components/schemas/email'
        comments:
          $ref: '#/components/schemas/comments_1'
        wl_enabled:
          default: false
          description: Enable white label. Check this box if you want to enable white
            label functionality for this company
          title: wl_enabled
          type: boolean
        wl_domain:
          $ref: '#/components/schemas/wl_domain_1'
      required:
      - short_name
      - slug
      - status
      title: CreateCompanyScheme
    CreateConsumptionGroupScheme:
      example:
        unit: unit_1
        color: color
        name: name
        icon: icon_1
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        name:
          description: utility resource name
          maxLength: 128
          title: name
          type: string
        unit:
          $ref: '#/components/schemas/unit_1'
        icon:
          $ref: '#/components/schemas/icon_1'
        color:
          $ref: '#/components/schemas/color'
      required:
      - name
      - status
      title: CreateConsumptionGroupScheme
    CreateConverterGroupScheme:
      example:
        company_id: 0
        data_format_output: ""
        name: name
        data_format_input: ""
        status: ""
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        name:
          description: data converter group name
          maxLength: 256
          title: name
          type: string
        data_format_input:
          allOf:
          - $ref: '#/components/schemas/app__apiv2__constans__DataFormatInOut__2'
          default: hex
          description: Input data format
          title: data_format_input
        data_format_output:
          allOf:
          - $ref: '#/components/schemas/app__apiv2__constans__DataFormatInOut__2'
          default: str
          description: Output data format
          title: data_format_output
      required:
      - name
      - status
      title: CreateConverterGroupScheme
    CreateDataChannelScheme:
      example:
        uri_unblock: false
        company_id: 0
        uri_detailed_field:
          proto: ""
          exchange: exchange
          queue: queue
          virtual_host: virtual_host
        direct: ""
        net_id_type_id: 6
        proto: ""
        name: name
        class_converter: ""
        slug: slug
        save_to_db: true
        uri_full_manual: uri_full_manual
        account: 1
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id_1'
        direct:
          allOf:
          - $ref: '#/components/schemas/DataDirection'
          description: Direction
          title: direct
        proto:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          description: Protocol
          title: proto
        class_converter:
          allOf:
          - $ref: '#/components/schemas/ConvClass'
          description: Converter class
          title: converter_class
        net_id_type_id:
          description: Type of devices ID
          title: net_id_type_id
          type: integer
        name:
          description: Name
          maxLength: 512
          title: name
          type: string
        slug:
          description: "Slug. \"The following characters are valid: A-Z a-z 0-9 -\
            \ . _\""
          maxLength: 64
          pattern: "^[0-9a-zA-Z\\-_.]+$"
          title: slug
          type: string
        save_to_db:
          default: true
          description: Save to DB. Save incoming data and decoding result to database
          title: save_to_db
          type: boolean
        uri_full_manual:
          $ref: '#/components/schemas/uri_full_manual'
        uri_unblock:
          default: false
          description: Unblock URI field
          title: uri_unblock
          type: boolean
        account:
          $ref: '#/components/schemas/account'
        uri_detailed_field:
          $ref: '#/components/schemas/uri_detailed_field'
      required:
      - class_converter
      - direct
      - name
      - net_id_type_id
      - proto
      - slug
      - status
      title: CreateDataChannelScheme
    CreateDeviceNetIdTypeScheme:
      example:
        regexp: regexp
        comments: comments_2
        company_id: 0
        name: name
        slug: slug
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: Device net id type name
          maxLength: 256
          title: name
          type: string
        slug:
          description: Device net id type slug
          maxLength: 64
          title: slug
          type: string
        regexp:
          description: "Device net id type regular expression. The following characters\
            \ are valid: A-Z, a-z, 0-9, \"-\", \"_\", \".\""
          maxLength: 256
          title: regexp
          type: string
        comments:
          $ref: '#/components/schemas/comments_2'
      required:
      - name
      - regexp
      - slug
      title: CreateDeviceNetIdTypeScheme
    CreateDeviceScheme:
      example:
        altitude: 7
        conv_group_id: 5
        comments: comments_3
        company_id: 0
        net_id: net_id
        latitude: 2.3021358869347655
        groups: ""
        net_id_type_id: 6
        name: name
        templ_id: 1
        addr_id: 9
        status: ""
        longitude: 5.637376656633329
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: Device name
          maxLength: 256
          title: name
          type: string
        net_id_type_id:
          description: Device network type id
          title: net_id_type_id
          type: integer
        net_id:
          description: Device network id
          maxLength: 256
          title: net_id
          type: string
        templ_id:
          $ref: '#/components/schemas/templ_id'
        conv_group_id:
          $ref: '#/components/schemas/conv_group_id'
        groups:
          $ref: '#/components/schemas/groups'
        longitude:
          $ref: '#/components/schemas/longitude'
        latitude:
          $ref: '#/components/schemas/latitude'
        altitude:
          $ref: '#/components/schemas/altitude'
        addr_id:
          $ref: '#/components/schemas/addr_id'
        comments:
          $ref: '#/components/schemas/comments_3'
      required:
      - name
      - net_id
      - net_id_type_id
      - status
      title: CreateDeviceScheme
    CreateExternalAccountScheme:
      example:
        hostname: hostname
        password: password
        comments: comments_4
        company_id: 0
        port: 39500
        proto: ""
        name: name_2
        secure: true
        status: ""
        username: username
        tags: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          $ref: '#/components/schemas/name_2'
        proto:
          allOf:
          - $ref: '#/components/schemas/Proto'
          description: protocol
          title: proto
        secure:
          description: secure connection
          title: secure
          type: boolean
        hostname:
          description: hostname
          maxLength: 256
          title: hostname
          type: string
        port:
          $ref: '#/components/schemas/port'
        username:
          $ref: '#/components/schemas/username'
        password:
          $ref: '#/components/schemas/password'
        comments:
          $ref: '#/components/schemas/comments_4'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - hostname
      - proto
      - secure
      - status
      title: CreateExternalAccountScheme
    CreateExternalAccountTagScheme:
      properties:
        action_name:
          allOf:
          - $ref: '#/components/schemas/app__apiv2__constans__Actions__2'
          description: action name
          title: action_name
      required:
      - action_name
      title: CreateExternalAccountTagScheme
    CreateGroupScheme:
      example:
        is_virtual: false
        comments: comments_5
        company_id: 0
        color: color_1
        tagged_groups: ""
        name: name
        num_expr: num_expr
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: group name
          maxLength: 256
          title: name
          type: string
        comments:
          $ref: '#/components/schemas/comments_5'
        color:
          $ref: '#/components/schemas/color_1'
        is_virtual:
          default: false
          description: set true if you want to create virtual group
          title: virtual_group
          type: boolean
        num_expr:
          $ref: '#/components/schemas/num_expr'
        tagged_groups:
          $ref: '#/components/schemas/tagged_groups'
      required:
      - name
      - status
      title: CreateGroupScheme
    CreateGroupTag:
      properties:
        tag:
          description: "Field should contain only latin [a-zA-Z] chars"
          maxLength: 8
          title: tag
          type: string
        tagged_group_id:
          description: ""
          title: tagged_group_id
          type: integer
      required:
      - tag
      - tagged_group_id
      title: CreateGroupTag
    CreateKafkaDetailedUriScheme:
      properties:
        proto: {}
        topic:
          description: Topic
          title: topic
          type: string
        client_id:
          $ref: '#/components/schemas/client_id'
        partition:
          default: 0
          description: Partition number
          title: partition
          type: integer
      required:
      - proto
      - topic
      title: CreateKafkaDetailedUriScheme
    CreateLNSPayloadProcessScheme:
      example:
        fpend: false
        data: data
        fport: 1
        nodel: false
        up_id: 6
        conf: false
        dev_eui: 0
        process_class: ""
        prio: ""
        imme: false
        mac: mac
      properties:
        process_class: {}
        dev_eui:
          description: device id
          title: dev_eui
          type: integer
        up_id:
          $ref: '#/components/schemas/up_id'
        data:
          $ref: '#/components/schemas/data'
        mac:
          $ref: '#/components/schemas/mac'
        fport:
          $ref: '#/components/schemas/front'
        conf:
          default: false
          description: Send data as confirmed message
          title: conf
          type: boolean
        imme:
          default: false
          description: Immediate. Send data immediate (for Class C or for Class A
            if up_id specified)
          title: imme
          type: boolean
        nodel:
          default: false
          description: Not delete. Do not delete from queue after join/rejoin
          title: nodel
          type: boolean
        fpend:
          default: false
          description: FPending. Set FPending bit for immediate downlink
          title: fpend
          type: boolean
        prio:
          allOf:
          - $ref: '#/components/schemas/app__apiv2__constans__ActionPrio__2'
          default: 0
          description: "Prio. Set priority for send via queue (0-low, 1-middle, 2-hight)"
          title: prio
      required:
      - dev_eui
      - process_class
      title: CreateLNSPayloadProcessScheme
    CreateMetricScheme:
      example:
        purpose_class: null
        unit: unit_2
        graph_class: ""
        consumption_group_id: 6
        view_class: null
        name: name
        metric_type: ""
        main: false
        comment: comment
        num_expr: num_expr_1
        groups_ids: ""
        slug: slug
      properties:
        main:
          default: false
          description: metric main
          title: main
          type: boolean
        name:
          description: metric name
          maxLength: 256
          title: name
          type: string
        unit:
          $ref: '#/components/schemas/unit_2'
        slug:
          description: metric slug
          maxLength: 64
          title: slug
          type: string
        consumption_group_id:
          $ref: '#/components/schemas/consumption_group_id'
        groups_ids:
          $ref: '#/components/schemas/group_ids'
        purpose_class:
          $ref: '#/components/schemas/purpose_class'
        view_class:
          $ref: '#/components/schemas/view_class'
        graph_class:
          allOf:
          - $ref: '#/components/schemas/GraphClass'
          default: As is
          description: metric graph class
          title: graph_class
        comment:
          $ref: '#/components/schemas/comment'
        metric_type:
          allOf:
          - $ref: '#/components/schemas/MetricType'
          default: 2
          description: "metric type (1 - Constant, 2 - Device, 3 - Expression)"
          title: metric_type
        num_expr:
          $ref: '#/components/schemas/num_expr_1'
      required:
      - name
      - slug
      title: CreateMetricScheme
    CreateModbusRegisterScheme:
      example:
        address: 9606
        company_id: 0
        byte_order: ""
        count: 39072
        word_order: ""
        type: ""
        slave_id: 149
        dev_id: 5
        param_id: 2
        status: ""
      properties:
        company_id:
          $ref: '#/components/schemas/company_id_1'
        slave_id:
          description: Slave/Unit ID
          maximum: 247.0
          minimum: 1.0
          title: slave_id
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/RegisterTypes'
          description: Register type
          title: type
        address:
          description: Address
          maximum: 65535.0
          minimum: 0.0
          title: address
          type: integer
        count:
          description: Registers count
          maximum: 65535.0
          minimum: 0.0
          title: count
          type: integer
        byte_order:
          allOf:
          - $ref: '#/components/schemas/Endian'
          description: Byte order
          title: byte_order
        word_order:
          allOf:
          - $ref: '#/components/schemas/Endian'
          description: Word order
          title: word_order
        dev_id:
          description: Device
          title: dev
          type: integer
        param_id:
          description: Parameter
          title: param_id
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/DefaultStatus'
          description: Status
          title: status
      required:
      - address
      - byte_order
      - count
      - dev_id
      - param_id
      - slave_id
      - status
      - type
      - word_order
      title: CreateModbusRegisterScheme
    CreateMqttDetailedUri:
      properties:
        proto: {}
        client_id:
          $ref: '#/components/schemas/client_id'
        topic:
          $ref: '#/components/schemas/topic'
        qos:
          $ref: '#/components/schemas/qos'
        retain:
          default: false
          description: Retain
          title: retain
          type: boolean
      required:
      - proto
      title: CreateMqttDetailedUri
    CreateNormProcessScheme:
      properties:
        process_class: {}
        addr:
          $ref: '#/components/schemas/addr'
        group:
          $ref: '#/components/schemas/group'
        consumption_group:
          description: consumption group id
          title: consumption_group
          type: integer
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          default: 0
          description: Period
          title: period
        tz:
          default: Europe/Moscow
          description: time zone
          maxLength: 64
          title: tz
          type: string
        last_period:
          default: false
          description: Process run for previous period
          title: last_period
          type: boolean
        only_suc:
          default: true
          description: Overflow only
          title: only_suc
          type: boolean
      required:
      - consumption_group
      - process_class
      title: CreateNormProcessScheme
    CreateObjectScheme:
      example:
        object_types: ""
        company_id: 0
        name: name
        groups: ""
        comment: comment_1
        addr_id: 6
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: object name
          maxLength: 256
          title: name
          type: string
        addr_id:
          $ref: '#/components/schemas/addr_id_1'
        groups:
          $ref: '#/components/schemas/groups_1'
        object_types:
          $ref: '#/components/schemas/object_types'
        comment:
          $ref: '#/components/schemas/comment_1'
      required:
      - name
      - status
      title: CreateObjectScheme
    CreateObjectTypeScheme:
      example:
        company_id: 0
        name: name
        metrics:
        - purpose_class: null
          unit: unit_2
          graph_class: ""
          consumption_group_id: 6
          view_class: null
          name: name
          metric_type: ""
          main: false
          comment: comment
          num_expr: num_expr_1
          groups_ids: ""
          slug: slug
        - purpose_class: null
          unit: unit_2
          graph_class: ""
          consumption_group_id: 6
          view_class: null
          name: name
          metric_type: ""
          main: false
          comment: comment
          num_expr: num_expr_1
          groups_ids: ""
          slug: slug
        slug: slug
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: object type name
          title: name
          type: string
        slug:
          description: object type slug
          title: slug
          type: string
        metrics:
          description: list of metrics
          items:
            $ref: '#/components/schemas/CreateMetricScheme'
          type: array
      required:
      - metrics
      - name
      - slug
      - status
      title: CreateObjectTypeScheme
    CreateObjectWidgetPlotSettingsScheme:
      example:
        obj_id: 6
        color: '#2770bf'
        obj_param_id: 1
        plot_type_id: 5
        param_name: param_name
      properties:
        obj_id:
          description: object id
          title: obj_id
          type: integer
        obj_param_id:
          description: object id
          title: obj_param_id
          type: integer
        param_name:
          $ref: '#/components/schemas/param_name'
        plot_type_id:
          description: plot type
          title: plot_type_id
          type: integer
        color:
          default: '#2770bf'
          description: plot color
          pattern: "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          title: color
          type: string
      required:
      - obj_id
      - obj_param_id
      - plot_type_id
      title: CreateObjectWidgetPlotSettingsScheme
    CreateObjectWidgetScheme:
      example:
        display_type: ""
        company_id: 0
        name: name
        plots:
        - obj_id: 6
          color: '#2770bf'
          obj_param_id: 1
          plot_type_id: 5
          param_name: param_name
        - obj_id: 6
          color: '#2770bf'
          obj_param_id: 1
          plot_type_id: 5
          param_name: param_name
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: object widget name
          maxLength: 128
          title: name
          type: string
        display_type:
          allOf:
          - $ref: '#/components/schemas/WidgetDisplayType'
          description: object widget display type
          title: display_type
        plots:
          description: list of widget plot settings
          items:
            $ref: '#/components/schemas/CreateObjectWidgetPlotSettingsScheme'
          type: array
      required:
      - display_type
      - name
      - plots
      title: CreateObjectWidgetScheme
    CreateRawDataProcessScheme:
      properties:
        process_class: {}
        json_msg:
          description: JSON message
          title: json_msg
          type: object
      required:
      - json_msg
      - process_class
      title: CreateRawDataProcessScheme
    CreateSendToAMQPBrokerScheme:
      example:
        action_class: ""
        exchange: exchange
        account: 0
        queue: queue
        virtual_host: virtual_host
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        virtual_host:
          description: Virtual host
          title: virtual_host
          type: string
        exchange:
          description: Exchange
          title: exchange
          type: string
        queue:
          description: Queue
          title: queue
          type: string
      required:
      - account
      - action_class
      - exchange
      - queue
      - virtual_host
      title: CreateSendToAMQPBrokerScheme
    CreateSendToApiLNSScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        dev_eui:
          description: device id
          title: dev_eui
          type: integer
        up_id:
          $ref: '#/components/schemas/up_id'
        data_hex:
          $ref: '#/components/schemas/data_hex'
        mac:
          $ref: '#/components/schemas/mac'
        fport:
          $ref: '#/components/schemas/fport'
        conf:
          default: false
          description: Send data as confirmed message
          title: conf
          type: boolean
        imme:
          default: false
          description: Send data immediate (for Class C or for Class A if up_id specified)
          title: imme
          type: boolean
        nodel:
          default: false
          description: do not delete from queue after join/rejoin
          title: nodel
          type: boolean
        fpend:
          default: false
          description: Set FPending bit for immediate downlink
          title: fpend
          type: boolean
        prio:
          allOf:
          - $ref: '#/components/schemas/app__apiv2__constans__ActionPrio__1'
          default: 0
          description: "Set priority for send via queue (0-low, 1-middle, 2-hight)"
          title: prio
      required:
      - account
      - action_class
      - dev_eui
      title: CreateSendToApiLNSScheme
    CreateSendToEmailScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        from_email:
          $ref: '#/components/schemas/from_email'
        recipient:
          description: Recipient email
          title: recipient
          type: string
        subject:
          description: Email subject
          title: Subject
          type: string
        message:
          description: Message
          title: message
          type: string
      required:
      - account
      - action_class
      - message
      - recipient
      - subject
      title: CreateSendToEmailScheme
    CreateSendToHTTPScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        path:
          default: /
          description: Path
          title: path
          type: string
        as_json:
          default: false
          description: "If true, then the data is sent as application/json otherwise\
            \ application/x-www-form-urlencoded"
          title: as_json
          type: boolean
      required:
      - account
      - action_class
      title: CreateSendToHTTPScheme
    CreateSendToMQTTScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        client_id:
          $ref: '#/components/schemas/client_id'
        topic:
          $ref: '#/components/schemas/topic'
        qos:
          $ref: '#/components/schemas/qos'
        retain:
          default: false
          description: Retain
          title: retain
          type: boolean
      required:
      - account
      - action_class
      title: CreateSendToMQTTScheme
    CreateSendToSMSScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        source:
          description: Sender phone or string ID
          title: source
          type: string
        recipient:
          description: Phone number
          title: recipient
          type: string
        title:
          $ref: '#/components/schemas/title'
        message:
          description: Message
          title: message
          type: string
      required:
      - account
      - action_class
      - message
      - recipient
      - source
      title: CreateSendToSMSScheme
    CreateSendToTelegramScheme:
      properties:
        account:
          description: external account id
          title: account
          type: integer
        action_class: {}
        recipient:
          description: Message recipient ID (Telegram chat ID)
          title: recipient
          type: string
        title:
          $ref: '#/components/schemas/title_1'
        message:
          description: Message
          title: message
          type: string
      required:
      - account
      - action_class
      - message
      - recipient
      title: CreateSendToTelegramScheme
    CreateSimpleTimeScheme:
      properties:
        start_date:
          description: start date (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: start_date
          type: string
        interval_type:
          allOf:
          - $ref: '#/components/schemas/IntervalTypes'
          description: Interval
          title: interval_type
        week_choices:
          $ref: '#/components/schemas/week_choices'
        end_date:
          $ref: '#/components/schemas/end_date_1'
        repetitions_count:
          $ref: '#/components/schemas/repetitions_count'
        ending_type:
          $ref: '#/components/schemas/ending_type'
      required:
      - interval_type
      - start_date
      title: CreateSimpleTimeScheme
    CreateTaskTimeScheme:
      example:
        time_field:
          end_date: 2000-01-23T04:56:07.000+00:00
          hours: hours
          month: month
          minutes: minutes
          day_of_month: day_of_month
          day_of_week: day_of_week
          start_date: 2000-01-23T04:56:07.000+00:00
        company_id: 0
        tz: Europe/Moscow
        name: name
        regular: true
        status: ""
        crontab_advanced: true
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: task time name
          title: name
          type: string
        crontab_advanced:
          default: true
          description: Enable Advanced Crontab
          title: crontab_advanced
          type: boolean
        time_field:
          $ref: '#/components/schemas/time_field'
        tz:
          default: Europe/Moscow
          description: time zone
          title: tz
          type: string
        regular:
          default: true
          description: regular dispatch
          title: regular
          type: boolean
      required:
      - name
      - status
      - time_field
      title: CreateTaskTimeScheme
    CreateTemplateScheme:
      example:
        conv_group_id: 6
        comments: comments_6
        company_id: 0
        name: name
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: Template name
          maxLength: 256
          title: name
          type: string
        conv_group_id:
          description: Converter group id
          title: conv_group_id
          type: integer
        comments:
          $ref: '#/components/schemas/comments_6'
      required:
      - conv_group_id
      - name
      - status
      title: CreateTemplateScheme
    CreateUserScheme:
      example:
        password: password
        role: ""
        company_id: 0
        phone: phone
        tz: Europe/Moscow
        name: name
        locale: en
        email: email
        status: ""
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: user name
          maxLength: 128
          title: name
          type: string
        email:
          description: user email
          maxLength: 128
          title: email
          type: string
        phone:
          description: user phone
          maxLength: 64
          title: phone
          type: string
        password:
          description: user password
          format: password
          maxLength: 32
          minLength: 5
          title: password
          type: string
          writeOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/UserRole'
          description: "user role \n * 0 - Superadmin \n \n * 1 - Administrator \n\
            \ \n * 2 - Operator \n \n * 3 - User \n \n * 4 - Partner \n "
          title: role
          exampless:
          - 1
        locale:
          default: en
          description: user language in the system
          maxLength: 8
          minLength: 2
          title: locale
          type: string
        tz:
          default: Europe/Moscow
          description: time zone of the user in the system
          maxLength: 64
          title: tz
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusUser'
          description: "user status (1 - Inactive, 2 - New, 3 - Active)"
          title: status
      required:
      - email
      - name
      - password
      - phone
      - role
      - status
      title: CreateUserScheme
    DashboardCardScheme:
      properties:
        obj:
          $ref: '#/components/schemas/DashboardCardScheme_obj'
      required:
      - obj
      title: DashboardCardScheme
    DashboardFullStructScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        default: true
        cards: ""
        company_id: 1
        user_id: 5
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 6
        widgets: ""
        updated: 2000-01-23T04:56:07.000+00:00
        updater: null
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: dashboard id
          title: id
          type: integer
        name:
          description: dashboard name
          title: name
          type: string
        default:
          description: dashboard is default or not
          title: default
          type: boolean
        company_id:
          $ref: '#/components/schemas/company_id_2'
        user_id:
          $ref: '#/components/schemas/user_id'
        cards:
          $ref: '#/components/schemas/Cards'
        widgets:
          $ref: '#/components/schemas/Widgets'
      required:
      - cards
      - company_id
      - created
      - creator
      - default
      - id
      - name
      - updated
      - updater
      - user_id
      - widgets
      title: DashboardFullStructScheme
    DashboardScheme:
      example:
        name: name
      properties:
        name:
          description: dashboard name
          maxLength: 256
          title: name
          type: string
      required:
      - name
      title: DashboardScheme
    DashboardType:
      enum:
      - user
      - company
      title: DashboardType
      type: string
    DashboardWidgetScheme:
      properties:
        widget:
          $ref: '#/components/schemas/DashboardWidgetScheme_widget'
      required:
      - widget
      title: DashboardWidgetScheme
    DataChannelBaseScheme:
      example:
        uri_unblock: true
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        uri_detailed_field: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        direct: ""
        updater: null
        net_id_type_id: 1
        proto: proto
        name: name
        id: 6
        class_converter: class_converter
        updated: 2000-01-23T04:56:07.000+00:00
        slug: slug
        save_to_db: true
        uri_full_manual: uri_full_manual
        account: 5
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: data channel id
          title: id
          type: integer
        direct:
          allOf:
          - $ref: '#/components/schemas/DataDirection'
          description: Direction
          title: direct
        proto:
          description: Protocol
          title: proto
          type: string
        class_converter:
          description: Converter class
          title: converter_class
          type: string
        net_id_type_id:
          description: Type of devices ID
          title: net_id_type_id
          type: integer
        name:
          description: Name
          title: name
          type: string
        slug:
          description: "Slug. \"The following characters are valid: A-Z a-z 0-9 -\
            \ . _\""
          title: slug
          type: string
        save_to_db:
          description: Save to DB. Save incoming data and decoding result to database
          title: save_to_db
          type: boolean
        uri_full_manual:
          description: URI
          title: uri_full_manual
          type: string
        uri_unblock:
          description: Unblock URI field
          title: uri_unblock
          type: boolean
        account:
          $ref: '#/components/schemas/account'
        uri_detailed_field:
          title: Uri Detailed Field
          type: object
      required:
      - account
      - class_converter
      - company_id
      - created
      - creator
      - direct
      - id
      - name
      - net_id_type_id
      - proto
      - save_to_db
      - slug
      - status
      - updated
      - updater
      - uri_detailed_field
      - uri_full_manual
      - uri_unblock
      title: DataChannelBaseScheme
    DataDirection:
      enum:
      - 1
      - 2
      title: DataDirection
      type: integer
    DefaultStatus:
      enum:
      - 1
      - 2
      title: DefaultStatus
      type: integer
    DeviceDataScheme:
      example:
        data_converter_id: 6
        specific_data: "{}"
        ext_id: 0
        net_protocol_data: "{}"
        device_date: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        parsed_data: "{}"
      properties:
        ext_id:
          description: unique packet id
          title: ext_id
          type: integer
        data_converter_id:
          description: unique data converter id
          title: data_converter_id
          type: integer
        created:
          description: state creation time
          format: date-time
          title: created
          type: string
        device_date:
          description: state device date time
          format: date-time
          title: device_date
          type: string
        parsed_data:
          title: Parsed Data
          type: object
        net_protocol_data:
          title: Net Protocol Data
          type: object
        specific_data:
          title: Specific Data
          type: object
      required:
      - created
      - data_converter_id
      - device_date
      - ext_id
      - net_protocol_data
      - parsed_data
      - specific_data
      title: DeviceDataScheme
    DeviceNetIdTypeScheme:
      example:
        regexp: regexp
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        comments: comments_7
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        slug: slug
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Device net id type id
          title: id
          type: integer
        name:
          description: Device net id type name
          title: name
          type: string
        slug:
          description: Device net id type slug
          title: slug
          type: string
        regexp:
          description: Device net id type regexp
          title: regexp
          type: string
        comments:
          $ref: '#/components/schemas/comments_7'
      required:
      - comments
      - company_id
      - created
      - creator
      - id
      - name
      - regexp
      - slug
      - status
      - updated
      - updater
      title: DeviceNetIdTypeScheme
    DeviceScheme:
      example:
        altitude: 9
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        conv_group_id: 5
        comments: comments_8
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        net_id: net_id
        latitude: 7.061401241503109
        groups: ""
        updater: null
        net_id_type_id: 1
        name: name
        templ_id: 5
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        addr_id: 3
        status: ""
        longitude: 2.3021358869347655
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Device id
          title: id
          type: integer
        name:
          description: Device name
          title: name
          type: string
        net_id_type_id:
          description: Device network type id
          title: net_id_type_id
          type: integer
        net_id:
          description: Device network id
          title: net_id
          type: string
        templ_id:
          $ref: '#/components/schemas/templ_id'
        conv_group_id:
          $ref: '#/components/schemas/conv_group_id'
        groups:
          $ref: '#/components/schemas/groups_2'
        longitude:
          $ref: '#/components/schemas/longitude'
        latitude:
          $ref: '#/components/schemas/latitude'
        altitude:
          $ref: '#/components/schemas/altitude'
        addr_id:
          $ref: '#/components/schemas/addr_id'
        comments:
          $ref: '#/components/schemas/comments_8'
      required:
      - addr_id
      - altitude
      - comments
      - company_id
      - conv_group_id
      - created
      - creator
      - groups
      - id
      - latitude
      - longitude
      - name
      - net_id
      - net_id_type_id
      - status
      - templ_id
      - updated
      - updater
      title: DeviceScheme
    DictItemBaseScheme:
      example:
        name: name
        id: 0
      properties:
        id:
          description: pass
          title: id
          type: integer
        name:
          description: pass
          title: name
          type: string
      required:
      - id
      - name
      title: DictItemBaseScheme
    DictItemScheme:
      example:
        name: name
        id: 0
      properties:
        id:
          description: pass
          title: id
          type: integer
        name:
          description: pass
          title: name
          type: string
      required:
      - id
      - name
      title: DictItemScheme
    Endian:
      enum:
      - 1
      - 2
      title: Endian
      type: integer
    ExternalAccountBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        comments: comments_9
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        secure: true
        updater: null
        tags: ""
        hostname: hostname
        port: 1
        proto: proto
        name: name_3
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        username: username_1
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: external account id
          title: id
          type: integer
        name:
          $ref: '#/components/schemas/name_3'
        proto:
          description: protocol
          title: proto
          type: string
        secure:
          description: secure connection
          title: secure
          type: boolean
        hostname:
          description: hostname
          title: hostname
          type: string
        port:
          $ref: '#/components/schemas/port_1'
        username:
          $ref: '#/components/schemas/username_1'
        comments:
          $ref: '#/components/schemas/comments_9'
        tags:
          $ref: '#/components/schemas/tags_1'
      required:
      - comments
      - company_id
      - created
      - creator
      - hostname
      - id
      - name
      - port
      - proto
      - secure
      - status
      - tags
      - updated
      - updater
      - username
      title: ExternalAccountBaseScheme
    ExternalAccountTagsBaseScheme:
      properties:
        id:
          description: external account tag id
          title: id
          type: integer
        action_name:
          description: action name
          title: action_name
          type: string
      required:
      - action_name
      - id
      title: ExternalAccountTagsBaseScheme
    GraphClass:
      enum:
      - As is
      - Delta
      - Delta/s
      title: GraphClass
      type: string
    GroupFullStructScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        comments: comments_10
        company_id: 0
        color: color_1
        tagged_groups: ""
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 6
        num_expr: num_expr_2
        updated: 2000-01-23T04:56:07.000+00:00
        updater: null
        status: ""
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Group id
          title: id
          type: integer
        name:
          description: Group name
          title: name
          type: string
        comments:
          $ref: '#/components/schemas/comments_10'
        color:
          $ref: '#/components/schemas/color_1'
        num_expr:
          $ref: '#/components/schemas/num_expr_2'
        tagged_groups:
          $ref: '#/components/schemas/Tagged_Groups'
      required:
      - color
      - comments
      - company_id
      - created
      - creator
      - id
      - name
      - num_expr
      - status
      - tagged_groups
      - updated
      - updater
      title: GroupFullStructScheme
    GroupScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        comments: comments_10
        company_id: 0
        color: color_1
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 6
        num_expr: num_expr_2
        updated: 2000-01-23T04:56:07.000+00:00
        updater: null
        status: ""
      properties:
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Group id
          title: id
          type: integer
        name:
          description: Group name
          title: name
          type: string
        comments:
          $ref: '#/components/schemas/comments_10'
        color:
          $ref: '#/components/schemas/color_1'
        num_expr:
          $ref: '#/components/schemas/num_expr_2'
      required:
      - color
      - comments
      - company_id
      - created
      - creator
      - id
      - name
      - num_expr
      - status
      - updated
      - updater
      title: GroupScheme
    GroupTagScheme:
      properties:
        tag:
          description: "Field should contain only latin [a-zA-Z] chars"
          title: tag
          type: string
        tagged_group_id:
          description: ""
          title: tagged_group_id
          type: integer
      required:
      - tag
      - tagged_group_id
      title: GroupTagScheme
    GroupType:
      enum:
      - 1
      - 2
      - 3
      title: GroupType
      type: integer
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    IntervalTypes:
      enum:
      - Day
      - Week
      - Month
      - Year
      title: IntervalTypes
      type: string
    ListDictItemScheme:
      example:
        items: ""
      properties:
        items:
          $ref: '#/components/schemas/Items'
      required:
      - items
      title: ListDictItemScheme
    MetricType:
      enum:
      - 1
      - 2
      - 3
      title: MetricType
      type: integer
    ModbusRegisterBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        address: 2
        company_id: 6
        created: 2000-01-23T04:56:07.000+00:00
        count: 7
        word_order: 3
        type: 5
        updater: null
        dev_id: 2
        byte_order: 9
        id: 1
        updated: 2000-01-23T04:56:07.000+00:00
        status: 0
        slave_id: 5
        param_id: 4
      properties:
        status:
          description: Status
          title: status
          type: integer
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: modbus register id
          title: id
          type: integer
        slave_id:
          description: Slave/Unit ID
          title: slave_id
          type: integer
        type:
          description: Register type
          title: type
          type: integer
        address:
          description: Address
          title: address
          type: integer
        count:
          description: Registers count
          title: count
          type: integer
        byte_order:
          description: Byte order
          title: byte_order
          type: integer
        word_order:
          description: Word order
          title: word_order
          type: integer
        dev_id:
          description: Device
          title: dev
          type: integer
        param_id:
          description: Parameter
          title: param_id
          type: integer
      required:
      - address
      - byte_order
      - company_id
      - count
      - created
      - creator
      - dev_id
      - id
      - param_id
      - slave_id
      - status
      - type
      - updated
      - updater
      - word_order
      title: ModbusRegisterBaseScheme
    ObjScheme:
      properties:
        id:
          description: object id
          title: id
          type: integer
        name:
          description: object name
          title: name
          type: string
      required:
      - id
      - name
      title: ObjScheme
    ObjectBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        object_types:
        - name: name
          id: 0
        - name: name
          id: 0
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        groups:
        - name: name
          id: 0
        - name: name
          id: 0
        comment: comment_2
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        addr_id: 1
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: unique object id
          title: id
          type: integer
        name:
          description: object name
          title: name
          type: string
        addr_id:
          $ref: '#/components/schemas/addr_id_1'
        groups:
          description: list of object groups
          items:
            $ref: '#/components/schemas/DictItemScheme'
          type: array
        object_types:
          description: list of object types
          items:
            $ref: '#/components/schemas/DictItemScheme'
          type: array
        comment:
          $ref: '#/components/schemas/comment_2'
      required:
      - addr_id
      - comment
      - company_id
      - created
      - creator
      - groups
      - id
      - name
      - object_types
      - status
      - updated
      - updater
      title: ObjectBaseScheme
    ObjectDataScheme:
      example:
        dipd_id: 0
        device_date: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        purpose_data: "{}"
        types_data:
          key:
            obj_id: 6
            data: "{}"
            device_date: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: state creation time
          format: date-time
          title: created
          type: string
        device_date:
          description: state device date time
          format: date-time
          title: device_date
          type: string
        dipd_id:
          description: unique packet id
          title: dipd_id
          type: integer
        types_data:
          additionalProperties:
            $ref: '#/components/schemas/ObjectTypesDataScheme'
          title: Types Data
        purpose_data:
          title: Purpose Data
          type: object
      required:
      - created
      - device_date
      - dipd_id
      - purpose_data
      - types_data
      title: ObjectDataScheme
    ObjectFullStructScheme:
      example:
        self_metrics: ""
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        object_types: ""
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        groups:
        - name: name
          id: 0
        - name: name
          id: 0
        updater: null
        name: name
        comment: comment_2
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        addr_id: 1
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: unique object id
          title: id
          type: integer
        name:
          description: object name
          title: name
          type: string
        addr_id:
          $ref: '#/components/schemas/addr_id_1'
        groups:
          description: list of object groups
          items:
            $ref: '#/components/schemas/DictItemScheme'
          type: array
        object_types:
          $ref: '#/components/schemas/object_types_1'
        comment:
          $ref: '#/components/schemas/comment_2'
        self_metrics:
          $ref: '#/components/schemas/self_metrics'
      required:
      - addr_id
      - comment
      - company_id
      - created
      - creator
      - groups
      - id
      - name
      - object_types
      - self_metrics
      - status
      - updated
      - updater
      title: ObjectFullStructScheme
    ObjectLastDataScheme:
      example:
        obj_id: 6
        dipd_id: 0
        device_date: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        purpose_data: "{}"
        types_data: "{}"
      properties:
        created:
          description: state creation time
          format: date-time
          title: created
          type: string
        device_date:
          description: state device date time
          format: date-time
          title: device_date
          type: string
        dipd_id:
          description: unique packet id
          title: dipd_id
          type: integer
        obj_id:
          description: object id
          title: obj_id
          type: integer
        types_data:
          title: Types Data
          type: object
        purpose_data:
          title: Purpose Data
          type: object
      required:
      - created
      - device_date
      - dipd_id
      - obj_id
      - purpose_data
      - types_data
      title: ObjectLastDataScheme
    ObjectMetricScheme:
      example:
        unit: unit_3
        name: name
        metric_type: ""
        omv: ""
        main: false
        comment: comment_3
        id: 5
        num_expr: expression
        slug: slug
      properties:
        id:
          description: unique metric id
          title: id
          type: integer
        main:
          default: false
          description: main
          title: main
          type: boolean
        name:
          description: metric name
          title: metric
          type: string
        comment:
          $ref: '#/components/schemas/comment_3'
        slug:
          description: metric slug
          title: slug
          type: string
        unit:
          $ref: '#/components/schemas/unit_3'
        metric_type:
          allOf:
          - $ref: '#/components/schemas/MetricType'
          description: "metric type (1 - Constant, 2 - Device, 3 - Expression)"
          title: metric type
        num_expr:
          $ref: '#/components/schemas/expression'
        omv:
          $ref: '#/components/schemas/metric_values'
      required:
      - comment
      - id
      - main
      - metric_type
      - name
      - num_expr
      - omv
      - slug
      - unit
      title: ObjectMetricScheme
    ObjectMetricValueScheme:
      properties:
        id:
          description: unique object metric value id
          title: id
          type: integer
        dev_id:
          $ref: '#/components/schemas/id'
        param_id:
          $ref: '#/components/schemas/id_1'
        const_value:
          $ref: '#/components/schemas/constant_value'
        date_from:
          $ref: '#/components/schemas/date_from'
        date_to:
          $ref: '#/components/schemas/date_to'
      required:
      - const_value
      - date_from
      - date_to
      - dev_id
      - id
      - param_id
      title: ObjectMetricValueScheme
    ObjectTypeBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        conv_attach: true
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        slug: slug
        conv_id: 1
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: unique object id
          title: id
          type: integer
        name:
          description: object type name
          title: name
          type: string
        slug:
          description: object type slug
          title: slug
          type: string
        conv_id:
          $ref: '#/components/schemas/conv_id'
        conv_attach:
          description: converter attach
          title: conv_attach
          type: boolean
      required:
      - company_id
      - conv_attach
      - conv_id
      - created
      - creator
      - id
      - name
      - slug
      - status
      - updated
      - updater
      title: ObjectTypeBaseScheme
    ObjectTypeFullStructScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        conv_attach: true
        id: 6
        metrics:
        - unit: unit_3
          name: name
          metric_type: ""
          omv: ""
          main: false
          comment: comment_3
          id: 5
          num_expr: expression
          slug: slug
        - unit: unit_3
          name: name
          metric_type: ""
          omv: ""
          main: false
          comment: comment_3
          id: 5
          num_expr: expression
          slug: slug
        updated: 2000-01-23T04:56:07.000+00:00
        slug: slug
        conv_id: 1
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: unique object id
          title: id
          type: integer
        name:
          description: object type name
          title: name
          type: string
        slug:
          description: object type slug
          title: slug
          type: string
        conv_id:
          $ref: '#/components/schemas/conv_id'
        conv_attach:
          description: converter attach
          title: conv_attach
          type: boolean
        metrics:
          description: list object type metrics
          items:
            $ref: '#/components/schemas/ObjectMetricScheme'
          type: array
      required:
      - company_id
      - conv_attach
      - conv_id
      - created
      - creator
      - id
      - metrics
      - name
      - slug
      - status
      - updated
      - updater
      title: ObjectTypeFullStructScheme
    ObjectTypeScheme:
      properties:
        id:
          description: unique object type id
          title: id
          type: integer
        name:
          description: object type name
          title: name
          type: string
        slug:
          description: object type slug
          title: slug
          type: string
        metrics:
          $ref: '#/components/schemas/metrics'
      required:
      - id
      - metrics
      - name
      - slug
      title: ObjectTypeScheme
    ObjectTypesDataScheme:
      example:
        obj_id: 6
        data: "{}"
        device_date: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: state creation time
          format: date-time
          title: created
          type: string
        device_date:
          description: state device date time
          format: date-time
          title: device_date
          type: string
        obj_id:
          description: object id
          title: obj_id
          type: integer
        data:
          title: Data
          type: object
      required:
      - created
      - data
      - device_date
      - obj_id
      title: ObjectTypesDataScheme
    ObjectWidgetPlotSettingsBaseScheme:
      example:
        obj_id: 5
        color: color
        obj_param_id: 5
        plot_type_id: 2
        id: 1
        param_name: param_name_1
      properties:
        id:
          description: object widget plot settings id
          title: id
          type: integer
        obj_id:
          description: object id
          title: obj_id
          type: integer
        obj_param_id:
          description: object id
          title: obj_param_id
          type: integer
        param_name:
          $ref: '#/components/schemas/param_name_1'
        plot_type_id:
          description: plot type
          title: plot_type_id
          type: integer
        color:
          description: plot color
          title: color
          type: string
      required:
      - color
      - id
      - obj_id
      - obj_param_id
      - param_name
      - plot_type_id
      title: ObjectWidgetPlotSettingsBaseScheme
    ObjectWidgetScheme:
      example:
        display_type: ""
        company_id: 0
        name: name
        id: 6
        plots:
        - obj_id: 5
          color: color
          obj_param_id: 5
          plot_type_id: 2
          id: 1
          param_name: param_name_1
        - obj_id: 5
          color: color
          obj_param_id: 5
          plot_type_id: 2
          id: 1
          param_name: param_name_1
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: object widget id
          title: id
          type: integer
        name:
          description: object widget name
          title: name
          type: string
        display_type:
          allOf:
          - $ref: '#/components/schemas/WidgetDisplayType'
          description: object widget display type
          title: display_type
        plots:
          items:
            $ref: '#/components/schemas/ObjectWidgetPlotSettingsBaseScheme'
          type: array
      required:
      - company_id
      - display_type
      - id
      - name
      - plots
      title: ObjectWidgetScheme
    Page_AddressNodeNormScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          month: 2
          consumption_group_id: 6
          group_id: 1
          year: 7
          created: 2000-01-23T04:56:07.000+00:00
          id: 0
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 5
          updater: null
          norm: 5
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          month: 2
          consumption_group_id: 6
          group_id: 1
          year: 7
          created: 2000-01-23T04:56:07.000+00:00
          id: 0
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 5
          updater: null
          norm: 5
      properties:
        items:
          items:
            $ref: '#/components/schemas/AddressNodeNormScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[AddressNodeNormScheme]"
    Page_AddressNodeScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          prefix: prefix
          name: name
          id: 6
          postfix: prefix_1
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          prefix: prefix
          name: name
          id: 6
          postfix: prefix_1
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/AddressNodeScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[AddressNodeScheme]"
    Page_CompanyScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments
          created: 2000-01-23T04:56:07.000+00:00
          updater: null
          site: site
          full_name: full_name
          phone: phone
          wl_enabled: false
          short_name: short_name
          id: 0
          post_address: post_address
          wl_domain: wl_domain
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          email: email
          status: ""
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments
          created: 2000-01-23T04:56:07.000+00:00
          updater: null
          site: site
          full_name: full_name
          phone: phone
          wl_enabled: false
          short_name: short_name
          id: 0
          post_address: post_address
          wl_domain: wl_domain
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          email: email
          status: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/CompanyScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[CompanyScheme]"
    Page_ConsumptionGroupBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          unit: unit
          color: color
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          icon: icon
          id: 0
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          unit: unit
          color: color
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          icon: icon
          id: 0
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConsumptionGroupBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ConsumptionGroupBaseScheme]"
    Page_ConverterGroupBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          data_format_output: data_format_output
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          data_format_input: data_format_input
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          data_format_output: data_format_output
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          data_format_input: data_format_input
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConverterGroupBaseScheme-Output'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ConverterGroupBaseScheme]"
    Page_DataChannelBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - uri_unblock: true
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          uri_detailed_field: "{}"
          created: 2000-01-23T04:56:07.000+00:00
          direct: ""
          updater: null
          net_id_type_id: 1
          proto: proto
          name: name
          id: 6
          class_converter: class_converter
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          save_to_db: true
          uri_full_manual: uri_full_manual
          account: 5
          status: ""
        - uri_unblock: true
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          uri_detailed_field: "{}"
          created: 2000-01-23T04:56:07.000+00:00
          direct: ""
          updater: null
          net_id_type_id: 1
          proto: proto
          name: name
          id: 6
          class_converter: class_converter
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          save_to_db: true
          uri_full_manual: uri_full_manual
          account: 5
          status: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/DataChannelBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[DataChannelBaseScheme]"
    Page_DeviceDataScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - data_converter_id: 6
          specific_data: "{}"
          ext_id: 0
          net_protocol_data: "{}"
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          parsed_data: "{}"
        - data_converter_id: 6
          specific_data: "{}"
          ext_id: 0
          net_protocol_data: "{}"
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          parsed_data: "{}"
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceDataScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[DeviceDataScheme]"
    Page_DeviceNetIdTypeScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - regexp: regexp
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_7
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          status: ""
          updater: null
        - regexp: regexp
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_7
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceNetIdTypeScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[DeviceNetIdTypeScheme]"
    Page_DeviceScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - altitude: 9
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          conv_group_id: 5
          comments: comments_8
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          net_id: net_id
          latitude: 7.061401241503109
          groups: ""
          updater: null
          net_id_type_id: 1
          name: name
          templ_id: 5
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 3
          status: ""
          longitude: 2.3021358869347655
        - altitude: 9
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          conv_group_id: 5
          comments: comments_8
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          net_id: net_id
          latitude: 7.061401241503109
          groups: ""
          updater: null
          net_id_type_id: 1
          name: name
          templ_id: 5
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 3
          status: ""
          longitude: 2.3021358869347655
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[DeviceScheme]"
    Page_DictItemScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/DictItemScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[DictItemScheme]"
    Page_ExternalAccountBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_9
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          secure: true
          updater: null
          tags: ""
          hostname: hostname
          port: 1
          proto: proto
          name: name_3
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          username: username_1
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_9
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          secure: true
          updater: null
          tags: ""
          hostname: hostname
          port: 1
          proto: proto
          name: name_3
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          username: username_1
      properties:
        items:
          items:
            $ref: '#/components/schemas/ExternalAccountBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ExternalAccountBaseScheme]"
    Page_GroupScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_10
          company_id: 0
          color: color_1
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          num_expr: num_expr_2
          updated: 2000-01-23T04:56:07.000+00:00
          updater: null
          status: ""
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          comments: comments_10
          company_id: 0
          color: color_1
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          num_expr: num_expr_2
          updated: 2000-01-23T04:56:07.000+00:00
          updater: null
          status: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/GroupScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[GroupScheme]"
    Page_ModbusRegisterBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          address: 2
          company_id: 6
          created: 2000-01-23T04:56:07.000+00:00
          count: 7
          word_order: 3
          type: 5
          updater: null
          dev_id: 2
          byte_order: 9
          id: 1
          updated: 2000-01-23T04:56:07.000+00:00
          status: 0
          slave_id: 5
          param_id: 4
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          address: 2
          company_id: 6
          created: 2000-01-23T04:56:07.000+00:00
          count: 7
          word_order: 3
          type: 5
          updater: null
          dev_id: 2
          byte_order: 9
          id: 1
          updated: 2000-01-23T04:56:07.000+00:00
          status: 0
          slave_id: 5
          param_id: 4
      properties:
        items:
          items:
            $ref: '#/components/schemas/ModbusRegisterBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ModbusRegisterBaseScheme]"
    Page_ObjectBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          object_types:
          - name: name
            id: 0
          - name: name
            id: 0
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          groups:
          - name: name
            id: 0
          - name: name
            id: 0
          comment: comment_2
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 1
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          object_types:
          - name: name
            id: 0
          - name: name
            id: 0
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          groups:
          - name: name
            id: 0
          - name: name
            id: 0
          comment: comment_2
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          addr_id: 1
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/ObjectBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ObjectBaseScheme]"
    Page_ObjectDataScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - dipd_id: 0
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          purpose_data: "{}"
          types_data:
            key:
              obj_id: 6
              data: "{}"
              device_date: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
        - dipd_id: 0
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          purpose_data: "{}"
          types_data:
            key:
              obj_id: 6
              data: "{}"
              device_date: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/ObjectDataScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ObjectDataScheme]"
    Page_ObjectLastDataScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - obj_id: 6
          dipd_id: 0
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          purpose_data: "{}"
          types_data: "{}"
        - obj_id: 6
          dipd_id: 0
          device_date: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          purpose_data: "{}"
          types_data: "{}"
      properties:
        items:
          items:
            $ref: '#/components/schemas/ObjectLastDataScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ObjectLastDataScheme]"
    Page_ObjectTypeBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          conv_attach: true
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          conv_id: 1
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          conv_attach: true
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          slug: slug
          conv_id: 1
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/ObjectTypeBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ObjectTypeBaseScheme]"
    Page_ObjectWidgetScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - display_type: ""
          company_id: 0
          name: name
          id: 6
          plots:
          - obj_id: 5
            color: color
            obj_param_id: 5
            plot_type_id: 2
            id: 1
            param_name: param_name_1
          - obj_id: 5
            color: color
            obj_param_id: 5
            plot_type_id: 2
            id: 1
            param_name: param_name_1
        - display_type: ""
          company_id: 0
          name: name
          id: 6
          plots:
          - obj_id: 5
            color: color
            obj_param_id: 5
            plot_type_id: 2
            id: 1
            param_name: param_name_1
          - obj_id: 5
            color: color
            obj_param_id: 5
            plot_type_id: 2
            id: 1
            param_name: param_name_1
      properties:
        items:
          items:
            $ref: '#/components/schemas/ObjectWidgetScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[ObjectWidgetScheme]"
    Page_TaskTimeScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - end_date: 2000-01-23T04:56:07.000+00:00
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          processes: ""
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          tz: tz
          updater: null
          time_field:
            end_date: 2000-01-23T04:56:07.000+00:00
            ending_type: null
            week_choices: ""
            repetitions_count: 1
            interval_type: ""
            start_date: 2000-01-23T04:56:07.000+00:00
          ending_type: null
          name: name
          repetitions_count: 5
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          regular: true
          status: ""
          start_date: 2000-01-23T04:56:07.000+00:00
          crontab_advanced: true
        - end_date: 2000-01-23T04:56:07.000+00:00
          creator:
            role: null
            name: name_4
            id: 0
            email: email
          processes: ""
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          tz: tz
          updater: null
          time_field:
            end_date: 2000-01-23T04:56:07.000+00:00
            ending_type: null
            week_choices: ""
            repetitions_count: 1
            interval_type: ""
            start_date: 2000-01-23T04:56:07.000+00:00
          ending_type: null
          name: name
          repetitions_count: 5
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          regular: true
          status: ""
          start_date: 2000-01-23T04:56:07.000+00:00
          crontab_advanced: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/TaskTimeScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[TaskTimeScheme]"
    Page_TemplateScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          conv_group_id: 1
          comments: comments_11
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          conv_group_id: 1
          comments: comments_11
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
          updater: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/TemplateScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[TemplateScheme]"
    Page_UserBaseScheme_:
      example:
        pagination:
          has_hext: true
          next_num: 7
          per_page: 9
          total: 1
          pages: 5
          prev_num: 2
          has_prev: true
          page: 5
        items:
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          role: null
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          tz: tz_1
          last_login: 2000-01-23T04:56:07.000+00:00
          locale: locale
          updater: null
          phone: phone_2
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          email: email
          status: ""
        - creator:
            role: null
            name: name_4
            id: 0
            email: email
          role: null
          company_id: 0
          created: 2000-01-23T04:56:07.000+00:00
          tz: tz_1
          last_login: 2000-01-23T04:56:07.000+00:00
          locale: locale
          updater: null
          phone: phone_2
          name: name
          id: 6
          updated: 2000-01-23T04:56:07.000+00:00
          email: email
          status: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserBaseScheme'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: "Page[UserBaseScheme]"
    Pagination:
      example:
        has_hext: true
        next_num: 7
        per_page: 9
        total: 1
        pages: 5
        prev_num: 2
        has_prev: true
        page: 5
      properties:
        total:
          description: total items
          title: total
          type: integer
        pages:
          description: total pages
          title: pages
          type: integer
        has_prev:
          default: true
          description: indicates whether there is a previous page
          title: has_prev
          type: boolean
        has_hext:
          default: true
          description: indicates whether there is a next page
          title: has_hext
          type: boolean
        page:
          description: current page number
          title: has_hext
          type: integer
        prev_num:
          description: previous page number
          title: prev_num
          type: integer
        next_num:
          description: next page number
          title: next_num
          type: integer
        per_page:
          description: number of items per page
          title: per_page
          type: integer
      required:
      - has_hext
      - has_prev
      - next_num
      - page
      - pages
      - per_page
      - prev_num
      - total
      title: Pagination
    Period:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      title: Period
      type: integer
    ProcessActionBaseScheme:
      example:
        action_class: action_class
        name: name
        id: 0
        prio: 6
        action_params: "{}"
      properties:
        id:
          description: process action id
          title: id
          type: integer
        prio:
          description: prio
          title: prio
          type: integer
        name:
          $ref: '#/components/schemas/name'
        action_class:
          description: path to action class
          title: action_class
          type: string
        action_params:
          description: action params
          title: action_params
          type: object
      required:
      - action_class
      - action_params
      - id
      - name
      - prio
      title: ProcessActionBaseScheme
    ProcessBaseScheme:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: process id
          title: id
          type: integer
        prio:
          $ref: '#/components/schemas/prio'
        name:
          $ref: '#/components/schemas/name_1'
        process_class:
          description: path to process class
          title: process_class
          type: string
        process_params:
          description: process params
          title: process_params
          type: object
        actions:
          $ref: '#/components/schemas/Actions'
      required:
      - actions
      - created
      - creator
      - id
      - name
      - prio
      - process_class
      - process_params
      - status
      - updated
      - updater
      title: ProcessBaseScheme
    ProcessScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        process_params: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name_1
        id: 0
        prio: 6
        process_class: process_class
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: process id
          title: id
          type: integer
        prio:
          $ref: '#/components/schemas/prio'
        name:
          $ref: '#/components/schemas/name_1'
        process_class:
          description: path to process class
          title: process_class
          type: string
        process_params:
          description: process params
          title: process_params
          type: object
      required:
      - created
      - creator
      - id
      - name
      - prio
      - process_class
      - process_params
      - status
      - updated
      - updater
      title: ProcessScheme
    Proto:
      enum:
      - amqp
      - http
      - mqtt
      title: Proto
      type: string
    Protocol:
      enum:
      - 1
      - 2
      - 3
      - 4
      title: Protocol
      type: integer
    PurposeClass:
      enum:
      - battery
      - device_date
      - frag_number
      - frag_pkt_id
      - frag_total
      - location
      - profile_id
      - hit_event
      - motion_event
      - sos_event
      title: PurposeClass
      type: string
    RegisterTypes:
      enum:
      - 1
      - 2
      - 3
      - 4
      title: RegisterTypes
      type: integer
    ResetPasswordScheme:
      example:
        new_password: new_password
        confirm_password: confirm_password
      properties:
        new_password:
          description: user new password
          format: password
          maxLength: 32
          minLength: 5
          title: new password
          type: string
          writeOnly: true
        confirm_password:
          description: user new password
          format: password
          maxLength: 32
          minLength: 5
          title: new password
          type: string
          writeOnly: true
      required:
      - confirm_password
      - new_password
      title: ResetPasswordScheme
    SimpleTimeBaseScheme:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        ending_type: null
        week_choices: ""
        repetitions_count: 1
        interval_type: ""
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        start_date:
          description: start date (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: start_date
          type: string
        interval_type:
          allOf:
          - $ref: '#/components/schemas/IntervalTypes'
          description: Interval
          title: interval_type
        week_choices:
          $ref: '#/components/schemas/week_choices'
        end_date:
          $ref: '#/components/schemas/end_date_1'
        repetitions_count:
          $ref: '#/components/schemas/repetitions_count'
        ending_type:
          $ref: '#/components/schemas/ending_type'
      required:
      - end_date
      - ending_type
      - interval_type
      - repetitions_count
      - start_date
      - week_choices
      title: SimpleTimeBaseScheme
    Status:
      enum:
      - 1
      - 2
      title: Status
      type: integer
    StatusUser:
      enum:
      - 1
      - 2
      - 3
      title: StatusUser
      type: integer
    TaskTimeBaseScheme:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        tz: tz
        updater: null
        time_field:
          end_date: 2000-01-23T04:56:07.000+00:00
          ending_type: null
          week_choices: ""
          repetitions_count: 1
          interval_type: ""
          start_date: 2000-01-23T04:56:07.000+00:00
        ending_type: null
        name: name
        repetitions_count: 1
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        regular: true
        status: ""
        start_date: 2000-01-23T04:56:07.000+00:00
        crontab_advanced: true
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: task time id
          title: id
          type: integer
        name:
          description: task time name
          title: name
          type: string
        time_field:
          $ref: '#/components/schemas/time_field_1'
        start_date:
          description: task time start date (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: start_date
          type: string
        end_date:
          $ref: '#/components/schemas/end_date_2'
        tz:
          $ref: '#/components/schemas/tz'
        regular:
          description: Regular dispatch
          title: regular
          type: boolean
        crontab_advanced:
          description: Enable Advanced Crontab
          title: crontab_advanced
          type: boolean
        ending_type:
          $ref: '#/components/schemas/ending_type_1'
        repetitions_count:
          $ref: '#/components/schemas/repetitions_count_1'
      required:
      - company_id
      - created
      - creator
      - crontab_advanced
      - end_date
      - ending_type
      - id
      - name
      - regular
      - repetitions_count
      - start_date
      - status
      - time_field
      - tz
      - updated
      - updater
      title: TaskTimeBaseScheme
    TaskTimeScheme:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        processes: ""
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        tz: tz
        updater: null
        time_field:
          end_date: 2000-01-23T04:56:07.000+00:00
          ending_type: null
          week_choices: ""
          repetitions_count: 1
          interval_type: ""
          start_date: 2000-01-23T04:56:07.000+00:00
        ending_type: null
        name: name
        repetitions_count: 5
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        regular: true
        status: ""
        start_date: 2000-01-23T04:56:07.000+00:00
        crontab_advanced: true
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        company_id:
          $ref: '#/components/schemas/company_id'
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: task time id
          title: id
          type: integer
        name:
          description: task time name
          title: name
          type: string
        time_field:
          $ref: '#/components/schemas/time_field_1'
        start_date:
          description: task time start date (format YYYY-MM-DDThh:mm:ss)
          format: date-time
          title: start_date
          type: string
        end_date:
          $ref: '#/components/schemas/end_date_2'
        tz:
          $ref: '#/components/schemas/tz'
        regular:
          description: Regular dispatch
          title: regular
          type: boolean
        crontab_advanced:
          description: Enable Advanced Crontab
          title: crontab_advanced
          type: boolean
        ending_type:
          $ref: '#/components/schemas/ending_type_1'
        repetitions_count:
          $ref: '#/components/schemas/repetitions_count_1'
        processes:
          $ref: '#/components/schemas/processes'
      required:
      - company_id
      - created
      - creator
      - crontab_advanced
      - end_date
      - ending_type
      - id
      - name
      - processes
      - regular
      - repetitions_count
      - start_date
      - status
      - time_field
      - tz
      - updated
      - updater
      title: TaskTimeScheme
    TasksEndingTypes:
      enum:
      - 0
      - 1
      - 2
      title: TasksEndingTypes
      type: integer
    TemplateScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        conv_group_id: 1
        comments: comments_11
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        updater: null
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "status (1 - Inactive, 2 - Active)"
          title: status
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        company_id:
          $ref: '#/components/schemas/company_id'
        id:
          description: Template id
          title: id
          type: integer
        name:
          description: Template name
          title: name
          type: string
        conv_group_id:
          description: Converter group id
          title: conv_group_id
          type: integer
        comments:
          $ref: '#/components/schemas/comments_11'
      required:
      - comments
      - company_id
      - conv_group_id
      - created
      - creator
      - id
      - name
      - status
      - updated
      - updater
      title: TemplateScheme
    UpdateObjectWidget:
      example:
        display_type: ""
        company_id: 0
        name: name
        plots:
        - obj_id: 6
          color: '#2770bf'
          obj_param_id: 1
          plot_type_id: 5
          id: 5
          param_name: param_name
        - obj_id: 6
          color: '#2770bf'
          obj_param_id: 1
          plot_type_id: 5
          id: 5
          param_name: param_name
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          description: object widget name
          maxLength: 128
          title: name
          type: string
        display_type:
          allOf:
          - $ref: '#/components/schemas/WidgetDisplayType'
          description: object widget display type
          title: display_type
        plots:
          description: list of widget plot settings
          items:
            $ref: '#/components/schemas/UpdateObjectWidget_plots_inner'
          type: array
      required:
      - display_type
      - name
      - plots
      title: UpdateObjectWidget
    UpdateObjectWidgetPlotSettingsScheme:
      example:
        obj_id: 6
        color: '#2770bf'
        obj_param_id: 1
        plot_type_id: 5
        id: 5
        param_name: param_name
      properties:
        obj_id:
          description: object id
          title: obj_id
          type: integer
        obj_param_id:
          description: object id
          title: obj_param_id
          type: integer
        param_name:
          $ref: '#/components/schemas/param_name'
        plot_type_id:
          description: plot type
          title: plot_type_id
          type: integer
        color:
          default: '#2770bf'
          description: plot color
          pattern: "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          title: color
          type: string
        id:
          description: object widget plot settings id
          title: id
          type: integer
      required:
      - id
      - obj_id
      - obj_param_id
      - plot_type_id
      title: UpdateObjectWidgetPlotSettingsScheme
    UserAuditScheme-Input:
      properties:
        id:
          description: unique user id
          title: id
          type: integer
        name:
          $ref: '#/components/schemas/name_4'
        email:
          description: user email
          maxLength: 128
          title: email
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - email
      - id
      - role
      title: UserAuditScheme
    UserAuditScheme-Output:
      example:
        role: null
        name: name_4
        id: 0
        email: email
      properties:
        id:
          description: unique user id
          title: id
          type: integer
        name:
          $ref: '#/components/schemas/name_4'
        email:
          description: user email
          maxLength: 128
          title: email
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - email
      - id
      - name
      - role
      title: UserAuditScheme
    UserBaseScheme:
      example:
        creator:
          role: null
          name: name_4
          id: 0
          email: email
        role: null
        company_id: 0
        created: 2000-01-23T04:56:07.000+00:00
        tz: tz_1
        last_login: 2000-01-23T04:56:07.000+00:00
        locale: locale
        updater: null
        phone: phone_2
        name: name
        id: 6
        updated: 2000-01-23T04:56:07.000+00:00
        email: email
        status: ""
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/AddressNodeNormScheme_creator'
        id:
          description: unique user id
          title: id
          type: integer
        name:
          description: user name
          title: name
          type: string
        email:
          description: user email
          maxLength: 128
          title: email
          type: string
        phone:
          $ref: '#/components/schemas/phone_2'
        role:
          $ref: '#/components/schemas/UserRole'
        locale:
          $ref: '#/components/schemas/locale'
        tz:
          $ref: '#/components/schemas/tz_1'
        last_login:
          $ref: '#/components/schemas/last_login'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusUser'
          description: "user status (1 - Inactive, 2 - New, 3 - Active)"
          title: status
      required:
      - company_id
      - created
      - creator
      - email
      - id
      - last_login
      - locale
      - name
      - phone
      - role
      - status
      - tz
      - updated
      - updater
      title: UserBaseScheme
    UserRecoveryPasswordScheme:
      example:
        login: login
      properties:
        login:
          description: User login(email or phone)
          title: login
          type: string
      required:
      - login
      title: UserRecoveryPasswordScheme
    UserRegisterScheme:
      example:
        password: password
        email: email
      properties:
        email:
          description: user email
          maxLength: 128
          title: email
          type: string
        password:
          description: user password
          format: password
          title: password
          type: string
          writeOnly: true
      required:
      - email
      - password
      title: UserRegisterScheme
    UserRole:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      title: UserRole
      type: integer
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ViewClass:
      enum:
      - Battery charge
      - Checker
      - Percent scale
      title: ViewClass
      type: string
    WeekDays:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 0
      title: WeekDays
      type: integer
    WidgetDisplayType:
      enum:
      - 1
      - 2
      title: WidgetDisplayType
      type: integer
    app__apiv2__constans__ActionPrio__1:
      enum:
      - 0
      - 1
      - 2
      title: ActionPrio
      type: integer
    app__apiv2__constans__ActionPrio__2:
      $ref: '#/components/schemas/app__apiv2__constans__ActionPrio__1'
    app__apiv2__constans__Actions__1:
      enum:
      - DataChannels
      - SendToApiLNS
      - SendToAMQPBroker
      - SendToEmail
      - SendToHTTP
      - SendToMQTT
      - SendToSMS
      - SendToTelegram
      title: Actions
      type: string
    app__apiv2__constans__Actions__2:
      $ref: '#/components/schemas/app__apiv2__constans__Actions__1'
    app__apiv2__constans__DataFormatInOut__1:
      enum:
      - hex
      - str
      title: DataFormatInOut
      type: string
    app__apiv2__constans__DataFormatInOut__2:
      $ref: '#/components/schemas/app__apiv2__constans__DataFormatInOut__1'
    name:
      anyOf:
      - type: string
      - nullable: true
      description: process action name
      title: name
    action_params:
      description: action parameters
      discriminator:
        mapping:
          "1": '#/components/schemas/CreateSendToApiLNSScheme'
          "2": '#/components/schemas/CreateSendToAMQPBrokerScheme'
          "3": '#/components/schemas/CreateSendToEmailScheme'
          "4": '#/components/schemas/CreateSendToHTTPScheme'
          "5": '#/components/schemas/CreateSendToMQTTScheme'
          "6": '#/components/schemas/CreateSendToSMSScheme'
          "7": '#/components/schemas/CreateSendToTelegramScheme'
        propertyName: action_class
      oneOf:
      - $ref: '#/components/schemas/CreateSendToAMQPBrokerScheme'
      - $ref: '#/components/schemas/CreateSendToApiLNSScheme'
      - $ref: '#/components/schemas/CreateSendToEmailScheme'
      - $ref: '#/components/schemas/CreateSendToHTTPScheme'
      - $ref: '#/components/schemas/CreateSendToMQTTScheme'
      - $ref: '#/components/schemas/CreateSendToSMSScheme'
      - $ref: '#/components/schemas/CreateSendToTelegramScheme'
      title: action_params
    name_1:
      anyOf:
      - type: string
      - nullable: true
      description: process name
      title: name
    process_params:
      description: process parameters
      discriminator:
        mapping:
          "1": '#/components/schemas/CreateLNSPayloadProcessScheme'
          "2": '#/components/schemas/CreateRawDataProcessScheme'
          "3": '#/components/schemas/CreateNormProcessScheme'
        propertyName: process_class
      oneOf:
      - $ref: '#/components/schemas/CreateLNSPayloadProcessScheme'
      - $ref: '#/components/schemas/CreateRawDataProcessScheme'
      - $ref: '#/components/schemas/CreateNormProcessScheme'
      title: process_params
    created:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: object creation time
      title: created
    AddressNodeNormScheme_creator:
      anyOf:
      - $ref: '#/components/schemas/UserAuditScheme-Output'
      - nullable: true
    updated:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: user name
      title: updated
    company_id:
      anyOf:
      - type: integer
      - nullable: true
      description: "Unique identifier of the owner's company, returned only for Superadmin"
      title: company_id
    prefix:
      anyOf:
      - type: string
      - nullable: true
      description: Address prefix
      title: prefix
    prefix_1:
      anyOf:
      - type: string
      - nullable: true
      description: Address postfix
      title: prefix
    minutes:
      anyOf:
      - type: string
      - nullable: true
      default: '*'
      description: cron minutes
      title: minutes
    hours:
      anyOf:
      - type: string
      - nullable: true
      default: '*'
      description: cron hours
      title: hours
    day_of_month:
      anyOf:
      - type: string
      - nullable: true
      default: '*'
      description: cron day of month
      title: day_of_month
    month:
      anyOf:
      - type: string
      - nullable: true
      default: '*'
      description: cron month
      title: month
    day_of_week:
      anyOf:
      - type: string
      - nullable: true
      default: '*'
      description: cron day of week
      title: day_of_week
    end_date:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: end time
      title: end_date
    Methods:
      anyOf:
      - items:
          additionalProperties:
            type: object
      - nullable: true
      title: Methods
    detail:
      anyOf:
      - type: string
      - nullable: true
      title: detail
    full_name:
      anyOf:
      - type: string
      - nullable: true
      description: company full name
      title: full_name
    post_address:
      anyOf:
      - type: string
      - nullable: true
      description: company post address
      title: post_address
    phone:
      anyOf:
      - type: string
      - nullable: true
      description: company phone
      title: phone
    site:
      anyOf:
      - type: string
      - nullable: true
      description: company site
      title: site
    email:
      anyOf:
      - type: string
      - nullable: true
      description: company email
      title: email
    comments:
      anyOf:
      - type: string
      - nullable: true
      description: company comments
      title: comments
    wl_domain:
      anyOf:
      - type: string
      - nullable: true
      description: white label domain
      title: wl_domain
    unit:
      anyOf:
      - type: string
      - nullable: true
      description: utility resource unit
      title: unit
    icon:
      anyOf:
      - type: string
      - nullable: true
      description: utility resource icon
      title: icon
    color:
      anyOf:
      - type: string
      - nullable: true
      description: icon color
      title: color
    ConverterGroupBaseScheme_Input_creator:
      anyOf:
      - $ref: '#/components/schemas/UserAuditScheme-Input'
      - nullable: true
    prefix_2:
      anyOf:
      - maxLength: 32
        type: string
      - nullable: true
      description: Address prefix
      title: prefix
    prefix_3:
      anyOf:
      - maxLength: 32
        type: string
      - nullable: true
      description: Address postfix
      title: prefix
    parent_id:
      anyOf:
      - type: integer
      - nullable: true
      description: required field if new address node has parent
      title: parent_id
    full_name_1:
      anyOf:
      - maxLength: 1028
        type: string
      - nullable: true
      description: company full name
      title: full_name
    post_address_1:
      anyOf:
      - maxLength: 1028
        type: string
      - nullable: true
      description: company post address
      title: post_address
    phone_1:
      anyOf:
      - type: string
      - nullable: true
      description: company a phone number in international format
      title: phone
    site_1:
      anyOf:
      - maxLength: 128
        type: string
      - nullable: true
      description: company site
      title: site
    comments_1:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: company comments
      title: comments
    wl_domain_1:
      anyOf:
      - maxLength: 128
        type: string
      - nullable: true
      description: white label domain
      title: wl_domain
    unit_1:
      anyOf:
      - maxLength: 64
        type: string
      - nullable: true
      description: utility resource unit
      title: unit
    icon_1:
      anyOf:
      - maxLength: 64
        type: string
      - nullable: true
      description: utility resource icon
      title: icon
    company_id_1:
      anyOf:
      - type: integer
      - nullable: true
      description: unique identifier of the owner's company
      title: company_id
    uri_full_manual:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: uri full manual
      title: uri_full_manual
    account:
      anyOf:
      - type: integer
      - nullable: true
      description: External account id
      title: account
    uri_detailed_field_anyOf:
      discriminator:
        mapping:
          "2": '#/components/schemas/CreateAmqpDetailedUriScheme'
          "3": '#/components/schemas/CreateMqttDetailedUri'
          "4": '#/components/schemas/CreateKafkaDetailedUriScheme'
        propertyName: proto
      oneOf:
      - $ref: '#/components/schemas/CreateAmqpDetailedUriScheme'
      - $ref: '#/components/schemas/CreateMqttDetailedUri'
      - $ref: '#/components/schemas/CreateKafkaDetailedUriScheme'
    uri_detailed_field:
      anyOf:
      - $ref: '#/components/schemas/uri_detailed_field_anyOf'
      - nullable: true
      description: uri detailed field scheme
      title: uri_detailed_field
    comments_2:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: Device net id type comment
      title: comments
    templ_id:
      anyOf:
      - type: integer
      - nullable: true
      description: Template id
      title: templ_id
    conv_group_id:
      anyOf:
      - type: integer
      - nullable: true
      description: Converter group id
      title: conv_group_id
    groups:
      anyOf:
      - items:
          type: integer
      - nullable: true
      description: List of device group ids
      title: groups
    longitude:
      anyOf:
      - type: number
      - nullable: true
      description: Device longitude
      title: longitude
    latitude:
      anyOf:
      - type: number
      - nullable: true
      description: Device latitude
      title: latitude
    altitude:
      anyOf:
      - type: integer
      - nullable: true
      description: Device altitude
      title: altitude
    addr_id:
      anyOf:
      - type: integer
      - nullable: true
      description: Address id
      title: addr_id
    comments_3:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: Device comments
      title: comments
    name_2:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: external account name
      title: name
    port:
      anyOf:
      - maximum: 65535.0
        minimum: 0.0
        type: integer
      - nullable: true
      description: port
      title: port
    username:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: external account username
      title: username
    password:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: password account username
      title: password
    comments_4:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: external account comments
      title: comments
    tags:
      anyOf:
      - items:
          $ref: '#/components/schemas/CreateExternalAccountTagScheme'
      - nullable: true
      description: list of external account tags
      title: tags
    comments_5:
      anyOf:
      - type: string
      - nullable: true
      description: group comment
      title: comments
    color_1:
      anyOf:
      - type: string
      - nullable: true
      description: group color
      title: color
    num_expr:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: group numerical expression. required field if you want to create
        virtual group
      title: num_expr
    tagged_groups:
      anyOf:
      - items:
          $ref: '#/components/schemas/CreateGroupTag'
      - nullable: true
      description: list of tagged groups
      title: tagged_groups
    client_id:
      anyOf:
      - type: string
      - nullable: true
      description: Client ID prefix
      title: client_id
    up_id:
      anyOf:
      - type: integer
      - nullable: true
      description: Uplink frame unique ID for reply
      title: up_id
    data:
      anyOf:
      - pattern: "^([0-9a-fA-F]{2})+$"
        type: string
      - nullable: true
      description: Hex data for send
      title: data
    mac:
      anyOf:
      - pattern: "^([0-9a-fA-F]{2})+$"
        type: string
      - nullable: true
      description: Hex MAC commands for send
      title: mac
    front:
      anyOf:
      - type: integer
      - nullable: true
      description: The FPort value that will be used when sending a frame
      title: front
    unit_2:
      anyOf:
      - maxLength: 32
        type: string
      - nullable: true
      description: metric unit
      title: unit
    consumption_group_id:
      anyOf:
      - type: integer
      - nullable: true
      description: Utility resource
      title: consumption_group_id
    group_ids:
      anyOf:
      - items:
          type: integer
      - nullable: true
      default: []
      description: object metric group ids
      title: group_ids
    purpose_class:
      anyOf:
      - $ref: '#/components/schemas/PurposeClass'
      - nullable: true
      description: Purpose
      title: purpose_class
    view_class:
      anyOf:
      - $ref: '#/components/schemas/ViewClass'
      - nullable: true
      description: metric view class
      title: view_class
    comment:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: metric comment
      title: comment
    num_expr_1:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: math expression. required field if metric type is 3 - Expression
      title: num_expr
    topic:
      anyOf:
      - type: string
      - nullable: true
      description: Topic
      title: topic
    qos:
      anyOf:
      - maximum: 2.0
        minimum: 0.0
        type: integer
      - nullable: true
      description: Quality of Service
      title: qos
    addr:
      anyOf:
      - type: integer
      - nullable: true
      description: address node id
      title: addr
    group:
      anyOf:
      - type: integer
      - nullable: true
      description: object metric group id
      title: group
    addr_id_1:
      anyOf:
      - type: integer
      - nullable: true
      description: address id
      title: addr_id
    groups_1:
      anyOf:
      - items:
          type: integer
      - nullable: true
      description: list of object group ids
      title: groups
    object_types:
      anyOf:
      - items:
          type: integer
      - nullable: true
      description: list of object type ids
      title: object_types
    comment_1:
      anyOf:
      - maxLength: 256
        type: string
      - nullable: true
      description: object comment
      title: comment
    param_name:
      anyOf:
      - maxLength: 50
        type: string
      - nullable: true
      description: parameter name of metric
      title: param_name
    data_hex:
      anyOf:
      - pattern: "^([0-9a-fA-F]{2})+$"
        type: string
      - nullable: true
      description: Hex data for send
      title: data_hex
    fport:
      anyOf:
      - type: integer
      - nullable: true
      description: The FPort value that will be used when sending a frame
      title: fport
    from_email:
      anyOf:
      - type: string
      - nullable: true
      description: From email
      title: from_email
    title:
      anyOf:
      - type: string
      - nullable: true
      description: Title for message (including in SMS)
      title: title
    title_1:
      anyOf:
      - type: string
      - nullable: true
      description: Title for message
      title: title
    week_choices:
      anyOf:
      - items:
          $ref: '#/components/schemas/WeekDays'
      - nullable: true
      description: day of week
      title: week_choices
    end_date_1:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: end time (format YYYY-MM-DDThh:mm:ss). required field if ending
        type is "Date"
      title: end_date
    repetitions_count:
      anyOf:
      - type: integer
      - nullable: true
      description: Repetitions count
      title: repetitions_count
    ending_type:
      anyOf:
      - $ref: '#/components/schemas/TasksEndingTypes'
      - nullable: true
      description: "ending type \n * 0 - Never \n \n * 1 - Date \n \n * 2 - In \n "
      title: ending_type
    time_field:
      anyOf:
      - $ref: '#/components/schemas/CreateAdvancedTimeScheme'
      - $ref: '#/components/schemas/CreateSimpleTimeScheme'
      description: task time parameters
      title: time_field
    comments_6:
      anyOf:
      - maxLength: 1024
        type: string
      - nullable: true
      description: Template comments
      title: comments
    DashboardCardScheme_obj:
      anyOf:
      - $ref: '#/components/schemas/ObjScheme'
      - nullable: true
    company_id_2:
      anyOf:
      - type: integer
      - nullable: true
      description: unique company id. required only for company dashboard
      title: company_id
    user_id:
      anyOf:
      - type: integer
      - nullable: true
      description: unique user id. required only for user dashboard
      title: user_id
    Cards:
      anyOf:
      - items:
          $ref: '#/components/schemas/DashboardCardScheme'
      - nullable: true
      title: Cards
    Widgets:
      anyOf:
      - items:
          $ref: '#/components/schemas/DashboardWidgetScheme'
      - nullable: true
      title: Widgets
    DashboardWidgetScheme_widget:
      anyOf:
      - $ref: '#/components/schemas/ObjectWidgetScheme'
      - nullable: true
    comments_7:
      anyOf:
      - type: string
      - nullable: true
      description: Device net id type comment
      title: comments
    groups_2:
      anyOf:
      - items:
          $ref: '#/components/schemas/DictItemScheme'
      - nullable: true
      description: List of device groups
      title: groups
    comments_8:
      anyOf:
      - type: string
      - nullable: true
      description: Device comments
      title: comments
    name_3:
      anyOf:
      - type: string
      - nullable: true
      description: external account name
      title: name
    port_1:
      anyOf:
      - type: integer
      - nullable: true
      description: port
      title: port
    username_1:
      anyOf:
      - type: string
      - nullable: true
      description: external account username
      title: username
    comments_9:
      anyOf:
      - type: string
      - nullable: true
      description: external account comments
      title: comments
    tags_1:
      anyOf:
      - items:
          $ref: '#/components/schemas/ExternalAccountTagsBaseScheme'
      - nullable: true
      description: list of external account tags
      title: tags
    comments_10:
      anyOf:
      - type: string
      - nullable: true
      description: Group comment
      title: comments
    num_expr_2:
      anyOf:
      - type: string
      - nullable: true
      description: group num_expr
      title: num_expr
    Tagged_Groups:
      anyOf:
      - items:
          $ref: '#/components/schemas/GroupTagScheme'
      - nullable: true
      title: Tagged Groups
    Items:
      anyOf:
      - items:
          $ref: '#/components/schemas/DictItemScheme'
      - nullable: true
      title: Items
    comment_2:
      anyOf:
      - type: string
      - nullable: true
      description: object comment
      title: comment
    object_types_1:
      anyOf:
      - items:
          $ref: '#/components/schemas/ObjectTypeScheme'
      - nullable: true
      description: object type ids
      title: object_types
    self_metrics:
      anyOf:
      - items:
          $ref: '#/components/schemas/ObjectMetricScheme'
      - nullable: true
      description: list self metrics
      title: self_metrics
    comment_3:
      anyOf:
      - type: string
      - nullable: true
      description: metric comment
      title: comment
    unit_3:
      anyOf:
      - type: string
      - nullable: true
      description: metric unit
      title: unit
    expression:
      anyOf:
      - type: string
      - nullable: true
      description: math expression
      title: expression
    metric_values:
      anyOf:
      - items:
          $ref: '#/components/schemas/ObjectMetricValueScheme'
      - nullable: true
      description: list metric values
      title: metric values
    id:
      anyOf:
      - type: integer
      - nullable: true
      description: unique device id
      title: id
    id_1:
      anyOf:
      - type: integer
      - nullable: true
      description: unique js result param id
      title: id
    constant_value:
      anyOf:
      - type: number
      - nullable: true
      description: constant value
      title: constant value
    date_from:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: date to
      title: date_from
    date_to:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: date to
      title: date_to
    conv_id:
      anyOf:
      - type: integer
      - nullable: true
      description: unique converter id
      title: conv_id
    metrics:
      anyOf:
      - items:
          $ref: '#/components/schemas/ObjectMetricScheme'
      - nullable: true
      description: list object type metrics
      title: metrics
    param_name_1:
      anyOf:
      - type: string
      - nullable: true
      description: parameter name of metric
      title: param_name
    prio:
      anyOf:
      - type: integer
      - nullable: true
      description: prio
      title: prio
    Actions:
      anyOf:
      - items:
          $ref: '#/components/schemas/ProcessActionBaseScheme'
      - nullable: true
      title: Actions
    time_field_1:
      anyOf:
      - $ref: '#/components/schemas/SimpleTimeBaseScheme'
      - $ref: '#/components/schemas/AdvancedTimeBaseScheme'
      description: task time parameters
      title: time_field
    end_date_2:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: task time end date (format YYYY-MM-DDThh:mm:ss)
      title: end_date
    tz:
      anyOf:
      - type: string
      - nullable: true
      description: time zone
      title: tz
    ending_type_1:
      anyOf:
      - $ref: '#/components/schemas/TasksEndingTypes'
      - nullable: true
      description: "endpoint type \n * 0 - Never \n \n * 1 - Date \n \n * 2 - In \n\
        \ "
      title: ending_type
    repetitions_count_1:
      anyOf:
      - type: integer
      - nullable: true
      description: repetitions count
      title: repetitions_count
    processes:
      anyOf:
      - items:
          $ref: '#/components/schemas/ProcessBaseScheme'
      - nullable: true
      description: list of task time processes
      title: processes
    comments_11:
      anyOf:
      - type: string
      - nullable: true
      description: Template comments
      title: comments
    UpdateObjectWidget_plots_inner:
      anyOf:
      - $ref: '#/components/schemas/UpdateObjectWidgetPlotSettingsScheme'
      - $ref: '#/components/schemas/CreateObjectWidgetPlotSettingsScheme'
    name_4:
      anyOf:
      - type: string
      - nullable: true
      description: user name
      title: name
    phone_2:
      anyOf:
      - type: string
      - nullable: true
      description: user phone
      title: phone
    locale:
      anyOf:
      - type: string
      - nullable: true
      description: user language in the system
      title: locale
    tz_1:
      anyOf:
      - type: string
      - nullable: true
      description: time zone of the user in the system
      title: tz
    last_login:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: the last authorization of the user in the system
      title: last_login
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    AWSAuthenticator:
      description: Authorization by session
      scheme: basic
      type: http

