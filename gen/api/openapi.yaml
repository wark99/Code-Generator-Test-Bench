openapi: 3.1.0
info:
  contact:
    name: AIRBIT
    url: https://air-bit.ru/
  description: This API is intended to work with the application **AIRBIT IoT Workspace**
    .
  title: AIRBIT Device Auto-registration REST API
  version: 1.0.0
servers:
- description: Mock Server
  url: http://geo-api.air-bit.ru:8080/
paths:
  /auto-registration/devices/:
    post:
      description: Used to add a device to the IoT platform for further use. Should
        only be used after at least one log operation has been successfully completed.
      operationId: add_device_auto_registration_devices__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceNameScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Adds device to the IoT platform
      tags:
      - Device auto-registration
      x-content-type: application/json
      x-accepts: application/json
  /auto-registration/devices/log/:
    post:
      description: Used to periodically log device information. Sent automatically
        when the configuration software is connected to the device
      operationId: device_log_auto_registration_devices_log__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInfoScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Log device information
      tags:
      - Device auto-registration
      x-content-type: application/json
      x-accepts: application/json
  /auto-registration/configs/:
    get:
      description: Get a list of device configurations saved on the IoT platform
      operationId: get_configs_auto_registration_configs__get
      parameters:
      - description: device model identifier
        example: 98
        explode: true
        in: query
        name: model_id
        required: true
        schema:
          description: device model identifier
          title: Model Id
          type: integer
        style: form
      - description: device firmware version
        example: "1.6"
        explode: true
        in: query
        name: firmware
        required: true
        schema:
          description: device firmware version
          title: Firmware
          type: string
        style: form
      - description: the part of the device configuration name (search by name)
        example: config
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: the part of the device configuration name (search by name)
          title: Name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigScheme'
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Get a list of device configurations
      tags:
      - Device auto-registration
      x-accepts: application/json
    post:
      description: Used to back up user configurations on the IoT platform for future
        use
      operationId: add_config_auto_registration_configs__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateScheme'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Saving device configuration on the IoT platform
      tags:
      - Device auto-registration
      x-content-type: application/json
      x-accepts: application/json
  /auto-registration/configs/{id}/:
    get:
      description: Get a single device configuration saved on the IoT platform
      operationId: get_config_auto_registration_configs__id___get
      parameters:
      - description: unique config id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique config id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Config not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Get a single device configuration
      tags:
      - Device auto-registration
      x-accepts: application/json
    put:
      description: Used to back up user configurations on the IoT platform for future
        use
      operationId: update_config_auto_registration_configs__id___put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Config not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Update device configuration on the IoT platform
      tags:
      - Device auto-registration
      x-content-type: application/json
      x-accepts: application/json
  /auto-registration/firmwares/:
    get:
      description: Get a list of firmware available on the IoT platform
      operationId: get_firmwares_auto_registration_firmwares__get
      parameters:
      - description: device model identifier
        example: 98
        explode: true
        in: query
        name: model_id
        required: true
        schema:
          description: device model identifier
          title: Model Id
          type: integer
        style: form
      - description: the part of the firmware name (search by name)
        example: pulse-14.05.01
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: the part of the firmware name (search by name)
          title: Name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FirmwareScheme'
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Get a list of firmwares
      tags:
      - Device auto-registration
      x-accepts: application/json
  /auto-registration/firmwares/{id}/:
    get:
      description: Get a firmware data available on the IoT platform
      operationId: get_firmware_auto_registration_firmwares__id___get
      parameters:
      - description: unique firmware id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: unique firmware id
          title: Id
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareScheme'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Firmware not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Get a firmware data
      tags:
      - Device auto-registration
      x-accepts: application/json
  /auto-registration/data/push/:
    post:
      description: Used to send to the IoT platform measurements of accumulated by
        device for the period
      operationId: data_push_auto_registration_data_push__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDataScheme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
          description: No access
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBasic: []
      summary: Sending device measurement data to the IoT platform
      tags:
      - Device auto-registration
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    CommonError:
      example:
        detail: detail
      properties:
        detail:
          $ref: '#/components/schemas/detail'
      required:
      - detail
      title: CommonError
    ConfigCreateScheme:
      example:
        company_id: 0
        name: name
        model_id: 6
        firmware: firmware
        config: config
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        name:
          title: Name
          type: string
        model_id:
          description: the device model identifier
          title: Model Id
          type: integer
        firmware:
          description: the device firmware version
          title: Firmware
          type: string
        config:
          description: the device base64 encoded configuration
          format: base64
          title: Config
          type: string
      required:
      - config
      - firmware
      - model_id
      - name
      title: ConfigCreateScheme
    ConfigScheme:
      example:
        creator:
          role: null
          name: Ivanov Ivan
          id: 654
          email: ivan.ivanov@air-bit.eu
        company_id: 0
        created: 2023-01-01T00:00:00Z
        name: name
        id: 6
        model_id: 1
        updated: 2023-01-02T00:00:00Z
        firmware: firmware
        config: Config
        updater: null
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/ConfigScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/ConfigScheme_creator'
        id:
          description: configuration ID
          title: Id
          type: integer
        name:
          title: Name
          type: string
        model_id:
          description: the device model identifier
          title: Model Id
          type: integer
        firmware:
          description: the device firmware version
          title: Firmware
          type: string
        config:
          $ref: '#/components/schemas/Config'
      required:
      - company_id
      - config
      - created
      - creator
      - firmware
      - id
      - model_id
      - name
      - updated
      - updater
      title: ConfigScheme
    DeviceDataScheme:
      example:
        data: data
        serial: serial
        model_id: 0
      properties:
        model_id:
          description: the device model identifier
          title: Model Id
          type: integer
        serial:
          description: the device serial number
          title: Serial
          type: string
        data:
          description: device measurements data
          format: base64
          title: Data
          type: string
      required:
      - data
      - model_id
      - serial
      title: DeviceDataScheme
    DeviceInfoScheme:
      example:
        settings: Settings
        personalization: Personalization
        date_time: 2000-01-23T04:56:07.000+00:00
        serial: serial
        location:
          altitude: 1
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        model_id: 5
        state: State
        slave_profile: Slave_Profile
        firmware: firmware
      properties:
        date_time:
          $ref: '#/components/schemas/Date_Time'
        location:
          $ref: '#/components/schemas/LocationScheme'
        model_id:
          description: the device model identifier
          title: Model Id
          type: integer
        serial:
          description: the device serial number
          title: Serial
          type: string
        firmware:
          description: the device firmware version
          title: Firmware
          type: string
        slave_profile:
          $ref: '#/components/schemas/Slave_Profile'
        settings:
          $ref: '#/components/schemas/Settings'
        state:
          $ref: '#/components/schemas/State'
        personalization:
          $ref: '#/components/schemas/Personalization'
      required:
      - date_time
      - firmware
      - location
      - model_id
      - personalization
      - serial
      - settings
      - slave_profile
      - state
      title: DeviceInfoScheme
    DeviceNameScheme:
      example:
        date_time: 2000-01-23T04:56:07.000+00:00
        serial: serial
        name: name
        force: true
      properties:
        date_time:
          $ref: '#/components/schemas/Date_Time'
        serial:
          description: the device serial number
          title: Serial
          type: string
        name:
          description: the device firmware version
          title: Name
          type: string
        force:
          $ref: '#/components/schemas/Force'
      required:
      - date_time
      - force
      - name
      - serial
      title: DeviceNameScheme
    FirmwareScheme:
      example:
        image: image
        creator:
          role: null
          name: Ivanov Ivan
          id: 654
          email: ivan.ivanov@air-bit.eu
        company_id: 0
        created: 2023-01-01T00:00:00Z
        name: name
        id: 6
        model_id: 1
        updated: 2023-01-02T00:00:00Z
        firmware: firmware
        updater: null
        desc: desc
      properties:
        company_id:
          $ref: '#/components/schemas/company_id'
        created:
          $ref: '#/components/schemas/created'
        creator:
          $ref: '#/components/schemas/ConfigScheme_creator'
        updated:
          $ref: '#/components/schemas/updated'
        updater:
          $ref: '#/components/schemas/ConfigScheme_creator'
        id:
          description: firmware ID
          title: Id
          type: integer
        name:
          title: Name
          type: string
        desc:
          title: Desc
          type: string
        model_id:
          description: the device model identifier
          title: Model Id
          type: integer
        firmware:
          description: the device firmware version
          title: Firmware
          type: string
        image:
          description: the firmware base64 encoded image
          format: base64
          title: Image
          type: string
      required:
      - company_id
      - created
      - creator
      - desc
      - firmware
      - id
      - image
      - model_id
      - name
      - updated
      - updater
      title: FirmwareScheme
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    LocationScheme:
      example:
        altitude: 1
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
        longitude:
          $ref: '#/components/schemas/Longitude'
        altitude:
          $ref: '#/components/schemas/Altitude'
      required:
      - altitude
      - latitude
      - longitude
      title: LocationScheme
    UserAuditScheme:
      example:
        role: null
        name: Ivanov Ivan
        id: 654
        email: ivan.ivanov@air-bit.eu
      properties:
        email:
          description: user email
          example: ivan.ivanov@air-bit.eu
          maxLength: 128
          title: email
          type: string
        id:
          description: unique user id
          example: 654
          title: id
          type: integer
        name:
          $ref: '#/components/schemas/name'
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - email
      - id
      - name
      - role
      title: UserAuditScheme
    UserRole:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      title: UserRole
      type: integer
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    detail:
      anyOf:
      - type: string
      - nullable: true
      title: detail
    company_id:
      anyOf:
      - type: integer
      - nullable: true
      description: "unique identifier of the owner's company, returned only for Superadmin"
      title: company_id
    created:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: object creation time
      example: 2023-01-01T00:00:00Z
      title: created
    ConfigScheme_creator:
      anyOf:
      - $ref: '#/components/schemas/UserAuditScheme'
      - nullable: true
    updated:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: user name
      example: 2023-01-02T00:00:00Z
      title: updated
    Config:
      anyOf:
      - format: base64
        type: string
      - nullable: true
      description: the device base64 encoded configuration
      title: Config
    Date_Time:
      anyOf:
      - format: date-time
        type: string
      - nullable: true
      description: the device date and time
      title: Date Time
    Slave_Profile:
      anyOf:
      - format: base64
        type: string
      - nullable: true
      title: Slave Profile
    Settings:
      anyOf:
      - format: base64
        type: string
      - nullable: true
      description: current device settings (base64 encoded)
      title: Settings
    State:
      anyOf:
      - format: base64
        type: string
      - nullable: true
      description: current device state (base64 encoded)
      title: State
    Personalization:
      anyOf:
      - format: base64
        type: string
      - nullable: true
      description: the device base64 encoded personalization data
      title: Personalization
    Force:
      anyOf:
      - type: boolean
      - nullable: true
      description: "Adds a device to the IoT platform, forcefully replacing existing\
        \ device information"
      title: Force
    Latitude:
      anyOf:
      - type: number
      - nullable: true
      title: Latitude
    Longitude:
      anyOf:
      - type: number
      - nullable: true
      title: Longitude
    Altitude:
      anyOf:
      - type: integer
      - nullable: true
      title: Altitude
    name:
      anyOf:
      - type: string
      - nullable: true
      description: user name
      example: Ivanov Ivan
      title: name
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBasic:
      description: "If there is a cookie session, it is not necessary to specify the\
        \ authorization header."
      scheme: basic
      type: http
    APIKeyHeader:
      in: header
      name: X-API-Key
      type: apiKey

